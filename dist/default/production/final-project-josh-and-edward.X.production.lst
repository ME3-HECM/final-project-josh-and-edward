

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 13 22:39:13 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    99                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   100   000000                     
   101                           ; Generated 06/04/2022 GMT
   102                           ; 
   103                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   104                           ; All rights reserved.
   105                           ; 
   106                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   107                           ; 
   108                           ; Redistribution and use in source and binary forms, with or without modification, are
   109                           ; permitted provided that the following conditions are met:
   110                           ; 
   111                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   112                           ;        conditions and the following disclaimer.
   113                           ; 
   114                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   115                           ;        of conditions and the following disclaimer in the documentation and/or other
   116                           ;        materials provided with the distribution. Publication is not required when
   117                           ;        this file is used in an embedded application.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC18F67K40 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135   000000                     
   136                           	psect	idataBANK0
   137   0060BA                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for _RunOneBlockTime
   141   0060BA  07D0               	dw	2000
   142                           
   143                           ;initializer for _Turn45Delay
   144   0060BC  00DC               	dw	220
   145                           
   146                           ;initializer for _power
   147   0060BE  001E               	dw	30
   148   000000                     _TRISEbits	set	3973
   149   000000                     _LATHbits	set	3968
   150   000000                     _TX4REG	set	3812
   151   000000                     _RC4STAbits	set	3815
   152   000000                     _SP4BRGH	set	3814
   153   000000                     _SSP2CON2bits	set	3802
   154   000000                     _RX4PPS	set	3605
   155   000000                     _SSP2CLKPPS	set	3612
   156   000000                     _SSP2DATPPS	set	3613
   157   000000                     _ANSELDbits	set	3751
   158   000000                     _SSP2ADD	set	3798
   159   000000                     _SSP2CON1bits	set	3801
   160   000000                     _LATAbits	set	3961
   161   000000                     _LATFbits	set	3966
   162   000000                     _LATGbits	set	3967
   163   000000                     _TRISAbits	set	3969
   164   000000                     _TRISGbits	set	3975
   165   000000                     _PORTFbits	set	3982
   166   000000                     _TRISHbits	set	3976
   167   000000                     _TMR0L	set	4051
   168   000000                     _TMR0H	set	4052
   169   000000                     _INTCONbits	set	4082
   170   000000                     _CCPR2H	set	4006
   171   000000                     _CCPR1H	set	4010
   172   000000                     _TRISCbits	set	3971
   173   000000                     _TRISDbits	set	3972
   174   000000                     _TRISFbits	set	3974
   175   000000                     _LATDbits	set	3964
   176   000000                     _RC4REG	set	3811
   177   000000                     _SP4BRGL	set	3813
   178   000000                     _TX4STAbits	set	3816
   179   000000                     _BAUD4CONbits	set	3817
   180   000000                     _SSP2CON2	set	3802
   181   000000                     _SSP2STAT	set	3800
   182   000000                     _ANSELFbits	set	3764
   183   000000                     _SSP2BUF	set	3797
   184   000000                     _PIE0bits	set	3625
   185   000000                     _PIR4bits	set	3639
   186   000000                     _RC0PPS	set	3682
   187   000000                     _RD5PPS	set	3695
   188   000000                     _RE2PPS	set	3700
   189   000000                     _RD6PPS	set	3696
   190   000000                     _RC7PPS	set	3689
   191   000000                     _CCPR4H	set	3873
   192   000000                     _CCPR3H	set	3877
   193   000000                     _PIR0bits	set	3635
   194   000000                     _T0CON1bits	set	4054
   195   000000                     _T0CON0bits	set	4053
   196   000000                     _CCP1CONbits	set	4011
   197   000000                     _CCPTMRS0bits	set	4013
   198   000000                     _T2PR	set	4028
   199   000000                     _T2CONbits	set	4029
   200   000000                     _CCP2CONbits	set	4007
   201   000000                     _CCP3CONbits	set	3878
   202   000000                     _CCP4CONbits	set	3874
   203   000000                     _RE4PPS	set	3702
   204   000000                     _RG6PPS	set	3720
   205   000000                     _T2CLKCONbits	set	4031
   206   000000                     _T2HLTbits	set	4030
   207                           
   208                           	psect	smallconst
   209   000E00                     __psmallconst:
   210                           	callstack 0
   211   000E00  00                 	db	0
   212   000E01                     STR_1:
   213                           
   214                           ; BSR set to: 14
   215   000E01  72                 	db	114	;'r'
   216   000E02  65                 	db	101	;'e'
   217   000E03  64                 	db	100	;'d'
   218   000E04  3D                 	db	61	;'='
   219   000E05  25                 	db	37
   220   000E06  66                 	db	102	;'f'
   221   000E07  20                 	db	32
   222   000E08  67                 	db	103	;'g'
   223   000E09  72                 	db	114	;'r'
   224   000E0A  65                 	db	101	;'e'
   225   000E0B  65                 	db	101	;'e'
   226   000E0C  6E                 	db	110	;'n'
   227   000E0D  3D                 	db	61	;'='
   228   000E0E  25                 	db	37
   229   000E0F  66                 	db	102	;'f'
   230   000E10  20                 	db	32
   231   000E11  62                 	db	98	;'b'
   232   000E12  6C                 	db	108	;'l'
   233   000E13  75                 	db	117	;'u'
   234   000E14  65                 	db	101	;'e'
   235   000E15  3D                 	db	61	;'='
   236   000E16  25                 	db	37
   237   000E17  66                 	db	102	;'f'
   238   000E18  20                 	db	32
   239   000E19  6C                 	db	108	;'l'
   240   000E1A  75                 	db	117	;'u'
   241   000E1B  6D                 	db	109	;'m'
   242   000E1C  3D                 	db	61	;'='
   243   000E1D  25                 	db	37
   244   000E1E  64                 	db	100	;'d'
   245   000E1F  20                 	db	32
   246   000E20  61                 	db	97	;'a'
   247   000E21  63                 	db	99	;'c'
   248   000E22  74                 	db	116	;'t'
   249   000E23  75                 	db	117	;'u'
   250   000E24  61                 	db	97	;'a'
   251   000E25  6C                 	db	108	;'l'
   252   000E26  5F                 	db	95	;'_'
   253   000E27  63                 	db	99	;'c'
   254   000E28  6F                 	db	111	;'o'
   255   000E29  6C                 	db	108	;'l'
   256   000E2A  6F                 	db	111	;'o'
   257   000E2B  75                 	db	117	;'u'
   258   000E2C  72                 	db	114	;'r'
   259   000E2D  3D                 	db	61	;'='
   260   000E2E  25                 	db	37
   261   000E2F  64                 	db	100	;'d'
   262   000E30  20                 	db	32
   263   000E31  0D                 	db	13
   264   000E32  0A                 	db	10
   265   000E33  00                 	db	0
   266   000E34                     STR_2:
   267                           
   268                           ; BSR set to: 14
   269   000E34  69                 	db	105	;'i'
   270   000E35  6E                 	db	110	;'n'
   271   000E36  66                 	db	102	;'f'
   272   000E37  00                 	db	0
   273   000E38                     STR_5:
   274                           
   275                           ; BSR set to: 14
   276   000E38  6E                 	db	110	;'n'
   277   000E39  61                 	db	97	;'a'
   278   000E3A  6E                 	db	110	;'n'
   279   000E3B  00                 	db	0
   280   000E3C  00                 	db	0	; dummy byte at the end
   281   000000                     
   282                           ; #config settings
   283                           
   284                           	psect	cinit
   285   005BE4                     __pcinit:
   286                           	callstack 0
   287   005BE4                     start_initialization:
   288                           	callstack 0
   289   005BE4                     __initialization:
   290                           	callstack 0
   291                           
   292                           ; Initialize objects allocated to BANK0 (6 bytes)
   293                           ; load TBLPTR registers with __pidataBANK0
   294   005BE4  0EBA               	movlw	low __pidataBANK0
   295   005BE6  6EF6               	movwf	tblptrl,c
   296   005BE8  0E60               	movlw	high __pidataBANK0
   297   005BEA  6EF7               	movwf	tblptrh,c
   298   005BEC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   299   005BEE  6EF8               	movwf	tblptru,c
   300   005BF0  EE00  F0F0         	lfsr	0,__pdataBANK0
   301   005BF4  EE10 F006          	lfsr	1,6
   302   005BF8                     copy_data0:
   303   005BF8  0009               	tblrd		*+
   304   005BFA  CFF5 FFEE          	movff	tablat,postinc0
   305   005BFE  50E5               	movf	postdec1,w,c
   306   005C00  50E1               	movf	fsr1l,w,c
   307   005C02  E1FA               	bnz	copy_data0
   308                           
   309                           ; Clear objects allocated to BANK2 (240 bytes)
   310   005C04  EE02  F000         	lfsr	0,__pbssBANK2
   311   005C08  0EF0               	movlw	240
   312   005C0A                     clear_0:
   313   005C0A  6AEE               	clrf	postinc0,c
   314   005C0C  06E8               	decf	wreg,f,c
   315   005C0E  E1FD               	bnz	clear_0
   316                           
   317                           ; Clear objects allocated to BANK1 (114 bytes)
   318   005C10  EE01  F000         	lfsr	0,__pbssBANK1
   319   005C14  0E72               	movlw	114
   320   005C16                     clear_1:
   321   005C16  6AEE               	clrf	postinc0,c
   322   005C18  06E8               	decf	wreg,f,c
   323   005C1A  E1FD               	bnz	clear_1
   324                           
   325                           ; Clear objects allocated to BANK0 (29 bytes)
   326   005C1C  EE00  F0D3         	lfsr	0,__pbssBANK0
   327   005C20  0E1D               	movlw	29
   328   005C22                     clear_2:
   329   005C22  6AEE               	clrf	postinc0,c
   330   005C24  06E8               	decf	wreg,f,c
   331   005C26  E1FD               	bnz	clear_2
   332   005C28                     end_of_initialization:
   333                           	callstack 0
   334   005C28                     __end_of__initialization:
   335                           	callstack 0
   336   005C28  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   337   005C2A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   338   005C2C  0100               	movlb	0
   339   005C2E  EF4C  F011         	goto	_main	;jump to C main() function
   340                           
   341                           	psect	bssBANK0
   342   0000D3                     __pbssBANK0:
   343                           	callstack 0
   344   0000D3                     	ds	12
   345   0000DF                     floorf@F526:
   346                           	callstack 0
   347   0000DF                     	ds	4
   348   0000E3                     ___fpclassifyf@F465:
   349                           	callstack 0
   350   0000E3                     	ds	4
   351   0000E7                     _width:
   352                           	callstack 0
   353   0000E7                     	ds	2
   354   0000E9                     _prec:
   355                           	callstack 0
   356   0000E9                     	ds	2
   357   0000EB                     _flags:
   358                           	callstack 0
   359   0000EB                     	ds	1
   360   0000EC                     _TxBufReadCnt:
   361                           	callstack 0
   362   0000EC                     	ds	1
   363   0000ED                     _TxBufWriteCnt:
   364                           	callstack 0
   365   0000ED                     	ds	1
   366   0000EE                     _RxBufReadCnt:
   367                           	callstack 0
   368   0000EE                     	ds	1
   369   0000EF                     _RxBufWriteCnt:
   370                           	callstack 0
   371   0000EF                     	ds	1
   372                           
   373                           	psect	dataBANK0
   374   0000F0                     __pdataBANK0:
   375                           	callstack 0
   376   0000F0                     _RunOneBlockTime:
   377                           	callstack 0
   378   0000F0                     	ds	2
   379   0000F2                     _Turn45Delay:
   380                           	callstack 0
   381   0000F2                     	ds	2
   382   0000F4                     _power:
   383                           	callstack 0
   384   0000F4                     	ds	2
   385                           
   386                           	psect	bssBANK1
   387   000100                     __pbssBANK1:
   388                           	callstack 0
   389   000100                     _EUSART4RXbuf:
   390                           	callstack 0
   391   000100                     	ds	20
   392   000114                     _move_count:
   393                           	callstack 0
   394   000114                     	ds	2
   395   000116                     _run_flag:
   396                           	callstack 0
   397   000116                     	ds	2
   398   000118                     _lost_flag:
   399                           	callstack 0
   400   000118                     	ds	2
   401   00011A                     _WayBack:
   402                           	callstack 0
   403   00011A                     	ds	50
   404   00014C                     _rel:
   405                           	callstack 0
   406   00014C                     	ds	12
   407   000158                     _motorR:
   408                           	callstack 0
   409   000158                     	ds	9
   410   000161                     _motorL:
   411                           	callstack 0
   412   000161                     	ds	9
   413   00016A                     _vals:
   414                           	callstack 0
   415   00016A                     	ds	8
   416                           
   417                           	psect	bssBANK2
   418   000200                     __pbssBANK2:
   419                           	callstack 0
   420   000200                     _EUSART4TXbuf:
   421                           	callstack 0
   422   000200                     	ds	60
   423   00023C                     _Time_forward:
   424                           	callstack 0
   425   00023C                     	ds	100
   426   0002A0                     _dbuf:
   427                           	callstack 0
   428   0002A0                     	ds	80
   429                           
   430                           	psect	cstackBANK1
   431   000172                     __pcstackBANK1:
   432                           	callstack 0
   433   000172                     main@buf:
   434                           	callstack 0
   435                           
   436                           ; 100 bytes @ 0x0
   437   000172                     	ds	100
   438   0001D6                     main@consecuitive:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x64
   442   0001D6                     	ds	2
   443   0001D8                     main@colour:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x66
   447   0001D8                     	ds	2
   448   0001DA                     main@lost_count:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x68
   452   0001DA                     	ds	2
   453   0001DC                     main@prev_colour:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x6A
   457   0001DC                     	ds	2
   458                           
   459                           	psect	cstackBANK0
   460   000060                     __pcstackBANK0:
   461                           	callstack 0
   462   000060                     efgtoa@fp:
   463                           	callstack 0
   464   000060                     colour_rel@L:
   465                           	callstack 0
   466   000060                     _Colour_decider$3205:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x0
   470   000060                     	ds	2
   471   000062                     efgtoa@f:
   472                           	callstack 0
   473                           
   474                           ; 4 bytes @ 0x2
   475   000062                     	ds	2
   476   000064                     Colour_decider@Cmax_i:
   477                           	callstack 0
   478   000064                     _colour_rel$3203:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x4
   482   000064                     	ds	2
   483   000066                     efgtoa@c:
   484                           	callstack 0
   485   000066                     Colour_decider@RGB_col:
   486                           	callstack 0
   487                           
   488                           ; 12 bytes @ 0x6
   489   000066                     	ds	1
   490   000067                     ??_efgtoa:
   491                           
   492                           ; 1 bytes @ 0x7
   493   000067                     	ds	1
   494   000068                     _colour_rel$3204:
   495                           	callstack 0
   496                           
   497                           ; 4 bytes @ 0x8
   498   000068                     	ds	1
   499   000069                     efgtoa@ne:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x9
   503   000069                     	ds	2
   504   00006B                     efgtoa@p:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0xB
   508   00006B                     	ds	1
   509   00006C                     colour_rel@R:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0xC
   513   00006C                     	ds	1
   514   00006D                     efgtoa@t:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0xD
   518   00006D                     	ds	2
   519   00006F                     _efgtoa$2852:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0xF
   523   00006F                     	ds	1
   524   000070                     colour_rel@G:
   525                           	callstack 0
   526                           
   527                           ; 4 bytes @ 0x10
   528   000070                     	ds	1
   529   000071                     efgtoa@pp:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x11
   533   000071                     	ds	1
   534   000072                     efgtoa@mode:
   535                           	callstack 0
   536   000072                     Colour_decider@Cmax:
   537                           	callstack 0
   538                           
   539                           ; 4 bytes @ 0x12
   540   000072                     	ds	1
   541   000073                     efgtoa@nmode:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x13
   545   000073                     	ds	1
   546   000074                     efgtoa@d:
   547                           	callstack 0
   548   000074                     colour_rel@B:
   549                           	callstack 0
   550                           
   551                           ; 4 bytes @ 0x14
   552   000074                     	ds	2
   553   000076                     efgtoa@m:
   554                           	callstack 0
   555   000076                     Colour_decider@Cmin:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x16
   559   000076                     	ds	2
   560   000078                     efgtoa@e:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x18
   564   000078                     	ds	2
   565   00007A                     Colour_decider@i:
   566                           	callstack 0
   567   00007A                     efgtoa@w:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x1A
   571   00007A                     	ds	2
   572   00007C                     Colour_decider@Hue:
   573                           	callstack 0
   574   00007C                     efgtoa@ou:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0x1C
   578   00007C                     	ds	4
   579   000080                     efgtoa@i:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x20
   583   000080                     	ds	2
   584   000082                     efgtoa@h:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x22
   588   000082                     	ds	4
   589   000086                     efgtoa@l:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x26
   593   000086                     	ds	4
   594   00008A                     efgtoa@sign:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x2A
   598   00008A                     	ds	1
   599   00008B                     efgtoa@n:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x2B
   603   00008B                     	ds	2
   604   00008D                     efgtoa@g:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x2D
   608   00008D                     	ds	4
   609   000091                     efgtoa@u:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x31
   613   000091                     	ds	4
   614   000095                     vfpfcnvrt@fp:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x35
   618   000095                     	ds	2
   619   000097                     vfpfcnvrt@fmt:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x37
   623   000097                     	ds	2
   624   000099                     vfpfcnvrt@ap:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x39
   628   000099                     	ds	2
   629   00009B                     ??_vfpfcnvrt:
   630                           
   631                           ; 1 bytes @ 0x3B
   632   00009B                     	ds	2
   633   00009D                     vfpfcnvrt@convarg:
   634                           	callstack 0
   635                           
   636                           ; 8 bytes @ 0x3D
   637   00009D                     	ds	8
   638   0000A5                     vfpfcnvrt@c:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x45
   642   0000A5                     	ds	1
   643   0000A6                     vfpfcnvrt@cp:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x46
   647   0000A6                     	ds	2
   648   0000A8                     ?_vfprintf:
   649                           	callstack 0
   650   0000A8                     vfprintf@fp:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x48
   654   0000A8                     	ds	2
   655   0000AA                     vfprintf@fmt:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x4A
   659   0000AA                     	ds	2
   660   0000AC                     vfprintf@ap:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x4C
   664   0000AC                     	ds	2
   665   0000AE                     vfprintf@cfmt:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x4E
   669   0000AE                     	ds	2
   670   0000B0                     ?_sprintf:
   671                           	callstack 0
   672   0000B0                     sprintf@s:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x50
   676   0000B0                     	ds	2
   677   0000B2                     sprintf@fmt:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x52
   681   0000B2                     	ds	18
   682   0000C4                     sprintf@ap:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x64
   686   0000C4                     	ds	2
   687   0000C6                     sprintf@f:
   688                           	callstack 0
   689                           
   690                           ; 11 bytes @ 0x66
   691   0000C6                     	ds	11
   692   0000D1                     ??_main:
   693                           
   694                           ; 1 bytes @ 0x71
   695   0000D1                     	ds	2
   696                           
   697                           	psect	cstackCOMRAM
   698   000001                     __pcstackCOMRAM:
   699                           	callstack 0
   700   000001                     ??_I2C_2_Master_Idle:
   701   000001                     ?___fpclassifyf:
   702                           	callstack 0
   703   000001                     ?___wmul:
   704                           	callstack 0
   705   000001                     ?___fladd:
   706                           	callstack 0
   707   000001                     ?_labs:
   708                           	callstack 0
   709   000001                     ?___flneg:
   710                           	callstack 0
   711   000001                     ?___fltol:
   712                           	callstack 0
   713   000001                     ?___xxtofl:
   714                           	callstack 0
   715   000001                     ?___aodiv:
   716                           	callstack 0
   717   000001                     ?___aomod:
   718                           	callstack 0
   719   000001                     sendCharSerial4@charToSend:
   720                           	callstack 0
   721   000001                     initDCmotorsPWM@PWMperiod:
   722                           	callstack 0
   723   000001                     TurnDelay@Turn45Delay:
   724                           	callstack 0
   725   000001                     getTMR0val@moving:
   726                           	callstack 0
   727   000001                     delayed_ms@time:
   728                           	callstack 0
   729   000001                     ___wmul@multiplier:
   730                           	callstack 0
   731   000001                     memcpy@d1:
   732                           	callstack 0
   733   000001                     fputc@c:
   734                           	callstack 0
   735   000001                     strcpy@dest:
   736                           	callstack 0
   737   000001                     ___flneg@f1:
   738                           	callstack 0
   739   000001                     ___fltol@f1:
   740                           	callstack 0
   741   000001                     ___fladd@b:
   742                           	callstack 0
   743   000001                     ___xxtofl@val:
   744                           	callstack 0
   745   000001                     ___fpclassifyf@x:
   746                           	callstack 0
   747   000001                     labs@a:
   748                           	callstack 0
   749   000001                     ___aodiv@dividend:
   750                           	callstack 0
   751   000001                     ___aomod@dividend:
   752                           	callstack 0
   753                           
   754                           ; 8 bytes @ 0x0
   755   000001                     	ds	1
   756   000002                     ??_I2C_2_Master_Read:
   757   000002                     I2C_2_Master_Write@data_byte:
   758                           	callstack 0
   759   000002                     sendStringSerial4@string:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x1
   763   000002                     	ds	1
   764   000003                     ??_delayed_ms:
   765   000003                     ??_TurnDelay:
   766   000003                     color_writetoaddr@value:
   767                           	callstack 0
   768   000003                     I2C_2_Master_Read@ack:
   769                           	callstack 0
   770   000003                     ___wmul@multiplicand:
   771                           	callstack 0
   772   000003                     memcpy@s1:
   773                           	callstack 0
   774   000003                     fputc@fp:
   775                           	callstack 0
   776   000003                     strcpy@src:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x2
   780   000003                     	ds	1
   781   000004                     color_writetoaddr@address:
   782                           	callstack 0
   783   000004                     I2C_2_Master_Read@tmp:
   784                           	callstack 0
   785   000004                     delayed_ms@i:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x3
   789   000004                     	ds	1
   790   000005                     ??_fputc:
   791   000005                     ??___fpclassifyf:
   792   000005                     ??_labs:
   793   000005                     ??_color_click_init:
   794   000005                     ??___fltol:
   795   000005                     ??___xxtofl:
   796   000005                     ?_color_read_lum:
   797                           	callstack 0
   798   000005                     ?_color_read_Red:
   799                           	callstack 0
   800   000005                     ?_color_read_Green:
   801                           	callstack 0
   802   000005                     ?_color_read_Blue:
   803                           	callstack 0
   804   000005                     ___wmul@product:
   805                           	callstack 0
   806   000005                     memcpy@n:
   807                           	callstack 0
   808   000005                     strcpy@s:
   809                           	callstack 0
   810   000005                     ___fladd@a:
   811                           	callstack 0
   812                           
   813                           ; 4 bytes @ 0x4
   814   000005                     	ds	2
   815   000007                     ??_color_read_lum:
   816   000007                     ??_color_read_Red:
   817   000007                     ??_color_read_Green:
   818   000007                     ??_color_read_Blue:
   819   000007                     ?___lwdiv:
   820                           	callstack 0
   821   000007                     ___lwdiv@dividend:
   822                           	callstack 0
   823   000007                     memcpy@d:
   824                           	callstack 0
   825   000007                     strcpy@d:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x6
   829   000007                     	ds	2
   830   000009                     ??___fladd:
   831   000009                     ___fltol@sign1:
   832                           	callstack 0
   833   000009                     ___xxtofl@sign:
   834                           	callstack 0
   835   000009                     ___lwdiv@divisor:
   836                           	callstack 0
   837   000009                     ___fpclassifyf@e:
   838                           	callstack 0
   839   000009                     memcpy@s:
   840                           	callstack 0
   841   000009                     ___aodiv@divisor:
   842                           	callstack 0
   843   000009                     ___aomod@divisor:
   844                           	callstack 0
   845                           
   846                           ; 8 bytes @ 0x8
   847   000009                     	ds	1
   848   00000A                     ___fltol@exp1:
   849                           	callstack 0
   850   00000A                     ___xxtofl@exp:
   851                           	callstack 0
   852   00000A                     color_read_lum@tmp:
   853                           	callstack 0
   854   00000A                     color_read_Red@tmp:
   855                           	callstack 0
   856   00000A                     color_read_Green@tmp:
   857                           	callstack 0
   858   00000A                     color_read_Blue@tmp:
   859                           	callstack 0
   860   00000A                     fputs@s:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x9
   864   00000A                     	ds	1
   865   00000B                     memcpy@tmp:
   866                           	callstack 0
   867   00000B                     ___lwdiv@quotient:
   868                           	callstack 0
   869   00000B                     ___xxtofl@arg:
   870                           	callstack 0
   871   00000B                     ___fpclassifyf@u:
   872                           	callstack 0
   873                           
   874                           ; 4 bytes @ 0xA
   875   00000B                     	ds	1
   876   00000C                     readColours@vals:
   877                           	callstack 0
   878   00000C                     fputs@fp:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0xB
   882   00000C                     	ds	1
   883   00000D                     ___lwdiv@counter:
   884                           	callstack 0
   885   00000D                     ___fladd@signs:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0xC
   889   00000D                     	ds	1
   890   00000E                     ___fladd@aexp:
   891                           	callstack 0
   892   00000E                     fputs@c:
   893                           	callstack 0
   894   00000E                     setMotorPWM@m:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0xD
   898   00000E                     	ds	1
   899   00000F                     ___fladd@bexp:
   900                           	callstack 0
   901   00000F                     fputs@i:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0xE
   905   00000F                     	ds	1
   906   000010                     ??_setMotorPWM:
   907   000010                     ___fladd@grs:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0xF
   911   000010                     	ds	1
   912   000011                     ?___flmul:
   913                           	callstack 0
   914   000011                     ___aodiv@counter:
   915                           	callstack 0
   916   000011                     ___aomod@counter:
   917                           	callstack 0
   918   000011                     pad@fp:
   919                           	callstack 0
   920   000011                     ___flmul@b:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0x10
   924   000011                     	ds	1
   925   000012                     setMotorPWM@posDuty:
   926                           	callstack 0
   927   000012                     ___aodiv@sign:
   928                           	callstack 0
   929   000012                     ___aomod@sign:
   930                           	callstack 0
   931                           
   932                           ; 1 bytes @ 0x11
   933   000012                     	ds	1
   934   000013                     ?_abs:
   935                           	callstack 0
   936   000013                     setMotorPWM@negDuty:
   937                           	callstack 0
   938   000013                     pad@buf:
   939                           	callstack 0
   940   000013                     abs@a:
   941                           	callstack 0
   942   000013                     ___aodiv@quotient:
   943                           	callstack 0
   944                           
   945                           ; 8 bytes @ 0x12
   946   000013                     	ds	1
   947   000014                     stop@mL:
   948                           	callstack 0
   949   000014                     turnLeft@mL:
   950                           	callstack 0
   951   000014                     turnRight@mL:
   952                           	callstack 0
   953   000014                     fullSpeedAhead@mL:
   954                           	callstack 0
   955   000014                     timed_forward@mL:
   956                           	callstack 0
   957   000014                     fullSpeedBack@mL:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x13
   961   000014                     	ds	1
   962   000015                     ??_abs:
   963   000015                     pad@p:
   964                           	callstack 0
   965   000015                     ___flmul@a:
   966                           	callstack 0
   967                           
   968                           ; 4 bytes @ 0x14
   969   000015                     	ds	1
   970   000016                     stop@mR:
   971                           	callstack 0
   972   000016                     turnLeft@mR:
   973                           	callstack 0
   974   000016                     turnRight@mR:
   975                           	callstack 0
   976   000016                     fullSpeedAhead@mR:
   977                           	callstack 0
   978   000016                     timed_forward@mR:
   979                           	callstack 0
   980   000016                     fullSpeedBack@mR:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x15
   984   000016                     	ds	1
   985   000017                     ??_pad:
   986                           
   987                           ; 1 bytes @ 0x16
   988   000017                     	ds	1
   989   000018                     ??_fullSpeedAhead:
   990   000018                     ??_stop:
   991   000018                     ??_turnLeft:
   992   000018                     ??_turnRight:
   993   000018                     ??_fullSpeedBack:
   994   000018                     timed_forward@time:
   995                           	callstack 0
   996   000018                     pad@i:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x17
  1000   000018                     	ds	1
  1001   000019                     ??___flmul:
  1002                           
  1003                           ; 1 bytes @ 0x18
  1004   000019                     	ds	1
  1005   00001A                     ??_timed_forward:
  1006   00001A                     turnRight45@mL:
  1007                           	callstack 0
  1008   00001A                     turnLeft45@mL:
  1009                           	callstack 0
  1010   00001A                     reverseDetect@mL:
  1011                           	callstack 0
  1012   00001A                     reverseOneBlock@mL:
  1013                           	callstack 0
  1014   00001A                     ForwardOneBlock@mL:
  1015                           	callstack 0
  1016   00001A                     Forwardhalfblock@mL:
  1017                           	callstack 0
  1018   00001A                     pad@w:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x19
  1022   00001A                     	ds	2
  1023   00001C                     turnRight45@mR:
  1024                           	callstack 0
  1025   00001C                     turnLeft45@mR:
  1026                           	callstack 0
  1027   00001C                     reverseDetect@mR:
  1028                           	callstack 0
  1029   00001C                     reverseOneBlock@mR:
  1030                           	callstack 0
  1031   00001C                     ForwardOneBlock@mR:
  1032                           	callstack 0
  1033   00001C                     Forwardhalfblock@mR:
  1034                           	callstack 0
  1035   00001C                     dtoa@fp:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x1B
  1039   00001C                     	ds	1
  1040   00001D                     ___flmul@sign:
  1041                           	callstack 0
  1042                           
  1043                           ; 1 bytes @ 0x1C
  1044   00001D                     	ds	1
  1045   00001E                     ??_Forwardhalfblock:
  1046   00001E                     ??_turnRight45:
  1047   00001E                     ??_turnLeft45:
  1048   00001E                     ??_reverseDetect:
  1049   00001E                     ??_reverseOneBlock:
  1050   00001E                     ??_ForwardOneBlock:
  1051   00001E                     ___flmul@grs:
  1052                           	callstack 0
  1053   00001E                     dtoa@d:
  1054                           	callstack 0
  1055                           
  1056                           ; 8 bytes @ 0x1D
  1057   00001E                     	ds	2
  1058   000020                     RedMove@mL:
  1059                           	callstack 0
  1060   000020                     GreenMove@mL:
  1061                           	callstack 0
  1062   000020                     BlueMove@mL:
  1063                           	callstack 0
  1064   000020                     YellowMove@mL:
  1065                           	callstack 0
  1066   000020                     PinkMove@mL:
  1067                           	callstack 0
  1068   000020                     OrangeMove@mL:
  1069                           	callstack 0
  1070   000020                     LightBlueMove@mL:
  1071                           	callstack 0
  1072   000020                     RetryMove@mL:
  1073                           	callstack 0
  1074   000020                     ReverseYellow@mL:
  1075                           	callstack 0
  1076   000020                     ReversePink@mL:
  1077                           	callstack 0
  1078   000020                     turnCalibration@mL:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x1F
  1082   000020                     	ds	2
  1083   000022                     ___flmul@aexp:
  1084                           	callstack 0
  1085   000022                     RedMove@mR:
  1086                           	callstack 0
  1087   000022                     GreenMove@mR:
  1088                           	callstack 0
  1089   000022                     BlueMove@mR:
  1090                           	callstack 0
  1091   000022                     YellowMove@mR:
  1092                           	callstack 0
  1093   000022                     PinkMove@mR:
  1094                           	callstack 0
  1095   000022                     OrangeMove@mR:
  1096                           	callstack 0
  1097   000022                     LightBlueMove@mR:
  1098                           	callstack 0
  1099   000022                     RetryMove@mR:
  1100                           	callstack 0
  1101   000022                     ReverseYellow@mR:
  1102                           	callstack 0
  1103   000022                     ReversePink@mR:
  1104                           	callstack 0
  1105   000022                     turnCalibration@mR:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x21
  1109   000022                     	ds	1
  1110   000023                     ___flmul@bexp:
  1111                           	callstack 0
  1112                           
  1113                           ; 1 bytes @ 0x22
  1114   000023                     	ds	1
  1115   000024                     ??_turnCalibration:
  1116   000024                     ??_RetryMove:
  1117   000024                     go_Home@WayBack:
  1118                           	callstack 0
  1119   000024                     ___flmul@prod:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x23
  1123   000024                     	ds	2
  1124   000026                     ??_dtoa:
  1125   000026                     go_Home@Time_forward:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x25
  1129   000026                     	ds	2
  1130   000028                     ??_go_Home:
  1131   000028                     ___flmul@temp:
  1132                           	callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x27
  1135   000028                     	ds	2
  1136   00002A                     ?___flsub:
  1137                           	callstack 0
  1138   00002A                     ___flge@ff1:
  1139                           	callstack 0
  1140   00002A                     ___flsub@b:
  1141                           	callstack 0
  1142                           
  1143                           ; 4 bytes @ 0x29
  1144   00002A                     	ds	1
  1145   00002B                     go_Home@i:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x2A
  1149   00002B                     	ds	3
  1150   00002E                     _dtoa$2821:
  1151                           	callstack 0
  1152   00002E                     ___flge@ff2:
  1153                           	callstack 0
  1154   00002E                     ___flsub@a:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x2D
  1158   00002E                     	ds	2
  1159   000030                     dtoa@p:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x2F
  1163   000030                     	ds	2
  1164   000032                     ??___flge:
  1165   000032                     ?___fldiv:
  1166                           	callstack 0
  1167   000032                     dtoa@w:
  1168                           	callstack 0
  1169   000032                     ___fleq@ff1:
  1170                           	callstack 0
  1171   000032                     ___fldiv@b:
  1172                           	callstack 0
  1173                           
  1174                           ; 4 bytes @ 0x31
  1175   000032                     	ds	2
  1176   000034                     dtoa@n:
  1177                           	callstack 0
  1178                           
  1179                           ; 8 bytes @ 0x33
  1180   000034                     	ds	2
  1181   000036                     ___fleq@ff2:
  1182                           	callstack 0
  1183   000036                     ___fldiv@a:
  1184                           	callstack 0
  1185                           
  1186                           ; 4 bytes @ 0x35
  1187   000036                     	ds	4
  1188   00003A                     ??___fldiv:
  1189   00003A                     ??___fleq:
  1190                           
  1191                           ; 1 bytes @ 0x39
  1192   00003A                     	ds	2
  1193   00003C                     dtoa@i:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x3B
  1197   00003C                     	ds	2
  1198   00003E                     dtoa@s:
  1199                           	callstack 0
  1200   00003E                     ___fldiv@rem:
  1201                           	callstack 0
  1202                           
  1203                           ; 4 bytes @ 0x3D
  1204   00003E                     	ds	4
  1205   000042                     ___fldiv@sign:
  1206                           	callstack 0
  1207                           
  1208                           ; 1 bytes @ 0x41
  1209   000042                     	ds	1
  1210   000043                     ___fldiv@new_exp:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x42
  1214   000043                     	ds	2
  1215   000045                     ___fldiv@grs:
  1216                           	callstack 0
  1217                           
  1218                           ; 4 bytes @ 0x44
  1219   000045                     	ds	4
  1220   000049                     ___fldiv@bexp:
  1221                           	callstack 0
  1222                           
  1223                           ; 1 bytes @ 0x48
  1224   000049                     	ds	1
  1225   00004A                     ___fldiv@aexp:
  1226                           	callstack 0
  1227                           
  1228                           ; 1 bytes @ 0x49
  1229   00004A                     	ds	1
  1230   00004B                     ?_Colour_decider:
  1231                           	callstack 0
  1232   00004B                     ?_floorf:
  1233                           	callstack 0
  1234   00004B                     colour_rel@vals:
  1235                           	callstack 0
  1236   00004B                     Colour_decider@vals:
  1237                           	callstack 0
  1238   00004B                     floorf@x:
  1239                           	callstack 0
  1240                           
  1241                           ; 4 bytes @ 0x4A
  1242   00004B                     	ds	2
  1243   00004D                     colour_rel@rel:
  1244                           	callstack 0
  1245   00004D                     Colour_decider@rel:
  1246                           	callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x4C
  1249   00004D                     	ds	2
  1250   00004F                     ??_floorf:
  1251   00004F                     ??_Colour_decider:
  1252                           
  1253                           ; 1 bytes @ 0x4E
  1254   00004F                     	ds	6
  1255   000055                     floorf@m:
  1256                           	callstack 0
  1257                           
  1258                           ; 4 bytes @ 0x54
  1259   000055                     	ds	4
  1260   000059                     floorf@e:
  1261                           	callstack 0
  1262                           
  1263                           ; 2 bytes @ 0x58
  1264   000059                     	ds	2
  1265   00005B                     floorf@u:
  1266                           	callstack 0
  1267                           
  1268                           ; 4 bytes @ 0x5A
  1269   00005B                     	ds	4
  1270   00005F                     
  1271                           ; 1 bytes @ 0x5E
  1272 ;;
  1273 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1274 ;;
  1275 ;; *************** function _main *****************
  1276 ;; Defined at:
  1277 ;;		line 30 in file "main.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  colour          2  102[BANK1 ] int 
  1282 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1283 ;;  prev_colour     2  106[BANK1 ] int 
  1284 ;;  lost_count      2  104[BANK1 ] int 
  1285 ;;  consecuitive    2  100[BANK1 ] int 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1296 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1297 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1298 ;;      Totals:         0       2     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1299 ;;Total ram usage:      110 bytes
  1300 ;; Hardware stack levels required when called: 9
  1301 ;; This function calls:
  1302 ;;		_BlueMove
  1303 ;;		_Colour_decider
  1304 ;;		_Forwardhalfblock
  1305 ;;		_GreenMove
  1306 ;;		_I2C_2_Master_Init
  1307 ;;		_Interrupts_init
  1308 ;;		_LightBlueMove
  1309 ;;		_OrangeMove
  1310 ;;		_PinkMove
  1311 ;;		_RedMove
  1312 ;;		_RetryMove
  1313 ;;		_Timer0_init
  1314 ;;		_YellowMove
  1315 ;;		_color_click_init
  1316 ;;		_colour_rel
  1317 ;;		_fullSpeedAhead
  1318 ;;		_getTMR0val
  1319 ;;		_go_Home
  1320 ;;		_initDCmotorsPWM
  1321 ;;		_initUSART4
  1322 ;;		_readColours
  1323 ;;		_sendStringSerial4
  1324 ;;		_sprintf
  1325 ;;		_stop
  1326 ;;		_turnCalibration
  1327 ;; This function is called by:
  1328 ;;		Startup code after reset
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text0
  1333   002298                     __ptext0:
  1334                           	callstack 0
  1335   002298                     _main:
  1336                           	callstack 22
  1337   002298                     
  1338                           ;main.c: 31:     initUSART4();
  1339   002298  EC27  F030         	call	_initUSART4	;wreg free
  1340   00229C                     
  1341                           ;main.c: 32:     Interrupts_init();
  1342   00229C  EC48  F030         	call	_Interrupts_init	;wreg free
  1343   0022A0                     
  1344                           ;main.c: 33:     color_click_init();
  1345   0022A0  ECAF  F02C         	call	_color_click_init	;wreg free
  1346   0022A4                     
  1347                           ;main.c: 34:     I2C_2_Master_Init();
  1348   0022A4  ECB8  F02F         	call	_I2C_2_Master_Init	;wreg free
  1349   0022A8                     
  1350                           ;main.c: 35:     initDCmotorsPWM(200);
  1351   0022A8  0E00               	movlw	0
  1352   0022AA  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1353   0022AC  0EC8               	movlw	200
  1354   0022AE  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1355   0022B0  EC91  F029         	call	_initDCmotorsPWM	;wreg free
  1356   0022B4                     
  1357                           ;main.c: 36:     Timer0_init();
  1358   0022B4  EC17  F030         	call	_Timer0_init	;wreg free
  1359   0022B8                     
  1360                           ;main.c: 37:     char buf[100];;main.c: 39:     TRISGbits.TRISG1 = 0;
  1361   0022B8  9287               	bcf	135,1,c	;volatile
  1362   0022BA                     
  1363                           ;main.c: 40:     TRISAbits.TRISA4 = 0;
  1364   0022BA  9881               	bcf	129,4,c	;volatile
  1365   0022BC                     
  1366                           ;main.c: 41:     TRISFbits.TRISF7 = 0;
  1367   0022BC  9E86               	bcf	134,7,c	;volatile
  1368   0022BE                     
  1369                           ;main.c: 42:     TRISFbits.TRISF2 = 1;
  1370   0022BE  8486               	bsf	134,2,c	;volatile
  1371   0022C0                     
  1372                           ;main.c: 43:     ANSELFbits.ANSELF2=0;
  1373   0022C0  010E               	movlb	14	; () banked
  1374   0022C2  95B4               	bcf	180,2,b	;volatile
  1375   0022C4                     
  1376                           ; BSR set to: 14
  1377                           ;main.c: 44:     TRISFbits.TRISF3 = 1;
  1378   0022C4  8686               	bsf	134,3,c	;volatile
  1379   0022C6                     
  1380                           ; BSR set to: 14
  1381                           ;main.c: 45:     ANSELFbits.ANSELF3=0;
  1382   0022C6  97B4               	bcf	180,3,b	;volatile
  1383   0022C8                     
  1384                           ; BSR set to: 14
  1385                           ;main.c: 46:     LATGbits.LATG1=1;
  1386   0022C8  827F               	bsf	127,1,c	;volatile
  1387   0022CA                     
  1388                           ; BSR set to: 14
  1389                           ;main.c: 47:     LATAbits.LATA4=1;
  1390   0022CA  8879               	bsf	121,4,c	;volatile
  1391   0022CC                     
  1392                           ; BSR set to: 14
  1393                           ;main.c: 48:     LATFbits.LATF7=1;
  1394   0022CC  8E7E               	bsf	126,7,c	;volatile
  1395   0022CE                     
  1396                           ; BSR set to: 14
  1397                           ;main.c: 51:     LATDbits.LATD7=0;
  1398   0022CE  9E7C               	bcf	124,7,c	;volatile
  1399   0022D0                     
  1400                           ; BSR set to: 14
  1401                           ;main.c: 52:     TRISDbits.TRISD7=0;
  1402   0022D0  9E84               	bcf	132,7,c	;volatile
  1403   0022D2                     
  1404                           ; BSR set to: 14
  1405                           ;main.c: 53:     LATHbits.LATH3=0;
  1406   0022D2  9680               	bcf	128,3,c	;volatile
  1407   0022D4                     
  1408                           ; BSR set to: 14
  1409                           ;main.c: 54:     TRISHbits.TRISH3=0;
  1410   0022D4  9688               	bcf	136,3,c	;volatile
  1411   0022D6                     
  1412                           ; BSR set to: 14
  1413                           ;main.c: 57:     LATHbits.LATH0=0;
  1414   0022D6  9080               	bcf	128,0,c	;volatile
  1415   0022D8                     
  1416                           ; BSR set to: 14
  1417                           ;main.c: 58:     TRISHbits.TRISH0=0;
  1418   0022D8  9088               	bcf	136,0,c	;volatile
  1419   0022DA                     
  1420                           ; BSR set to: 14
  1421                           ;main.c: 61:     LATFbits.LATF0=0;
  1422   0022DA  907E               	bcf	126,0,c	;volatile
  1423   0022DC                     
  1424                           ; BSR set to: 14
  1425                           ;main.c: 62:     TRISFbits.TRISF0=0;
  1426   0022DC  9086               	bcf	134,0,c	;volatile
  1427   0022DE                     
  1428                           ; BSR set to: 14
  1429                           ;main.c: 65:     LATDbits.LATD4=0;
  1430   0022DE  987C               	bcf	124,4,c	;volatile
  1431   0022E0                     
  1432                           ; BSR set to: 14
  1433                           ;main.c: 66:     TRISDbits.TRISD4=0;
  1434   0022E0  9884               	bcf	132,4,c	;volatile
  1435   0022E2                     
  1436                           ; BSR set to: 14
  1437                           ;main.c: 69:     LATDbits.LATD3=0;
  1438   0022E2  967C               	bcf	124,3,c	;volatile
  1439   0022E4                     
  1440                           ; BSR set to: 14
  1441                           ;main.c: 70:     TRISDbits.TRISD3=0;
  1442   0022E4  9684               	bcf	132,3,c	;volatile
  1443   0022E6                     
  1444                           ; BSR set to: 14
  1445                           ;main.c: 74:     motorL.power=0;
  1446   0022E6  0E00               	movlw	0
  1447   0022E8  0101               	movlb	1	; () banked
  1448   0022EA  6F61               	movwf	_motorL& (0+255),b
  1449   0022EC                     
  1450                           ; BSR set to: 1
  1451                           ;main.c: 75:     motorL.direction=1;
  1452   0022EC  0E01               	movlw	1
  1453   0022EE  6F62               	movwf	(_motorL+1)& (0+255),b
  1454   0022F0                     
  1455                           ; BSR set to: 1
  1456                           ;main.c: 76:     motorL.brakemode=1;
  1457   0022F0  0E01               	movlw	1
  1458   0022F2  6F63               	movwf	(_motorL+2)& (0+255),b
  1459   0022F4                     
  1460                           ; BSR set to: 1
  1461                           ;main.c: 77:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1462   0022F4  0EAA               	movlw	170
  1463   0022F6  6F66               	movwf	(_motorL+5)& (0+255),b
  1464   0022F8  0E0F               	movlw	15
  1465   0022FA  6F67               	movwf	(_motorL+6)& (0+255),b
  1466   0022FC                     
  1467                           ; BSR set to: 1
  1468                           ;main.c: 78:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1469   0022FC  0EA6               	movlw	166
  1470   0022FE  6F68               	movwf	(_motorL+7)& (0+255),b
  1471   002300  0E0F               	movlw	15
  1472   002302  6F69               	movwf	(_motorL+8)& (0+255),b
  1473   002304                     
  1474                           ; BSR set to: 1
  1475                           ;main.c: 79:     motorL.PWMperiod=200;
  1476   002304  0E00               	movlw	0
  1477   002306  6F65               	movwf	(_motorL+4)& (0+255),b
  1478   002308  0EC8               	movlw	200
  1479   00230A  6F64               	movwf	(_motorL+3)& (0+255),b
  1480   00230C                     
  1481                           ; BSR set to: 1
  1482                           ;main.c: 80:     motorR.power=0;
  1483   00230C  0E00               	movlw	0
  1484   00230E  6F58               	movwf	_motorR& (0+255),b
  1485   002310                     
  1486                           ; BSR set to: 1
  1487                           ;main.c: 81:     motorR.direction=1;
  1488   002310  0E01               	movlw	1
  1489   002312  6F59               	movwf	(_motorR+1)& (0+255),b
  1490   002314                     
  1491                           ; BSR set to: 1
  1492                           ;main.c: 82:     motorR.brakemode=1;
  1493   002314  0E01               	movlw	1
  1494   002316  6F5A               	movwf	(_motorR+2)& (0+255),b
  1495   002318                     
  1496                           ; BSR set to: 1
  1497                           ;main.c: 83:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1498   002318  0E25               	movlw	37
  1499   00231A  6F5D               	movwf	(_motorR+5)& (0+255),b
  1500   00231C  0E0F               	movlw	15
  1501   00231E  6F5E               	movwf	(_motorR+6)& (0+255),b
  1502   002320                     
  1503                           ; BSR set to: 1
  1504                           ;main.c: 84:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1505   002320  0E21               	movlw	33
  1506   002322  6F5F               	movwf	(_motorR+7)& (0+255),b
  1507   002324  0E0F               	movlw	15
  1508   002326  6F60               	movwf	(_motorR+8)& (0+255),b
  1509   002328                     
  1510                           ; BSR set to: 1
  1511                           ;main.c: 85:     motorR.PWMperiod=200;
  1512   002328  0E00               	movlw	0
  1513   00232A  6F5C               	movwf	(_motorR+4)& (0+255),b
  1514   00232C  0EC8               	movlw	200
  1515   00232E  6F5B               	movwf	(_motorR+3)& (0+255),b
  1516   002330                     
  1517                           ; BSR set to: 1
  1518                           ;main.c: 88:     int prev_colour =0;
  1519   002330  0E00               	movlw	0
  1520   002332  6FDD               	movwf	(main@prev_colour+1)& (0+255),b
  1521   002334  0E00               	movlw	0
  1522   002336  6FDC               	movwf	main@prev_colour& (0+255),b
  1523   002338                     
  1524                           ; BSR set to: 1
  1525                           ;main.c: 89:     run_flag=1;
  1526   002338  0E00               	movlw	0
  1527   00233A  6F17               	movwf	(_run_flag+1)& (0+255),b
  1528   00233C  0E01               	movlw	1
  1529   00233E  6F16               	movwf	_run_flag& (0+255),b
  1530   002340                     
  1531                           ; BSR set to: 1
  1532                           ;main.c: 90:     move_count=-1;
  1533   002340  6914               	setf	_move_count& (0+255),b	;volatile
  1534   002342  6915               	setf	(_move_count+1)& (0+255),b	;volatile
  1535   002344                     
  1536                           ; BSR set to: 1
  1537                           ;main.c: 91:     int lost_count=0;
  1538   002344  0E00               	movlw	0
  1539   002346  6FDB               	movwf	(main@lost_count+1)& (0+255),b
  1540   002348  0E00               	movlw	0
  1541   00234A  6FDA               	movwf	main@lost_count& (0+255),b
  1542   00234C                     
  1543                           ; BSR set to: 1
  1544                           ;main.c: 92:     turnCalibration(&motorL,&motorR);
  1545   00234C  0E61               	movlw	low _motorL
  1546   00234E  6E20               	movwf	turnCalibration@mL^0,c
  1547   002350  0E01               	movlw	high _motorL
  1548   002352  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1549   002354  0E58               	movlw	low _motorR
  1550   002356  6E22               	movwf	turnCalibration@mR^0,c
  1551   002358  0E01               	movlw	high _motorR
  1552   00235A  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1553   00235C  EC16  F021         	call	_turnCalibration	;wreg free
  1554   002360                     
  1555                           ;main.c: 94:     LATFbits.LATF0=0;
  1556   002360  907E               	bcf	126,0,c	;volatile
  1557   002362                     
  1558                           ;main.c: 95:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1559   002362  0E52               	movlw	82
  1560   002364  0100               	movlb	0	; () banked
  1561   002366  6FD2               	movwf	(??_main+1)& (0+255),b
  1562   002368  0E2B               	movlw	43
  1563   00236A  6FD1               	movwf	??_main& (0+255),b
  1564   00236C  0E00               	movlw	0
  1565   00236E                     u5867:
  1566   00236E  2EE8               	decfsz	wreg,f,c
  1567   002370  D7FE               	bra	u5867
  1568   002372  2FD1               	decfsz	??_main& (0+255),f,b
  1569   002374  D7FC               	bra	u5867
  1570   002376  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1571   002378  D7FA               	bra	u5867
  1572   00237A  F000               	nop	
  1573   00237C                     l356:
  1574   00237C  B48E               	btfsc	142,2,c	;volatile
  1575   00237E  EFC3  F011         	goto	u5641
  1576   002382  EFC5  F011         	goto	u5640
  1577   002386                     u5641:
  1578   002386  EFBE  F011         	goto	l356
  1579   00238A                     u5640:
  1580   00238A                     
  1581                           ;main.c: 98:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1582   00238A  0E52               	movlw	82
  1583   00238C  0100               	movlb	0	; () banked
  1584   00238E  6FD2               	movwf	(??_main+1)& (0+255),b
  1585   002390  0E2B               	movlw	43
  1586   002392  6FD1               	movwf	??_main& (0+255),b
  1587   002394  0E00               	movlw	0
  1588   002396                     u5877:
  1589   002396  2EE8               	decfsz	wreg,f,c
  1590   002398  D7FE               	bra	u5877
  1591   00239A  2FD1               	decfsz	??_main& (0+255),f,b
  1592   00239C  D7FC               	bra	u5877
  1593   00239E  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1594   0023A0  D7FA               	bra	u5877
  1595   0023A2  F000               	nop	
  1596   0023A4                     
  1597                           ;main.c: 99:     T0CON0bits.T0EN=1;
  1598   0023A4  8ED5               	bsf	213,7,c	;volatile
  1599                           
  1600                           ;main.c: 100:     while (run_flag)
  1601   0023A6  EFF6  F013         	goto	l5878
  1602   0023AA                     l5728:
  1603                           
  1604                           ; BSR set to: 1
  1605                           ;main.c: 101:     {;main.c: 102:         consecuitive=0;
  1606   0023AA  0E00               	movlw	0
  1607   0023AC  6FD7               	movwf	(main@consecuitive+1)& (0+255),b
  1608   0023AE  0E00               	movlw	0
  1609   0023B0  6FD6               	movwf	main@consecuitive& (0+255),b
  1610   0023B2                     
  1611                           ; BSR set to: 1
  1612                           ;main.c: 104:         fullSpeedAhead(&motorL,&motorR);
  1613   0023B2  0E61               	movlw	low _motorL
  1614   0023B4  6E14               	movwf	fullSpeedAhead@mL^0,c
  1615   0023B6  0E01               	movlw	high _motorL
  1616   0023B8  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1617   0023BA  0E58               	movlw	low _motorR
  1618   0023BC  6E16               	movwf	fullSpeedAhead@mR^0,c
  1619   0023BE  0E01               	movlw	high _motorR
  1620   0023C0  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1621   0023C2  EC42  F029         	call	_fullSpeedAhead	;wreg free
  1622   0023C6                     
  1623                           ;main.c: 106:         readColours(&vals);
  1624   0023C6  0E6A               	movlw	low _vals
  1625   0023C8  6E0C               	movwf	readColours@vals^0,c
  1626   0023CA  0E01               	movlw	high _vals
  1627   0023CC  6E0D               	movwf	(readColours@vals+1)^0,c
  1628   0023CE  EC26  F02B         	call	_readColours	;wreg free
  1629   0023D2                     
  1630                           ;main.c: 109:         colour_rel(&vals, &rel);
  1631   0023D2  0E6A               	movlw	low _vals
  1632   0023D4  6E4B               	movwf	colour_rel@vals^0,c
  1633   0023D6  0E01               	movlw	high _vals
  1634   0023D8  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1635   0023DA  0E4C               	movlw	low _rel
  1636   0023DC  6E4D               	movwf	colour_rel@rel^0,c
  1637   0023DE  0E01               	movlw	high _rel
  1638   0023E0  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1639   0023E2  EC44  F01A         	call	_colour_rel	;wreg free
  1640   0023E6                     
  1641                           ;main.c: 112:         if (vals.L>=350){
  1642   0023E6  0101               	movlb	1	; () banked
  1643   0023E8  BF71               	btfsc	(_vals+7)& (0+255),7,b
  1644   0023EA  EF00  F012         	goto	u5651
  1645   0023EE  0E5E               	movlw	94
  1646   0023F0  5D70               	subwf	(_vals+6)& (0+255),w,b
  1647   0023F2  0E01               	movlw	1
  1648   0023F4  5971               	subwfb	(_vals+7)& (0+255),w,b
  1649   0023F6  A0D8               	btfss	status,0,c
  1650   0023F8  EF00  F012         	goto	u5651
  1651   0023FC  EF02  F012         	goto	u5650
  1652   002400                     u5651:
  1653   002400  EFDC  F013         	goto	l5870
  1654   002404                     u5650:
  1655   002404                     
  1656                           ; BSR set to: 1
  1657                           ;main.c: 113:             move_count++;
  1658   002404  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1659   002406  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1660   002408                     
  1661                           ; BSR set to: 1
  1662                           ;main.c: 114:             getTMR0val();
  1663   002408  ECE1  F02F         	call	_getTMR0val	;wreg free
  1664   00240C                     
  1665                           ;main.c: 116:             Forwardhalfblock(&motorL,&motorR);
  1666   00240C  0E61               	movlw	low _motorL
  1667   00240E  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1668   002410  0E01               	movlw	high _motorL
  1669   002412  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1670   002414  0E58               	movlw	low _motorR
  1671   002416  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1672   002418  0E01               	movlw	high _motorR
  1673   00241A  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1674   00241C  ECDC  F02B         	call	_Forwardhalfblock	;wreg free
  1675   002420                     
  1676                           ;main.c: 118:             stop(&motorL, &motorR);
  1677   002420  0E61               	movlw	low _motorL
  1678   002422  6E14               	movwf	stop@mL^0,c
  1679   002424  0E01               	movlw	high _motorL
  1680   002426  6E15               	movwf	(stop@mL+1)^0,c
  1681   002428  0E58               	movlw	low _motorR
  1682   00242A  6E16               	movwf	stop@mR^0,c
  1683   00242C  0E01               	movlw	high _motorR
  1684   00242E  6E17               	movwf	(stop@mR+1)^0,c
  1685   002430  ECD5  F029         	call	_stop	;wreg free
  1686                           
  1687                           ;main.c: 123:             while (consecuitive<20){
  1688   002434  EF60  F012         	goto	l5762
  1689   002438                     l5746:
  1690                           
  1691                           ; BSR set to: 1
  1692                           ;main.c: 124:                 _delay((unsigned long)((100)*(64000000/4000.0)));
  1693   002438  0E09               	movlw	9
  1694   00243A  0100               	movlb	0	; () banked
  1695   00243C  6FD2               	movwf	(??_main+1)& (0+255),b
  1696   00243E  0E1E               	movlw	30
  1697   002440  6FD1               	movwf	??_main& (0+255),b
  1698   002442  0EE4               	movlw	228
  1699   002444                     u5887:
  1700   002444  2EE8               	decfsz	wreg,f,c
  1701   002446  D7FE               	bra	u5887
  1702   002448  2FD1               	decfsz	??_main& (0+255),f,b
  1703   00244A  D7FC               	bra	u5887
  1704   00244C  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1705   00244E  D7FA               	bra	u5887
  1706   002450  F000               	nop	
  1707   002452                     
  1708                           ;main.c: 125:                 readColours(&vals);
  1709   002452  0E6A               	movlw	low _vals
  1710   002454  6E0C               	movwf	readColours@vals^0,c
  1711   002456  0E01               	movlw	high _vals
  1712   002458  6E0D               	movwf	(readColours@vals+1)^0,c
  1713   00245A  EC26  F02B         	call	_readColours	;wreg free
  1714   00245E                     
  1715                           ;main.c: 126:                 colour_rel(&vals, &rel);
  1716   00245E  0E6A               	movlw	low _vals
  1717   002460  6E4B               	movwf	colour_rel@vals^0,c
  1718   002462  0E01               	movlw	high _vals
  1719   002464  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1720   002466  0E4C               	movlw	low _rel
  1721   002468  6E4D               	movwf	colour_rel@rel^0,c
  1722   00246A  0E01               	movlw	high _rel
  1723   00246C  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1724   00246E  EC44  F01A         	call	_colour_rel	;wreg free
  1725   002472                     
  1726                           ;main.c: 127:                 int colour = Colour_decider(&vals, &rel);
  1727   002472  0E6A               	movlw	low _vals
  1728   002474  6E4B               	movwf	Colour_decider@vals^0,c
  1729   002476  0E01               	movlw	high _vals
  1730   002478  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1731   00247A  0E4C               	movlw	low _rel
  1732   00247C  6E4D               	movwf	Colour_decider@rel^0,c
  1733   00247E  0E01               	movlw	high _rel
  1734   002480  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1735   002482  EC1F  F007         	call	_Colour_decider	;wreg free
  1736   002486  C04B  F1D8         	movff	?_Colour_decider,main@colour
  1737   00248A  C04C  F1D9         	movff	?_Colour_decider+1,main@colour+1
  1738   00248E                     
  1739                           ;main.c: 128:                 if (colour==prev_colour){
  1740   00248E  0101               	movlb	1	; () banked
  1741   002490  51DC               	movf	main@prev_colour& (0+255),w,b
  1742   002492  19D8               	xorwf	main@colour& (0+255),w,b
  1743   002494  E107               	bnz	u5661
  1744   002496  51DD               	movf	(main@prev_colour+1)& (0+255),w,b
  1745   002498  19D9               	xorwf	(main@colour+1)& (0+255),w,b
  1746   00249A  A4D8               	btfss	status,2,c
  1747   00249C  EF52  F012         	goto	u5661
  1748   0024A0  EF54  F012         	goto	u5660
  1749   0024A4                     u5661:
  1750   0024A4  EF58  F012         	goto	l5758
  1751   0024A8                     u5660:
  1752   0024A8                     
  1753                           ; BSR set to: 1
  1754                           ;main.c: 129:                     consecuitive++;
  1755   0024A8  4BD6               	infsnz	main@consecuitive& (0+255),f,b
  1756   0024AA  2BD7               	incf	(main@consecuitive+1)& (0+255),f,b
  1757                           
  1758                           ;main.c: 130:                 }
  1759   0024AC  EF5C  F012         	goto	l5760
  1760   0024B0                     l5758:
  1761                           
  1762                           ; BSR set to: 1
  1763                           ;main.c: 132:                     consecuitive=0;
  1764   0024B0  0E00               	movlw	0
  1765   0024B2  6FD7               	movwf	(main@consecuitive+1)& (0+255),b
  1766   0024B4  0E00               	movlw	0
  1767   0024B6  6FD6               	movwf	main@consecuitive& (0+255),b
  1768   0024B8                     l5760:
  1769                           
  1770                           ; BSR set to: 1
  1771                           ;main.c: 134:                 prev_colour=colour;
  1772   0024B8  C1D8  F1DC         	movff	main@colour,main@prev_colour
  1773   0024BC  C1D9  F1DD         	movff	main@colour+1,main@prev_colour+1
  1774   0024C0                     l5762:
  1775                           
  1776                           ;main.c: 123:             while (consecuitive<20){
  1777   0024C0  0101               	movlb	1	; () banked
  1778   0024C2  BFD7               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1779   0024C4  EF6D  F012         	goto	u5671
  1780   0024C8  51D7               	movf	(main@consecuitive+1)& (0+255),w,b
  1781   0024CA  E109               	bnz	u5670
  1782   0024CC  0E14               	movlw	20
  1783   0024CE  5DD6               	subwf	main@consecuitive& (0+255),w,b
  1784   0024D0  A0D8               	btfss	status,0,c
  1785   0024D2  EF6D  F012         	goto	u5671
  1786   0024D6  EF6F  F012         	goto	u5670
  1787   0024DA                     u5671:
  1788   0024DA  EF1C  F012         	goto	l5746
  1789   0024DE                     u5670:
  1790   0024DE                     
  1791                           ; BSR set to: 1
  1792                           ;main.c: 139:             sprintf(buf,"red=%f green=%f blue=%f lum=%d actual_colour=%d \
      +                          r\n",rel.R, rel.G,rel.B,vals.L, prev_colour);
  1793   0024DE  0E72               	movlw	low main@buf
  1794   0024E0  0100               	movlb	0	; () banked
  1795   0024E2  6FB0               	movwf	sprintf@s& (0+255),b
  1796   0024E4  0E01               	movlw	high main@buf
  1797   0024E6  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1798   0024E8  0E01               	movlw	low STR_1
  1799   0024EA  6FB2               	movwf	sprintf@fmt& (0+255),b
  1800   0024EC  0E0E               	movlw	high STR_1
  1801   0024EE  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1802   0024F0  C14C  F0B4         	movff	_rel,?_sprintf+4
  1803   0024F4  C14D  F0B5         	movff	_rel+1,?_sprintf+5
  1804   0024F8  C14E  F0B6         	movff	_rel+2,?_sprintf+6
  1805   0024FC  C14F  F0B7         	movff	_rel+3,?_sprintf+7
  1806   002500  C150  F0B8         	movff	_rel+4,?_sprintf+8
  1807   002504  C151  F0B9         	movff	_rel+5,?_sprintf+9
  1808   002508  C152  F0BA         	movff	_rel+6,?_sprintf+10
  1809   00250C  C153  F0BB         	movff	_rel+7,?_sprintf+11
  1810   002510  C154  F0BC         	movff	_rel+8,?_sprintf+12
  1811   002514  C155  F0BD         	movff	_rel+9,?_sprintf+13
  1812   002518  C156  F0BE         	movff	_rel+10,?_sprintf+14
  1813   00251C  C157  F0BF         	movff	_rel+11,?_sprintf+15
  1814   002520  C170  F0C0         	movff	_vals+6,?_sprintf+16
  1815   002524  C171  F0C1         	movff	_vals+7,?_sprintf+17
  1816   002528  C1DC  F0C2         	movff	main@prev_colour,?_sprintf+18
  1817   00252C  C1DD  F0C3         	movff	main@prev_colour+1,?_sprintf+19
  1818   002530  EC34  F02C         	call	_sprintf	;wreg free
  1819   002534                     
  1820                           ;main.c: 140:             sendStringSerial4(buf);
  1821   002534  0E72               	movlw	low main@buf
  1822   002536  6E02               	movwf	sendStringSerial4@string^0,c
  1823   002538  0E01               	movlw	high main@buf
  1824   00253A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1825   00253C  ECA0  F02F         	call	_sendStringSerial4	;wreg free
  1826   002540                     
  1827                           ;main.c: 142:             if (prev_colour==1){
  1828   002540  0101               	movlb	1	; () banked
  1829   002542  05DC               	decf	main@prev_colour& (0+255),w,b
  1830   002544  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1831   002546  A4D8               	btfss	status,2,c
  1832   002548  EFA8  F012         	goto	u5681
  1833   00254C  EFAA  F012         	goto	u5680
  1834   002550                     u5681:
  1835   002550  EFC7  F012         	goto	l5780
  1836   002554                     u5680:
  1837   002554                     
  1838                           ; BSR set to: 1
  1839                           ;main.c: 143:                 RedMove(&motorL, &motorR);
  1840   002554  0E61               	movlw	low _motorL
  1841   002556  6E20               	movwf	RedMove@mL^0,c
  1842   002558  0E01               	movlw	high _motorL
  1843   00255A  6E21               	movwf	(RedMove@mL+1)^0,c
  1844   00255C  0E58               	movlw	low _motorR
  1845   00255E  6E22               	movwf	RedMove@mR^0,c
  1846   002560  0E01               	movlw	high _motorR
  1847   002562  6E23               	movwf	(RedMove@mR+1)^0,c
  1848   002564  EC0F  F02F         	call	_RedMove	;wreg free
  1849   002568                     
  1850                           ;main.c: 144:                 TMR0H=0;
  1851   002568  0E00               	movlw	0
  1852   00256A  6ED4               	movwf	212,c	;volatile
  1853   00256C                     
  1854                           ;main.c: 145:                 TMR0L=0;
  1855   00256C  0E00               	movlw	0
  1856   00256E  6ED3               	movwf	211,c	;volatile
  1857   002570                     
  1858                           ;main.c: 146:                 WayBack[move_count]=1;
  1859   002570  0E1A               	movlw	low _WayBack
  1860   002572  0101               	movlb	1	; () banked
  1861   002574  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1862   002576  6ED9               	movwf	fsr2l,c
  1863   002578  0E01               	movlw	high _WayBack
  1864   00257A  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1865   00257C  6EDA               	movwf	fsr2h,c
  1866   00257E  0E01               	movlw	1
  1867   002580  6EDF               	movwf	indf2,c
  1868   002582                     l5778:
  1869                           
  1870                           ; BSR set to: 1
  1871                           ;main.c: 147:                 lost_count=0;
  1872   002582  0E00               	movlw	0
  1873   002584  6FDB               	movwf	(main@lost_count+1)& (0+255),b
  1874   002586  0E00               	movlw	0
  1875   002588  6FDA               	movwf	main@lost_count& (0+255),b
  1876                           
  1877                           ;main.c: 148:             }
  1878   00258A  EFF6  F013         	goto	l5878
  1879   00258E                     l5780:
  1880                           
  1881                           ; BSR set to: 1
  1882   00258E  0E02               	movlw	2
  1883   002590  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1884   002592  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1885   002594  A4D8               	btfss	status,2,c
  1886   002596  EFCF  F012         	goto	u5691
  1887   00259A  EFD1  F012         	goto	u5690
  1888   00259E                     u5691:
  1889   00259E  EFEA  F012         	goto	l5792
  1890   0025A2                     u5690:
  1891   0025A2                     
  1892                           ; BSR set to: 1
  1893                           ;main.c: 150:                 OrangeMove(&motorL, &motorR);
  1894   0025A2  0E61               	movlw	low _motorL
  1895   0025A4  6E20               	movwf	OrangeMove@mL^0,c
  1896   0025A6  0E01               	movlw	high _motorL
  1897   0025A8  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1898   0025AA  0E58               	movlw	low _motorR
  1899   0025AC  6E22               	movwf	OrangeMove@mR^0,c
  1900   0025AE  0E01               	movlw	high _motorR
  1901   0025B0  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1902   0025B2  EC5D  F02C         	call	_OrangeMove	;wreg free
  1903   0025B6                     
  1904                           ;main.c: 151:                 TMR0H=0;
  1905   0025B6  0E00               	movlw	0
  1906   0025B8  6ED4               	movwf	212,c	;volatile
  1907   0025BA                     
  1908                           ;main.c: 152:                 TMR0L=0;
  1909   0025BA  0E00               	movlw	0
  1910   0025BC  6ED3               	movwf	211,c	;volatile
  1911   0025BE                     
  1912                           ;main.c: 153:                 WayBack[move_count]=2;
  1913   0025BE  0E1A               	movlw	low _WayBack
  1914   0025C0  0101               	movlb	1	; () banked
  1915   0025C2  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1916   0025C4  6ED9               	movwf	fsr2l,c
  1917   0025C6  0E01               	movlw	high _WayBack
  1918   0025C8  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1919   0025CA  6EDA               	movwf	fsr2h,c
  1920   0025CC  0E02               	movlw	2
  1921   0025CE  6EDF               	movwf	indf2,c
  1922   0025D0  EFC1  F012         	goto	l5778
  1923   0025D4                     l5792:
  1924                           
  1925                           ; BSR set to: 1
  1926   0025D4  0E03               	movlw	3
  1927   0025D6  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1928   0025D8  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1929   0025DA  A4D8               	btfss	status,2,c
  1930   0025DC  EFF2  F012         	goto	u5701
  1931   0025E0  EFF4  F012         	goto	u5700
  1932   0025E4                     u5701:
  1933   0025E4  EF0D  F013         	goto	l5804
  1934   0025E8                     u5700:
  1935   0025E8                     
  1936                           ; BSR set to: 1
  1937                           ;main.c: 157:                 YellowMove(&motorL, &motorR);
  1938   0025E8  0E61               	movlw	low _motorL
  1939   0025EA  6E20               	movwf	YellowMove@mL^0,c
  1940   0025EC  0E01               	movlw	high _motorL
  1941   0025EE  6E21               	movwf	(YellowMove@mL+1)^0,c
  1942   0025F0  0E58               	movlw	low _motorR
  1943   0025F2  6E22               	movwf	YellowMove@mR^0,c
  1944   0025F4  0E01               	movlw	high _motorR
  1945   0025F6  6E23               	movwf	(YellowMove@mR+1)^0,c
  1946   0025F8  ECD8  F02C         	call	_YellowMove	;wreg free
  1947   0025FC                     
  1948                           ;main.c: 158:                 TMR0H=0;
  1949   0025FC  0E00               	movlw	0
  1950   0025FE  6ED4               	movwf	212,c	;volatile
  1951   002600                     
  1952                           ;main.c: 159:                 TMR0L=0;
  1953   002600  0E00               	movlw	0
  1954   002602  6ED3               	movwf	211,c	;volatile
  1955   002604                     
  1956                           ;main.c: 160:                 WayBack[move_count]=3;
  1957   002604  0E1A               	movlw	low _WayBack
  1958   002606  0101               	movlb	1	; () banked
  1959   002608  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1960   00260A  6ED9               	movwf	fsr2l,c
  1961   00260C  0E01               	movlw	high _WayBack
  1962   00260E  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1963   002610  6EDA               	movwf	fsr2h,c
  1964   002612  0E03               	movlw	3
  1965   002614  6EDF               	movwf	indf2,c
  1966   002616  EFC1  F012         	goto	l5778
  1967   00261A                     l5804:
  1968                           
  1969                           ; BSR set to: 1
  1970   00261A  0E04               	movlw	4
  1971   00261C  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1972   00261E  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1973   002620  A4D8               	btfss	status,2,c
  1974   002622  EF15  F013         	goto	u5711
  1975   002626  EF17  F013         	goto	u5710
  1976   00262A                     u5711:
  1977   00262A  EF30  F013         	goto	l5816
  1978   00262E                     u5710:
  1979   00262E                     
  1980                           ; BSR set to: 1
  1981                           ;main.c: 164:                 BlueMove(&motorL, &motorR);
  1982   00262E  0E61               	movlw	low _motorL
  1983   002630  6E20               	movwf	BlueMove@mL^0,c
  1984   002632  0E01               	movlw	high _motorL
  1985   002634  6E21               	movwf	(BlueMove@mL+1)^0,c
  1986   002636  0E58               	movlw	low _motorR
  1987   002638  6E22               	movwf	BlueMove@mR^0,c
  1988   00263A  0E01               	movlw	high _motorR
  1989   00263C  6E23               	movwf	(BlueMove@mR+1)^0,c
  1990   00263E  ECF3  F02A         	call	_BlueMove	;wreg free
  1991   002642                     
  1992                           ;main.c: 165:                 TMR0H=0;
  1993   002642  0E00               	movlw	0
  1994   002644  6ED4               	movwf	212,c	;volatile
  1995   002646                     
  1996                           ;main.c: 166:                 TMR0L=0;
  1997   002646  0E00               	movlw	0
  1998   002648  6ED3               	movwf	211,c	;volatile
  1999   00264A                     
  2000                           ;main.c: 167:                 WayBack[move_count]=4;
  2001   00264A  0E1A               	movlw	low _WayBack
  2002   00264C  0101               	movlb	1	; () banked
  2003   00264E  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2004   002650  6ED9               	movwf	fsr2l,c
  2005   002652  0E01               	movlw	high _WayBack
  2006   002654  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2007   002656  6EDA               	movwf	fsr2h,c
  2008   002658  0E04               	movlw	4
  2009   00265A  6EDF               	movwf	indf2,c
  2010   00265C  EFC1  F012         	goto	l5778
  2011   002660                     l5816:
  2012                           
  2013                           ; BSR set to: 1
  2014   002660  0E05               	movlw	5
  2015   002662  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2016   002664  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2017   002666  A4D8               	btfss	status,2,c
  2018   002668  EF38  F013         	goto	u5721
  2019   00266C  EF3A  F013         	goto	u5720
  2020   002670                     u5721:
  2021   002670  EF53  F013         	goto	l5828
  2022   002674                     u5720:
  2023   002674                     
  2024                           ; BSR set to: 1
  2025                           ;main.c: 171:                 GreenMove(&motorL, &motorR);
  2026   002674  0E61               	movlw	low _motorL
  2027   002676  6E20               	movwf	GreenMove@mL^0,c
  2028   002678  0E01               	movlw	high _motorL
  2029   00267A  6E21               	movwf	(GreenMove@mL+1)^0,c
  2030   00267C  0E58               	movlw	low _motorR
  2031   00267E  6E22               	movwf	GreenMove@mR^0,c
  2032   002680  0E01               	movlw	high _motorR
  2033   002682  6E23               	movwf	(GreenMove@mR+1)^0,c
  2034   002684  EC2E  F02F         	call	_GreenMove	;wreg free
  2035   002688                     
  2036                           ;main.c: 172:                 TMR0H=0;
  2037   002688  0E00               	movlw	0
  2038   00268A  6ED4               	movwf	212,c	;volatile
  2039   00268C                     
  2040                           ;main.c: 173:                 TMR0L=0;
  2041   00268C  0E00               	movlw	0
  2042   00268E  6ED3               	movwf	211,c	;volatile
  2043   002690                     
  2044                           ;main.c: 174:                 WayBack[move_count]=5;
  2045   002690  0E1A               	movlw	low _WayBack
  2046   002692  0101               	movlb	1	; () banked
  2047   002694  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2048   002696  6ED9               	movwf	fsr2l,c
  2049   002698  0E01               	movlw	high _WayBack
  2050   00269A  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2051   00269C  6EDA               	movwf	fsr2h,c
  2052   00269E  0E05               	movlw	5
  2053   0026A0  6EDF               	movwf	indf2,c
  2054   0026A2  EFC1  F012         	goto	l5778
  2055   0026A6                     l5828:
  2056                           
  2057                           ; BSR set to: 1
  2058   0026A6  0E06               	movlw	6
  2059   0026A8  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2060   0026AA  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2061   0026AC  A4D8               	btfss	status,2,c
  2062   0026AE  EF5B  F013         	goto	u5731
  2063   0026B2  EF5D  F013         	goto	u5730
  2064   0026B6                     u5731:
  2065   0026B6  EF76  F013         	goto	l5840
  2066   0026BA                     u5730:
  2067   0026BA                     
  2068                           ; BSR set to: 1
  2069                           ;main.c: 178:                 LightBlueMove(&motorL, &motorR);
  2070   0026BA  0E61               	movlw	low _motorL
  2071   0026BC  6E20               	movwf	LightBlueMove@mL^0,c
  2072   0026BE  0E01               	movlw	high _motorL
  2073   0026C0  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  2074   0026C2  0E58               	movlw	low _motorR
  2075   0026C4  6E22               	movwf	LightBlueMove@mR^0,c
  2076   0026C6  0E01               	movlw	high _motorR
  2077   0026C8  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  2078   0026CA  EC86  F02C         	call	_LightBlueMove	;wreg free
  2079   0026CE                     
  2080                           ;main.c: 179:                 TMR0H=0;
  2081   0026CE  0E00               	movlw	0
  2082   0026D0  6ED4               	movwf	212,c	;volatile
  2083   0026D2                     
  2084                           ;main.c: 180:                 TMR0L=0;
  2085   0026D2  0E00               	movlw	0
  2086   0026D4  6ED3               	movwf	211,c	;volatile
  2087   0026D6                     
  2088                           ;main.c: 181:                 WayBack[move_count]=6;
  2089   0026D6  0E1A               	movlw	low _WayBack
  2090   0026D8  0101               	movlb	1	; () banked
  2091   0026DA  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2092   0026DC  6ED9               	movwf	fsr2l,c
  2093   0026DE  0E01               	movlw	high _WayBack
  2094   0026E0  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2095   0026E2  6EDA               	movwf	fsr2h,c
  2096   0026E4  0E06               	movlw	6
  2097   0026E6  6EDF               	movwf	indf2,c
  2098   0026E8  EFC1  F012         	goto	l5778
  2099   0026EC                     l5840:
  2100                           
  2101                           ; BSR set to: 1
  2102   0026EC  0E07               	movlw	7
  2103   0026EE  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2104   0026F0  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2105   0026F2  A4D8               	btfss	status,2,c
  2106   0026F4  EF7E  F013         	goto	u5741
  2107   0026F8  EF80  F013         	goto	u5740
  2108   0026FC                     u5741:
  2109   0026FC  EF99  F013         	goto	l5852
  2110   002700                     u5740:
  2111   002700                     
  2112                           ; BSR set to: 1
  2113                           ;main.c: 185:                 PinkMove(&motorL, &motorR);
  2114   002700  0E61               	movlw	low _motorL
  2115   002702  6E20               	movwf	PinkMove@mL^0,c
  2116   002704  0E01               	movlw	high _motorL
  2117   002706  6E21               	movwf	(PinkMove@mL+1)^0,c
  2118   002708  0E58               	movlw	low _motorR
  2119   00270A  6E22               	movwf	PinkMove@mR^0,c
  2120   00270C  0E01               	movlw	high _motorR
  2121   00270E  6E23               	movwf	(PinkMove@mR+1)^0,c
  2122   002710  EC01  F02D         	call	_PinkMove	;wreg free
  2123   002714                     
  2124                           ;main.c: 186:                 TMR0H=0;
  2125   002714  0E00               	movlw	0
  2126   002716  6ED4               	movwf	212,c	;volatile
  2127   002718                     
  2128                           ;main.c: 187:                 TMR0L=0;
  2129   002718  0E00               	movlw	0
  2130   00271A  6ED3               	movwf	211,c	;volatile
  2131   00271C                     
  2132                           ;main.c: 188:                 WayBack[move_count]=7;
  2133   00271C  0E1A               	movlw	low _WayBack
  2134   00271E  0101               	movlb	1	; () banked
  2135   002720  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2136   002722  6ED9               	movwf	fsr2l,c
  2137   002724  0E01               	movlw	high _WayBack
  2138   002726  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2139   002728  6EDA               	movwf	fsr2h,c
  2140   00272A  0E07               	movlw	7
  2141   00272C  6EDF               	movwf	indf2,c
  2142   00272E  EFC1  F012         	goto	l5778
  2143   002732                     l5852:
  2144                           
  2145                           ; BSR set to: 1
  2146   002732  0E0A               	movlw	10
  2147   002734  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2148   002736  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2149   002738  A4D8               	btfss	status,2,c
  2150   00273A  EFA1  F013         	goto	u5751
  2151   00273E  EFA3  F013         	goto	u5750
  2152   002742                     u5751:
  2153   002742  EFCF  F013         	goto	l5866
  2154   002746                     u5750:
  2155   002746                     
  2156                           ; BSR set to: 1
  2157                           ;main.c: 192:                 lost_count++;
  2158   002746  4BDA               	infsnz	main@lost_count& (0+255),f,b
  2159   002748  2BDB               	incf	(main@lost_count+1)& (0+255),f,b
  2160   00274A                     
  2161                           ; BSR set to: 1
  2162                           ;main.c: 193:                 if (lost_count>=3){
  2163   00274A  BFDB               	btfsc	(main@lost_count+1)& (0+255),7,b
  2164   00274C  EFB1  F013         	goto	u5761
  2165   002750  51DB               	movf	(main@lost_count+1)& (0+255),w,b
  2166   002752  E109               	bnz	u5760
  2167   002754  0E03               	movlw	3
  2168   002756  5DDA               	subwf	main@lost_count& (0+255),w,b
  2169   002758  A0D8               	btfss	status,0,c
  2170   00275A  EFB1  F013         	goto	u5761
  2171   00275E  EFB3  F013         	goto	u5760
  2172   002762                     u5761:
  2173   002762  EFBF  F013         	goto	l5860
  2174   002766                     u5760:
  2175   002766                     l5858:
  2176                           
  2177                           ; BSR set to: 1
  2178                           ;main.c: 194:                     go_Home(WayBack, Time_forward);
  2179   002766  0E1A               	movlw	low _WayBack
  2180   002768  6E24               	movwf	go_Home@WayBack^0,c
  2181   00276A  0E01               	movlw	high _WayBack
  2182   00276C  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2183   00276E  0E3C               	movlw	low _Time_forward
  2184   002770  6E26               	movwf	go_Home@Time_forward^0,c
  2185   002772  0E02               	movlw	high _Time_forward
  2186   002774  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2187   002776  EC5E  F01D         	call	_go_Home	;wreg free
  2188                           
  2189                           ;main.c: 195:                 }
  2190   00277A  EFF6  F013         	goto	l5878
  2191   00277E                     l5860:
  2192                           
  2193                           ; BSR set to: 1
  2194                           ;main.c: 197:                     RetryMove(&motorL, &motorR);
  2195   00277E  0E61               	movlw	low _motorL
  2196   002780  6E20               	movwf	RetryMove@mL^0,c
  2197   002782  0E01               	movlw	high _motorL
  2198   002784  6E21               	movwf	(RetryMove@mL+1)^0,c
  2199   002786  0E58               	movlw	low _motorR
  2200   002788  6E22               	movwf	RetryMove@mR^0,c
  2201   00278A  0E01               	movlw	high _motorR
  2202   00278C  6E23               	movwf	(RetryMove@mR+1)^0,c
  2203   00278E  EC8B  F02A         	call	_RetryMove	;wreg free
  2204   002792                     
  2205                           ;main.c: 198:                     TMR0H=0;
  2206   002792  0E00               	movlw	0
  2207   002794  6ED4               	movwf	212,c	;volatile
  2208   002796                     
  2209                           ;main.c: 199:                     TMR0L=0;
  2210   002796  0E00               	movlw	0
  2211   002798  6ED3               	movwf	211,c	;volatile
  2212   00279A  EFF6  F013         	goto	l5878
  2213   00279E                     l5866:
  2214                           
  2215                           ; BSR set to: 1
  2216   00279E  51DC               	movf	main@prev_colour& (0+255),w,b
  2217   0027A0  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2218   0027A2  A4D8               	btfss	status,2,c
  2219   0027A4  EFD6  F013         	goto	u5771
  2220   0027A8  EFD8  F013         	goto	u5770
  2221   0027AC                     u5771:
  2222   0027AC  EFDA  F013         	goto	l378
  2223   0027B0                     u5770:
  2224   0027B0  EFB3  F013         	goto	l5858
  2225   0027B4                     l378:
  2226                           
  2227                           ; BSR set to: 1
  2228   0027B4  EFF6  F013         	goto	l5878
  2229   0027B8                     l5870:
  2230                           
  2231                           ; BSR set to: 1
  2232   0027B8  5118               	movf	_lost_flag& (0+255),w,b
  2233   0027BA  1119               	iorwf	(_lost_flag+1)& (0+255),w,b
  2234   0027BC  B4D8               	btfsc	status,2,c
  2235   0027BE  EFE3  F013         	goto	u5781
  2236   0027C2  EFE5  F013         	goto	u5780
  2237   0027C6                     u5781:
  2238   0027C6  EFF6  F013         	goto	l5878
  2239   0027CA                     u5780:
  2240   0027CA                     
  2241                           ; BSR set to: 1
  2242                           ;main.c: 206:             move_count++;
  2243   0027CA  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  2244   0027CC  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  2245   0027CE                     
  2246                           ; BSR set to: 1
  2247                           ;main.c: 207:             Time_forward[move_count]=65535;
  2248   0027CE  90D8               	bcf	status,0,c
  2249   0027D0  3514               	rlcf	_move_count& (0+255),w,b	;volatile
  2250   0027D2  6ED9               	movwf	fsr2l,c
  2251   0027D4  3515               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  2252   0027D6  6EDA               	movwf	fsr2h,c
  2253   0027D8  0E3C               	movlw	low _Time_forward
  2254   0027DA  26D9               	addwf	fsr2l,f,c
  2255   0027DC  0E02               	movlw	high _Time_forward
  2256   0027DE  22DA               	addwfc	fsr2h,f,c
  2257   0027E0  0EFF               	movlw	255
  2258   0027E2  6EDE               	movwf	postinc2,c
  2259   0027E4  0EFF               	movlw	255
  2260   0027E6  6EDD               	movwf	postdec2,c
  2261   0027E8  EFB3  F013         	goto	l5858
  2262   0027EC                     l5878:
  2263                           
  2264                           ;main.c: 100:     while (run_flag)
  2265   0027EC  0101               	movlb	1	; () banked
  2266   0027EE  5116               	movf	_run_flag& (0+255),w,b
  2267   0027F0  1117               	iorwf	(_run_flag+1)& (0+255),w,b
  2268   0027F2  A4D8               	btfss	status,2,c
  2269   0027F4  EFFE  F013         	goto	u5791
  2270   0027F8  EF00  F014         	goto	u5790
  2271   0027FC                     u5791:
  2272   0027FC  EFD5  F011         	goto	l5728
  2273   002800                     u5790:
  2274   002800                     
  2275                           ; BSR set to: 1
  2276   002800  EF1A  F000         	goto	start
  2277   002804                     __end_of_main:
  2278                           	callstack 0
  2279                           
  2280 ;; *************** function _turnCalibration *****************
  2281 ;; Defined at:
  2282 ;;		line 356 in file "dc_motor.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2285 ;;		 -> motorL(9), 
  2286 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2287 ;;		 -> motorR(9), 
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;		None
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2299 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2301 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2302 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2303 ;;Total ram usage:        6 bytes
  2304 ;; Hardware stack levels used: 1
  2305 ;; Hardware stack levels required when called: 5
  2306 ;; This function calls:
  2307 ;;		_turnLeft45
  2308 ;; This function is called by:
  2309 ;;		_main
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text1
  2314   00422C                     __ptext1:
  2315                           	callstack 0
  2316   00422C                     _turnCalibration:
  2317                           	callstack 25
  2318   00422C                     
  2319                           ;dc_motor.c: 357:     LATFbits.LATF0=1;
  2320   00422C  807E               	bsf	126,0,c	;volatile
  2321   00422E                     
  2322                           ;dc_motor.c: 358:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2323   00422E  0E52               	movlw	82
  2324   004230  6E25               	movwf	(??_turnCalibration+1)^0,c
  2325   004232  0E2B               	movlw	43
  2326   004234  6E24               	movwf	??_turnCalibration^0,c
  2327   004236  0E00               	movlw	0
  2328   004238                     u5897:
  2329   004238  2EE8               	decfsz	wreg,f,c
  2330   00423A  D7FE               	bra	u5897
  2331   00423C  2E24               	decfsz	??_turnCalibration^0,f,c
  2332   00423E  D7FC               	bra	u5897
  2333   004240  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2334   004242  D7FA               	bra	u5897
  2335   004244  D000               	nop2	
  2336                           
  2337                           ;dc_motor.c: 360:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2338   004246  EFDD  F021         	goto	l567
  2339   00424A                     l568:
  2340                           
  2341                           ;dc_motor.c: 361:         LATDbits.LATD3=1;
  2342   00424A  867C               	bsf	124,3,c	;volatile
  2343   00424C                     
  2344                           ;dc_motor.c: 363:         turnLeft45(&motorL, &motorR);
  2345   00424C  0E61               	movlw	low _motorL
  2346   00424E  6E1A               	movwf	turnLeft45@mL^0,c
  2347   004250  0E01               	movlw	high _motorL
  2348   004252  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2349   004254  0E58               	movlw	low _motorR
  2350   004256  6E1C               	movwf	turnLeft45@mR^0,c
  2351   004258  0E01               	movlw	high _motorR
  2352   00425A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2353   00425C  EC40  F02E         	call	_turnLeft45	;wreg free
  2354                           
  2355                           ;dc_motor.c: 364:         turnLeft45(&motorL, &motorR);
  2356   004260  0E61               	movlw	low _motorL
  2357   004262  6E1A               	movwf	turnLeft45@mL^0,c
  2358   004264  0E01               	movlw	high _motorL
  2359   004266  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2360   004268  0E58               	movlw	low _motorR
  2361   00426A  6E1C               	movwf	turnLeft45@mR^0,c
  2362   00426C  0E01               	movlw	high _motorR
  2363   00426E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2364   004270  EC40  F02E         	call	_turnLeft45	;wreg free
  2365                           
  2366                           ;dc_motor.c: 365:         turnLeft45(&motorL, &motorR);
  2367   004274  0E61               	movlw	low _motorL
  2368   004276  6E1A               	movwf	turnLeft45@mL^0,c
  2369   004278  0E01               	movlw	high _motorL
  2370   00427A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2371   00427C  0E58               	movlw	low _motorR
  2372   00427E  6E1C               	movwf	turnLeft45@mR^0,c
  2373   004280  0E01               	movlw	high _motorR
  2374   004282  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2375   004284  EC40  F02E         	call	_turnLeft45	;wreg free
  2376                           
  2377                           ;dc_motor.c: 366:         turnLeft45(&motorL, &motorR);
  2378   004288  0E61               	movlw	low _motorL
  2379   00428A  6E1A               	movwf	turnLeft45@mL^0,c
  2380   00428C  0E01               	movlw	high _motorL
  2381   00428E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2382   004290  0E58               	movlw	low _motorR
  2383   004292  6E1C               	movwf	turnLeft45@mR^0,c
  2384   004294  0E01               	movlw	high _motorR
  2385   004296  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2386   004298  EC40  F02E         	call	_turnLeft45	;wreg free
  2387                           
  2388                           ;dc_motor.c: 368:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2389   00429C  EFC2  F021         	goto	l5534
  2390   0042A0                     l570:
  2391                           
  2392                           ;dc_motor.c: 371:               LATDbits.LATD4=1;
  2393   0042A0  887C               	bsf	124,4,c	;volatile
  2394   0042A2                     
  2395                           ;dc_motor.c: 372:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2396   0042A2  0EA3               	movlw	163
  2397   0042A4  6E25               	movwf	(??_turnCalibration+1)^0,c
  2398   0042A6  0E57               	movlw	87
  2399   0042A8  6E24               	movwf	??_turnCalibration^0,c
  2400   0042AA  0E02               	movlw	2
  2401   0042AC                     u5907:
  2402   0042AC  2EE8               	decfsz	wreg,f,c
  2403   0042AE  D7FE               	bra	u5907
  2404   0042B0  2E24               	decfsz	??_turnCalibration^0,f,c
  2405   0042B2  D7FC               	bra	u5907
  2406   0042B4  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2407   0042B6  D7FA               	bra	u5907
  2408   0042B8  D000               	nop2	
  2409                           
  2410                           ;dc_motor.c: 373:             if(!PORTFbits.RF3 & !PORTFbits.RF2){
  2411   0042BA  A48E               	btfss	142,2,c	;volatile
  2412   0042BC  EF62  F021         	goto	u5451
  2413   0042C0  EF65  F021         	goto	u5450
  2414   0042C4                     u5451:
  2415   0042C4  0E01               	movlw	1
  2416   0042C6  EF66  F021         	goto	u5452
  2417   0042CA                     u5450:
  2418   0042CA  0E00               	movlw	0
  2419   0042CC                     u5452:
  2420   0042CC  6E24               	movwf	??_turnCalibration^0,c
  2421   0042CE  A68E               	btfss	142,3,c	;volatile
  2422   0042D0  EF6C  F021         	goto	u5461
  2423   0042D4  EF6F  F021         	goto	u5460
  2424   0042D8                     u5461:
  2425   0042D8  0E01               	movlw	1
  2426   0042DA  EF70  F021         	goto	u5462
  2427   0042DE                     u5460:
  2428   0042DE  0E00               	movlw	0
  2429   0042E0                     u5462:
  2430   0042E0  1424               	andwf	??_turnCalibration^0,w,c
  2431   0042E2  A0E8               	btfss	wreg,0,c
  2432   0042E4  EF76  F021         	goto	u5471
  2433   0042E8  EF78  F021         	goto	u5470
  2434   0042EC                     u5471:
  2435   0042EC  EF8A  F021         	goto	l571
  2436   0042F0                     u5470:
  2437   0042F0                     
  2438                           ;dc_motor.c: 374:                 LATHbits.LATH3=1;
  2439   0042F0  8680               	bsf	128,3,c	;volatile
  2440                           
  2441                           ;dc_motor.c: 375:                 LATDbits.LATD7=1;
  2442   0042F2  8E7C               	bsf	124,7,c	;volatile
  2443   0042F4                     
  2444                           ;dc_motor.c: 376:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2445   0042F4  0E52               	movlw	82
  2446   0042F6  6E25               	movwf	(??_turnCalibration+1)^0,c
  2447   0042F8  0E2B               	movlw	43
  2448   0042FA  6E24               	movwf	??_turnCalibration^0,c
  2449   0042FC  0E00               	movlw	0
  2450   0042FE                     u5917:
  2451   0042FE  2EE8               	decfsz	wreg,f,c
  2452   004300  D7FE               	bra	u5917
  2453   004302  2E24               	decfsz	??_turnCalibration^0,f,c
  2454   004304  D7FC               	bra	u5917
  2455   004306  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2456   004308  D7FA               	bra	u5917
  2457   00430A  D000               	nop2	
  2458   00430C                     
  2459                           ;dc_motor.c: 377:                 LATHbits.LATH3=0;
  2460   00430C  9680               	bcf	128,3,c	;volatile
  2461   00430E                     
  2462                           ;dc_motor.c: 378:                 LATDbits.LATD7=0;
  2463   00430E  9E7C               	bcf	124,7,c	;volatile
  2464                           
  2465                           ;dc_motor.c: 379:             }
  2466   004310  EFC2  F021         	goto	l5534
  2467   004314                     l571:
  2468   004314  B68E               	btfsc	142,3,c	;volatile
  2469   004316  EF8F  F021         	goto	u5481
  2470   00431A  EF91  F021         	goto	u5480
  2471   00431E                     u5481:
  2472   00431E  EFA6  F021         	goto	l573
  2473   004322                     u5480:
  2474   004322                     
  2475                           ;dc_motor.c: 382:                 Turn45Delay+=10;
  2476   004322  0E0A               	movlw	10
  2477   004324  0100               	movlb	0	; () banked
  2478   004326  27F2               	addwf	_Turn45Delay& (0+255),f,b
  2479   004328  0E00               	movlw	0
  2480   00432A  23F3               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2481   00432C                     
  2482                           ; BSR set to: 0
  2483                           ;dc_motor.c: 383:                 LATHbits.LATH3=1;
  2484   00432C  8680               	bsf	128,3,c	;volatile
  2485   00432E                     
  2486                           ; BSR set to: 0
  2487                           ;dc_motor.c: 384:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2488   00432E  0E52               	movlw	82
  2489   004330  6E25               	movwf	(??_turnCalibration+1)^0,c
  2490   004332  0E2B               	movlw	43
  2491   004334  6E24               	movwf	??_turnCalibration^0,c
  2492   004336  0E00               	movlw	0
  2493   004338                     u5927:
  2494   004338  2EE8               	decfsz	wreg,f,c
  2495   00433A  D7FE               	bra	u5927
  2496   00433C  2E24               	decfsz	??_turnCalibration^0,f,c
  2497   00433E  D7FC               	bra	u5927
  2498   004340  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2499   004342  D7FA               	bra	u5927
  2500   004344  D000               	nop2	
  2501   004346                     
  2502                           ;dc_motor.c: 385:                 LATHbits.LATH3=0;
  2503   004346  9680               	bcf	128,3,c	;volatile
  2504                           
  2505                           ;dc_motor.c: 386:             }
  2506   004348  EFC2  F021         	goto	l5534
  2507   00434C                     l573:
  2508   00434C  B48E               	btfsc	142,2,c	;volatile
  2509   00434E  EFAB  F021         	goto	u5491
  2510   004352  EFAD  F021         	goto	u5490
  2511   004356                     u5491:
  2512   004356  EFC2  F021         	goto	l572
  2513   00435A                     u5490:
  2514   00435A                     
  2515                           ;dc_motor.c: 389:                 Turn45Delay-=10;
  2516   00435A  0100               	movlb	0	; () banked
  2517   00435C  0EF6               	movlw	246
  2518   00435E  27F2               	addwf	_Turn45Delay& (0+255),f,b
  2519   004360  0EFF               	movlw	255
  2520   004362  23F3               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2521   004364                     
  2522                           ; BSR set to: 0
  2523                           ;dc_motor.c: 390:                 LATDbits.LATD7=1;
  2524   004364  8E7C               	bsf	124,7,c	;volatile
  2525   004366                     
  2526                           ; BSR set to: 0
  2527                           ;dc_motor.c: 391:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2528   004366  0E52               	movlw	82
  2529   004368  6E25               	movwf	(??_turnCalibration+1)^0,c
  2530   00436A  0E2B               	movlw	43
  2531   00436C  6E24               	movwf	??_turnCalibration^0,c
  2532   00436E  0E00               	movlw	0
  2533   004370                     u5937:
  2534   004370  2EE8               	decfsz	wreg,f,c
  2535   004372  D7FE               	bra	u5937
  2536   004374  2E24               	decfsz	??_turnCalibration^0,f,c
  2537   004376  D7FC               	bra	u5937
  2538   004378  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2539   00437A  D7FA               	bra	u5937
  2540   00437C  D000               	nop2	
  2541   00437E                     
  2542                           ;dc_motor.c: 392:                 LATDbits.LATD7=0;
  2543   00437E  9E7C               	bcf	124,7,c	;volatile
  2544   004380  EFC2  F021         	goto	l5534
  2545   004384                     l572:
  2546   004384                     l5534:
  2547                           
  2548                           ;dc_motor.c: 368:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2549   004384  A48E               	btfss	142,2,c	;volatile
  2550   004386  EFC7  F021         	goto	u5501
  2551   00438A  EFC9  F021         	goto	u5500
  2552   00438E                     u5501:
  2553   00438E  EFD0  F021         	goto	l578
  2554   004392                     u5500:
  2555   004392  B68E               	btfsc	142,3,c	;volatile
  2556   004394  EFCE  F021         	goto	u5511
  2557   004398  EFD0  F021         	goto	u5510
  2558   00439C                     u5511:
  2559   00439C  EF50  F021         	goto	l570
  2560   0043A0                     u5510:
  2561   0043A0                     l578:
  2562                           
  2563                           ;dc_motor.c: 395:         LATDbits.LATD4=0;
  2564   0043A0  987C               	bcf	124,4,c	;volatile
  2565   0043A2                     
  2566                           ;dc_motor.c: 396:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2567   0043A2  0EA3               	movlw	163
  2568   0043A4  6E25               	movwf	(??_turnCalibration+1)^0,c
  2569   0043A6  0E57               	movlw	87
  2570   0043A8  6E24               	movwf	??_turnCalibration^0,c
  2571   0043AA  0E02               	movlw	2
  2572   0043AC                     u5947:
  2573   0043AC  2EE8               	decfsz	wreg,f,c
  2574   0043AE  D7FE               	bra	u5947
  2575   0043B0  2E24               	decfsz	??_turnCalibration^0,f,c
  2576   0043B2  D7FC               	bra	u5947
  2577   0043B4  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2578   0043B6  D7FA               	bra	u5947
  2579   0043B8  D000               	nop2	
  2580   0043BA                     l567:
  2581                           
  2582                           ;dc_motor.c: 360:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2583   0043BA  A68E               	btfss	142,3,c	;volatile
  2584   0043BC  EFE2  F021         	goto	u5521
  2585   0043C0  EFE5  F021         	goto	u5520
  2586   0043C4                     u5521:
  2587   0043C4  0E01               	movlw	1
  2588   0043C6  EFE6  F021         	goto	u5522
  2589   0043CA                     u5520:
  2590   0043CA  0E00               	movlw	0
  2591   0043CC                     u5522:
  2592   0043CC  6E24               	movwf	??_turnCalibration^0,c
  2593   0043CE  A48E               	btfss	142,2,c	;volatile
  2594   0043D0  EFEC  F021         	goto	u5531
  2595   0043D4  EFEF  F021         	goto	u5530
  2596   0043D8                     u5531:
  2597   0043D8  0E01               	movlw	1
  2598   0043DA  EFF0  F021         	goto	u5532
  2599   0043DE                     u5530:
  2600   0043DE  0E00               	movlw	0
  2601   0043E0                     u5532:
  2602   0043E0  1424               	andwf	??_turnCalibration^0,w,c
  2603   0043E2  A0E8               	btfss	wreg,0,c
  2604   0043E4  EFF6  F021         	goto	u5541
  2605   0043E8  EFF8  F021         	goto	u5540
  2606   0043EC                     u5541:
  2607   0043EC  EF25  F021         	goto	l568
  2608   0043F0                     u5540:
  2609   0043F0                     
  2610                           ;dc_motor.c: 398:     LATDbits.LATD3=0;
  2611   0043F0  967C               	bcf	124,3,c	;volatile
  2612   0043F2                     
  2613                           ;dc_motor.c: 399:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2614   0043F2  0EA3               	movlw	163
  2615   0043F4  6E25               	movwf	(??_turnCalibration+1)^0,c
  2616   0043F6  0E57               	movlw	87
  2617   0043F8  6E24               	movwf	??_turnCalibration^0,c
  2618   0043FA  0E02               	movlw	2
  2619   0043FC                     u5957:
  2620   0043FC  2EE8               	decfsz	wreg,f,c
  2621   0043FE  D7FE               	bra	u5957
  2622   004400  2E24               	decfsz	??_turnCalibration^0,f,c
  2623   004402  D7FC               	bra	u5957
  2624   004404  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2625   004406  D7FA               	bra	u5957
  2626   004408  D000               	nop2	
  2627   00440A  0012               	return		;funcret
  2628   00440C                     __end_of_turnCalibration:
  2629                           	callstack 0
  2630                           
  2631 ;; *************** function _sprintf *****************
  2632 ;; Defined at:
  2633 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2636 ;;		 -> main@buf(100), 
  2637 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2638 ;;		 -> STR_1(51), 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2641 ;;  ap              2  100[BANK0 ] PTR void [1]
  2642 ;;		 -> ?_sprintf(2), 
  2643 ;;  ret             2    0        int 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  2   80[BANK0 ] int 
  2646 ;; Registers used:
  2647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2653 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2654 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2656 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2657 ;;Total ram usage:       33 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 8
  2660 ;; This function calls:
  2661 ;;		_vfprintf
  2662 ;; This function is called by:
  2663 ;;		_main
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text2
  2668   005868                     __ptext2:
  2669                           	callstack 0
  2670   005868                     _sprintf:
  2671                           	callstack 22
  2672   005868  0EB4               	movlw	low (?_sprintf+4)
  2673   00586A  0100               	movlb	0	; () banked
  2674   00586C  6FC4               	movwf	sprintf@ap& (0+255),b
  2675   00586E  0E00               	movlw	high (?_sprintf+4)
  2676   005870  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2677   005872  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2678   005876  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2679   00587A                     
  2680                           ; BSR set to: 0
  2681   00587A  0E00               	movlw	0
  2682   00587C  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2683   00587E  0E00               	movlw	0
  2684   005880  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2685   005882                     
  2686                           ; BSR set to: 0
  2687   005882  0E00               	movlw	0
  2688   005884  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2689   005886  0E00               	movlw	0
  2690   005888  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2691   00588A                     
  2692                           ; BSR set to: 0
  2693   00588A  0EC6               	movlw	low sprintf@f
  2694   00588C  6FA8               	movwf	vfprintf@fp& (0+255),b
  2695   00588E  0E00               	movlw	high sprintf@f
  2696   005890  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2697   005892  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2698   005896  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2699   00589A  0EC4               	movlw	low sprintf@ap
  2700   00589C  6FAC               	movwf	vfprintf@ap& (0+255),b
  2701   00589E  0E00               	movlw	high sprintf@ap
  2702   0058A0  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2703   0058A2  EC09  F02C         	call	_vfprintf	;wreg free
  2704   0058A6  0100               	movlb	0	; () banked
  2705   0058A8  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2706   0058AA  25B0               	addwf	sprintf@s& (0+255),w,b
  2707   0058AC  6ED9               	movwf	fsr2l,c
  2708   0058AE  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2709   0058B0  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2710   0058B2  6EDA               	movwf	fsr2h,c
  2711   0058B4  0E00               	movlw	0
  2712   0058B6  6EDF               	movwf	indf2,c
  2713   0058B8                     
  2714                           ; BSR set to: 0
  2715   0058B8  0012               	return		;funcret
  2716   0058BA                     __end_of_sprintf:
  2717                           	callstack 0
  2718                           
  2719 ;; *************** function _vfprintf *****************
  2720 ;; Defined at:
  2721 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2724 ;;		 -> sprintf@f(11), 
  2725 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2726 ;;		 -> STR_1(51), 
  2727 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2728 ;;		 -> sprintf@ap(2), 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2731 ;;		 -> STR_1(51), 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  2   72[BANK0 ] int 
  2734 ;; Registers used:
  2735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2741 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2742 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2744 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2745 ;;Total ram usage:        8 bytes
  2746 ;; Hardware stack levels used: 1
  2747 ;; Hardware stack levels required when called: 7
  2748 ;; This function calls:
  2749 ;;		_vfpfcnvrt
  2750 ;; This function is called by:
  2751 ;;		_sprintf
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text3
  2756   005812                     __ptext3:
  2757                           	callstack 0
  2758   005812                     _vfprintf:
  2759                           	callstack 22
  2760   005812                     
  2761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2762   005812  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2763   005816  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2764                           
  2765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2766   00581A  EF1E  F02C         	goto	l5222
  2767   00581E                     l5220:
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2770   00581E  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2771   005822  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2772   005826  0EAE               	movlw	low vfprintf@cfmt
  2773   005828  0100               	movlb	0	; () banked
  2774   00582A  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2775   00582C  0E00               	movlw	high vfprintf@cfmt
  2776   00582E  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2777   005830  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2778   005834  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2779   005838  ECDB  F01B         	call	_vfpfcnvrt	;wreg free
  2780   00583C                     l5222:
  2781                           
  2782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2783   00583C  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2784   005840  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2785   005844                     	if	0	;tblptru may be non-zero
  2786   005844                     	endif
  2787   005844                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2788   005844  0E00               	movlw	low (__mediumconst shr (0+16))
  2789   005846  6EF8               	movwf	tblptru,c
  2790   005848                     	endif
  2791   005848  0008               	tblrd		*
  2792   00584A  50F5               	movf	tablat,w,c
  2793   00584C  0900               	iorlw	0
  2794   00584E  A4D8               	btfss	status,2,c
  2795   005850  EF2C  F02C         	goto	u5121
  2796   005854  EF2E  F02C         	goto	u5120
  2797   005858                     u5121:
  2798   005858  EF0F  F02C         	goto	l5220
  2799   00585C                     u5120:
  2800   00585C                     
  2801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2802   00585C  0E00               	movlw	0
  2803   00585E  0100               	movlb	0	; () banked
  2804   005860  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2805   005862  0E00               	movlw	0
  2806   005864  6FA8               	movwf	?_vfprintf& (0+255),b
  2807   005866                     
  2808                           ; BSR set to: 0
  2809   005866  0012               	return		;funcret
  2810   005868                     __end_of_vfprintf:
  2811                           	callstack 0
  2812                           
  2813 ;; *************** function _vfpfcnvrt *****************
  2814 ;; Defined at:
  2815 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2818 ;;		 -> sprintf@f(11), 
  2819 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2820 ;;		 -> vfprintf@cfmt(2), 
  2821 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2822 ;;		 -> sprintf@ap(2), 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  convarg         8   61[BANK0 ] struct .
  2825 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2826 ;;		 -> STR_1(51), 
  2827 ;;  i               2    0        int 
  2828 ;;  done            2    0        int 
  2829 ;;  c               1   69[BANK0 ] unsigned char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2839 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2840 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2841 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2842 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2843 ;;Total ram usage:       19 bytes
  2844 ;; Hardware stack levels used: 1
  2845 ;; Hardware stack levels required when called: 6
  2846 ;; This function calls:
  2847 ;;		_dtoa
  2848 ;;		_efgtoa
  2849 ;;		_fputc
  2850 ;; This function is called by:
  2851 ;;		_vfprintf
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text4
  2856   0037B6                     __ptext4:
  2857                           	callstack 0
  2858   0037B6                     _vfpfcnvrt:
  2859                           	callstack 22
  2860   0037B6                     
  2861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2862   0037B6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2863   0037BA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2864   0037BE  CFDE FFF6          	movff	postinc2,tblptrl
  2865   0037C2  CFDD FFF7          	movff	postdec2,tblptrh
  2866   0037C6                     	if	0	;tblptru may be non-zero
  2867   0037C6                     	endif
  2868   0037C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2869   0037C6  0E00               	movlw	low (__mediumconst shr (0+16))
  2870   0037C8  6EF8               	movwf	tblptru,c
  2871   0037CA                     	endif
  2872   0037CA  0008               	tblrd		*
  2873   0037CC  50F5               	movf	tablat,w,c
  2874   0037CE  0A25               	xorlw	37
  2875   0037D0  A4D8               	btfss	status,2,c
  2876   0037D2  EFED  F01B         	goto	u4951
  2877   0037D6  EFEF  F01B         	goto	u4950
  2878   0037DA                     u4951:
  2879   0037DA  EF47  F01D         	goto	l5070
  2880   0037DE                     u4950:
  2881   0037DE                     
  2882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2883   0037DE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2884   0037E2  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2885   0037E6  2ADE               	incf	postinc2,f,c
  2886   0037E8  0E00               	movlw	0
  2887   0037EA  22DD               	addwfc	postdec2,f,c
  2888   0037EC                     
  2889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2890   0037EC  0E00               	movlw	0
  2891   0037EE  0100               	movlb	0	; () banked
  2892   0037F0  6FE8               	movwf	(_width+1)& (0+255),b
  2893   0037F2  0E00               	movlw	0
  2894   0037F4  6FE7               	movwf	_width& (0+255),b
  2895   0037F6  C0E7  F0EB         	movff	_width,_flags
  2896   0037FA                     
  2897                           ; BSR set to: 0
  2898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2899   0037FA  69E9               	setf	_prec& (0+255),b
  2900   0037FC  69EA               	setf	(_prec+1)& (0+255),b
  2901   0037FE                     
  2902                           ; BSR set to: 0
  2903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2904   0037FE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2905   003802  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2906   003806  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2907   00380A  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2908   00380E                     
  2909                           ; BSR set to: 0
  2910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2911   00380E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2912   003812  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2913   003816                     	if	0	;tblptru may be non-zero
  2914   003816                     	endif
  2915   003816                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2916   003816  0E00               	movlw	low (__mediumconst shr (0+16))
  2917   003818  6EF8               	movwf	tblptru,c
  2918   00381A                     	endif
  2919   00381A  0008               	tblrd		*
  2920   00381C  50F5               	movf	tablat,w,c
  2921   00381E  0A64               	xorlw	100
  2922   003820  B4D8               	btfsc	status,2,c
  2923   003822  EF15  F01C         	goto	u4961
  2924   003826  EF17  F01C         	goto	u4960
  2925   00382A                     u4961:
  2926   00382A  EF27  F01C         	goto	l5026
  2927   00382E                     u4960:
  2928   00382E                     
  2929                           ; BSR set to: 0
  2930   00382E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2931   003832  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2932   003836                     	if	0	;tblptru may be non-zero
  2933   003836                     	endif
  2934   003836                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2935   003836  0E00               	movlw	low (__mediumconst shr (0+16))
  2936   003838  6EF8               	movwf	tblptru,c
  2937   00383A                     	endif
  2938   00383A  0008               	tblrd		*
  2939   00383C  50F5               	movf	tablat,w,c
  2940   00383E  0A69               	xorlw	105
  2941   003840  A4D8               	btfss	status,2,c
  2942   003842  EF25  F01C         	goto	u4971
  2943   003846  EF27  F01C         	goto	u4970
  2944   00384A                     u4971:
  2945   00384A  EF6A  F01C         	goto	l5032
  2946   00384E                     u4970:
  2947   00384E                     l5026:
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2951   00384E  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2952   003852  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2953   003856  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2954   00385A  0E02               	movlw	2
  2955   00385C  26DE               	addwf	postinc2,f,c
  2956   00385E  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2957   003862  0E00               	movlw	0
  2958   003864  22DD               	addwfc	postdec2,f,c
  2959   003866  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2960   00386A  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2961   00386E  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2962   003872  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2963   003876  0E00               	movlw	0
  2964   003878  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2965   00387A  0EFF               	movlw	-1
  2966   00387C  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2967   00387E  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2968   003880  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2969   003882  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2970   003884  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2971   003886  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2974   003888  0E01               	movlw	1
  2975   00388A  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2976   00388C  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2977   00388E  0E00               	movlw	0
  2978   003890  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2979   003892  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2980   003894  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2981   003898  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2982   00389C  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2983   0038A0  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2984   0038A4                     
  2985                           ; BSR set to: 0
  2986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2987   0038A4  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2988   0038A8  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2989   0038AC  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2990   0038B0  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2991   0038B4  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2992   0038B8  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2993   0038BC  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2994   0038C0  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2995   0038C4  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2996   0038C8  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2997   0038CC  ECCE  F01E         	call	_dtoa	;wreg free
  2998   0038D0  EF5D  F01D         	goto	l1465
  2999   0038D4                     l5032:
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3003   0038D4  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3004   0038D8  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3005   0038DC  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  3006   0038E0  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  3007   0038E4                     
  3008                           ; BSR set to: 0
  3009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3010   0038E4  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3011   0038E8  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3012   0038EC                     	if	0	;tblptru may be non-zero
  3013   0038EC                     	endif
  3014   0038EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3015   0038EC  0E00               	movlw	low (__mediumconst shr (0+16))
  3016   0038EE  6EF8               	movwf	tblptru,c
  3017   0038F0                     	endif
  3018   0038F0  0008               	tblrd		*
  3019   0038F2  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  3020                           
  3021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3022   0038F6  EF89  F01C         	goto	l5044
  3023   0038FA                     l5036:
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3027   0038FA  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3028   0038FC  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3029                           
  3030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3031   0038FE  EFA2  F01C         	goto	l5046
  3032   003902                     l5038:
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3036   003902  0E6C               	movlw	108
  3037   003904  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3038                           
  3039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3040   003906  EFA2  F01C         	goto	l5046
  3041   00390A                     l5040:
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3045   00390A  0E00               	movlw	0
  3046   00390C  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3047                           
  3048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3049   00390E  EFA2  F01C         	goto	l5046
  3050   003912                     l5044:
  3051                           
  3052                           ; BSR set to: 0
  3053   003912  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3054   003914  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3055   003916  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3056                           
  3057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3058                           ; Switch size 1, requested type "simple"
  3059                           ; Number of cases is 1, Range of values is 0 to 0
  3060                           ; switch strategies available:
  3061                           ; Name         Instructions Cycles
  3062                           ; simple_byte            4     3 (average)
  3063                           ;	Chosen strategy is simple_byte
  3064   003918  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3065   00391A  0A00               	xorlw	0	; case 0
  3066   00391C  B4D8               	btfsc	status,2,c
  3067   00391E  EF93  F01C         	goto	l6020
  3068   003922  EF85  F01C         	goto	l5040
  3069   003926                     l6020:
  3070                           
  3071                           ; BSR set to: 0
  3072                           ; Switch size 1, requested type "simple"
  3073                           ; Number of cases is 3, Range of values is 76 to 108
  3074                           ; switch strategies available:
  3075                           ; Name         Instructions Cycles
  3076                           ; simple_byte           10     6 (average)
  3077                           ;	Chosen strategy is simple_byte
  3078   003926  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3079   003928  0A4C               	xorlw	76	; case 76
  3080   00392A  B4D8               	btfsc	status,2,c
  3081   00392C  EF7D  F01C         	goto	l5036
  3082   003930  0A2A               	xorlw	42	; case 102
  3083   003932  B4D8               	btfsc	status,2,c
  3084   003934  EF81  F01C         	goto	l5038
  3085   003938  0A0A               	xorlw	10	; case 108
  3086   00393A  B4D8               	btfsc	status,2,c
  3087   00393C  EF7D  F01C         	goto	l5036
  3088   003940  EF85  F01C         	goto	l5040
  3089   003944                     l5046:
  3090                           
  3091                           ; BSR set to: 0
  3092   003944  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3093   003948  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3094   00394C                     	if	0	;tblptru may be non-zero
  3095   00394C                     	endif
  3096   00394C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3097   00394C  0E00               	movlw	low (__mediumconst shr (0+16))
  3098   00394E  6EF8               	movwf	tblptru,c
  3099   003950                     	endif
  3100   003950  0008               	tblrd		*
  3101   003952  50F5               	movf	tablat,w,c
  3102   003954  0A66               	xorlw	102
  3103   003956  A4D8               	btfss	status,2,c
  3104   003958  EFB0  F01C         	goto	u4981
  3105   00395C  EFB2  F01C         	goto	u4980
  3106   003960                     u4981:
  3107   003960  EF3E  F01D         	goto	l5066
  3108   003964                     u4980:
  3109   003964  EFE8  F01C         	goto	l5054
  3110   003968                     l5048:
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3114   003968  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3115   00396C  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3116   003970  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3117   003974  0E04               	movlw	4
  3118   003976  26DE               	addwf	postinc2,f,c
  3119   003978  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3120   00397C  0E00               	movlw	0
  3121   00397E  22DD               	addwfc	postdec2,f,c
  3122   003980  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3123   003984  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3124   003988  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3125   00398C  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3126   003990  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3127   003994  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3128                           
  3129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3130   003998  EFFD  F01C         	goto	l5056
  3131   00399C                     l5050:
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3135   00399C  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3136   0039A0  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3137   0039A4  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3138   0039A8  0E04               	movlw	4
  3139   0039AA  26DE               	addwf	postinc2,f,c
  3140   0039AC  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3141   0039B0  0E00               	movlw	0
  3142   0039B2  22DD               	addwfc	postdec2,f,c
  3143   0039B4  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3144   0039B8  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3145   0039BC  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3146   0039C0  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3147   0039C4  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3148   0039C8  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3149                           
  3150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3151   0039CC  EFFD  F01C         	goto	l5056
  3152   0039D0                     l5054:
  3153                           
  3154                           ; BSR set to: 0
  3155   0039D0  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3156   0039D2  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3157   0039D4  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3158                           
  3159                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3160                           ; Switch size 1, requested type "simple"
  3161                           ; Number of cases is 1, Range of values is 0 to 0
  3162                           ; switch strategies available:
  3163                           ; Name         Instructions Cycles
  3164                           ; simple_byte            4     3 (average)
  3165                           ;	Chosen strategy is simple_byte
  3166   0039D6  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3167   0039D8  0A00               	xorlw	0	; case 0
  3168   0039DA  B4D8               	btfsc	status,2,c
  3169   0039DC  EFF2  F01C         	goto	l6022
  3170   0039E0  EFFD  F01C         	goto	l5056
  3171   0039E4                     l6022:
  3172                           
  3173                           ; BSR set to: 0
  3174                           ; Switch size 1, requested type "simple"
  3175                           ; Number of cases is 2, Range of values is 76 to 108
  3176                           ; switch strategies available:
  3177                           ; Name         Instructions Cycles
  3178                           ; simple_byte            7     4 (average)
  3179                           ;	Chosen strategy is simple_byte
  3180   0039E4  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3181   0039E6  0A4C               	xorlw	76	; case 76
  3182   0039E8  B4D8               	btfsc	status,2,c
  3183   0039EA  EFCE  F01C         	goto	l5050
  3184   0039EE  0A20               	xorlw	32	; case 108
  3185   0039F0  B4D8               	btfsc	status,2,c
  3186   0039F2  EFB4  F01C         	goto	l5048
  3187   0039F6  EFFD  F01C         	goto	l5056
  3188   0039FA                     l5056:
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3192   0039FA  0E01               	movlw	1
  3193   0039FC  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3194   0039FE  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3195   003A00  0E00               	movlw	0
  3196   003A02  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3197   003A04  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3198   003A06  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3199   003A0A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3200   003A0E  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3201   003A12  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3202                           
  3203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3204   003A16  EF26  F01D         	goto	l5064
  3205   003A1A                     l5058:
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3209   003A1A  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3210   003A1E  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3211   003A22  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  3212   003A26  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3213   003A2A  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3214   003A2E  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3215   003A32  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3216   003A36  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3217   003A3A                     	if	0	;tblptru may be non-zero
  3218   003A3A                     	endif
  3219   003A3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3220   003A3A  0E00               	movlw	low (__mediumconst shr (0+16))
  3221   003A3C  6EF8               	movwf	tblptru,c
  3222   003A3E                     	endif
  3223   003A3E  0008               	tblrd		*
  3224   003A40  CFF5 F066          	movff	tablat,efgtoa@c
  3225   003A44  EC4F  F00C         	call	_efgtoa	;wreg free
  3226   003A48  EF5D  F01D         	goto	l1465
  3227   003A4C                     l5064:
  3228                           
  3229                           ; BSR set to: 0
  3230   003A4C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3231   003A50  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3232   003A54                     	if	0	;tblptru may be non-zero
  3233   003A54                     	endif
  3234   003A54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3235   003A54  0E00               	movlw	low (__mediumconst shr (0+16))
  3236   003A56  6EF8               	movwf	tblptru,c
  3237   003A58                     	endif
  3238   003A58  0008               	tblrd		*
  3239   003A5A  50F5               	movf	tablat,w,c
  3240   003A5C  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3241   003A5E  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3242                           
  3243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3244                           ; Switch size 1, requested type "simple"
  3245                           ; Number of cases is 1, Range of values is 0 to 0
  3246                           ; switch strategies available:
  3247                           ; Name         Instructions Cycles
  3248                           ; simple_byte            4     3 (average)
  3249                           ;	Chosen strategy is simple_byte
  3250   003A60  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3251   003A62  0A00               	xorlw	0	; case 0
  3252   003A64  B4D8               	btfsc	status,2,c
  3253   003A66  EF37  F01D         	goto	l6024
  3254   003A6A  EF3E  F01D         	goto	l5066
  3255   003A6E                     l6024:
  3256                           
  3257                           ; BSR set to: 0
  3258                           ; Switch size 1, requested type "simple"
  3259                           ; Number of cases is 1, Range of values is 102 to 102
  3260                           ; switch strategies available:
  3261                           ; Name         Instructions Cycles
  3262                           ; simple_byte            4     3 (average)
  3263                           ;	Chosen strategy is simple_byte
  3264   003A6E  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3265   003A70  0A66               	xorlw	102	; case 102
  3266   003A72  B4D8               	btfsc	status,2,c
  3267   003A74  EF0D  F01D         	goto	l5058
  3268   003A78  EF3E  F01D         	goto	l5066
  3269   003A7C                     l5066:
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3272   003A7C  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3273   003A80  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3274   003A84  2ADE               	incf	postinc2,f,c
  3275   003A86  0E00               	movlw	0
  3276   003A88  22DD               	addwfc	postdec2,f,c
  3277   003A8A  EF5D  F01D         	goto	l1465
  3278   003A8E                     l5070:
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3281   003A8E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3282   003A92  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3283   003A96  CFDE FFF6          	movff	postinc2,tblptrl
  3284   003A9A  CFDD FFF7          	movff	postdec2,tblptrh
  3285   003A9E                     	if	0	;tblptru may be non-zero
  3286   003A9E                     	endif
  3287   003A9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3288   003A9E  0E00               	movlw	low (__mediumconst shr (0+16))
  3289   003AA0  6EF8               	movwf	tblptru,c
  3290   003AA2                     	endif
  3291   003AA2  0008               	tblrd		*
  3292   003AA4  50F5               	movf	tablat,w,c
  3293   003AA6  6E01               	movwf	fputc@c^0,c
  3294   003AA8  6A02               	clrf	(fputc@c+1)^0,c
  3295   003AAA  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3296   003AAE  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3297   003AB2  EC90  F026         	call	_fputc	;wreg free
  3298   003AB6  EF3E  F01D         	goto	l5066
  3299   003ABA                     l1465:
  3300   003ABA  0012               	return		;funcret
  3301   003ABC                     __end_of_vfpfcnvrt:
  3302                           	callstack 0
  3303                           
  3304 ;; *************** function _efgtoa *****************
  3305 ;; Defined at:
  3306 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3309 ;;		 -> sprintf@f(11), 
  3310 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  3311 ;;  c               1    6[BANK0 ] unsigned char 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  u               4   49[BANK0 ] struct flui
  3314 ;;  g               4   45[BANK0 ] struct flui
  3315 ;;  l               4   38[BANK0 ] struct flui
  3316 ;;  h               4   34[BANK0 ] struct flui
  3317 ;;  ou              4   28[BANK0 ] struct flui
  3318 ;;  n               2   43[BANK0 ] int 
  3319 ;;  i               2   32[BANK0 ] int 
  3320 ;;  w               2   26[BANK0 ] int 
  3321 ;;  e               2   24[BANK0 ] int 
  3322 ;;  m               2   22[BANK0 ] int 
  3323 ;;  d               2   20[BANK0 ] int 
  3324 ;;  t               2   13[BANK0 ] int 
  3325 ;;  p               2   11[BANK0 ] int 
  3326 ;;  ne              2    9[BANK0 ] int 
  3327 ;;  sign            1   42[BANK0 ] unsigned char 
  3328 ;;  nmode           1   19[BANK0 ] unsigned char 
  3329 ;;  mode            1   18[BANK0 ] unsigned char 
  3330 ;;  pp              1   17[BANK0 ] unsigned char 
  3331 ;;  esign           1    0        unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3341 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3342 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3343 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3344 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3345 ;;Total ram usage:       53 bytes
  3346 ;; Hardware stack levels used: 1
  3347 ;; Hardware stack levels required when called: 5
  3348 ;; This function calls:
  3349 ;;		___fladd
  3350 ;;		___fldiv
  3351 ;;		___fleq
  3352 ;;		___flge
  3353 ;;		___flmul
  3354 ;;		___flneg
  3355 ;;		___flsub
  3356 ;;		___fltol
  3357 ;;		___fpclassifyf
  3358 ;;		_floorf
  3359 ;;		_labs
  3360 ;;		_memcpy
  3361 ;;		_pad
  3362 ;;		_strcpy
  3363 ;; This function is called by:
  3364 ;;		_vfpfcnvrt
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           	psect	text5
  3369   00189E                     __ptext5:
  3370                           	callstack 0
  3371   00189E                     _efgtoa:
  3372                           	callstack 22
  3373   00189E                     
  3374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3375   00189E  0E00               	movlw	0
  3376   0018A0  0100               	movlb	0	; () banked
  3377   0018A2  6F8A               	movwf	efgtoa@sign& (0+255),b
  3378   0018A4                     
  3379                           ; BSR set to: 0
  3380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3381   0018A4  C062  F08D         	movff	efgtoa@f,efgtoa@g
  3382   0018A8  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  3383   0018AC  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  3384   0018B0  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  3385   0018B4                     
  3386                           ; BSR set to: 0
  3387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3388   0018B4  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3389   0018B6  EF61  F00C         	goto	u4600
  3390   0018BA  EF5F  F00C         	goto	u4601
  3391   0018BE                     u4601:
  3392   0018BE  EF75  F00C         	goto	l4736
  3393   0018C2                     u4600:
  3394   0018C2                     
  3395                           ; BSR set to: 0
  3396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3397   0018C2  0E01               	movlw	1
  3398   0018C4  6F8A               	movwf	efgtoa@sign& (0+255),b
  3399   0018C6                     
  3400                           ; BSR set to: 0
  3401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3402   0018C6  C08D  F001         	movff	efgtoa@g,___flneg@f1
  3403   0018CA  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3404   0018CE  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3405   0018D2  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3406   0018D6  EC4D  F02F         	call	___flneg	;wreg free
  3407   0018DA  C001  F08D         	movff	?___flneg,efgtoa@g
  3408   0018DE  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  3409   0018E2  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  3410   0018E6  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  3411   0018EA                     l4736:
  3412                           
  3413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3414   0018EA  0E00               	movlw	0
  3415   0018EC  0100               	movlb	0	; () banked
  3416   0018EE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3417   0018F0  0E00               	movlw	0
  3418   0018F2  6F8B               	movwf	efgtoa@n& (0+255),b
  3419   0018F4                     
  3420                           ; BSR set to: 0
  3421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3422   0018F4  C0E7  F07A         	movff	_width,efgtoa@w
  3423   0018F8  C0E8  F07B         	movff	_width+1,efgtoa@w+1
  3424   0018FC                     
  3425                           ; BSR set to: 0
  3426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3427   0018FC  518A               	movf	efgtoa@sign& (0+255),w,b
  3428   0018FE  B4D8               	btfsc	status,2,c
  3429   001900  EF84  F00C         	goto	u4611
  3430   001904  EF86  F00C         	goto	u4610
  3431   001908                     u4611:
  3432   001908  EF9A  F00C         	goto	l4750
  3433   00190C                     u4610:
  3434   00190C                     
  3435                           ; BSR set to: 0
  3436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3437   00190C  518A               	movf	efgtoa@sign& (0+255),w,b
  3438   00190E  A4D8               	btfss	status,2,c
  3439   001910  EF8C  F00C         	goto	u4621
  3440   001914  EF8E  F00C         	goto	u4620
  3441   001918                     u4621:
  3442   001918  EF94  F00C         	goto	l4746
  3443   00191C                     u4620:
  3444   00191C                     
  3445                           ; BSR set to: 0
  3446   00191C  0E00               	movlw	0
  3447   00191E  6F70               	movwf	(_efgtoa$2852+1)& (0+255),b
  3448   001920  0E2B               	movlw	43
  3449   001922  6F6F               	movwf	_efgtoa$2852& (0+255),b
  3450   001924  EF98  F00C         	goto	l4748
  3451   001928                     l4746:
  3452                           
  3453                           ; BSR set to: 0
  3454   001928  0E00               	movlw	0
  3455   00192A  6F70               	movwf	(_efgtoa$2852+1)& (0+255),b
  3456   00192C  0E2D               	movlw	45
  3457   00192E  6F6F               	movwf	_efgtoa$2852& (0+255),b
  3458   001930                     l4748:
  3459                           
  3460                           ; BSR set to: 0
  3461   001930  C06F  F08A         	movff	_efgtoa$2852,efgtoa@sign
  3462   001934                     l4750:
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3466   001934  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3467   001938  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3468   00193C  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3469   001940  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3470   001944  EC11  F026         	call	___fpclassifyf	;wreg free
  3471   001948  0401               	decf	?___fpclassifyf^0,w,c
  3472   00194A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3473   00194C  A4D8               	btfss	status,2,c
  3474   00194E  EFAB  F00C         	goto	u4631
  3475   001952  EFAD  F00C         	goto	u4630
  3476   001956                     u4631:
  3477   001956  EFE0  F00C         	goto	l4768
  3478   00195A                     u4630:
  3479   00195A                     
  3480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3481   00195A  0100               	movlb	0	; () banked
  3482   00195C  518A               	movf	efgtoa@sign& (0+255),w,b
  3483   00195E  B4D8               	btfsc	status,2,c
  3484   001960  EFB4  F00C         	goto	u4641
  3485   001964  EFB6  F00C         	goto	u4640
  3486   001968                     u4641:
  3487   001968  EFBF  F00C         	goto	l4760
  3488   00196C                     u4640:
  3489   00196C                     
  3490                           ; BSR set to: 0
  3491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3492   00196C  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3493   001970                     
  3494                           ; BSR set to: 0
  3495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3496   001970  077A               	decf	efgtoa@w& (0+255),f,b
  3497   001972  A0D8               	btfss	status,0,c
  3498   001974  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3499   001976                     
  3500                           ; BSR set to: 0
  3501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3502   001976  0E00               	movlw	0
  3503   001978  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3504   00197A  0E01               	movlw	1
  3505   00197C  6F8B               	movwf	efgtoa@n& (0+255),b
  3506   00197E                     l4760:
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3510   00197E  0EA0               	movlw	low _dbuf
  3511   001980  258B               	addwf	efgtoa@n& (0+255),w,b
  3512   001982  6E01               	movwf	strcpy@dest^0,c
  3513   001984  0E02               	movlw	high _dbuf
  3514   001986  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3515   001988  6E02               	movwf	(strcpy@dest+1)^0,c
  3516   00198A  0E34               	movlw	low STR_2
  3517   00198C  6E03               	movwf	strcpy@src^0,c
  3518   00198E  0E0E               	movlw	high STR_2
  3519   001990  6E04               	movwf	(strcpy@src+1)^0,c
  3520   001992  EC8A  F02E         	call	_strcpy	;wreg free
  3521   001996                     l4762:
  3522                           
  3523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3524   001996  0100               	movlb	0	; () banked
  3525   001998  0EFD               	movlw	253
  3526   00199A  277A               	addwf	efgtoa@w& (0+255),f,b
  3527   00199C  0EFF               	movlw	255
  3528   00199E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3529   0019A0                     
  3530                           ; BSR set to: 0
  3531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3532   0019A0  C060  F011         	movff	efgtoa@fp,pad@fp
  3533   0019A4  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3534   0019A8  0EA0               	movlw	low _dbuf
  3535   0019AA  6E13               	movwf	pad@buf^0,c
  3536   0019AC  0E02               	movlw	high _dbuf
  3537   0019AE  6E14               	movwf	(pad@buf+1)^0,c
  3538   0019B0  C07A  F015         	movff	efgtoa@w,pad@p
  3539   0019B4  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3540   0019B8  EC14  F02A         	call	_pad	;wreg free
  3541   0019BC  EF4B  F011         	goto	l1417
  3542   0019C0                     l4768:
  3543                           
  3544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3545   0019C0  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3546   0019C4  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3547   0019C8  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3548   0019CC  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3549   0019D0  EC11  F026         	call	___fpclassifyf	;wreg free
  3550   0019D4  5001               	movf	?___fpclassifyf^0,w,c
  3551   0019D6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3552   0019D8  A4D8               	btfss	status,2,c
  3553   0019DA  EFF1  F00C         	goto	u4651
  3554   0019DE  EFF3  F00C         	goto	u4650
  3555   0019E2                     u4651:
  3556   0019E2  EF13  F00D         	goto	l4786
  3557   0019E6                     u4650:
  3558   0019E6                     
  3559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3560   0019E6  0100               	movlb	0	; () banked
  3561   0019E8  518A               	movf	efgtoa@sign& (0+255),w,b
  3562   0019EA  B4D8               	btfsc	status,2,c
  3563   0019EC  EFFA  F00C         	goto	u4661
  3564   0019F0  EFFC  F00C         	goto	u4660
  3565   0019F4                     u4661:
  3566   0019F4  EF05  F00D         	goto	l4778
  3567   0019F8                     u4660:
  3568   0019F8                     
  3569                           ; BSR set to: 0
  3570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3571   0019F8  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3572   0019FC                     
  3573                           ; BSR set to: 0
  3574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3575   0019FC  077A               	decf	efgtoa@w& (0+255),f,b
  3576   0019FE  A0D8               	btfss	status,0,c
  3577   001A00  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3578   001A02                     
  3579                           ; BSR set to: 0
  3580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3581   001A02  0E00               	movlw	0
  3582   001A04  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3583   001A06  0E01               	movlw	1
  3584   001A08  6F8B               	movwf	efgtoa@n& (0+255),b
  3585   001A0A                     l4778:
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3589   001A0A  0EA0               	movlw	low _dbuf
  3590   001A0C  258B               	addwf	efgtoa@n& (0+255),w,b
  3591   001A0E  6E01               	movwf	strcpy@dest^0,c
  3592   001A10  0E02               	movlw	high _dbuf
  3593   001A12  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3594   001A14  6E02               	movwf	(strcpy@dest+1)^0,c
  3595   001A16  0E38               	movlw	low STR_5
  3596   001A18  6E03               	movwf	strcpy@src^0,c
  3597   001A1A  0E0E               	movlw	high STR_5
  3598   001A1C  6E04               	movwf	(strcpy@src+1)^0,c
  3599   001A1E  EC8A  F02E         	call	_strcpy	;wreg free
  3600   001A22  EFCB  F00C         	goto	l4762
  3601   001A26                     l4786:
  3602                           
  3603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3604   001A26  0E00               	movlw	0
  3605   001A28  0100               	movlb	0	; () banked
  3606   001A2A  6F91               	movwf	efgtoa@u& (0+255),b
  3607   001A2C  0E00               	movlw	0
  3608   001A2E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3609   001A30  0E80               	movlw	128
  3610   001A32  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3611   001A34  0E3F               	movlw	63
  3612   001A36  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3613                           
  3614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3615   001A38  0E00               	movlw	0
  3616   001A3A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3617   001A3C  0E00               	movlw	0
  3618   001A3E  6F78               	movwf	efgtoa@e& (0+255),b
  3619   001A40                     
  3620                           ; BSR set to: 0
  3621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3622   001A40  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3623   001A44  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3624   001A48  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3625   001A4C  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3626   001A50  0E00               	movlw	0
  3627   001A52  6E36               	movwf	___fleq@ff2^0,c
  3628   001A54  0E00               	movlw	0
  3629   001A56  6E37               	movwf	(___fleq@ff2+1)^0,c
  3630   001A58  0E00               	movlw	0
  3631   001A5A  6E38               	movwf	(___fleq@ff2+2)^0,c
  3632   001A5C  0E00               	movlw	0
  3633   001A5E  6E39               	movwf	(___fleq@ff2+3)^0,c
  3634   001A60  EC00  F028         	call	___fleq	;wreg free
  3635   001A64  B0D8               	btfsc	status,0,c
  3636   001A66  EF37  F00D         	goto	u4671
  3637   001A6A  EF39  F00D         	goto	u4670
  3638   001A6E                     u4671:
  3639   001A6E  EF18  F00E         	goto	l1420
  3640   001A72                     u4670:
  3641   001A72  EF46  F00D         	goto	l4794
  3642   001A76                     l1422:
  3643                           
  3644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3645   001A76  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3646   001A7A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3647   001A7E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3648   001A82  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3649   001A86                     
  3650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3651   001A86  0100               	movlb	0	; () banked
  3652   001A88  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3653   001A8A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3654   001A8C                     l4794:
  3655                           
  3656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3657   001A8C  C091  F011         	movff	efgtoa@u,___flmul@b
  3658   001A90  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3659   001A94  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3660   001A98  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3661   001A9C  0E00               	movlw	0
  3662   001A9E  6E15               	movwf	___flmul@a^0,c
  3663   001AA0  0E00               	movlw	0
  3664   001AA2  6E16               	movwf	(___flmul@a+1)^0,c
  3665   001AA4  0E20               	movlw	32
  3666   001AA6  6E17               	movwf	(___flmul@a+2)^0,c
  3667   001AA8  0E41               	movlw	65
  3668   001AAA  6E18               	movwf	(___flmul@a+3)^0,c
  3669   001AAC  EC62  F016         	call	___flmul	;wreg free
  3670   001AB0  C011  F07C         	movff	?___flmul,efgtoa@ou
  3671   001AB4  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3672   001AB8  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3673   001ABC  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3674   001AC0  0100               	movlb	0	; () banked
  3675   001AC2  517C               	movf	efgtoa@ou& (0+255),w,b
  3676   001AC4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3677   001AC6  6E01               	movwf	labs@a^0,c
  3678   001AC8  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3679   001ACA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3680   001ACC  6E02               	movwf	(labs@a+1)^0,c
  3681   001ACE  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3682   001AD0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3683   001AD2  6E03               	movwf	(labs@a+2)^0,c
  3684   001AD4  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3685   001AD6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3686   001AD8  6E04               	movwf	(labs@a+3)^0,c
  3687   001ADA  ECC0  F02A         	call	_labs	;wreg free
  3688   001ADE  BE04               	btfsc	(?_labs+3)^0,7,c
  3689   001AE0  EF7D  F00D         	goto	u4681
  3690   001AE4  5004               	movf	(?_labs+3)^0,w,c
  3691   001AE6  1003               	iorwf	(?_labs+2)^0,w,c
  3692   001AE8  1002               	iorwf	(?_labs+1)^0,w,c
  3693   001AEA  E109               	bnz	u4680
  3694   001AEC  0E02               	movlw	2
  3695   001AEE  5C01               	subwf	?_labs^0,w,c
  3696   001AF0  A0D8               	btfss	status,0,c
  3697   001AF2  EF7D  F00D         	goto	u4681
  3698   001AF6  EF7F  F00D         	goto	u4680
  3699   001AFA                     u4681:
  3700   001AFA  EF3B  F00D         	goto	l1422
  3701   001AFE                     u4680:
  3702   001AFE  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3703   001B02  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3704   001B06  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3705   001B0A  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3706   001B0E  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3707   001B12  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3708   001B16  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3709   001B1A  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3710   001B1E  EC8F  F025         	call	___flge	;wreg free
  3711   001B22  A0D8               	btfss	status,0,c
  3712   001B24  EF96  F00D         	goto	u4691
  3713   001B28  EF98  F00D         	goto	u4690
  3714   001B2C                     u4691:
  3715   001B2C  EF3B  F00D         	goto	l1422
  3716   001B30                     u4690:
  3717   001B30                     
  3718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3719   001B30  0100               	movlb	0	; () banked
  3720   001B32  5191               	movf	efgtoa@u& (0+255),w,b
  3721   001B34  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3722   001B36  6E01               	movwf	labs@a^0,c
  3723   001B38  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3724   001B3A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3725   001B3C  6E02               	movwf	(labs@a+1)^0,c
  3726   001B3E  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3727   001B40  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3728   001B42  6E03               	movwf	(labs@a+2)^0,c
  3729   001B44  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3730   001B46  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3731   001B48  6E04               	movwf	(labs@a+3)^0,c
  3732   001B4A  ECC0  F02A         	call	_labs	;wreg free
  3733   001B4E  BE04               	btfsc	(?_labs+3)^0,7,c
  3734   001B50  EFB7  F00D         	goto	u4700
  3735   001B54  5004               	movf	(?_labs+3)^0,w,c
  3736   001B56  1003               	iorwf	(?_labs+2)^0,w,c
  3737   001B58  1002               	iorwf	(?_labs+1)^0,w,c
  3738   001B5A  E107               	bnz	u4701
  3739   001B5C  0E02               	movlw	2
  3740   001B5E  5C01               	subwf	?_labs^0,w,c
  3741   001B60  B0D8               	btfsc	status,0,c
  3742   001B62  EFB5  F00D         	goto	u4701
  3743   001B66  EFB7  F00D         	goto	u4700
  3744   001B6A                     u4701:
  3745   001B6A  EFFF  F00D         	goto	l4812
  3746   001B6E                     u4700:
  3747   001B6E                     l4802:
  3748                           
  3749                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3750   001B6E  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3751   001B72  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3752   001B76  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3753   001B7A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3754                           
  3755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3756   001B7E  EF18  F00E         	goto	l1420
  3757   001B82                     l4804:
  3758                           
  3759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3760   001B82  C091  F032         	movff	efgtoa@u,___fldiv@b
  3761   001B86  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3762   001B8A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3763   001B8E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3764   001B92  0E00               	movlw	0
  3765   001B94  6E36               	movwf	___fldiv@a^0,c
  3766   001B96  0E00               	movlw	0
  3767   001B98  6E37               	movwf	(___fldiv@a+1)^0,c
  3768   001B9A  0E20               	movlw	32
  3769   001B9C  6E38               	movwf	(___fldiv@a+2)^0,c
  3770   001B9E  0E41               	movlw	65
  3771   001BA0  6E39               	movwf	(___fldiv@a+3)^0,c
  3772   001BA2  EC77  F018         	call	___fldiv	;wreg free
  3773   001BA6  C032  F091         	movff	?___fldiv,efgtoa@u
  3774   001BAA  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3775   001BAE  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3776   001BB2  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3777   001BB6                     
  3778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3779   001BB6  0100               	movlb	0	; () banked
  3780   001BB8  0778               	decf	efgtoa@e& (0+255),f,b
  3781   001BBA  A0D8               	btfss	status,0,c
  3782   001BBC  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3783   001BBE                     
  3784                           ; BSR set to: 0
  3785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3786   001BBE  5191               	movf	efgtoa@u& (0+255),w,b
  3787   001BC0  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3788   001BC2  6E01               	movwf	labs@a^0,c
  3789   001BC4  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3790   001BC6  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3791   001BC8  6E02               	movwf	(labs@a+1)^0,c
  3792   001BCA  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3793   001BCC  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3794   001BCE  6E03               	movwf	(labs@a+2)^0,c
  3795   001BD0  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3796   001BD2  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3797   001BD4  6E04               	movwf	(labs@a+3)^0,c
  3798   001BD6  ECC0  F02A         	call	_labs	;wreg free
  3799   001BDA  BE04               	btfsc	(?_labs+3)^0,7,c
  3800   001BDC  EFFD  F00D         	goto	u4710
  3801   001BE0  5004               	movf	(?_labs+3)^0,w,c
  3802   001BE2  1003               	iorwf	(?_labs+2)^0,w,c
  3803   001BE4  1002               	iorwf	(?_labs+1)^0,w,c
  3804   001BE6  E107               	bnz	u4711
  3805   001BE8  0E02               	movlw	2
  3806   001BEA  5C01               	subwf	?_labs^0,w,c
  3807   001BEC  B0D8               	btfsc	status,0,c
  3808   001BEE  EFFB  F00D         	goto	u4711
  3809   001BF2  EFFD  F00D         	goto	u4710
  3810   001BF6                     u4711:
  3811   001BF6  EFFF  F00D         	goto	l4812
  3812   001BFA                     u4710:
  3813   001BFA  EFB7  F00D         	goto	l4802
  3814   001BFE                     l4812:
  3815                           
  3816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3817   001BFE  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3818   001C02  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3819   001C06  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3820   001C0A  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3821   001C0E  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3822   001C12  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3823   001C16  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3824   001C1A  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3825   001C1E  EC8F  F025         	call	___flge	;wreg free
  3826   001C22  A0D8               	btfss	status,0,c
  3827   001C24  EF16  F00E         	goto	u4721
  3828   001C28  EF18  F00E         	goto	u4720
  3829   001C2C                     u4721:
  3830   001C2C  EFC1  F00D         	goto	l4804
  3831   001C30                     u4720:
  3832   001C30                     l1420:
  3833                           
  3834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3835   001C30  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3838   001C34  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3839   001C38                     
  3840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3841   001C38  0100               	movlb	0	; () banked
  3842   001C3A  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3843   001C3C  EF22  F00E         	goto	u4731
  3844   001C40  EF24  F00E         	goto	u4730
  3845   001C44                     u4731:
  3846   001C44  EF2A  F00E         	goto	l4818
  3847   001C48                     u4730:
  3848   001C48                     
  3849                           ; BSR set to: 0
  3850   001C48  C0E9  F06B         	movff	_prec,efgtoa@p
  3851   001C4C  C0EA  F06C         	movff	_prec+1,efgtoa@p+1
  3852   001C50  EF2E  F00E         	goto	l4820
  3853   001C54                     l4818:
  3854                           
  3855                           ; BSR set to: 0
  3856   001C54  0E00               	movlw	0
  3857   001C56  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3858   001C58  0E06               	movlw	6
  3859   001C5A  6F6B               	movwf	efgtoa@p& (0+255),b
  3860   001C5C                     l4820:
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3864   001C5C  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3865   001C60  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3866   001C64                     
  3867                           ; BSR set to: 0
  3868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3869   001C64  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3870   001C66  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3871   001C68                     
  3872                           ; BSR set to: 0
  3873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3874   001C68  0E66               	movlw	102
  3875   001C6A  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3876   001C6C  A4D8               	btfss	status,2,c
  3877   001C6E  EF3B  F00E         	goto	u4741
  3878   001C72  EF3D  F00E         	goto	u4740
  3879   001C76                     u4741:
  3880   001C76  EF5D  F00E         	goto	l4834
  3881   001C7A                     u4740:
  3882   001C7A                     
  3883                           ; BSR set to: 0
  3884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3885   001C7A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3886   001C7C  EF44  F00E         	goto	u4750
  3887   001C80  EF42  F00E         	goto	u4751
  3888   001C84                     u4751:
  3889   001C84  EF50  F00E         	goto	l4830
  3890   001C88                     u4750:
  3891   001C88                     
  3892                           ; BSR set to: 0
  3893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3894   001C88  0E00               	movlw	0
  3895   001C8A  6F91               	movwf	efgtoa@u& (0+255),b
  3896   001C8C  0E00               	movlw	0
  3897   001C8E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3898   001C90  0E80               	movlw	128
  3899   001C92  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3900   001C94  0E3F               	movlw	63
  3901   001C96  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3902                           
  3903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3904   001C98  0E00               	movlw	0
  3905   001C9A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3906   001C9C  0E00               	movlw	0
  3907   001C9E  6F78               	movwf	efgtoa@e& (0+255),b
  3908   001CA0                     l4830:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3912   001CA0  0E67               	movlw	103
  3913   001CA2  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3914   001CA4  B4D8               	btfsc	status,2,c
  3915   001CA6  EF57  F00E         	goto	u4761
  3916   001CAA  EF59  F00E         	goto	u4760
  3917   001CAE                     u4761:
  3918   001CAE  EF5D  F00E         	goto	l4834
  3919   001CB2                     u4760:
  3920   001CB2                     
  3921                           ; BSR set to: 0
  3922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3923   001CB2  5178               	movf	efgtoa@e& (0+255),w,b
  3924   001CB4  2776               	addwf	efgtoa@m& (0+255),f,b
  3925   001CB6  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3926   001CB8  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3927   001CBA                     l4834:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3931   001CBA  0E00               	movlw	0
  3932   001CBC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3933   001CBE  0E00               	movlw	0
  3934   001CC0  6F80               	movwf	efgtoa@i& (0+255),b
  3935   001CC2                     
  3936                           ; BSR set to: 0
  3937                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3938   001CC2  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3939   001CC6  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3940   001CCA  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3941   001CCE  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3942   001CD2                     
  3943                           ; BSR set to: 0
  3944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3945   001CD2  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3946   001CD6  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3947   001CDA  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3948   001CDE  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3949                           
  3950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3951   001CE2  EFEE  F00E         	goto	l4848
  3952   001CE6                     l4840:
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3956   001CE6  C082  F032         	movff	efgtoa@h,___fldiv@b
  3957   001CEA  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3958   001CEE  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3959   001CF2  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3960   001CF6  C091  F036         	movff	efgtoa@u,___fldiv@a
  3961   001CFA  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3962   001CFE  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3963   001D02  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3964   001D06  EC77  F018         	call	___fldiv	;wreg free
  3965   001D0A  C032  F04B         	movff	?___fldiv,floorf@x
  3966   001D0E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3967   001D12  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3968   001D16  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3969   001D1A  EC0D  F020         	call	_floorf	;wreg free
  3970   001D1E  C04B  F086         	movff	?_floorf,efgtoa@l
  3971   001D22  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3972   001D26  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3973   001D2A  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3974                           
  3975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3976   001D2E  C086  F001         	movff	efgtoa@l,___fltol@f1
  3977   001D32  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3978   001D36  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3979   001D3A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3980   001D3E  EC0C  F025         	call	___fltol	;wreg free
  3981   001D42  C001  F074         	movff	?___fltol,efgtoa@d
  3982   001D46  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3983   001D4A                     
  3984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3985   001D4A  C082  F02A         	movff	efgtoa@h,___flsub@b
  3986   001D4E  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3987   001D52  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3988   001D56  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3989   001D5A  C086  F015         	movff	efgtoa@l,___flmul@a
  3990   001D5E  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3991   001D62  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3992   001D66  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3993   001D6A  C091  F011         	movff	efgtoa@u,___flmul@b
  3994   001D6E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3995   001D72  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3996   001D76  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3997   001D7A  EC62  F016         	call	___flmul	;wreg free
  3998   001D7E  C011  F02E         	movff	?___flmul,___flsub@a
  3999   001D82  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4000   001D86  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4001   001D8A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4002   001D8E  EC67  F02E         	call	___flsub	;wreg free
  4003   001D92  C02A  F082         	movff	?___flsub,efgtoa@h
  4004   001D96  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4005   001D9A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4006   001D9E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4007   001DA2                     
  4008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4009   001DA2  C091  F032         	movff	efgtoa@u,___fldiv@b
  4010   001DA6  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4011   001DAA  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4012   001DAE  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4013   001DB2  0E00               	movlw	0
  4014   001DB4  6E36               	movwf	___fldiv@a^0,c
  4015   001DB6  0E00               	movlw	0
  4016   001DB8  6E37               	movwf	(___fldiv@a+1)^0,c
  4017   001DBA  0E20               	movlw	32
  4018   001DBC  6E38               	movwf	(___fldiv@a+2)^0,c
  4019   001DBE  0E41               	movlw	65
  4020   001DC0  6E39               	movwf	(___fldiv@a+3)^0,c
  4021   001DC2  EC77  F018         	call	___fldiv	;wreg free
  4022   001DC6  C032  F091         	movff	?___fldiv,efgtoa@u
  4023   001DCA  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4024   001DCE  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4025   001DD2  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4026   001DD6                     
  4027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4028   001DD6  0100               	movlb	0	; () banked
  4029   001DD8  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4030   001DDA  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4031   001DDC                     l4848:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4035   001DDC  5176               	movf	efgtoa@m& (0+255),w,b
  4036   001DDE  5D80               	subwf	efgtoa@i& (0+255),w,b
  4037   001DE0  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4038   001DE2  0A80               	xorlw	128
  4039   001DE4  6F67               	movwf	??_efgtoa& (0+255),b
  4040   001DE6  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4041   001DE8  0A80               	xorlw	128
  4042   001DEA  5967               	subwfb	??_efgtoa& (0+255),w,b
  4043   001DEC  A0D8               	btfss	status,0,c
  4044   001DEE  EFFB  F00E         	goto	u4771
  4045   001DF2  EFFD  F00E         	goto	u4770
  4046   001DF6                     u4771:
  4047   001DF6  EF73  F00E         	goto	l4840
  4048   001DFA                     u4770:
  4049   001DFA                     
  4050                           ; BSR set to: 0
  4051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4052   001DFA  C091  F011         	movff	efgtoa@u,___flmul@b
  4053   001DFE  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4054   001E02  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4055   001E06  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4056   001E0A  0E00               	movlw	0
  4057   001E0C  6E15               	movwf	___flmul@a^0,c
  4058   001E0E  0E00               	movlw	0
  4059   001E10  6E16               	movwf	(___flmul@a+1)^0,c
  4060   001E12  0EA0               	movlw	160
  4061   001E14  6E17               	movwf	(___flmul@a+2)^0,c
  4062   001E16  0E40               	movlw	64
  4063   001E18  6E18               	movwf	(___flmul@a+3)^0,c
  4064   001E1A  EC62  F016         	call	___flmul	;wreg free
  4065   001E1E  C011  F086         	movff	?___flmul,efgtoa@l
  4066   001E22  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  4067   001E26  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  4068   001E2A  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  4069   001E2E                     
  4070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4071   001E2E  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4072   001E32  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4073   001E36  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4074   001E3A  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4075   001E3E  C086  F02E         	movff	efgtoa@l,___flge@ff2
  4076   001E42  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  4077   001E46  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  4078   001E4A  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  4079   001E4E  EC8F  F025         	call	___flge	;wreg free
  4080   001E52  B0D8               	btfsc	status,0,c
  4081   001E54  EF2E  F00F         	goto	u4781
  4082   001E58  EF30  F00F         	goto	u4780
  4083   001E5C                     u4781:
  4084   001E5C  EF3B  F00F         	goto	l4856
  4085   001E60                     u4780:
  4086   001E60                     
  4087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4088   001E60  0E00               	movlw	0
  4089   001E62  0100               	movlb	0	; () banked
  4090   001E64  6F86               	movwf	efgtoa@l& (0+255),b
  4091   001E66  0E00               	movlw	0
  4092   001E68  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4093   001E6A  0E00               	movlw	0
  4094   001E6C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4095   001E6E  0E00               	movlw	0
  4096   001E70  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4097                           
  4098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4099   001E72  EF64  F00F         	goto	l4862
  4100   001E76                     l4856:
  4101                           
  4102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4103   001E76  C082  F032         	movff	efgtoa@h,___fleq@ff1
  4104   001E7A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  4105   001E7E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  4106   001E82  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  4107   001E86  C086  F036         	movff	efgtoa@l,___fleq@ff2
  4108   001E8A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  4109   001E8E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  4110   001E92  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  4111   001E96  EC00  F028         	call	___fleq	;wreg free
  4112   001E9A  A0D8               	btfss	status,0,c
  4113   001E9C  EF52  F00F         	goto	u4791
  4114   001EA0  EF54  F00F         	goto	u4790
  4115   001EA4                     u4791:
  4116   001EA4  EF64  F00F         	goto	l4862
  4117   001EA8                     u4790:
  4118   001EA8  0100               	movlb	0	; () banked
  4119   001EAA  B174               	btfsc	efgtoa@d& (0+255),0,b
  4120   001EAC  EF5A  F00F         	goto	u4801
  4121   001EB0  EF5C  F00F         	goto	u4800
  4122   001EB4                     u4801:
  4123   001EB4  EF64  F00F         	goto	l4862
  4124   001EB8                     u4800:
  4125   001EB8                     
  4126                           ; BSR set to: 0
  4127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4128   001EB8  0E00               	movlw	0
  4129   001EBA  6F86               	movwf	efgtoa@l& (0+255),b
  4130   001EBC  0E00               	movlw	0
  4131   001EBE  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4132   001EC0  0E00               	movlw	0
  4133   001EC2  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4134   001EC4  0E00               	movlw	0
  4135   001EC6  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4136   001EC8                     l4862:
  4137                           
  4138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4139   001EC8  C08D  F001         	movff	efgtoa@g,___fladd@b
  4140   001ECC  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  4141   001ED0  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  4142   001ED4  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  4143   001ED8  C086  F005         	movff	efgtoa@l,___fladd@a
  4144   001EDC  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4145   001EE0  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4146   001EE4  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4147   001EE8  EC02  F014         	call	___fladd	;wreg free
  4148   001EEC  C001  F082         	movff	?___fladd,efgtoa@h
  4149   001EF0  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4150   001EF4  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4151   001EF8  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4152   001EFC                     
  4153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4154   001EFC  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4155   001F00  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4156   001F04  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4157   001F08  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4158   001F0C  0E00               	movlw	0
  4159   001F0E  6E15               	movwf	___flmul@a^0,c
  4160   001F10  0E00               	movlw	0
  4161   001F12  6E16               	movwf	(___flmul@a+1)^0,c
  4162   001F14  0E20               	movlw	32
  4163   001F16  6E17               	movwf	(___flmul@a+2)^0,c
  4164   001F18  0E41               	movlw	65
  4165   001F1A  6E18               	movwf	(___flmul@a+3)^0,c
  4166   001F1C  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4167   001F20  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4168   001F24  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4169   001F28  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4170   001F2C  EC62  F016         	call	___flmul	;wreg free
  4171   001F30  C011  F02E         	movff	?___flmul,___flge@ff2
  4172   001F34  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  4173   001F38  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  4174   001F3C  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  4175   001F40  EC8F  F025         	call	___flge	;wreg free
  4176   001F44  A0D8               	btfss	status,0,c
  4177   001F46  EFA7  F00F         	goto	u4811
  4178   001F4A  EFA9  F00F         	goto	u4810
  4179   001F4E                     u4811:
  4180   001F4E  EFD2  F00F         	goto	l4874
  4181   001F52                     u4810:
  4182   001F52                     
  4183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4184   001F52  0100               	movlb	0	; () banked
  4185   001F54  4B78               	infsnz	efgtoa@e& (0+255),f,b
  4186   001F56  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  4187   001F58                     
  4188                           ; BSR set to: 0
  4189                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4190   001F58  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4191   001F5C  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4192   001F60  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4193   001F64  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4194   001F68  0E00               	movlw	0
  4195   001F6A  6E15               	movwf	___flmul@a^0,c
  4196   001F6C  0E00               	movlw	0
  4197   001F6E  6E16               	movwf	(___flmul@a+1)^0,c
  4198   001F70  0E20               	movlw	32
  4199   001F72  6E17               	movwf	(___flmul@a+2)^0,c
  4200   001F74  0E41               	movlw	65
  4201   001F76  6E18               	movwf	(___flmul@a+3)^0,c
  4202   001F78  EC62  F016         	call	___flmul	;wreg free
  4203   001F7C  C011  F07C         	movff	?___flmul,efgtoa@ou
  4204   001F80  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  4205   001F84  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  4206   001F88  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  4207   001F8C                     
  4208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4209   001F8C  0E66               	movlw	102
  4210   001F8E  0100               	movlb	0	; () banked
  4211   001F90  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4212   001F92  A4D8               	btfss	status,2,c
  4213   001F94  EFCE  F00F         	goto	u4821
  4214   001F98  EFD0  F00F         	goto	u4820
  4215   001F9C                     u4821:
  4216   001F9C  EFD2  F00F         	goto	l4874
  4217   001FA0                     u4820:
  4218   001FA0                     
  4219                           ; BSR set to: 0
  4220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4221   001FA0  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4222   001FA2  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4223   001FA4                     l4874:
  4224                           
  4225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4226   001FA4  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  4227   001FA8  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  4228   001FAC  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  4229   001FB0  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  4230   001FB4                     
  4231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4232   001FB4  C078  F069         	movff	efgtoa@e,efgtoa@ne
  4233   001FB8  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  4234   001FBC                     
  4235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4236   001FBC  0E00               	movlw	0
  4237   001FBE  0100               	movlb	0	; () banked
  4238   001FC0  6F71               	movwf	efgtoa@pp& (0+255),b
  4239   001FC2                     
  4240                           ; BSR set to: 0
  4241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4242   001FC2  0E00               	movlw	0
  4243   001FC4  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  4244   001FC6  0E00               	movlw	0
  4245   001FC8  6F6D               	movwf	efgtoa@t& (0+255),b
  4246   001FCA                     
  4247                           ; BSR set to: 0
  4248                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4249   001FCA  0E00               	movlw	0
  4250   001FCC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4251   001FCE  0E00               	movlw	0
  4252   001FD0  6F80               	movwf	efgtoa@i& (0+255),b
  4253                           
  4254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4255   001FD2  EFD0  F010         	goto	l4924
  4256   001FD6                     l4884:
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4260   001FD6  C082  F032         	movff	efgtoa@h,___fldiv@b
  4261   001FDA  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4262   001FDE  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4263   001FE2  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4264   001FE6  C091  F036         	movff	efgtoa@u,___fldiv@a
  4265   001FEA  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4266   001FEE  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4267   001FF2  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4268   001FF6  EC77  F018         	call	___fldiv	;wreg free
  4269   001FFA  C032  F04B         	movff	?___fldiv,floorf@x
  4270   001FFE  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4271   002002  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4272   002006  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4273   00200A  EC0D  F020         	call	_floorf	;wreg free
  4274   00200E  C04B  F086         	movff	?_floorf,efgtoa@l
  4275   002012  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4276   002016  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4277   00201A  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4278                           
  4279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4280   00201E  C086  F001         	movff	efgtoa@l,___fltol@f1
  4281   002022  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4282   002026  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4283   00202A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4284   00202E  EC0C  F025         	call	___fltol	;wreg free
  4285   002032  BE02               	btfsc	(?___fltol+1)^0,7,c
  4286   002034  EF27  F010         	goto	u4830
  4287   002038  5002               	movf	(?___fltol+1)^0,w,c
  4288   00203A  E107               	bnz	u4831
  4289   00203C  0E0A               	movlw	10
  4290   00203E  5C01               	subwf	?___fltol^0,w,c
  4291   002040  B0D8               	btfsc	status,0,c
  4292   002042  EF25  F010         	goto	u4831
  4293   002046  EF27  F010         	goto	u4830
  4294   00204A                     u4831:
  4295   00204A  EF37  F010         	goto	l4888
  4296   00204E                     u4830:
  4297   00204E  C086  F001         	movff	efgtoa@l,___fltol@f1
  4298   002052  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4299   002056  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4300   00205A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4301   00205E  EC0C  F025         	call	___fltol	;wreg free
  4302   002062  C001  F074         	movff	?___fltol,efgtoa@d
  4303   002066  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4304   00206A  EF3C  F010         	goto	l1450
  4305   00206E                     l4888:
  4306   00206E  0E00               	movlw	0
  4307   002070  0100               	movlb	0	; () banked
  4308   002072  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  4309   002074  0E09               	movlw	9
  4310   002076  6F74               	movwf	efgtoa@d& (0+255),b
  4311   002078                     l1450:
  4312                           
  4313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4314   002078  0100               	movlb	0	; () banked
  4315   00207A  5171               	movf	efgtoa@pp& (0+255),w,b
  4316   00207C  A4D8               	btfss	status,2,c
  4317   00207E  EF43  F010         	goto	u4841
  4318   002082  EF45  F010         	goto	u4840
  4319   002086                     u4841:
  4320   002086  EF6D  F010         	goto	l4908
  4321   00208A                     u4840:
  4322   00208A                     
  4323                           ; BSR set to: 0
  4324   00208A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4325   00208C  EF4C  F010         	goto	u4850
  4326   002090  EF4A  F010         	goto	u4851
  4327   002094                     u4851:
  4328   002094  EF6D  F010         	goto	l4908
  4329   002098                     u4850:
  4330   002098                     
  4331                           ; BSR set to: 0
  4332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4333   002098  0EA0               	movlw	low _dbuf
  4334   00209A  258B               	addwf	efgtoa@n& (0+255),w,b
  4335   00209C  6ED9               	movwf	fsr2l,c
  4336   00209E  0E02               	movlw	high _dbuf
  4337   0020A0  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4338   0020A2  6EDA               	movwf	fsr2h,c
  4339   0020A4  0E2E               	movlw	46
  4340   0020A6  6EDF               	movwf	indf2,c
  4341   0020A8                     
  4342                           ; BSR set to: 0
  4343   0020A8  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4344   0020AA  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4345   0020AC                     
  4346                           ; BSR set to: 0
  4347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4348   0020AC  077A               	decf	efgtoa@w& (0+255),f,b
  4349   0020AE  A0D8               	btfss	status,0,c
  4350   0020B0  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4351   0020B2                     
  4352                           ; BSR set to: 0
  4353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4354   0020B2  0E01               	movlw	1
  4355   0020B4  6F71               	movwf	efgtoa@pp& (0+255),b
  4356   0020B6  EF6D  F010         	goto	l4908
  4357   0020BA                     l4900:
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4361   0020BA  0EA0               	movlw	low _dbuf
  4362   0020BC  258B               	addwf	efgtoa@n& (0+255),w,b
  4363   0020BE  6ED9               	movwf	fsr2l,c
  4364   0020C0  0E02               	movlw	high _dbuf
  4365   0020C2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4366   0020C4  6EDA               	movwf	fsr2h,c
  4367   0020C6  0E30               	movlw	48
  4368   0020C8  6EDF               	movwf	indf2,c
  4369   0020CA                     
  4370                           ; BSR set to: 0
  4371   0020CA  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4372   0020CC  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4373   0020CE                     
  4374                           ; BSR set to: 0
  4375                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4376   0020CE  077A               	decf	efgtoa@w& (0+255),f,b
  4377   0020D0  A0D8               	btfss	status,0,c
  4378   0020D2  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4379   0020D4                     
  4380                           ; BSR set to: 0
  4381                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4382   0020D4  076D               	decf	efgtoa@t& (0+255),f,b
  4383   0020D6  A0D8               	btfss	status,0,c
  4384   0020D8  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  4385   0020DA                     l4908:
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4389   0020DA  516D               	movf	efgtoa@t& (0+255),w,b
  4390   0020DC  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4391   0020DE  A4D8               	btfss	status,2,c
  4392   0020E0  EF74  F010         	goto	u4861
  4393   0020E4  EF76  F010         	goto	u4860
  4394   0020E8                     u4861:
  4395   0020E8  EF5D  F010         	goto	l4900
  4396   0020EC                     u4860:
  4397   0020EC                     
  4398                           ; BSR set to: 0
  4399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4400   0020EC  0EA0               	movlw	low _dbuf
  4401   0020EE  258B               	addwf	efgtoa@n& (0+255),w,b
  4402   0020F0  6ED9               	movwf	fsr2l,c
  4403   0020F2  0E02               	movlw	high _dbuf
  4404   0020F4  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4405   0020F6  6EDA               	movwf	fsr2h,c
  4406   0020F8  5174               	movf	efgtoa@d& (0+255),w,b
  4407   0020FA  0F30               	addlw	48
  4408   0020FC  6EDF               	movwf	indf2,c
  4409   0020FE                     
  4410                           ; BSR set to: 0
  4411   0020FE  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4412   002100  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4413   002102                     
  4414                           ; BSR set to: 0
  4415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4416   002102  077A               	decf	efgtoa@w& (0+255),f,b
  4417   002104  A0D8               	btfss	status,0,c
  4418   002106  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4419   002108                     
  4420                           ; BSR set to: 0
  4421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4422   002108  C082  F02A         	movff	efgtoa@h,___flsub@b
  4423   00210C  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4424   002110  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4425   002114  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4426   002118  C086  F015         	movff	efgtoa@l,___flmul@a
  4427   00211C  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4428   002120  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4429   002124  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4430   002128  C091  F011         	movff	efgtoa@u,___flmul@b
  4431   00212C  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4432   002130  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4433   002134  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4434   002138  EC62  F016         	call	___flmul	;wreg free
  4435   00213C  C011  F02E         	movff	?___flmul,___flsub@a
  4436   002140  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4437   002144  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4438   002148  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4439   00214C  EC67  F02E         	call	___flsub	;wreg free
  4440   002150  C02A  F082         	movff	?___flsub,efgtoa@h
  4441   002154  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4442   002158  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4443   00215C  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4444   002160                     
  4445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4446   002160  C091  F032         	movff	efgtoa@u,___fldiv@b
  4447   002164  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4448   002168  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4449   00216C  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4450   002170  0E00               	movlw	0
  4451   002172  6E36               	movwf	___fldiv@a^0,c
  4452   002174  0E00               	movlw	0
  4453   002176  6E37               	movwf	(___fldiv@a+1)^0,c
  4454   002178  0E20               	movlw	32
  4455   00217A  6E38               	movwf	(___fldiv@a+2)^0,c
  4456   00217C  0E41               	movlw	65
  4457   00217E  6E39               	movwf	(___fldiv@a+3)^0,c
  4458   002180  EC77  F018         	call	___fldiv	;wreg free
  4459   002184  C032  F091         	movff	?___fldiv,efgtoa@u
  4460   002188  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4461   00218C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4462   002190  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4463   002194                     
  4464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4465   002194  0100               	movlb	0	; () banked
  4466   002196  0769               	decf	efgtoa@ne& (0+255),f,b
  4467   002198  A0D8               	btfss	status,0,c
  4468   00219A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4469   00219C                     
  4470                           ; BSR set to: 0
  4471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4472   00219C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4473   00219E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4474   0021A0                     l4924:
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4478   0021A0  5176               	movf	efgtoa@m& (0+255),w,b
  4479   0021A2  5D80               	subwf	efgtoa@i& (0+255),w,b
  4480   0021A4  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4481   0021A6  0A80               	xorlw	128
  4482   0021A8  6F67               	movwf	??_efgtoa& (0+255),b
  4483   0021AA  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4484   0021AC  0A80               	xorlw	128
  4485   0021AE  5967               	subwfb	??_efgtoa& (0+255),w,b
  4486   0021B0  B0D8               	btfsc	status,0,c
  4487   0021B2  EFDD  F010         	goto	u4871
  4488   0021B6  EFDF  F010         	goto	u4870
  4489   0021BA                     u4871:
  4490   0021BA  EFED  F010         	goto	l4928
  4491   0021BE                     u4870:
  4492   0021BE                     
  4493                           ; BSR set to: 0
  4494   0021BE  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4495   0021C0  EFEB  F010         	goto	u4881
  4496   0021C4  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4497   0021C6  E109               	bnz	u4880
  4498   0021C8  0E4B               	movlw	75
  4499   0021CA  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4500   0021CC  A0D8               	btfss	status,0,c
  4501   0021CE  EFEB  F010         	goto	u4881
  4502   0021D2  EFED  F010         	goto	u4880
  4503   0021D6                     u4881:
  4504   0021D6  EFEB  F00F         	goto	l4884
  4505   0021DA                     u4880:
  4506   0021DA                     l4928:
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4510   0021DA  0E00               	movlw	0
  4511   0021DC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4512   0021DE  0E4F               	movlw	79
  4513   0021E0  6F80               	movwf	efgtoa@i& (0+255),b
  4514   0021E2                     
  4515                           ; BSR set to: 0
  4516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4517   0021E2  0EA0               	movlw	low _dbuf
  4518   0021E4  2580               	addwf	efgtoa@i& (0+255),w,b
  4519   0021E6  6ED9               	movwf	fsr2l,c
  4520   0021E8  0E02               	movlw	high _dbuf
  4521   0021EA  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4522   0021EC  6EDA               	movwf	fsr2h,c
  4523   0021EE  0E00               	movlw	0
  4524   0021F0  6EDF               	movwf	indf2,c
  4525   0021F2                     
  4526                           ; BSR set to: 0
  4527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4528   0021F2  0EA0               	movlw	low _dbuf
  4529   0021F4  6F67               	movwf	??_efgtoa& (0+255),b
  4530   0021F6  0E02               	movlw	high _dbuf
  4531   0021F8  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4532   0021FA  518B               	movf	efgtoa@n& (0+255),w,b
  4533   0021FC  5F67               	subwf	??_efgtoa& (0+255),f,b
  4534   0021FE  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4535   002200  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4536   002202  5180               	movf	efgtoa@i& (0+255),w,b
  4537   002204  2567               	addwf	??_efgtoa& (0+255),w,b
  4538   002206  6E01               	movwf	memcpy@d1^0,c
  4539   002208  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4540   00220A  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4541   00220C  6E02               	movwf	(memcpy@d1+1)^0,c
  4542   00220E  0EA0               	movlw	low _dbuf
  4543   002210  6E03               	movwf	memcpy@s1^0,c
  4544   002212  0E02               	movlw	high _dbuf
  4545   002214  6E04               	movwf	(memcpy@s1+1)^0,c
  4546   002216  C08B  F005         	movff	efgtoa@n,memcpy@n
  4547   00221A  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4548   00221E  EC2A  F02D         	call	_memcpy	;wreg free
  4549   002222                     
  4550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4551   002222  0100               	movlb	0	; () banked
  4552   002224  518B               	movf	efgtoa@n& (0+255),w,b
  4553   002226  5D80               	subwf	efgtoa@i& (0+255),w,b
  4554   002228  6F8B               	movwf	efgtoa@n& (0+255),b
  4555   00222A  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4556   00222C  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4557   00222E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4558   002230                     
  4559                           ; BSR set to: 0
  4560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4561   002230  518A               	movf	efgtoa@sign& (0+255),w,b
  4562   002232  A4D8               	btfss	status,2,c
  4563   002234  EF1E  F011         	goto	u4891
  4564   002238  EF21  F011         	goto	u4890
  4565   00223C                     u4891:
  4566   00223C  0E01               	movlw	1
  4567   00223E  EF22  F011         	goto	u4900
  4568   002242                     u4890:
  4569   002242  0E00               	movlw	0
  4570   002244                     u4900:
  4571   002244  6F80               	movwf	efgtoa@i& (0+255),b
  4572   002246  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4573   002248                     
  4574                           ; BSR set to: 0
  4575                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4576   002248  518A               	movf	efgtoa@sign& (0+255),w,b
  4577   00224A  B4D8               	btfsc	status,2,c
  4578   00224C  EF2A  F011         	goto	u4911
  4579   002250  EF2C  F011         	goto	u4910
  4580   002254                     u4911:
  4581   002254  EF37  F011         	goto	l4942
  4582   002258                     u4910:
  4583   002258                     
  4584                           ; BSR set to: 0
  4585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4586   002258  078B               	decf	efgtoa@n& (0+255),f,b
  4587   00225A  A0D8               	btfss	status,0,c
  4588   00225C  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4589   00225E  0EA0               	movlw	low _dbuf
  4590   002260  258B               	addwf	efgtoa@n& (0+255),w,b
  4591   002262  6ED9               	movwf	fsr2l,c
  4592   002264  0E02               	movlw	high _dbuf
  4593   002266  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4594   002268  6EDA               	movwf	fsr2h,c
  4595   00226A  C08A  FFDF         	movff	efgtoa@sign,indf2
  4596   00226E                     l4942:
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4600   00226E  5180               	movf	efgtoa@i& (0+255),w,b
  4601   002270  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4602   002272  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4603   002274  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4604   002276                     
  4605                           ; BSR set to: 0
  4606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4607   002276  C060  F011         	movff	efgtoa@fp,pad@fp
  4608   00227A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4609   00227E  0EA0               	movlw	low _dbuf
  4610   002280  258B               	addwf	efgtoa@n& (0+255),w,b
  4611   002282  6E13               	movwf	pad@buf^0,c
  4612   002284  0E02               	movlw	high _dbuf
  4613   002286  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4614   002288  6E14               	movwf	(pad@buf+1)^0,c
  4615   00228A  C07A  F015         	movff	efgtoa@w,pad@p
  4616   00228E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4617   002292  EC14  F02A         	call	_pad	;wreg free
  4618   002296                     l1417:
  4619   002296  0012               	return		;funcret
  4620   002298                     __end_of_efgtoa:
  4621                           	callstack 0
  4622                           
  4623 ;; *************** function _strcpy *****************
  4624 ;; Defined at:
  4625 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4628 ;;		 -> dbuf(80), 
  4629 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4630 ;;		 -> STR_5(4), STR_2(4), 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  d               2    6[COMRAM] PTR unsigned char 
  4633 ;;		 -> dbuf(80), 
  4634 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4635 ;;		 -> STR_5(4), STR_2(4), 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  2    0[COMRAM] PTR unsigned char 
  4638 ;; Registers used:
  4639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4645 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4646 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4648 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;Total ram usage:        8 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; Hardware stack levels required when called: 1
  4652 ;; This function calls:
  4653 ;;		Nothing
  4654 ;; This function is called by:
  4655 ;;		_efgtoa
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text6
  4660   005D14                     __ptext6:
  4661                           	callstack 0
  4662   005D14                     _strcpy:
  4663                           	callstack 25
  4664   005D14  C003  F005         	movff	strcpy@src,strcpy@s
  4665   005D18  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4666   005D1C  C001  F007         	movff	strcpy@dest,strcpy@d
  4667   005D20  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4668   005D24                     l4548:
  4669   005D24  C005  FFF6         	movff	strcpy@s,tblptrl
  4670   005D28  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4671   005D2C  4A05               	infsnz	strcpy@s^0,f,c
  4672   005D2E  2A06               	incf	(strcpy@s+1)^0,f,c
  4673   005D30                     	if	0	;tblptru may be non-zero
  4674   005D30                     	endif
  4675   005D30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4676   005D30  0E00               	movlw	low (__mediumconst shr (0+16))
  4677   005D32  6EF8               	movwf	tblptru,c
  4678   005D34                     	endif
  4679   005D34  C007  FFD9         	movff	strcpy@d,fsr2l
  4680   005D38  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4681   005D3C  4A07               	infsnz	strcpy@d^0,f,c
  4682   005D3E  2A08               	incf	(strcpy@d+1)^0,f,c
  4683   005D40  0008               	tblrd		*
  4684   005D42  CFF5 FFDF          	movff	tablat,indf2
  4685   005D46  50DF               	movf	indf2,w,c
  4686   005D48  A4D8               	btfss	status,2,c
  4687   005D4A  EFA9  F02E         	goto	u4241
  4688   005D4E  EFAB  F02E         	goto	u4240
  4689   005D52                     u4241:
  4690   005D52  EF92  F02E         	goto	l4548
  4691   005D56                     u4240:
  4692   005D56  0012               	return		;funcret
  4693   005D58                     __end_of_strcpy:
  4694                           	callstack 0
  4695                           
  4696 ;; *************** function _memcpy *****************
  4697 ;; Defined at:
  4698 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  d1              2    0[COMRAM] PTR void 
  4701 ;;		 -> dbuf(80), 
  4702 ;;  s1              2    2[COMRAM] PTR const void 
  4703 ;;		 -> dbuf(80), 
  4704 ;;  n               2    4[COMRAM] unsigned int 
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4707 ;;		 -> dbuf(80), 
  4708 ;;  d               2    6[COMRAM] PTR unsigned char 
  4709 ;;		 -> dbuf(80), 
  4710 ;;  tmp             1   10[COMRAM] unsigned char 
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  2    0[COMRAM] PTR void 
  4713 ;; Registers used:
  4714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4720 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4721 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4724 ;;Total ram usage:       11 bytes
  4725 ;; Hardware stack levels used: 1
  4726 ;; Hardware stack levels required when called: 1
  4727 ;; This function calls:
  4728 ;;		Nothing
  4729 ;; This function is called by:
  4730 ;;		_efgtoa
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text7
  4735   005A54                     __ptext7:
  4736                           	callstack 0
  4737   005A54                     _memcpy:
  4738                           	callstack 25
  4739   005A54  C003  F009         	movff	memcpy@s1,memcpy@s
  4740   005A58  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4741   005A5C  C001  F007         	movff	memcpy@d1,memcpy@d
  4742   005A60  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4743   005A64  EF44  F02D         	goto	l4592
  4744   005A68                     l4584:
  4745   005A68  C009  FFD9         	movff	memcpy@s,fsr2l
  4746   005A6C  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4747   005A70  50DF               	movf	indf2,w,c
  4748   005A72  6E0B               	movwf	memcpy@tmp^0,c
  4749   005A74  4A09               	infsnz	memcpy@s^0,f,c
  4750   005A76  2A0A               	incf	(memcpy@s+1)^0,f,c
  4751   005A78  C007  FFD9         	movff	memcpy@d,fsr2l
  4752   005A7C  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4753   005A80  C00B  FFDF         	movff	memcpy@tmp,indf2
  4754   005A84  4A07               	infsnz	memcpy@d^0,f,c
  4755   005A86  2A08               	incf	(memcpy@d+1)^0,f,c
  4756   005A88                     l4592:
  4757   005A88  0605               	decf	memcpy@n^0,f,c
  4758   005A8A  A0D8               	btfss	status,0,c
  4759   005A8C  0606               	decf	(memcpy@n+1)^0,f,c
  4760   005A8E  2805               	incf	memcpy@n^0,w,c
  4761   005A90  E106               	bnz	u4361
  4762   005A92  2806               	incf	(memcpy@n+1)^0,w,c
  4763   005A94  A4D8               	btfss	status,2,c
  4764   005A96  EF4F  F02D         	goto	u4361
  4765   005A9A  EF51  F02D         	goto	u4360
  4766   005A9E                     u4361:
  4767   005A9E  EF34  F02D         	goto	l4584
  4768   005AA2                     u4360:
  4769   005AA2  0012               	return		;funcret
  4770   005AA4                     __end_of_memcpy:
  4771                           	callstack 0
  4772                           
  4773 ;; *************** function _labs *****************
  4774 ;; Defined at:
  4775 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;  a               4    0[COMRAM] long 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;		None
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  4    0[COMRAM] long 
  4782 ;; Registers used:
  4783 ;;		wreg, status,2, status,0
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4791 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4792 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4793 ;;Total ram usage:        8 bytes
  4794 ;; Hardware stack levels used: 1
  4795 ;; Hardware stack levels required when called: 1
  4796 ;; This function calls:
  4797 ;;		Nothing
  4798 ;; This function is called by:
  4799 ;;		_efgtoa
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           	psect	text8
  4804   005580                     __ptext8:
  4805                           	callstack 0
  4806   005580                     _labs:
  4807                           	callstack 25
  4808   005580  BE04               	btfsc	(labs@a+3)^0,7,c
  4809   005582  EFCF  F02A         	goto	u4250
  4810   005586  5004               	movf	(labs@a+3)^0,w,c
  4811   005588  1003               	iorwf	(labs@a+2)^0,w,c
  4812   00558A  1002               	iorwf	(labs@a+1)^0,w,c
  4813   00558C  E106               	bnz	u4251
  4814   00558E  0401               	decf	labs@a^0,w,c
  4815   005590  B0D8               	btfsc	status,0,c
  4816   005592  EFCD  F02A         	goto	u4251
  4817   005596  EFCF  F02A         	goto	u4250
  4818   00559A                     u4251:
  4819   00559A  EFEA  F02A         	goto	l1522
  4820   00559E                     u4250:
  4821   00559E  C001  F005         	movff	labs@a,??_labs
  4822   0055A2  C002  F006         	movff	labs@a+1,??_labs+1
  4823   0055A6  C003  F007         	movff	labs@a+2,??_labs+2
  4824   0055AA  C004  F008         	movff	labs@a+3,??_labs+3
  4825   0055AE  1E05               	comf	??_labs^0,f,c
  4826   0055B0  1E06               	comf	(??_labs+1)^0,f,c
  4827   0055B2  1E07               	comf	(??_labs+2)^0,f,c
  4828   0055B4  1E08               	comf	(??_labs+3)^0,f,c
  4829   0055B6  2A05               	incf	??_labs^0,f,c
  4830   0055B8  0E00               	movlw	0
  4831   0055BA  2206               	addwfc	(??_labs+1)^0,f,c
  4832   0055BC  2207               	addwfc	(??_labs+2)^0,f,c
  4833   0055BE  2208               	addwfc	(??_labs+3)^0,f,c
  4834   0055C0  C005  F001         	movff	??_labs,?_labs
  4835   0055C4  C006  F002         	movff	??_labs+1,?_labs+1
  4836   0055C8  C007  F003         	movff	??_labs+2,?_labs+2
  4837   0055CC  C008  F004         	movff	??_labs+3,?_labs+3
  4838   0055D0  EFF2  F02A         	goto	l1525
  4839   0055D4                     l1522:
  4840   0055D4  C001  F001         	movff	labs@a,?_labs
  4841   0055D8  C002  F002         	movff	labs@a+1,?_labs+1
  4842   0055DC  C003  F003         	movff	labs@a+2,?_labs+2
  4843   0055E0  C004  F004         	movff	labs@a+3,?_labs+3
  4844   0055E4                     l1525:
  4845   0055E4  0012               	return		;funcret
  4846   0055E6                     __end_of_labs:
  4847                           	callstack 0
  4848                           
  4849 ;; *************** function _floorf *****************
  4850 ;; Defined at:
  4851 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  x               4   74[COMRAM] float 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;  u               4   90[COMRAM] struct .
  4856 ;;  m               4   84[COMRAM] unsigned long 
  4857 ;;  e               2   88[COMRAM] int 
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  4   74[COMRAM] float 
  4860 ;; Registers used:
  4861 ;;		wreg, status,2, status,0
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4867 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4868 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4869 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4870 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4871 ;;Total ram usage:       20 bytes
  4872 ;; Hardware stack levels used: 1
  4873 ;; Hardware stack levels required when called: 1
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_efgtoa
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text9
  4882   00401A                     __ptext9:
  4883                           	callstack 0
  4884   00401A                     _floorf:
  4885                           	callstack 25
  4886   00401A  C0DF  F05B         	movff	floorf@F526,floorf@u
  4887   00401E  C0E0  F05C         	movff	floorf@F526+1,floorf@u+1
  4888   004022  C0E1  F05D         	movff	floorf@F526+2,floorf@u+2
  4889   004026  C0E2  F05E         	movff	floorf@F526+3,floorf@u+3
  4890   00402A  C04B  F05B         	movff	floorf@x,floorf@u
  4891   00402E  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4892   004032  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4893   004036  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4894   00403A  0E81               	movlw	129
  4895   00403C  6E4F               	movwf	??_floorf^0,c
  4896   00403E  0EFF               	movlw	255
  4897   004040  6E50               	movwf	(??_floorf+1)^0,c
  4898   004042  C05B  F051         	movff	floorf@u,??_floorf+2
  4899   004046  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4900   00404A  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4901   00404E  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4902   004052  0E18               	movlw	24
  4903   004054  EF31  F020         	goto	u4260
  4904   004058                     u4265:
  4905   004058  90D8               	bcf	status,0,c
  4906   00405A  3254               	rrcf	(??_floorf+5)^0,f,c
  4907   00405C  3253               	rrcf	(??_floorf+4)^0,f,c
  4908   00405E  3252               	rrcf	(??_floorf+3)^0,f,c
  4909   004060  3251               	rrcf	(??_floorf+2)^0,f,c
  4910   004062                     u4260:
  4911   004062  2EE8               	decfsz	wreg,f,c
  4912   004064  EF2C  F020         	goto	u4265
  4913   004068  5051               	movf	(??_floorf+2)^0,w,c
  4914   00406A  244F               	addwf	??_floorf^0,w,c
  4915   00406C  6E59               	movwf	floorf@e^0,c
  4916   00406E  0E00               	movlw	0
  4917   004070  2050               	addwfc	(??_floorf+1)^0,w,c
  4918   004072  6E5A               	movwf	(floorf@e+1)^0,c
  4919   004074  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4920   004076  EF46  F020         	goto	u4271
  4921   00407A  505A               	movf	(floorf@e+1)^0,w,c
  4922   00407C  E109               	bnz	u4270
  4923   00407E  0E17               	movlw	23
  4924   004080  5C59               	subwf	floorf@e^0,w,c
  4925   004082  A0D8               	btfss	status,0,c
  4926   004084  EF46  F020         	goto	u4271
  4927   004088  EF48  F020         	goto	u4270
  4928   00408C                     u4271:
  4929   00408C  EF52  F020         	goto	l4560
  4930   004090                     u4270:
  4931   004090                     l4558:
  4932   004090  C04B  F04B         	movff	floorf@x,?_floorf
  4933   004094  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4934   004098  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4935   00409C  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4936   0040A0  EF15  F021         	goto	l1511
  4937   0040A4                     l4560:
  4938   0040A4  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4939   0040A6  EF57  F020         	goto	u4281
  4940   0040AA  EF59  F020         	goto	u4280
  4941   0040AE                     u4281:
  4942   0040AE  EFC9  F020         	goto	l4570
  4943   0040B2                     u4280:
  4944   0040B2  C059  F04F         	movff	floorf@e,??_floorf
  4945   0040B6  0EFF               	movlw	255
  4946   0040B8  6E50               	movwf	(??_floorf+1)^0,c
  4947   0040BA  0EFF               	movlw	255
  4948   0040BC  6E51               	movwf	(??_floorf+2)^0,c
  4949   0040BE  0E7F               	movlw	127
  4950   0040C0  6E52               	movwf	(??_floorf+3)^0,c
  4951   0040C2  0E00               	movlw	0
  4952   0040C4  6E53               	movwf	(??_floorf+4)^0,c
  4953   0040C6                     u4295:
  4954   0040C6  664F               	tstfsz	??_floorf^0,c
  4955   0040C8  EF68  F020         	goto	u4296
  4956   0040CC  EF70  F020         	goto	u4297
  4957   0040D0                     u4296:
  4958   0040D0  3453               	rlcf	(??_floorf+4)^0,w,c
  4959   0040D2  3253               	rrcf	(??_floorf+4)^0,f,c
  4960   0040D4  3252               	rrcf	(??_floorf+3)^0,f,c
  4961   0040D6  3251               	rrcf	(??_floorf+2)^0,f,c
  4962   0040D8  3250               	rrcf	(??_floorf+1)^0,f,c
  4963   0040DA  2E4F               	decfsz	??_floorf^0,f,c
  4964   0040DC  EF63  F020         	goto	u4295
  4965   0040E0                     u4297:
  4966   0040E0  C050  F055         	movff	??_floorf+1,floorf@m
  4967   0040E4  C051  F056         	movff	??_floorf+2,floorf@m+1
  4968   0040E8  C052  F057         	movff	??_floorf+3,floorf@m+2
  4969   0040EC  C053  F058         	movff	??_floorf+4,floorf@m+3
  4970   0040F0  5055               	movf	floorf@m^0,w,c
  4971   0040F2  145B               	andwf	floorf@u^0,w,c
  4972   0040F4  6E4F               	movwf	??_floorf^0,c
  4973   0040F6  5056               	movf	(floorf@m+1)^0,w,c
  4974   0040F8  145C               	andwf	(floorf@u+1)^0,w,c
  4975   0040FA  6E50               	movwf	(??_floorf+1)^0,c
  4976   0040FC  5057               	movf	(floorf@m+2)^0,w,c
  4977   0040FE  145D               	andwf	(floorf@u+2)^0,w,c
  4978   004100  6E51               	movwf	(??_floorf+2)^0,c
  4979   004102  5058               	movf	(floorf@m+3)^0,w,c
  4980   004104  145E               	andwf	(floorf@u+3)^0,w,c
  4981   004106  6E52               	movwf	(??_floorf+3)^0,c
  4982   004108  504F               	movf	??_floorf^0,w,c
  4983   00410A  1050               	iorwf	(??_floorf+1)^0,w,c
  4984   00410C  1051               	iorwf	(??_floorf+2)^0,w,c
  4985   00410E  1052               	iorwf	(??_floorf+3)^0,w,c
  4986   004110  A4D8               	btfss	status,2,c
  4987   004112  EF8D  F020         	goto	u4301
  4988   004116  EF8F  F020         	goto	u4300
  4989   00411A                     u4301:
  4990   00411A  EF91  F020         	goto	l4566
  4991   00411E                     u4300:
  4992   00411E  EF48  F020         	goto	l4558
  4993   004122                     l4566:
  4994   004122  C05B  F04F         	movff	floorf@u,??_floorf
  4995   004126  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4996   00412A  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4997   00412E  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4998   004132  0E20               	movlw	32
  4999   004134  EFA1  F020         	goto	u4310
  5000   004138                     u4315:
  5001   004138  90D8               	bcf	status,0,c
  5002   00413A  3252               	rrcf	(??_floorf+3)^0,f,c
  5003   00413C  3251               	rrcf	(??_floorf+2)^0,f,c
  5004   00413E  3250               	rrcf	(??_floorf+1)^0,f,c
  5005   004140  324F               	rrcf	??_floorf^0,f,c
  5006   004142                     u4310:
  5007   004142  2EE8               	decfsz	wreg,f,c
  5008   004144  EF9C  F020         	goto	u4315
  5009   004148  504F               	movf	??_floorf^0,w,c
  5010   00414A  1050               	iorwf	(??_floorf+1)^0,w,c
  5011   00414C  1051               	iorwf	(??_floorf+2)^0,w,c
  5012   00414E  1052               	iorwf	(??_floorf+3)^0,w,c
  5013   004150  B4D8               	btfsc	status,2,c
  5014   004152  EFAD  F020         	goto	u4321
  5015   004156  EFAF  F020         	goto	u4320
  5016   00415A                     u4321:
  5017   00415A  EFB7  F020         	goto	l1514
  5018   00415E                     u4320:
  5019   00415E  5055               	movf	floorf@m^0,w,c
  5020   004160  265B               	addwf	floorf@u^0,f,c
  5021   004162  5056               	movf	(floorf@m+1)^0,w,c
  5022   004164  225C               	addwfc	(floorf@u+1)^0,f,c
  5023   004166  5057               	movf	(floorf@m+2)^0,w,c
  5024   004168  225D               	addwfc	(floorf@u+2)^0,f,c
  5025   00416A  5058               	movf	(floorf@m+3)^0,w,c
  5026   00416C  225E               	addwfc	(floorf@u+3)^0,f,c
  5027   00416E                     l1514:
  5028   00416E  1C55               	comf	floorf@m^0,w,c
  5029   004170  6E4F               	movwf	??_floorf^0,c
  5030   004172  1C56               	comf	(floorf@m+1)^0,w,c
  5031   004174  6E50               	movwf	(??_floorf+1)^0,c
  5032   004176  1C57               	comf	(floorf@m+2)^0,w,c
  5033   004178  6E51               	movwf	(??_floorf+2)^0,c
  5034   00417A  1C58               	comf	(floorf@m+3)^0,w,c
  5035   00417C  6E52               	movwf	(??_floorf+3)^0,c
  5036   00417E  504F               	movf	??_floorf^0,w,c
  5037   004180  165B               	andwf	floorf@u^0,f,c
  5038   004182  5050               	movf	(??_floorf+1)^0,w,c
  5039   004184  165C               	andwf	(floorf@u+1)^0,f,c
  5040   004186  5051               	movf	(??_floorf+2)^0,w,c
  5041   004188  165D               	andwf	(floorf@u+2)^0,f,c
  5042   00418A  5052               	movf	(??_floorf+3)^0,w,c
  5043   00418C  165E               	andwf	(floorf@u+3)^0,f,c
  5044   00418E  EF0D  F021         	goto	l4578
  5045   004192                     l4570:
  5046   004192  C05B  F04F         	movff	floorf@u,??_floorf
  5047   004196  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5048   00419A  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5049   00419E  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5050   0041A2  0E20               	movlw	32
  5051   0041A4  EFD9  F020         	goto	u4330
  5052   0041A8                     u4335:
  5053   0041A8  90D8               	bcf	status,0,c
  5054   0041AA  3252               	rrcf	(??_floorf+3)^0,f,c
  5055   0041AC  3251               	rrcf	(??_floorf+2)^0,f,c
  5056   0041AE  3250               	rrcf	(??_floorf+1)^0,f,c
  5057   0041B0  324F               	rrcf	??_floorf^0,f,c
  5058   0041B2                     u4330:
  5059   0041B2  2EE8               	decfsz	wreg,f,c
  5060   0041B4  EFD4  F020         	goto	u4335
  5061   0041B8  504F               	movf	??_floorf^0,w,c
  5062   0041BA  1050               	iorwf	(??_floorf+1)^0,w,c
  5063   0041BC  1051               	iorwf	(??_floorf+2)^0,w,c
  5064   0041BE  1052               	iorwf	(??_floorf+3)^0,w,c
  5065   0041C0  A4D8               	btfss	status,2,c
  5066   0041C2  EFE5  F020         	goto	u4341
  5067   0041C6  EFE7  F020         	goto	u4340
  5068   0041CA                     u4341:
  5069   0041CA  EFF1  F020         	goto	l4574
  5070   0041CE                     u4340:
  5071   0041CE  0E00               	movlw	0
  5072   0041D0  6E5B               	movwf	floorf@u^0,c
  5073   0041D2  0E00               	movlw	0
  5074   0041D4  6E5C               	movwf	(floorf@u+1)^0,c
  5075   0041D6  0E00               	movlw	0
  5076   0041D8  6E5D               	movwf	(floorf@u+2)^0,c
  5077   0041DA  0E00               	movlw	0
  5078   0041DC  6E5E               	movwf	(floorf@u+3)^0,c
  5079   0041DE  EF0D  F021         	goto	l4578
  5080   0041E2                     l4574:
  5081   0041E2  90D8               	bcf	status,0,c
  5082   0041E4  345B               	rlcf	floorf@u^0,w,c
  5083   0041E6  6E4F               	movwf	??_floorf^0,c
  5084   0041E8  345C               	rlcf	(floorf@u+1)^0,w,c
  5085   0041EA  6E50               	movwf	(??_floorf+1)^0,c
  5086   0041EC  345D               	rlcf	(floorf@u+2)^0,w,c
  5087   0041EE  6E51               	movwf	(??_floorf+2)^0,c
  5088   0041F0  345E               	rlcf	(floorf@u+3)^0,w,c
  5089   0041F2  6E52               	movwf	(??_floorf+3)^0,c
  5090   0041F4  504F               	movf	??_floorf^0,w,c
  5091   0041F6  1050               	iorwf	(??_floorf+1)^0,w,c
  5092   0041F8  1051               	iorwf	(??_floorf+2)^0,w,c
  5093   0041FA  1052               	iorwf	(??_floorf+3)^0,w,c
  5094   0041FC  B4D8               	btfsc	status,2,c
  5095   0041FE  EF03  F021         	goto	u4351
  5096   004202  EF05  F021         	goto	u4350
  5097   004206                     u4351:
  5098   004206  EF0D  F021         	goto	l4578
  5099   00420A                     u4350:
  5100   00420A  0E00               	movlw	0
  5101   00420C  6E5B               	movwf	floorf@u^0,c
  5102   00420E  0E00               	movlw	0
  5103   004210  6E5C               	movwf	(floorf@u+1)^0,c
  5104   004212  0E80               	movlw	128
  5105   004214  6E5D               	movwf	(floorf@u+2)^0,c
  5106   004216  0EBF               	movlw	191
  5107   004218  6E5E               	movwf	(floorf@u+3)^0,c
  5108   00421A                     l4578:
  5109   00421A  C05B  F04B         	movff	floorf@u,?_floorf
  5110   00421E  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  5111   004222  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  5112   004226  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  5113   00422A                     l1511:
  5114   00422A  0012               	return		;funcret
  5115   00422C                     __end_of_floorf:
  5116                           	callstack 0
  5117                           
  5118 ;; *************** function ___fpclassifyf *****************
  5119 ;; Defined at:
  5120 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  x               4    0[COMRAM] float 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;  u               4   10[COMRAM] struct .
  5125 ;;  e               2    8[COMRAM] int 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  2    0[COMRAM] int 
  5128 ;; Registers used:
  5129 ;;		wreg, status,2, status,0
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5135 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5136 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5137 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5138 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5139 ;;Total ram usage:       14 bytes
  5140 ;; Hardware stack levels used: 1
  5141 ;; Hardware stack levels required when called: 1
  5142 ;; This function calls:
  5143 ;;		Nothing
  5144 ;; This function is called by:
  5145 ;;		_efgtoa
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text10
  5150   004C22                     __ptext10:
  5151                           	callstack 0
  5152   004C22                     ___fpclassifyf:
  5153                           	callstack 25
  5154   004C22  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5155   004C26  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5156   004C2A  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5157   004C2E  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5158   004C32  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5159   004C36  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5160   004C3A  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5161   004C3E  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5162   004C42  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5163   004C46  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5164   004C4A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5165   004C4E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5166   004C52  0E18               	movlw	24
  5167   004C54  EF31  F026         	goto	u4170
  5168   004C58                     u4175:
  5169   004C58  90D8               	bcf	status,0,c
  5170   004C5A  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5171   004C5C  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5172   004C5E  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5173   004C60  3205               	rrcf	??___fpclassifyf^0,f,c
  5174   004C62                     u4170:
  5175   004C62  2EE8               	decfsz	wreg,f,c
  5176   004C64  EF2C  F026         	goto	u4175
  5177   004C68  5005               	movf	??___fpclassifyf^0,w,c
  5178   004C6A  6E09               	movwf	___fpclassifyf@e^0,c
  5179   004C6C  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5180   004C6E  5009               	movf	___fpclassifyf@e^0,w,c
  5181   004C70  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5182   004C72  A4D8               	btfss	status,2,c
  5183   004C74  EF3E  F026         	goto	u4181
  5184   004C78  EF40  F026         	goto	u4180
  5185   004C7C                     u4181:
  5186   004C7C  EF60  F026         	goto	l4536
  5187   004C80                     u4180:
  5188   004C80  90D8               	bcf	status,0,c
  5189   004C82  340B               	rlcf	___fpclassifyf@u^0,w,c
  5190   004C84  6E05               	movwf	??___fpclassifyf^0,c
  5191   004C86  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5192   004C88  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5193   004C8A  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5194   004C8C  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5195   004C8E  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5196   004C90  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5197   004C92  5005               	movf	??___fpclassifyf^0,w,c
  5198   004C94  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5199   004C96  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5200   004C98  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5201   004C9A  A4D8               	btfss	status,2,c
  5202   004C9C  EF52  F026         	goto	u4191
  5203   004CA0  EF54  F026         	goto	u4190
  5204   004CA4                     u4191:
  5205   004CA4  EF5A  F026         	goto	l4532
  5206   004CA8                     u4190:
  5207   004CA8  0E00               	movlw	0
  5208   004CAA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5209   004CAC  0E02               	movlw	2
  5210   004CAE  6E01               	movwf	?___fpclassifyf^0,c
  5211   004CB0  EF8F  F026         	goto	l1497
  5212   004CB4                     l4532:
  5213   004CB4  0E00               	movlw	0
  5214   004CB6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5215   004CB8  0E03               	movlw	3
  5216   004CBA  6E01               	movwf	?___fpclassifyf^0,c
  5217   004CBC  EF8F  F026         	goto	l1497
  5218   004CC0                     l4536:
  5219   004CC0  2809               	incf	___fpclassifyf@e^0,w,c
  5220   004CC2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5221   004CC4  A4D8               	btfss	status,2,c
  5222   004CC6  EF67  F026         	goto	u4201
  5223   004CCA  EF69  F026         	goto	u4200
  5224   004CCE                     u4201:
  5225   004CCE  EF8B  F026         	goto	l4542
  5226   004CD2                     u4200:
  5227   004CD2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5228   004CD6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5229   004CDA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5230   004CDE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5231   004CE2  0E09               	movlw	9
  5232   004CE4                     u4215:
  5233   004CE4  90D8               	bcf	status,0,c
  5234   004CE6  3605               	rlcf	??___fpclassifyf^0,f,c
  5235   004CE8  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5236   004CEA  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5237   004CEC  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5238   004CEE  2EE8               	decfsz	wreg,f,c
  5239   004CF0  EF72  F026         	goto	u4215
  5240   004CF4  5005               	movf	??___fpclassifyf^0,w,c
  5241   004CF6  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5242   004CF8  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5243   004CFA  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5244   004CFC  B4D8               	btfsc	status,2,c
  5245   004CFE  EF83  F026         	goto	u4221
  5246   004D02  EF86  F026         	goto	u4220
  5247   004D06                     u4221:
  5248   004D06  0E01               	movlw	1
  5249   004D08  EF87  F026         	goto	u4230
  5250   004D0C                     u4220:
  5251   004D0C  0E00               	movlw	0
  5252   004D0E                     u4230:
  5253   004D0E  6E01               	movwf	?___fpclassifyf^0,c
  5254   004D10  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5255   004D12  EF8F  F026         	goto	l1497
  5256   004D16                     l4542:
  5257   004D16  0E00               	movlw	0
  5258   004D18  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5259   004D1A  0E04               	movlw	4
  5260   004D1C  6E01               	movwf	?___fpclassifyf^0,c
  5261   004D1E                     l1497:
  5262   004D1E  0012               	return		;funcret
  5263   004D20                     __end_of___fpclassifyf:
  5264                           	callstack 0
  5265                           
  5266 ;; *************** function ___fltol *****************
  5267 ;; Defined at:
  5268 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;  f1              4    0[COMRAM] int 
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;  exp1            1    9[COMRAM] unsigned char 
  5273 ;;  sign1           1    8[COMRAM] unsigned char 
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  4    0[COMRAM] long 
  5276 ;; Registers used:
  5277 ;;		wreg, status,2, status,0
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5284 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5285 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5286 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5287 ;;Total ram usage:       10 bytes
  5288 ;; Hardware stack levels used: 1
  5289 ;; Hardware stack levels required when called: 1
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_reverseOneBlock
  5294 ;;		_ForwardOneBlock
  5295 ;;		_Forwardhalfblock
  5296 ;;		_efgtoa
  5297 ;;		_Backhalfblock
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text11
  5302   004A18                     __ptext11:
  5303                           	callstack 0
  5304   004A18                     ___fltol:
  5305                           	callstack 25
  5306   004A18  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5307   004A1A  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5308   004A1C  6E0A               	movwf	___fltol@exp1^0,c
  5309   004A1E  500A               	movf	___fltol@exp1^0,w,c
  5310   004A20  A4D8               	btfss	status,2,c
  5311   004A22  EF15  F025         	goto	u4071
  5312   004A26  EF17  F025         	goto	u4070
  5313   004A2A                     u4071:
  5314   004A2A  EF21  F025         	goto	l4468
  5315   004A2E                     u4070:
  5316   004A2E                     l4464:
  5317   004A2E  0E00               	movlw	0
  5318   004A30  6E01               	movwf	?___fltol^0,c
  5319   004A32  0E00               	movlw	0
  5320   004A34  6E02               	movwf	(?___fltol+1)^0,c
  5321   004A36  0E00               	movlw	0
  5322   004A38  6E03               	movwf	(?___fltol+2)^0,c
  5323   004A3A  0E00               	movlw	0
  5324   004A3C  6E04               	movwf	(?___fltol+3)^0,c
  5325   004A3E  EF8E  F025         	goto	l970
  5326   004A42                     l4468:
  5327   004A42  C001  F005         	movff	___fltol@f1,??___fltol
  5328   004A46  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5329   004A4A  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5330   004A4E  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5331   004A52  0E20               	movlw	32
  5332   004A54  EF31  F025         	goto	u4080
  5333   004A58                     u4085:
  5334   004A58  90D8               	bcf	status,0,c
  5335   004A5A  3208               	rrcf	(??___fltol+3)^0,f,c
  5336   004A5C  3207               	rrcf	(??___fltol+2)^0,f,c
  5337   004A5E  3206               	rrcf	(??___fltol+1)^0,f,c
  5338   004A60  3205               	rrcf	??___fltol^0,f,c
  5339   004A62                     u4080:
  5340   004A62  2EE8               	decfsz	wreg,f,c
  5341   004A64  EF2C  F025         	goto	u4085
  5342   004A68  5005               	movf	??___fltol^0,w,c
  5343   004A6A  6E09               	movwf	___fltol@sign1^0,c
  5344   004A6C  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5345   004A6E  0EFF               	movlw	255
  5346   004A70  1601               	andwf	___fltol@f1^0,f,c
  5347   004A72  0EFF               	movlw	255
  5348   004A74  1602               	andwf	(___fltol@f1+1)^0,f,c
  5349   004A76  0EFF               	movlw	255
  5350   004A78  1603               	andwf	(___fltol@f1+2)^0,f,c
  5351   004A7A  0E00               	movlw	0
  5352   004A7C  1604               	andwf	(___fltol@f1+3)^0,f,c
  5353   004A7E  0E96               	movlw	150
  5354   004A80  5E0A               	subwf	___fltol@exp1^0,f,c
  5355   004A82  BE0A               	btfsc	___fltol@exp1^0,7,c
  5356   004A84  EF48  F025         	goto	u4090
  5357   004A88  EF46  F025         	goto	u4091
  5358   004A8C                     u4091:
  5359   004A8C  EF5E  F025         	goto	l4488
  5360   004A90                     u4090:
  5361   004A90  500A               	movf	___fltol@exp1^0,w,c
  5362   004A92  0A80               	xorlw	128
  5363   004A94  0F97               	addlw	151
  5364   004A96  B0D8               	btfsc	status,0,c
  5365   004A98  EF50  F025         	goto	u4101
  5366   004A9C  EF52  F025         	goto	u4100
  5367   004AA0                     u4101:
  5368   004AA0  EF54  F025         	goto	l4484
  5369   004AA4                     u4100:
  5370   004AA4  EF17  F025         	goto	l4464
  5371   004AA8                     l4484:
  5372   004AA8  90D8               	bcf	status,0,c
  5373   004AAA  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5374   004AAC  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5375   004AAE  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5376   004AB0  3201               	rrcf	___fltol@f1^0,f,c
  5377   004AB2  3E0A               	incfsz	___fltol@exp1^0,f,c
  5378   004AB4  EF54  F025         	goto	l4484
  5379   004AB8  EF76  F025         	goto	l4498
  5380   004ABC                     l4488:
  5381   004ABC  0E1F               	movlw	31
  5382   004ABE  640A               	cpfsgt	___fltol@exp1^0,c
  5383   004AC0  EF64  F025         	goto	u4111
  5384   004AC4  EF66  F025         	goto	u4110
  5385   004AC8                     u4111:
  5386   004AC8  EF6E  F025         	goto	l4496
  5387   004ACC                     u4110:
  5388   004ACC  EF17  F025         	goto	l4464
  5389   004AD0                     l4494:
  5390   004AD0  90D8               	bcf	status,0,c
  5391   004AD2  3601               	rlcf	___fltol@f1^0,f,c
  5392   004AD4  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5393   004AD6  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5394   004AD8  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5395   004ADA  060A               	decf	___fltol@exp1^0,f,c
  5396   004ADC                     l4496:
  5397   004ADC  500A               	movf	___fltol@exp1^0,w,c
  5398   004ADE  A4D8               	btfss	status,2,c
  5399   004AE0  EF74  F025         	goto	u4121
  5400   004AE4  EF76  F025         	goto	u4120
  5401   004AE8                     u4121:
  5402   004AE8  EF68  F025         	goto	l4494
  5403   004AEC                     u4120:
  5404   004AEC                     l4498:
  5405   004AEC  5009               	movf	___fltol@sign1^0,w,c
  5406   004AEE  B4D8               	btfsc	status,2,c
  5407   004AF0  EF7C  F025         	goto	u4131
  5408   004AF4  EF7E  F025         	goto	u4130
  5409   004AF8                     u4131:
  5410   004AF8  EF86  F025         	goto	l4502
  5411   004AFC                     u4130:
  5412   004AFC  1E04               	comf	(___fltol@f1+3)^0,f,c
  5413   004AFE  1E03               	comf	(___fltol@f1+2)^0,f,c
  5414   004B00  1E02               	comf	(___fltol@f1+1)^0,f,c
  5415   004B02  6C01               	negf	___fltol@f1^0,c
  5416   004B04  0E00               	movlw	0
  5417   004B06  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5418   004B08  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5419   004B0A  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5420   004B0C                     l4502:
  5421   004B0C  C001  F001         	movff	___fltol@f1,?___fltol
  5422   004B10  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5423   004B14  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5424   004B18  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5425   004B1C                     l970:
  5426   004B1C  0012               	return		;funcret
  5427   004B1E                     __end_of___fltol:
  5428                           	callstack 0
  5429                           
  5430 ;; *************** function ___flneg *****************
  5431 ;; Defined at:
  5432 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  f1              4    0[COMRAM] long 
  5435 ;; Auto vars:     Size  Location     Type
  5436 ;;		None
  5437 ;; Return value:  Size  Location     Type
  5438 ;;                  4    0[COMRAM] long 
  5439 ;; Registers used:
  5440 ;;		wreg, status,2, status,0
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5449 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5450 ;;Total ram usage:        4 bytes
  5451 ;; Hardware stack levels used: 1
  5452 ;; Hardware stack levels required when called: 1
  5453 ;; This function calls:
  5454 ;;		Nothing
  5455 ;; This function is called by:
  5456 ;;		_efgtoa
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           	psect	text12
  5461   005E9A                     __ptext12:
  5462                           	callstack 0
  5463   005E9A                     ___flneg:
  5464                           	callstack 25
  5465   005E9A  5001               	movf	___flneg@f1^0,w,c
  5466   005E9C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5467   005E9E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5468   005EA0  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5469   005EA2  B4D8               	btfsc	status,2,c
  5470   005EA4  EF56  F02F         	goto	u4061
  5471   005EA8  EF58  F02F         	goto	u4060
  5472   005EAC                     u4061:
  5473   005EAC  EF60  F02F         	goto	l4458
  5474   005EB0                     u4060:
  5475   005EB0  0E00               	movlw	0
  5476   005EB2  1A01               	xorwf	___flneg@f1^0,f,c
  5477   005EB4  0E00               	movlw	0
  5478   005EB6  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5479   005EB8  0E00               	movlw	0
  5480   005EBA  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5481   005EBC  0E80               	movlw	128
  5482   005EBE  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5483   005EC0                     l4458:
  5484   005EC0  C001  F001         	movff	___flneg@f1,?___flneg
  5485   005EC4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5486   005EC8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5487   005ECC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5488   005ED0  0012               	return		;funcret
  5489   005ED2                     __end_of___flneg:
  5490                           	callstack 0
  5491                           
  5492 ;; *************** function _dtoa *****************
  5493 ;; Defined at:
  5494 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5497 ;;		 -> sprintf@f(11), 
  5498 ;;  d               8   29[COMRAM] long long 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;  n               8   51[COMRAM] long long 
  5501 ;;  i               2   59[COMRAM] int 
  5502 ;;  w               2   49[COMRAM] int 
  5503 ;;  p               2   47[COMRAM] int 
  5504 ;;  s               1   61[COMRAM] unsigned char 
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      void 
  5507 ;; Registers used:
  5508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5514 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5515 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5516 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5517 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5518 ;;Total ram usage:       35 bytes
  5519 ;; Hardware stack levels used: 1
  5520 ;; Hardware stack levels required when called: 5
  5521 ;; This function calls:
  5522 ;;		___aodiv
  5523 ;;		___aomod
  5524 ;;		_abs
  5525 ;;		_pad
  5526 ;; This function is called by:
  5527 ;;		_vfpfcnvrt
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           	psect	text13
  5532   003D9C                     __ptext13:
  5533                           	callstack 0
  5534   003D9C                     _dtoa:
  5535                           	callstack 22
  5536   003D9C                     
  5537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5538   003D9C  C01E  F034         	movff	dtoa@d,dtoa@n
  5539   003DA0  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5540   003DA4  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5541   003DA8  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5542   003DAC  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5543   003DB0  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5544   003DB4  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5545   003DB8  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5546   003DBC                     
  5547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5548   003DBC  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5549   003DBE  EFE3  F01E         	goto	u4501
  5550   003DC2  EFE6  F01E         	goto	u4500
  5551   003DC6                     u4501:
  5552   003DC6  0E01               	movlw	1
  5553   003DC8  EFE7  F01E         	goto	u4510
  5554   003DCC                     u4500:
  5555   003DCC  0E00               	movlw	0
  5556   003DCE                     u4510:
  5557   003DCE  6E3E               	movwf	dtoa@s^0,c
  5558   003DD0                     
  5559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5560   003DD0  503E               	movf	dtoa@s^0,w,c
  5561   003DD2  B4D8               	btfsc	status,2,c
  5562   003DD4  EFEE  F01E         	goto	u4521
  5563   003DD8  EFF0  F01E         	goto	u4520
  5564   003DDC                     u4521:
  5565   003DDC  EF00  F01F         	goto	l4682
  5566   003DE0                     u4520:
  5567   003DE0                     
  5568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5569   003DE0  1E3B               	comf	(dtoa@n+7)^0,f,c
  5570   003DE2  1E3A               	comf	(dtoa@n+6)^0,f,c
  5571   003DE4  1E39               	comf	(dtoa@n+5)^0,f,c
  5572   003DE6  1E38               	comf	(dtoa@n+4)^0,f,c
  5573   003DE8  1E37               	comf	(dtoa@n+3)^0,f,c
  5574   003DEA  1E36               	comf	(dtoa@n+2)^0,f,c
  5575   003DEC  1E35               	comf	(dtoa@n+1)^0,f,c
  5576   003DEE  6C34               	negf	dtoa@n^0,c
  5577   003DF0  0E00               	movlw	0
  5578   003DF2  2235               	addwfc	(dtoa@n+1)^0,f,c
  5579   003DF4  2236               	addwfc	(dtoa@n+2)^0,f,c
  5580   003DF6  2237               	addwfc	(dtoa@n+3)^0,f,c
  5581   003DF8  2238               	addwfc	(dtoa@n+4)^0,f,c
  5582   003DFA  2239               	addwfc	(dtoa@n+5)^0,f,c
  5583   003DFC  223A               	addwfc	(dtoa@n+6)^0,f,c
  5584   003DFE  223B               	addwfc	(dtoa@n+7)^0,f,c
  5585   003E00                     l4682:
  5586                           
  5587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5588   003E00  0100               	movlb	0	; () banked
  5589   003E02  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  5590   003E04  EF0E  F01F         	goto	u4530
  5591   003E08  51EA               	movf	(_prec+1)& (0+255),w,b
  5592   003E0A  E106               	bnz	u4531
  5593   003E0C  05E9               	decf	_prec& (0+255),w,b
  5594   003E0E  B0D8               	btfsc	status,0,c
  5595   003E10  EF0C  F01F         	goto	u4531
  5596   003E14  EF0E  F01F         	goto	u4530
  5597   003E18                     u4531:
  5598   003E18  EF14  F01F         	goto	l1392
  5599   003E1C                     u4530:
  5600   003E1C                     
  5601                           ; BSR set to: 0
  5602   003E1C  0E00               	movlw	0
  5603   003E1E  6E31               	movwf	(dtoa@p+1)^0,c
  5604   003E20  0E01               	movlw	1
  5605   003E22  6E30               	movwf	dtoa@p^0,c
  5606   003E24  EF18  F01F         	goto	l1394
  5607   003E28                     l1392:
  5608                           
  5609                           ; BSR set to: 0
  5610   003E28  C0E9  F030         	movff	_prec,dtoa@p
  5611   003E2C  C0EA  F031         	movff	_prec+1,dtoa@p+1
  5612   003E30                     l1394:
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5616   003E30  C0E7  F032         	movff	_width,dtoa@w
  5617   003E34  C0E8  F033         	movff	_width+1,dtoa@w+1
  5618   003E38                     
  5619                           ; BSR set to: 0
  5620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5621   003E38  503E               	movf	dtoa@s^0,w,c
  5622   003E3A  B4D8               	btfsc	status,2,c
  5623   003E3C  EF22  F01F         	goto	u4541
  5624   003E40  EF24  F01F         	goto	u4540
  5625   003E44                     u4541:
  5626   003E44  EF3B  F01F         	goto	l1395
  5627   003E48                     u4540:
  5628   003E48                     
  5629                           ; BSR set to: 0
  5630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5631   003E48  0632               	decf	dtoa@w^0,f,c
  5632   003E4A  A0D8               	btfss	status,0,c
  5633   003E4C  0633               	decf	(dtoa@w+1)^0,f,c
  5634   003E4E                     
  5635                           ; BSR set to: 0
  5636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5637   003E4E  503E               	movf	dtoa@s^0,w,c
  5638   003E50  A4D8               	btfss	status,2,c
  5639   003E52  EF2D  F01F         	goto	u4551
  5640   003E56  EF2F  F01F         	goto	u4550
  5641   003E5A                     u4551:
  5642   003E5A  EF35  F01F         	goto	l4694
  5643   003E5E                     u4550:
  5644   003E5E                     
  5645                           ; BSR set to: 0
  5646   003E5E  0E00               	movlw	0
  5647   003E60  6E2F               	movwf	(_dtoa$2821+1)^0,c
  5648   003E62  0E2B               	movlw	43
  5649   003E64  6E2E               	movwf	_dtoa$2821^0,c
  5650   003E66  EF39  F01F         	goto	l4696
  5651   003E6A                     l4694:
  5652                           
  5653                           ; BSR set to: 0
  5654   003E6A  0E00               	movlw	0
  5655   003E6C  6E2F               	movwf	(_dtoa$2821+1)^0,c
  5656   003E6E  0E2D               	movlw	45
  5657   003E70  6E2E               	movwf	_dtoa$2821^0,c
  5658   003E72                     l4696:
  5659                           
  5660                           ; BSR set to: 0
  5661   003E72  C02E  F03E         	movff	_dtoa$2821,dtoa@s
  5662   003E76                     l1395:
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5666   003E76  0E00               	movlw	0
  5667   003E78  6E3D               	movwf	(dtoa@i+1)^0,c
  5668   003E7A  0E4F               	movlw	79
  5669   003E7C  6E3C               	movwf	dtoa@i^0,c
  5670   003E7E                     
  5671                           ; BSR set to: 0
  5672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5673   003E7E  0E00               	movlw	0
  5674   003E80  0102               	movlb	2	; () banked
  5675   003E82  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5676                           
  5677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5678   003E84  EFC0  F01F         	goto	l4710
  5679   003E88                     l4700:
  5680                           
  5681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5682   003E88  063C               	decf	dtoa@i^0,f,c
  5683   003E8A  A0D8               	btfss	status,0,c
  5684   003E8C  063D               	decf	(dtoa@i+1)^0,f,c
  5685   003E8E                     
  5686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5687   003E8E  0EA0               	movlw	low _dbuf
  5688   003E90  243C               	addwf	dtoa@i^0,w,c
  5689   003E92  6ED9               	movwf	fsr2l,c
  5690   003E94  0E02               	movlw	high _dbuf
  5691   003E96  203D               	addwfc	(dtoa@i+1)^0,w,c
  5692   003E98  6EDA               	movwf	fsr2h,c
  5693   003E9A  C034  F001         	movff	dtoa@n,___aomod@dividend
  5694   003E9E  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5695   003EA2  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5696   003EA6  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5697   003EAA  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5698   003EAE  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5699   003EB2  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5700   003EB6  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5701   003EBA  0E0A               	movlw	10
  5702   003EBC  6E09               	movwf	___aomod@divisor^0,c
  5703   003EBE  0E00               	movlw	0
  5704   003EC0  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5705   003EC2  0E00               	movlw	0
  5706   003EC4  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5707   003EC6  0E00               	movlw	0
  5708   003EC8  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5709   003ECA  0E00               	movlw	0
  5710   003ECC  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5711   003ECE  0E00               	movlw	0
  5712   003ED0  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5713   003ED2  0E00               	movlw	0
  5714   003ED4  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5715   003ED6  0E00               	movlw	0
  5716   003ED8  6E10               	movwf	(___aomod@divisor+7)^0,c
  5717   003EDA  EC5A  F024         	call	___aomod	;wreg free
  5718   003EDE  C001  F026         	movff	?___aomod,??_dtoa
  5719   003EE2  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5720   003EE6  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5721   003EEA  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5722   003EEE  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5723   003EF2  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5724   003EF6  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5725   003EFA  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5726   003EFE  C026  F013         	movff	??_dtoa,abs@a
  5727   003F02  C027  F014         	movff	??_dtoa+1,abs@a+1
  5728   003F06  ECEF  F02E         	call	_abs	;wreg free
  5729   003F0A  5013               	movf	?_abs^0,w,c
  5730   003F0C  0F30               	addlw	48
  5731   003F0E  6EDF               	movwf	indf2,c
  5732   003F10                     
  5733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5734   003F10  0630               	decf	dtoa@p^0,f,c
  5735   003F12  A0D8               	btfss	status,0,c
  5736   003F14  0631               	decf	(dtoa@p+1)^0,f,c
  5737   003F16                     
  5738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5739   003F16  0632               	decf	dtoa@w^0,f,c
  5740   003F18  A0D8               	btfss	status,0,c
  5741   003F1A  0633               	decf	(dtoa@w+1)^0,f,c
  5742   003F1C                     
  5743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5744   003F1C  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5745   003F20  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5746   003F24  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5747   003F28  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5748   003F2C  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5749   003F30  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5750   003F34  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5751   003F38  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5752   003F3C  0E0A               	movlw	10
  5753   003F3E  6E09               	movwf	___aodiv@divisor^0,c
  5754   003F40  0E00               	movlw	0
  5755   003F42  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5756   003F44  0E00               	movlw	0
  5757   003F46  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5758   003F48  0E00               	movlw	0
  5759   003F4A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5760   003F4C  0E00               	movlw	0
  5761   003F4E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5762   003F50  0E00               	movlw	0
  5763   003F52  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5764   003F54  0E00               	movlw	0
  5765   003F56  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5766   003F58  0E00               	movlw	0
  5767   003F5A  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5768   003F5C  ECE0  F022         	call	___aodiv	;wreg free
  5769   003F60  C001  F034         	movff	?___aodiv,dtoa@n
  5770   003F64  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5771   003F68  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5772   003F6C  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5773   003F70  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5774   003F74  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5775   003F78  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5776   003F7C  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5777   003F80                     l4710:
  5778                           
  5779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5780   003F80  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5781   003F82  EFCB  F01F         	goto	u4561
  5782   003F86  503D               	movf	(dtoa@i+1)^0,w,c
  5783   003F88  E108               	bnz	u4560
  5784   003F8A  043C               	decf	dtoa@i^0,w,c
  5785   003F8C  A0D8               	btfss	status,0,c
  5786   003F8E  EFCB  F01F         	goto	u4561
  5787   003F92  EFCD  F01F         	goto	u4560
  5788   003F96                     u4561:
  5789   003F96  EFE9  F01F         	goto	l4716
  5790   003F9A                     u4560:
  5791   003F9A  5034               	movf	dtoa@n^0,w,c
  5792   003F9C  1035               	iorwf	(dtoa@n+1)^0,w,c
  5793   003F9E  1036               	iorwf	(dtoa@n+2)^0,w,c
  5794   003FA0  1037               	iorwf	(dtoa@n+3)^0,w,c
  5795   003FA2  1038               	iorwf	(dtoa@n+4)^0,w,c
  5796   003FA4  1039               	iorwf	(dtoa@n+5)^0,w,c
  5797   003FA6  103A               	iorwf	(dtoa@n+6)^0,w,c
  5798   003FA8  103B               	iorwf	(dtoa@n+7)^0,w,c
  5799   003FAA  A4D8               	btfss	status,2,c
  5800   003FAC  EFDA  F01F         	goto	u4571
  5801   003FB0  EFDC  F01F         	goto	u4570
  5802   003FB4                     u4571:
  5803   003FB4  EF44  F01F         	goto	l4700
  5804   003FB8                     u4570:
  5805   003FB8  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5806   003FBA  EFE9  F01F         	goto	u4580
  5807   003FBE  5031               	movf	(dtoa@p+1)^0,w,c
  5808   003FC0  E106               	bnz	u4581
  5809   003FC2  0430               	decf	dtoa@p^0,w,c
  5810   003FC4  B0D8               	btfsc	status,0,c
  5811   003FC6  EFE7  F01F         	goto	u4581
  5812   003FCA  EFE9  F01F         	goto	u4580
  5813   003FCE                     u4581:
  5814   003FCE  EF44  F01F         	goto	l4700
  5815   003FD2                     u4580:
  5816   003FD2                     l4716:
  5817                           
  5818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5819   003FD2  503E               	movf	dtoa@s^0,w,c
  5820   003FD4  B4D8               	btfsc	status,2,c
  5821   003FD6  EFEF  F01F         	goto	u4591
  5822   003FDA  EFF1  F01F         	goto	u4590
  5823   003FDE                     u4591:
  5824   003FDE  EFFC  F01F         	goto	l4722
  5825   003FE2                     u4590:
  5826   003FE2                     
  5827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5828   003FE2  063C               	decf	dtoa@i^0,f,c
  5829   003FE4  A0D8               	btfss	status,0,c
  5830   003FE6  063D               	decf	(dtoa@i+1)^0,f,c
  5831   003FE8                     
  5832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5833   003FE8  0EA0               	movlw	low _dbuf
  5834   003FEA  243C               	addwf	dtoa@i^0,w,c
  5835   003FEC  6ED9               	movwf	fsr2l,c
  5836   003FEE  0E02               	movlw	high _dbuf
  5837   003FF0  203D               	addwfc	(dtoa@i+1)^0,w,c
  5838   003FF2  6EDA               	movwf	fsr2h,c
  5839   003FF4  C03E  FFDF         	movff	dtoa@s,indf2
  5840   003FF8                     l4722:
  5841                           
  5842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5843   003FF8  C01C  F011         	movff	dtoa@fp,pad@fp
  5844   003FFC  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5845   004000  0EA0               	movlw	low _dbuf
  5846   004002  243C               	addwf	dtoa@i^0,w,c
  5847   004004  6E13               	movwf	pad@buf^0,c
  5848   004006  0E02               	movlw	high _dbuf
  5849   004008  203D               	addwfc	(dtoa@i+1)^0,w,c
  5850   00400A  6E14               	movwf	(pad@buf+1)^0,c
  5851   00400C  C032  F015         	movff	dtoa@w,pad@p
  5852   004010  C033  F016         	movff	dtoa@w+1,pad@p+1
  5853   004014  EC14  F02A         	call	_pad	;wreg free
  5854   004018  0012               	return		;funcret
  5855   00401A                     __end_of_dtoa:
  5856                           	callstack 0
  5857                           
  5858 ;; *************** function _pad *****************
  5859 ;; Defined at:
  5860 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5863 ;;		 -> sprintf@f(11), 
  5864 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5865 ;;		 -> dbuf(80), 
  5866 ;;  p               2   20[COMRAM] int 
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;  w               2   25[COMRAM] int 
  5869 ;;  i               2   23[COMRAM] int 
  5870 ;; Return value:  Size  Location     Type
  5871 ;;                  1    wreg      void 
  5872 ;; Registers used:
  5873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5874 ;; Tracked objects:
  5875 ;;		On entry : 0/0
  5876 ;;		On exit  : 0/0
  5877 ;;		Unchanged: 0/0
  5878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5879 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5880 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5882 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5883 ;;Total ram usage:       11 bytes
  5884 ;; Hardware stack levels used: 1
  5885 ;; Hardware stack levels required when called: 4
  5886 ;; This function calls:
  5887 ;;		_fputc
  5888 ;;		_fputs
  5889 ;; This function is called by:
  5890 ;;		_dtoa
  5891 ;;		_efgtoa
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           	psect	text14
  5896   005428                     __ptext14:
  5897                           	callstack 0
  5898   005428                     _pad:
  5899                           	callstack 22
  5900   005428                     
  5901                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5902   005428  BE16               	btfsc	(pad@p+1)^0,7,c
  5903   00542A  EF19  F02A         	goto	u4141
  5904   00542E  EF1B  F02A         	goto	u4140
  5905   005432                     u4141:
  5906   005432  EF21  F02A         	goto	l4510
  5907   005436                     u4140:
  5908   005436  C015  F01A         	movff	pad@p,pad@w
  5909   00543A  C016  F01B         	movff	pad@p+1,pad@w+1
  5910   00543E  EF25  F02A         	goto	l1383
  5911   005442                     l4510:
  5912   005442  0E00               	movlw	0
  5913   005444  6E1B               	movwf	(pad@w+1)^0,c
  5914   005446  0E00               	movlw	0
  5915   005448  6E1A               	movwf	pad@w^0,c
  5916   00544A                     l1383:
  5917                           
  5918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5919   00544A  0E00               	movlw	0
  5920   00544C  6E19               	movwf	(pad@i+1)^0,c
  5921   00544E  0E00               	movlw	0
  5922   005450  6E18               	movwf	pad@i^0,c
  5923                           
  5924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5925   005452  EF37  F02A         	goto	l4516
  5926   005456                     l4512:
  5927                           
  5928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5929   005456  0E00               	movlw	0
  5930   005458  6E02               	movwf	(fputc@c+1)^0,c
  5931   00545A  0E20               	movlw	32
  5932   00545C  6E01               	movwf	fputc@c^0,c
  5933   00545E  C011  F003         	movff	pad@fp,fputc@fp
  5934   005462  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5935   005466  EC90  F026         	call	_fputc	;wreg free
  5936   00546A                     
  5937                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5938   00546A  4A18               	infsnz	pad@i^0,f,c
  5939   00546C  2A19               	incf	(pad@i+1)^0,f,c
  5940   00546E                     l4516:
  5941                           
  5942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5943   00546E  501A               	movf	pad@w^0,w,c
  5944   005470  5C18               	subwf	pad@i^0,w,c
  5945   005472  5019               	movf	(pad@i+1)^0,w,c
  5946   005474  0A80               	xorlw	128
  5947   005476  6E17               	movwf	??_pad^0,c
  5948   005478  501B               	movf	(pad@w+1)^0,w,c
  5949   00547A  0A80               	xorlw	128
  5950   00547C  5817               	subwfb	??_pad^0,w,c
  5951   00547E  A0D8               	btfss	status,0,c
  5952   005480  EF44  F02A         	goto	u4151
  5953   005484  EF46  F02A         	goto	u4150
  5954   005488                     u4151:
  5955   005488  EF2B  F02A         	goto	l4512
  5956   00548C                     u4150:
  5957   00548C                     
  5958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5959   00548C  C013  F00A         	movff	pad@buf,fputs@s
  5960   005490  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5961   005494  C011  F00C         	movff	pad@fp,fputs@fp
  5962   005498  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5963   00549C  ECAC  F02E         	call	_fputs	;wreg free
  5964   0054A0  0012               	return		;funcret
  5965   0054A2                     __end_of_pad:
  5966                           	callstack 0
  5967                           
  5968 ;; *************** function _fputs *****************
  5969 ;; Defined at:
  5970 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5973 ;;		 -> dbuf(80), 
  5974 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5975 ;;		 -> sprintf@f(11), 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  i               2   14[COMRAM] int 
  5978 ;;  c               1   13[COMRAM] unsigned char 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  2    9[COMRAM] int 
  5981 ;; Registers used:
  5982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5988 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5989 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5991 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5992 ;;Total ram usage:        7 bytes
  5993 ;; Hardware stack levels used: 1
  5994 ;; Hardware stack levels required when called: 3
  5995 ;; This function calls:
  5996 ;;		_fputc
  5997 ;; This function is called by:
  5998 ;;		_pad
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           	psect	text15
  6003   005D58                     __ptext15:
  6004                           	callstack 0
  6005   005D58                     _fputs:
  6006                           	callstack 22
  6007   005D58  0E00               	movlw	0
  6008   005D5A  6E10               	movwf	(fputs@i+1)^0,c
  6009   005D5C  0E00               	movlw	0
  6010   005D5E  6E0F               	movwf	fputs@i^0,c
  6011   005D60  EFBD  F02E         	goto	l4044
  6012   005D64                     l4040:
  6013   005D64  C00E  F001         	movff	fputs@c,fputc@c
  6014   005D68  6A02               	clrf	(fputc@c+1)^0,c
  6015   005D6A  C00C  F003         	movff	fputs@fp,fputc@fp
  6016   005D6E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6017   005D72  EC90  F026         	call	_fputc	;wreg free
  6018   005D76  4A0F               	infsnz	fputs@i^0,f,c
  6019   005D78  2A10               	incf	(fputs@i+1)^0,f,c
  6020   005D7A                     l4044:
  6021   005D7A  500F               	movf	fputs@i^0,w,c
  6022   005D7C  240A               	addwf	fputs@s^0,w,c
  6023   005D7E  6ED9               	movwf	fsr2l,c
  6024   005D80  5010               	movf	(fputs@i+1)^0,w,c
  6025   005D82  200B               	addwfc	(fputs@s+1)^0,w,c
  6026   005D84  6EDA               	movwf	fsr2h,c
  6027   005D86  50DF               	movf	indf2,w,c
  6028   005D88  6E0E               	movwf	fputs@c^0,c
  6029   005D8A  500E               	movf	fputs@c^0,w,c
  6030   005D8C  A4D8               	btfss	status,2,c
  6031   005D8E  EFCB  F02E         	goto	u3401
  6032   005D92  EFCD  F02E         	goto	u3400
  6033   005D96                     u3401:
  6034   005D96  EFB2  F02E         	goto	l4040
  6035   005D9A                     u3400:
  6036   005D9A  0012               	return		;funcret
  6037   005D9C                     __end_of_fputs:
  6038                           	callstack 0
  6039                           
  6040 ;; *************** function _fputc *****************
  6041 ;; Defined at:
  6042 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  c               2    0[COMRAM] int 
  6045 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6046 ;;		 -> sprintf@f(11), 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;		None
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  2    0[COMRAM] int 
  6051 ;; Registers used:
  6052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6058 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6061 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6062 ;;Total ram usage:        9 bytes
  6063 ;; Hardware stack levels used: 1
  6064 ;; Hardware stack levels required when called: 2
  6065 ;; This function calls:
  6066 ;;		_putch
  6067 ;; This function is called by:
  6068 ;;		_pad
  6069 ;;		_vfpfcnvrt
  6070 ;;		_fputs
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           	psect	text16
  6075   004D20                     __ptext16:
  6076                           	callstack 0
  6077   004D20                     _fputc:
  6078                           	callstack 25
  6079   004D20  5003               	movf	fputc@fp^0,w,c
  6080   004D22  1004               	iorwf	(fputc@fp+1)^0,w,c
  6081   004D24  B4D8               	btfsc	status,2,c
  6082   004D26  EF97  F026         	goto	u2941
  6083   004D2A  EF99  F026         	goto	u2940
  6084   004D2E                     u2941:
  6085   004D2E  EFA2  F026         	goto	l3798
  6086   004D32                     u2940:
  6087   004D32  5003               	movf	fputc@fp^0,w,c
  6088   004D34  1004               	iorwf	(fputc@fp+1)^0,w,c
  6089   004D36  A4D8               	btfss	status,2,c
  6090   004D38  EFA0  F026         	goto	u2951
  6091   004D3C  EFA2  F026         	goto	u2950
  6092   004D40                     u2951:
  6093   004D40  EFA7  F026         	goto	l3800
  6094   004D44                     u2950:
  6095   004D44                     l3798:
  6096   004D44  5001               	movf	fputc@c^0,w,c
  6097   004D46  EC60  F030         	call	_putch
  6098   004D4A  EFF4  F026         	goto	l1543
  6099   004D4E                     l3800:
  6100   004D4E  EE20 F009          	lfsr	2,9
  6101   004D52  5003               	movf	fputc@fp^0,w,c
  6102   004D54  26D9               	addwf	fsr2l,f,c
  6103   004D56  5004               	movf	(fputc@fp+1)^0,w,c
  6104   004D58  22DA               	addwfc	fsr2h,f,c
  6105   004D5A  50DE               	movf	postinc2,w,c
  6106   004D5C  10DE               	iorwf	postinc2,w,c
  6107   004D5E  B4D8               	btfsc	status,2,c
  6108   004D60  EFB4  F026         	goto	u2961
  6109   004D64  EFB6  F026         	goto	u2960
  6110   004D68                     u2961:
  6111   004D68  EFD1  F026         	goto	l3804
  6112   004D6C                     u2960:
  6113   004D6C  EE20 F009          	lfsr	2,9
  6114   004D70  5003               	movf	fputc@fp^0,w,c
  6115   004D72  26D9               	addwf	fsr2l,f,c
  6116   004D74  5004               	movf	(fputc@fp+1)^0,w,c
  6117   004D76  22DA               	addwfc	fsr2h,f,c
  6118   004D78  EE10 F003          	lfsr	1,3
  6119   004D7C  5003               	movf	fputc@fp^0,w,c
  6120   004D7E  26E1               	addwf	fsr1l,f,c
  6121   004D80  5004               	movf	(fputc@fp+1)^0,w,c
  6122   004D82  22E2               	addwfc	fsr1h,f,c
  6123   004D84  50DE               	movf	postinc2,w,c
  6124   004D86  5CE6               	subwf	postinc1,w,c
  6125   004D88  50E6               	movf	postinc1,w,c
  6126   004D8A  0A80               	xorlw	128
  6127   004D8C  6E09               	movwf	(??_fputc+4)^0,c
  6128   004D8E  50DE               	movf	postinc2,w,c
  6129   004D90  0A80               	xorlw	128
  6130   004D92  5809               	subwfb	(??_fputc+4)^0,w,c
  6131   004D94  B0D8               	btfsc	status,0,c
  6132   004D96  EFCF  F026         	goto	u2971
  6133   004D9A  EFD1  F026         	goto	u2970
  6134   004D9E                     u2971:
  6135   004D9E  EFF4  F026         	goto	l1543
  6136   004DA2                     u2970:
  6137   004DA2                     l3804:
  6138   004DA2  EE20 F003          	lfsr	2,3
  6139   004DA6  5003               	movf	fputc@fp^0,w,c
  6140   004DA8  26D9               	addwf	fsr2l,f,c
  6141   004DAA  5004               	movf	(fputc@fp+1)^0,w,c
  6142   004DAC  22DA               	addwfc	fsr2h,f,c
  6143   004DAE  CFDE F005          	movff	postinc2,??_fputc
  6144   004DB2  CFDD F006          	movff	postdec2,??_fputc+1
  6145   004DB6  C003  FFD9         	movff	fputc@fp,fsr2l
  6146   004DBA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6147   004DBE  CFDE F007          	movff	postinc2,??_fputc+2
  6148   004DC2  CFDD F008          	movff	postdec2,??_fputc+3
  6149   004DC6  5005               	movf	??_fputc^0,w,c
  6150   004DC8  2407               	addwf	(??_fputc+2)^0,w,c
  6151   004DCA  6ED9               	movwf	fsr2l,c
  6152   004DCC  5006               	movf	(??_fputc+1)^0,w,c
  6153   004DCE  2008               	addwfc	(??_fputc+3)^0,w,c
  6154   004DD0  6EDA               	movwf	fsr2h,c
  6155   004DD2  C001  FFDF         	movff	fputc@c,indf2
  6156   004DD6  EE20 F003          	lfsr	2,3
  6157   004DDA  5003               	movf	fputc@fp^0,w,c
  6158   004DDC  26D9               	addwf	fsr2l,f,c
  6159   004DDE  5004               	movf	(fputc@fp+1)^0,w,c
  6160   004DE0  22DA               	addwfc	fsr2h,f,c
  6161   004DE2  2ADE               	incf	postinc2,f,c
  6162   004DE4  0E00               	movlw	0
  6163   004DE6  22DD               	addwfc	postdec2,f,c
  6164   004DE8                     l1543:
  6165   004DE8  0012               	return		;funcret
  6166   004DEA                     __end_of_fputc:
  6167                           	callstack 0
  6168                           
  6169 ;; *************** function _putch *****************
  6170 ;; Defined at:
  6171 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  c               1    wreg     unsigned char 
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;  c               1    0[COMRAM] unsigned char 
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  1    wreg      void 
  6178 ;; Registers used:
  6179 ;;		wreg
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6189 ;;Total ram usage:        0 bytes
  6190 ;; Hardware stack levels used: 1
  6191 ;; Hardware stack levels required when called: 1
  6192 ;; This function calls:
  6193 ;;		Nothing
  6194 ;; This function is called by:
  6195 ;;		_fputc
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text17
  6200   0060C0                     __ptext17:
  6201                           	callstack 0
  6202   0060C0                     _putch:
  6203                           	callstack 25
  6204   0060C0  0012               	return		;funcret
  6205   0060C2                     __end_of_putch:
  6206                           	callstack 0
  6207                           
  6208 ;; *************** function _abs *****************
  6209 ;; Defined at:
  6210 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;  a               2   18[COMRAM] int 
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;		None
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  2   18[COMRAM] int 
  6217 ;; Registers used:
  6218 ;;		wreg, status,2, status,0
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6226 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6227 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6228 ;;Total ram usage:        4 bytes
  6229 ;; Hardware stack levels used: 1
  6230 ;; Hardware stack levels required when called: 1
  6231 ;; This function calls:
  6232 ;;		Nothing
  6233 ;; This function is called by:
  6234 ;;		_dtoa
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           	psect	text18
  6239   005DDE                     __ptext18:
  6240                           	callstack 0
  6241   005DDE                     _abs:
  6242                           	callstack 25
  6243   005DDE  BE14               	btfsc	(abs@a+1)^0,7,c
  6244   005DE0  EFFC  F02E         	goto	u4160
  6245   005DE4  5014               	movf	(abs@a+1)^0,w,c
  6246   005DE6  E106               	bnz	u4161
  6247   005DE8  0413               	decf	abs@a^0,w,c
  6248   005DEA  B0D8               	btfsc	status,0,c
  6249   005DEC  EFFA  F02E         	goto	u4161
  6250   005DF0  EFFC  F02E         	goto	u4160
  6251   005DF4                     u4161:
  6252   005DF4  EF0A  F02F         	goto	l1502
  6253   005DF8                     u4160:
  6254   005DF8  C013  F015         	movff	abs@a,??_abs
  6255   005DFC  C014  F016         	movff	abs@a+1,??_abs+1
  6256   005E00  1E15               	comf	??_abs^0,f,c
  6257   005E02  1E16               	comf	(??_abs+1)^0,f,c
  6258   005E04  4A15               	infsnz	??_abs^0,f,c
  6259   005E06  2A16               	incf	(??_abs+1)^0,f,c
  6260   005E08  C015  F013         	movff	??_abs,?_abs
  6261   005E0C  C016  F014         	movff	??_abs+1,?_abs+1
  6262   005E10  EF0E  F02F         	goto	l1505
  6263   005E14                     l1502:
  6264   005E14  C013  F013         	movff	abs@a,?_abs
  6265   005E18  C014  F014         	movff	abs@a+1,?_abs+1
  6266   005E1C                     l1505:
  6267   005E1C  0012               	return		;funcret
  6268   005E1E                     __end_of_abs:
  6269                           	callstack 0
  6270                           
  6271 ;; *************** function ___aomod *****************
  6272 ;; Defined at:
  6273 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;  dividend        8    0[COMRAM] long long 
  6276 ;;  divisor         8    8[COMRAM] long long 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;  sign            1   17[COMRAM] unsigned char 
  6279 ;;  counter         1   16[COMRAM] unsigned char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  8    0[COMRAM] long long 
  6282 ;; Registers used:
  6283 ;;		wreg, status,2, status,0
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6289 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6292 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6293 ;;Total ram usage:       18 bytes
  6294 ;; Hardware stack levels used: 1
  6295 ;; Hardware stack levels required when called: 1
  6296 ;; This function calls:
  6297 ;;		Nothing
  6298 ;; This function is called by:
  6299 ;;		_dtoa
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text19
  6304   0048B4                     __ptext19:
  6305                           	callstack 0
  6306   0048B4                     ___aomod:
  6307                           	callstack 25
  6308   0048B4  0E00               	movlw	0
  6309   0048B6  6E12               	movwf	___aomod@sign^0,c
  6310   0048B8  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6311   0048BA  EF63  F024         	goto	u3500
  6312   0048BE  EF61  F024         	goto	u3501
  6313   0048C2                     u3501:
  6314   0048C2  EF75  F024         	goto	l4114
  6315   0048C6                     u3500:
  6316   0048C6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6317   0048C8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6318   0048CA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6319   0048CC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6320   0048CE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6321   0048D0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6322   0048D2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6323   0048D4  6C01               	negf	___aomod@dividend^0,c
  6324   0048D6  0E00               	movlw	0
  6325   0048D8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6326   0048DA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6327   0048DC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6328   0048DE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6329   0048E0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6330   0048E2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6331   0048E4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6332   0048E6  0E01               	movlw	1
  6333   0048E8  6E12               	movwf	___aomod@sign^0,c
  6334   0048EA                     l4114:
  6335   0048EA  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6336   0048EC  EF7C  F024         	goto	u3510
  6337   0048F0  EF7A  F024         	goto	u3511
  6338   0048F4                     u3511:
  6339   0048F4  EF8C  F024         	goto	l4118
  6340   0048F8                     u3510:
  6341   0048F8  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6342   0048FA  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6343   0048FC  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6344   0048FE  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6345   004900  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6346   004902  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6347   004904  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6348   004906  6C09               	negf	___aomod@divisor^0,c
  6349   004908  0E00               	movlw	0
  6350   00490A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6351   00490C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6352   00490E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6353   004910  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6354   004912  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6355   004914  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6356   004916  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6357   004918                     l4118:
  6358   004918  5009               	movf	___aomod@divisor^0,w,c
  6359   00491A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6360   00491C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6361   00491E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6362   004920  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6363   004922  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6364   004924  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6365   004926  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6366   004928  B4D8               	btfsc	status,2,c
  6367   00492A  EF99  F024         	goto	u3521
  6368   00492E  EF9B  F024         	goto	u3520
  6369   004932                     u3521:
  6370   004932  EFE3  F024         	goto	l4134
  6371   004936                     u3520:
  6372   004936  0E01               	movlw	1
  6373   004938  6E11               	movwf	___aomod@counter^0,c
  6374   00493A  EFA9  F024         	goto	l4124
  6375   00493E                     l4122:
  6376   00493E  90D8               	bcf	status,0,c
  6377   004940  3609               	rlcf	___aomod@divisor^0,f,c
  6378   004942  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6379   004944  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6380   004946  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6381   004948  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6382   00494A  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6383   00494C  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6384   00494E  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6385   004950  2A11               	incf	___aomod@counter^0,f,c
  6386   004952                     l4124:
  6387   004952  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6388   004954  EFAE  F024         	goto	u3531
  6389   004958  EFB0  F024         	goto	u3530
  6390   00495C                     u3531:
  6391   00495C  EF9F  F024         	goto	l4122
  6392   004960                     u3530:
  6393   004960                     l4126:
  6394   004960  5009               	movf	___aomod@divisor^0,w,c
  6395   004962  5C01               	subwf	___aomod@dividend^0,w,c
  6396   004964  500A               	movf	(___aomod@divisor+1)^0,w,c
  6397   004966  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6398   004968  500B               	movf	(___aomod@divisor+2)^0,w,c
  6399   00496A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6400   00496C  500C               	movf	(___aomod@divisor+3)^0,w,c
  6401   00496E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6402   004970  500D               	movf	(___aomod@divisor+4)^0,w,c
  6403   004972  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6404   004974  500E               	movf	(___aomod@divisor+5)^0,w,c
  6405   004976  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6406   004978  500F               	movf	(___aomod@divisor+6)^0,w,c
  6407   00497A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6408   00497C  5010               	movf	(___aomod@divisor+7)^0,w,c
  6409   00497E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6410   004980  A0D8               	btfss	status,0,c
  6411   004982  EFC5  F024         	goto	u3541
  6412   004986  EFC7  F024         	goto	u3540
  6413   00498A                     u3541:
  6414   00498A  EFD7  F024         	goto	l4130
  6415   00498E                     u3540:
  6416   00498E  5009               	movf	___aomod@divisor^0,w,c
  6417   004990  5E01               	subwf	___aomod@dividend^0,f,c
  6418   004992  500A               	movf	(___aomod@divisor+1)^0,w,c
  6419   004994  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6420   004996  500B               	movf	(___aomod@divisor+2)^0,w,c
  6421   004998  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6422   00499A  500C               	movf	(___aomod@divisor+3)^0,w,c
  6423   00499C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6424   00499E  500D               	movf	(___aomod@divisor+4)^0,w,c
  6425   0049A0  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6426   0049A2  500E               	movf	(___aomod@divisor+5)^0,w,c
  6427   0049A4  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6428   0049A6  500F               	movf	(___aomod@divisor+6)^0,w,c
  6429   0049A8  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6430   0049AA  5010               	movf	(___aomod@divisor+7)^0,w,c
  6431   0049AC  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6432   0049AE                     l4130:
  6433   0049AE  90D8               	bcf	status,0,c
  6434   0049B0  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6435   0049B2  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6436   0049B4  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6437   0049B6  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6438   0049B8  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6439   0049BA  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6440   0049BC  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6441   0049BE  3209               	rrcf	___aomod@divisor^0,f,c
  6442   0049C0  2E11               	decfsz	___aomod@counter^0,f,c
  6443   0049C2  EFB0  F024         	goto	l4126
  6444   0049C6                     l4134:
  6445   0049C6  5012               	movf	___aomod@sign^0,w,c
  6446   0049C8  B4D8               	btfsc	status,2,c
  6447   0049CA  EFE9  F024         	goto	u3551
  6448   0049CE  EFEB  F024         	goto	u3550
  6449   0049D2                     u3551:
  6450   0049D2  EFFB  F024         	goto	l4138
  6451   0049D6                     u3550:
  6452   0049D6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6453   0049D8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6454   0049DA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6455   0049DC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6456   0049DE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6457   0049E0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6458   0049E2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6459   0049E4  6C01               	negf	___aomod@dividend^0,c
  6460   0049E6  0E00               	movlw	0
  6461   0049E8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6462   0049EA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6463   0049EC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6464   0049EE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6465   0049F0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6466   0049F2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6467   0049F4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6468   0049F6                     l4138:
  6469   0049F6  C001  F001         	movff	___aomod@dividend,?___aomod
  6470   0049FA  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6471   0049FE  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6472   004A02  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6473   004A06  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6474   004A0A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6475   004A0E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6476   004A12  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6477   004A16  0012               	return		;funcret
  6478   004A18                     __end_of___aomod:
  6479                           	callstack 0
  6480                           
  6481 ;; *************** function ___aodiv *****************
  6482 ;; Defined at:
  6483 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  dividend        8    0[COMRAM] long long 
  6486 ;;  divisor         8    8[COMRAM] long long 
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;  quotient        8   18[COMRAM] long long 
  6489 ;;  sign            1   17[COMRAM] unsigned char 
  6490 ;;  counter         1   16[COMRAM] unsigned char 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  8    0[COMRAM] long long 
  6493 ;; Registers used:
  6494 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6500 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6501 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6503 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6504 ;;Total ram usage:       26 bytes
  6505 ;; Hardware stack levels used: 1
  6506 ;; Hardware stack levels required when called: 1
  6507 ;; This function calls:
  6508 ;;		Nothing
  6509 ;; This function is called by:
  6510 ;;		_dtoa
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           	psect	text20
  6515   0045C0                     __ptext20:
  6516                           	callstack 0
  6517   0045C0                     ___aodiv:
  6518                           	callstack 25
  6519   0045C0  0E00               	movlw	0
  6520   0045C2  6E12               	movwf	___aodiv@sign^0,c
  6521   0045C4  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6522   0045C6  EFE9  F022         	goto	u3430
  6523   0045CA  EFE7  F022         	goto	u3431
  6524   0045CE                     u3431:
  6525   0045CE  EFFB  F022         	goto	l4070
  6526   0045D2                     u3430:
  6527   0045D2  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6528   0045D4  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6529   0045D6  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6530   0045D8  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6531   0045DA  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6532   0045DC  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6533   0045DE  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6534   0045E0  6C09               	negf	___aodiv@divisor^0,c
  6535   0045E2  0E00               	movlw	0
  6536   0045E4  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6537   0045E6  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6538   0045E8  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6539   0045EA  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6540   0045EC  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6541   0045EE  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6542   0045F0  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6543   0045F2  0E01               	movlw	1
  6544   0045F4  6E12               	movwf	___aodiv@sign^0,c
  6545   0045F6                     l4070:
  6546   0045F6  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6547   0045F8  EF02  F023         	goto	u3440
  6548   0045FC  EF00  F023         	goto	u3441
  6549   004600                     u3441:
  6550   004600  EF14  F023         	goto	l4076
  6551   004604                     u3440:
  6552   004604  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6553   004606  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6554   004608  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6555   00460A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6556   00460C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6557   00460E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6558   004610  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6559   004612  6C01               	negf	___aodiv@dividend^0,c
  6560   004614  0E00               	movlw	0
  6561   004616  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6562   004618  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6563   00461A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6564   00461C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6565   00461E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6566   004620  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6567   004622  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6568   004624  0E01               	movlw	1
  6569   004626  1A12               	xorwf	___aodiv@sign^0,f,c
  6570   004628                     l4076:
  6571   004628  EE20  F013         	lfsr	2,___aodiv@quotient
  6572   00462C  0E07               	movlw	7
  6573   00462E                     u3451:
  6574   00462E  6ADE               	clrf	postinc2,c
  6575   004630  06E8               	decf	wreg,f,c
  6576   004632  E2FD               	bc	u3451
  6577   004634  5009               	movf	___aodiv@divisor^0,w,c
  6578   004636  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6579   004638  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6580   00463A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6581   00463C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6582   00463E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6583   004640  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6584   004642  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6585   004644  B4D8               	btfsc	status,2,c
  6586   004646  EF27  F023         	goto	u3461
  6587   00464A  EF29  F023         	goto	u3460
  6588   00464E                     u3461:
  6589   00464E  EF7B  F023         	goto	l4098
  6590   004652                     u3460:
  6591   004652  0E01               	movlw	1
  6592   004654  6E11               	movwf	___aodiv@counter^0,c
  6593   004656  EF37  F023         	goto	l4084
  6594   00465A                     l4082:
  6595   00465A  90D8               	bcf	status,0,c
  6596   00465C  3609               	rlcf	___aodiv@divisor^0,f,c
  6597   00465E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6598   004660  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6599   004662  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6600   004664  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6601   004666  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6602   004668  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6603   00466A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6604   00466C  2A11               	incf	___aodiv@counter^0,f,c
  6605   00466E                     l4084:
  6606   00466E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6607   004670  EF3C  F023         	goto	u3471
  6608   004674  EF3E  F023         	goto	u3470
  6609   004678                     u3471:
  6610   004678  EF2D  F023         	goto	l4082
  6611   00467C                     u3470:
  6612   00467C                     l4086:
  6613   00467C  90D8               	bcf	status,0,c
  6614   00467E  3613               	rlcf	___aodiv@quotient^0,f,c
  6615   004680  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6616   004682  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6617   004684  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6618   004686  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6619   004688  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6620   00468A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6621   00468C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6622   00468E  5009               	movf	___aodiv@divisor^0,w,c
  6623   004690  5C01               	subwf	___aodiv@dividend^0,w,c
  6624   004692  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6625   004694  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6626   004696  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6627   004698  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6628   00469A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6629   00469C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6630   00469E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6631   0046A0  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6632   0046A2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6633   0046A4  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6634   0046A6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6635   0046A8  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6636   0046AA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6637   0046AC  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6638   0046AE  A0D8               	btfss	status,0,c
  6639   0046B0  EF5C  F023         	goto	u3481
  6640   0046B4  EF5E  F023         	goto	u3480
  6641   0046B8                     u3481:
  6642   0046B8  EF6F  F023         	goto	l4094
  6643   0046BC                     u3480:
  6644   0046BC  5009               	movf	___aodiv@divisor^0,w,c
  6645   0046BE  5E01               	subwf	___aodiv@dividend^0,f,c
  6646   0046C0  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6647   0046C2  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6648   0046C4  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6649   0046C6  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6650   0046C8  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6651   0046CA  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6652   0046CC  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6653   0046CE  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6654   0046D0  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6655   0046D2  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6656   0046D4  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6657   0046D6  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6658   0046D8  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6659   0046DA  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6660   0046DC  8013               	bsf	___aodiv@quotient^0,0,c
  6661   0046DE                     l4094:
  6662   0046DE  90D8               	bcf	status,0,c
  6663   0046E0  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6664   0046E2  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6665   0046E4  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6666   0046E6  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6667   0046E8  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6668   0046EA  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6669   0046EC  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6670   0046EE  3209               	rrcf	___aodiv@divisor^0,f,c
  6671   0046F0  2E11               	decfsz	___aodiv@counter^0,f,c
  6672   0046F2  EF3E  F023         	goto	l4086
  6673   0046F6                     l4098:
  6674   0046F6  5012               	movf	___aodiv@sign^0,w,c
  6675   0046F8  B4D8               	btfsc	status,2,c
  6676   0046FA  EF81  F023         	goto	u3491
  6677   0046FE  EF83  F023         	goto	u3490
  6678   004702                     u3491:
  6679   004702  EF93  F023         	goto	l4102
  6680   004706                     u3490:
  6681   004706  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6682   004708  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6683   00470A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6684   00470C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6685   00470E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6686   004710  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6687   004712  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6688   004714  6C13               	negf	___aodiv@quotient^0,c
  6689   004716  0E00               	movlw	0
  6690   004718  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6691   00471A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6692   00471C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6693   00471E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6694   004720  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6695   004722  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6696   004724  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6697   004726                     l4102:
  6698   004726  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6699   00472A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6700   00472E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6701   004732  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6702   004736  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6703   00473A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6704   00473E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6705   004742  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6706   004746  0012               	return		;funcret
  6707   004748                     __end_of___aodiv:
  6708                           	callstack 0
  6709                           
  6710 ;; *************** function _sendStringSerial4 *****************
  6711 ;; Defined at:
  6712 ;;		line 33 in file "serial.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  string          2    1[COMRAM] PTR unsigned char 
  6715 ;;		 -> main@buf(100), 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;		None
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  1    wreg      void 
  6720 ;; Registers used:
  6721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;Total ram usage:        2 bytes
  6732 ;; Hardware stack levels used: 1
  6733 ;; Hardware stack levels required when called: 2
  6734 ;; This function calls:
  6735 ;;		_sendCharSerial4
  6736 ;; This function is called by:
  6737 ;;		_main
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text21
  6742   005F40                     __ptext21:
  6743                           	callstack 0
  6744   005F40                     _sendStringSerial4:
  6745                           	callstack 28
  6746   005F40                     
  6747                           ;serial.c: 34:     while (*string!=0){
  6748   005F40  EFAB  F02F         	goto	l5460
  6749   005F44                     l5456:
  6750                           
  6751                           ;serial.c: 35:         sendCharSerial4(*string++);
  6752   005F44  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6753   005F48  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6754   005F4C  50DF               	movf	indf2,w,c
  6755   005F4E  EC36  F030         	call	_sendCharSerial4
  6756   005F52  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6757   005F54  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6758   005F56                     l5460:
  6759                           
  6760                           ;serial.c: 34:     while (*string!=0){
  6761   005F56  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6762   005F5A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6763   005F5E  50DF               	movf	indf2,w,c
  6764   005F60  A4D8               	btfss	status,2,c
  6765   005F62  EFB5  F02F         	goto	u5441
  6766   005F66  EFB7  F02F         	goto	u5440
  6767   005F6A                     u5441:
  6768   005F6A  EFA2  F02F         	goto	l5456
  6769   005F6E                     u5440:
  6770   005F6E  0012               	return		;funcret
  6771   005F70                     __end_of_sendStringSerial4:
  6772                           	callstack 0
  6773                           
  6774 ;; *************** function _sendCharSerial4 *****************
  6775 ;; Defined at:
  6776 ;;		line 26 in file "serial.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;  charToSend      1    wreg     unsigned char 
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;  charToSend      1    0[COMRAM] unsigned char 
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1    wreg      void 
  6783 ;; Registers used:
  6784 ;;		wreg
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6793 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6794 ;;Total ram usage:        1 bytes
  6795 ;; Hardware stack levels used: 1
  6796 ;; Hardware stack levels required when called: 1
  6797 ;; This function calls:
  6798 ;;		Nothing
  6799 ;; This function is called by:
  6800 ;;		_sendStringSerial4
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text22
  6805   00606C                     __ptext22:
  6806                           	callstack 0
  6807   00606C                     _sendCharSerial4:
  6808                           	callstack 28
  6809                           
  6810                           ;incstack = 0
  6811                           ;sendCharSerial4@charToSend stored from wreg
  6812   00606C  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6813   00606E                     l195:
  6814   00606E  010E               	movlb	14	; () banked
  6815   006070  A537               	btfss	55,2,b	;volatile
  6816   006072  EF3D  F030         	goto	u4991
  6817   006076  EF3F  F030         	goto	u4990
  6818   00607A                     u4991:
  6819   00607A  EF37  F030         	goto	l195
  6820   00607E                     u4990:
  6821   00607E                     
  6822                           ; BSR set to: 14
  6823                           ;serial.c: 28:     TX4REG = charToSend;
  6824   00607E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6825   006082                     
  6826                           ; BSR set to: 14
  6827   006082  0012               	return		;funcret
  6828   006084                     __end_of_sendCharSerial4:
  6829                           	callstack 0
  6830                           
  6831 ;; *************** function _readColours *****************
  6832 ;; Defined at:
  6833 ;;		line 105 in file "color.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;  vals            2   11[COMRAM] PTR struct RGB
  6836 ;;		 -> vals(8), 
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;		None
  6839 ;; Return value:  Size  Location     Type
  6840 ;;                  1    wreg      void 
  6841 ;; Registers used:
  6842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6852 ;;Total ram usage:        2 bytes
  6853 ;; Hardware stack levels used: 1
  6854 ;; Hardware stack levels required when called: 4
  6855 ;; This function calls:
  6856 ;;		_color_read_Blue
  6857 ;;		_color_read_Green
  6858 ;;		_color_read_Red
  6859 ;;		_color_read_lum
  6860 ;; This function is called by:
  6861 ;;		_main
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865                           	psect	text23
  6866   00564C                     __ptext23:
  6867                           	callstack 0
  6868   00564C                     _readColours:
  6869                           	callstack 26
  6870   00564C                     
  6871                           ;color.c: 107:     vals ->R = color_read_Red();
  6872   00564C  EC7A  F02D         	call	_color_read_Red	;wreg free
  6873   005650  C00C  FFD9         	movff	readColours@vals,fsr2l
  6874   005654  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6875   005658  C005  FFDE         	movff	?_color_read_Red,postinc2
  6876   00565C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6877                           
  6878                           ;color.c: 108:     vals ->B = color_read_Blue();
  6879   005660  ECCA  F02D         	call	_color_read_Blue	;wreg free
  6880   005664  EE20 F004          	lfsr	2,4
  6881   005668  500C               	movf	readColours@vals^0,w,c
  6882   00566A  26D9               	addwf	fsr2l,f,c
  6883   00566C  500D               	movf	(readColours@vals+1)^0,w,c
  6884   00566E  22DA               	addwfc	fsr2h,f,c
  6885   005670  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6886   005674  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6887                           
  6888                           ;color.c: 109:     vals ->G = color_read_Green();
  6889   005678  ECA2  F02D         	call	_color_read_Green	;wreg free
  6890   00567C  EE20 F002          	lfsr	2,2
  6891   005680  500C               	movf	readColours@vals^0,w,c
  6892   005682  26D9               	addwf	fsr2l,f,c
  6893   005684  500D               	movf	(readColours@vals+1)^0,w,c
  6894   005686  22DA               	addwfc	fsr2h,f,c
  6895   005688  C005  FFDE         	movff	?_color_read_Green,postinc2
  6896   00568C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6897                           
  6898                           ;color.c: 110:     vals ->L = color_read_lum();
  6899   005690  EC52  F02D         	call	_color_read_lum	;wreg free
  6900   005694  EE20 F006          	lfsr	2,6
  6901   005698  500C               	movf	readColours@vals^0,w,c
  6902   00569A  26D9               	addwf	fsr2l,f,c
  6903   00569C  500D               	movf	(readColours@vals+1)^0,w,c
  6904   00569E  22DA               	addwfc	fsr2h,f,c
  6905   0056A0  C005  FFDE         	movff	?_color_read_lum,postinc2
  6906   0056A4  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6907   0056A8  0012               	return		;funcret
  6908   0056AA                     __end_of_readColours:
  6909                           	callstack 0
  6910                           
  6911 ;; *************** function _color_read_lum *****************
  6912 ;; Defined at:
  6913 ;;		line 49 in file "color.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;		None
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;  tmp             2    9[COMRAM] unsigned int 
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  2    4[COMRAM] unsigned int 
  6920 ;; Registers used:
  6921 ;;		wreg, status,2, status,0, cstack
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6928 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6929 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6930 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6931 ;;Total ram usage:        7 bytes
  6932 ;; Hardware stack levels used: 1
  6933 ;; Hardware stack levels required when called: 3
  6934 ;; This function calls:
  6935 ;;		_I2C_2_Master_Read
  6936 ;;		_I2C_2_Master_RepStart
  6937 ;;		_I2C_2_Master_Start
  6938 ;;		_I2C_2_Master_Stop
  6939 ;;		_I2C_2_Master_Write
  6940 ;; This function is called by:
  6941 ;;		_readColours
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945                           	psect	text24
  6946   005AA4                     __ptext24:
  6947                           	callstack 0
  6948   005AA4                     _color_read_lum:
  6949                           	callstack 26
  6950   005AA4                     
  6951                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6952   005AA4  EC58  F030         	call	_I2C_2_Master_Start	;wreg free
  6953                           
  6954                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6955   005AA8  0E52               	movlw	82
  6956   005AAA  EC42  F030         	call	_I2C_2_Master_Write
  6957                           
  6958                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  6959   005AAE  0EB4               	movlw	180
  6960   005AB0  EC42  F030         	call	_I2C_2_Master_Write
  6961                           
  6962                           ;color.c: 55:  I2C_2_Master_RepStart();
  6963   005AB4  EC4E  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6964                           
  6965                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6966   005AB8  0E53               	movlw	83
  6967   005ABA  EC42  F030         	call	_I2C_2_Master_Write
  6968                           
  6969                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6970   005ABE  0E01               	movlw	1
  6971   005AC0  ECCE  F02E         	call	_I2C_2_Master_Read
  6972   005AC4  6E07               	movwf	??_color_read_lum^0,c
  6973   005AC6  5007               	movf	??_color_read_lum^0,w,c
  6974   005AC8  6E0A               	movwf	color_read_lum@tmp^0,c
  6975   005ACA  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6976                           
  6977                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6978   005ACC  0E00               	movlw	0
  6979   005ACE  ECCE  F02E         	call	_I2C_2_Master_Read
  6980   005AD2  6E07               	movwf	??_color_read_lum^0,c
  6981   005AD4  5007               	movf	??_color_read_lum^0,w,c
  6982   005AD6  6E09               	movwf	(??_color_read_lum+2)^0,c
  6983   005AD8  6A08               	clrf	(??_color_read_lum+1)^0,c
  6984   005ADA  500A               	movf	color_read_lum@tmp^0,w,c
  6985   005ADC  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6986   005ADE  6E0A               	movwf	color_read_lum@tmp^0,c
  6987   005AE0  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6988   005AE2  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6989   005AE4  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6990                           
  6991                           ;color.c: 59:  I2C_2_Master_Stop();
  6992   005AE6  EC53  F030         	call	_I2C_2_Master_Stop	;wreg free
  6993   005AEA                     
  6994                           ;color.c: 60:  return tmp;
  6995   005AEA  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6996   005AEE  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6997   005AF2  0012               	return		;funcret
  6998   005AF4                     __end_of_color_read_lum:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function _color_read_Red *****************
  7002 ;; Defined at:
  7003 ;;		line 63 in file "color.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;		None
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  tmp             2    9[COMRAM] unsigned int 
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  2    4[COMRAM] unsigned int 
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0, cstack
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7019 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7020 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7021 ;;Total ram usage:        7 bytes
  7022 ;; Hardware stack levels used: 1
  7023 ;; Hardware stack levels required when called: 3
  7024 ;; This function calls:
  7025 ;;		_I2C_2_Master_Read
  7026 ;;		_I2C_2_Master_RepStart
  7027 ;;		_I2C_2_Master_Start
  7028 ;;		_I2C_2_Master_Stop
  7029 ;;		_I2C_2_Master_Write
  7030 ;; This function is called by:
  7031 ;;		_readColours
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text25
  7036   005AF4                     __ptext25:
  7037                           	callstack 0
  7038   005AF4                     _color_read_Red:
  7039                           	callstack 26
  7040   005AF4                     
  7041                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  7042   005AF4  EC58  F030         	call	_I2C_2_Master_Start	;wreg free
  7043                           
  7044                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  7045   005AF8  0E52               	movlw	82
  7046   005AFA  EC42  F030         	call	_I2C_2_Master_Write
  7047                           
  7048                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  7049   005AFE  0EB6               	movlw	182
  7050   005B00  EC42  F030         	call	_I2C_2_Master_Write
  7051                           
  7052                           ;color.c: 69:  I2C_2_Master_RepStart();
  7053   005B04  EC4E  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7054                           
  7055                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  7056   005B08  0E53               	movlw	83
  7057   005B0A  EC42  F030         	call	_I2C_2_Master_Write
  7058                           
  7059                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  7060   005B0E  0E01               	movlw	1
  7061   005B10  ECCE  F02E         	call	_I2C_2_Master_Read
  7062   005B14  6E07               	movwf	??_color_read_Red^0,c
  7063   005B16  5007               	movf	??_color_read_Red^0,w,c
  7064   005B18  6E0A               	movwf	color_read_Red@tmp^0,c
  7065   005B1A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7066                           
  7067                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7068   005B1C  0E00               	movlw	0
  7069   005B1E  ECCE  F02E         	call	_I2C_2_Master_Read
  7070   005B22  6E07               	movwf	??_color_read_Red^0,c
  7071   005B24  5007               	movf	??_color_read_Red^0,w,c
  7072   005B26  6E09               	movwf	(??_color_read_Red+2)^0,c
  7073   005B28  6A08               	clrf	(??_color_read_Red+1)^0,c
  7074   005B2A  500A               	movf	color_read_Red@tmp^0,w,c
  7075   005B2C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7076   005B2E  6E0A               	movwf	color_read_Red@tmp^0,c
  7077   005B30  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7078   005B32  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7079   005B34  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7080                           
  7081                           ;color.c: 73:  I2C_2_Master_Stop();
  7082   005B36  EC53  F030         	call	_I2C_2_Master_Stop	;wreg free
  7083   005B3A                     
  7084                           ;color.c: 74:  return tmp;
  7085   005B3A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7086   005B3E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7087   005B42  0012               	return		;funcret
  7088   005B44                     __end_of_color_read_Red:
  7089                           	callstack 0
  7090                           
  7091 ;; *************** function _color_read_Green *****************
  7092 ;; Defined at:
  7093 ;;		line 76 in file "color.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;		None
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  tmp             2    9[COMRAM] unsigned int 
  7098 ;; Return value:  Size  Location     Type
  7099 ;;                  2    4[COMRAM] unsigned int 
  7100 ;; Registers used:
  7101 ;;		wreg, status,2, status,0, cstack
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7107 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7108 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7109 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7110 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7111 ;;Total ram usage:        7 bytes
  7112 ;; Hardware stack levels used: 1
  7113 ;; Hardware stack levels required when called: 3
  7114 ;; This function calls:
  7115 ;;		_I2C_2_Master_Read
  7116 ;;		_I2C_2_Master_RepStart
  7117 ;;		_I2C_2_Master_Start
  7118 ;;		_I2C_2_Master_Stop
  7119 ;;		_I2C_2_Master_Write
  7120 ;; This function is called by:
  7121 ;;		_readColours
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text26
  7126   005B44                     __ptext26:
  7127                           	callstack 0
  7128   005B44                     _color_read_Green:
  7129                           	callstack 26
  7130   005B44                     
  7131                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  7132   005B44  EC58  F030         	call	_I2C_2_Master_Start	;wreg free
  7133                           
  7134                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  7135   005B48  0E52               	movlw	82
  7136   005B4A  EC42  F030         	call	_I2C_2_Master_Write
  7137                           
  7138                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  7139   005B4E  0EB8               	movlw	184
  7140   005B50  EC42  F030         	call	_I2C_2_Master_Write
  7141                           
  7142                           ;color.c: 82:  I2C_2_Master_RepStart();
  7143   005B54  EC4E  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7144                           
  7145                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  7146   005B58  0E53               	movlw	83
  7147   005B5A  EC42  F030         	call	_I2C_2_Master_Write
  7148                           
  7149                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  7150   005B5E  0E01               	movlw	1
  7151   005B60  ECCE  F02E         	call	_I2C_2_Master_Read
  7152   005B64  6E07               	movwf	??_color_read_Green^0,c
  7153   005B66  5007               	movf	??_color_read_Green^0,w,c
  7154   005B68  6E0A               	movwf	color_read_Green@tmp^0,c
  7155   005B6A  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7156                           
  7157                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7158   005B6C  0E00               	movlw	0
  7159   005B6E  ECCE  F02E         	call	_I2C_2_Master_Read
  7160   005B72  6E07               	movwf	??_color_read_Green^0,c
  7161   005B74  5007               	movf	??_color_read_Green^0,w,c
  7162   005B76  6E09               	movwf	(??_color_read_Green+2)^0,c
  7163   005B78  6A08               	clrf	(??_color_read_Green+1)^0,c
  7164   005B7A  500A               	movf	color_read_Green@tmp^0,w,c
  7165   005B7C  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7166   005B7E  6E0A               	movwf	color_read_Green@tmp^0,c
  7167   005B80  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7168   005B82  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7169   005B84  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7170                           
  7171                           ;color.c: 86:  I2C_2_Master_Stop();
  7172   005B86  EC53  F030         	call	_I2C_2_Master_Stop	;wreg free
  7173   005B8A                     
  7174                           ;color.c: 87:  return tmp;
  7175   005B8A  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7176   005B8E  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7177   005B92  0012               	return		;funcret
  7178   005B94                     __end_of_color_read_Green:
  7179                           	callstack 0
  7180                           
  7181 ;; *************** function _color_read_Blue *****************
  7182 ;; Defined at:
  7183 ;;		line 90 in file "color.c"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;		None
  7186 ;; Auto vars:     Size  Location     Type
  7187 ;;  tmp             2    9[COMRAM] unsigned int 
  7188 ;; Return value:  Size  Location     Type
  7189 ;;                  2    4[COMRAM] unsigned int 
  7190 ;; Registers used:
  7191 ;;		wreg, status,2, status,0, cstack
  7192 ;; Tracked objects:
  7193 ;;		On entry : 0/0
  7194 ;;		On exit  : 0/0
  7195 ;;		Unchanged: 0/0
  7196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7199 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7200 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7201 ;;Total ram usage:        7 bytes
  7202 ;; Hardware stack levels used: 1
  7203 ;; Hardware stack levels required when called: 3
  7204 ;; This function calls:
  7205 ;;		_I2C_2_Master_Read
  7206 ;;		_I2C_2_Master_RepStart
  7207 ;;		_I2C_2_Master_Start
  7208 ;;		_I2C_2_Master_Stop
  7209 ;;		_I2C_2_Master_Write
  7210 ;; This function is called by:
  7211 ;;		_readColours
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           	psect	text27
  7216   005B94                     __ptext27:
  7217                           	callstack 0
  7218   005B94                     _color_read_Blue:
  7219                           	callstack 26
  7220   005B94                     
  7221                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  7222   005B94  EC58  F030         	call	_I2C_2_Master_Start	;wreg free
  7223                           
  7224                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  7225   005B98  0E52               	movlw	82
  7226   005B9A  EC42  F030         	call	_I2C_2_Master_Write
  7227                           
  7228                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  7229   005B9E  0EBA               	movlw	186
  7230   005BA0  EC42  F030         	call	_I2C_2_Master_Write
  7231                           
  7232                           ;color.c: 96:  I2C_2_Master_RepStart();
  7233   005BA4  EC4E  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7234                           
  7235                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  7236   005BA8  0E53               	movlw	83
  7237   005BAA  EC42  F030         	call	_I2C_2_Master_Write
  7238                           
  7239                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  7240   005BAE  0E01               	movlw	1
  7241   005BB0  ECCE  F02E         	call	_I2C_2_Master_Read
  7242   005BB4  6E07               	movwf	??_color_read_Blue^0,c
  7243   005BB6  5007               	movf	??_color_read_Blue^0,w,c
  7244   005BB8  6E0A               	movwf	color_read_Blue@tmp^0,c
  7245   005BBA  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7246                           
  7247                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7248   005BBC  0E00               	movlw	0
  7249   005BBE  ECCE  F02E         	call	_I2C_2_Master_Read
  7250   005BC2  6E07               	movwf	??_color_read_Blue^0,c
  7251   005BC4  5007               	movf	??_color_read_Blue^0,w,c
  7252   005BC6  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7253   005BC8  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7254   005BCA  500A               	movf	color_read_Blue@tmp^0,w,c
  7255   005BCC  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7256   005BCE  6E0A               	movwf	color_read_Blue@tmp^0,c
  7257   005BD0  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7258   005BD2  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7259   005BD4  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7260                           
  7261                           ;color.c: 100:  I2C_2_Master_Stop();
  7262   005BD6  EC53  F030         	call	_I2C_2_Master_Stop	;wreg free
  7263   005BDA                     
  7264                           ;color.c: 101:  return tmp;
  7265   005BDA  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7266   005BDE  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7267   005BE2  0012               	return		;funcret
  7268   005BE4                     __end_of_color_read_Blue:
  7269                           	callstack 0
  7270                           
  7271 ;; *************** function _I2C_2_Master_RepStart *****************
  7272 ;; Defined at:
  7273 ;;		line 33 in file "i2c.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;		None
  7276 ;; Auto vars:     Size  Location     Type
  7277 ;;		None
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  1    wreg      void 
  7280 ;; Registers used:
  7281 ;;		wreg, status,2, status,0, cstack
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/0
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7291 ;;Total ram usage:        0 bytes
  7292 ;; Hardware stack levels used: 1
  7293 ;; Hardware stack levels required when called: 2
  7294 ;; This function calls:
  7295 ;;		_I2C_2_Master_Idle
  7296 ;; This function is called by:
  7297 ;;		_color_read_lum
  7298 ;;		_color_read_Red
  7299 ;;		_color_read_Green
  7300 ;;		_color_read_Blue
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           	psect	text28
  7305   00609C                     __ptext28:
  7306                           	callstack 0
  7307   00609C                     _I2C_2_Master_RepStart:
  7308                           	callstack 26
  7309   00609C                     
  7310                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7311   00609C  ECCD  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7312   0060A0                     
  7313                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7314   0060A0  010E               	movlb	14	; () banked
  7315   0060A2  83DA               	bsf	218,1,b	;volatile
  7316   0060A4                     
  7317                           ; BSR set to: 14
  7318   0060A4  0012               	return		;funcret
  7319   0060A6                     __end_of_I2C_2_Master_RepStart:
  7320                           	callstack 0
  7321                           
  7322 ;; *************** function _I2C_2_Master_Read *****************
  7323 ;; Defined at:
  7324 ;;		line 51 in file "i2c.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;  ack             1    wreg     unsigned char 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  ack             1    2[COMRAM] unsigned char 
  7329 ;;  tmp             1    3[COMRAM] unsigned char 
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  1    wreg      unsigned char 
  7332 ;; Registers used:
  7333 ;;		wreg, status,2, status,0, cstack
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7340 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7341 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7342 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7343 ;;Total ram usage:        3 bytes
  7344 ;; Hardware stack levels used: 1
  7345 ;; Hardware stack levels required when called: 2
  7346 ;; This function calls:
  7347 ;;		_I2C_2_Master_Idle
  7348 ;; This function is called by:
  7349 ;;		_color_read_lum
  7350 ;;		_color_read_Red
  7351 ;;		_color_read_Green
  7352 ;;		_color_read_Blue
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           	psect	text29
  7357   005D9C                     __ptext29:
  7358                           	callstack 0
  7359   005D9C                     _I2C_2_Master_Read:
  7360                           	callstack 26
  7361                           
  7362                           ; BSR set to: 14
  7363                           ;incstack = 0
  7364                           ;I2C_2_Master_Read@ack stored from wreg
  7365   005D9C  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7366   005D9E                     
  7367                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7368   005D9E  ECCD  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7369   005DA2                     
  7370                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7371   005DA2  010E               	movlb	14	; () banked
  7372   005DA4  87DA               	bsf	218,3,b	;volatile
  7373                           
  7374                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7375   005DA6  ECCD  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7376   005DAA                     
  7377                           ;i2c.c: 57:   tmp = SSP2BUF;
  7378   005DAA  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7379                           
  7380                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7381   005DAE  ECCD  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7382   005DB2                     
  7383                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7384   005DB2  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7385   005DB4  B4D8               	btfsc	status,2,c
  7386   005DB6  EFDF  F02E         	goto	u4921
  7387   005DBA  EFE3  F02E         	goto	u4920
  7388   005DBE                     u4921:
  7389   005DBE  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7390   005DC0  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7391   005DC2  EFE4  F02E         	goto	u4938
  7392   005DC6                     u4920:
  7393   005DC6  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7394   005DC8                     u4938:
  7395   005DC8  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7396   005DCA  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7397   005DCC  010E               	movlb	14	; () banked
  7398   005DCE  51DA               	movf	218,w,b	;volatile
  7399   005DD0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7400   005DD2  0BDF               	andlw	-33
  7401   005DD4  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7402   005DD6  6FDA               	movwf	218,b	;volatile
  7403   005DD8                     
  7404                           ; BSR set to: 14
  7405                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7406   005DD8  89DA               	bsf	218,4,b	;volatile
  7407   005DDA                     
  7408                           ; BSR set to: 14
  7409                           ;i2c.c: 61:   return tmp;
  7410   005DDA  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7411   005DDC                     
  7412                           ; BSR set to: 14
  7413   005DDC  0012               	return		;funcret
  7414   005DDE                     __end_of_I2C_2_Master_Read:
  7415                           	callstack 0
  7416                           
  7417 ;; *************** function _initUSART4 *****************
  7418 ;; Defined at:
  7419 ;;		line 4 in file "serial.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;		None
  7422 ;; Auto vars:     Size  Location     Type
  7423 ;;		None
  7424 ;; Return value:  Size  Location     Type
  7425 ;;                  1    wreg      void 
  7426 ;; Registers used:
  7427 ;;		wreg, status,2
  7428 ;; Tracked objects:
  7429 ;;		On entry : 0/0
  7430 ;;		On exit  : 0/0
  7431 ;;		Unchanged: 0/0
  7432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7437 ;;Total ram usage:        0 bytes
  7438 ;; Hardware stack levels used: 1
  7439 ;; Hardware stack levels required when called: 1
  7440 ;; This function calls:
  7441 ;;		Nothing
  7442 ;; This function is called by:
  7443 ;;		_main
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447                           	psect	text30
  7448   00604E                     __ptext30:
  7449                           	callstack 0
  7450   00604E                     _initUSART4:
  7451                           	callstack 29
  7452   00604E                     
  7453                           ;serial.c: 5:     RC0PPS = 0x12;
  7454   00604E  0E12               	movlw	18
  7455   006050  010E               	movlb	14	; () banked
  7456   006052  6F62               	movwf	98,b	;volatile
  7457                           
  7458                           ;serial.c: 6:     RX4PPS = 0x11;
  7459   006054  0E11               	movlw	17
  7460   006056  6F15               	movwf	21,b	;volatile
  7461   006058                     
  7462                           ; BSR set to: 14
  7463                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7464   006058  97E9               	bcf	233,3,b	;volatile
  7465   00605A                     
  7466                           ; BSR set to: 14
  7467                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7468   00605A  95E8               	bcf	232,2,b	;volatile
  7469                           
  7470                           ;serial.c: 9:     SP4BRGL = 51;
  7471   00605C  0E33               	movlw	51
  7472   00605E  6FE5               	movwf	229,b	;volatile
  7473                           
  7474                           ;serial.c: 10:     SP4BRGH = 0;
  7475   006060  0E00               	movlw	0
  7476   006062  6FE6               	movwf	230,b	;volatile
  7477   006064                     
  7478                           ; BSR set to: 14
  7479                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7480   006064  89E7               	bsf	231,4,b	;volatile
  7481   006066                     
  7482                           ; BSR set to: 14
  7483                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7484   006066  8BE8               	bsf	232,5,b	;volatile
  7485   006068                     
  7486                           ; BSR set to: 14
  7487                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7488   006068  8FE7               	bsf	231,7,b	;volatile
  7489   00606A                     
  7490                           ; BSR set to: 14
  7491   00606A  0012               	return		;funcret
  7492   00606C                     __end_of_initUSART4:
  7493                           	callstack 0
  7494                           
  7495 ;; *************** function _initDCmotorsPWM *****************
  7496 ;; Defined at:
  7497 ;;		line 6 in file "dc_motor.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;		None
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  1    wreg      void 
  7504 ;; Registers used:
  7505 ;;		wreg, status,2
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7514 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7515 ;;Total ram usage:        2 bytes
  7516 ;; Hardware stack levels used: 1
  7517 ;; Hardware stack levels required when called: 1
  7518 ;; This function calls:
  7519 ;;		Nothing
  7520 ;; This function is called by:
  7521 ;;		_main
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           	psect	text31
  7526   005322                     __ptext31:
  7527                           	callstack 0
  7528   005322                     _initDCmotorsPWM:
  7529                           	callstack 29
  7530   005322                     
  7531                           ;dc_motor.c: 10:     RE2PPS=0x05;
  7532   005322  0E05               	movlw	5
  7533   005324  010E               	movlb	14	; () banked
  7534   005326  6F74               	movwf	116,b	;volatile
  7535                           
  7536                           ;dc_motor.c: 11:     RE4PPS=0x06;
  7537   005328  0E06               	movlw	6
  7538   00532A  6F76               	movwf	118,b	;volatile
  7539                           
  7540                           ;dc_motor.c: 12:     RC7PPS=0x07;
  7541   00532C  0E07               	movlw	7
  7542   00532E  6F69               	movwf	105,b	;volatile
  7543                           
  7544                           ;dc_motor.c: 13:     RG6PPS=0x08;
  7545   005330  0E08               	movlw	8
  7546   005332  6F88               	movwf	136,b	;volatile
  7547   005334                     
  7548                           ; BSR set to: 14
  7549                           ;dc_motor.c: 16:     TRISEbits.TRISE2=0;
  7550   005334  9485               	bcf	133,2,c	;volatile
  7551   005336                     
  7552                           ; BSR set to: 14
  7553                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  7554   005336  9885               	bcf	133,4,c	;volatile
  7555   005338                     
  7556                           ; BSR set to: 14
  7557                           ;dc_motor.c: 18:     TRISCbits.TRISC7=0;
  7558   005338  9E83               	bcf	131,7,c	;volatile
  7559   00533A                     
  7560                           ; BSR set to: 14
  7561                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  7562   00533A  9C87               	bcf	135,6,c	;volatile
  7563                           
  7564                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  7565   00533C  50BD               	movf	189,w,c	;volatile
  7566   00533E  0B8F               	andlw	-113
  7567   005340  0930               	iorlw	48
  7568   005342  6EBD               	movwf	189,c	;volatile
  7569                           
  7570                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  7571   005344  0EE0               	movlw	-32
  7572   005346  16BE               	andwf	190,f,c	;volatile
  7573                           
  7574                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  7575   005348  50BF               	movf	191,w,c	;volatile
  7576   00534A  0BF0               	andlw	-16
  7577   00534C  0901               	iorlw	1
  7578   00534E  6EBF               	movwf	191,c	;volatile
  7579   005350                     
  7580                           ; BSR set to: 14
  7581                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  7582   005350  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7583   005354                     
  7584                           ; BSR set to: 14
  7585                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  7586   005354  8EBD               	bsf	189,7,c	;volatile
  7587                           
  7588                           ;dc_motor.c: 34:     CCPR1H=0;
  7589   005356  0E00               	movlw	0
  7590   005358  6EAA               	movwf	170,c	;volatile
  7591                           
  7592                           ;dc_motor.c: 35:     CCPR2H=0;
  7593   00535A  0E00               	movlw	0
  7594   00535C  6EA6               	movwf	166,c	;volatile
  7595                           
  7596                           ;dc_motor.c: 36:     CCPR3H=0;
  7597   00535E  0E00               	movlw	0
  7598   005360  010F               	movlb	15	; () banked
  7599   005362  6F25               	movwf	37,b	;volatile
  7600                           
  7601                           ;dc_motor.c: 37:     CCPR4H=0;
  7602   005364  0E00               	movlw	0
  7603   005366  6F21               	movwf	33,b	;volatile
  7604                           
  7605                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  7606   005368  0EFC               	movlw	-4
  7607   00536A  16AD               	andwf	173,f,c	;volatile
  7608                           
  7609                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  7610   00536C  0EF3               	movlw	-13
  7611   00536E  16AD               	andwf	173,f,c	;volatile
  7612                           
  7613                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  7614   005370  0ECF               	movlw	-49
  7615   005372  16AD               	andwf	173,f,c	;volatile
  7616                           
  7617                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  7618   005374  0E3F               	movlw	-193
  7619   005376  16AD               	andwf	173,f,c	;volatile
  7620   005378                     
  7621                           ; BSR set to: 15
  7622                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  7623   005378  88AB               	bsf	171,4,c	;volatile
  7624                           
  7625                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  7626   00537A  50AB               	movf	171,w,c	;volatile
  7627   00537C  0BF0               	andlw	-16
  7628   00537E  090C               	iorlw	12
  7629   005380  6EAB               	movwf	171,c	;volatile
  7630   005382                     
  7631                           ; BSR set to: 15
  7632                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  7633   005382  8EAB               	bsf	171,7,c	;volatile
  7634   005384                     
  7635                           ; BSR set to: 15
  7636                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  7637   005384  88A7               	bsf	167,4,c	;volatile
  7638                           
  7639                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  7640   005386  50A7               	movf	167,w,c	;volatile
  7641   005388  0BF0               	andlw	-16
  7642   00538A  090C               	iorlw	12
  7643   00538C  6EA7               	movwf	167,c	;volatile
  7644   00538E                     
  7645                           ; BSR set to: 15
  7646                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  7647   00538E  8EA7               	bsf	167,7,c	;volatile
  7648   005390                     
  7649                           ; BSR set to: 15
  7650                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  7651   005390  8926               	bsf	38,4,b	;volatile
  7652                           
  7653                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  7654   005392  5126               	movf	38,w,b	;volatile
  7655   005394  0BF0               	andlw	-16
  7656   005396  090C               	iorlw	12
  7657   005398  6F26               	movwf	38,b	;volatile
  7658   00539A                     
  7659                           ; BSR set to: 15
  7660                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  7661   00539A  8F26               	bsf	38,7,b	;volatile
  7662   00539C                     
  7663                           ; BSR set to: 15
  7664                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  7665   00539C  8922               	bsf	34,4,b	;volatile
  7666                           
  7667                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  7668   00539E  5122               	movf	34,w,b	;volatile
  7669   0053A0  0BF0               	andlw	-16
  7670   0053A2  090C               	iorlw	12
  7671   0053A4  6F22               	movwf	34,b	;volatile
  7672   0053A6                     
  7673                           ; BSR set to: 15
  7674                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  7675   0053A6  8F22               	bsf	34,7,b	;volatile
  7676   0053A8                     
  7677                           ; BSR set to: 15
  7678   0053A8  0012               	return		;funcret
  7679   0053AA                     __end_of_initDCmotorsPWM:
  7680                           	callstack 0
  7681                           
  7682 ;; *************** function _go_Home *****************
  7683 ;; Defined at:
  7684 ;;		line 4 in file "Memory.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  7687 ;;		 -> WayBack(50), 
  7688 ;;  Time_forward    2   37[COMRAM] PTR int 
  7689 ;;		 -> Time_forward(100), 
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;  i               2   42[COMRAM] int 
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  1    wreg      void 
  7694 ;; Registers used:
  7695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7701 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7702 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7703 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7704 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7705 ;;Total ram usage:        9 bytes
  7706 ;; Hardware stack levels used: 1
  7707 ;; Hardware stack levels required when called: 6
  7708 ;; This function calls:
  7709 ;;		_BlueMove
  7710 ;;		_GreenMove
  7711 ;;		_LightBlueMove
  7712 ;;		_OrangeMove
  7713 ;;		_RedMove
  7714 ;;		_ReversePink
  7715 ;;		_ReverseYellow
  7716 ;;		_reverseDetect
  7717 ;;		_stop
  7718 ;;		_timed_forward
  7719 ;; This function is called by:
  7720 ;;		_main
  7721 ;; This function uses a non-reentrant model
  7722 ;;
  7723                           
  7724                           	psect	text32
  7725   003ABC                     __ptext32:
  7726                           	callstack 0
  7727   003ABC                     _go_Home:
  7728                           	callstack 24
  7729   003ABC                     
  7730                           ;Memory.c: 5:     int i;;Memory.c: 6:     BlueMove(&motorL, &motorR);
  7731   003ABC  0E61               	movlw	low _motorL
  7732   003ABE  6E20               	movwf	BlueMove@mL^0,c
  7733   003AC0  0E01               	movlw	high _motorL
  7734   003AC2  6E21               	movwf	(BlueMove@mL+1)^0,c
  7735   003AC4  0E58               	movlw	low _motorR
  7736   003AC6  6E22               	movwf	BlueMove@mR^0,c
  7737   003AC8  0E01               	movlw	high _motorR
  7738   003ACA  6E23               	movwf	(BlueMove@mR+1)^0,c
  7739   003ACC  ECF3  F02A         	call	_BlueMove	;wreg free
  7740   003AD0                     
  7741                           ;Memory.c: 7:     T0CON0bits.T0EN=0;
  7742   003AD0  9ED5               	bcf	213,7,c	;volatile
  7743   003AD2                     
  7744                           ;Memory.c: 8:     for (i = move_count; i >= 0; i--){
  7745   003AD2  C114  F02B         	movff	_move_count,go_Home@i	;volatile
  7746   003AD6  C115  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  7747   003ADA                     l5576:
  7748   003ADA  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  7749   003ADC  EF74  F01D         	goto	u5550
  7750   003AE0  EF72  F01D         	goto	u5551
  7751   003AE4                     u5551:
  7752   003AE4  EF76  F01D         	goto	l5580
  7753   003AE8                     u5550:
  7754   003AE8  EFCD  F01E         	goto	l638
  7755   003AEC                     l5580:
  7756                           
  7757                           ;Memory.c: 9:         timed_forward(&motorL, &motorR,Time_forward[i]);
  7758   003AEC  0E61               	movlw	low _motorL
  7759   003AEE  6E14               	movwf	timed_forward@mL^0,c
  7760   003AF0  0E01               	movlw	high _motorL
  7761   003AF2  6E15               	movwf	(timed_forward@mL+1)^0,c
  7762   003AF4  0E58               	movlw	low _motorR
  7763   003AF6  6E16               	movwf	timed_forward@mR^0,c
  7764   003AF8  0E01               	movlw	high _motorR
  7765   003AFA  6E17               	movwf	(timed_forward@mR+1)^0,c
  7766   003AFC  90D8               	bcf	status,0,c
  7767   003AFE  342B               	rlcf	go_Home@i^0,w,c
  7768   003B00  6ED9               	movwf	fsr2l,c
  7769   003B02  342C               	rlcf	(go_Home@i+1)^0,w,c
  7770   003B04  6EDA               	movwf	fsr2h,c
  7771   003B06  5026               	movf	go_Home@Time_forward^0,w,c
  7772   003B08  26D9               	addwf	fsr2l,f,c
  7773   003B0A  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  7774   003B0C  22DA               	addwfc	fsr2h,f,c
  7775   003B0E  CFDE F018          	movff	postinc2,timed_forward@time
  7776   003B12  CFDD F019          	movff	postdec2,timed_forward@time+1
  7777   003B16  ECAB  F027         	call	_timed_forward	;wreg free
  7778   003B1A                     
  7779                           ;Memory.c: 11:         if (WayBack[i-1]==1){
  7780   003B1A  502B               	movf	go_Home@i^0,w,c
  7781   003B1C  2424               	addwf	go_Home@WayBack^0,w,c
  7782   003B1E  6E28               	movwf	??_go_Home^0,c
  7783   003B20  502C               	movf	(go_Home@i+1)^0,w,c
  7784   003B22  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7785   003B24  6E29               	movwf	(??_go_Home+1)^0,c
  7786   003B26  0EFF               	movlw	255
  7787   003B28  2428               	addwf	??_go_Home^0,w,c
  7788   003B2A  6ED9               	movwf	fsr2l,c
  7789   003B2C  0EFF               	movlw	255
  7790   003B2E  2029               	addwfc	(??_go_Home+1)^0,w,c
  7791   003B30  6EDA               	movwf	fsr2h,c
  7792   003B32  04DE               	decf	postinc2,w,c
  7793   003B34  A4D8               	btfss	status,2,c
  7794   003B36  EF9F  F01D         	goto	u5561
  7795   003B3A  EFA1  F01D         	goto	u5560
  7796   003B3E                     u5561:
  7797   003B3E  EFB7  F01D         	goto	l5586
  7798   003B42                     u5560:
  7799   003B42                     
  7800                           ;Memory.c: 12:             reverseDetect(&motorL, &motorR);
  7801   003B42  0E61               	movlw	low _motorL
  7802   003B44  6E1A               	movwf	reverseDetect@mL^0,c
  7803   003B46  0E01               	movlw	high _motorL
  7804   003B48  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7805   003B4A  0E58               	movlw	low _motorR
  7806   003B4C  6E1C               	movwf	reverseDetect@mR^0,c
  7807   003B4E  0E01               	movlw	high _motorR
  7808   003B50  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7809   003B52  ECAF  F02B         	call	_reverseDetect	;wreg free
  7810                           
  7811                           ;Memory.c: 13:             GreenMove(&motorL, &motorR);
  7812   003B56  0E61               	movlw	low _motorL
  7813   003B58  6E20               	movwf	GreenMove@mL^0,c
  7814   003B5A  0E01               	movlw	high _motorL
  7815   003B5C  6E21               	movwf	(GreenMove@mL+1)^0,c
  7816   003B5E  0E58               	movlw	low _motorR
  7817   003B60  6E22               	movwf	GreenMove@mR^0,c
  7818   003B62  0E01               	movlw	high _motorR
  7819   003B64  6E23               	movwf	(GreenMove@mR+1)^0,c
  7820   003B66  EC2E  F02F         	call	_GreenMove	;wreg free
  7821                           
  7822                           ;Memory.c: 14:         }
  7823   003B6A  EFB9  F01E         	goto	l626
  7824   003B6E                     l5586:
  7825   003B6E  502B               	movf	go_Home@i^0,w,c
  7826   003B70  2424               	addwf	go_Home@WayBack^0,w,c
  7827   003B72  6E28               	movwf	??_go_Home^0,c
  7828   003B74  502C               	movf	(go_Home@i+1)^0,w,c
  7829   003B76  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7830   003B78  6E29               	movwf	(??_go_Home+1)^0,c
  7831   003B7A  0EFF               	movlw	255
  7832   003B7C  2428               	addwf	??_go_Home^0,w,c
  7833   003B7E  6ED9               	movwf	fsr2l,c
  7834   003B80  0EFF               	movlw	255
  7835   003B82  2029               	addwfc	(??_go_Home+1)^0,w,c
  7836   003B84  6EDA               	movwf	fsr2h,c
  7837   003B86  0E02               	movlw	2
  7838   003B88  18DE               	xorwf	postinc2,w,c
  7839   003B8A  A4D8               	btfss	status,2,c
  7840   003B8C  EFCA  F01D         	goto	u5571
  7841   003B90  EFCC  F01D         	goto	u5570
  7842   003B94                     u5571:
  7843   003B94  EFE2  F01D         	goto	l5590
  7844   003B98                     u5570:
  7845   003B98                     
  7846                           ;Memory.c: 16:             reverseDetect(&motorL, &motorR);
  7847   003B98  0E61               	movlw	low _motorL
  7848   003B9A  6E1A               	movwf	reverseDetect@mL^0,c
  7849   003B9C  0E01               	movlw	high _motorL
  7850   003B9E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7851   003BA0  0E58               	movlw	low _motorR
  7852   003BA2  6E1C               	movwf	reverseDetect@mR^0,c
  7853   003BA4  0E01               	movlw	high _motorR
  7854   003BA6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7855   003BA8  ECAF  F02B         	call	_reverseDetect	;wreg free
  7856                           
  7857                           ;Memory.c: 17:             LightBlueMove(&motorL, &motorR);
  7858   003BAC  0E61               	movlw	low _motorL
  7859   003BAE  6E20               	movwf	LightBlueMove@mL^0,c
  7860   003BB0  0E01               	movlw	high _motorL
  7861   003BB2  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7862   003BB4  0E58               	movlw	low _motorR
  7863   003BB6  6E22               	movwf	LightBlueMove@mR^0,c
  7864   003BB8  0E01               	movlw	high _motorR
  7865   003BBA  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7866   003BBC  EC86  F02C         	call	_LightBlueMove	;wreg free
  7867                           
  7868                           ;Memory.c: 18:         }
  7869   003BC0  EFB9  F01E         	goto	l626
  7870   003BC4                     l5590:
  7871   003BC4  502B               	movf	go_Home@i^0,w,c
  7872   003BC6  2424               	addwf	go_Home@WayBack^0,w,c
  7873   003BC8  6E28               	movwf	??_go_Home^0,c
  7874   003BCA  502C               	movf	(go_Home@i+1)^0,w,c
  7875   003BCC  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7876   003BCE  6E29               	movwf	(??_go_Home+1)^0,c
  7877   003BD0  0EFF               	movlw	255
  7878   003BD2  2428               	addwf	??_go_Home^0,w,c
  7879   003BD4  6ED9               	movwf	fsr2l,c
  7880   003BD6  0EFF               	movlw	255
  7881   003BD8  2029               	addwfc	(??_go_Home+1)^0,w,c
  7882   003BDA  6EDA               	movwf	fsr2h,c
  7883   003BDC  0E03               	movlw	3
  7884   003BDE  18DE               	xorwf	postinc2,w,c
  7885   003BE0  A4D8               	btfss	status,2,c
  7886   003BE2  EFF5  F01D         	goto	u5581
  7887   003BE6  EFF7  F01D         	goto	u5580
  7888   003BEA                     u5581:
  7889   003BEA  EF0D  F01E         	goto	l5594
  7890   003BEE                     u5580:
  7891   003BEE                     
  7892                           ;Memory.c: 20:             reverseDetect(&motorL, &motorR);
  7893   003BEE  0E61               	movlw	low _motorL
  7894   003BF0  6E1A               	movwf	reverseDetect@mL^0,c
  7895   003BF2  0E01               	movlw	high _motorL
  7896   003BF4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7897   003BF6  0E58               	movlw	low _motorR
  7898   003BF8  6E1C               	movwf	reverseDetect@mR^0,c
  7899   003BFA  0E01               	movlw	high _motorR
  7900   003BFC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7901   003BFE  ECAF  F02B         	call	_reverseDetect	;wreg free
  7902                           
  7903                           ;Memory.c: 21:             ReverseYellow(&motorL, &motorR);
  7904   003C02  0E61               	movlw	low _motorL
  7905   003C04  6E20               	movwf	ReverseYellow@mL^0,c
  7906   003C06  0E01               	movlw	high _motorL
  7907   003C08  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  7908   003C0A  0E58               	movlw	low _motorR
  7909   003C0C  6E22               	movwf	ReverseYellow@mR^0,c
  7910   003C0E  0E01               	movlw	high _motorR
  7911   003C10  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  7912   003C12  ECF5  F026         	call	_ReverseYellow	;wreg free
  7913                           
  7914                           ;Memory.c: 22:         }
  7915   003C16  EFB9  F01E         	goto	l626
  7916   003C1A                     l5594:
  7917   003C1A  502B               	movf	go_Home@i^0,w,c
  7918   003C1C  2424               	addwf	go_Home@WayBack^0,w,c
  7919   003C1E  6E28               	movwf	??_go_Home^0,c
  7920   003C20  502C               	movf	(go_Home@i+1)^0,w,c
  7921   003C22  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7922   003C24  6E29               	movwf	(??_go_Home+1)^0,c
  7923   003C26  0EFF               	movlw	255
  7924   003C28  2428               	addwf	??_go_Home^0,w,c
  7925   003C2A  6ED9               	movwf	fsr2l,c
  7926   003C2C  0EFF               	movlw	255
  7927   003C2E  2029               	addwfc	(??_go_Home+1)^0,w,c
  7928   003C30  6EDA               	movwf	fsr2h,c
  7929   003C32  0E04               	movlw	4
  7930   003C34  18DE               	xorwf	postinc2,w,c
  7931   003C36  A4D8               	btfss	status,2,c
  7932   003C38  EF20  F01E         	goto	u5591
  7933   003C3C  EF22  F01E         	goto	u5590
  7934   003C40                     u5591:
  7935   003C40  EF38  F01E         	goto	l5598
  7936   003C44                     u5590:
  7937   003C44                     
  7938                           ;Memory.c: 24:             reverseDetect(&motorL, &motorR);
  7939   003C44  0E61               	movlw	low _motorL
  7940   003C46  6E1A               	movwf	reverseDetect@mL^0,c
  7941   003C48  0E01               	movlw	high _motorL
  7942   003C4A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7943   003C4C  0E58               	movlw	low _motorR
  7944   003C4E  6E1C               	movwf	reverseDetect@mR^0,c
  7945   003C50  0E01               	movlw	high _motorR
  7946   003C52  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7947   003C54  ECAF  F02B         	call	_reverseDetect	;wreg free
  7948                           
  7949                           ;Memory.c: 25:             BlueMove(&motorL, &motorR);
  7950   003C58  0E61               	movlw	low _motorL
  7951   003C5A  6E20               	movwf	BlueMove@mL^0,c
  7952   003C5C  0E01               	movlw	high _motorL
  7953   003C5E  6E21               	movwf	(BlueMove@mL+1)^0,c
  7954   003C60  0E58               	movlw	low _motorR
  7955   003C62  6E22               	movwf	BlueMove@mR^0,c
  7956   003C64  0E01               	movlw	high _motorR
  7957   003C66  6E23               	movwf	(BlueMove@mR+1)^0,c
  7958   003C68  ECF3  F02A         	call	_BlueMove	;wreg free
  7959                           
  7960                           ;Memory.c: 26:         }
  7961   003C6C  EFB9  F01E         	goto	l626
  7962   003C70                     l5598:
  7963   003C70  502B               	movf	go_Home@i^0,w,c
  7964   003C72  2424               	addwf	go_Home@WayBack^0,w,c
  7965   003C74  6E28               	movwf	??_go_Home^0,c
  7966   003C76  502C               	movf	(go_Home@i+1)^0,w,c
  7967   003C78  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7968   003C7A  6E29               	movwf	(??_go_Home+1)^0,c
  7969   003C7C  0EFF               	movlw	255
  7970   003C7E  2428               	addwf	??_go_Home^0,w,c
  7971   003C80  6ED9               	movwf	fsr2l,c
  7972   003C82  0EFF               	movlw	255
  7973   003C84  2029               	addwfc	(??_go_Home+1)^0,w,c
  7974   003C86  6EDA               	movwf	fsr2h,c
  7975   003C88  0E05               	movlw	5
  7976   003C8A  18DE               	xorwf	postinc2,w,c
  7977   003C8C  A4D8               	btfss	status,2,c
  7978   003C8E  EF4B  F01E         	goto	u5601
  7979   003C92  EF4D  F01E         	goto	u5600
  7980   003C96                     u5601:
  7981   003C96  EF63  F01E         	goto	l5602
  7982   003C9A                     u5600:
  7983   003C9A                     
  7984                           ;Memory.c: 28:             reverseDetect(&motorL, &motorR);
  7985   003C9A  0E61               	movlw	low _motorL
  7986   003C9C  6E1A               	movwf	reverseDetect@mL^0,c
  7987   003C9E  0E01               	movlw	high _motorL
  7988   003CA0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7989   003CA2  0E58               	movlw	low _motorR
  7990   003CA4  6E1C               	movwf	reverseDetect@mR^0,c
  7991   003CA6  0E01               	movlw	high _motorR
  7992   003CA8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7993   003CAA  ECAF  F02B         	call	_reverseDetect	;wreg free
  7994                           
  7995                           ;Memory.c: 29:             RedMove(&motorL, &motorR);
  7996   003CAE  0E61               	movlw	low _motorL
  7997   003CB0  6E20               	movwf	RedMove@mL^0,c
  7998   003CB2  0E01               	movlw	high _motorL
  7999   003CB4  6E21               	movwf	(RedMove@mL+1)^0,c
  8000   003CB6  0E58               	movlw	low _motorR
  8001   003CB8  6E22               	movwf	RedMove@mR^0,c
  8002   003CBA  0E01               	movlw	high _motorR
  8003   003CBC  6E23               	movwf	(RedMove@mR+1)^0,c
  8004   003CBE  EC0F  F02F         	call	_RedMove	;wreg free
  8005                           
  8006                           ;Memory.c: 30:         }
  8007   003CC2  EFB9  F01E         	goto	l626
  8008   003CC6                     l5602:
  8009   003CC6  502B               	movf	go_Home@i^0,w,c
  8010   003CC8  2424               	addwf	go_Home@WayBack^0,w,c
  8011   003CCA  6E28               	movwf	??_go_Home^0,c
  8012   003CCC  502C               	movf	(go_Home@i+1)^0,w,c
  8013   003CCE  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8014   003CD0  6E29               	movwf	(??_go_Home+1)^0,c
  8015   003CD2  0EFF               	movlw	255
  8016   003CD4  2428               	addwf	??_go_Home^0,w,c
  8017   003CD6  6ED9               	movwf	fsr2l,c
  8018   003CD8  0EFF               	movlw	255
  8019   003CDA  2029               	addwfc	(??_go_Home+1)^0,w,c
  8020   003CDC  6EDA               	movwf	fsr2h,c
  8021   003CDE  0E06               	movlw	6
  8022   003CE0  18DE               	xorwf	postinc2,w,c
  8023   003CE2  A4D8               	btfss	status,2,c
  8024   003CE4  EF76  F01E         	goto	u5611
  8025   003CE8  EF78  F01E         	goto	u5610
  8026   003CEC                     u5611:
  8027   003CEC  EF8E  F01E         	goto	l5606
  8028   003CF0                     u5610:
  8029   003CF0                     
  8030                           ;Memory.c: 32:             reverseDetect(&motorL, &motorR);
  8031   003CF0  0E61               	movlw	low _motorL
  8032   003CF2  6E1A               	movwf	reverseDetect@mL^0,c
  8033   003CF4  0E01               	movlw	high _motorL
  8034   003CF6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8035   003CF8  0E58               	movlw	low _motorR
  8036   003CFA  6E1C               	movwf	reverseDetect@mR^0,c
  8037   003CFC  0E01               	movlw	high _motorR
  8038   003CFE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8039   003D00  ECAF  F02B         	call	_reverseDetect	;wreg free
  8040                           
  8041                           ;Memory.c: 33:             OrangeMove(&motorL, &motorR);
  8042   003D04  0E61               	movlw	low _motorL
  8043   003D06  6E20               	movwf	OrangeMove@mL^0,c
  8044   003D08  0E01               	movlw	high _motorL
  8045   003D0A  6E21               	movwf	(OrangeMove@mL+1)^0,c
  8046   003D0C  0E58               	movlw	low _motorR
  8047   003D0E  6E22               	movwf	OrangeMove@mR^0,c
  8048   003D10  0E01               	movlw	high _motorR
  8049   003D12  6E23               	movwf	(OrangeMove@mR+1)^0,c
  8050   003D14  EC5D  F02C         	call	_OrangeMove	;wreg free
  8051                           
  8052                           ;Memory.c: 34:         }
  8053   003D18  EFB9  F01E         	goto	l626
  8054   003D1C                     l5606:
  8055   003D1C  502B               	movf	go_Home@i^0,w,c
  8056   003D1E  2424               	addwf	go_Home@WayBack^0,w,c
  8057   003D20  6E28               	movwf	??_go_Home^0,c
  8058   003D22  502C               	movf	(go_Home@i+1)^0,w,c
  8059   003D24  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8060   003D26  6E29               	movwf	(??_go_Home+1)^0,c
  8061   003D28  0EFF               	movlw	255
  8062   003D2A  2428               	addwf	??_go_Home^0,w,c
  8063   003D2C  6ED9               	movwf	fsr2l,c
  8064   003D2E  0EFF               	movlw	255
  8065   003D30  2029               	addwfc	(??_go_Home+1)^0,w,c
  8066   003D32  6EDA               	movwf	fsr2h,c
  8067   003D34  0E07               	movlw	7
  8068   003D36  18DE               	xorwf	postinc2,w,c
  8069   003D38  A4D8               	btfss	status,2,c
  8070   003D3A  EFA1  F01E         	goto	u5621
  8071   003D3E  EFA3  F01E         	goto	u5620
  8072   003D42                     u5621:
  8073   003D42  EFB9  F01E         	goto	l632
  8074   003D46                     u5620:
  8075   003D46                     
  8076                           ;Memory.c: 36:             reverseDetect(&motorL, &motorR);
  8077   003D46  0E61               	movlw	low _motorL
  8078   003D48  6E1A               	movwf	reverseDetect@mL^0,c
  8079   003D4A  0E01               	movlw	high _motorL
  8080   003D4C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8081   003D4E  0E58               	movlw	low _motorR
  8082   003D50  6E1C               	movwf	reverseDetect@mR^0,c
  8083   003D52  0E01               	movlw	high _motorR
  8084   003D54  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8085   003D56  ECAF  F02B         	call	_reverseDetect	;wreg free
  8086                           
  8087                           ;Memory.c: 37:             ReversePink(&motorL, &motorR);
  8088   003D5A  0E61               	movlw	low _motorL
  8089   003D5C  6E20               	movwf	ReversePink@mL^0,c
  8090   003D5E  0E01               	movlw	high _motorL
  8091   003D60  6E21               	movwf	(ReversePink@mL+1)^0,c
  8092   003D62  0E58               	movlw	low _motorR
  8093   003D64  6E22               	movwf	ReversePink@mR^0,c
  8094   003D66  0E01               	movlw	high _motorR
  8095   003D68  6E23               	movwf	(ReversePink@mR+1)^0,c
  8096   003D6A  EC50  F027         	call	_ReversePink	;wreg free
  8097   003D6E  EFB9  F01E         	goto	l626
  8098   003D72                     l632:
  8099   003D72                     l626:
  8100                           
  8101                           ;Memory.c: 39:         stop(&motorL, &motorR);
  8102   003D72  0E61               	movlw	low _motorL
  8103   003D74  6E14               	movwf	stop@mL^0,c
  8104   003D76  0E01               	movlw	high _motorL
  8105   003D78  6E15               	movwf	(stop@mL+1)^0,c
  8106   003D7A  0E58               	movlw	low _motorR
  8107   003D7C  6E16               	movwf	stop@mR^0,c
  8108   003D7E  0E01               	movlw	high _motorR
  8109   003D80  6E17               	movwf	(stop@mR+1)^0,c
  8110   003D82  ECD5  F029         	call	_stop	;wreg free
  8111   003D86                     
  8112                           ;Memory.c: 40:         run_flag=0;
  8113   003D86  0E00               	movlw	0
  8114   003D88  0101               	movlb	1	; () banked
  8115   003D8A  6F17               	movwf	(_run_flag+1)& (0+255),b
  8116   003D8C  0E00               	movlw	0
  8117   003D8E  6F16               	movwf	_run_flag& (0+255),b
  8118   003D90                     
  8119                           ; BSR set to: 1
  8120                           ;Memory.c: 43:   }
  8121   003D90  062B               	decf	go_Home@i^0,f,c
  8122   003D92  A0D8               	btfss	status,0,c
  8123   003D94  062C               	decf	(go_Home@i+1)^0,f,c
  8124   003D96  EF6D  F01D         	goto	l5576
  8125   003D9A                     l638:
  8126   003D9A  0012               	return		;funcret
  8127   003D9C                     __end_of_go_Home:
  8128                           	callstack 0
  8129                           
  8130 ;; *************** function _timed_forward *****************
  8131 ;; Defined at:
  8132 ;;		line 165 in file "dc_motor.c"
  8133 ;; Parameters:    Size  Location     Type
  8134 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8135 ;;		 -> motorL(9), 
  8136 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8137 ;;		 -> motorR(9), 
  8138 ;;  time            2   23[COMRAM] int 
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;		None
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  1    wreg      void 
  8143 ;; Registers used:
  8144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8150 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8152 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8153 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8154 ;;Total ram usage:        8 bytes
  8155 ;; Hardware stack levels used: 1
  8156 ;; Hardware stack levels required when called: 3
  8157 ;; This function calls:
  8158 ;;		_delayed_ms
  8159 ;;		_setMotorPWM
  8160 ;; This function is called by:
  8161 ;;		_go_Home
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           	psect	text33
  8166   004F56                     __ptext33:
  8167                           	callstack 0
  8168   004F56                     _timed_forward:
  8169                           	callstack 26
  8170   004F56                     
  8171                           ;dc_motor.c: 165: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 166: {;dc_motor.c: 168:     mL->direction =1;
  8172   004F56  EE20 F001          	lfsr	2,1
  8173   004F5A  5014               	movf	timed_forward@mL^0,w,c
  8174   004F5C  26D9               	addwf	fsr2l,f,c
  8175   004F5E  5015               	movf	(timed_forward@mL+1)^0,w,c
  8176   004F60  22DA               	addwfc	fsr2h,f,c
  8177   004F62  0E01               	movlw	1
  8178   004F64  6EDF               	movwf	indf2,c
  8179                           
  8180                           ;dc_motor.c: 169:     mR->direction =1;
  8181   004F66  EE20 F001          	lfsr	2,1
  8182   004F6A  5016               	movf	timed_forward@mR^0,w,c
  8183   004F6C  26D9               	addwf	fsr2l,f,c
  8184   004F6E  5017               	movf	(timed_forward@mR+1)^0,w,c
  8185   004F70  22DA               	addwfc	fsr2h,f,c
  8186   004F72  0E01               	movlw	1
  8187   004F74  6EDF               	movwf	indf2,c
  8188                           
  8189                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
  8190   004F76  EFE1  F027         	goto	l5156
  8191   004F7A                     l5148:
  8192                           
  8193                           ;dc_motor.c: 172:         mL->power+=10;
  8194   004F7A  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8195   004F7E  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8196   004F82  0E0A               	movlw	10
  8197   004F84  26DF               	addwf	indf2,f,c
  8198                           
  8199                           ;dc_motor.c: 173:         mR->power+=10;
  8200   004F86  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8201   004F8A  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8202   004F8E  0E0A               	movlw	10
  8203   004F90  26DF               	addwf	indf2,f,c
  8204   004F92                     
  8205                           ;dc_motor.c: 175:         setMotorPWM(mL);
  8206   004F92  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8207   004F96  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8208   004F9A  ECA4  F023         	call	_setMotorPWM	;wreg free
  8209   004F9E                     
  8210                           ;dc_motor.c: 176:         setMotorPWM(mR);
  8211   004F9E  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8212   004FA2  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8213   004FA6  ECA4  F023         	call	_setMotorPWM	;wreg free
  8214   004FAA                     
  8215                           ;dc_motor.c: 179:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8216   004FAA  0E02               	movlw	2
  8217   004FAC  6E1B               	movwf	(??_timed_forward+1)^0,c
  8218   004FAE  0EA0               	movlw	160
  8219   004FB0  6E1A               	movwf	??_timed_forward^0,c
  8220   004FB2  0E92               	movlw	146
  8221   004FB4                     u5967:
  8222   004FB4  2EE8               	decfsz	wreg,f,c
  8223   004FB6  D7FE               	bra	u5967
  8224   004FB8  2E1A               	decfsz	??_timed_forward^0,f,c
  8225   004FBA  D7FC               	bra	u5967
  8226   004FBC  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8227   004FBE  D7FA               	bra	u5967
  8228   004FC0  D000               	nop2	
  8229   004FC2                     l5156:
  8230   004FC2  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8231   004FC6  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8232   004FCA  0E1E               	movlw	30
  8233   004FCC  60DF               	cpfslt	indf2,c
  8234   004FCE  EFEB  F027         	goto	u5001
  8235   004FD2  EFED  F027         	goto	u5000
  8236   004FD6                     u5001:
  8237   004FD6  EFF9  F027         	goto	l5160
  8238   004FDA                     u5000:
  8239   004FDA  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8240   004FDE  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8241   004FE2  0E1D               	movlw	29
  8242   004FE4  64DF               	cpfsgt	indf2,c
  8243   004FE6  EFF7  F027         	goto	u5011
  8244   004FEA  EFF9  F027         	goto	u5010
  8245   004FEE                     u5011:
  8246   004FEE  EFBD  F027         	goto	l5148
  8247   004FF2                     u5010:
  8248   004FF2                     l5160:
  8249                           
  8250                           ;dc_motor.c: 181:     delayed_ms(time);
  8251   004FF2  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8252   004FF6  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8253   004FFA  EC69  F02F         	call	_delayed_ms	;wreg free
  8254   004FFE  0012               	return		;funcret
  8255   005000                     __end_of_timed_forward:
  8256                           	callstack 0
  8257                           
  8258 ;; *************** function _delayed_ms *****************
  8259 ;; Defined at:
  8260 ;;		line 39 in file "timers.c"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;  time            2    0[COMRAM] int 
  8263 ;; Auto vars:     Size  Location     Type
  8264 ;;  i               2    3[COMRAM] unsigned int 
  8265 ;; Return value:  Size  Location     Type
  8266 ;;                  1    wreg      void 
  8267 ;; Registers used:
  8268 ;;		wreg, status,2, status,0
  8269 ;; Tracked objects:
  8270 ;;		On entry : 0/0
  8271 ;;		On exit  : 0/0
  8272 ;;		Unchanged: 0/0
  8273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8276 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8277 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8278 ;;Total ram usage:        5 bytes
  8279 ;; Hardware stack levels used: 1
  8280 ;; Hardware stack levels required when called: 1
  8281 ;; This function calls:
  8282 ;;		Nothing
  8283 ;; This function is called by:
  8284 ;;		_timed_forward
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	text34
  8289   005ED2                     __ptext34:
  8290                           	callstack 0
  8291   005ED2                     _delayed_ms:
  8292                           	callstack 27
  8293   005ED2                     
  8294                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  8295   005ED2  0E00               	movlw	0
  8296   005ED4  6E05               	movwf	(delayed_ms@i+1)^0,c
  8297   005ED6  0E00               	movlw	0
  8298   005ED8  6E04               	movwf	delayed_ms@i^0,c
  8299   005EDA  EF79  F02F         	goto	l667
  8300   005EDE                     l4980:
  8301                           
  8302                           ;timers.c: 41:         _delay((unsigned long)((500)*(64000000/4000000.0)));
  8303   005EDE  0E0B               	movlw	11
  8304   005EE0  6E03               	movwf	??_delayed_ms^0,c
  8305   005EE2  0E62               	movlw	98
  8306   005EE4                     u5977:
  8307   005EE4  2EE8               	decfsz	wreg,f,c
  8308   005EE6  D7FE               	bra	u5977
  8309   005EE8  2E03               	decfsz	??_delayed_ms^0,f,c
  8310   005EEA  D7FC               	bra	u5977
  8311   005EEC  D000               	nop2	
  8312   005EEE                     
  8313                           ;timers.c: 42:     }
  8314   005EEE  4A04               	infsnz	delayed_ms@i^0,f,c
  8315   005EF0  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8316   005EF2                     l667:
  8317   005EF2  5001               	movf	delayed_ms@time^0,w,c
  8318   005EF4  5C04               	subwf	delayed_ms@i^0,w,c
  8319   005EF6  5002               	movf	(delayed_ms@time+1)^0,w,c
  8320   005EF8  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8321   005EFA  A0D8               	btfss	status,0,c
  8322   005EFC  EF82  F02F         	goto	u4941
  8323   005F00  EF84  F02F         	goto	u4940
  8324   005F04                     u4941:
  8325   005F04  EF6F  F02F         	goto	l4980
  8326   005F08                     u4940:
  8327   005F08  0012               	return		;funcret
  8328   005F0A                     __end_of_delayed_ms:
  8329                           	callstack 0
  8330                           
  8331 ;; *************** function _ReverseYellow *****************
  8332 ;; Defined at:
  8333 ;;		line 333 in file "dc_motor.c"
  8334 ;; Parameters:    Size  Location     Type
  8335 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8336 ;;		 -> motorL(9), 
  8337 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8338 ;;		 -> motorR(9), 
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;		None
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  1    wreg      void 
  8343 ;; Registers used:
  8344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8350 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8353 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8354 ;;Total ram usage:        4 bytes
  8355 ;; Hardware stack levels used: 1
  8356 ;; Hardware stack levels required when called: 5
  8357 ;; This function calls:
  8358 ;;		_ForwardOneBlock
  8359 ;;		_reverseDetect
  8360 ;;		_turnRight45
  8361 ;; This function is called by:
  8362 ;;		_go_Home
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366                           	psect	text35
  8367   004DEA                     __ptext35:
  8368                           	callstack 0
  8369   004DEA                     _ReverseYellow:
  8370                           	callstack 24
  8371   004DEA                     
  8372                           ;dc_motor.c: 334:     reverseDetect(&motorL, &motorR);
  8373   004DEA  0E61               	movlw	low _motorL
  8374   004DEC  6E1A               	movwf	reverseDetect@mL^0,c
  8375   004DEE  0E01               	movlw	high _motorL
  8376   004DF0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8377   004DF2  0E58               	movlw	low _motorR
  8378   004DF4  6E1C               	movwf	reverseDetect@mR^0,c
  8379   004DF6  0E01               	movlw	high _motorR
  8380   004DF8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8381   004DFA  ECAF  F02B         	call	_reverseDetect	;wreg free
  8382                           
  8383                           ;dc_motor.c: 335:     turnRight45(&motorL, &motorR);
  8384   004DFE  0E61               	movlw	low _motorL
  8385   004E00  6E1A               	movwf	turnRight45@mL^0,c
  8386   004E02  0E01               	movlw	high _motorL
  8387   004E04  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8388   004E06  0E58               	movlw	low _motorR
  8389   004E08  6E1C               	movwf	turnRight45@mR^0,c
  8390   004E0A  0E01               	movlw	high _motorR
  8391   004E0C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8392   004E0E  EC19  F02E         	call	_turnRight45	;wreg free
  8393                           
  8394                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
  8395   004E12  0E61               	movlw	low _motorL
  8396   004E14  6E1A               	movwf	turnRight45@mL^0,c
  8397   004E16  0E01               	movlw	high _motorL
  8398   004E18  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8399   004E1A  0E58               	movlw	low _motorR
  8400   004E1C  6E1C               	movwf	turnRight45@mR^0,c
  8401   004E1E  0E01               	movlw	high _motorR
  8402   004E20  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8403   004E22  EC19  F02E         	call	_turnRight45	;wreg free
  8404                           
  8405                           ;dc_motor.c: 337:     ForwardOneBlock(&motorL, &motorR);
  8406   004E26  0E61               	movlw	low _motorL
  8407   004E28  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8408   004E2A  0E01               	movlw	high _motorL
  8409   004E2C  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8410   004E2E  0E58               	movlw	low _motorR
  8411   004E30  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8412   004E32  0E01               	movlw	high _motorR
  8413   004E34  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8414   004E36  EC55  F02B         	call	_ForwardOneBlock	;wreg free
  8415                           
  8416                           ;dc_motor.c: 338:     reverseDetect(&motorL, &motorR);
  8417   004E3A  0E61               	movlw	low _motorL
  8418   004E3C  6E1A               	movwf	reverseDetect@mL^0,c
  8419   004E3E  0E01               	movlw	high _motorL
  8420   004E40  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8421   004E42  0E58               	movlw	low _motorR
  8422   004E44  6E1C               	movwf	reverseDetect@mR^0,c
  8423   004E46  0E01               	movlw	high _motorR
  8424   004E48  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8425   004E4A  ECAF  F02B         	call	_reverseDetect	;wreg free
  8426                           
  8427                           ;dc_motor.c: 339:     turnRight45(&motorL, &motorR);
  8428   004E4E  0E61               	movlw	low _motorL
  8429   004E50  6E1A               	movwf	turnRight45@mL^0,c
  8430   004E52  0E01               	movlw	high _motorL
  8431   004E54  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8432   004E56  0E58               	movlw	low _motorR
  8433   004E58  6E1C               	movwf	turnRight45@mR^0,c
  8434   004E5A  0E01               	movlw	high _motorR
  8435   004E5C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8436   004E5E  EC19  F02E         	call	_turnRight45	;wreg free
  8437                           
  8438                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  8439   004E62  0E61               	movlw	low _motorL
  8440   004E64  6E1A               	movwf	turnRight45@mL^0,c
  8441   004E66  0E01               	movlw	high _motorL
  8442   004E68  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8443   004E6A  0E58               	movlw	low _motorR
  8444   004E6C  6E1C               	movwf	turnRight45@mR^0,c
  8445   004E6E  0E01               	movlw	high _motorR
  8446   004E70  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8447   004E72  EC19  F02E         	call	_turnRight45	;wreg free
  8448                           
  8449                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  8450   004E76  0E61               	movlw	low _motorL
  8451   004E78  6E1A               	movwf	turnRight45@mL^0,c
  8452   004E7A  0E01               	movlw	high _motorL
  8453   004E7C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8454   004E7E  0E58               	movlw	low _motorR
  8455   004E80  6E1C               	movwf	turnRight45@mR^0,c
  8456   004E82  0E01               	movlw	high _motorR
  8457   004E84  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8458   004E86  EC19  F02E         	call	_turnRight45	;wreg free
  8459                           
  8460                           ;dc_motor.c: 342:     turnRight45(&motorL, &motorR);
  8461   004E8A  0E61               	movlw	low _motorL
  8462   004E8C  6E1A               	movwf	turnRight45@mL^0,c
  8463   004E8E  0E01               	movlw	high _motorL
  8464   004E90  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8465   004E92  0E58               	movlw	low _motorR
  8466   004E94  6E1C               	movwf	turnRight45@mR^0,c
  8467   004E96  0E01               	movlw	high _motorR
  8468   004E98  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8469   004E9A  EC19  F02E         	call	_turnRight45	;wreg free
  8470   004E9E  0012               	return		;funcret
  8471   004EA0                     __end_of_ReverseYellow:
  8472                           	callstack 0
  8473                           
  8474 ;; *************** function _ReversePink *****************
  8475 ;; Defined at:
  8476 ;;		line 344 in file "dc_motor.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8479 ;;		 -> motorL(9), 
  8480 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8481 ;;		 -> motorR(9), 
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;		None
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  1    wreg      void 
  8486 ;; Registers used:
  8487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8488 ;; Tracked objects:
  8489 ;;		On entry : 0/0
  8490 ;;		On exit  : 0/0
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8493 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8496 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8497 ;;Total ram usage:        4 bytes
  8498 ;; Hardware stack levels used: 1
  8499 ;; Hardware stack levels required when called: 5
  8500 ;; This function calls:
  8501 ;;		_ForwardOneBlock
  8502 ;;		_reverseDetect
  8503 ;;		_turnLeft45
  8504 ;; This function is called by:
  8505 ;;		_go_Home
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509                           	psect	text36
  8510   004EA0                     __ptext36:
  8511                           	callstack 0
  8512   004EA0                     _ReversePink:
  8513                           	callstack 24
  8514   004EA0                     
  8515                           ;dc_motor.c: 345:     reverseDetect(&motorL, &motorR);
  8516   004EA0  0E61               	movlw	low _motorL
  8517   004EA2  6E1A               	movwf	reverseDetect@mL^0,c
  8518   004EA4  0E01               	movlw	high _motorL
  8519   004EA6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8520   004EA8  0E58               	movlw	low _motorR
  8521   004EAA  6E1C               	movwf	reverseDetect@mR^0,c
  8522   004EAC  0E01               	movlw	high _motorR
  8523   004EAE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8524   004EB0  ECAF  F02B         	call	_reverseDetect	;wreg free
  8525                           
  8526                           ;dc_motor.c: 346:     turnLeft45(&motorL, &motorR);
  8527   004EB4  0E61               	movlw	low _motorL
  8528   004EB6  6E1A               	movwf	turnLeft45@mL^0,c
  8529   004EB8  0E01               	movlw	high _motorL
  8530   004EBA  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8531   004EBC  0E58               	movlw	low _motorR
  8532   004EBE  6E1C               	movwf	turnLeft45@mR^0,c
  8533   004EC0  0E01               	movlw	high _motorR
  8534   004EC2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8535   004EC4  EC40  F02E         	call	_turnLeft45	;wreg free
  8536                           
  8537                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
  8538   004EC8  0E61               	movlw	low _motorL
  8539   004ECA  6E1A               	movwf	turnLeft45@mL^0,c
  8540   004ECC  0E01               	movlw	high _motorL
  8541   004ECE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8542   004ED0  0E58               	movlw	low _motorR
  8543   004ED2  6E1C               	movwf	turnLeft45@mR^0,c
  8544   004ED4  0E01               	movlw	high _motorR
  8545   004ED6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8546   004ED8  EC40  F02E         	call	_turnLeft45	;wreg free
  8547                           
  8548                           ;dc_motor.c: 348:     ForwardOneBlock(&motorL, &motorR);
  8549   004EDC  0E61               	movlw	low _motorL
  8550   004EDE  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8551   004EE0  0E01               	movlw	high _motorL
  8552   004EE2  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8553   004EE4  0E58               	movlw	low _motorR
  8554   004EE6  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8555   004EE8  0E01               	movlw	high _motorR
  8556   004EEA  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8557   004EEC  EC55  F02B         	call	_ForwardOneBlock	;wreg free
  8558                           
  8559                           ;dc_motor.c: 349:     reverseDetect(&motorL, &motorR);
  8560   004EF0  0E61               	movlw	low _motorL
  8561   004EF2  6E1A               	movwf	reverseDetect@mL^0,c
  8562   004EF4  0E01               	movlw	high _motorL
  8563   004EF6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8564   004EF8  0E58               	movlw	low _motorR
  8565   004EFA  6E1C               	movwf	reverseDetect@mR^0,c
  8566   004EFC  0E01               	movlw	high _motorR
  8567   004EFE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8568   004F00  ECAF  F02B         	call	_reverseDetect	;wreg free
  8569                           
  8570                           ;dc_motor.c: 350:     turnLeft45(&motorL, &motorR);
  8571   004F04  0E61               	movlw	low _motorL
  8572   004F06  6E1A               	movwf	turnLeft45@mL^0,c
  8573   004F08  0E01               	movlw	high _motorL
  8574   004F0A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8575   004F0C  0E58               	movlw	low _motorR
  8576   004F0E  6E1C               	movwf	turnLeft45@mR^0,c
  8577   004F10  0E01               	movlw	high _motorR
  8578   004F12  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8579   004F14  EC40  F02E         	call	_turnLeft45	;wreg free
  8580                           
  8581                           ;dc_motor.c: 351:     turnLeft45(&motorL, &motorR);
  8582   004F18  0E61               	movlw	low _motorL
  8583   004F1A  6E1A               	movwf	turnLeft45@mL^0,c
  8584   004F1C  0E01               	movlw	high _motorL
  8585   004F1E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8586   004F20  0E58               	movlw	low _motorR
  8587   004F22  6E1C               	movwf	turnLeft45@mR^0,c
  8588   004F24  0E01               	movlw	high _motorR
  8589   004F26  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8590   004F28  EC40  F02E         	call	_turnLeft45	;wreg free
  8591                           
  8592                           ;dc_motor.c: 352:     turnLeft45(&motorL, &motorR);
  8593   004F2C  0E61               	movlw	low _motorL
  8594   004F2E  6E1A               	movwf	turnLeft45@mL^0,c
  8595   004F30  0E01               	movlw	high _motorL
  8596   004F32  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8597   004F34  0E58               	movlw	low _motorR
  8598   004F36  6E1C               	movwf	turnLeft45@mR^0,c
  8599   004F38  0E01               	movlw	high _motorR
  8600   004F3A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8601   004F3C  EC40  F02E         	call	_turnLeft45	;wreg free
  8602                           
  8603                           ;dc_motor.c: 353:     turnLeft45(&motorL, &motorR);
  8604   004F40  0E61               	movlw	low _motorL
  8605   004F42  6E1A               	movwf	turnLeft45@mL^0,c
  8606   004F44  0E01               	movlw	high _motorL
  8607   004F46  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8608   004F48  0E58               	movlw	low _motorR
  8609   004F4A  6E1C               	movwf	turnLeft45@mR^0,c
  8610   004F4C  0E01               	movlw	high _motorR
  8611   004F4E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8612   004F50  EC40  F02E         	call	_turnLeft45	;wreg free
  8613   004F54  0012               	return		;funcret
  8614   004F56                     __end_of_ReversePink:
  8615                           	callstack 0
  8616                           
  8617 ;; *************** function _ForwardOneBlock *****************
  8618 ;; Defined at:
  8619 ;;		line 238 in file "dc_motor.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8622 ;;		 -> motorL(9), 
  8623 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8624 ;;		 -> motorR(9), 
  8625 ;; Auto vars:     Size  Location     Type
  8626 ;;		None
  8627 ;; Return value:  Size  Location     Type
  8628 ;;                  1    wreg      void 
  8629 ;; Registers used:
  8630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8631 ;; Tracked objects:
  8632 ;;		On entry : 0/0
  8633 ;;		On exit  : 0/0
  8634 ;;		Unchanged: 0/0
  8635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8636 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8639 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8640 ;;Total ram usage:        6 bytes
  8641 ;; Hardware stack levels used: 1
  8642 ;; Hardware stack levels required when called: 4
  8643 ;; This function calls:
  8644 ;;		_fullSpeedAhead
  8645 ;;		_stop
  8646 ;; This function is called by:
  8647 ;;		_ReverseYellow
  8648 ;;		_ReversePink
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           
  8652                           	psect	text37
  8653   0056AA                     __ptext37:
  8654                           	callstack 0
  8655   0056AA                     _ForwardOneBlock:
  8656                           	callstack 24
  8657   0056AA                     
  8658                           ;dc_motor.c: 239:     fullSpeedAhead(mL,mR);
  8659   0056AA  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  8660   0056AE  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  8661   0056B2  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  8662   0056B6  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  8663   0056BA  EC42  F029         	call	_fullSpeedAhead	;wreg free
  8664   0056BE                     
  8665                           ;dc_motor.c: 240:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  8666   0056BE  0EA3               	movlw	163
  8667   0056C0  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8668   0056C2  0E57               	movlw	87
  8669   0056C4  6E1E               	movwf	??_ForwardOneBlock^0,c
  8670   0056C6  0E02               	movlw	2
  8671   0056C8                     u5987:
  8672   0056C8  2EE8               	decfsz	wreg,f,c
  8673   0056CA  D7FE               	bra	u5987
  8674   0056CC  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8675   0056CE  D7FC               	bra	u5987
  8676   0056D0  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8677   0056D2  D7FA               	bra	u5987
  8678   0056D4  D000               	nop2	
  8679   0056D6                     
  8680                           ;dc_motor.c: 241:     stop(&motorL, &motorR);
  8681   0056D6  0E61               	movlw	low _motorL
  8682   0056D8  6E14               	movwf	stop@mL^0,c
  8683   0056DA  0E01               	movlw	high _motorL
  8684   0056DC  6E15               	movwf	(stop@mL+1)^0,c
  8685   0056DE  0E58               	movlw	low _motorR
  8686   0056E0  6E16               	movwf	stop@mR^0,c
  8687   0056E2  0E01               	movlw	high _motorR
  8688   0056E4  6E17               	movwf	(stop@mR+1)^0,c
  8689   0056E6  ECD5  F029         	call	_stop	;wreg free
  8690                           
  8691                           ;dc_motor.c: 242:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8692   0056EA  0E05               	movlw	5
  8693   0056EC  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8694   0056EE  0E0F               	movlw	15
  8695   0056F0  6E1E               	movwf	??_ForwardOneBlock^0,c
  8696   0056F2  0EF1               	movlw	241
  8697   0056F4                     u5997:
  8698   0056F4  2EE8               	decfsz	wreg,f,c
  8699   0056F6  D7FE               	bra	u5997
  8700   0056F8  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8701   0056FA  D7FC               	bra	u5997
  8702   0056FC  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8703   0056FE  D7FA               	bra	u5997
  8704   005700  F000               	nop	
  8705   005702  0012               	return		;funcret
  8706   005704                     __end_of_ForwardOneBlock:
  8707                           	callstack 0
  8708                           
  8709 ;; *************** function _RedMove *****************
  8710 ;; Defined at:
  8711 ;;		line 262 in file "dc_motor.c"
  8712 ;; Parameters:    Size  Location     Type
  8713 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8714 ;;		 -> motorL(9), 
  8715 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8716 ;;		 -> motorR(9), 
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;		None
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  1    wreg      void 
  8721 ;; Registers used:
  8722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8731 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8732 ;;Total ram usage:        4 bytes
  8733 ;; Hardware stack levels used: 1
  8734 ;; Hardware stack levels required when called: 5
  8735 ;; This function calls:
  8736 ;;		_reverseDetect
  8737 ;;		_turnRight45
  8738 ;; This function is called by:
  8739 ;;		_main
  8740 ;;		_go_Home
  8741 ;; This function uses a non-reentrant model
  8742 ;;
  8743                           
  8744                           	psect	text38
  8745   005E1E                     __ptext38:
  8746                           	callstack 0
  8747   005E1E                     _RedMove:
  8748                           	callstack 24
  8749   005E1E                     
  8750                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
  8751   005E1E  0E61               	movlw	low _motorL
  8752   005E20  6E1A               	movwf	reverseDetect@mL^0,c
  8753   005E22  0E01               	movlw	high _motorL
  8754   005E24  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8755   005E26  0E58               	movlw	low _motorR
  8756   005E28  6E1C               	movwf	reverseDetect@mR^0,c
  8757   005E2A  0E01               	movlw	high _motorR
  8758   005E2C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8759   005E2E  ECAF  F02B         	call	_reverseDetect	;wreg free
  8760                           
  8761                           ;dc_motor.c: 265:     turnRight45(&motorL, &motorR);
  8762   005E32  0E61               	movlw	low _motorL
  8763   005E34  6E1A               	movwf	turnRight45@mL^0,c
  8764   005E36  0E01               	movlw	high _motorL
  8765   005E38  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8766   005E3A  0E58               	movlw	low _motorR
  8767   005E3C  6E1C               	movwf	turnRight45@mR^0,c
  8768   005E3E  0E01               	movlw	high _motorR
  8769   005E40  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8770   005E42  EC19  F02E         	call	_turnRight45	;wreg free
  8771                           
  8772                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  8773   005E46  0E61               	movlw	low _motorL
  8774   005E48  6E1A               	movwf	turnRight45@mL^0,c
  8775   005E4A  0E01               	movlw	high _motorL
  8776   005E4C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8777   005E4E  0E58               	movlw	low _motorR
  8778   005E50  6E1C               	movwf	turnRight45@mR^0,c
  8779   005E52  0E01               	movlw	high _motorR
  8780   005E54  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8781   005E56  EC19  F02E         	call	_turnRight45	;wreg free
  8782   005E5A  0012               	return		;funcret
  8783   005E5C                     __end_of_RedMove:
  8784                           	callstack 0
  8785                           
  8786 ;; *************** function _OrangeMove *****************
  8787 ;; Defined at:
  8788 ;;		line 308 in file "dc_motor.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8791 ;;		 -> motorL(9), 
  8792 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8793 ;;		 -> motorR(9), 
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;		None
  8796 ;; Return value:  Size  Location     Type
  8797 ;;                  1    wreg      void 
  8798 ;; Registers used:
  8799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8805 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8808 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8809 ;;Total ram usage:        4 bytes
  8810 ;; Hardware stack levels used: 1
  8811 ;; Hardware stack levels required when called: 5
  8812 ;; This function calls:
  8813 ;;		_reverseDetect
  8814 ;;		_turnRight45
  8815 ;; This function is called by:
  8816 ;;		_main
  8817 ;;		_go_Home
  8818 ;; This function uses a non-reentrant model
  8819 ;;
  8820                           
  8821                           	psect	text39
  8822   0058BA                     __ptext39:
  8823                           	callstack 0
  8824   0058BA                     _OrangeMove:
  8825                           	callstack 24
  8826   0058BA                     
  8827                           ;dc_motor.c: 309:     reverseDetect(&motorL, &motorR);
  8828   0058BA  0E61               	movlw	low _motorL
  8829   0058BC  6E1A               	movwf	reverseDetect@mL^0,c
  8830   0058BE  0E01               	movlw	high _motorL
  8831   0058C0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8832   0058C2  0E58               	movlw	low _motorR
  8833   0058C4  6E1C               	movwf	reverseDetect@mR^0,c
  8834   0058C6  0E01               	movlw	high _motorR
  8835   0058C8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8836   0058CA  ECAF  F02B         	call	_reverseDetect	;wreg free
  8837                           
  8838                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  8839   0058CE  0E61               	movlw	low _motorL
  8840   0058D0  6E1A               	movwf	turnRight45@mL^0,c
  8841   0058D2  0E01               	movlw	high _motorL
  8842   0058D4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8843   0058D6  0E58               	movlw	low _motorR
  8844   0058D8  6E1C               	movwf	turnRight45@mR^0,c
  8845   0058DA  0E01               	movlw	high _motorR
  8846   0058DC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8847   0058DE  EC19  F02E         	call	_turnRight45	;wreg free
  8848                           
  8849                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  8850   0058E2  0E61               	movlw	low _motorL
  8851   0058E4  6E1A               	movwf	turnRight45@mL^0,c
  8852   0058E6  0E01               	movlw	high _motorL
  8853   0058E8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8854   0058EA  0E58               	movlw	low _motorR
  8855   0058EC  6E1C               	movwf	turnRight45@mR^0,c
  8856   0058EE  0E01               	movlw	high _motorR
  8857   0058F0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8858   0058F2  EC19  F02E         	call	_turnRight45	;wreg free
  8859                           
  8860                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  8861   0058F6  0E61               	movlw	low _motorL
  8862   0058F8  6E1A               	movwf	turnRight45@mL^0,c
  8863   0058FA  0E01               	movlw	high _motorL
  8864   0058FC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8865   0058FE  0E58               	movlw	low _motorR
  8866   005900  6E1C               	movwf	turnRight45@mR^0,c
  8867   005902  0E01               	movlw	high _motorR
  8868   005904  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8869   005906  EC19  F02E         	call	_turnRight45	;wreg free
  8870   00590A  0012               	return		;funcret
  8871   00590C                     __end_of_OrangeMove:
  8872                           	callstack 0
  8873                           
  8874 ;; *************** function _LightBlueMove *****************
  8875 ;; Defined at:
  8876 ;;		line 317 in file "dc_motor.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8879 ;;		 -> motorL(9), 
  8880 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8881 ;;		 -> motorR(9), 
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;		None
  8884 ;; Return value:  Size  Location     Type
  8885 ;;                  1    wreg      void 
  8886 ;; Registers used:
  8887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8888 ;; Tracked objects:
  8889 ;;		On entry : 0/0
  8890 ;;		On exit  : 0/0
  8891 ;;		Unchanged: 0/0
  8892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8896 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8897 ;;Total ram usage:        4 bytes
  8898 ;; Hardware stack levels used: 1
  8899 ;; Hardware stack levels required when called: 5
  8900 ;; This function calls:
  8901 ;;		_reverseDetect
  8902 ;;		_turnLeft45
  8903 ;; This function is called by:
  8904 ;;		_main
  8905 ;;		_go_Home
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           	psect	text40
  8910   00590C                     __ptext40:
  8911                           	callstack 0
  8912   00590C                     _LightBlueMove:
  8913                           	callstack 24
  8914   00590C                     
  8915                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  8916   00590C  0E61               	movlw	low _motorL
  8917   00590E  6E1A               	movwf	reverseDetect@mL^0,c
  8918   005910  0E01               	movlw	high _motorL
  8919   005912  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8920   005914  0E58               	movlw	low _motorR
  8921   005916  6E1C               	movwf	reverseDetect@mR^0,c
  8922   005918  0E01               	movlw	high _motorR
  8923   00591A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8924   00591C  ECAF  F02B         	call	_reverseDetect	;wreg free
  8925                           
  8926                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  8927   005920  0E61               	movlw	low _motorL
  8928   005922  6E1A               	movwf	turnLeft45@mL^0,c
  8929   005924  0E01               	movlw	high _motorL
  8930   005926  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8931   005928  0E58               	movlw	low _motorR
  8932   00592A  6E1C               	movwf	turnLeft45@mR^0,c
  8933   00592C  0E01               	movlw	high _motorR
  8934   00592E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8935   005930  EC40  F02E         	call	_turnLeft45	;wreg free
  8936                           
  8937                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  8938   005934  0E61               	movlw	low _motorL
  8939   005936  6E1A               	movwf	turnLeft45@mL^0,c
  8940   005938  0E01               	movlw	high _motorL
  8941   00593A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8942   00593C  0E58               	movlw	low _motorR
  8943   00593E  6E1C               	movwf	turnLeft45@mR^0,c
  8944   005940  0E01               	movlw	high _motorR
  8945   005942  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8946   005944  EC40  F02E         	call	_turnLeft45	;wreg free
  8947                           
  8948                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  8949   005948  0E61               	movlw	low _motorL
  8950   00594A  6E1A               	movwf	turnLeft45@mL^0,c
  8951   00594C  0E01               	movlw	high _motorL
  8952   00594E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8953   005950  0E58               	movlw	low _motorR
  8954   005952  6E1C               	movwf	turnLeft45@mR^0,c
  8955   005954  0E01               	movlw	high _motorR
  8956   005956  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8957   005958  EC40  F02E         	call	_turnLeft45	;wreg free
  8958   00595C  0012               	return		;funcret
  8959   00595E                     __end_of_LightBlueMove:
  8960                           	callstack 0
  8961                           
  8962 ;; *************** function _GreenMove *****************
  8963 ;; Defined at:
  8964 ;;		line 270 in file "dc_motor.c"
  8965 ;; Parameters:    Size  Location     Type
  8966 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8967 ;;		 -> motorL(9), 
  8968 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8969 ;;		 -> motorR(9), 
  8970 ;; Auto vars:     Size  Location     Type
  8971 ;;		None
  8972 ;; Return value:  Size  Location     Type
  8973 ;;                  1    wreg      void 
  8974 ;; Registers used:
  8975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8976 ;; Tracked objects:
  8977 ;;		On entry : 0/0
  8978 ;;		On exit  : 0/0
  8979 ;;		Unchanged: 0/0
  8980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8981 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8984 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8985 ;;Total ram usage:        4 bytes
  8986 ;; Hardware stack levels used: 1
  8987 ;; Hardware stack levels required when called: 5
  8988 ;; This function calls:
  8989 ;;		_reverseDetect
  8990 ;;		_turnLeft45
  8991 ;; This function is called by:
  8992 ;;		_main
  8993 ;;		_go_Home
  8994 ;; This function uses a non-reentrant model
  8995 ;;
  8996                           
  8997                           	psect	text41
  8998   005E5C                     __ptext41:
  8999                           	callstack 0
  9000   005E5C                     _GreenMove:
  9001                           	callstack 24
  9002   005E5C                     
  9003                           ;dc_motor.c: 271:     reverseDetect(&motorL, &motorR);
  9004   005E5C  0E61               	movlw	low _motorL
  9005   005E5E  6E1A               	movwf	reverseDetect@mL^0,c
  9006   005E60  0E01               	movlw	high _motorL
  9007   005E62  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9008   005E64  0E58               	movlw	low _motorR
  9009   005E66  6E1C               	movwf	reverseDetect@mR^0,c
  9010   005E68  0E01               	movlw	high _motorR
  9011   005E6A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9012   005E6C  ECAF  F02B         	call	_reverseDetect	;wreg free
  9013                           
  9014                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  9015   005E70  0E61               	movlw	low _motorL
  9016   005E72  6E1A               	movwf	turnLeft45@mL^0,c
  9017   005E74  0E01               	movlw	high _motorL
  9018   005E76  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9019   005E78  0E58               	movlw	low _motorR
  9020   005E7A  6E1C               	movwf	turnLeft45@mR^0,c
  9021   005E7C  0E01               	movlw	high _motorR
  9022   005E7E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9023   005E80  EC40  F02E         	call	_turnLeft45	;wreg free
  9024                           
  9025                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9026   005E84  0E61               	movlw	low _motorL
  9027   005E86  6E1A               	movwf	turnLeft45@mL^0,c
  9028   005E88  0E01               	movlw	high _motorL
  9029   005E8A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9030   005E8C  0E58               	movlw	low _motorR
  9031   005E8E  6E1C               	movwf	turnLeft45@mR^0,c
  9032   005E90  0E01               	movlw	high _motorR
  9033   005E92  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9034   005E94  EC40  F02E         	call	_turnLeft45	;wreg free
  9035   005E98  0012               	return		;funcret
  9036   005E9A                     __end_of_GreenMove:
  9037                           	callstack 0
  9038                           
  9039 ;; *************** function _BlueMove *****************
  9040 ;; Defined at:
  9041 ;;		line 278 in file "dc_motor.c"
  9042 ;; Parameters:    Size  Location     Type
  9043 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9044 ;;		 -> motorL(9), 
  9045 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9046 ;;		 -> motorR(9), 
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;		None
  9049 ;; Return value:  Size  Location     Type
  9050 ;;                  1    wreg      void 
  9051 ;; Registers used:
  9052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9053 ;; Tracked objects:
  9054 ;;		On entry : 0/0
  9055 ;;		On exit  : 0/0
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9058 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9061 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9062 ;;Total ram usage:        4 bytes
  9063 ;; Hardware stack levels used: 1
  9064 ;; Hardware stack levels required when called: 5
  9065 ;; This function calls:
  9066 ;;		_reverseDetect
  9067 ;;		_turnRight45
  9068 ;; This function is called by:
  9069 ;;		_main
  9070 ;;		_go_Home
  9071 ;; This function uses a non-reentrant model
  9072 ;;
  9073                           
  9074                           	psect	text42
  9075   0055E6                     __ptext42:
  9076                           	callstack 0
  9077   0055E6                     _BlueMove:
  9078                           	callstack 24
  9079   0055E6                     
  9080                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  9081   0055E6  0E61               	movlw	low _motorL
  9082   0055E8  6E1A               	movwf	reverseDetect@mL^0,c
  9083   0055EA  0E01               	movlw	high _motorL
  9084   0055EC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9085   0055EE  0E58               	movlw	low _motorR
  9086   0055F0  6E1C               	movwf	reverseDetect@mR^0,c
  9087   0055F2  0E01               	movlw	high _motorR
  9088   0055F4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9089   0055F6  ECAF  F02B         	call	_reverseDetect	;wreg free
  9090                           
  9091                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  9092   0055FA  0E61               	movlw	low _motorL
  9093   0055FC  6E1A               	movwf	turnRight45@mL^0,c
  9094   0055FE  0E01               	movlw	high _motorL
  9095   005600  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9096   005602  0E58               	movlw	low _motorR
  9097   005604  6E1C               	movwf	turnRight45@mR^0,c
  9098   005606  0E01               	movlw	high _motorR
  9099   005608  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9100   00560A  EC19  F02E         	call	_turnRight45	;wreg free
  9101                           
  9102                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  9103   00560E  0E61               	movlw	low _motorL
  9104   005610  6E1A               	movwf	turnRight45@mL^0,c
  9105   005612  0E01               	movlw	high _motorL
  9106   005614  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9107   005616  0E58               	movlw	low _motorR
  9108   005618  6E1C               	movwf	turnRight45@mR^0,c
  9109   00561A  0E01               	movlw	high _motorR
  9110   00561C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9111   00561E  EC19  F02E         	call	_turnRight45	;wreg free
  9112                           
  9113                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  9114   005622  0E61               	movlw	low _motorL
  9115   005624  6E1A               	movwf	turnRight45@mL^0,c
  9116   005626  0E01               	movlw	high _motorL
  9117   005628  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9118   00562A  0E58               	movlw	low _motorR
  9119   00562C  6E1C               	movwf	turnRight45@mR^0,c
  9120   00562E  0E01               	movlw	high _motorR
  9121   005630  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9122   005632  EC19  F02E         	call	_turnRight45	;wreg free
  9123                           
  9124                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  9125   005636  0E61               	movlw	low _motorL
  9126   005638  6E1A               	movwf	turnRight45@mL^0,c
  9127   00563A  0E01               	movlw	high _motorL
  9128   00563C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9129   00563E  0E58               	movlw	low _motorR
  9130   005640  6E1C               	movwf	turnRight45@mR^0,c
  9131   005642  0E01               	movlw	high _motorR
  9132   005644  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9133   005646  EC19  F02E         	call	_turnRight45	;wreg free
  9134   00564A  0012               	return		;funcret
  9135   00564C                     __end_of_BlueMove:
  9136                           	callstack 0
  9137                           
  9138 ;; *************** function _getTMR0val *****************
  9139 ;; Defined at:
  9140 ;;		line 28 in file "timers.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;		None
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;  moving          2    0[COMRAM] int 
  9145 ;;  temp            2    0        unsigned int 
  9146 ;; Return value:  Size  Location     Type
  9147 ;;                  1    wreg      void 
  9148 ;; Registers used:
  9149 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9150 ;; Tracked objects:
  9151 ;;		On entry : 0/0
  9152 ;;		On exit  : 0/0
  9153 ;;		Unchanged: 0/0
  9154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9156 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9158 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9159 ;;Total ram usage:        2 bytes
  9160 ;; Hardware stack levels used: 1
  9161 ;; Hardware stack levels required when called: 1
  9162 ;; This function calls:
  9163 ;;		Nothing
  9164 ;; This function is called by:
  9165 ;;		_main
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text43
  9170   005FC2                     __ptext43:
  9171                           	callstack 0
  9172   005FC2                     _getTMR0val:
  9173                           	callstack 29
  9174   005FC2  50D3               	movf	211,w,c	;volatile
  9175   005FC4                     
  9176                           ;timers.c: 32:     int moving=TMR0H<<8;
  9177   005FC4  50D4               	movf	212,w,c	;volatile
  9178   005FC6  6E02               	movwf	(getTMR0val@moving+1)^0,c
  9179   005FC8  6A01               	clrf	getTMR0val@moving^0,c
  9180   005FCA                     
  9181                           ;timers.c: 33:     Time_forward[move_count]=moving;
  9182   005FCA  90D8               	bcf	status,0,c
  9183   005FCC  0101               	movlb	1	; () banked
  9184   005FCE  3514               	rlcf	_move_count& (0+255),w,b	;volatile
  9185   005FD0  6ED9               	movwf	fsr2l,c
  9186   005FD2  3515               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  9187   005FD4  6EDA               	movwf	fsr2h,c
  9188   005FD6  0E3C               	movlw	low _Time_forward
  9189   005FD8  26D9               	addwf	fsr2l,f,c
  9190   005FDA  0E02               	movlw	high _Time_forward
  9191   005FDC  22DA               	addwfc	fsr2h,f,c
  9192   005FDE  C001  FFDE         	movff	getTMR0val@moving,postinc2
  9193   005FE2  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  9194   005FE6                     
  9195                           ; BSR set to: 1
  9196   005FE6  0012               	return		;funcret
  9197   005FE8                     __end_of_getTMR0val:
  9198                           	callstack 0
  9199                           
  9200 ;; *************** function _colour_rel *****************
  9201 ;; Defined at:
  9202 ;;		line 114 in file "color.c"
  9203 ;; Parameters:    Size  Location     Type
  9204 ;;  vals            2   74[COMRAM] PTR struct RGB
  9205 ;;		 -> vals(8), 
  9206 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  9207 ;;		 -> rel(12), 
  9208 ;; Auto vars:     Size  Location     Type
  9209 ;;  B               4   20[BANK0 ] float 
  9210 ;;  G               4   16[BANK0 ] float 
  9211 ;;  R               4   12[BANK0 ] float 
  9212 ;;  L               4    0[BANK0 ] float 
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  1    wreg      void 
  9215 ;; Registers used:
  9216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9217 ;; Tracked objects:
  9218 ;;		On entry : 0/0
  9219 ;;		On exit  : 0/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9222 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9223 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9225 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9226 ;;Total ram usage:       28 bytes
  9227 ;; Hardware stack levels used: 1
  9228 ;; Hardware stack levels required when called: 2
  9229 ;; This function calls:
  9230 ;;		___fladd
  9231 ;;		___fldiv
  9232 ;;		___xxtofl
  9233 ;; This function is called by:
  9234 ;;		_main
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238                           	psect	text44
  9239   003488                     __ptext44:
  9240                           	callstack 0
  9241   003488                     _colour_rel:
  9242                           	callstack 28
  9243   003488                     
  9244                           ;color.c: 115:     float R = vals->R;
  9245   003488  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  9246   00348C  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  9247   003490  CFDE F001          	movff	postinc2,___xxtofl@val
  9248   003494  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9249   003498  0E00               	movlw	0
  9250   00349A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9251   00349C  0EFF               	movlw	-1
  9252   00349E  6E03               	movwf	(___xxtofl@val+2)^0,c
  9253   0034A0  6E04               	movwf	(___xxtofl@val+3)^0,c
  9254   0034A2  0E01               	movlw	1
  9255   0034A4  EC06  F022         	call	___xxtofl
  9256   0034A8  C001  F06C         	movff	?___xxtofl,colour_rel@R
  9257   0034AC  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  9258   0034B0  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  9259   0034B4  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  9260                           
  9261                           ;color.c: 116:     float G = vals->G;
  9262   0034B8  EE20 F002          	lfsr	2,2
  9263   0034BC  504B               	movf	colour_rel@vals^0,w,c
  9264   0034BE  26D9               	addwf	fsr2l,f,c
  9265   0034C0  504C               	movf	(colour_rel@vals+1)^0,w,c
  9266   0034C2  22DA               	addwfc	fsr2h,f,c
  9267   0034C4  CFDE F001          	movff	postinc2,___xxtofl@val
  9268   0034C8  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9269   0034CC  0E00               	movlw	0
  9270   0034CE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9271   0034D0  0EFF               	movlw	-1
  9272   0034D2  6E03               	movwf	(___xxtofl@val+2)^0,c
  9273   0034D4  6E04               	movwf	(___xxtofl@val+3)^0,c
  9274   0034D6  0E01               	movlw	1
  9275   0034D8  EC06  F022         	call	___xxtofl
  9276   0034DC  C001  F070         	movff	?___xxtofl,colour_rel@G
  9277   0034E0  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  9278   0034E4  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  9279   0034E8  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  9280                           
  9281                           ;color.c: 117:     float B = vals->B;
  9282   0034EC  EE20 F004          	lfsr	2,4
  9283   0034F0  504B               	movf	colour_rel@vals^0,w,c
  9284   0034F2  26D9               	addwf	fsr2l,f,c
  9285   0034F4  504C               	movf	(colour_rel@vals+1)^0,w,c
  9286   0034F6  22DA               	addwfc	fsr2h,f,c
  9287   0034F8  CFDE F001          	movff	postinc2,___xxtofl@val
  9288   0034FC  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9289   003500  0E00               	movlw	0
  9290   003502  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9291   003504  0EFF               	movlw	-1
  9292   003506  6E03               	movwf	(___xxtofl@val+2)^0,c
  9293   003508  6E04               	movwf	(___xxtofl@val+3)^0,c
  9294   00350A  0E01               	movlw	1
  9295   00350C  EC06  F022         	call	___xxtofl
  9296   003510  C001  F074         	movff	?___xxtofl,colour_rel@B
  9297   003514  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  9298   003518  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  9299   00351C  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  9300                           
  9301                           ;color.c: 118:     float L = vals->L;
  9302   003520  EE20 F006          	lfsr	2,6
  9303   003524  504B               	movf	colour_rel@vals^0,w,c
  9304   003526  26D9               	addwf	fsr2l,f,c
  9305   003528  504C               	movf	(colour_rel@vals+1)^0,w,c
  9306   00352A  22DA               	addwfc	fsr2h,f,c
  9307   00352C  CFDE F001          	movff	postinc2,___xxtofl@val
  9308   003530  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9309   003534  0E00               	movlw	0
  9310   003536  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9311   003538  0EFF               	movlw	-1
  9312   00353A  6E03               	movwf	(___xxtofl@val+2)^0,c
  9313   00353C  6E04               	movwf	(___xxtofl@val+3)^0,c
  9314   00353E  0E01               	movlw	1
  9315   003540  EC06  F022         	call	___xxtofl
  9316   003544  C001  F060         	movff	?___xxtofl,colour_rel@L
  9317   003548  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  9318   00354C  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  9319   003550  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  9320   003554                     
  9321                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9322   003554  C070  F005         	movff	colour_rel@G,___fladd@a
  9323   003558  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9324   00355C  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9325   003560  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9326   003564  C06C  F001         	movff	colour_rel@R,___fladd@b
  9327   003568  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9328   00356C  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9329   003570  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9330   003574  EC02  F014         	call	___fladd	;wreg free
  9331   003578  C001  F064         	movff	?___fladd,_colour_rel$3203
  9332   00357C  C002  F065         	movff	?___fladd+1,_colour_rel$3203+1
  9333   003580  C003  F066         	movff	?___fladd+2,_colour_rel$3203+2
  9334   003584  C004  F067         	movff	?___fladd+3,_colour_rel$3203+3
  9335   003588                     
  9336                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9337   003588  C074  F005         	movff	colour_rel@B,___fladd@a
  9338   00358C  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9339   003590  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9340   003594  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9341   003598  C064  F001         	movff	_colour_rel$3203,___fladd@b
  9342   00359C  C065  F002         	movff	_colour_rel$3203+1,___fladd@b+1
  9343   0035A0  C066  F003         	movff	_colour_rel$3203+2,___fladd@b+2
  9344   0035A4  C067  F004         	movff	_colour_rel$3203+3,___fladd@b+3
  9345   0035A8  EC02  F014         	call	___fladd	;wreg free
  9346   0035AC  C001  F068         	movff	?___fladd,_colour_rel$3204
  9347   0035B0  C002  F069         	movff	?___fladd+1,_colour_rel$3204+1
  9348   0035B4  C003  F06A         	movff	?___fladd+2,_colour_rel$3204+2
  9349   0035B8  C004  F06B         	movff	?___fladd+3,_colour_rel$3204+3
  9350                           
  9351                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9352   0035BC  C06C  F032         	movff	colour_rel@R,___fldiv@b
  9353   0035C0  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  9354   0035C4  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  9355   0035C8  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  9356   0035CC  C060  F005         	movff	colour_rel@L,___fladd@a
  9357   0035D0  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9358   0035D4  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9359   0035D8  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9360   0035DC  C068  F001         	movff	_colour_rel$3204,___fladd@b
  9361   0035E0  C069  F002         	movff	_colour_rel$3204+1,___fladd@b+1
  9362   0035E4  C06A  F003         	movff	_colour_rel$3204+2,___fladd@b+2
  9363   0035E8  C06B  F004         	movff	_colour_rel$3204+3,___fladd@b+3
  9364   0035EC  EC02  F014         	call	___fladd	;wreg free
  9365   0035F0  C001  F036         	movff	?___fladd,___fldiv@a
  9366   0035F4  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9367   0035F8  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9368   0035FC  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9369   003600  EC77  F018         	call	___fldiv	;wreg free
  9370   003604  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  9371   003608  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  9372   00360C  C032  FFDE         	movff	?___fldiv,postinc2
  9373   003610  C033  FFDE         	movff	?___fldiv+1,postinc2
  9374   003614  C034  FFDE         	movff	?___fldiv+2,postinc2
  9375   003618  C035  FFDE         	movff	?___fldiv+3,postinc2
  9376   00361C                     
  9377                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9378   00361C  C070  F005         	movff	colour_rel@G,___fladd@a
  9379   003620  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9380   003624  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9381   003628  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9382   00362C  C06C  F001         	movff	colour_rel@R,___fladd@b
  9383   003630  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9384   003634  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9385   003638  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9386   00363C  EC02  F014         	call	___fladd	;wreg free
  9387   003640  C001  F064         	movff	?___fladd,_colour_rel$3203
  9388   003644  C002  F065         	movff	?___fladd+1,_colour_rel$3203+1
  9389   003648  C003  F066         	movff	?___fladd+2,_colour_rel$3203+2
  9390   00364C  C004  F067         	movff	?___fladd+3,_colour_rel$3203+3
  9391   003650                     
  9392                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9393   003650  C074  F005         	movff	colour_rel@B,___fladd@a
  9394   003654  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9395   003658  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9396   00365C  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9397   003660  C064  F001         	movff	_colour_rel$3203,___fladd@b
  9398   003664  C065  F002         	movff	_colour_rel$3203+1,___fladd@b+1
  9399   003668  C066  F003         	movff	_colour_rel$3203+2,___fladd@b+2
  9400   00366C  C067  F004         	movff	_colour_rel$3203+3,___fladd@b+3
  9401   003670  EC02  F014         	call	___fladd	;wreg free
  9402   003674  C001  F068         	movff	?___fladd,_colour_rel$3204
  9403   003678  C002  F069         	movff	?___fladd+1,_colour_rel$3204+1
  9404   00367C  C003  F06A         	movff	?___fladd+2,_colour_rel$3204+2
  9405   003680  C004  F06B         	movff	?___fladd+3,_colour_rel$3204+3
  9406                           
  9407                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9408   003684  C074  F032         	movff	colour_rel@B,___fldiv@b
  9409   003688  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  9410   00368C  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  9411   003690  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  9412   003694  C060  F005         	movff	colour_rel@L,___fladd@a
  9413   003698  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9414   00369C  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9415   0036A0  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9416   0036A4  C068  F001         	movff	_colour_rel$3204,___fladd@b
  9417   0036A8  C069  F002         	movff	_colour_rel$3204+1,___fladd@b+1
  9418   0036AC  C06A  F003         	movff	_colour_rel$3204+2,___fladd@b+2
  9419   0036B0  C06B  F004         	movff	_colour_rel$3204+3,___fladd@b+3
  9420   0036B4  EC02  F014         	call	___fladd	;wreg free
  9421   0036B8  C001  F036         	movff	?___fladd,___fldiv@a
  9422   0036BC  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9423   0036C0  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9424   0036C4  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9425   0036C8  EC77  F018         	call	___fldiv	;wreg free
  9426   0036CC  EE20 F008          	lfsr	2,8
  9427   0036D0  504D               	movf	colour_rel@rel^0,w,c
  9428   0036D2  26D9               	addwf	fsr2l,f,c
  9429   0036D4  504E               	movf	(colour_rel@rel+1)^0,w,c
  9430   0036D6  22DA               	addwfc	fsr2h,f,c
  9431   0036D8  C032  FFDE         	movff	?___fldiv,postinc2
  9432   0036DC  C033  FFDE         	movff	?___fldiv+1,postinc2
  9433   0036E0  C034  FFDE         	movff	?___fldiv+2,postinc2
  9434   0036E4  C035  FFDE         	movff	?___fldiv+3,postinc2
  9435   0036E8                     
  9436                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9437   0036E8  C070  F005         	movff	colour_rel@G,___fladd@a
  9438   0036EC  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9439   0036F0  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9440   0036F4  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9441   0036F8  C06C  F001         	movff	colour_rel@R,___fladd@b
  9442   0036FC  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9443   003700  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9444   003704  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9445   003708  EC02  F014         	call	___fladd	;wreg free
  9446   00370C  C001  F064         	movff	?___fladd,_colour_rel$3203
  9447   003710  C002  F065         	movff	?___fladd+1,_colour_rel$3203+1
  9448   003714  C003  F066         	movff	?___fladd+2,_colour_rel$3203+2
  9449   003718  C004  F067         	movff	?___fladd+3,_colour_rel$3203+3
  9450   00371C                     
  9451                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9452   00371C  C074  F005         	movff	colour_rel@B,___fladd@a
  9453   003720  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9454   003724  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9455   003728  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9456   00372C  C064  F001         	movff	_colour_rel$3203,___fladd@b
  9457   003730  C065  F002         	movff	_colour_rel$3203+1,___fladd@b+1
  9458   003734  C066  F003         	movff	_colour_rel$3203+2,___fladd@b+2
  9459   003738  C067  F004         	movff	_colour_rel$3203+3,___fladd@b+3
  9460   00373C  EC02  F014         	call	___fladd	;wreg free
  9461   003740  C001  F068         	movff	?___fladd,_colour_rel$3204
  9462   003744  C002  F069         	movff	?___fladd+1,_colour_rel$3204+1
  9463   003748  C003  F06A         	movff	?___fladd+2,_colour_rel$3204+2
  9464   00374C  C004  F06B         	movff	?___fladd+3,_colour_rel$3204+3
  9465                           
  9466                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9467   003750  C070  F032         	movff	colour_rel@G,___fldiv@b
  9468   003754  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  9469   003758  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  9470   00375C  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  9471   003760  C060  F005         	movff	colour_rel@L,___fladd@a
  9472   003764  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9473   003768  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9474   00376C  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9475   003770  C068  F001         	movff	_colour_rel$3204,___fladd@b
  9476   003774  C069  F002         	movff	_colour_rel$3204+1,___fladd@b+1
  9477   003778  C06A  F003         	movff	_colour_rel$3204+2,___fladd@b+2
  9478   00377C  C06B  F004         	movff	_colour_rel$3204+3,___fladd@b+3
  9479   003780  EC02  F014         	call	___fladd	;wreg free
  9480   003784  C001  F036         	movff	?___fladd,___fldiv@a
  9481   003788  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9482   00378C  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9483   003790  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9484   003794  EC77  F018         	call	___fldiv	;wreg free
  9485   003798  EE20 F004          	lfsr	2,4
  9486   00379C  504D               	movf	colour_rel@rel^0,w,c
  9487   00379E  26D9               	addwf	fsr2l,f,c
  9488   0037A0  504E               	movf	(colour_rel@rel+1)^0,w,c
  9489   0037A2  22DA               	addwfc	fsr2h,f,c
  9490   0037A4  C032  FFDE         	movff	?___fldiv,postinc2
  9491   0037A8  C033  FFDE         	movff	?___fldiv+1,postinc2
  9492   0037AC  C034  FFDE         	movff	?___fldiv+2,postinc2
  9493   0037B0  C035  FFDE         	movff	?___fldiv+3,postinc2
  9494   0037B4  0012               	return		;funcret
  9495   0037B6                     __end_of_colour_rel:
  9496                           	callstack 0
  9497                           
  9498 ;; *************** function _color_click_init *****************
  9499 ;; Defined at:
  9500 ;;		line 7 in file "color.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;		None
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;		None
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  1    wreg      void 
  9507 ;; Registers used:
  9508 ;;		wreg, status,2, status,0, cstack
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9516 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9517 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9518 ;;Total ram usage:        1 bytes
  9519 ;; Hardware stack levels used: 1
  9520 ;; Hardware stack levels required when called: 4
  9521 ;; This function calls:
  9522 ;;		_I2C_2_Master_Init
  9523 ;;		_color_writetoaddr
  9524 ;; This function is called by:
  9525 ;;		_main
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529                           	psect	text45
  9530   00595E                     __ptext45:
  9531                           	callstack 0
  9532   00595E                     _color_click_init:
  9533                           	callstack 26
  9534   00595E                     
  9535                           ;color.c: 10:     I2C_2_Master_Init();
  9536   00595E  ECB8  F02F         	call	_I2C_2_Master_Init	;wreg free
  9537   005962                     
  9538                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  9539   005962  0E01               	movlw	1
  9540   005964  6E03               	movwf	color_writetoaddr@value^0,c
  9541   005966  0E00               	movlw	0
  9542   005968  EC07  F030         	call	_color_writetoaddr
  9543   00596C                     
  9544                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9545   00596C  0E3F               	movlw	63
  9546   00596E  6E05               	movwf	??_color_click_init^0,c
  9547   005970  0E55               	movlw	85
  9548   005972                     u6007:
  9549   005972  2EE8               	decfsz	wreg,f,c
  9550   005974  D7FE               	bra	u6007
  9551   005976  2E05               	decfsz	??_color_click_init^0,f,c
  9552   005978  D7FC               	bra	u6007
  9553   00597A  F000               	nop	
  9554   00597C                     
  9555                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  9556   00597C  0E03               	movlw	3
  9557   00597E  6E03               	movwf	color_writetoaddr@value^0,c
  9558   005980  0E00               	movlw	0
  9559   005982  EC07  F030         	call	_color_writetoaddr
  9560   005986                     
  9561                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  9562   005986  0ED5               	movlw	213
  9563   005988  6E03               	movwf	color_writetoaddr@value^0,c
  9564   00598A  0E01               	movlw	1
  9565   00598C  EC07  F030         	call	_color_writetoaddr
  9566   005990                     
  9567                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  9568   005990  0E00               	movlw	0
  9569   005992  6E03               	movwf	color_writetoaddr@value^0,c
  9570   005994  0E0F               	movlw	15
  9571   005996  EC07  F030         	call	_color_writetoaddr
  9572   00599A                     
  9573                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  9574   00599A  9287               	bcf	135,1,c	;volatile
  9575   00599C                     
  9576                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  9577   00599C  9881               	bcf	129,4,c	;volatile
  9578   00599E                     
  9579                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  9580   00599E  9E86               	bcf	134,7,c	;volatile
  9581   0059A0                     
  9582                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  9583   0059A0  9684               	bcf	132,3,c	;volatile
  9584   0059A2                     
  9585                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  9586   0059A2  9884               	bcf	132,4,c	;volatile
  9587   0059A4                     
  9588                           ;color.c: 28:     LATGbits.LATG1=0;
  9589   0059A4  927F               	bcf	127,1,c	;volatile
  9590   0059A6                     
  9591                           ;color.c: 29:     LATFbits.LATF7=0;
  9592   0059A6  9E7E               	bcf	126,7,c	;volatile
  9593   0059A8                     
  9594                           ;color.c: 30:     LATAbits.LATA4=0;
  9595   0059A8  9879               	bcf	121,4,c	;volatile
  9596   0059AA                     
  9597                           ;color.c: 32:     LATDbits.LATD3=0;
  9598   0059AA  967C               	bcf	124,3,c	;volatile
  9599   0059AC                     
  9600                           ;color.c: 33:     LATDbits.LATD4=0;
  9601   0059AC  987C               	bcf	124,4,c	;volatile
  9602   0059AE  0012               	return		;funcret
  9603   0059B0                     __end_of_color_click_init:
  9604                           	callstack 0
  9605                           
  9606 ;; *************** function _color_writetoaddr *****************
  9607 ;; Defined at:
  9608 ;;		line 41 in file "color.c"
  9609 ;; Parameters:    Size  Location     Type
  9610 ;;  address         1    wreg     unsigned char 
  9611 ;;  value           1    2[COMRAM] unsigned char 
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;  address         1    3[COMRAM] unsigned char 
  9614 ;; Return value:  Size  Location     Type
  9615 ;;                  1    wreg      void 
  9616 ;; Registers used:
  9617 ;;		wreg, status,2, status,0, cstack
  9618 ;; Tracked objects:
  9619 ;;		On entry : 0/0
  9620 ;;		On exit  : 0/0
  9621 ;;		Unchanged: 0/0
  9622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9623 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9624 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9627 ;;Total ram usage:        2 bytes
  9628 ;; Hardware stack levels used: 1
  9629 ;; Hardware stack levels required when called: 3
  9630 ;; This function calls:
  9631 ;;		_I2C_2_Master_Start
  9632 ;;		_I2C_2_Master_Stop
  9633 ;;		_I2C_2_Master_Write
  9634 ;; This function is called by:
  9635 ;;		_color_click_init
  9636 ;; This function uses a non-reentrant model
  9637 ;;
  9638                           
  9639                           	psect	text46
  9640   00600E                     __ptext46:
  9641                           	callstack 0
  9642   00600E                     _color_writetoaddr:
  9643                           	callstack 26
  9644                           
  9645                           ;incstack = 0
  9646                           ;color_writetoaddr@address stored from wreg
  9647   00600E  6E04               	movwf	color_writetoaddr@address^0,c
  9648   006010                     
  9649                           ;color.c: 42:     I2C_2_Master_Start();
  9650   006010  EC58  F030         	call	_I2C_2_Master_Start	;wreg free
  9651                           
  9652                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  9653   006014  0E52               	movlw	82
  9654   006016  EC42  F030         	call	_I2C_2_Master_Write
  9655                           
  9656                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  9657   00601A  5004               	movf	color_writetoaddr@address^0,w,c
  9658   00601C  0980               	iorlw	128
  9659   00601E  EC42  F030         	call	_I2C_2_Master_Write
  9660                           
  9661                           ;color.c: 45:     I2C_2_Master_Write(value);
  9662   006022  5003               	movf	color_writetoaddr@value^0,w,c
  9663   006024  EC42  F030         	call	_I2C_2_Master_Write
  9664                           
  9665                           ;color.c: 46:     I2C_2_Master_Stop();
  9666   006028  EC53  F030         	call	_I2C_2_Master_Stop	;wreg free
  9667   00602C  0012               	return		;funcret
  9668   00602E                     __end_of_color_writetoaddr:
  9669                           	callstack 0
  9670                           
  9671 ;; *************** function _I2C_2_Master_Write *****************
  9672 ;; Defined at:
  9673 ;;		line 45 in file "i2c.c"
  9674 ;; Parameters:    Size  Location     Type
  9675 ;;  data_byte       1    wreg     unsigned char 
  9676 ;; Auto vars:     Size  Location     Type
  9677 ;;  data_byte       1    1[COMRAM] unsigned char 
  9678 ;; Return value:  Size  Location     Type
  9679 ;;                  1    wreg      void 
  9680 ;; Registers used:
  9681 ;;		wreg, status,2, status,0, cstack
  9682 ;; Tracked objects:
  9683 ;;		On entry : 0/0
  9684 ;;		On exit  : 0/0
  9685 ;;		Unchanged: 0/0
  9686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9690 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9691 ;;Total ram usage:        1 bytes
  9692 ;; Hardware stack levels used: 1
  9693 ;; Hardware stack levels required when called: 2
  9694 ;; This function calls:
  9695 ;;		_I2C_2_Master_Idle
  9696 ;; This function is called by:
  9697 ;;		_color_writetoaddr
  9698 ;;		_color_read_lum
  9699 ;;		_color_read_Red
  9700 ;;		_color_read_Green
  9701 ;;		_color_read_Blue
  9702 ;; This function uses a non-reentrant model
  9703 ;;
  9704                           
  9705                           	psect	text47
  9706   006084                     __ptext47:
  9707                           	callstack 0
  9708   006084                     _I2C_2_Master_Write:
  9709                           	callstack 26
  9710                           
  9711                           ;incstack = 0
  9712                           ;I2C_2_Master_Write@data_byte stored from wreg
  9713   006084  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9714   006086                     
  9715                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9716   006086  ECCD  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9717   00608A                     
  9718                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9719   00608A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9720   00608E  0012               	return		;funcret
  9721   006090                     __end_of_I2C_2_Master_Write:
  9722                           	callstack 0
  9723                           
  9724 ;; *************** function _I2C_2_Master_Stop *****************
  9725 ;; Defined at:
  9726 ;;		line 39 in file "i2c.c"
  9727 ;; Parameters:    Size  Location     Type
  9728 ;;		None
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;		None
  9731 ;; Return value:  Size  Location     Type
  9732 ;;                  1    wreg      void 
  9733 ;; Registers used:
  9734 ;;		wreg, status,2, status,0, cstack
  9735 ;; Tracked objects:
  9736 ;;		On entry : 0/0
  9737 ;;		On exit  : 0/0
  9738 ;;		Unchanged: 0/0
  9739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9744 ;;Total ram usage:        0 bytes
  9745 ;; Hardware stack levels used: 1
  9746 ;; Hardware stack levels required when called: 2
  9747 ;; This function calls:
  9748 ;;		_I2C_2_Master_Idle
  9749 ;; This function is called by:
  9750 ;;		_color_writetoaddr
  9751 ;;		_color_read_lum
  9752 ;;		_color_read_Red
  9753 ;;		_color_read_Green
  9754 ;;		_color_read_Blue
  9755 ;; This function uses a non-reentrant model
  9756 ;;
  9757                           
  9758                           	psect	text48
  9759   0060A6                     __ptext48:
  9760                           	callstack 0
  9761   0060A6                     _I2C_2_Master_Stop:
  9762                           	callstack 26
  9763   0060A6                     
  9764                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9765   0060A6  ECCD  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9766   0060AA                     
  9767                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9768   0060AA  010E               	movlb	14	; () banked
  9769   0060AC  85DA               	bsf	218,2,b	;volatile
  9770   0060AE                     
  9771                           ; BSR set to: 14
  9772   0060AE  0012               	return		;funcret
  9773   0060B0                     __end_of_I2C_2_Master_Stop:
  9774                           	callstack 0
  9775                           
  9776 ;; *************** function _I2C_2_Master_Start *****************
  9777 ;; Defined at:
  9778 ;;		line 27 in file "i2c.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;		None
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;		None
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  1    wreg      void 
  9785 ;; Registers used:
  9786 ;;		wreg, status,2, status,0, cstack
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9796 ;;Total ram usage:        0 bytes
  9797 ;; Hardware stack levels used: 1
  9798 ;; Hardware stack levels required when called: 2
  9799 ;; This function calls:
  9800 ;;		_I2C_2_Master_Idle
  9801 ;; This function is called by:
  9802 ;;		_color_writetoaddr
  9803 ;;		_color_read_lum
  9804 ;;		_color_read_Red
  9805 ;;		_color_read_Green
  9806 ;;		_color_read_Blue
  9807 ;; This function uses a non-reentrant model
  9808 ;;
  9809                           
  9810                           	psect	text49
  9811   0060B0                     __ptext49:
  9812                           	callstack 0
  9813   0060B0                     _I2C_2_Master_Start:
  9814                           	callstack 26
  9815   0060B0                     
  9816                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9817   0060B0  ECCD  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9818   0060B4                     
  9819                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9820   0060B4  010E               	movlb	14	; () banked
  9821   0060B6  81DA               	bsf	218,0,b	;volatile
  9822   0060B8                     
  9823                           ; BSR set to: 14
  9824   0060B8  0012               	return		;funcret
  9825   0060BA                     __end_of_I2C_2_Master_Start:
  9826                           	callstack 0
  9827                           
  9828 ;; *************** function _I2C_2_Master_Idle *****************
  9829 ;; Defined at:
  9830 ;;		line 22 in file "i2c.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;		None
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;		None
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  1    wreg      void 
  9837 ;; Registers used:
  9838 ;;		wreg, status,2, status,0
  9839 ;; Tracked objects:
  9840 ;;		On entry : 0/0
  9841 ;;		On exit  : 0/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9846 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9847 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9848 ;;Total ram usage:        1 bytes
  9849 ;; Hardware stack levels used: 1
  9850 ;; Hardware stack levels required when called: 1
  9851 ;; This function calls:
  9852 ;;		Nothing
  9853 ;; This function is called by:
  9854 ;;		_I2C_2_Master_Start
  9855 ;;		_I2C_2_Master_RepStart
  9856 ;;		_I2C_2_Master_Stop
  9857 ;;		_I2C_2_Master_Write
  9858 ;;		_I2C_2_Master_Read
  9859 ;; This function uses a non-reentrant model
  9860 ;;
  9861                           
  9862                           	psect	text50
  9863   005F9A                     __ptext50:
  9864                           	callstack 0
  9865   005F9A                     _I2C_2_Master_Idle:
  9866                           	callstack 26
  9867   005F9A                     l133:
  9868   005F9A  010E               	movlb	14	; () banked
  9869   005F9C  B5D8               	btfsc	216,2,b	;volatile
  9870   005F9E  EFD3  F02F         	goto	u4371
  9871   005FA2  EFD5  F02F         	goto	u4370
  9872   005FA6                     u4371:
  9873   005FA6  EFCD  F02F         	goto	l133
  9874   005FAA                     u4370:
  9875   005FAA                     
  9876                           ; BSR set to: 14
  9877   005FAA  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9878   005FAE  0E1F               	movlw	31
  9879   005FB0  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9880   005FB2  A4D8               	btfss	status,2,c
  9881   005FB4  EFDE  F02F         	goto	u4381
  9882   005FB8  EFE0  F02F         	goto	u4380
  9883   005FBC                     u4381:
  9884   005FBC  EFCD  F02F         	goto	l133
  9885   005FC0                     u4380:
  9886   005FC0                     
  9887                           ; BSR set to: 14
  9888   005FC0  0012               	return		;funcret
  9889   005FC2                     __end_of_I2C_2_Master_Idle:
  9890                           	callstack 0
  9891                           
  9892 ;; *************** function _I2C_2_Master_Init *****************
  9893 ;; Defined at:
  9894 ;;		line 4 in file "i2c.c"
  9895 ;; Parameters:    Size  Location     Type
  9896 ;;		None
  9897 ;; Auto vars:     Size  Location     Type
  9898 ;;		None
  9899 ;; Return value:  Size  Location     Type
  9900 ;;                  1    wreg      void 
  9901 ;; Registers used:
  9902 ;;		wreg, status,2
  9903 ;; Tracked objects:
  9904 ;;		On entry : 0/0
  9905 ;;		On exit  : 0/0
  9906 ;;		Unchanged: 0/0
  9907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9912 ;;Total ram usage:        0 bytes
  9913 ;; Hardware stack levels used: 1
  9914 ;; Hardware stack levels required when called: 1
  9915 ;; This function calls:
  9916 ;;		Nothing
  9917 ;; This function is called by:
  9918 ;;		_color_click_init
  9919 ;;		_main
  9920 ;; This function uses a non-reentrant model
  9921 ;;
  9922                           
  9923                           	psect	text51
  9924   005F70                     __ptext51:
  9925                           	callstack 0
  9926   005F70                     _I2C_2_Master_Init:
  9927                           	callstack 28
  9928   005F70                     
  9929                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9930   005F70  010E               	movlb	14	; () banked
  9931   005F72  51D9               	movf	217,w,b	;volatile
  9932   005F74  0BF0               	andlw	-16
  9933   005F76  0908               	iorlw	8
  9934   005F78  6FD9               	movwf	217,b	;volatile
  9935   005F7A                     
  9936                           ; BSR set to: 14
  9937                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9938   005F7A  8BD9               	bsf	217,5,b	;volatile
  9939                           
  9940                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9941   005F7C  0E9F               	movlw	159
  9942   005F7E  6FD6               	movwf	214,b	;volatile
  9943   005F80                     
  9944                           ; BSR set to: 14
  9945                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9946   005F80  8A84               	bsf	132,5,c	;volatile
  9947   005F82                     
  9948                           ; BSR set to: 14
  9949                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9950   005F82  8C84               	bsf	132,6,c	;volatile
  9951   005F84                     
  9952                           ; BSR set to: 14
  9953                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9954   005F84  9BA7               	bcf	167,5,b	;volatile
  9955   005F86                     
  9956                           ; BSR set to: 14
  9957                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9958   005F86  9DA7               	bcf	167,6,b	;volatile
  9959                           
  9960                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9961   005F88  0E1D               	movlw	29
  9962   005F8A  6F1D               	movwf	29,b	;volatile
  9963                           
  9964                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9965   005F8C  0E1E               	movlw	30
  9966   005F8E  6F1C               	movwf	28,b	;volatile
  9967                           
  9968                           ;i2c.c: 18:   RD5PPS=0x1C;
  9969   005F90  0E1C               	movlw	28
  9970   005F92  6F6F               	movwf	111,b	;volatile
  9971                           
  9972                           ;i2c.c: 19:   RD6PPS=0x1B;
  9973   005F94  0E1B               	movlw	27
  9974   005F96  6F70               	movwf	112,b	;volatile
  9975   005F98                     
  9976                           ; BSR set to: 14
  9977   005F98  0012               	return		;funcret
  9978   005F9A                     __end_of_I2C_2_Master_Init:
  9979                           	callstack 0
  9980                           
  9981 ;; *************** function _YellowMove *****************
  9982 ;; Defined at:
  9983 ;;		line 288 in file "dc_motor.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9986 ;;		 -> motorL(9), 
  9987 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9988 ;;		 -> motorR(9), 
  9989 ;; Auto vars:     Size  Location     Type
  9990 ;;		None
  9991 ;; Return value:  Size  Location     Type
  9992 ;;                  1    wreg      void 
  9993 ;; Registers used:
  9994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9995 ;; Tracked objects:
  9996 ;;		On entry : 0/0
  9997 ;;		On exit  : 0/0
  9998 ;;		Unchanged: 0/0
  9999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10003 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10004 ;;Total ram usage:        4 bytes
 10005 ;; Hardware stack levels used: 1
 10006 ;; Hardware stack levels required when called: 5
 10007 ;; This function calls:
 10008 ;;		_reverseDetect
 10009 ;;		_reverseOneBlock
 10010 ;;		_turnRight45
 10011 ;; This function is called by:
 10012 ;;		_main
 10013 ;; This function uses a non-reentrant model
 10014 ;;
 10015                           
 10016                           	psect	text52
 10017   0059B0                     __ptext52:
 10018                           	callstack 0
 10019   0059B0                     _YellowMove:
 10020                           	callstack 25
 10021   0059B0                     
 10022                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
 10023   0059B0  0E61               	movlw	low _motorL
 10024   0059B2  6E1A               	movwf	reverseDetect@mL^0,c
 10025   0059B4  0E01               	movlw	high _motorL
 10026   0059B6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10027   0059B8  0E58               	movlw	low _motorR
 10028   0059BA  6E1C               	movwf	reverseDetect@mR^0,c
 10029   0059BC  0E01               	movlw	high _motorR
 10030   0059BE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10031   0059C0  ECAF  F02B         	call	_reverseDetect	;wreg free
 10032                           
 10033                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
 10034   0059C4  0E61               	movlw	low _motorL
 10035   0059C6  6E1A               	movwf	reverseOneBlock@mL^0,c
 10036   0059C8  0E01               	movlw	high _motorL
 10037   0059CA  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10038   0059CC  0E58               	movlw	low _motorR
 10039   0059CE  6E1C               	movwf	reverseOneBlock@mR^0,c
 10040   0059D0  0E01               	movlw	high _motorR
 10041   0059D2  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10042   0059D4  EC82  F02B         	call	_reverseOneBlock	;wreg free
 10043                           
 10044                           ;dc_motor.c: 293:     turnRight45(&motorL, &motorR);
 10045   0059D8  0E61               	movlw	low _motorL
 10046   0059DA  6E1A               	movwf	turnRight45@mL^0,c
 10047   0059DC  0E01               	movlw	high _motorL
 10048   0059DE  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10049   0059E0  0E58               	movlw	low _motorR
 10050   0059E2  6E1C               	movwf	turnRight45@mR^0,c
 10051   0059E4  0E01               	movlw	high _motorR
 10052   0059E6  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10053   0059E8  EC19  F02E         	call	_turnRight45	;wreg free
 10054                           
 10055                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
 10056   0059EC  0E61               	movlw	low _motorL
 10057   0059EE  6E1A               	movwf	turnRight45@mL^0,c
 10058   0059F0  0E01               	movlw	high _motorL
 10059   0059F2  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10060   0059F4  0E58               	movlw	low _motorR
 10061   0059F6  6E1C               	movwf	turnRight45@mR^0,c
 10062   0059F8  0E01               	movlw	high _motorR
 10063   0059FA  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10064   0059FC  EC19  F02E         	call	_turnRight45	;wreg free
 10065   005A00  0012               	return		;funcret
 10066   005A02                     __end_of_YellowMove:
 10067                           	callstack 0
 10068                           
 10069 ;; *************** function _turnRight45 *****************
 10070 ;; Defined at:
 10071 ;;		line 211 in file "dc_motor.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10074 ;;		 -> motorL(9), 
 10075 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10076 ;;		 -> motorR(9), 
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;		None
 10079 ;; Return value:  Size  Location     Type
 10080 ;;                  1    wreg      void 
 10081 ;; Registers used:
 10082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10083 ;; Tracked objects:
 10084 ;;		On entry : 0/0
 10085 ;;		On exit  : 0/0
 10086 ;;		Unchanged: 0/0
 10087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10088 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10090 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10091 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10092 ;;Total ram usage:        6 bytes
 10093 ;; Hardware stack levels used: 1
 10094 ;; Hardware stack levels required when called: 4
 10095 ;; This function calls:
 10096 ;;		_TurnDelay
 10097 ;;		_stop
 10098 ;;		_turnRight
 10099 ;; This function is called by:
 10100 ;;		_RedMove
 10101 ;;		_BlueMove
 10102 ;;		_YellowMove
 10103 ;;		_OrangeMove
 10104 ;;		_ReverseYellow
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108                           	psect	text53
 10109   005C32                     __ptext53:
 10110                           	callstack 0
 10111   005C32                     _turnRight45:
 10112                           	callstack 24
 10113   005C32                     
 10114                           ;dc_motor.c: 212:     turnRight(mL,mR);
 10115   005C32  C01A  F014         	movff	turnRight45@mL,turnRight@mL
 10116   005C36  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 10117   005C3A  C01C  F016         	movff	turnRight45@mR,turnRight@mR
 10118   005C3E  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 10119   005C42  EC55  F028         	call	_turnRight	;wreg free
 10120   005C46                     
 10121                           ;dc_motor.c: 213:     TurnDelay(Turn45Delay);
 10122   005C46  C0F2  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10123   005C4A  C0F3  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10124   005C4E  EC85  F02F         	call	_TurnDelay	;wreg free
 10125   005C52                     
 10126                           ;dc_motor.c: 214:     stop(&motorL, &motorR);
 10127   005C52  0E61               	movlw	low _motorL
 10128   005C54  6E14               	movwf	stop@mL^0,c
 10129   005C56  0E01               	movlw	high _motorL
 10130   005C58  6E15               	movwf	(stop@mL+1)^0,c
 10131   005C5A  0E58               	movlw	low _motorR
 10132   005C5C  6E16               	movwf	stop@mR^0,c
 10133   005C5E  0E01               	movlw	high _motorR
 10134   005C60  6E17               	movwf	(stop@mR+1)^0,c
 10135   005C62  ECD5  F029         	call	_stop	;wreg free
 10136   005C66                     
 10137                           ;dc_motor.c: 215:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10138   005C66  0E05               	movlw	5
 10139   005C68  6E1F               	movwf	(??_turnRight45+1)^0,c
 10140   005C6A  0E0F               	movlw	15
 10141   005C6C  6E1E               	movwf	??_turnRight45^0,c
 10142   005C6E  0EF1               	movlw	241
 10143   005C70                     u6017:
 10144   005C70  2EE8               	decfsz	wreg,f,c
 10145   005C72  D7FE               	bra	u6017
 10146   005C74  2E1E               	decfsz	??_turnRight45^0,f,c
 10147   005C76  D7FC               	bra	u6017
 10148   005C78  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
 10149   005C7A  D7FA               	bra	u6017
 10150   005C7C  F000               	nop	
 10151   005C7E  0012               	return		;funcret
 10152   005C80                     __end_of_turnRight45:
 10153                           	callstack 0
 10154                           
 10155 ;; *************** function _turnRight *****************
 10156 ;; Defined at:
 10157 ;;		line 129 in file "dc_motor.c"
 10158 ;; Parameters:    Size  Location     Type
 10159 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10160 ;;		 -> motorL(9), 
 10161 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10162 ;;		 -> motorR(9), 
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;		None
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  1    wreg      void 
 10167 ;; Registers used:
 10168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10174 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10177 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10178 ;;Total ram usage:        6 bytes
 10179 ;; Hardware stack levels used: 1
 10180 ;; Hardware stack levels required when called: 3
 10181 ;; This function calls:
 10182 ;;		_setMotorPWM
 10183 ;; This function is called by:
 10184 ;;		_turnRight45
 10185 ;; This function uses a non-reentrant model
 10186 ;;
 10187                           
 10188                           	psect	text54
 10189   0050AA                     __ptext54:
 10190                           	callstack 0
 10191   0050AA                     _turnRight:
 10192                           	callstack 24
 10193   0050AA                     
 10194                           ;dc_motor.c: 129: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          0: {;dc_motor.c: 131:     mL->direction =1;
 10195   0050AA  EE20 F001          	lfsr	2,1
 10196   0050AE  5014               	movf	turnRight@mL^0,w,c
 10197   0050B0  26D9               	addwf	fsr2l,f,c
 10198   0050B2  5015               	movf	(turnRight@mL+1)^0,w,c
 10199   0050B4  22DA               	addwfc	fsr2h,f,c
 10200   0050B6  0E01               	movlw	1
 10201   0050B8  6EDF               	movwf	indf2,c
 10202                           
 10203                           ;dc_motor.c: 132:     mR->direction =0;
 10204   0050BA  EE20 F001          	lfsr	2,1
 10205   0050BE  5016               	movf	turnRight@mR^0,w,c
 10206   0050C0  26D9               	addwf	fsr2l,f,c
 10207   0050C2  5017               	movf	(turnRight@mR+1)^0,w,c
 10208   0050C4  22DA               	addwfc	fsr2h,f,c
 10209   0050C6  0E00               	movlw	0
 10210   0050C8  6EDF               	movwf	indf2,c
 10211                           
 10212                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
 10213   0050CA  EF8B  F028         	goto	l4650
 10214   0050CE                     l4642:
 10215                           
 10216                           ;dc_motor.c: 136:         mL->power+=10;
 10217   0050CE  C014  FFD9         	movff	turnRight@mL,fsr2l
 10218   0050D2  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10219   0050D6  0E0A               	movlw	10
 10220   0050D8  26DF               	addwf	indf2,f,c
 10221                           
 10222                           ;dc_motor.c: 137:         mR->power+=10;
 10223   0050DA  C016  FFD9         	movff	turnRight@mR,fsr2l
 10224   0050DE  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10225   0050E2  0E0A               	movlw	10
 10226   0050E4  26DF               	addwf	indf2,f,c
 10227   0050E6                     
 10228                           ;dc_motor.c: 139:         setMotorPWM(mL);
 10229   0050E6  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 10230   0050EA  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 10231   0050EE  ECA4  F023         	call	_setMotorPWM	;wreg free
 10232   0050F2                     
 10233                           ;dc_motor.c: 140:         setMotorPWM(mR);
 10234   0050F2  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 10235   0050F6  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 10236   0050FA  ECA4  F023         	call	_setMotorPWM	;wreg free
 10237   0050FE                     
 10238                           ;dc_motor.c: 142:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10239   0050FE  0E02               	movlw	2
 10240   005100  6E19               	movwf	(??_turnRight+1)^0,c
 10241   005102  0EA0               	movlw	160
 10242   005104  6E18               	movwf	??_turnRight^0,c
 10243   005106  0E92               	movlw	146
 10244   005108                     u6027:
 10245   005108  2EE8               	decfsz	wreg,f,c
 10246   00510A  D7FE               	bra	u6027
 10247   00510C  2E18               	decfsz	??_turnRight^0,f,c
 10248   00510E  D7FC               	bra	u6027
 10249   005110  2E19               	decfsz	(??_turnRight+1)^0,f,c
 10250   005112  D7FA               	bra	u6027
 10251   005114  D000               	nop2	
 10252   005116                     l4650:
 10253   005116  C014  FFD9         	movff	turnRight@mL,fsr2l
 10254   00511A  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10255   00511E  0E1E               	movlw	30
 10256   005120  60DF               	cpfslt	indf2,c
 10257   005122  EF95  F028         	goto	u4451
 10258   005126  EF97  F028         	goto	u4450
 10259   00512A                     u4451:
 10260   00512A  EFA3  F028         	goto	l483
 10261   00512E                     u4450:
 10262   00512E  C016  FFD9         	movff	turnRight@mR,fsr2l
 10263   005132  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10264   005136  0E1D               	movlw	29
 10265   005138  64DF               	cpfsgt	indf2,c
 10266   00513A  EFA1  F028         	goto	u4461
 10267   00513E  EFA3  F028         	goto	u4460
 10268   005142                     u4461:
 10269   005142  EF67  F028         	goto	l4642
 10270   005146                     u4460:
 10271   005146                     l483:
 10272   005146  0012               	return		;funcret
 10273   005148                     __end_of_turnRight:
 10274                           	callstack 0
 10275                           
 10276 ;; *************** function _Timer0_init *****************
 10277 ;; Defined at:
 10278 ;;		line 8 in file "timers.c"
 10279 ;; Parameters:    Size  Location     Type
 10280 ;;		None
 10281 ;; Auto vars:     Size  Location     Type
 10282 ;;		None
 10283 ;; Return value:  Size  Location     Type
 10284 ;;                  1    wreg      void 
 10285 ;; Registers used:
 10286 ;;		wreg, status,2
 10287 ;; Tracked objects:
 10288 ;;		On entry : 0/0
 10289 ;;		On exit  : 0/0
 10290 ;;		Unchanged: 0/0
 10291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10296 ;;Total ram usage:        0 bytes
 10297 ;; Hardware stack levels used: 1
 10298 ;; Hardware stack levels required when called: 1
 10299 ;; This function calls:
 10300 ;;		Nothing
 10301 ;; This function is called by:
 10302 ;;		_main
 10303 ;; This function uses a non-reentrant model
 10304 ;;
 10305                           
 10306                           	psect	text55
 10307   00602E                     __ptext55:
 10308                           	callstack 0
 10309   00602E                     _Timer0_init:
 10310                           	callstack 29
 10311   00602E                     
 10312                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 10313   00602E  50D6               	movf	214,w,c	;volatile
 10314   006030  0B1F               	andlw	-225
 10315   006032  0940               	iorlw	64
 10316   006034  6ED6               	movwf	214,c	;volatile
 10317   006036                     
 10318                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 10319   006036  88D6               	bsf	214,4,c	;volatile
 10320                           
 10321                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1101;
 10322   006038  50D6               	movf	214,w,c	;volatile
 10323   00603A  0BF0               	andlw	-16
 10324   00603C  090D               	iorlw	13
 10325   00603E  6ED6               	movwf	214,c	;volatile
 10326   006040                     
 10327                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 10328   006040  88D5               	bsf	213,4,c	;volatile
 10329                           
 10330                           ;timers.c: 16:     TMR0H=0;
 10331   006042  0E00               	movlw	0
 10332   006044  6ED4               	movwf	212,c	;volatile
 10333                           
 10334                           ;timers.c: 17:     TMR0L=0;
 10335   006046  0E00               	movlw	0
 10336   006048  6ED3               	movwf	211,c	;volatile
 10337   00604A                     
 10338                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 10339   00604A  9ED5               	bcf	213,7,c	;volatile
 10340   00604C  0012               	return		;funcret
 10341   00604E                     __end_of_Timer0_init:
 10342                           	callstack 0
 10343                           
 10344 ;; *************** function _RetryMove *****************
 10345 ;; Defined at:
 10346 ;;		line 325 in file "dc_motor.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10349 ;;		 -> motorL(9), 
 10350 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10351 ;;		 -> motorR(9), 
 10352 ;; Auto vars:     Size  Location     Type
 10353 ;;		None
 10354 ;; Return value:  Size  Location     Type
 10355 ;;                  1    wreg      void 
 10356 ;; Registers used:
 10357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10358 ;; Tracked objects:
 10359 ;;		On entry : 0/0
 10360 ;;		On exit  : 0/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10363 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10365 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10366 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10367 ;;Total ram usage:        6 bytes
 10368 ;; Hardware stack levels used: 1
 10369 ;; Hardware stack levels required when called: 5
 10370 ;; This function calls:
 10371 ;;		_fullSpeedAhead
 10372 ;;		_reverseDetect
 10373 ;;		_stop
 10374 ;; This function is called by:
 10375 ;;		_main
 10376 ;; This function uses a non-reentrant model
 10377 ;;
 10378                           
 10379                           	psect	text56
 10380   005516                     __ptext56:
 10381                           	callstack 0
 10382   005516                     _RetryMove:
 10383                           	callstack 25
 10384   005516                     
 10385                           ;dc_motor.c: 326:     reverseDetect(&motorL, &motorR);
 10386   005516  0E61               	movlw	low _motorL
 10387   005518  6E1A               	movwf	reverseDetect@mL^0,c
 10388   00551A  0E01               	movlw	high _motorL
 10389   00551C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10390   00551E  0E58               	movlw	low _motorR
 10391   005520  6E1C               	movwf	reverseDetect@mR^0,c
 10392   005522  0E01               	movlw	high _motorR
 10393   005524  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10394   005526  ECAF  F02B         	call	_reverseDetect	;wreg free
 10395                           
 10396                           ;dc_motor.c: 327:     stop(&motorL, &motorR);
 10397   00552A  0E61               	movlw	low _motorL
 10398   00552C  6E14               	movwf	stop@mL^0,c
 10399   00552E  0E01               	movlw	high _motorL
 10400   005530  6E15               	movwf	(stop@mL+1)^0,c
 10401   005532  0E58               	movlw	low _motorR
 10402   005534  6E16               	movwf	stop@mR^0,c
 10403   005536  0E01               	movlw	high _motorR
 10404   005538  6E17               	movwf	(stop@mR+1)^0,c
 10405   00553A  ECD5  F029         	call	_stop	;wreg free
 10406                           
 10407                           ;dc_motor.c: 328:     fullSpeedAhead(mL,mR);
 10408   00553E  C020  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
 10409   005542  C021  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
 10410   005546  C022  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
 10411   00554A  C023  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
 10412   00554E  EC42  F029         	call	_fullSpeedAhead	;wreg free
 10413   005552                     
 10414                           ;dc_motor.c: 329:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10415   005552  0E29               	movlw	41
 10416   005554  6E25               	movwf	(??_RetryMove+1)^0,c
 10417   005556  0E96               	movlw	150
 10418   005558  6E24               	movwf	??_RetryMove^0,c
 10419   00555A  0E7F               	movlw	127
 10420   00555C                     u6037:
 10421   00555C  2EE8               	decfsz	wreg,f,c
 10422   00555E  D7FE               	bra	u6037
 10423   005560  2E24               	decfsz	??_RetryMove^0,f,c
 10424   005562  D7FC               	bra	u6037
 10425   005564  2E25               	decfsz	(??_RetryMove+1)^0,f,c
 10426   005566  D7FA               	bra	u6037
 10427   005568  F000               	nop	
 10428   00556A                     
 10429                           ;dc_motor.c: 330:     stop(&motorL, &motorR);
 10430   00556A  0E61               	movlw	low _motorL
 10431   00556C  6E14               	movwf	stop@mL^0,c
 10432   00556E  0E01               	movlw	high _motorL
 10433   005570  6E15               	movwf	(stop@mL+1)^0,c
 10434   005572  0E58               	movlw	low _motorR
 10435   005574  6E16               	movwf	stop@mR^0,c
 10436   005576  0E01               	movlw	high _motorR
 10437   005578  6E17               	movwf	(stop@mR+1)^0,c
 10438   00557A  ECD5  F029         	call	_stop	;wreg free
 10439   00557E  0012               	return		;funcret
 10440   005580                     __end_of_RetryMove:
 10441                           	callstack 0
 10442                           
 10443 ;; *************** function _PinkMove *****************
 10444 ;; Defined at:
 10445 ;;		line 298 in file "dc_motor.c"
 10446 ;; Parameters:    Size  Location     Type
 10447 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10448 ;;		 -> motorL(9), 
 10449 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10450 ;;		 -> motorR(9), 
 10451 ;; Auto vars:     Size  Location     Type
 10452 ;;		None
 10453 ;; Return value:  Size  Location     Type
 10454 ;;                  1    wreg      void 
 10455 ;; Registers used:
 10456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10457 ;; Tracked objects:
 10458 ;;		On entry : 0/0
 10459 ;;		On exit  : 0/0
 10460 ;;		Unchanged: 0/0
 10461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10462 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10465 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10466 ;;Total ram usage:        4 bytes
 10467 ;; Hardware stack levels used: 1
 10468 ;; Hardware stack levels required when called: 5
 10469 ;; This function calls:
 10470 ;;		_reverseDetect
 10471 ;;		_reverseOneBlock
 10472 ;;		_turnLeft45
 10473 ;; This function is called by:
 10474 ;;		_main
 10475 ;; This function uses a non-reentrant model
 10476 ;;
 10477                           
 10478                           	psect	text57
 10479   005A02                     __ptext57:
 10480                           	callstack 0
 10481   005A02                     _PinkMove:
 10482                           	callstack 25
 10483   005A02                     
 10484                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
 10485   005A02  0E61               	movlw	low _motorL
 10486   005A04  6E1A               	movwf	reverseDetect@mL^0,c
 10487   005A06  0E01               	movlw	high _motorL
 10488   005A08  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10489   005A0A  0E58               	movlw	low _motorR
 10490   005A0C  6E1C               	movwf	reverseDetect@mR^0,c
 10491   005A0E  0E01               	movlw	high _motorR
 10492   005A10  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10493   005A12  ECAF  F02B         	call	_reverseDetect	;wreg free
 10494                           
 10495                           ;dc_motor.c: 301:     reverseOneBlock(&motorL, &motorR);
 10496   005A16  0E61               	movlw	low _motorL
 10497   005A18  6E1A               	movwf	reverseOneBlock@mL^0,c
 10498   005A1A  0E01               	movlw	high _motorL
 10499   005A1C  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10500   005A1E  0E58               	movlw	low _motorR
 10501   005A20  6E1C               	movwf	reverseOneBlock@mR^0,c
 10502   005A22  0E01               	movlw	high _motorR
 10503   005A24  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10504   005A26  EC82  F02B         	call	_reverseOneBlock	;wreg free
 10505                           
 10506                           ;dc_motor.c: 303:     turnLeft45(&motorL, &motorR);
 10507   005A2A  0E61               	movlw	low _motorL
 10508   005A2C  6E1A               	movwf	turnLeft45@mL^0,c
 10509   005A2E  0E01               	movlw	high _motorL
 10510   005A30  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10511   005A32  0E58               	movlw	low _motorR
 10512   005A34  6E1C               	movwf	turnLeft45@mR^0,c
 10513   005A36  0E01               	movlw	high _motorR
 10514   005A38  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10515   005A3A  EC40  F02E         	call	_turnLeft45	;wreg free
 10516                           
 10517                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
 10518   005A3E  0E61               	movlw	low _motorL
 10519   005A40  6E1A               	movwf	turnLeft45@mL^0,c
 10520   005A42  0E01               	movlw	high _motorL
 10521   005A44  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10522   005A46  0E58               	movlw	low _motorR
 10523   005A48  6E1C               	movwf	turnLeft45@mR^0,c
 10524   005A4A  0E01               	movlw	high _motorR
 10525   005A4C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10526   005A4E  EC40  F02E         	call	_turnLeft45	;wreg free
 10527   005A52  0012               	return		;funcret
 10528   005A54                     __end_of_PinkMove:
 10529                           	callstack 0
 10530                           
 10531 ;; *************** function _turnLeft45 *****************
 10532 ;; Defined at:
 10533 ;;		line 218 in file "dc_motor.c"
 10534 ;; Parameters:    Size  Location     Type
 10535 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10536 ;;		 -> motorL(9), 
 10537 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10538 ;;		 -> motorR(9), 
 10539 ;; Auto vars:     Size  Location     Type
 10540 ;;		None
 10541 ;; Return value:  Size  Location     Type
 10542 ;;                  1    wreg      void 
 10543 ;; Registers used:
 10544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10545 ;; Tracked objects:
 10546 ;;		On entry : 0/0
 10547 ;;		On exit  : 0/0
 10548 ;;		Unchanged: 0/0
 10549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10553 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10554 ;;Total ram usage:        6 bytes
 10555 ;; Hardware stack levels used: 1
 10556 ;; Hardware stack levels required when called: 4
 10557 ;; This function calls:
 10558 ;;		_TurnDelay
 10559 ;;		_stop
 10560 ;;		_turnLeft
 10561 ;; This function is called by:
 10562 ;;		_GreenMove
 10563 ;;		_PinkMove
 10564 ;;		_LightBlueMove
 10565 ;;		_ReversePink
 10566 ;;		_turnCalibration
 10567 ;; This function uses a non-reentrant model
 10568 ;;
 10569                           
 10570                           	psect	text58
 10571   005C80                     __ptext58:
 10572                           	callstack 0
 10573   005C80                     _turnLeft45:
 10574                           	callstack 25
 10575   005C80                     
 10576                           ;dc_motor.c: 219:     turnLeft(mL,mR);
 10577   005C80  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10578   005C84  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10579   005C88  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10580   005C8C  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10581   005C90  ECA4  F028         	call	_turnLeft	;wreg free
 10582   005C94                     
 10583                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
 10584   005C94  C0F2  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10585   005C98  C0F3  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10586   005C9C  EC85  F02F         	call	_TurnDelay	;wreg free
 10587   005CA0                     
 10588                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
 10589   005CA0  0E61               	movlw	low _motorL
 10590   005CA2  6E14               	movwf	stop@mL^0,c
 10591   005CA4  0E01               	movlw	high _motorL
 10592   005CA6  6E15               	movwf	(stop@mL+1)^0,c
 10593   005CA8  0E58               	movlw	low _motorR
 10594   005CAA  6E16               	movwf	stop@mR^0,c
 10595   005CAC  0E01               	movlw	high _motorR
 10596   005CAE  6E17               	movwf	(stop@mR+1)^0,c
 10597   005CB0  ECD5  F029         	call	_stop	;wreg free
 10598   005CB4                     
 10599                           ;dc_motor.c: 222:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10600   005CB4  0E05               	movlw	5
 10601   005CB6  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10602   005CB8  0E0F               	movlw	15
 10603   005CBA  6E1E               	movwf	??_turnLeft45^0,c
 10604   005CBC  0EF1               	movlw	241
 10605   005CBE                     u6047:
 10606   005CBE  2EE8               	decfsz	wreg,f,c
 10607   005CC0  D7FE               	bra	u6047
 10608   005CC2  2E1E               	decfsz	??_turnLeft45^0,f,c
 10609   005CC4  D7FC               	bra	u6047
 10610   005CC6  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10611   005CC8  D7FA               	bra	u6047
 10612   005CCA  F000               	nop	
 10613   005CCC  0012               	return		;funcret
 10614   005CCE                     __end_of_turnLeft45:
 10615                           	callstack 0
 10616                           
 10617 ;; *************** function _turnLeft *****************
 10618 ;; Defined at:
 10619 ;;		line 111 in file "dc_motor.c"
 10620 ;; Parameters:    Size  Location     Type
 10621 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10622 ;;		 -> motorL(9), 
 10623 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10624 ;;		 -> motorR(9), 
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;		None
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  1    wreg      void 
 10629 ;; Registers used:
 10630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10631 ;; Tracked objects:
 10632 ;;		On entry : 0/0
 10633 ;;		On exit  : 0/0
 10634 ;;		Unchanged: 0/0
 10635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10636 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10639 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10640 ;;Total ram usage:        6 bytes
 10641 ;; Hardware stack levels used: 1
 10642 ;; Hardware stack levels required when called: 3
 10643 ;; This function calls:
 10644 ;;		_setMotorPWM
 10645 ;; This function is called by:
 10646 ;;		_turnLeft45
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650                           	psect	text59
 10651   005148                     __ptext59:
 10652                           	callstack 0
 10653   005148                     _turnLeft:
 10654                           	callstack 25
 10655   005148                     
 10656                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
 10657   005148  EE20 F001          	lfsr	2,1
 10658   00514C  5014               	movf	turnLeft@mL^0,w,c
 10659   00514E  26D9               	addwf	fsr2l,f,c
 10660   005150  5015               	movf	(turnLeft@mL+1)^0,w,c
 10661   005152  22DA               	addwfc	fsr2h,f,c
 10662   005154  0E00               	movlw	0
 10663   005156  6EDF               	movwf	indf2,c
 10664                           
 10665                           ;dc_motor.c: 114:     mR->direction =1;
 10666   005158  EE20 F001          	lfsr	2,1
 10667   00515C  5016               	movf	turnLeft@mR^0,w,c
 10668   00515E  26D9               	addwf	fsr2l,f,c
 10669   005160  5017               	movf	(turnLeft@mR+1)^0,w,c
 10670   005162  22DA               	addwfc	fsr2h,f,c
 10671   005164  0E01               	movlw	1
 10672   005166  6EDF               	movwf	indf2,c
 10673                           
 10674                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
 10675   005168  EFDA  F028         	goto	l4636
 10676   00516C                     l4628:
 10677                           
 10678                           ;dc_motor.c: 118:         mL->power+=10;
 10679   00516C  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10680   005170  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10681   005174  0E0A               	movlw	10
 10682   005176  26DF               	addwf	indf2,f,c
 10683                           
 10684                           ;dc_motor.c: 119:         mR->power+=10;
 10685   005178  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10686   00517C  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10687   005180  0E0A               	movlw	10
 10688   005182  26DF               	addwf	indf2,f,c
 10689   005184                     
 10690                           ;dc_motor.c: 121:         setMotorPWM(mL);
 10691   005184  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10692   005188  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10693   00518C  ECA4  F023         	call	_setMotorPWM	;wreg free
 10694   005190                     
 10695                           ;dc_motor.c: 122:         setMotorPWM(mR);
 10696   005190  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10697   005194  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10698   005198  ECA4  F023         	call	_setMotorPWM	;wreg free
 10699   00519C                     
 10700                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10701   00519C  0E02               	movlw	2
 10702   00519E  6E19               	movwf	(??_turnLeft+1)^0,c
 10703   0051A0  0EA0               	movlw	160
 10704   0051A2  6E18               	movwf	??_turnLeft^0,c
 10705   0051A4  0E92               	movlw	146
 10706   0051A6                     u6057:
 10707   0051A6  2EE8               	decfsz	wreg,f,c
 10708   0051A8  D7FE               	bra	u6057
 10709   0051AA  2E18               	decfsz	??_turnLeft^0,f,c
 10710   0051AC  D7FC               	bra	u6057
 10711   0051AE  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10712   0051B0  D7FA               	bra	u6057
 10713   0051B2  D000               	nop2	
 10714   0051B4                     l4636:
 10715   0051B4  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10716   0051B8  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10717   0051BC  0E1E               	movlw	30
 10718   0051BE  60DF               	cpfslt	indf2,c
 10719   0051C0  EFE4  F028         	goto	u4431
 10720   0051C4  EFE6  F028         	goto	u4430
 10721   0051C8                     u4431:
 10722   0051C8  EFF2  F028         	goto	l475
 10723   0051CC                     u4430:
 10724   0051CC  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10725   0051D0  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10726   0051D4  0E1D               	movlw	29
 10727   0051D6  64DF               	cpfsgt	indf2,c
 10728   0051D8  EFF0  F028         	goto	u4441
 10729   0051DC  EFF2  F028         	goto	u4440
 10730   0051E0                     u4441:
 10731   0051E0  EFB6  F028         	goto	l4628
 10732   0051E4                     u4440:
 10733   0051E4                     l475:
 10734   0051E4  0012               	return		;funcret
 10735   0051E6                     __end_of_turnLeft:
 10736                           	callstack 0
 10737                           
 10738 ;; *************** function _TurnDelay *****************
 10739 ;; Defined at:
 10740 ;;		line 204 in file "dc_motor.c"
 10741 ;; Parameters:    Size  Location     Type
 10742 ;;  Turn45Delay     2    0[COMRAM] int 
 10743 ;; Auto vars:     Size  Location     Type
 10744 ;;		None
 10745 ;; Return value:  Size  Location     Type
 10746 ;;                  1    wreg      void 
 10747 ;; Registers used:
 10748 ;;		wreg, status,2, status,0
 10749 ;; Tracked objects:
 10750 ;;		On entry : 0/0
 10751 ;;		On exit  : 0/0
 10752 ;;		Unchanged: 0/0
 10753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10754 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10756 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10757 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10758 ;;Total ram usage:        3 bytes
 10759 ;; Hardware stack levels used: 1
 10760 ;; Hardware stack levels required when called: 1
 10761 ;; This function calls:
 10762 ;;		Nothing
 10763 ;; This function is called by:
 10764 ;;		_turnRight45
 10765 ;;		_turnLeft45
 10766 ;; This function uses a non-reentrant model
 10767 ;;
 10768                           
 10769                           	psect	text60
 10770   005F0A                     __ptext60:
 10771                           	callstack 0
 10772   005F0A                     _TurnDelay:
 10773                           	callstack 27
 10774   005F0A                     
 10775                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10776   005F0A  EF92  F02F         	goto	l510
 10777   005F0E                     l4670:
 10778                           
 10779                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10780   005F0E  0E15               	movlw	21
 10781   005F10  6E03               	movwf	??_TurnDelay^0,c
 10782   005F12  0EC6               	movlw	198
 10783   005F14                     u6067:
 10784   005F14  2EE8               	decfsz	wreg,f,c
 10785   005F16  D7FE               	bra	u6067
 10786   005F18  2E03               	decfsz	??_TurnDelay^0,f,c
 10787   005F1A  D7FC               	bra	u6067
 10788   005F1C  D000               	nop2	
 10789   005F1E                     
 10790                           ;dc_motor.c: 207:         Turn45Delay--;
 10791   005F1E  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10792   005F20  A0D8               	btfss	status,0,c
 10793   005F22  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10794   005F24                     l510:
 10795                           
 10796                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10797   005F24  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10798   005F26  EF9F  F02F         	goto	u4490
 10799   005F2A  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10800   005F2C  E106               	bnz	u4491
 10801   005F2E  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10802   005F30  B0D8               	btfsc	status,0,c
 10803   005F32  EF9D  F02F         	goto	u4491
 10804   005F36  EF9F  F02F         	goto	u4490
 10805   005F3A                     u4491:
 10806   005F3A  EF87  F02F         	goto	l4670
 10807   005F3E                     u4490:
 10808   005F3E  0012               	return		;funcret
 10809   005F40                     __end_of_TurnDelay:
 10810                           	callstack 0
 10811                           
 10812 ;; *************** function _reverseOneBlock *****************
 10813 ;; Defined at:
 10814 ;;		line 232 in file "dc_motor.c"
 10815 ;; Parameters:    Size  Location     Type
 10816 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10817 ;;		 -> motorL(9), 
 10818 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10819 ;;		 -> motorR(9), 
 10820 ;; Auto vars:     Size  Location     Type
 10821 ;;		None
 10822 ;; Return value:  Size  Location     Type
 10823 ;;                  1    wreg      void 
 10824 ;; Registers used:
 10825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10826 ;; Tracked objects:
 10827 ;;		On entry : 0/0
 10828 ;;		On exit  : 0/0
 10829 ;;		Unchanged: 0/0
 10830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10831 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10834 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10835 ;;Total ram usage:        6 bytes
 10836 ;; Hardware stack levels used: 1
 10837 ;; Hardware stack levels required when called: 4
 10838 ;; This function calls:
 10839 ;;		_fullSpeedBack
 10840 ;;		_stop
 10841 ;; This function is called by:
 10842 ;;		_YellowMove
 10843 ;;		_PinkMove
 10844 ;; This function uses a non-reentrant model
 10845 ;;
 10846                           
 10847                           	psect	text61
 10848   005704                     __ptext61:
 10849                           	callstack 0
 10850   005704                     _reverseOneBlock:
 10851                           	callstack 25
 10852   005704                     
 10853                           ;dc_motor.c: 233:     fullSpeedBack(mL,mR);
 10854   005704  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10855   005708  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10856   00570C  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10857   005710  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10858   005714  ECF3  F028         	call	_fullSpeedBack	;wreg free
 10859   005718                     
 10860                           ;dc_motor.c: 234:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10861   005718  0EA3               	movlw	163
 10862   00571A  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10863   00571C  0E57               	movlw	87
 10864   00571E  6E1E               	movwf	??_reverseOneBlock^0,c
 10865   005720  0E02               	movlw	2
 10866   005722                     u6077:
 10867   005722  2EE8               	decfsz	wreg,f,c
 10868   005724  D7FE               	bra	u6077
 10869   005726  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10870   005728  D7FC               	bra	u6077
 10871   00572A  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10872   00572C  D7FA               	bra	u6077
 10873   00572E  D000               	nop2	
 10874   005730                     
 10875                           ;dc_motor.c: 235:     stop(&motorL, &motorR);
 10876   005730  0E61               	movlw	low _motorL
 10877   005732  6E14               	movwf	stop@mL^0,c
 10878   005734  0E01               	movlw	high _motorL
 10879   005736  6E15               	movwf	(stop@mL+1)^0,c
 10880   005738  0E58               	movlw	low _motorR
 10881   00573A  6E16               	movwf	stop@mR^0,c
 10882   00573C  0E01               	movlw	high _motorR
 10883   00573E  6E17               	movwf	(stop@mR+1)^0,c
 10884   005740  ECD5  F029         	call	_stop	;wreg free
 10885                           
 10886                           ;dc_motor.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10887   005744  0E05               	movlw	5
 10888   005746  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10889   005748  0E0F               	movlw	15
 10890   00574A  6E1E               	movwf	??_reverseOneBlock^0,c
 10891   00574C  0EF1               	movlw	241
 10892   00574E                     u6087:
 10893   00574E  2EE8               	decfsz	wreg,f,c
 10894   005750  D7FE               	bra	u6087
 10895   005752  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10896   005754  D7FC               	bra	u6087
 10897   005756  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10898   005758  D7FA               	bra	u6087
 10899   00575A  F000               	nop	
 10900   00575C  0012               	return		;funcret
 10901   00575E                     __end_of_reverseOneBlock:
 10902                           	callstack 0
 10903                           
 10904 ;; *************** function _reverseDetect *****************
 10905 ;; Defined at:
 10906 ;;		line 225 in file "dc_motor.c"
 10907 ;; Parameters:    Size  Location     Type
 10908 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10909 ;;		 -> motorL(9), 
 10910 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10911 ;;		 -> motorR(9), 
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;		None
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  1    wreg      void 
 10916 ;; Registers used:
 10917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/0
 10920 ;;		On exit  : 0/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10925 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10926 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10927 ;;Total ram usage:        6 bytes
 10928 ;; Hardware stack levels used: 1
 10929 ;; Hardware stack levels required when called: 4
 10930 ;; This function calls:
 10931 ;;		_fullSpeedBack
 10932 ;;		_stop
 10933 ;; This function is called by:
 10934 ;;		_RedMove
 10935 ;;		_GreenMove
 10936 ;;		_BlueMove
 10937 ;;		_YellowMove
 10938 ;;		_PinkMove
 10939 ;;		_OrangeMove
 10940 ;;		_LightBlueMove
 10941 ;;		_RetryMove
 10942 ;;		_ReverseYellow
 10943 ;;		_ReversePink
 10944 ;;		_go_Home
 10945 ;; This function uses a non-reentrant model
 10946 ;;
 10947                           
 10948                           	psect	text62
 10949   00575E                     __ptext62:
 10950                           	callstack 0
 10951   00575E                     _reverseDetect:
 10952                           	callstack 25
 10953   00575E                     
 10954                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
 10955   00575E  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10956   005762  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10957   005766  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10958   00576A  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10959   00576E  ECF3  F028         	call	_fullSpeedBack	;wreg free
 10960   005772                     
 10961                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10962   005772  0E11               	movlw	17
 10963   005774  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10964   005776  0E3C               	movlw	60
 10965   005778  6E1E               	movwf	??_reverseDetect^0,c
 10966   00577A  0ECB               	movlw	203
 10967   00577C                     u6097:
 10968   00577C  2EE8               	decfsz	wreg,f,c
 10969   00577E  D7FE               	bra	u6097
 10970   005780  2E1E               	decfsz	??_reverseDetect^0,f,c
 10971   005782  D7FC               	bra	u6097
 10972   005784  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10973   005786  D7FA               	bra	u6097
 10974   005788  F000               	nop	
 10975   00578A                     
 10976                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
 10977   00578A  0E61               	movlw	low _motorL
 10978   00578C  6E14               	movwf	stop@mL^0,c
 10979   00578E  0E01               	movlw	high _motorL
 10980   005790  6E15               	movwf	(stop@mL+1)^0,c
 10981   005792  0E58               	movlw	low _motorR
 10982   005794  6E16               	movwf	stop@mR^0,c
 10983   005796  0E01               	movlw	high _motorR
 10984   005798  6E17               	movwf	(stop@mR+1)^0,c
 10985   00579A  ECD5  F029         	call	_stop	;wreg free
 10986                           
 10987                           ;dc_motor.c: 229:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10988   00579E  0E05               	movlw	5
 10989   0057A0  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10990   0057A2  0E0F               	movlw	15
 10991   0057A4  6E1E               	movwf	??_reverseDetect^0,c
 10992   0057A6  0EF1               	movlw	241
 10993   0057A8                     u6107:
 10994   0057A8  2EE8               	decfsz	wreg,f,c
 10995   0057AA  D7FE               	bra	u6107
 10996   0057AC  2E1E               	decfsz	??_reverseDetect^0,f,c
 10997   0057AE  D7FC               	bra	u6107
 10998   0057B0  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10999   0057B2  D7FA               	bra	u6107
 11000   0057B4  F000               	nop	
 11001   0057B6  0012               	return		;funcret
 11002   0057B8                     __end_of_reverseDetect:
 11003                           	callstack 0
 11004                           
 11005 ;; *************** function _fullSpeedBack *****************
 11006 ;; Defined at:
 11007 ;;		line 185 in file "dc_motor.c"
 11008 ;; Parameters:    Size  Location     Type
 11009 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11010 ;;		 -> motorL(9), 
 11011 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11012 ;;		 -> motorR(9), 
 11013 ;; Auto vars:     Size  Location     Type
 11014 ;;		None
 11015 ;; Return value:  Size  Location     Type
 11016 ;;                  1    wreg      void 
 11017 ;; Registers used:
 11018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11019 ;; Tracked objects:
 11020 ;;		On entry : 0/0
 11021 ;;		On exit  : 0/0
 11022 ;;		Unchanged: 0/0
 11023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11024 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11026 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11027 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11028 ;;Total ram usage:        6 bytes
 11029 ;; Hardware stack levels used: 1
 11030 ;; Hardware stack levels required when called: 3
 11031 ;; This function calls:
 11032 ;;		_setMotorPWM
 11033 ;; This function is called by:
 11034 ;;		_reverseDetect
 11035 ;;		_reverseOneBlock
 11036 ;;		_Backhalfblock
 11037 ;; This function uses a non-reentrant model
 11038 ;;
 11039                           
 11040                           	psect	text63
 11041   0051E6                     __ptext63:
 11042                           	callstack 0
 11043   0051E6                     _fullSpeedBack:
 11044                           	callstack 25
 11045   0051E6                     
 11046                           ;dc_motor.c: 185: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 186: {;dc_motor.c: 188:     mL->direction =0;
 11047   0051E6  EE20 F001          	lfsr	2,1
 11048   0051EA  5014               	movf	fullSpeedBack@mL^0,w,c
 11049   0051EC  26D9               	addwf	fsr2l,f,c
 11050   0051EE  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 11051   0051F0  22DA               	addwfc	fsr2h,f,c
 11052   0051F2  0E00               	movlw	0
 11053   0051F4  6EDF               	movwf	indf2,c
 11054                           
 11055                           ;dc_motor.c: 189:     mR->direction =0;
 11056   0051F6  EE20 F001          	lfsr	2,1
 11057   0051FA  5016               	movf	fullSpeedBack@mR^0,w,c
 11058   0051FC  26D9               	addwf	fsr2l,f,c
 11059   0051FE  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 11060   005200  22DA               	addwfc	fsr2h,f,c
 11061   005202  0E00               	movlw	0
 11062   005204  6EDF               	movwf	indf2,c
 11063                           
 11064                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
 11065   005206  EF29  F029         	goto	l4664
 11066   00520A                     l4656:
 11067                           
 11068                           ;dc_motor.c: 192:         mL->power+=10;
 11069   00520A  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11070   00520E  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11071   005212  0E0A               	movlw	10
 11072   005214  26DF               	addwf	indf2,f,c
 11073                           
 11074                           ;dc_motor.c: 193:         mR->power+=10;
 11075   005216  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11076   00521A  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11077   00521E  0E0A               	movlw	10
 11078   005220  26DF               	addwf	indf2,f,c
 11079   005222                     
 11080                           ;dc_motor.c: 195:         setMotorPWM(mL);
 11081   005222  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 11082   005226  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11083   00522A  ECA4  F023         	call	_setMotorPWM	;wreg free
 11084   00522E                     
 11085                           ;dc_motor.c: 196:         setMotorPWM(mR);
 11086   00522E  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 11087   005232  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11088   005236  ECA4  F023         	call	_setMotorPWM	;wreg free
 11089   00523A                     
 11090                           ;dc_motor.c: 198:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11091   00523A  0E02               	movlw	2
 11092   00523C  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 11093   00523E  0EA0               	movlw	160
 11094   005240  6E18               	movwf	??_fullSpeedBack^0,c
 11095   005242  0E92               	movlw	146
 11096   005244                     u6117:
 11097   005244  2EE8               	decfsz	wreg,f,c
 11098   005246  D7FE               	bra	u6117
 11099   005248  2E18               	decfsz	??_fullSpeedBack^0,f,c
 11100   00524A  D7FC               	bra	u6117
 11101   00524C  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11102   00524E  D7FA               	bra	u6117
 11103   005250  D000               	nop2	
 11104   005252                     l4664:
 11105   005252  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11106   005256  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11107   00525A  0E1E               	movlw	30
 11108   00525C  60DF               	cpfslt	indf2,c
 11109   00525E  EF33  F029         	goto	u4471
 11110   005262  EF35  F029         	goto	u4470
 11111   005266                     u4471:
 11112   005266  EF41  F029         	goto	l507
 11113   00526A                     u4470:
 11114   00526A  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11115   00526E  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11116   005272  0E1D               	movlw	29
 11117   005274  64DF               	cpfsgt	indf2,c
 11118   005276  EF3F  F029         	goto	u4481
 11119   00527A  EF41  F029         	goto	u4480
 11120   00527E                     u4481:
 11121   00527E  EF05  F029         	goto	l4656
 11122   005282                     u4480:
 11123   005282                     l507:
 11124   005282  0012               	return		;funcret
 11125   005284                     __end_of_fullSpeedBack:
 11126                           	callstack 0
 11127                           
 11128 ;; *************** function _Interrupts_init *****************
 11129 ;; Defined at:
 11130 ;;		line 9 in file "interrupts.c"
 11131 ;; Parameters:    Size  Location     Type
 11132 ;;		None
 11133 ;; Auto vars:     Size  Location     Type
 11134 ;;		None
 11135 ;; Return value:  Size  Location     Type
 11136 ;;                  1    wreg      void 
 11137 ;; Registers used:
 11138 ;;		None
 11139 ;; Tracked objects:
 11140 ;;		On entry : 0/0
 11141 ;;		On exit  : 0/0
 11142 ;;		Unchanged: 0/0
 11143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11148 ;;Total ram usage:        0 bytes
 11149 ;; Hardware stack levels used: 1
 11150 ;; Hardware stack levels required when called: 1
 11151 ;; This function calls:
 11152 ;;		Nothing
 11153 ;; This function is called by:
 11154 ;;		_main
 11155 ;; This function uses a non-reentrant model
 11156 ;;
 11157                           
 11158                           	psect	text64
 11159   006090                     __ptext64:
 11160                           	callstack 0
 11161   006090                     _Interrupts_init:
 11162                           	callstack 29
 11163   006090                     
 11164                           ;interrupts.c: 11:     INTCONbits.IPEN=0;
 11165   006090  9AF2               	bcf	242,5,c	;volatile
 11166                           
 11167                           ;interrupts.c: 12:     INTCONbits.PEIE=0;
 11168   006092  9CF2               	bcf	242,6,c	;volatile
 11169                           
 11170                           ;interrupts.c: 13:     INTCONbits.GIE=1;
 11171   006094  8EF2               	bsf	242,7,c	;volatile
 11172                           
 11173                           ;interrupts.c: 14:     PIE0bits.TMR0IE=1;
 11174   006096  010E               	movlb	14	; () banked
 11175   006098  8B29               	bsf	41,5,b	;volatile
 11176   00609A                     
 11177                           ; BSR set to: 14
 11178   00609A  0012               	return		;funcret
 11179   00609C                     __end_of_Interrupts_init:
 11180                           	callstack 0
 11181                           
 11182 ;; *************** function _Forwardhalfblock *****************
 11183 ;; Defined at:
 11184 ;;		line 245 in file "dc_motor.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11187 ;;		 -> motorL(9), 
 11188 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11189 ;;		 -> motorR(9), 
 11190 ;; Auto vars:     Size  Location     Type
 11191 ;;		None
 11192 ;; Return value:  Size  Location     Type
 11193 ;;                  1    wreg      void 
 11194 ;; Registers used:
 11195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11196 ;; Tracked objects:
 11197 ;;		On entry : 0/0
 11198 ;;		On exit  : 0/0
 11199 ;;		Unchanged: 0/0
 11200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11201 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11203 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11204 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11205 ;;Total ram usage:        6 bytes
 11206 ;; Hardware stack levels used: 1
 11207 ;; Hardware stack levels required when called: 4
 11208 ;; This function calls:
 11209 ;;		_fullSpeedAhead
 11210 ;;		_stop
 11211 ;; This function is called by:
 11212 ;;		_main
 11213 ;; This function uses a non-reentrant model
 11214 ;;
 11215                           
 11216                           	psect	text65
 11217   0057B8                     __ptext65:
 11218                           	callstack 0
 11219   0057B8                     _Forwardhalfblock:
 11220                           	callstack 26
 11221   0057B8                     
 11222                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
 11223   0057B8  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11224   0057BC  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11225   0057C0  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11226   0057C4  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11227   0057C8  EC42  F029         	call	_fullSpeedAhead	;wreg free
 11228   0057CC                     
 11229                           ;dc_motor.c: 247:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11230   0057CC  0E52               	movlw	82
 11231   0057CE  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11232   0057D0  0E2B               	movlw	43
 11233   0057D2  6E1E               	movwf	??_Forwardhalfblock^0,c
 11234   0057D4  0E00               	movlw	0
 11235   0057D6                     u6127:
 11236   0057D6  2EE8               	decfsz	wreg,f,c
 11237   0057D8  D7FE               	bra	u6127
 11238   0057DA  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11239   0057DC  D7FC               	bra	u6127
 11240   0057DE  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11241   0057E0  D7FA               	bra	u6127
 11242   0057E2  D000               	nop2	
 11243   0057E4                     
 11244                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
 11245   0057E4  0E61               	movlw	low _motorL
 11246   0057E6  6E14               	movwf	stop@mL^0,c
 11247   0057E8  0E01               	movlw	high _motorL
 11248   0057EA  6E15               	movwf	(stop@mL+1)^0,c
 11249   0057EC  0E58               	movlw	low _motorR
 11250   0057EE  6E16               	movwf	stop@mR^0,c
 11251   0057F0  0E01               	movlw	high _motorR
 11252   0057F2  6E17               	movwf	(stop@mR+1)^0,c
 11253   0057F4  ECD5  F029         	call	_stop	;wreg free
 11254                           
 11255                           ;dc_motor.c: 249:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11256   0057F8  0E05               	movlw	5
 11257   0057FA  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11258   0057FC  0E0F               	movlw	15
 11259   0057FE  6E1E               	movwf	??_Forwardhalfblock^0,c
 11260   005800  0EF1               	movlw	241
 11261   005802                     u6137:
 11262   005802  2EE8               	decfsz	wreg,f,c
 11263   005804  D7FE               	bra	u6137
 11264   005806  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11265   005808  D7FC               	bra	u6137
 11266   00580A  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11267   00580C  D7FA               	bra	u6137
 11268   00580E  F000               	nop	
 11269   005810  0012               	return		;funcret
 11270   005812                     __end_of_Forwardhalfblock:
 11271                           	callstack 0
 11272                           
 11273 ;; *************** function _stop *****************
 11274 ;; Defined at:
 11275 ;;		line 93 in file "dc_motor.c"
 11276 ;; Parameters:    Size  Location     Type
 11277 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11278 ;;		 -> motorL(9), 
 11279 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11280 ;;		 -> motorR(9), 
 11281 ;; Auto vars:     Size  Location     Type
 11282 ;;		None
 11283 ;; Return value:  Size  Location     Type
 11284 ;;                  1    wreg      void 
 11285 ;; Registers used:
 11286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11287 ;; Tracked objects:
 11288 ;;		On entry : 0/0
 11289 ;;		On exit  : 0/0
 11290 ;;		Unchanged: 0/0
 11291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11292 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11294 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11295 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11296 ;;Total ram usage:        6 bytes
 11297 ;; Hardware stack levels used: 1
 11298 ;; Hardware stack levels required when called: 3
 11299 ;; This function calls:
 11300 ;;		_setMotorPWM
 11301 ;; This function is called by:
 11302 ;;		_main
 11303 ;;		_turnRight45
 11304 ;;		_turnLeft45
 11305 ;;		_reverseDetect
 11306 ;;		_reverseOneBlock
 11307 ;;		_ForwardOneBlock
 11308 ;;		_Forwardhalfblock
 11309 ;;		_RetryMove
 11310 ;;		_go_Home
 11311 ;;		_Backhalfblock
 11312 ;; This function uses a non-reentrant model
 11313 ;;
 11314                           
 11315                           	psect	text66
 11316   0053AA                     __ptext66:
 11317                           	callstack 0
 11318   0053AA                     _stop:
 11319                           	callstack 25
 11320   0053AA                     
 11321                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
 11322   0053AA  EFFB  F029         	goto	l4622
 11323   0053AE                     l4614:
 11324                           
 11325                           ;dc_motor.c: 97:         mL->power-=10;
 11326   0053AE  C014  FFD9         	movff	stop@mL,fsr2l
 11327   0053B2  C015  FFDA         	movff	stop@mL+1,fsr2h
 11328   0053B6  0E0A               	movlw	10
 11329   0053B8  5EDF               	subwf	indf2,f,c
 11330                           
 11331                           ;dc_motor.c: 98:         mR->power-=10;
 11332   0053BA  C016  FFD9         	movff	stop@mR,fsr2l
 11333   0053BE  C017  FFDA         	movff	stop@mR+1,fsr2h
 11334   0053C2  0E0A               	movlw	10
 11335   0053C4  5EDF               	subwf	indf2,f,c
 11336   0053C6                     
 11337                           ;dc_motor.c: 103:         setMotorPWM(mL);
 11338   0053C6  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11339   0053CA  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11340   0053CE  ECA4  F023         	call	_setMotorPWM	;wreg free
 11341   0053D2                     
 11342                           ;dc_motor.c: 104:         setMotorPWM(mR);
 11343   0053D2  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11344   0053D6  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11345   0053DA  ECA4  F023         	call	_setMotorPWM	;wreg free
 11346   0053DE                     
 11347                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11348   0053DE  0E02               	movlw	2
 11349   0053E0  6E19               	movwf	(??_stop+1)^0,c
 11350   0053E2  0EA0               	movlw	160
 11351   0053E4  6E18               	movwf	??_stop^0,c
 11352   0053E6  0E92               	movlw	146
 11353   0053E8                     u6147:
 11354   0053E8  2EE8               	decfsz	wreg,f,c
 11355   0053EA  D7FE               	bra	u6147
 11356   0053EC  2E18               	decfsz	??_stop^0,f,c
 11357   0053EE  D7FC               	bra	u6147
 11358   0053F0  2E19               	decfsz	(??_stop+1)^0,f,c
 11359   0053F2  D7FA               	bra	u6147
 11360   0053F4  D000               	nop2	
 11361   0053F6                     l4622:
 11362                           
 11363                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
 11364   0053F6  C014  FFD9         	movff	stop@mL,fsr2l
 11365   0053FA  C015  FFDA         	movff	stop@mL+1,fsr2h
 11366   0053FE  50DF               	movf	indf2,w,c
 11367   005400  A4D8               	btfss	status,2,c
 11368   005402  EF05  F02A         	goto	u4411
 11369   005406  EF07  F02A         	goto	u4410
 11370   00540A                     u4411:
 11371   00540A  EFD7  F029         	goto	l4614
 11372   00540E                     u4410:
 11373   00540E  C016  FFD9         	movff	stop@mR,fsr2l
 11374   005412  C017  FFDA         	movff	stop@mR+1,fsr2h
 11375   005416  50DF               	movf	indf2,w,c
 11376   005418  A4D8               	btfss	status,2,c
 11377   00541A  EF11  F02A         	goto	u4421
 11378   00541E  EF13  F02A         	goto	u4420
 11379   005422                     u4421:
 11380   005422  EFD7  F029         	goto	l4614
 11381   005426                     u4420:
 11382   005426  0012               	return		;funcret
 11383   005428                     __end_of_stop:
 11384                           	callstack 0
 11385                           
 11386 ;; *************** function _fullSpeedAhead *****************
 11387 ;; Defined at:
 11388 ;;		line 147 in file "dc_motor.c"
 11389 ;; Parameters:    Size  Location     Type
 11390 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11391 ;;		 -> motorL(9), 
 11392 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11393 ;;		 -> motorR(9), 
 11394 ;; Auto vars:     Size  Location     Type
 11395 ;;		None
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  1    wreg      void 
 11398 ;; Registers used:
 11399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11400 ;; Tracked objects:
 11401 ;;		On entry : 0/0
 11402 ;;		On exit  : 0/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11405 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11407 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11408 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11409 ;;Total ram usage:        6 bytes
 11410 ;; Hardware stack levels used: 1
 11411 ;; Hardware stack levels required when called: 3
 11412 ;; This function calls:
 11413 ;;		_setMotorPWM
 11414 ;; This function is called by:
 11415 ;;		_main
 11416 ;;		_ForwardOneBlock
 11417 ;;		_Forwardhalfblock
 11418 ;;		_RetryMove
 11419 ;; This function uses a non-reentrant model
 11420 ;;
 11421                           
 11422                           	psect	text67
 11423   005284                     __ptext67:
 11424                           	callstack 0
 11425   005284                     _fullSpeedAhead:
 11426                           	callstack 24
 11427   005284                     
 11428                           ;dc_motor.c: 147: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 148: {;dc_motor.c: 150:     mL->direction =1;
 11429   005284  EE20 F001          	lfsr	2,1
 11430   005288  5014               	movf	fullSpeedAhead@mL^0,w,c
 11431   00528A  26D9               	addwf	fsr2l,f,c
 11432   00528C  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11433   00528E  22DA               	addwfc	fsr2h,f,c
 11434   005290  0E01               	movlw	1
 11435   005292  6EDF               	movwf	indf2,c
 11436                           
 11437                           ;dc_motor.c: 151:     mR->direction =1;
 11438   005294  EE20 F001          	lfsr	2,1
 11439   005298  5016               	movf	fullSpeedAhead@mR^0,w,c
 11440   00529A  26D9               	addwf	fsr2l,f,c
 11441   00529C  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11442   00529E  22DA               	addwfc	fsr2h,f,c
 11443   0052A0  0E01               	movlw	1
 11444   0052A2  6EDF               	movwf	indf2,c
 11445                           
 11446                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
 11447   0052A4  EF78  F029         	goto	l4608
 11448   0052A8                     l4600:
 11449                           
 11450                           ;dc_motor.c: 154:         mL->power+=10;
 11451   0052A8  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11452   0052AC  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11453   0052B0  0E0A               	movlw	10
 11454   0052B2  26DF               	addwf	indf2,f,c
 11455                           
 11456                           ;dc_motor.c: 155:         mR->power+=10;
 11457   0052B4  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11458   0052B8  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11459   0052BC  0E0A               	movlw	10
 11460   0052BE  26DF               	addwf	indf2,f,c
 11461   0052C0                     
 11462                           ;dc_motor.c: 157:         setMotorPWM(mL);
 11463   0052C0  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11464   0052C4  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11465   0052C8  ECA4  F023         	call	_setMotorPWM	;wreg free
 11466   0052CC                     
 11467                           ;dc_motor.c: 158:         setMotorPWM(mR);
 11468   0052CC  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11469   0052D0  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11470   0052D4  ECA4  F023         	call	_setMotorPWM	;wreg free
 11471   0052D8                     
 11472                           ;dc_motor.c: 161:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11473   0052D8  0E02               	movlw	2
 11474   0052DA  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11475   0052DC  0EA0               	movlw	160
 11476   0052DE  6E18               	movwf	??_fullSpeedAhead^0,c
 11477   0052E0  0E92               	movlw	146
 11478   0052E2                     u6157:
 11479   0052E2  2EE8               	decfsz	wreg,f,c
 11480   0052E4  D7FE               	bra	u6157
 11481   0052E6  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11482   0052E8  D7FC               	bra	u6157
 11483   0052EA  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11484   0052EC  D7FA               	bra	u6157
 11485   0052EE  D000               	nop2	
 11486   0052F0                     l4608:
 11487   0052F0  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11488   0052F4  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11489   0052F8  0E1E               	movlw	30
 11490   0052FA  60DF               	cpfslt	indf2,c
 11491   0052FC  EF82  F029         	goto	u4391
 11492   005300  EF84  F029         	goto	u4390
 11493   005304                     u4391:
 11494   005304  EF90  F029         	goto	l491
 11495   005308                     u4390:
 11496   005308  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11497   00530C  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11498   005310  0E1D               	movlw	29
 11499   005312  64DF               	cpfsgt	indf2,c
 11500   005314  EF8E  F029         	goto	u4401
 11501   005318  EF90  F029         	goto	u4400
 11502   00531C                     u4401:
 11503   00531C  EF54  F029         	goto	l4600
 11504   005320                     u4400:
 11505   005320                     l491:
 11506   005320  0012               	return		;funcret
 11507   005322                     __end_of_fullSpeedAhead:
 11508                           	callstack 0
 11509                           
 11510 ;; *************** function _setMotorPWM *****************
 11511 ;; Defined at:
 11512 ;;		line 68 in file "dc_motor.c"
 11513 ;; Parameters:    Size  Location     Type
 11514 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11515 ;;		 -> motorR(9), motorL(9), 
 11516 ;; Auto vars:     Size  Location     Type
 11517 ;;  negDuty         1   18[COMRAM] unsigned char 
 11518 ;;  posDuty         1   17[COMRAM] unsigned char 
 11519 ;; Return value:  Size  Location     Type
 11520 ;;                  1    wreg      void 
 11521 ;; Registers used:
 11522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11523 ;; Tracked objects:
 11524 ;;		On entry : 0/0
 11525 ;;		On exit  : 0/0
 11526 ;;		Unchanged: 0/0
 11527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11531 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11532 ;;Total ram usage:        6 bytes
 11533 ;; Hardware stack levels used: 1
 11534 ;; Hardware stack levels required when called: 2
 11535 ;; This function calls:
 11536 ;;		___lwdiv
 11537 ;;		___wmul
 11538 ;; This function is called by:
 11539 ;;		_stop
 11540 ;;		_turnLeft
 11541 ;;		_turnRight
 11542 ;;		_fullSpeedAhead
 11543 ;;		_timed_forward
 11544 ;;		_fullSpeedBack
 11545 ;; This function uses a non-reentrant model
 11546 ;;
 11547                           
 11548                           	psect	text68
 11549   004748                     __ptext68:
 11550                           	callstack 0
 11551   004748                     _setMotorPWM:
 11552                           	callstack 25
 11553   004748                     
 11554                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 11555   004748  EE20 F002          	lfsr	2,2
 11556   00474C  500E               	movf	setMotorPWM@m^0,w,c
 11557   00474E  26D9               	addwf	fsr2l,f,c
 11558   004750  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11559   004752  22DA               	addwfc	fsr2h,f,c
 11560   004754  50DF               	movf	indf2,w,c
 11561   004756  B4D8               	btfsc	status,2,c
 11562   004758  EFB0  F023         	goto	u3411
 11563   00475C  EFB2  F023         	goto	u3410
 11564   004760                     u3411:
 11565   004760  EFE6  F023         	goto	l4052
 11566   004764                     u3410:
 11567   004764                     
 11568                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11569   004764  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11570   004768  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11571   00476C  50DF               	movf	indf2,w,c
 11572   00476E  6E10               	movwf	??_setMotorPWM^0,c
 11573   004770  5010               	movf	??_setMotorPWM^0,w,c
 11574   004772  6E01               	movwf	___wmul@multiplier^0,c
 11575   004774  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11576   004776  EE20 F003          	lfsr	2,3
 11577   00477A  500E               	movf	setMotorPWM@m^0,w,c
 11578   00477C  26D9               	addwf	fsr2l,f,c
 11579   00477E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11580   004780  22DA               	addwfc	fsr2h,f,c
 11581   004782  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11582   004786  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11583   00478A  ECF4  F02F         	call	___wmul	;wreg free
 11584   00478E  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11585   004792  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11586   004796  0E00               	movlw	0
 11587   004798  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11588   00479A  0E64               	movlw	100
 11589   00479C  6E09               	movwf	___lwdiv@divisor^0,c
 11590   00479E  EC51  F02A         	call	___lwdiv	;wreg free
 11591   0047A2  EE20 F003          	lfsr	2,3
 11592   0047A6  500E               	movf	setMotorPWM@m^0,w,c
 11593   0047A8  26D9               	addwf	fsr2l,f,c
 11594   0047AA  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11595   0047AC  22DA               	addwfc	fsr2h,f,c
 11596   0047AE  50DF               	movf	indf2,w,c
 11597   0047B0  6E11               	movwf	(??_setMotorPWM+1)^0,c
 11598   0047B2  5007               	movf	?___lwdiv^0,w,c
 11599   0047B4  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 11600   0047B6  6E12               	movwf	setMotorPWM@posDuty^0,c
 11601   0047B8                     
 11602                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 11603   0047B8  EE20 F003          	lfsr	2,3
 11604   0047BC  500E               	movf	setMotorPWM@m^0,w,c
 11605   0047BE  26D9               	addwf	fsr2l,f,c
 11606   0047C0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11607   0047C2  22DA               	addwfc	fsr2h,f,c
 11608   0047C4  50DF               	movf	indf2,w,c
 11609   0047C6  6E13               	movwf	setMotorPWM@negDuty^0,c
 11610                           
 11611                           ;dc_motor.c: 75:     }
 11612   0047C8  EF09  F024         	goto	l4056
 11613   0047CC                     l4052:
 11614                           
 11615                           ;dc_motor.c: 77:         posDuty=0;
 11616   0047CC  0E00               	movlw	0
 11617   0047CE  6E12               	movwf	setMotorPWM@posDuty^0,c
 11618   0047D0                     
 11619                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11620   0047D0  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11621   0047D4  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11622   0047D8  50DF               	movf	indf2,w,c
 11623   0047DA  6E10               	movwf	??_setMotorPWM^0,c
 11624   0047DC  5010               	movf	??_setMotorPWM^0,w,c
 11625   0047DE  6E01               	movwf	___wmul@multiplier^0,c
 11626   0047E0  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11627   0047E2  EE20 F003          	lfsr	2,3
 11628   0047E6  500E               	movf	setMotorPWM@m^0,w,c
 11629   0047E8  26D9               	addwf	fsr2l,f,c
 11630   0047EA  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11631   0047EC  22DA               	addwfc	fsr2h,f,c
 11632   0047EE  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11633   0047F2  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11634   0047F6  ECF4  F02F         	call	___wmul	;wreg free
 11635   0047FA  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11636   0047FE  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11637   004802  0E00               	movlw	0
 11638   004804  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11639   004806  0E64               	movlw	100
 11640   004808  6E09               	movwf	___lwdiv@divisor^0,c
 11641   00480A  EC51  F02A         	call	___lwdiv	;wreg free
 11642   00480E  5007               	movf	?___lwdiv^0,w,c
 11643   004810  6E13               	movwf	setMotorPWM@negDuty^0,c
 11644   004812                     l4056:
 11645                           
 11646                           ;dc_motor.c: 81:     if (m->direction) {
 11647   004812  EE20 F001          	lfsr	2,1
 11648   004816  500E               	movf	setMotorPWM@m^0,w,c
 11649   004818  26D9               	addwf	fsr2l,f,c
 11650   00481A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11651   00481C  22DA               	addwfc	fsr2h,f,c
 11652   00481E  50DF               	movf	indf2,w,c
 11653   004820  B4D8               	btfsc	status,2,c
 11654   004822  EF15  F024         	goto	u3421
 11655   004826  EF17  F024         	goto	u3420
 11656   00482A                     u3421:
 11657   00482A  EF39  F024         	goto	l4060
 11658   00482E                     u3420:
 11659   00482E                     
 11660                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
 11661   00482E  EE20 F005          	lfsr	2,5
 11662   004832  500E               	movf	setMotorPWM@m^0,w,c
 11663   004834  26D9               	addwf	fsr2l,f,c
 11664   004836  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11665   004838  22DA               	addwfc	fsr2h,f,c
 11666   00483A  CFDE F010          	movff	postinc2,??_setMotorPWM
 11667   00483E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11668   004842  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11669   004846  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11670   00484A  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11671                           
 11672                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
 11673   00484E  EE20 F007          	lfsr	2,7
 11674   004852  500E               	movf	setMotorPWM@m^0,w,c
 11675   004854  26D9               	addwf	fsr2l,f,c
 11676   004856  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11677   004858  22DA               	addwfc	fsr2h,f,c
 11678   00485A  CFDE F010          	movff	postinc2,??_setMotorPWM
 11679   00485E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11680   004862  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11681   004866  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11682   00486A  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11683                           
 11684                           ;dc_motor.c: 86:     } else {
 11685   00486E  EF59  F024         	goto	l461
 11686   004872                     l4060:
 11687                           
 11688                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
 11689   004872  EE20 F005          	lfsr	2,5
 11690   004876  500E               	movf	setMotorPWM@m^0,w,c
 11691   004878  26D9               	addwf	fsr2l,f,c
 11692   00487A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11693   00487C  22DA               	addwfc	fsr2h,f,c
 11694   00487E  CFDE F010          	movff	postinc2,??_setMotorPWM
 11695   004882  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11696   004886  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11697   00488A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11698   00488E  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11699                           
 11700                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
 11701   004892  EE20 F007          	lfsr	2,7
 11702   004896  500E               	movf	setMotorPWM@m^0,w,c
 11703   004898  26D9               	addwf	fsr2l,f,c
 11704   00489A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11705   00489C  22DA               	addwfc	fsr2h,f,c
 11706   00489E  CFDE F010          	movff	postinc2,??_setMotorPWM
 11707   0048A2  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11708   0048A6  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11709   0048AA  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11710   0048AE  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11711   0048B2                     l461:
 11712   0048B2  0012               	return		;funcret
 11713   0048B4                     __end_of_setMotorPWM:
 11714                           	callstack 0
 11715                           
 11716 ;; *************** function ___wmul *****************
 11717 ;; Defined at:
 11718 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 11719 ;; Parameters:    Size  Location     Type
 11720 ;;  multiplier      2    0[COMRAM] unsigned int 
 11721 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11722 ;; Auto vars:     Size  Location     Type
 11723 ;;  product         2    4[COMRAM] unsigned int 
 11724 ;; Return value:  Size  Location     Type
 11725 ;;                  2    0[COMRAM] unsigned int 
 11726 ;; Registers used:
 11727 ;;		wreg, status,2, status,0, prodl, prodh
 11728 ;; Tracked objects:
 11729 ;;		On entry : 0/0
 11730 ;;		On exit  : 0/0
 11731 ;;		Unchanged: 0/0
 11732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11733 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11734 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11736 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11737 ;;Total ram usage:        6 bytes
 11738 ;; Hardware stack levels used: 1
 11739 ;; Hardware stack levels required when called: 1
 11740 ;; This function calls:
 11741 ;;		Nothing
 11742 ;; This function is called by:
 11743 ;;		_setMotorPWM
 11744 ;; This function uses a non-reentrant model
 11745 ;;
 11746                           
 11747                           	psect	text69
 11748   005FE8                     __ptext69:
 11749                           	callstack 0
 11750   005FE8                     ___wmul:
 11751                           	callstack 25
 11752   005FE8  5001               	movf	___wmul@multiplier^0,w,c
 11753   005FEA  0203               	mulwf	___wmul@multiplicand^0,c
 11754   005FEC  CFF3 F005          	movff	prodl,___wmul@product
 11755   005FF0  CFF4 F006          	movff	prodh,___wmul@product+1
 11756   005FF4  5001               	movf	___wmul@multiplier^0,w,c
 11757   005FF6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11758   005FF8  50F3               	movf	243,w,c
 11759   005FFA  2606               	addwf	(___wmul@product+1)^0,f,c
 11760   005FFC  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11761   005FFE  0203               	mulwf	___wmul@multiplicand^0,c
 11762   006000  50F3               	movf	243,w,c
 11763   006002  2606               	addwf	(___wmul@product+1)^0,f,c
 11764   006004  C005  F001         	movff	___wmul@product,?___wmul
 11765   006008  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11766   00600C  0012               	return		;funcret
 11767   00600E                     __end_of___wmul:
 11768                           	callstack 0
 11769                           
 11770 ;; *************** function ___lwdiv *****************
 11771 ;; Defined at:
 11772 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 11773 ;; Parameters:    Size  Location     Type
 11774 ;;  dividend        2    6[COMRAM] unsigned int 
 11775 ;;  divisor         2    8[COMRAM] unsigned int 
 11776 ;; Auto vars:     Size  Location     Type
 11777 ;;  quotient        2   10[COMRAM] unsigned int 
 11778 ;;  counter         1   12[COMRAM] unsigned char 
 11779 ;; Return value:  Size  Location     Type
 11780 ;;                  2    6[COMRAM] unsigned int 
 11781 ;; Registers used:
 11782 ;;		wreg, status,2, status,0
 11783 ;; Tracked objects:
 11784 ;;		On entry : 0/0
 11785 ;;		On exit  : 0/0
 11786 ;;		Unchanged: 0/0
 11787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11788 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11789 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11791 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11792 ;;Total ram usage:        7 bytes
 11793 ;; Hardware stack levels used: 1
 11794 ;; Hardware stack levels required when called: 1
 11795 ;; This function calls:
 11796 ;;		Nothing
 11797 ;; This function is called by:
 11798 ;;		_setMotorPWM
 11799 ;; This function uses a non-reentrant model
 11800 ;;
 11801                           
 11802                           	psect	text70
 11803   0054A2                     __ptext70:
 11804                           	callstack 0
 11805   0054A2                     ___lwdiv:
 11806                           	callstack 25
 11807   0054A2  0E00               	movlw	0
 11808   0054A4  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11809   0054A6  0E00               	movlw	0
 11810   0054A8  6E0B               	movwf	___lwdiv@quotient^0,c
 11811   0054AA  5009               	movf	___lwdiv@divisor^0,w,c
 11812   0054AC  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11813   0054AE  B4D8               	btfsc	status,2,c
 11814   0054B0  EF5C  F02A         	goto	u3371
 11815   0054B4  EF5E  F02A         	goto	u3370
 11816   0054B8                     u3371:
 11817   0054B8  EF86  F02A         	goto	l1164
 11818   0054BC                     u3370:
 11819   0054BC  0E01               	movlw	1
 11820   0054BE  6E0D               	movwf	___lwdiv@counter^0,c
 11821   0054C0  EF66  F02A         	goto	l4024
 11822   0054C4                     l4022:
 11823   0054C4  90D8               	bcf	status,0,c
 11824   0054C6  3609               	rlcf	___lwdiv@divisor^0,f,c
 11825   0054C8  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11826   0054CA  2A0D               	incf	___lwdiv@counter^0,f,c
 11827   0054CC                     l4024:
 11828   0054CC  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 11829   0054CE  EF6B  F02A         	goto	u3381
 11830   0054D2  EF6D  F02A         	goto	u3380
 11831   0054D6                     u3381:
 11832   0054D6  EF62  F02A         	goto	l4022
 11833   0054DA                     u3380:
 11834   0054DA                     l4026:
 11835   0054DA  90D8               	bcf	status,0,c
 11836   0054DC  360B               	rlcf	___lwdiv@quotient^0,f,c
 11837   0054DE  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11838   0054E0  5009               	movf	___lwdiv@divisor^0,w,c
 11839   0054E2  5C07               	subwf	___lwdiv@dividend^0,w,c
 11840   0054E4  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11841   0054E6  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11842   0054E8  A0D8               	btfss	status,0,c
 11843   0054EA  EF79  F02A         	goto	u3391
 11844   0054EE  EF7B  F02A         	goto	u3390
 11845   0054F2                     u3391:
 11846   0054F2  EF80  F02A         	goto	l4034
 11847   0054F6                     u3390:
 11848   0054F6  5009               	movf	___lwdiv@divisor^0,w,c
 11849   0054F8  5E07               	subwf	___lwdiv@dividend^0,f,c
 11850   0054FA  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11851   0054FC  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11852   0054FE  800B               	bsf	___lwdiv@quotient^0,0,c
 11853   005500                     l4034:
 11854   005500  90D8               	bcf	status,0,c
 11855   005502  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11856   005504  3209               	rrcf	___lwdiv@divisor^0,f,c
 11857   005506  2E0D               	decfsz	___lwdiv@counter^0,f,c
 11858   005508  EF6D  F02A         	goto	l4026
 11859   00550C                     l1164:
 11860   00550C  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 11861   005510  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11862   005514  0012               	return		;funcret
 11863   005516                     __end_of___lwdiv:
 11864                           	callstack 0
 11865                           
 11866 ;; *************** function _Colour_decider *****************
 11867 ;; Defined at:
 11868 ;;		line 125 in file "color.c"
 11869 ;; Parameters:    Size  Location     Type
 11870 ;;  vals            2   74[COMRAM] PTR struct RGB
 11871 ;;		 -> vals(8), 
 11872 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 11873 ;;		 -> rel(12), 
 11874 ;; Auto vars:     Size  Location     Type
 11875 ;;  RGB_col        12    6[BANK0 ] float [3]
 11876 ;;  Hue             4   28[BANK0 ] float 
 11877 ;;  Cmin            4   22[BANK0 ] float 
 11878 ;;  Cmax            4   18[BANK0 ] float 
 11879 ;;  i               2   26[BANK0 ] int 
 11880 ;;  Cmax_i          2    4[BANK0 ] int 
 11881 ;; Return value:  Size  Location     Type
 11882 ;;                  2   74[COMRAM] int 
 11883 ;; Registers used:
 11884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11885 ;; Tracked objects:
 11886 ;;		On entry : 0/0
 11887 ;;		On exit  : 0/0
 11888 ;;		Unchanged: 0/0
 11889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11890 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11891 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11893 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11894 ;;Total ram usage:       38 bytes
 11895 ;; Hardware stack levels used: 1
 11896 ;; Hardware stack levels required when called: 3
 11897 ;; This function calls:
 11898 ;;		___fladd
 11899 ;;		___fldiv
 11900 ;;		___fleq
 11901 ;;		___flge
 11902 ;;		___flmul
 11903 ;;		___flsub
 11904 ;;		___xxtofl
 11905 ;; This function is called by:
 11906 ;;		_main
 11907 ;; This function uses a non-reentrant model
 11908 ;;
 11909                           
 11910                           	psect	text71
 11911   000E3E                     __ptext71:
 11912                           	callstack 0
 11913   000E3E                     _Colour_decider:
 11914                           	callstack 27
 11915   000E3E                     
 11916                           ;color.c: 126:     float Cmax = 0;
 11917   000E3E  0E00               	movlw	0
 11918   000E40  0100               	movlb	0	; () banked
 11919   000E42  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 11920   000E44  0E00               	movlw	0
 11921   000E46  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 11922   000E48  0E00               	movlw	0
 11923   000E4A  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 11924   000E4C  0E00               	movlw	0
 11925   000E4E  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 11926                           
 11927                           ;color.c: 127:     float Cmin= 100000;
 11928   000E50  0E00               	movlw	0
 11929   000E52  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 11930   000E54  0E50               	movlw	80
 11931   000E56  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 11932   000E58  0EC3               	movlw	195
 11933   000E5A  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 11934   000E5C  0E47               	movlw	71
 11935   000E5E  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 11936                           
 11937                           ;color.c: 128:     int Cmax_i =4;
 11938   000E60  0E00               	movlw	0
 11939   000E62  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 11940   000E64  0E04               	movlw	4
 11941   000E66  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 11942   000E68                     
 11943                           ; BSR set to: 0
 11944                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 11945   000E68  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 11946   000E6C  0E0B               	movlw	11
 11947   000E6E                     u5131:
 11948   000E6E  6ADE               	clrf	postinc2,c
 11949   000E70  06E8               	decf	wreg,f,c
 11950   000E72  E2FD               	bc	u5131
 11951   000E74                     
 11952                           ; BSR set to: 0
 11953   000E74  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 11954   000E78  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 11955   000E7C  CFDE F001          	movff	postinc2,___xxtofl@val
 11956   000E80  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11957   000E84  0E00               	movlw	0
 11958   000E86  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11959   000E88  0EFF               	movlw	-1
 11960   000E8A  6E03               	movwf	(___xxtofl@val+2)^0,c
 11961   000E8C  6E04               	movwf	(___xxtofl@val+3)^0,c
 11962   000E8E  0E01               	movlw	1
 11963   000E90  EC06  F022         	call	___xxtofl
 11964   000E94  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 11965   000E98  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 11966   000E9C  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 11967   000EA0  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 11968   000EA4  EE20 F002          	lfsr	2,2
 11969   000EA8  504B               	movf	Colour_decider@vals^0,w,c
 11970   000EAA  26D9               	addwf	fsr2l,f,c
 11971   000EAC  504C               	movf	(Colour_decider@vals+1)^0,w,c
 11972   000EAE  22DA               	addwfc	fsr2h,f,c
 11973   000EB0  CFDE F001          	movff	postinc2,___xxtofl@val
 11974   000EB4  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11975   000EB8  0E00               	movlw	0
 11976   000EBA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11977   000EBC  0EFF               	movlw	-1
 11978   000EBE  6E03               	movwf	(___xxtofl@val+2)^0,c
 11979   000EC0  6E04               	movwf	(___xxtofl@val+3)^0,c
 11980   000EC2  0E01               	movlw	1
 11981   000EC4  EC06  F022         	call	___xxtofl
 11982   000EC8  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 11983   000ECC  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 11984   000ED0  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 11985   000ED4  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 11986   000ED8  EE20 F004          	lfsr	2,4
 11987   000EDC  504B               	movf	Colour_decider@vals^0,w,c
 11988   000EDE  26D9               	addwf	fsr2l,f,c
 11989   000EE0  504C               	movf	(Colour_decider@vals+1)^0,w,c
 11990   000EE2  22DA               	addwfc	fsr2h,f,c
 11991   000EE4  CFDE F001          	movff	postinc2,___xxtofl@val
 11992   000EE8  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11993   000EEC  0E00               	movlw	0
 11994   000EEE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11995   000EF0  0EFF               	movlw	-1
 11996   000EF2  6E03               	movwf	(___xxtofl@val+2)^0,c
 11997   000EF4  6E04               	movwf	(___xxtofl@val+3)^0,c
 11998   000EF6  0E01               	movlw	1
 11999   000EF8  EC06  F022         	call	___xxtofl
 12000   000EFC  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 12001   000F00  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 12002   000F04  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 12003   000F08  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 12004   000F0C                     
 12005                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 12006   000F0C  0E00               	movlw	0
 12007   000F0E  0100               	movlb	0	; () banked
 12008   000F10  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 12009   000F12  0E00               	movlw	0
 12010   000F14  6F7A               	movwf	Colour_decider@i& (0+255),b
 12011   000F16                     l5292:
 12012                           
 12013                           ; BSR set to: 0
 12014                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 12015   000F16  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 12016   000F1A  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12017   000F1E  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12018   000F22  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12019   000F26  0E66               	movlw	low Colour_decider@RGB_col
 12020   000F28  6E4F               	movwf	??_Colour_decider^0,c
 12021   000F2A  0E00               	movlw	high Colour_decider@RGB_col
 12022   000F2C  6E50               	movwf	(??_Colour_decider+1)^0,c
 12023   000F2E  90D8               	bcf	status,0,c
 12024   000F30  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12025   000F32  6ED9               	movwf	fsr2l,c
 12026   000F34  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12027   000F36  6EDA               	movwf	fsr2h,c
 12028   000F38  90D8               	bcf	status,0,c
 12029   000F3A  36D9               	rlcf	fsr2l,f,c
 12030   000F3C  36DA               	rlcf	fsr2h,f,c
 12031   000F3E  504F               	movf	??_Colour_decider^0,w,c
 12032   000F40  26D9               	addwf	fsr2l,f,c
 12033   000F42  5050               	movf	(??_Colour_decider+1)^0,w,c
 12034   000F44  22DA               	addwfc	fsr2h,f,c
 12035   000F46  CFDE F02E          	movff	postinc2,___flge@ff2
 12036   000F4A  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12037   000F4E  CFDE F030          	movff	postinc2,___flge@ff2+2
 12038   000F52  CFDE F031          	movff	postinc2,___flge@ff2+3
 12039   000F56  EC8F  F025         	call	___flge	;wreg free
 12040   000F5A  B0D8               	btfsc	status,0,c
 12041   000F5C  EFB2  F007         	goto	u5141
 12042   000F60  EFB4  F007         	goto	u5140
 12043   000F64                     u5141:
 12044   000F64  EFD1  F007         	goto	l5298
 12045   000F68                     u5140:
 12046   000F68                     
 12047                           ;color.c: 137:             Cmax=RGB_col[i];
 12048   000F68  0E66               	movlw	low Colour_decider@RGB_col
 12049   000F6A  6E4F               	movwf	??_Colour_decider^0,c
 12050   000F6C  0E00               	movlw	high Colour_decider@RGB_col
 12051   000F6E  6E50               	movwf	(??_Colour_decider+1)^0,c
 12052   000F70  90D8               	bcf	status,0,c
 12053   000F72  0100               	movlb	0	; () banked
 12054   000F74  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12055   000F76  6ED9               	movwf	fsr2l,c
 12056   000F78  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12057   000F7A  6EDA               	movwf	fsr2h,c
 12058   000F7C  90D8               	bcf	status,0,c
 12059   000F7E  36D9               	rlcf	fsr2l,f,c
 12060   000F80  36DA               	rlcf	fsr2h,f,c
 12061   000F82  504F               	movf	??_Colour_decider^0,w,c
 12062   000F84  26D9               	addwf	fsr2l,f,c
 12063   000F86  5050               	movf	(??_Colour_decider+1)^0,w,c
 12064   000F88  22DA               	addwfc	fsr2h,f,c
 12065   000F8A  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12066   000F8E  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12067   000F92  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12068   000F96  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12069   000F9A                     
 12070                           ; BSR set to: 0
 12071                           ;color.c: 138:             Cmax_i=i;
 12072   000F9A  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12073   000F9E  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12074   000FA2                     l5298:
 12075                           
 12076                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12077   000FA2  0E66               	movlw	low Colour_decider@RGB_col
 12078   000FA4  6E4F               	movwf	??_Colour_decider^0,c
 12079   000FA6  0E00               	movlw	high Colour_decider@RGB_col
 12080   000FA8  6E50               	movwf	(??_Colour_decider+1)^0,c
 12081   000FAA  90D8               	bcf	status,0,c
 12082   000FAC  0100               	movlb	0	; () banked
 12083   000FAE  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12084   000FB0  6ED9               	movwf	fsr2l,c
 12085   000FB2  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12086   000FB4  6EDA               	movwf	fsr2h,c
 12087   000FB6  90D8               	bcf	status,0,c
 12088   000FB8  36D9               	rlcf	fsr2l,f,c
 12089   000FBA  36DA               	rlcf	fsr2h,f,c
 12090   000FBC  504F               	movf	??_Colour_decider^0,w,c
 12091   000FBE  26D9               	addwf	fsr2l,f,c
 12092   000FC0  5050               	movf	(??_Colour_decider+1)^0,w,c
 12093   000FC2  22DA               	addwfc	fsr2h,f,c
 12094   000FC4  CFDE F02A          	movff	postinc2,___flge@ff1
 12095   000FC8  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12096   000FCC  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12097   000FD0  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12098   000FD4  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12099   000FD8  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12100   000FDC  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12101   000FE0  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12102   000FE4  EC8F  F025         	call	___flge	;wreg free
 12103   000FE8  B0D8               	btfsc	status,0,c
 12104   000FEA  EFF9  F007         	goto	u5151
 12105   000FEE  EFFB  F007         	goto	u5150
 12106   000FF2                     u5151:
 12107   000FF2  EF14  F008         	goto	l5302
 12108   000FF6                     u5150:
 12109   000FF6  0E66               	movlw	low Colour_decider@RGB_col
 12110   000FF8  6E4F               	movwf	??_Colour_decider^0,c
 12111   000FFA  0E00               	movlw	high Colour_decider@RGB_col
 12112   000FFC  6E50               	movwf	(??_Colour_decider+1)^0,c
 12113   000FFE  90D8               	bcf	status,0,c
 12114   001000  0100               	movlb	0	; () banked
 12115   001002  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12116   001004  6ED9               	movwf	fsr2l,c
 12117   001006  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12118   001008  6EDA               	movwf	fsr2h,c
 12119   00100A  90D8               	bcf	status,0,c
 12120   00100C  36D9               	rlcf	fsr2l,f,c
 12121   00100E  36DA               	rlcf	fsr2h,f,c
 12122   001010  504F               	movf	??_Colour_decider^0,w,c
 12123   001012  26D9               	addwf	fsr2l,f,c
 12124   001014  5050               	movf	(??_Colour_decider+1)^0,w,c
 12125   001016  22DA               	addwfc	fsr2h,f,c
 12126   001018  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12127   00101C  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12128   001020  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12129   001024  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12130   001028                     l5302:
 12131                           
 12132                           ;color.c: 141:     }
 12133   001028  0100               	movlb	0	; () banked
 12134   00102A  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12135   00102C  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12136   00102E                     
 12137                           ; BSR set to: 0
 12138   00102E  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12139   001030  EF23  F008         	goto	u5161
 12140   001034  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12141   001036  E109               	bnz	u5160
 12142   001038  0E03               	movlw	3
 12143   00103A  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12144   00103C  A0D8               	btfss	status,0,c
 12145   00103E  EF23  F008         	goto	u5161
 12146   001042  EF25  F008         	goto	u5160
 12147   001046                     u5161:
 12148   001046  EF8B  F007         	goto	l5292
 12149   00104A                     u5160:
 12150   00104A                     
 12151                           ; BSR set to: 0
 12152                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 12153   00104A  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12154   00104E  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12155   001052  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12156   001056  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12157   00105A  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12158   00105E  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12159   001062  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12160   001066  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12161   00106A  EC67  F02E         	call	___flsub	;wreg free
 12162   00106E  C02A  F032         	movff	?___flsub,___fleq@ff1
 12163   001072  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12164   001076  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12165   00107A  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12166   00107E  0E00               	movlw	0
 12167   001080  6E36               	movwf	___fleq@ff2^0,c
 12168   001082  0E00               	movlw	0
 12169   001084  6E37               	movwf	(___fleq@ff2+1)^0,c
 12170   001086  0E00               	movlw	0
 12171   001088  6E38               	movwf	(___fleq@ff2+2)^0,c
 12172   00108A  0E00               	movlw	0
 12173   00108C  6E39               	movwf	(___fleq@ff2+3)^0,c
 12174   00108E  EC00  F028         	call	___fleq	;wreg free
 12175   001092  A0D8               	btfss	status,0,c
 12176   001094  EF4E  F008         	goto	u5171
 12177   001098  EF50  F008         	goto	u5170
 12178   00109C                     u5171:
 12179   00109C  EF56  F008         	goto	l5312
 12180   0010A0                     u5170:
 12181   0010A0                     l5308:
 12182   0010A0  0E00               	movlw	0
 12183   0010A2  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12184   0010A4  0E00               	movlw	0
 12185   0010A6  6E4B               	movwf	?_Colour_decider^0,c
 12186   0010A8  EF4E  F00C         	goto	l76
 12187   0010AC                     l5312:
 12188                           
 12189                           ;color.c: 146:     if (Cmax_i==0){
 12190   0010AC  0100               	movlb	0	; () banked
 12191   0010AE  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12192   0010B0  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12193   0010B2  A4D8               	btfss	status,2,c
 12194   0010B4  EF5E  F008         	goto	u5181
 12195   0010B8  EF60  F008         	goto	u5180
 12196   0010BC                     u5181:
 12197   0010BC  EFD4  F008         	goto	l5320
 12198   0010C0                     u5180:
 12199   0010C0                     
 12200                           ; BSR set to: 0
 12201                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12202   0010C0  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12203   0010C4  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12204   0010C8  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12205   0010CC  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12206   0010D0  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12207   0010D4  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12208   0010D8  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12209   0010DC  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12210   0010E0  EC67  F02E         	call	___flsub	;wreg free
 12211   0010E4  C02A  F036         	movff	?___flsub,___fldiv@a
 12212   0010E8  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12213   0010EC  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12214   0010F0  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12215   0010F4  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12216   0010F8  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12217   0010FC  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12218   001100  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12219   001104  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12220   001108  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12221   00110C  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12222   001110  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12223   001114  EC67  F02E         	call	___flsub	;wreg free
 12224   001118  C02A  F032         	movff	?___flsub,___fldiv@b
 12225   00111C  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12226   001120  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12227   001124  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12228   001128  EC77  F018         	call	___fldiv	;wreg free
 12229   00112C  C032  F011         	movff	?___fldiv,___flmul@b
 12230   001130  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12231   001134  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12232   001138  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12233   00113C  0E00               	movlw	0
 12234   00113E  6E15               	movwf	___flmul@a^0,c
 12235   001140  0E00               	movlw	0
 12236   001142  6E16               	movwf	(___flmul@a+1)^0,c
 12237   001144  0E70               	movlw	112
 12238   001146  6E17               	movwf	(___flmul@a+2)^0,c
 12239   001148  0E42               	movlw	66
 12240   00114A  6E18               	movwf	(___flmul@a+3)^0,c
 12241   00114C  EC62  F016         	call	___flmul	;wreg free
 12242   001150  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12243   001154  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12244   001158  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12245   00115C  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12246   001160                     
 12247                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 12248   001160  0100               	movlb	0	; () banked
 12249   001162  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12250   001164  EFB8  F008         	goto	u5190
 12251   001168  EFB6  F008         	goto	u5191
 12252   00116C                     u5191:
 12253   00116C  EFB3  F009         	goto	l5330
 12254   001170                     u5190:
 12255   001170                     
 12256                           ; BSR set to: 0
 12257   001170  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12258   001174  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12259   001178  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12260   00117C  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12261   001180  0E00               	movlw	0
 12262   001182  6E05               	movwf	___fladd@a^0,c
 12263   001184  0E00               	movlw	0
 12264   001186  6E06               	movwf	(___fladd@a+1)^0,c
 12265   001188  0EB4               	movlw	180
 12266   00118A  6E07               	movwf	(___fladd@a+2)^0,c
 12267   00118C  0E43               	movlw	67
 12268   00118E  6E08               	movwf	(___fladd@a+3)^0,c
 12269   001190  EC02  F014         	call	___fladd	;wreg free
 12270   001194  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12271   001198  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12272   00119C  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12273   0011A0  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12274   0011A4  EFB3  F009         	goto	l5330
 12275   0011A8                     l5320:
 12276                           
 12277                           ; BSR set to: 0
 12278   0011A8  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12279   0011AA  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12280   0011AC  A4D8               	btfss	status,2,c
 12281   0011AE  EFDB  F008         	goto	u5201
 12282   0011B2  EFDD  F008         	goto	u5200
 12283   0011B6                     u5201:
 12284   0011B6  EF49  F009         	goto	l5326
 12285   0011BA                     u5200:
 12286   0011BA                     
 12287                           ; BSR set to: 0
 12288                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12289   0011BA  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12290   0011BE  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12291   0011C2  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12292   0011C6  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12293   0011CA  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12294   0011CE  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12295   0011D2  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12296   0011D6  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12297   0011DA  EC67  F02E         	call	___flsub	;wreg free
 12298   0011DE  C02A  F036         	movff	?___flsub,___fldiv@a
 12299   0011E2  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12300   0011E6  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12301   0011EA  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12302   0011EE  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12303   0011F2  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12304   0011F6  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12305   0011FA  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12306   0011FE  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12307   001202  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12308   001206  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12309   00120A  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12310   00120E  EC67  F02E         	call	___flsub	;wreg free
 12311   001212  C02A  F032         	movff	?___flsub,___fldiv@b
 12312   001216  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12313   00121A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12314   00121E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12315   001222  EC77  F018         	call	___fldiv	;wreg free
 12316   001226  C032  F060         	movff	?___fldiv,_Colour_decider$3205
 12317   00122A  C033  F061         	movff	?___fldiv+1,_Colour_decider$3205+1
 12318   00122E  C034  F062         	movff	?___fldiv+2,_Colour_decider$3205+2
 12319   001232  C035  F063         	movff	?___fldiv+3,_Colour_decider$3205+3
 12320   001236                     
 12321                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12322   001236  0E00               	movlw	0
 12323   001238  6E05               	movwf	___fladd@a^0,c
 12324   00123A  0E00               	movlw	0
 12325   00123C  6E06               	movwf	(___fladd@a+1)^0,c
 12326   00123E  0E00               	movlw	0
 12327   001240  6E07               	movwf	(___fladd@a+2)^0,c
 12328   001242  0E40               	movlw	64
 12329   001244  6E08               	movwf	(___fladd@a+3)^0,c
 12330   001246  C060  F001         	movff	_Colour_decider$3205,___fladd@b
 12331   00124A  C061  F002         	movff	_Colour_decider$3205+1,___fladd@b+1
 12332   00124E  C062  F003         	movff	_Colour_decider$3205+2,___fladd@b+2
 12333   001252  C063  F004         	movff	_Colour_decider$3205+3,___fladd@b+3
 12334   001256  EC02  F014         	call	___fladd	;wreg free
 12335   00125A  C001  F011         	movff	?___fladd,___flmul@b
 12336   00125E  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12337   001262  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12338   001266  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12339   00126A  0E00               	movlw	0
 12340   00126C  6E15               	movwf	___flmul@a^0,c
 12341   00126E  0E00               	movlw	0
 12342   001270  6E16               	movwf	(___flmul@a+1)^0,c
 12343   001272  0E70               	movlw	112
 12344   001274  6E17               	movwf	(___flmul@a+2)^0,c
 12345   001276  0E42               	movlw	66
 12346   001278  6E18               	movwf	(___flmul@a+3)^0,c
 12347   00127A  EC62  F016         	call	___flmul	;wreg free
 12348   00127E  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12349   001282  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12350   001286  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12351   00128A  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12352                           
 12353                           ;color.c: 155:     }
 12354   00128E  EFB3  F009         	goto	l5330
 12355   001292                     l5326:
 12356                           
 12357                           ; BSR set to: 0
 12358                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12359   001292  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12360   001296  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12361   00129A  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12362   00129E  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12363   0012A2  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12364   0012A6  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12365   0012AA  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12366   0012AE  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12367   0012B2  EC67  F02E         	call	___flsub	;wreg free
 12368   0012B6  C02A  F036         	movff	?___flsub,___fldiv@a
 12369   0012BA  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12370   0012BE  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12371   0012C2  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12372   0012C6  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12373   0012CA  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12374   0012CE  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12375   0012D2  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12376   0012D6  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12377   0012DA  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12378   0012DE  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12379   0012E2  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12380   0012E6  EC67  F02E         	call	___flsub	;wreg free
 12381   0012EA  C02A  F032         	movff	?___flsub,___fldiv@b
 12382   0012EE  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12383   0012F2  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12384   0012F6  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12385   0012FA  EC77  F018         	call	___fldiv	;wreg free
 12386   0012FE  C032  F060         	movff	?___fldiv,_Colour_decider$3205
 12387   001302  C033  F061         	movff	?___fldiv+1,_Colour_decider$3205+1
 12388   001306  C034  F062         	movff	?___fldiv+2,_Colour_decider$3205+2
 12389   00130A  C035  F063         	movff	?___fldiv+3,_Colour_decider$3205+3
 12390   00130E                     
 12391                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12392   00130E  0E00               	movlw	0
 12393   001310  6E05               	movwf	___fladd@a^0,c
 12394   001312  0E00               	movlw	0
 12395   001314  6E06               	movwf	(___fladd@a+1)^0,c
 12396   001316  0E80               	movlw	128
 12397   001318  6E07               	movwf	(___fladd@a+2)^0,c
 12398   00131A  0E40               	movlw	64
 12399   00131C  6E08               	movwf	(___fladd@a+3)^0,c
 12400   00131E  C060  F001         	movff	_Colour_decider$3205,___fladd@b
 12401   001322  C061  F002         	movff	_Colour_decider$3205+1,___fladd@b+1
 12402   001326  C062  F003         	movff	_Colour_decider$3205+2,___fladd@b+2
 12403   00132A  C063  F004         	movff	_Colour_decider$3205+3,___fladd@b+3
 12404   00132E  EC02  F014         	call	___fladd	;wreg free
 12405   001332  C001  F011         	movff	?___fladd,___flmul@b
 12406   001336  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12407   00133A  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12408   00133E  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12409   001342  0E00               	movlw	0
 12410   001344  6E15               	movwf	___flmul@a^0,c
 12411   001346  0E00               	movlw	0
 12412   001348  6E16               	movwf	(___flmul@a+1)^0,c
 12413   00134A  0E70               	movlw	112
 12414   00134C  6E17               	movwf	(___flmul@a+2)^0,c
 12415   00134E  0E42               	movlw	66
 12416   001350  6E18               	movwf	(___flmul@a+3)^0,c
 12417   001352  EC62  F016         	call	___flmul	;wreg free
 12418   001356  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12419   00135A  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12420   00135E  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12421   001362  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12422   001366                     l5330:
 12423                           
 12424                           ;color.c: 162:     if ((330<=Hue)&(Hue<=360)){
 12425   001366  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12426   00136A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12427   00136E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12428   001372  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12429   001376  0E00               	movlw	0
 12430   001378  6E2E               	movwf	___flge@ff2^0,c
 12431   00137A  0E00               	movlw	0
 12432   00137C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12433   00137E  0EA5               	movlw	165
 12434   001380  6E30               	movwf	(___flge@ff2+2)^0,c
 12435   001382  0E43               	movlw	67
 12436   001384  6E31               	movwf	(___flge@ff2+3)^0,c
 12437   001386  EC8F  F025         	call	___flge	;wreg free
 12438   00138A  A0D8               	btfss	status,0,c
 12439   00138C  EFCA  F009         	goto	u5211
 12440   001390  EFCC  F009         	goto	u5210
 12441   001394                     u5211:
 12442   001394  EFEB  F009         	goto	l5340
 12443   001398                     u5210:
 12444   001398  0E00               	movlw	0
 12445   00139A  6E2A               	movwf	___flge@ff1^0,c
 12446   00139C  0E00               	movlw	0
 12447   00139E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12448   0013A0  0EB4               	movlw	180
 12449   0013A2  6E2C               	movwf	(___flge@ff1+2)^0,c
 12450   0013A4  0E43               	movlw	67
 12451   0013A6  6E2D               	movwf	(___flge@ff1+3)^0,c
 12452   0013A8  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12453   0013AC  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12454   0013B0  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12455   0013B4  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12456   0013B8  EC8F  F025         	call	___flge	;wreg free
 12457   0013BC  A0D8               	btfss	status,0,c
 12458   0013BE  EFE3  F009         	goto	u5221
 12459   0013C2  EFE5  F009         	goto	u5220
 12460   0013C6                     u5221:
 12461   0013C6  EFEB  F009         	goto	l5340
 12462   0013CA                     u5220:
 12463   0013CA                     
 12464                           ;color.c: 163:         return 1;
 12465   0013CA  0E00               	movlw	0
 12466   0013CC  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12467   0013CE  0E01               	movlw	1
 12468   0013D0  6E4B               	movwf	?_Colour_decider^0,c
 12469   0013D2  EF4E  F00C         	goto	l76
 12470   0013D6                     l5340:
 12471   0013D6  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12472   0013DA  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12473   0013DE  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12474   0013E2  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12475   0013E6  0E00               	movlw	0
 12476   0013E8  6E2E               	movwf	___flge@ff2^0,c
 12477   0013EA  0E00               	movlw	0
 12478   0013EC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12479   0013EE  0EA0               	movlw	160
 12480   0013F0  6E30               	movwf	(___flge@ff2+2)^0,c
 12481   0013F2  0E40               	movlw	64
 12482   0013F4  6E31               	movwf	(___flge@ff2+3)^0,c
 12483   0013F6  EC8F  F025         	call	___flge	;wreg free
 12484   0013FA  A0D8               	btfss	status,0,c
 12485   0013FC  EF02  F00A         	goto	u5231
 12486   001400  EF04  F00A         	goto	u5230
 12487   001404                     u5231:
 12488   001404  EF23  F00A         	goto	l5350
 12489   001408                     u5230:
 12490   001408  0E00               	movlw	0
 12491   00140A  6E2A               	movwf	___flge@ff1^0,c
 12492   00140C  0E00               	movlw	0
 12493   00140E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12494   001410  0E30               	movlw	48
 12495   001412  6E2C               	movwf	(___flge@ff1+2)^0,c
 12496   001414  0E41               	movlw	65
 12497   001416  6E2D               	movwf	(___flge@ff1+3)^0,c
 12498   001418  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12499   00141C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12500   001420  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12501   001424  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12502   001428  EC8F  F025         	call	___flge	;wreg free
 12503   00142C  A0D8               	btfss	status,0,c
 12504   00142E  EF1B  F00A         	goto	u5241
 12505   001432  EF1D  F00A         	goto	u5240
 12506   001436                     u5241:
 12507   001436  EF23  F00A         	goto	l5350
 12508   00143A                     u5240:
 12509   00143A                     
 12510                           ;color.c: 167:         return 2;
 12511   00143A  0E00               	movlw	0
 12512   00143C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12513   00143E  0E02               	movlw	2
 12514   001440  6E4B               	movwf	?_Colour_decider^0,c
 12515   001442  EF4E  F00C         	goto	l76
 12516   001446                     l5350:
 12517   001446  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12518   00144A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12519   00144E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12520   001452  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12521   001456  0E00               	movlw	0
 12522   001458  6E2E               	movwf	___flge@ff2^0,c
 12523   00145A  0E00               	movlw	0
 12524   00145C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12525   00145E  0E90               	movlw	144
 12526   001460  6E30               	movwf	(___flge@ff2+2)^0,c
 12527   001462  0E41               	movlw	65
 12528   001464  6E31               	movwf	(___flge@ff2+3)^0,c
 12529   001466  EC8F  F025         	call	___flge	;wreg free
 12530   00146A  A0D8               	btfss	status,0,c
 12531   00146C  EF3A  F00A         	goto	u5251
 12532   001470  EF3C  F00A         	goto	u5250
 12533   001474                     u5251:
 12534   001474  EFF0  F00A         	goto	l5380
 12535   001478                     u5250:
 12536   001478  0E00               	movlw	0
 12537   00147A  6E2A               	movwf	___flge@ff1^0,c
 12538   00147C  0E00               	movlw	0
 12539   00147E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12540   001480  0EC8               	movlw	200
 12541   001482  6E2C               	movwf	(___flge@ff1+2)^0,c
 12542   001484  0E41               	movlw	65
 12543   001486  6E2D               	movwf	(___flge@ff1+3)^0,c
 12544   001488  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12545   00148C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12546   001490  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12547   001494  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12548   001498  EC8F  F025         	call	___flge	;wreg free
 12549   00149C  A0D8               	btfss	status,0,c
 12550   00149E  EF53  F00A         	goto	u5261
 12551   0014A2  EF55  F00A         	goto	u5260
 12552   0014A6                     u5261:
 12553   0014A6  EFF0  F00A         	goto	l5380
 12554   0014AA                     u5260:
 12555   0014AA                     
 12556                           ;color.c: 172:         if ((rel->R<=0.26)&&(rel->B>0.10)&&(vals->L>1000)){
 12557   0014AA  0EB8               	movlw	184
 12558   0014AC  6E2A               	movwf	___flge@ff1^0,c
 12559   0014AE  0E1E               	movlw	30
 12560   0014B0  6E2B               	movwf	(___flge@ff1+1)^0,c
 12561   0014B2  0E85               	movlw	133
 12562   0014B4  6E2C               	movwf	(___flge@ff1+2)^0,c
 12563   0014B6  0E3E               	movlw	62
 12564   0014B8  6E2D               	movwf	(___flge@ff1+3)^0,c
 12565   0014BA  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12566   0014BE  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12567   0014C2  CFDE F02E          	movff	postinc2,___flge@ff2
 12568   0014C6  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12569   0014CA  CFDE F030          	movff	postinc2,___flge@ff2+2
 12570   0014CE  CFDE F031          	movff	postinc2,___flge@ff2+3
 12571   0014D2  EC8F  F025         	call	___flge	;wreg free
 12572   0014D6  A0D8               	btfss	status,0,c
 12573   0014D8  EF70  F00A         	goto	u5271
 12574   0014DC  EF72  F00A         	goto	u5270
 12575   0014E0                     u5271:
 12576   0014E0  EFA8  F00A         	goto	l5366
 12577   0014E4                     u5270:
 12578   0014E4  0ECD               	movlw	205
 12579   0014E6  6E2A               	movwf	___flge@ff1^0,c
 12580   0014E8  0ECC               	movlw	204
 12581   0014EA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12582   0014EC  0ECC               	movlw	204
 12583   0014EE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12584   0014F0  0E3D               	movlw	61
 12585   0014F2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12586   0014F4  EE20 F008          	lfsr	2,8
 12587   0014F8  504D               	movf	Colour_decider@rel^0,w,c
 12588   0014FA  26D9               	addwf	fsr2l,f,c
 12589   0014FC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12590   0014FE  22DA               	addwfc	fsr2h,f,c
 12591   001500  CFDE F02E          	movff	postinc2,___flge@ff2
 12592   001504  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12593   001508  CFDE F030          	movff	postinc2,___flge@ff2+2
 12594   00150C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12595   001510  EC8F  F025         	call	___flge	;wreg free
 12596   001514  B0D8               	btfsc	status,0,c
 12597   001516  EF8F  F00A         	goto	u5281
 12598   00151A  EF91  F00A         	goto	u5280
 12599   00151E                     u5281:
 12600   00151E  EFA8  F00A         	goto	l5366
 12601   001522                     u5280:
 12602   001522  EE20 F006          	lfsr	2,6
 12603   001526  504B               	movf	Colour_decider@vals^0,w,c
 12604   001528  26D9               	addwf	fsr2l,f,c
 12605   00152A  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12606   00152C  22DA               	addwfc	fsr2h,f,c
 12607   00152E  0E01               	movlw	1
 12608   001530  BEDB               	btfsc	plusw2,7,c
 12609   001532  EFA4  F00A         	goto	u5291
 12610   001536  0EE9               	movlw	233
 12611   001538  5CDE               	subwf	postinc2,w,c
 12612   00153A  0E03               	movlw	3
 12613   00153C  58DE               	subwfb	postinc2,w,c
 12614   00153E  A0D8               	btfss	status,0,c
 12615   001540  EFA4  F00A         	goto	u5291
 12616   001544  EFA6  F00A         	goto	u5290
 12617   001548                     u5291:
 12618   001548  EFA8  F00A         	goto	l5366
 12619   00154C                     u5290:
 12620   00154C  EF50  F008         	goto	l5308
 12621   001550                     l5366:
 12622   001550  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12623   001554  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12624   001558  CFDE F02A          	movff	postinc2,___flge@ff1
 12625   00155C  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12626   001560  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12627   001564  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12628   001568  0EB8               	movlw	184
 12629   00156A  6E2E               	movwf	___flge@ff2^0,c
 12630   00156C  0E1E               	movlw	30
 12631   00156E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12632   001570  0E85               	movlw	133
 12633   001572  6E30               	movwf	(___flge@ff2+2)^0,c
 12634   001574  0E3E               	movlw	62
 12635   001576  6E31               	movwf	(___flge@ff2+3)^0,c
 12636   001578  EC8F  F025         	call	___flge	;wreg free
 12637   00157C  A0D8               	btfss	status,0,c
 12638   00157E  EFC3  F00A         	goto	u5301
 12639   001582  EFC5  F00A         	goto	u5300
 12640   001586                     u5301:
 12641   001586  EFEA  F00A         	goto	l5376
 12642   00158A                     u5300:
 12643   00158A  EE20 F008          	lfsr	2,8
 12644   00158E  504D               	movf	Colour_decider@rel^0,w,c
 12645   001590  26D9               	addwf	fsr2l,f,c
 12646   001592  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12647   001594  22DA               	addwfc	fsr2h,f,c
 12648   001596  CFDE F02A          	movff	postinc2,___flge@ff1
 12649   00159A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12650   00159E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12651   0015A2  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12652   0015A6  0ECD               	movlw	205
 12653   0015A8  6E2E               	movwf	___flge@ff2^0,c
 12654   0015AA  0ECC               	movlw	204
 12655   0015AC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12656   0015AE  0ECC               	movlw	204
 12657   0015B0  6E30               	movwf	(___flge@ff2+2)^0,c
 12658   0015B2  0E3D               	movlw	61
 12659   0015B4  6E31               	movwf	(___flge@ff2+3)^0,c
 12660   0015B6  EC8F  F025         	call	___flge	;wreg free
 12661   0015BA  B0D8               	btfsc	status,0,c
 12662   0015BC  EFE2  F00A         	goto	u5311
 12663   0015C0  EFE4  F00A         	goto	u5310
 12664   0015C4                     u5311:
 12665   0015C4  EFEA  F00A         	goto	l5376
 12666   0015C8                     u5310:
 12667   0015C8                     
 12668                           ;color.c: 176:             return 3;
 12669   0015C8  0E00               	movlw	0
 12670   0015CA  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12671   0015CC  0E03               	movlw	3
 12672   0015CE  6E4B               	movwf	?_Colour_decider^0,c
 12673   0015D0  EF4E  F00C         	goto	l76
 12674   0015D4                     l5376:
 12675                           
 12676                           ;color.c: 179:             return 10;
 12677   0015D4  0E00               	movlw	0
 12678   0015D6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12679   0015D8  0E0A               	movlw	10
 12680   0015DA  6E4B               	movwf	?_Colour_decider^0,c
 12681   0015DC  EF4E  F00C         	goto	l76
 12682   0015E0                     l5380:
 12683   0015E0  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12684   0015E4  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12685   0015E8  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12686   0015EC  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12687   0015F0  0E00               	movlw	0
 12688   0015F2  6E2E               	movwf	___flge@ff2^0,c
 12689   0015F4  0E00               	movlw	0
 12690   0015F6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12691   0015F8  0EAA               	movlw	170
 12692   0015FA  6E30               	movwf	(___flge@ff2+2)^0,c
 12693   0015FC  0E42               	movlw	66
 12694   0015FE  6E31               	movwf	(___flge@ff2+3)^0,c
 12695   001600  EC8F  F025         	call	___flge	;wreg free
 12696   001604  A0D8               	btfss	status,0,c
 12697   001606  EF07  F00B         	goto	u5321
 12698   00160A  EF09  F00B         	goto	u5320
 12699   00160E                     u5321:
 12700   00160E  EF28  F00B         	goto	l5390
 12701   001612                     u5320:
 12702   001612  0E00               	movlw	0
 12703   001614  6E2A               	movwf	___flge@ff1^0,c
 12704   001616  0E00               	movlw	0
 12705   001618  6E2B               	movwf	(___flge@ff1+1)^0,c
 12706   00161A  0E20               	movlw	32
 12707   00161C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12708   00161E  0E43               	movlw	67
 12709   001620  6E2D               	movwf	(___flge@ff1+3)^0,c
 12710   001622  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12711   001626  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12712   00162A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12713   00162E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12714   001632  EC8F  F025         	call	___flge	;wreg free
 12715   001636  A0D8               	btfss	status,0,c
 12716   001638  EF20  F00B         	goto	u5331
 12717   00163C  EF22  F00B         	goto	u5330
 12718   001640                     u5331:
 12719   001640  EF28  F00B         	goto	l5390
 12720   001644                     u5330:
 12721   001644                     
 12722                           ;color.c: 185:         return 4;
 12723   001644  0E00               	movlw	0
 12724   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12725   001648  0E04               	movlw	4
 12726   00164A  6E4B               	movwf	?_Colour_decider^0,c
 12727   00164C  EF4E  F00C         	goto	l76
 12728   001650                     l5390:
 12729   001650  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12730   001654  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12731   001658  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12732   00165C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12733   001660  0E00               	movlw	0
 12734   001662  6E2E               	movwf	___flge@ff2^0,c
 12735   001664  0E00               	movlw	0
 12736   001666  6E2F               	movwf	(___flge@ff2+1)^0,c
 12737   001668  0E70               	movlw	112
 12738   00166A  6E30               	movwf	(___flge@ff2+2)^0,c
 12739   00166C  0E42               	movlw	66
 12740   00166E  6E31               	movwf	(___flge@ff2+3)^0,c
 12741   001670  EC8F  F025         	call	___flge	;wreg free
 12742   001674  A0D8               	btfss	status,0,c
 12743   001676  EF3F  F00B         	goto	u5341
 12744   00167A  EF41  F00B         	goto	u5340
 12745   00167E                     u5341:
 12746   00167E  EFE2  F00B         	goto	l5418
 12747   001682                     u5340:
 12748   001682  0E00               	movlw	0
 12749   001684  6E2A               	movwf	___flge@ff1^0,c
 12750   001686  0E00               	movlw	0
 12751   001688  6E2B               	movwf	(___flge@ff1+1)^0,c
 12752   00168A  0E9A               	movlw	154
 12753   00168C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12754   00168E  0E42               	movlw	66
 12755   001690  6E2D               	movwf	(___flge@ff1+3)^0,c
 12756   001692  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12757   001696  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12758   00169A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12759   00169E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12760   0016A2  EC8F  F025         	call	___flge	;wreg free
 12761   0016A6  A0D8               	btfss	status,0,c
 12762   0016A8  EF58  F00B         	goto	u5351
 12763   0016AC  EF5A  F00B         	goto	u5350
 12764   0016B0                     u5351:
 12765   0016B0  EFE2  F00B         	goto	l5418
 12766   0016B4                     u5350:
 12767   0016B4                     
 12768                           ;color.c: 190:         if ((0.12<=rel->B)&(0.21>rel->G)){
 12769   0016B4  EE20 F008          	lfsr	2,8
 12770   0016B8  504D               	movf	Colour_decider@rel^0,w,c
 12771   0016BA  26D9               	addwf	fsr2l,f,c
 12772   0016BC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12773   0016BE  22DA               	addwfc	fsr2h,f,c
 12774   0016C0  CFDE F02A          	movff	postinc2,___flge@ff1
 12775   0016C4  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12776   0016C8  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12777   0016CC  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12778   0016D0  0E8F               	movlw	143
 12779   0016D2  6E2E               	movwf	___flge@ff2^0,c
 12780   0016D4  0EC2               	movlw	194
 12781   0016D6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12782   0016D8  0EF5               	movlw	245
 12783   0016DA  6E30               	movwf	(___flge@ff2+2)^0,c
 12784   0016DC  0E3D               	movlw	61
 12785   0016DE  6E31               	movwf	(___flge@ff2+3)^0,c
 12786   0016E0  EC8F  F025         	call	___flge	;wreg free
 12787   0016E4  A0D8               	btfss	status,0,c
 12788   0016E6  EF77  F00B         	goto	u5361
 12789   0016EA  EF79  F00B         	goto	u5360
 12790   0016EE                     u5361:
 12791   0016EE  EF9E  F00B         	goto	l5404
 12792   0016F2                     u5360:
 12793   0016F2  EE20 F004          	lfsr	2,4
 12794   0016F6  504D               	movf	Colour_decider@rel^0,w,c
 12795   0016F8  26D9               	addwf	fsr2l,f,c
 12796   0016FA  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12797   0016FC  22DA               	addwfc	fsr2h,f,c
 12798   0016FE  CFDE F02A          	movff	postinc2,___flge@ff1
 12799   001702  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12800   001706  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12801   00170A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12802   00170E  0E3D               	movlw	61
 12803   001710  6E2E               	movwf	___flge@ff2^0,c
 12804   001712  0E0A               	movlw	10
 12805   001714  6E2F               	movwf	(___flge@ff2+1)^0,c
 12806   001716  0E57               	movlw	87
 12807   001718  6E30               	movwf	(___flge@ff2+2)^0,c
 12808   00171A  0E3E               	movlw	62
 12809   00171C  6E31               	movwf	(___flge@ff2+3)^0,c
 12810   00171E  EC8F  F025         	call	___flge	;wreg free
 12811   001722  B0D8               	btfsc	status,0,c
 12812   001724  EF96  F00B         	goto	u5371
 12813   001728  EF98  F00B         	goto	u5370
 12814   00172C                     u5371:
 12815   00172C  EF9E  F00B         	goto	l5404
 12816   001730                     u5370:
 12817   001730                     
 12818                           ;color.c: 191:             return 6;
 12819   001730  0E00               	movlw	0
 12820   001732  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12821   001734  0E06               	movlw	6
 12822   001736  6E4B               	movwf	?_Colour_decider^0,c
 12823   001738  EF4E  F00C         	goto	l76
 12824   00173C                     l5404:
 12825   00173C  EE20 F008          	lfsr	2,8
 12826   001740  504D               	movf	Colour_decider@rel^0,w,c
 12827   001742  26D9               	addwf	fsr2l,f,c
 12828   001744  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12829   001746  22DA               	addwfc	fsr2h,f,c
 12830   001748  CFDE F02A          	movff	postinc2,___flge@ff1
 12831   00174C  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12832   001750  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12833   001754  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12834   001758  0E8F               	movlw	143
 12835   00175A  6E2E               	movwf	___flge@ff2^0,c
 12836   00175C  0EC2               	movlw	194
 12837   00175E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12838   001760  0EF5               	movlw	245
 12839   001762  6E30               	movwf	(___flge@ff2+2)^0,c
 12840   001764  0E3D               	movlw	61
 12841   001766  6E31               	movwf	(___flge@ff2+3)^0,c
 12842   001768  EC8F  F025         	call	___flge	;wreg free
 12843   00176C  B0D8               	btfsc	status,0,c
 12844   00176E  EFBB  F00B         	goto	u5381
 12845   001772  EFBD  F00B         	goto	u5380
 12846   001776                     u5381:
 12847   001776  EFEA  F00A         	goto	l5376
 12848   00177A                     u5380:
 12849   00177A  0E3D               	movlw	61
 12850   00177C  6E2A               	movwf	___flge@ff1^0,c
 12851   00177E  0E0A               	movlw	10
 12852   001780  6E2B               	movwf	(___flge@ff1+1)^0,c
 12853   001782  0E57               	movlw	87
 12854   001784  6E2C               	movwf	(___flge@ff1+2)^0,c
 12855   001786  0E3E               	movlw	62
 12856   001788  6E2D               	movwf	(___flge@ff1+3)^0,c
 12857   00178A  EE20 F004          	lfsr	2,4
 12858   00178E  504D               	movf	Colour_decider@rel^0,w,c
 12859   001790  26D9               	addwf	fsr2l,f,c
 12860   001792  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12861   001794  22DA               	addwfc	fsr2h,f,c
 12862   001796  CFDE F02E          	movff	postinc2,___flge@ff2
 12863   00179A  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12864   00179E  CFDE F030          	movff	postinc2,___flge@ff2+2
 12865   0017A2  CFDE F031          	movff	postinc2,___flge@ff2+3
 12866   0017A6  EC8F  F025         	call	___flge	;wreg free
 12867   0017AA  B0D8               	btfsc	status,0,c
 12868   0017AC  EFDA  F00B         	goto	u5391
 12869   0017B0  EFDC  F00B         	goto	u5390
 12870   0017B4                     u5391:
 12871   0017B4  EFEA  F00A         	goto	l5376
 12872   0017B8                     u5390:
 12873   0017B8                     
 12874                           ;color.c: 194:             return 5;
 12875   0017B8  0E00               	movlw	0
 12876   0017BA  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12877   0017BC  0E05               	movlw	5
 12878   0017BE  6E4B               	movwf	?_Colour_decider^0,c
 12879   0017C0  EF4E  F00C         	goto	l76
 12880   0017C4                     l5418:
 12881   0017C4  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12882   0017C8  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12883   0017CC  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12884   0017D0  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12885   0017D4  0E00               	movlw	0
 12886   0017D6  6E2E               	movwf	___flge@ff2^0,c
 12887   0017D8  0E00               	movlw	0
 12888   0017DA  6E2F               	movwf	(___flge@ff2+1)^0,c
 12889   0017DC  0E40               	movlw	64
 12890   0017DE  6E30               	movwf	(___flge@ff2+2)^0,c
 12891   0017E0  0E41               	movlw	65
 12892   0017E2  6E31               	movwf	(___flge@ff2+3)^0,c
 12893   0017E4  EC8F  F025         	call	___flge	;wreg free
 12894   0017E8  A0D8               	btfss	status,0,c
 12895   0017EA  EFF9  F00B         	goto	u5401
 12896   0017EE  EFFB  F00B         	goto	u5400
 12897   0017F2                     u5401:
 12898   0017F2  EF1A  F00C         	goto	l5428
 12899   0017F6                     u5400:
 12900   0017F6  0E00               	movlw	0
 12901   0017F8  6E2A               	movwf	___flge@ff1^0,c
 12902   0017FA  0E00               	movlw	0
 12903   0017FC  6E2B               	movwf	(___flge@ff1+1)^0,c
 12904   0017FE  0E88               	movlw	136
 12905   001800  6E2C               	movwf	(___flge@ff1+2)^0,c
 12906   001802  0E41               	movlw	65
 12907   001804  6E2D               	movwf	(___flge@ff1+3)^0,c
 12908   001806  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12909   00180A  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12910   00180E  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12911   001812  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12912   001816  EC8F  F025         	call	___flge	;wreg free
 12913   00181A  A0D8               	btfss	status,0,c
 12914   00181C  EF12  F00C         	goto	u5411
 12915   001820  EF14  F00C         	goto	u5410
 12916   001824                     u5411:
 12917   001824  EF1A  F00C         	goto	l5428
 12918   001828                     u5410:
 12919   001828                     
 12920                           ;color.c: 203:             return 7;
 12921   001828  0E00               	movlw	0
 12922   00182A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12923   00182C  0E07               	movlw	7
 12924   00182E  6E4B               	movwf	?_Colour_decider^0,c
 12925   001830  EF4E  F00C         	goto	l76
 12926   001834                     l5428:
 12927   001834  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12928   001838  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12929   00183C  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12930   001840  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12931   001844  0E00               	movlw	0
 12932   001846  6E2E               	movwf	___flge@ff2^0,c
 12933   001848  0E00               	movlw	0
 12934   00184A  6E2F               	movwf	(___flge@ff2+1)^0,c
 12935   00184C  0EB0               	movlw	176
 12936   00184E  6E30               	movwf	(___flge@ff2+2)^0,c
 12937   001850  0E41               	movlw	65
 12938   001852  6E31               	movwf	(___flge@ff2+3)^0,c
 12939   001854  EC8F  F025         	call	___flge	;wreg free
 12940   001858  A0D8               	btfss	status,0,c
 12941   00185A  EF31  F00C         	goto	u5421
 12942   00185E  EF33  F00C         	goto	u5420
 12943   001862                     u5421:
 12944   001862  EFEA  F00A         	goto	l5376
 12945   001866                     u5420:
 12946   001866  0E00               	movlw	0
 12947   001868  6E2A               	movwf	___flge@ff1^0,c
 12948   00186A  0E00               	movlw	0
 12949   00186C  6E2B               	movwf	(___flge@ff1+1)^0,c
 12950   00186E  0EC0               	movlw	192
 12951   001870  6E2C               	movwf	(___flge@ff1+2)^0,c
 12952   001872  0E41               	movlw	65
 12953   001874  6E2D               	movwf	(___flge@ff1+3)^0,c
 12954   001876  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12955   00187A  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12956   00187E  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12957   001882  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12958   001886  EC8F  F025         	call	___flge	;wreg free
 12959   00188A  A0D8               	btfss	status,0,c
 12960   00188C  EF4A  F00C         	goto	u5431
 12961   001890  EF4C  F00C         	goto	u5430
 12962   001894                     u5431:
 12963   001894  EFEA  F00A         	goto	l5376
 12964   001898                     u5430:
 12965   001898  EF50  F008         	goto	l5308
 12966   00189C                     l76:
 12967   00189C  0012               	return		;funcret
 12968   00189E                     __end_of_Colour_decider:
 12969                           	callstack 0
 12970                           
 12971 ;; *************** function ___xxtofl *****************
 12972 ;; Defined at:
 12973 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 12974 ;; Parameters:    Size  Location     Type
 12975 ;;  sign            1    wreg     unsigned char 
 12976 ;;  val             4    0[COMRAM] long 
 12977 ;; Auto vars:     Size  Location     Type
 12978 ;;  sign            1    8[COMRAM] unsigned char 
 12979 ;;  arg             4   10[COMRAM] unsigned long 
 12980 ;;  exp             1    9[COMRAM] unsigned char 
 12981 ;; Return value:  Size  Location     Type
 12982 ;;                  4    0[COMRAM] unsigned char 
 12983 ;; Registers used:
 12984 ;;		wreg, status,2, status,0
 12985 ;; Tracked objects:
 12986 ;;		On entry : 0/0
 12987 ;;		On exit  : 0/0
 12988 ;;		Unchanged: 0/0
 12989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12991 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12992 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12993 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12994 ;;Total ram usage:       14 bytes
 12995 ;; Hardware stack levels used: 1
 12996 ;; Hardware stack levels required when called: 1
 12997 ;; This function calls:
 12998 ;;		Nothing
 12999 ;; This function is called by:
 13000 ;;		_colour_rel
 13001 ;;		_Colour_decider
 13002 ;;		_reverseOneBlock
 13003 ;;		_ForwardOneBlock
 13004 ;;		_Forwardhalfblock
 13005 ;;		_Backhalfblock
 13006 ;; This function uses a non-reentrant model
 13007 ;;
 13008                           
 13009                           	psect	text72
 13010   00440C                     __ptext72:
 13011                           	callstack 0
 13012   00440C                     ___xxtofl:
 13013                           	callstack 28
 13014                           
 13015                           ;incstack = 0
 13016                           ;___xxtofl@sign stored from wreg
 13017   00440C  6E09               	movwf	___xxtofl@sign^0,c
 13018   00440E  5009               	movf	___xxtofl@sign^0,w,c
 13019   004410  B4D8               	btfsc	status,2,c
 13020   004412  EF0D  F022         	goto	u5021
 13021   004416  EF0F  F022         	goto	u5020
 13022   00441A                     u5021:
 13023   00441A  EF31  F022         	goto	l1328
 13024   00441E                     u5020:
 13025   00441E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13026   004420  EF16  F022         	goto	u5030
 13027   004424  EF14  F022         	goto	u5031
 13028   004428                     u5031:
 13029   004428  EF31  F022         	goto	l1328
 13030   00442C                     u5030:
 13031   00442C  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13032   004430  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13033   004434  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13034   004438  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13035   00443C  1E05               	comf	??___xxtofl^0,f,c
 13036   00443E  1E06               	comf	(??___xxtofl+1)^0,f,c
 13037   004440  1E07               	comf	(??___xxtofl+2)^0,f,c
 13038   004442  1E08               	comf	(??___xxtofl+3)^0,f,c
 13039   004444  2A05               	incf	??___xxtofl^0,f,c
 13040   004446  0E00               	movlw	0
 13041   004448  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13042   00444A  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13043   00444C  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13044   00444E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13045   004452  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13046   004456  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13047   00445A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13048   00445E  EF39  F022         	goto	l5178
 13049   004462                     l1328:
 13050   004462  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13051   004466  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13052   00446A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13053   00446E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13054   004472                     l5178:
 13055   004472  5001               	movf	___xxtofl@val^0,w,c
 13056   004474  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13057   004476  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13058   004478  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13059   00447A  A4D8               	btfss	status,2,c
 13060   00447C  EF42  F022         	goto	u5041
 13061   004480  EF44  F022         	goto	u5040
 13062   004484                     u5041:
 13063   004484  EF4E  F022         	goto	l5184
 13064   004488                     u5040:
 13065   004488  0E00               	movlw	0
 13066   00448A  6E01               	movwf	?___xxtofl^0,c
 13067   00448C  0E00               	movlw	0
 13068   00448E  6E02               	movwf	(?___xxtofl+1)^0,c
 13069   004490  0E00               	movlw	0
 13070   004492  6E03               	movwf	(?___xxtofl+2)^0,c
 13071   004494  0E00               	movlw	0
 13072   004496  6E04               	movwf	(?___xxtofl+3)^0,c
 13073   004498  EFDF  F022         	goto	l1331
 13074   00449C                     l5184:
 13075   00449C  0E96               	movlw	150
 13076   00449E  6E0A               	movwf	___xxtofl@exp^0,c
 13077   0044A0  EF58  F022         	goto	l5188
 13078   0044A4                     l5186:
 13079   0044A4  2A0A               	incf	___xxtofl@exp^0,f,c
 13080   0044A6  90D8               	bcf	status,0,c
 13081   0044A8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13082   0044AA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13083   0044AC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13084   0044AE  320B               	rrcf	___xxtofl@arg^0,f,c
 13085   0044B0                     l5188:
 13086   0044B0  0E00               	movlw	0
 13087   0044B2  140B               	andwf	___xxtofl@arg^0,w,c
 13088   0044B4  6E05               	movwf	??___xxtofl^0,c
 13089   0044B6  0E00               	movlw	0
 13090   0044B8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13091   0044BA  6E06               	movwf	(??___xxtofl+1)^0,c
 13092   0044BC  0E00               	movlw	0
 13093   0044BE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13094   0044C0  6E07               	movwf	(??___xxtofl+2)^0,c
 13095   0044C2  0EFE               	movlw	254
 13096   0044C4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13097   0044C6  6E08               	movwf	(??___xxtofl+3)^0,c
 13098   0044C8  5005               	movf	??___xxtofl^0,w,c
 13099   0044CA  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13100   0044CC  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13101   0044CE  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13102   0044D0  A4D8               	btfss	status,2,c
 13103   0044D2  EF6D  F022         	goto	u5051
 13104   0044D6  EF6F  F022         	goto	u5050
 13105   0044DA                     u5051:
 13106   0044DA  EF52  F022         	goto	l5186
 13107   0044DE                     u5050:
 13108   0044DE  EF7D  F022         	goto	l1335
 13109   0044E2                     l5190:
 13110   0044E2  2A0A               	incf	___xxtofl@exp^0,f,c
 13111   0044E4  0E01               	movlw	1
 13112   0044E6  260B               	addwf	___xxtofl@arg^0,f,c
 13113   0044E8  0E00               	movlw	0
 13114   0044EA  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13115   0044EC  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13116   0044EE  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13117   0044F0  90D8               	bcf	status,0,c
 13118   0044F2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13119   0044F4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13120   0044F6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13121   0044F8  320B               	rrcf	___xxtofl@arg^0,f,c
 13122   0044FA                     l1335:
 13123   0044FA  0E00               	movlw	0
 13124   0044FC  140B               	andwf	___xxtofl@arg^0,w,c
 13125   0044FE  6E05               	movwf	??___xxtofl^0,c
 13126   004500  0E00               	movlw	0
 13127   004502  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13128   004504  6E06               	movwf	(??___xxtofl+1)^0,c
 13129   004506  0E00               	movlw	0
 13130   004508  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13131   00450A  6E07               	movwf	(??___xxtofl+2)^0,c
 13132   00450C  0EFF               	movlw	255
 13133   00450E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13134   004510  6E08               	movwf	(??___xxtofl+3)^0,c
 13135   004512  5005               	movf	??___xxtofl^0,w,c
 13136   004514  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13137   004516  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13138   004518  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13139   00451A  A4D8               	btfss	status,2,c
 13140   00451C  EF92  F022         	goto	u5061
 13141   004520  EF94  F022         	goto	u5060
 13142   004524                     u5061:
 13143   004524  EF71  F022         	goto	l5190
 13144   004528                     u5060:
 13145   004528  EF9C  F022         	goto	l5198
 13146   00452C                     l5196:
 13147   00452C  060A               	decf	___xxtofl@exp^0,f,c
 13148   00452E  90D8               	bcf	status,0,c
 13149   004530  360B               	rlcf	___xxtofl@arg^0,f,c
 13150   004532  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13151   004534  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13152   004536  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13153   004538                     l5198:
 13154   004538  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13155   00453A  EFA1  F022         	goto	u5071
 13156   00453E  EFA3  F022         	goto	u5070
 13157   004542                     u5071:
 13158   004542  EFAB  F022         	goto	l1342
 13159   004546                     u5070:
 13160   004546  0E02               	movlw	2
 13161   004548  600A               	cpfslt	___xxtofl@exp^0,c
 13162   00454A  EFA9  F022         	goto	u5081
 13163   00454E  EFAB  F022         	goto	u5080
 13164   004552                     u5081:
 13165   004552  EF96  F022         	goto	l5196
 13166   004556                     u5080:
 13167   004556                     l1342:
 13168   004556  B00A               	btfsc	___xxtofl@exp^0,0,c
 13169   004558  EFB0  F022         	goto	u5091
 13170   00455C  EFB2  F022         	goto	u5090
 13171   004560                     u5091:
 13172   004560  EFB3  F022         	goto	l5204
 13173   004564                     u5090:
 13174   004564  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13175   004566                     l5204:
 13176   004566  90D8               	bcf	status,0,c
 13177   004568  320A               	rrcf	___xxtofl@exp^0,f,c
 13178   00456A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13179   00456E  6A06               	clrf	(??___xxtofl+1)^0,c
 13180   004570  6A07               	clrf	(??___xxtofl+2)^0,c
 13181   004572  6A08               	clrf	(??___xxtofl+3)^0,c
 13182   004574  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13183   004578  6A07               	clrf	(??___xxtofl+2)^0,c
 13184   00457A  6A06               	clrf	(??___xxtofl+1)^0,c
 13185   00457C  6A05               	clrf	??___xxtofl^0,c
 13186   00457E  5005               	movf	??___xxtofl^0,w,c
 13187   004580  120B               	iorwf	___xxtofl@arg^0,f,c
 13188   004582  5006               	movf	(??___xxtofl+1)^0,w,c
 13189   004584  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13190   004586  5007               	movf	(??___xxtofl+2)^0,w,c
 13191   004588  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13192   00458A  5008               	movf	(??___xxtofl+3)^0,w,c
 13193   00458C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13194   00458E  5009               	movf	___xxtofl@sign^0,w,c
 13195   004590  B4D8               	btfsc	status,2,c
 13196   004592  EFCD  F022         	goto	u5101
 13197   004596  EFCF  F022         	goto	u5100
 13198   00459A                     u5101:
 13199   00459A  EFD7  F022         	goto	l5214
 13200   00459E                     u5100:
 13201   00459E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13202   0045A0  EFD6  F022         	goto	u5110
 13203   0045A4  EFD4  F022         	goto	u5111
 13204   0045A8                     u5111:
 13205   0045A8  EFD7  F022         	goto	l5214
 13206   0045AC                     u5110:
 13207   0045AC  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13208   0045AE                     l5214:
 13209   0045AE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13210   0045B2  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13211   0045B6  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13212   0045BA  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13213   0045BE                     l1331:
 13214   0045BE  0012               	return		;funcret
 13215   0045C0                     __end_of___xxtofl:
 13216                           	callstack 0
 13217                           
 13218 ;; *************** function ___flsub *****************
 13219 ;; Defined at:
 13220 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13221 ;; Parameters:    Size  Location     Type
 13222 ;;  b               4   41[COMRAM] unsigned char 
 13223 ;;  a               4   45[COMRAM] unsigned char 
 13224 ;; Auto vars:     Size  Location     Type
 13225 ;;		None
 13226 ;; Return value:  Size  Location     Type
 13227 ;;                  4   41[COMRAM] unsigned char 
 13228 ;; Registers used:
 13229 ;;		wreg, status,2, status,0, cstack
 13230 ;; Tracked objects:
 13231 ;;		On entry : 0/0
 13232 ;;		On exit  : 0/0
 13233 ;;		Unchanged: 0/0
 13234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13235 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13238 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13239 ;;Total ram usage:        8 bytes
 13240 ;; Hardware stack levels used: 1
 13241 ;; Hardware stack levels required when called: 2
 13242 ;; This function calls:
 13243 ;;		___fladd
 13244 ;; This function is called by:
 13245 ;;		_Colour_decider
 13246 ;;		_efgtoa
 13247 ;; This function uses a non-reentrant model
 13248 ;;
 13249                           
 13250                           	psect	text73
 13251   005CCE                     __ptext73:
 13252                           	callstack 0
 13253   005CCE                     ___flsub:
 13254                           	callstack 24
 13255   005CCE  0E00               	movlw	0
 13256   005CD0  1A2E               	xorwf	___flsub@a^0,f,c
 13257   005CD2  0E00               	movlw	0
 13258   005CD4  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13259   005CD6  0E00               	movlw	0
 13260   005CD8  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13261   005CDA  0E80               	movlw	128
 13262   005CDC  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13263   005CDE  C02A  F001         	movff	___flsub@b,___fladd@b
 13264   005CE2  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13265   005CE6  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13266   005CEA  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13267   005CEE  C02E  F005         	movff	___flsub@a,___fladd@a
 13268   005CF2  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13269   005CF6  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13270   005CFA  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13271   005CFE  EC02  F014         	call	___fladd	;wreg free
 13272   005D02  C001  F02A         	movff	?___fladd,?___flsub
 13273   005D06  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13274   005D0A  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13275   005D0E  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13276   005D12  0012               	return		;funcret
 13277   005D14                     __end_of___flsub:
 13278                           	callstack 0
 13279                           
 13280 ;; *************** function ___fladd *****************
 13281 ;; Defined at:
 13282 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13283 ;; Parameters:    Size  Location     Type
 13284 ;;  b               4    0[COMRAM] unsigned char 
 13285 ;;  a               4    4[COMRAM] unsigned char 
 13286 ;; Auto vars:     Size  Location     Type
 13287 ;;  grs             1   15[COMRAM] unsigned char 
 13288 ;;  bexp            1   14[COMRAM] unsigned char 
 13289 ;;  aexp            1   13[COMRAM] unsigned char 
 13290 ;;  signs           1   12[COMRAM] unsigned char 
 13291 ;; Return value:  Size  Location     Type
 13292 ;;                  4    0[COMRAM] unsigned char 
 13293 ;; Registers used:
 13294 ;;		wreg, status,2, status,0
 13295 ;; Tracked objects:
 13296 ;;		On entry : 0/0
 13297 ;;		On exit  : 0/0
 13298 ;;		Unchanged: 0/0
 13299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13300 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13301 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13302 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13303 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13304 ;;Total ram usage:       16 bytes
 13305 ;; Hardware stack levels used: 1
 13306 ;; Hardware stack levels required when called: 1
 13307 ;; This function calls:
 13308 ;;		Nothing
 13309 ;; This function is called by:
 13310 ;;		_colour_rel
 13311 ;;		_Colour_decider
 13312 ;;		___flsub
 13313 ;;		_efgtoa
 13314 ;; This function uses a non-reentrant model
 13315 ;;
 13316                           
 13317                           	psect	text74
 13318   002804                     __ptext74:
 13319                           	callstack 0
 13320   002804                     ___fladd:
 13321                           	callstack 24
 13322   002804  5004               	movf	(___fladd@b+3)^0,w,c
 13323   002806  0B80               	andlw	128
 13324   002808  6E0D               	movwf	___fladd@signs^0,c
 13325   00280A  5004               	movf	(___fladd@b+3)^0,w,c
 13326   00280C  2404               	addwf	(___fladd@b+3)^0,w,c
 13327   00280E  6E0F               	movwf	___fladd@bexp^0,c
 13328   002810  AE03               	btfss	(___fladd@b+2)^0,7,c
 13329   002812  EF0D  F014         	goto	u2981
 13330   002816  EF0F  F014         	goto	u2980
 13331   00281A                     u2981:
 13332   00281A  EF10  F014         	goto	l3820
 13333   00281E                     u2980:
 13334   00281E  800F               	bsf	___fladd@bexp^0,0,c
 13335   002820                     l3820:
 13336   002820  500F               	movf	___fladd@bexp^0,w,c
 13337   002822  B4D8               	btfsc	status,2,c
 13338   002824  EF16  F014         	goto	u2991
 13339   002828  EF18  F014         	goto	u2990
 13340   00282C                     u2991:
 13341   00282C  EF2D  F014         	goto	l3830
 13342   002830                     u2990:
 13343   002830  280F               	incf	___fladd@bexp^0,w,c
 13344   002832  A4D8               	btfss	status,2,c
 13345   002834  EF1E  F014         	goto	u3001
 13346   002838  EF20  F014         	goto	u3000
 13347   00283C                     u3001:
 13348   00283C  EF28  F014         	goto	l3826
 13349   002840                     u3000:
 13350   002840  0E00               	movlw	0
 13351   002842  6E01               	movwf	___fladd@b^0,c
 13352   002844  0E00               	movlw	0
 13353   002846  6E02               	movwf	(___fladd@b+1)^0,c
 13354   002848  0E00               	movlw	0
 13355   00284A  6E03               	movwf	(___fladd@b+2)^0,c
 13356   00284C  0E00               	movlw	0
 13357   00284E  6E04               	movwf	(___fladd@b+3)^0,c
 13358   002850                     l3826:
 13359   002850  8E03               	bsf	(___fladd@b+2)^0,7,c
 13360   002852  0E00               	movlw	0
 13361   002854  6E04               	movwf	(___fladd@b+3)^0,c
 13362   002856  EF35  F014         	goto	l3832
 13363   00285A                     l3830:
 13364   00285A  0E00               	movlw	0
 13365   00285C  6E01               	movwf	___fladd@b^0,c
 13366   00285E  0E00               	movlw	0
 13367   002860  6E02               	movwf	(___fladd@b+1)^0,c
 13368   002862  0E00               	movlw	0
 13369   002864  6E03               	movwf	(___fladd@b+2)^0,c
 13370   002866  0E00               	movlw	0
 13371   002868  6E04               	movwf	(___fladd@b+3)^0,c
 13372   00286A                     l3832:
 13373   00286A  5008               	movf	(___fladd@a+3)^0,w,c
 13374   00286C  0B80               	andlw	128
 13375   00286E  6E0E               	movwf	___fladd@aexp^0,c
 13376   002870  500D               	movf	___fladd@signs^0,w,c
 13377   002872  180E               	xorwf	___fladd@aexp^0,w,c
 13378   002874  B4D8               	btfsc	status,2,c
 13379   002876  EF3F  F014         	goto	u3011
 13380   00287A  EF41  F014         	goto	u3010
 13381   00287E                     u3011:
 13382   00287E  EF42  F014         	goto	l3838
 13383   002882                     u3010:
 13384   002882  8C0D               	bsf	___fladd@signs^0,6,c
 13385   002884                     l3838:
 13386   002884  5008               	movf	(___fladd@a+3)^0,w,c
 13387   002886  2408               	addwf	(___fladd@a+3)^0,w,c
 13388   002888  6E0E               	movwf	___fladd@aexp^0,c
 13389   00288A  AE07               	btfss	(___fladd@a+2)^0,7,c
 13390   00288C  EF4A  F014         	goto	u3021
 13391   002890  EF4C  F014         	goto	u3020
 13392   002894                     u3021:
 13393   002894  EF4D  F014         	goto	l3844
 13394   002898                     u3020:
 13395   002898  800E               	bsf	___fladd@aexp^0,0,c
 13396   00289A                     l3844:
 13397   00289A  500E               	movf	___fladd@aexp^0,w,c
 13398   00289C  B4D8               	btfsc	status,2,c
 13399   00289E  EF53  F014         	goto	u3031
 13400   0028A2  EF55  F014         	goto	u3030
 13401   0028A6                     u3031:
 13402   0028A6  EF6A  F014         	goto	l3854
 13403   0028AA                     u3030:
 13404   0028AA  280E               	incf	___fladd@aexp^0,w,c
 13405   0028AC  A4D8               	btfss	status,2,c
 13406   0028AE  EF5B  F014         	goto	u3041
 13407   0028B2  EF5D  F014         	goto	u3040
 13408   0028B6                     u3041:
 13409   0028B6  EF65  F014         	goto	l3850
 13410   0028BA                     u3040:
 13411   0028BA  0E00               	movlw	0
 13412   0028BC  6E05               	movwf	___fladd@a^0,c
 13413   0028BE  0E00               	movlw	0
 13414   0028C0  6E06               	movwf	(___fladd@a+1)^0,c
 13415   0028C2  0E00               	movlw	0
 13416   0028C4  6E07               	movwf	(___fladd@a+2)^0,c
 13417   0028C6  0E00               	movlw	0
 13418   0028C8  6E08               	movwf	(___fladd@a+3)^0,c
 13419   0028CA                     l3850:
 13420   0028CA  8E07               	bsf	(___fladd@a+2)^0,7,c
 13421   0028CC  0E00               	movlw	0
 13422   0028CE  6E08               	movwf	(___fladd@a+3)^0,c
 13423   0028D0  EF72  F014         	goto	l3856
 13424   0028D4                     l3854:
 13425   0028D4  0E00               	movlw	0
 13426   0028D6  6E05               	movwf	___fladd@a^0,c
 13427   0028D8  0E00               	movlw	0
 13428   0028DA  6E06               	movwf	(___fladd@a+1)^0,c
 13429   0028DC  0E00               	movlw	0
 13430   0028DE  6E07               	movwf	(___fladd@a+2)^0,c
 13431   0028E0  0E00               	movlw	0
 13432   0028E2  6E08               	movwf	(___fladd@a+3)^0,c
 13433   0028E4                     l3856:
 13434   0028E4  500F               	movf	___fladd@bexp^0,w,c
 13435   0028E6  5C0E               	subwf	___fladd@aexp^0,w,c
 13436   0028E8  B0D8               	btfsc	status,0,c
 13437   0028EA  EF79  F014         	goto	u3051
 13438   0028EE  EF7B  F014         	goto	u3050
 13439   0028F2                     u3051:
 13440   0028F2  EFA2  F014         	goto	l3892
 13441   0028F6                     u3050:
 13442   0028F6  AC0D               	btfss	___fladd@signs^0,6,c
 13443   0028F8  EF80  F014         	goto	u3061
 13444   0028FC  EF82  F014         	goto	u3060
 13445   002900                     u3061:
 13446   002900  EF84  F014         	goto	l3862
 13447   002904                     u3060:
 13448   002904  0E80               	movlw	128
 13449   002906  1A0D               	xorwf	___fladd@signs^0,f,c
 13450   002908                     l3862:
 13451   002908  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13452   00290C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13453   002910  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13454   002914  C001  F010         	movff	___fladd@b,___fladd@grs
 13455   002918  C005  F001         	movff	___fladd@a,___fladd@b
 13456   00291C  C010  F005         	movff	___fladd@grs,___fladd@a
 13457   002920  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13458   002924  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13459   002928  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13460   00292C  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13461   002930  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13462   002934  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13463   002938  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13464   00293C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13465   002940  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13466   002944                     l3892:
 13467   002944  0E00               	movlw	0
 13468   002946  6E10               	movwf	___fladd@grs^0,c
 13469   002948  500F               	movf	___fladd@bexp^0,w,c
 13470   00294A  C00E  F009         	movff	___fladd@aexp,??___fladd
 13471   00294E  6A0A               	clrf	(??___fladd+1)^0,c
 13472   002950  5E09               	subwf	??___fladd^0,f,c
 13473   002952  0E00               	movlw	0
 13474   002954  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13475   002956  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13476   002958  EFB7  F014         	goto	u3071
 13477   00295C  500A               	movf	(??___fladd+1)^0,w,c
 13478   00295E  E109               	bnz	u3070
 13479   002960  0E1A               	movlw	26
 13480   002962  5C09               	subwf	??___fladd^0,w,c
 13481   002964  A0D8               	btfss	status,0,c
 13482   002966  EFB7  F014         	goto	u3071
 13483   00296A  EFB9  F014         	goto	u3070
 13484   00296E                     u3071:
 13485   00296E  EFF0  F014         	goto	l1202
 13486   002972                     u3070:
 13487   002972  5001               	movf	___fladd@b^0,w,c
 13488   002974  1002               	iorwf	(___fladd@b+1)^0,w,c
 13489   002976  1003               	iorwf	(___fladd@b+2)^0,w,c
 13490   002978  1004               	iorwf	(___fladd@b+3)^0,w,c
 13491   00297A  A4D8               	btfss	status,2,c
 13492   00297C  EFC2  F014         	goto	u3081
 13493   002980  EFC5  F014         	goto	u3080
 13494   002984                     u3081:
 13495   002984  0E01               	movlw	1
 13496   002986  EFC6  F014         	goto	u3090
 13497   00298A                     u3080:
 13498   00298A  0E00               	movlw	0
 13499   00298C                     u3090:
 13500   00298C  6E10               	movwf	___fladd@grs^0,c
 13501   00298E  0E00               	movlw	0
 13502   002990  6E01               	movwf	___fladd@b^0,c
 13503   002992  0E00               	movlw	0
 13504   002994  6E02               	movwf	(___fladd@b+1)^0,c
 13505   002996  0E00               	movlw	0
 13506   002998  6E03               	movwf	(___fladd@b+2)^0,c
 13507   00299A  0E00               	movlw	0
 13508   00299C  6E04               	movwf	(___fladd@b+3)^0,c
 13509   00299E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13510   0029A2  EFF9  F014         	goto	l1201
 13511   0029A6                     l1203:
 13512   0029A6  A010               	btfss	___fladd@grs^0,0,c
 13513   0029A8  EFD8  F014         	goto	u3101
 13514   0029AC  EFDA  F014         	goto	u3100
 13515   0029B0                     u3101:
 13516   0029B0  EFE0  F014         	goto	l3904
 13517   0029B4                     u3100:
 13518   0029B4  90D8               	bcf	status,0,c
 13519   0029B6  3010               	rrcf	___fladd@grs^0,w,c
 13520   0029B8  0901               	iorlw	1
 13521   0029BA  6E10               	movwf	___fladd@grs^0,c
 13522   0029BC  EFE2  F014         	goto	l3906
 13523   0029C0                     l3904:
 13524   0029C0  90D8               	bcf	status,0,c
 13525   0029C2  3210               	rrcf	___fladd@grs^0,f,c
 13526   0029C4                     l3906:
 13527   0029C4  A001               	btfss	___fladd@b^0,0,c
 13528   0029C6  EFE7  F014         	goto	u3111
 13529   0029CA  EFE9  F014         	goto	u3110
 13530   0029CE                     u3111:
 13531   0029CE  EFEA  F014         	goto	l3910
 13532   0029D2                     u3110:
 13533   0029D2  8E10               	bsf	___fladd@grs^0,7,c
 13534   0029D4                     l3910:
 13535   0029D4  3404               	rlcf	(___fladd@b+3)^0,w,c
 13536   0029D6  3204               	rrcf	(___fladd@b+3)^0,f,c
 13537   0029D8  3203               	rrcf	(___fladd@b+2)^0,f,c
 13538   0029DA  3202               	rrcf	(___fladd@b+1)^0,f,c
 13539   0029DC  3201               	rrcf	___fladd@b^0,f,c
 13540   0029DE  2A0F               	incf	___fladd@bexp^0,f,c
 13541   0029E0                     l1202:
 13542   0029E0  500E               	movf	___fladd@aexp^0,w,c
 13543   0029E2  5C0F               	subwf	___fladd@bexp^0,w,c
 13544   0029E4  A0D8               	btfss	status,0,c
 13545   0029E6  EFF7  F014         	goto	u3121
 13546   0029EA  EFF9  F014         	goto	u3120
 13547   0029EE                     u3121:
 13548   0029EE  EFD3  F014         	goto	l1203
 13549   0029F2                     u3120:
 13550   0029F2                     l1201:
 13551   0029F2  BC0D               	btfsc	___fladd@signs^0,6,c
 13552   0029F4  EFFE  F014         	goto	u3131
 13553   0029F8  EF00  F015         	goto	u3130
 13554   0029FC                     u3131:
 13555   0029FC  EF40  F015         	goto	l3938
 13556   002A00                     u3130:
 13557   002A00  500F               	movf	___fladd@bexp^0,w,c
 13558   002A02  A4D8               	btfss	status,2,c
 13559   002A04  EF06  F015         	goto	u3141
 13560   002A08  EF08  F015         	goto	u3140
 13561   002A0C                     u3141:
 13562   002A0C  EF12  F015         	goto	l3920
 13563   002A10                     u3140:
 13564   002A10  0E00               	movlw	0
 13565   002A12  6E01               	movwf	?___fladd^0,c
 13566   002A14  0E00               	movlw	0
 13567   002A16  6E02               	movwf	(?___fladd+1)^0,c
 13568   002A18  0E00               	movlw	0
 13569   002A1A  6E03               	movwf	(?___fladd+2)^0,c
 13570   002A1C  0E00               	movlw	0
 13571   002A1E  6E04               	movwf	(?___fladd+3)^0,c
 13572   002A20  EF61  F016         	goto	l1210
 13573   002A24                     l3920:
 13574   002A24  5005               	movf	___fladd@a^0,w,c
 13575   002A26  2601               	addwf	___fladd@b^0,f,c
 13576   002A28  5006               	movf	(___fladd@a+1)^0,w,c
 13577   002A2A  2202               	addwfc	(___fladd@b+1)^0,f,c
 13578   002A2C  5007               	movf	(___fladd@a+2)^0,w,c
 13579   002A2E  2203               	addwfc	(___fladd@b+2)^0,f,c
 13580   002A30  5008               	movf	(___fladd@a+3)^0,w,c
 13581   002A32  2204               	addwfc	(___fladd@b+3)^0,f,c
 13582   002A34  A004               	btfss	(___fladd@b+3)^0,0,c
 13583   002A36  EF1F  F015         	goto	u3151
 13584   002A3A  EF21  F015         	goto	u3150
 13585   002A3E                     u3151:
 13586   002A3E  EFCD  F015         	goto	l3974
 13587   002A42                     u3150:
 13588   002A42  A010               	btfss	___fladd@grs^0,0,c
 13589   002A44  EF26  F015         	goto	u3161
 13590   002A48  EF28  F015         	goto	u3160
 13591   002A4C                     u3161:
 13592   002A4C  EF2E  F015         	goto	l3928
 13593   002A50                     u3160:
 13594   002A50  90D8               	bcf	status,0,c
 13595   002A52  3010               	rrcf	___fladd@grs^0,w,c
 13596   002A54  0901               	iorlw	1
 13597   002A56  6E10               	movwf	___fladd@grs^0,c
 13598   002A58  EF30  F015         	goto	l3930
 13599   002A5C                     l3928:
 13600   002A5C  90D8               	bcf	status,0,c
 13601   002A5E  3210               	rrcf	___fladd@grs^0,f,c
 13602   002A60                     l3930:
 13603   002A60  A001               	btfss	___fladd@b^0,0,c
 13604   002A62  EF35  F015         	goto	u3171
 13605   002A66  EF37  F015         	goto	u3170
 13606   002A6A                     u3171:
 13607   002A6A  EF38  F015         	goto	l3934
 13608   002A6E                     u3170:
 13609   002A6E  8E10               	bsf	___fladd@grs^0,7,c
 13610   002A70                     l3934:
 13611   002A70  3404               	rlcf	(___fladd@b+3)^0,w,c
 13612   002A72  3204               	rrcf	(___fladd@b+3)^0,f,c
 13613   002A74  3203               	rrcf	(___fladd@b+2)^0,f,c
 13614   002A76  3202               	rrcf	(___fladd@b+1)^0,f,c
 13615   002A78  3201               	rrcf	___fladd@b^0,f,c
 13616   002A7A  2A0F               	incf	___fladd@bexp^0,f,c
 13617   002A7C  EFCD  F015         	goto	l3974
 13618   002A80                     l3938:
 13619   002A80  5005               	movf	___fladd@a^0,w,c
 13620   002A82  5C01               	subwf	___fladd@b^0,w,c
 13621   002A84  5006               	movf	(___fladd@a+1)^0,w,c
 13622   002A86  5802               	subwfb	(___fladd@b+1)^0,w,c
 13623   002A88  5007               	movf	(___fladd@a+2)^0,w,c
 13624   002A8A  5803               	subwfb	(___fladd@b+2)^0,w,c
 13625   002A8C  5004               	movf	(___fladd@b+3)^0,w,c
 13626   002A8E  0A80               	xorlw	128
 13627   002A90  6E09               	movwf	??___fladd^0,c
 13628   002A92  5008               	movf	(___fladd@a+3)^0,w,c
 13629   002A94  0A80               	xorlw	128
 13630   002A96  5809               	subwfb	??___fladd^0,w,c
 13631   002A98  B0D8               	btfsc	status,0,c
 13632   002A9A  EF51  F015         	goto	u3181
 13633   002A9E  EF53  F015         	goto	u3180
 13634   002AA2                     u3181:
 13635   002AA2  EF7E  F015         	goto	l3948
 13636   002AA6                     u3180:
 13637   002AA6  5001               	movf	___fladd@b^0,w,c
 13638   002AA8  5C05               	subwf	___fladd@a^0,w,c
 13639   002AAA  6E09               	movwf	??___fladd^0,c
 13640   002AAC  5002               	movf	(___fladd@b+1)^0,w,c
 13641   002AAE  5806               	subwfb	(___fladd@a+1)^0,w,c
 13642   002AB0  6E0A               	movwf	(??___fladd+1)^0,c
 13643   002AB2  5003               	movf	(___fladd@b+2)^0,w,c
 13644   002AB4  5807               	subwfb	(___fladd@a+2)^0,w,c
 13645   002AB6  6E0B               	movwf	(??___fladd+2)^0,c
 13646   002AB8  5004               	movf	(___fladd@b+3)^0,w,c
 13647   002ABA  5808               	subwfb	(___fladd@a+3)^0,w,c
 13648   002ABC  6E0C               	movwf	(??___fladd+3)^0,c
 13649   002ABE  0EFF               	movlw	255
 13650   002AC0  2409               	addwf	??___fladd^0,w,c
 13651   002AC2  6E01               	movwf	___fladd@b^0,c
 13652   002AC4  0EFF               	movlw	255
 13653   002AC6  200A               	addwfc	(??___fladd+1)^0,w,c
 13654   002AC8  6E02               	movwf	(___fladd@b+1)^0,c
 13655   002ACA  0EFF               	movlw	255
 13656   002ACC  200B               	addwfc	(??___fladd+2)^0,w,c
 13657   002ACE  6E03               	movwf	(___fladd@b+2)^0,c
 13658   002AD0  0EFF               	movlw	255
 13659   002AD2  200C               	addwfc	(??___fladd+3)^0,w,c
 13660   002AD4  6E04               	movwf	(___fladd@b+3)^0,c
 13661   002AD6  0E80               	movlw	128
 13662   002AD8  1A0D               	xorwf	___fladd@signs^0,f,c
 13663   002ADA  6C10               	negf	___fladd@grs^0,c
 13664   002ADC  5010               	movf	___fladd@grs^0,w,c
 13665   002ADE  A4D8               	btfss	status,2,c
 13666   002AE0  EF74  F015         	goto	u3191
 13667   002AE4  EF76  F015         	goto	u3190
 13668   002AE8                     u3191:
 13669   002AE8  EF86  F015         	goto	l1218
 13670   002AEC                     u3190:
 13671   002AEC  0E01               	movlw	1
 13672   002AEE  2601               	addwf	___fladd@b^0,f,c
 13673   002AF0  0E00               	movlw	0
 13674   002AF2  2202               	addwfc	(___fladd@b+1)^0,f,c
 13675   002AF4  2203               	addwfc	(___fladd@b+2)^0,f,c
 13676   002AF6  2204               	addwfc	(___fladd@b+3)^0,f,c
 13677   002AF8  EF86  F015         	goto	l1218
 13678   002AFC                     l3948:
 13679   002AFC  5005               	movf	___fladd@a^0,w,c
 13680   002AFE  5E01               	subwf	___fladd@b^0,f,c
 13681   002B00  5006               	movf	(___fladd@a+1)^0,w,c
 13682   002B02  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13683   002B04  5007               	movf	(___fladd@a+2)^0,w,c
 13684   002B06  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13685   002B08  5008               	movf	(___fladd@a+3)^0,w,c
 13686   002B0A  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13687   002B0C                     l1218:
 13688   002B0C  5001               	movf	___fladd@b^0,w,c
 13689   002B0E  1002               	iorwf	(___fladd@b+1)^0,w,c
 13690   002B10  1003               	iorwf	(___fladd@b+2)^0,w,c
 13691   002B12  1004               	iorwf	(___fladd@b+3)^0,w,c
 13692   002B14  A4D8               	btfss	status,2,c
 13693   002B16  EF8F  F015         	goto	u3201
 13694   002B1A  EF91  F015         	goto	u3200
 13695   002B1E                     u3201:
 13696   002B1E  EFC6  F015         	goto	l3972
 13697   002B22                     u3200:
 13698   002B22  5010               	movf	___fladd@grs^0,w,c
 13699   002B24  A4D8               	btfss	status,2,c
 13700   002B26  EF97  F015         	goto	u3211
 13701   002B2A  EF99  F015         	goto	u3210
 13702   002B2E                     u3211:
 13703   002B2E  EFC6  F015         	goto	l3972
 13704   002B32                     u3210:
 13705   002B32  0E00               	movlw	0
 13706   002B34  6E01               	movwf	?___fladd^0,c
 13707   002B36  0E00               	movlw	0
 13708   002B38  6E02               	movwf	(?___fladd+1)^0,c
 13709   002B3A  0E00               	movlw	0
 13710   002B3C  6E03               	movwf	(?___fladd+2)^0,c
 13711   002B3E  0E00               	movlw	0
 13712   002B40  6E04               	movwf	(?___fladd+3)^0,c
 13713   002B42  EF61  F016         	goto	l1210
 13714   002B46                     l3956:
 13715   002B46  90D8               	bcf	status,0,c
 13716   002B48  3601               	rlcf	___fladd@b^0,f,c
 13717   002B4A  3602               	rlcf	(___fladd@b+1)^0,f,c
 13718   002B4C  3603               	rlcf	(___fladd@b+2)^0,f,c
 13719   002B4E  3604               	rlcf	(___fladd@b+3)^0,f,c
 13720   002B50  AE10               	btfss	___fladd@grs^0,7,c
 13721   002B52  EFAD  F015         	goto	u3221
 13722   002B56  EFAF  F015         	goto	u3220
 13723   002B5A                     u3221:
 13724   002B5A  EFB0  F015         	goto	l3962
 13725   002B5E                     u3220:
 13726   002B5E  8001               	bsf	___fladd@b^0,0,c
 13727   002B60                     l3962:
 13728   002B60  A010               	btfss	___fladd@grs^0,0,c
 13729   002B62  EFB5  F015         	goto	u3231
 13730   002B66  EFB7  F015         	goto	u3230
 13731   002B6A                     u3231:
 13732   002B6A  EFBB  F015         	goto	l3966
 13733   002B6E                     u3230:
 13734   002B6E  80D8               	bsf	status,0,c
 13735   002B70  3610               	rlcf	___fladd@grs^0,f,c
 13736   002B72  EFBD  F015         	goto	l3968
 13737   002B76                     l3966:
 13738   002B76  90D8               	bcf	status,0,c
 13739   002B78  3610               	rlcf	___fladd@grs^0,f,c
 13740   002B7A                     l3968:
 13741   002B7A  500F               	movf	___fladd@bexp^0,w,c
 13742   002B7C  B4D8               	btfsc	status,2,c
 13743   002B7E  EFC3  F015         	goto	u3241
 13744   002B82  EFC5  F015         	goto	u3240
 13745   002B86                     u3241:
 13746   002B86  EFC6  F015         	goto	l3972
 13747   002B8A                     u3240:
 13748   002B8A  060F               	decf	___fladd@bexp^0,f,c
 13749   002B8C                     l3972:
 13750   002B8C  AE03               	btfss	(___fladd@b+2)^0,7,c
 13751   002B8E  EFCB  F015         	goto	u3251
 13752   002B92  EFCD  F015         	goto	u3250
 13753   002B96                     u3251:
 13754   002B96  EFA3  F015         	goto	l3956
 13755   002B9A                     u3250:
 13756   002B9A                     l3974:
 13757   002B9A  0E00               	movlw	0
 13758   002B9C  6E0E               	movwf	___fladd@aexp^0,c
 13759   002B9E  AE10               	btfss	___fladd@grs^0,7,c
 13760   002BA0  EFD4  F015         	goto	u3261
 13761   002BA4  EFD6  F015         	goto	u3260
 13762   002BA8                     u3261:
 13763   002BA8  EFEE  F015         	goto	l1227
 13764   002BAC                     u3260:
 13765   002BAC  C010  F009         	movff	___fladd@grs,??___fladd
 13766   002BB0  0E7F               	movlw	127
 13767   002BB2  1609               	andwf	??___fladd^0,f,c
 13768   002BB4  B4D8               	btfsc	status,2,c
 13769   002BB6  EFDF  F015         	goto	u3271
 13770   002BBA  EFE1  F015         	goto	u3270
 13771   002BBE                     u3271:
 13772   002BBE  EFE5  F015         	goto	l1228
 13773   002BC2                     u3270:
 13774   002BC2                     l3980:
 13775   002BC2  0E01               	movlw	1
 13776   002BC4  6E0E               	movwf	___fladd@aexp^0,c
 13777   002BC6  EFEE  F015         	goto	l1227
 13778   002BCA                     l1228:
 13779   002BCA  A001               	btfss	___fladd@b^0,0,c
 13780   002BCC  EFEA  F015         	goto	u3281
 13781   002BD0  EFEC  F015         	goto	u3280
 13782   002BD4                     u3281:
 13783   002BD4  EFEE  F015         	goto	l1227
 13784   002BD8                     u3280:
 13785   002BD8  EFE1  F015         	goto	l3980
 13786   002BDC                     l1227:
 13787   002BDC  500E               	movf	___fladd@aexp^0,w,c
 13788   002BDE  B4D8               	btfsc	status,2,c
 13789   002BE0  EFF4  F015         	goto	u3291
 13790   002BE4  EFF6  F015         	goto	u3290
 13791   002BE8                     u3291:
 13792   002BE8  EF21  F016         	goto	l3992
 13793   002BEC                     u3290:
 13794   002BEC  0E01               	movlw	1
 13795   002BEE  2601               	addwf	___fladd@b^0,f,c
 13796   002BF0  0E00               	movlw	0
 13797   002BF2  2202               	addwfc	(___fladd@b+1)^0,f,c
 13798   002BF4  2203               	addwfc	(___fladd@b+2)^0,f,c
 13799   002BF6  2204               	addwfc	(___fladd@b+3)^0,f,c
 13800   002BF8  A004               	btfss	(___fladd@b+3)^0,0,c
 13801   002BFA  EF01  F016         	goto	u3301
 13802   002BFE  EF03  F016         	goto	u3300
 13803   002C02                     u3301:
 13804   002C02  EF21  F016         	goto	l3992
 13805   002C06                     u3300:
 13806   002C06  C001  F009         	movff	___fladd@b,??___fladd
 13807   002C0A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 13808   002C0E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 13809   002C12  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 13810   002C16  340C               	rlcf	(??___fladd+3)^0,w,c
 13811   002C18  320C               	rrcf	(??___fladd+3)^0,f,c
 13812   002C1A  320B               	rrcf	(??___fladd+2)^0,f,c
 13813   002C1C  320A               	rrcf	(??___fladd+1)^0,f,c
 13814   002C1E  3209               	rrcf	??___fladd^0,f,c
 13815   002C20  C009  F001         	movff	??___fladd,___fladd@b
 13816   002C24  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 13817   002C28  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 13818   002C2C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 13819   002C30  280F               	incf	___fladd@bexp^0,w,c
 13820   002C32  B4D8               	btfsc	status,2,c
 13821   002C34  EF1E  F016         	goto	u3311
 13822   002C38  EF20  F016         	goto	u3310
 13823   002C3C                     u3311:
 13824   002C3C  EF21  F016         	goto	l3992
 13825   002C40                     u3310:
 13826   002C40  2A0F               	incf	___fladd@bexp^0,f,c
 13827   002C42                     l3992:
 13828   002C42  280F               	incf	___fladd@bexp^0,w,c
 13829   002C44  B4D8               	btfsc	status,2,c
 13830   002C46  EF27  F016         	goto	u3321
 13831   002C4A  EF29  F016         	goto	u3320
 13832   002C4E                     u3321:
 13833   002C4E  EF31  F016         	goto	l3996
 13834   002C52                     u3320:
 13835   002C52  500F               	movf	___fladd@bexp^0,w,c
 13836   002C54  A4D8               	btfss	status,2,c
 13837   002C56  EF2F  F016         	goto	u3331
 13838   002C5A  EF31  F016         	goto	u3330
 13839   002C5E                     u3331:
 13840   002C5E  EF43  F016         	goto	l4000
 13841   002C62                     u3330:
 13842   002C62                     l3996:
 13843   002C62  0E00               	movlw	0
 13844   002C64  6E01               	movwf	___fladd@b^0,c
 13845   002C66  0E00               	movlw	0
 13846   002C68  6E02               	movwf	(___fladd@b+1)^0,c
 13847   002C6A  0E00               	movlw	0
 13848   002C6C  6E03               	movwf	(___fladd@b+2)^0,c
 13849   002C6E  0E00               	movlw	0
 13850   002C70  6E04               	movwf	(___fladd@b+3)^0,c
 13851   002C72  500F               	movf	___fladd@bexp^0,w,c
 13852   002C74  A4D8               	btfss	status,2,c
 13853   002C76  EF3F  F016         	goto	u3341
 13854   002C7A  EF41  F016         	goto	u3340
 13855   002C7E                     u3341:
 13856   002C7E  EF43  F016         	goto	l4000
 13857   002C82                     u3340:
 13858   002C82  0E00               	movlw	0
 13859   002C84  6E0D               	movwf	___fladd@signs^0,c
 13860   002C86                     l4000:
 13861   002C86  A00F               	btfss	___fladd@bexp^0,0,c
 13862   002C88  EF48  F016         	goto	u3351
 13863   002C8C  EF4A  F016         	goto	u3350
 13864   002C90                     u3351:
 13865   002C90  EF4D  F016         	goto	l4004
 13866   002C94                     u3350:
 13867   002C94  8E03               	bsf	(___fladd@b+2)^0,7,c
 13868   002C96  EF4E  F016         	goto	l4006
 13869   002C9A                     l4004:
 13870   002C9A  9E03               	bcf	(___fladd@b+2)^0,7,c
 13871   002C9C                     l4006:
 13872   002C9C  90D8               	bcf	status,0,c
 13873   002C9E  300F               	rrcf	___fladd@bexp^0,w,c
 13874   002CA0  6E04               	movwf	(___fladd@b+3)^0,c
 13875   002CA2  AE0D               	btfss	___fladd@signs^0,7,c
 13876   002CA4  EF56  F016         	goto	u3361
 13877   002CA8  EF58  F016         	goto	u3360
 13878   002CAC                     u3361:
 13879   002CAC  EF59  F016         	goto	l4012
 13880   002CB0                     u3360:
 13881   002CB0  8E04               	bsf	(___fladd@b+3)^0,7,c
 13882   002CB2                     l4012:
 13883   002CB2  C001  F001         	movff	___fladd@b,?___fladd
 13884   002CB6  C002  F002         	movff	___fladd@b+1,?___fladd+1
 13885   002CBA  C003  F003         	movff	___fladd@b+2,?___fladd+2
 13886   002CBE  C004  F004         	movff	___fladd@b+3,?___fladd+3
 13887   002CC2                     l1210:
 13888   002CC2  0012               	return		;funcret
 13889   002CC4                     __end_of___fladd:
 13890                           	callstack 0
 13891                           
 13892 ;; *************** function ___flmul *****************
 13893 ;; Defined at:
 13894 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 13895 ;; Parameters:    Size  Location     Type
 13896 ;;  b               4   16[COMRAM] unsigned char 
 13897 ;;  a               4   20[COMRAM] unsigned char 
 13898 ;; Auto vars:     Size  Location     Type
 13899 ;;  prod            4   35[COMRAM] struct .
 13900 ;;  grs             4   29[COMRAM] unsigned long 
 13901 ;;  temp            2   39[COMRAM] struct .
 13902 ;;  bexp            1   34[COMRAM] unsigned char 
 13903 ;;  aexp            1   33[COMRAM] unsigned char 
 13904 ;;  sign            1   28[COMRAM] unsigned char 
 13905 ;; Return value:  Size  Location     Type
 13906 ;;                  4   16[COMRAM] unsigned char 
 13907 ;; Registers used:
 13908 ;;		wreg, status,2, status,0, prodl, prodh
 13909 ;; Tracked objects:
 13910 ;;		On entry : 0/0
 13911 ;;		On exit  : 0/0
 13912 ;;		Unchanged: 0/0
 13913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13914 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13915 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13916 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13917 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13918 ;;Total ram usage:       25 bytes
 13919 ;; Hardware stack levels used: 1
 13920 ;; Hardware stack levels required when called: 1
 13921 ;; This function calls:
 13922 ;;		Nothing
 13923 ;; This function is called by:
 13924 ;;		_Colour_decider
 13925 ;;		_reverseOneBlock
 13926 ;;		_ForwardOneBlock
 13927 ;;		_Forwardhalfblock
 13928 ;;		_efgtoa
 13929 ;;		_Backhalfblock
 13930 ;; This function uses a non-reentrant model
 13931 ;;
 13932                           
 13933                           	psect	text75
 13934   002CC4                     __ptext75:
 13935                           	callstack 0
 13936   002CC4                     ___flmul:
 13937                           	callstack 25
 13938   002CC4  5014               	movf	(___flmul@b+3)^0,w,c
 13939   002CC6  0B80               	andlw	128
 13940   002CC8  6E1D               	movwf	___flmul@sign^0,c
 13941   002CCA  5014               	movf	(___flmul@b+3)^0,w,c
 13942   002CCC  2414               	addwf	(___flmul@b+3)^0,w,c
 13943   002CCE  6E23               	movwf	___flmul@bexp^0,c
 13944   002CD0  AE13               	btfss	(___flmul@b+2)^0,7,c
 13945   002CD2  EF6D  F016         	goto	u3791
 13946   002CD6  EF6F  F016         	goto	u3790
 13947   002CDA                     u3791:
 13948   002CDA  EF70  F016         	goto	l4286
 13949   002CDE                     u3790:
 13950   002CDE  8023               	bsf	___flmul@bexp^0,0,c
 13951   002CE0                     l4286:
 13952   002CE0  5023               	movf	___flmul@bexp^0,w,c
 13953   002CE2  B4D8               	btfsc	status,2,c
 13954   002CE4  EF76  F016         	goto	u3801
 13955   002CE8  EF78  F016         	goto	u3800
 13956   002CEC                     u3801:
 13957   002CEC  EF8B  F016         	goto	l4294
 13958   002CF0                     u3800:
 13959   002CF0  2823               	incf	___flmul@bexp^0,w,c
 13960   002CF2  A4D8               	btfss	status,2,c
 13961   002CF4  EF7E  F016         	goto	u3811
 13962   002CF8  EF80  F016         	goto	u3810
 13963   002CFC                     u3811:
 13964   002CFC  EF88  F016         	goto	l4292
 13965   002D00                     u3810:
 13966   002D00  0E00               	movlw	0
 13967   002D02  6E11               	movwf	___flmul@b^0,c
 13968   002D04  0E00               	movlw	0
 13969   002D06  6E12               	movwf	(___flmul@b+1)^0,c
 13970   002D08  0E00               	movlw	0
 13971   002D0A  6E13               	movwf	(___flmul@b+2)^0,c
 13972   002D0C  0E00               	movlw	0
 13973   002D0E  6E14               	movwf	(___flmul@b+3)^0,c
 13974   002D10                     l4292:
 13975   002D10  8E13               	bsf	(___flmul@b+2)^0,7,c
 13976   002D12  EF93  F016         	goto	l4296
 13977   002D16                     l4294:
 13978   002D16  0E00               	movlw	0
 13979   002D18  6E11               	movwf	___flmul@b^0,c
 13980   002D1A  0E00               	movlw	0
 13981   002D1C  6E12               	movwf	(___flmul@b+1)^0,c
 13982   002D1E  0E00               	movlw	0
 13983   002D20  6E13               	movwf	(___flmul@b+2)^0,c
 13984   002D22  0E00               	movlw	0
 13985   002D24  6E14               	movwf	(___flmul@b+3)^0,c
 13986   002D26                     l4296:
 13987   002D26  5018               	movf	(___flmul@a+3)^0,w,c
 13988   002D28  0B80               	andlw	128
 13989   002D2A  1A1D               	xorwf	___flmul@sign^0,f,c
 13990   002D2C  5018               	movf	(___flmul@a+3)^0,w,c
 13991   002D2E  2418               	addwf	(___flmul@a+3)^0,w,c
 13992   002D30  6E22               	movwf	___flmul@aexp^0,c
 13993   002D32  AE17               	btfss	(___flmul@a+2)^0,7,c
 13994   002D34  EF9E  F016         	goto	u3821
 13995   002D38  EFA0  F016         	goto	u3820
 13996   002D3C                     u3821:
 13997   002D3C  EFA1  F016         	goto	l4304
 13998   002D40                     u3820:
 13999   002D40  8022               	bsf	___flmul@aexp^0,0,c
 14000   002D42                     l4304:
 14001   002D42  5022               	movf	___flmul@aexp^0,w,c
 14002   002D44  B4D8               	btfsc	status,2,c
 14003   002D46  EFA7  F016         	goto	u3831
 14004   002D4A  EFA9  F016         	goto	u3830
 14005   002D4E                     u3831:
 14006   002D4E  EFBC  F016         	goto	l4312
 14007   002D52                     u3830:
 14008   002D52  2822               	incf	___flmul@aexp^0,w,c
 14009   002D54  A4D8               	btfss	status,2,c
 14010   002D56  EFAF  F016         	goto	u3841
 14011   002D5A  EFB1  F016         	goto	u3840
 14012   002D5E                     u3841:
 14013   002D5E  EFB9  F016         	goto	l4310
 14014   002D62                     u3840:
 14015   002D62  0E00               	movlw	0
 14016   002D64  6E15               	movwf	___flmul@a^0,c
 14017   002D66  0E00               	movlw	0
 14018   002D68  6E16               	movwf	(___flmul@a+1)^0,c
 14019   002D6A  0E00               	movlw	0
 14020   002D6C  6E17               	movwf	(___flmul@a+2)^0,c
 14021   002D6E  0E00               	movlw	0
 14022   002D70  6E18               	movwf	(___flmul@a+3)^0,c
 14023   002D72                     l4310:
 14024   002D72  8E17               	bsf	(___flmul@a+2)^0,7,c
 14025   002D74  EFC4  F016         	goto	l1287
 14026   002D78                     l4312:
 14027   002D78  0E00               	movlw	0
 14028   002D7A  6E15               	movwf	___flmul@a^0,c
 14029   002D7C  0E00               	movlw	0
 14030   002D7E  6E16               	movwf	(___flmul@a+1)^0,c
 14031   002D80  0E00               	movlw	0
 14032   002D82  6E17               	movwf	(___flmul@a+2)^0,c
 14033   002D84  0E00               	movlw	0
 14034   002D86  6E18               	movwf	(___flmul@a+3)^0,c
 14035   002D88                     l1287:
 14036   002D88  5022               	movf	___flmul@aexp^0,w,c
 14037   002D8A  B4D8               	btfsc	status,2,c
 14038   002D8C  EFCA  F016         	goto	u3851
 14039   002D90  EFCC  F016         	goto	u3850
 14040   002D94                     u3851:
 14041   002D94  EFD4  F016         	goto	l4316
 14042   002D98                     u3850:
 14043   002D98  5023               	movf	___flmul@bexp^0,w,c
 14044   002D9A  A4D8               	btfss	status,2,c
 14045   002D9C  EFD2  F016         	goto	u3861
 14046   002DA0  EFD4  F016         	goto	u3860
 14047   002DA4                     u3861:
 14048   002DA4  EFDE  F016         	goto	l4320
 14049   002DA8                     u3860:
 14050   002DA8                     l4316:
 14051   002DA8  0E00               	movlw	0
 14052   002DAA  6E11               	movwf	?___flmul^0,c
 14053   002DAC  0E00               	movlw	0
 14054   002DAE  6E12               	movwf	(?___flmul+1)^0,c
 14055   002DB0  0E00               	movlw	0
 14056   002DB2  6E13               	movwf	(?___flmul+2)^0,c
 14057   002DB4  0E00               	movlw	0
 14058   002DB6  6E14               	movwf	(?___flmul+3)^0,c
 14059   002DB8  EF76  F018         	goto	l1291
 14060   002DBC                     l4320:
 14061   002DBC  5017               	movf	(___flmul@a+2)^0,w,c
 14062   002DBE  0211               	mulwf	___flmul@b^0,c
 14063   002DC0  CFF3 F028          	movff	prodl,___flmul@temp
 14064   002DC4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14065   002DC8  5028               	movf	___flmul@temp^0,w,c
 14066   002DCA  6E1E               	movwf	___flmul@grs^0,c
 14067   002DCC  6A1F               	clrf	(___flmul@grs+1)^0,c
 14068   002DCE  6A20               	clrf	(___flmul@grs+2)^0,c
 14069   002DD0  6A21               	clrf	(___flmul@grs+3)^0,c
 14070   002DD2  5029               	movf	(___flmul@temp+1)^0,w,c
 14071   002DD4  6E24               	movwf	___flmul@prod^0,c
 14072   002DD6  6A25               	clrf	(___flmul@prod+1)^0,c
 14073   002DD8  6A26               	clrf	(___flmul@prod+2)^0,c
 14074   002DDA  6A27               	clrf	(___flmul@prod+3)^0,c
 14075   002DDC  5016               	movf	(___flmul@a+1)^0,w,c
 14076   002DDE  0212               	mulwf	(___flmul@b+1)^0,c
 14077   002DE0  CFF3 F028          	movff	prodl,___flmul@temp
 14078   002DE4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14079   002DE8  5028               	movf	___flmul@temp^0,w,c
 14080   002DEA  261E               	addwf	___flmul@grs^0,f,c
 14081   002DEC  0E00               	movlw	0
 14082   002DEE  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14083   002DF0  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14084   002DF2  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14085   002DF4  5029               	movf	(___flmul@temp+1)^0,w,c
 14086   002DF6  2624               	addwf	___flmul@prod^0,f,c
 14087   002DF8  0E00               	movlw	0
 14088   002DFA  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14089   002DFC  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14090   002DFE  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14091   002E00  5015               	movf	___flmul@a^0,w,c
 14092   002E02  0213               	mulwf	(___flmul@b+2)^0,c
 14093   002E04  CFF3 F028          	movff	prodl,___flmul@temp
 14094   002E08  CFF4 F029          	movff	prodh,___flmul@temp+1
 14095   002E0C  5028               	movf	___flmul@temp^0,w,c
 14096   002E0E  261E               	addwf	___flmul@grs^0,f,c
 14097   002E10  0E00               	movlw	0
 14098   002E12  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14099   002E14  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14100   002E16  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14101   002E18  5029               	movf	(___flmul@temp+1)^0,w,c
 14102   002E1A  2624               	addwf	___flmul@prod^0,f,c
 14103   002E1C  0E00               	movlw	0
 14104   002E1E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14105   002E20  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14106   002E22  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14107   002E24  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14108   002E28  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14109   002E2C  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14110   002E30  6A1E               	clrf	___flmul@grs^0,c
 14111   002E32  5015               	movf	___flmul@a^0,w,c
 14112   002E34  0212               	mulwf	(___flmul@b+1)^0,c
 14113   002E36  CFF3 F028          	movff	prodl,___flmul@temp
 14114   002E3A  CFF4 F029          	movff	prodh,___flmul@temp+1
 14115   002E3E  5028               	movf	___flmul@temp^0,w,c
 14116   002E40  261E               	addwf	___flmul@grs^0,f,c
 14117   002E42  5029               	movf	(___flmul@temp+1)^0,w,c
 14118   002E44  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14119   002E46  0E00               	movlw	0
 14120   002E48  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14121   002E4A  0E00               	movlw	0
 14122   002E4C  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14123   002E4E  5016               	movf	(___flmul@a+1)^0,w,c
 14124   002E50  0211               	mulwf	___flmul@b^0,c
 14125   002E52  CFF3 F028          	movff	prodl,___flmul@temp
 14126   002E56  CFF4 F029          	movff	prodh,___flmul@temp+1
 14127   002E5A  5028               	movf	___flmul@temp^0,w,c
 14128   002E5C  261E               	addwf	___flmul@grs^0,f,c
 14129   002E5E  5029               	movf	(___flmul@temp+1)^0,w,c
 14130   002E60  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14131   002E62  0E00               	movlw	0
 14132   002E64  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14133   002E66  0E00               	movlw	0
 14134   002E68  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14135   002E6A  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14136   002E6E  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14137   002E72  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14138   002E76  6A1E               	clrf	___flmul@grs^0,c
 14139   002E78  5015               	movf	___flmul@a^0,w,c
 14140   002E7A  0211               	mulwf	___flmul@b^0,c
 14141   002E7C  CFF3 F028          	movff	prodl,___flmul@temp
 14142   002E80  CFF4 F029          	movff	prodh,___flmul@temp+1
 14143   002E84  5028               	movf	___flmul@temp^0,w,c
 14144   002E86  261E               	addwf	___flmul@grs^0,f,c
 14145   002E88  5029               	movf	(___flmul@temp+1)^0,w,c
 14146   002E8A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14147   002E8C  0E00               	movlw	0
 14148   002E8E  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14149   002E90  0E00               	movlw	0
 14150   002E92  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14151   002E94  5017               	movf	(___flmul@a+2)^0,w,c
 14152   002E96  0212               	mulwf	(___flmul@b+1)^0,c
 14153   002E98  CFF3 F028          	movff	prodl,___flmul@temp
 14154   002E9C  CFF4 F029          	movff	prodh,___flmul@temp+1
 14155   002EA0  5028               	movf	___flmul@temp^0,w,c
 14156   002EA2  2624               	addwf	___flmul@prod^0,f,c
 14157   002EA4  5029               	movf	(___flmul@temp+1)^0,w,c
 14158   002EA6  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14159   002EA8  0E00               	movlw	0
 14160   002EAA  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14161   002EAC  0E00               	movlw	0
 14162   002EAE  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14163   002EB0  5016               	movf	(___flmul@a+1)^0,w,c
 14164   002EB2  0213               	mulwf	(___flmul@b+2)^0,c
 14165   002EB4  CFF3 F028          	movff	prodl,___flmul@temp
 14166   002EB8  CFF4 F029          	movff	prodh,___flmul@temp+1
 14167   002EBC  5028               	movf	___flmul@temp^0,w,c
 14168   002EBE  2624               	addwf	___flmul@prod^0,f,c
 14169   002EC0  5029               	movf	(___flmul@temp+1)^0,w,c
 14170   002EC2  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14171   002EC4  0E00               	movlw	0
 14172   002EC6  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14173   002EC8  0E00               	movlw	0
 14174   002ECA  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14175   002ECC  5017               	movf	(___flmul@a+2)^0,w,c
 14176   002ECE  0213               	mulwf	(___flmul@b+2)^0,c
 14177   002ED0  CFF3 F028          	movff	prodl,___flmul@temp
 14178   002ED4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14179   002ED8  5028               	movf	___flmul@temp^0,w,c
 14180   002EDA  6E19               	movwf	??___flmul^0,c
 14181   002EDC  5029               	movf	(___flmul@temp+1)^0,w,c
 14182   002EDE  6E1A               	movwf	(??___flmul+1)^0,c
 14183   002EE0  6A1B               	clrf	(??___flmul+2)^0,c
 14184   002EE2  6A1C               	clrf	(??___flmul+3)^0,c
 14185   002EE4  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14186   002EE8  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14187   002EEC  C019  F01A         	movff	??___flmul,??___flmul+1
 14188   002EF0  6A19               	clrf	??___flmul^0,c
 14189   002EF2  5019               	movf	??___flmul^0,w,c
 14190   002EF4  2624               	addwf	___flmul@prod^0,f,c
 14191   002EF6  501A               	movf	(??___flmul+1)^0,w,c
 14192   002EF8  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14193   002EFA  501B               	movf	(??___flmul+2)^0,w,c
 14194   002EFC  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14195   002EFE  501C               	movf	(??___flmul+3)^0,w,c
 14196   002F00  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14197   002F02  C01E  F019         	movff	___flmul@grs,??___flmul
 14198   002F06  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14199   002F0A  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14200   002F0E  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14201   002F12  0E19               	movlw	25
 14202   002F14  EF91  F017         	goto	u3870
 14203   002F18                     u3875:
 14204   002F18  90D8               	bcf	status,0,c
 14205   002F1A  321C               	rrcf	(??___flmul+3)^0,f,c
 14206   002F1C  321B               	rrcf	(??___flmul+2)^0,f,c
 14207   002F1E  321A               	rrcf	(??___flmul+1)^0,f,c
 14208   002F20  3219               	rrcf	??___flmul^0,f,c
 14209   002F22                     u3870:
 14210   002F22  2EE8               	decfsz	wreg,f,c
 14211   002F24  EF8C  F017         	goto	u3875
 14212   002F28  5019               	movf	??___flmul^0,w,c
 14213   002F2A  2624               	addwf	___flmul@prod^0,f,c
 14214   002F2C  501A               	movf	(??___flmul+1)^0,w,c
 14215   002F2E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14216   002F30  501B               	movf	(??___flmul+2)^0,w,c
 14217   002F32  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14218   002F34  501C               	movf	(??___flmul+3)^0,w,c
 14219   002F36  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14220   002F38  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14221   002F3C  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14222   002F40  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14223   002F44  6A1E               	clrf	___flmul@grs^0,c
 14224   002F46  5022               	movf	___flmul@aexp^0,w,c
 14225   002F48  C023  F019         	movff	___flmul@bexp,??___flmul
 14226   002F4C  6A1A               	clrf	(??___flmul+1)^0,c
 14227   002F4E  2619               	addwf	??___flmul^0,f,c
 14228   002F50  0E00               	movlw	0
 14229   002F52  221A               	addwfc	(??___flmul+1)^0,f,c
 14230   002F54  0E82               	movlw	130
 14231   002F56  2419               	addwf	??___flmul^0,w,c
 14232   002F58  6E28               	movwf	___flmul@temp^0,c
 14233   002F5A  0EFF               	movlw	255
 14234   002F5C  201A               	addwfc	(??___flmul+1)^0,w,c
 14235   002F5E  6E29               	movwf	(___flmul@temp+1)^0,c
 14236   002F60  EFC7  F017         	goto	l4368
 14237   002F64                     l4362:
 14238   002F64  90D8               	bcf	status,0,c
 14239   002F66  3624               	rlcf	___flmul@prod^0,f,c
 14240   002F68  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14241   002F6A  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14242   002F6C  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14243   002F6E  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14244   002F70  EFBC  F017         	goto	u3881
 14245   002F74  EFBE  F017         	goto	u3880
 14246   002F78                     u3881:
 14247   002F78  EFBF  F017         	goto	l1294
 14248   002F7C                     u3880:
 14249   002F7C  8024               	bsf	___flmul@prod^0,0,c
 14250   002F7E                     l1294:
 14251   002F7E  90D8               	bcf	status,0,c
 14252   002F80  361E               	rlcf	___flmul@grs^0,f,c
 14253   002F82  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14254   002F84  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14255   002F86  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14256   002F88  0628               	decf	___flmul@temp^0,f,c
 14257   002F8A  A0D8               	btfss	status,0,c
 14258   002F8C  0629               	decf	(___flmul@temp+1)^0,f,c
 14259   002F8E                     l4368:
 14260   002F8E  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14261   002F90  EFCC  F017         	goto	u3891
 14262   002F94  EFCE  F017         	goto	u3890
 14263   002F98                     u3891:
 14264   002F98  EFB2  F017         	goto	l4362
 14265   002F9C                     u3890:
 14266   002F9C  0E00               	movlw	0
 14267   002F9E  6E22               	movwf	___flmul@aexp^0,c
 14268   002FA0  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14269   002FA2  EFD5  F017         	goto	u3901
 14270   002FA6  EFD7  F017         	goto	u3900
 14271   002FAA                     u3901:
 14272   002FAA  EFFB  F017         	goto	l1296
 14273   002FAE                     u3900:
 14274   002FAE  0EFF               	movlw	255
 14275   002FB0  141E               	andwf	___flmul@grs^0,w,c
 14276   002FB2  6E19               	movwf	??___flmul^0,c
 14277   002FB4  0EFF               	movlw	255
 14278   002FB6  141F               	andwf	(___flmul@grs+1)^0,w,c
 14279   002FB8  6E1A               	movwf	(??___flmul+1)^0,c
 14280   002FBA  0EFF               	movlw	255
 14281   002FBC  1420               	andwf	(___flmul@grs+2)^0,w,c
 14282   002FBE  6E1B               	movwf	(??___flmul+2)^0,c
 14283   002FC0  0E7F               	movlw	127
 14284   002FC2  1421               	andwf	(___flmul@grs+3)^0,w,c
 14285   002FC4  6E1C               	movwf	(??___flmul+3)^0,c
 14286   002FC6  5019               	movf	??___flmul^0,w,c
 14287   002FC8  101A               	iorwf	(??___flmul+1)^0,w,c
 14288   002FCA  101B               	iorwf	(??___flmul+2)^0,w,c
 14289   002FCC  101C               	iorwf	(??___flmul+3)^0,w,c
 14290   002FCE  B4D8               	btfsc	status,2,c
 14291   002FD0  EFEC  F017         	goto	u3911
 14292   002FD4  EFEE  F017         	goto	u3910
 14293   002FD8                     u3911:
 14294   002FD8  EFF2  F017         	goto	l1297
 14295   002FDC                     u3910:
 14296   002FDC                     l4376:
 14297   002FDC  0E01               	movlw	1
 14298   002FDE  6E22               	movwf	___flmul@aexp^0,c
 14299   002FE0  EFFB  F017         	goto	l1296
 14300   002FE4                     l1297:
 14301   002FE4  A024               	btfss	___flmul@prod^0,0,c
 14302   002FE6  EFF7  F017         	goto	u3921
 14303   002FEA  EFF9  F017         	goto	u3920
 14304   002FEE                     u3921:
 14305   002FEE  EFFB  F017         	goto	l1296
 14306   002FF2                     u3920:
 14307   002FF2  EFEE  F017         	goto	l4376
 14308   002FF6                     l1296:
 14309   002FF6  5022               	movf	___flmul@aexp^0,w,c
 14310   002FF8  B4D8               	btfsc	status,2,c
 14311   002FFA  EF01  F018         	goto	u3931
 14312   002FFE  EF03  F018         	goto	u3930
 14313   003002                     u3931:
 14314   003002  EF27  F018         	goto	l4388
 14315   003006                     u3930:
 14316   003006  0E01               	movlw	1
 14317   003008  2624               	addwf	___flmul@prod^0,f,c
 14318   00300A  0E00               	movlw	0
 14319   00300C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14320   00300E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14321   003010  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14322   003012  A027               	btfss	(___flmul@prod+3)^0,0,c
 14323   003014  EF0E  F018         	goto	u3941
 14324   003018  EF10  F018         	goto	u3940
 14325   00301C                     u3941:
 14326   00301C  EF27  F018         	goto	l4388
 14327   003020                     u3940:
 14328   003020  C024  F019         	movff	___flmul@prod,??___flmul
 14329   003024  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14330   003028  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14331   00302C  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14332   003030  341C               	rlcf	(??___flmul+3)^0,w,c
 14333   003032  321C               	rrcf	(??___flmul+3)^0,f,c
 14334   003034  321B               	rrcf	(??___flmul+2)^0,f,c
 14335   003036  321A               	rrcf	(??___flmul+1)^0,f,c
 14336   003038  3219               	rrcf	??___flmul^0,f,c
 14337   00303A  C019  F024         	movff	??___flmul,___flmul@prod
 14338   00303E  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14339   003042  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14340   003046  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14341   00304A  4A28               	infsnz	___flmul@temp^0,f,c
 14342   00304C  2A29               	incf	(___flmul@temp+1)^0,f,c
 14343   00304E                     l4388:
 14344   00304E  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14345   003050  EF32  F018         	goto	u3951
 14346   003054  5029               	movf	(___flmul@temp+1)^0,w,c
 14347   003056  E108               	bnz	u3950
 14348   003058  2828               	incf	___flmul@temp^0,w,c
 14349   00305A  A0D8               	btfss	status,0,c
 14350   00305C  EF32  F018         	goto	u3951
 14351   003060  EF34  F018         	goto	u3950
 14352   003064                     u3951:
 14353   003064  EF3E  F018         	goto	l4392
 14354   003068                     u3950:
 14355   003068  0E00               	movlw	0
 14356   00306A  6E24               	movwf	___flmul@prod^0,c
 14357   00306C  0E00               	movlw	0
 14358   00306E  6E25               	movwf	(___flmul@prod+1)^0,c
 14359   003070  0E80               	movlw	128
 14360   003072  6E26               	movwf	(___flmul@prod+2)^0,c
 14361   003074  0E7F               	movlw	127
 14362   003076  6E27               	movwf	(___flmul@prod+3)^0,c
 14363   003078  EF6C  F018         	goto	l4404
 14364   00307C                     l4392:
 14365   00307C  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14366   00307E  EF4B  F018         	goto	u3960
 14367   003082  5029               	movf	(___flmul@temp+1)^0,w,c
 14368   003084  E106               	bnz	u3961
 14369   003086  0428               	decf	___flmul@temp^0,w,c
 14370   003088  B0D8               	btfsc	status,0,c
 14371   00308A  EF49  F018         	goto	u3961
 14372   00308E  EF4B  F018         	goto	u3960
 14373   003092                     u3961:
 14374   003092  EF57  F018         	goto	l1304
 14375   003096                     u3960:
 14376   003096  0E00               	movlw	0
 14377   003098  6E24               	movwf	___flmul@prod^0,c
 14378   00309A  0E00               	movlw	0
 14379   00309C  6E25               	movwf	(___flmul@prod+1)^0,c
 14380   00309E  0E00               	movlw	0
 14381   0030A0  6E26               	movwf	(___flmul@prod+2)^0,c
 14382   0030A2  0E00               	movlw	0
 14383   0030A4  6E27               	movwf	(___flmul@prod+3)^0,c
 14384   0030A6  0E00               	movlw	0
 14385   0030A8  6E1D               	movwf	___flmul@sign^0,c
 14386   0030AA  EF6C  F018         	goto	l4404
 14387   0030AE                     l1304:
 14388   0030AE  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14389   0030B2  0EFF               	movlw	255
 14390   0030B4  1624               	andwf	___flmul@prod^0,f,c
 14391   0030B6  0EFF               	movlw	255
 14392   0030B8  1625               	andwf	(___flmul@prod+1)^0,f,c
 14393   0030BA  0E7F               	movlw	127
 14394   0030BC  1626               	andwf	(___flmul@prod+2)^0,f,c
 14395   0030BE  0E00               	movlw	0
 14396   0030C0  1627               	andwf	(___flmul@prod+3)^0,f,c
 14397   0030C2  A023               	btfss	___flmul@bexp^0,0,c
 14398   0030C4  EF66  F018         	goto	u3971
 14399   0030C8  EF68  F018         	goto	u3970
 14400   0030CC                     u3971:
 14401   0030CC  EF69  F018         	goto	l4402
 14402   0030D0                     u3970:
 14403   0030D0  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14404   0030D2                     l4402:
 14405   0030D2  90D8               	bcf	status,0,c
 14406   0030D4  3023               	rrcf	___flmul@bexp^0,w,c
 14407   0030D6  6E27               	movwf	(___flmul@prod+3)^0,c
 14408   0030D8                     l4404:
 14409   0030D8  501D               	movf	___flmul@sign^0,w,c
 14410   0030DA  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14411   0030DC  C024  F011         	movff	___flmul@prod,?___flmul
 14412   0030E0  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14413   0030E4  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14414   0030E8  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14415   0030EC                     l1291:
 14416   0030EC  0012               	return		;funcret
 14417   0030EE                     __end_of___flmul:
 14418                           	callstack 0
 14419                           
 14420 ;; *************** function ___flge *****************
 14421 ;; Defined at:
 14422 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14423 ;; Parameters:    Size  Location     Type
 14424 ;;  ff1             4   41[COMRAM] unsigned char 
 14425 ;;  ff2             4   45[COMRAM] unsigned char 
 14426 ;; Auto vars:     Size  Location     Type
 14427 ;;		None
 14428 ;; Return value:  Size  Location     Type
 14429 ;;		None               void
 14430 ;; Registers used:
 14431 ;;		wreg, status,2, status,0
 14432 ;; Tracked objects:
 14433 ;;		On entry : 0/0
 14434 ;;		On exit  : 0/0
 14435 ;;		Unchanged: 0/0
 14436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14437 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14439 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14440 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14441 ;;Total ram usage:       12 bytes
 14442 ;; Hardware stack levels used: 1
 14443 ;; Hardware stack levels required when called: 1
 14444 ;; This function calls:
 14445 ;;		Nothing
 14446 ;; This function is called by:
 14447 ;;		_Colour_decider
 14448 ;;		_efgtoa
 14449 ;; This function uses a non-reentrant model
 14450 ;;
 14451                           
 14452                           	psect	text76
 14453   004B1E                     __ptext76:
 14454                           	callstack 0
 14455   004B1E                     ___flge:
 14456                           	callstack 25
 14457   004B1E  0E00               	movlw	0
 14458   004B20  142A               	andwf	___flge@ff1^0,w,c
 14459   004B22  6E32               	movwf	??___flge^0,c
 14460   004B24  0E00               	movlw	0
 14461   004B26  142B               	andwf	(___flge@ff1+1)^0,w,c
 14462   004B28  6E33               	movwf	(??___flge+1)^0,c
 14463   004B2A  0E80               	movlw	128
 14464   004B2C  142C               	andwf	(___flge@ff1+2)^0,w,c
 14465   004B2E  6E34               	movwf	(??___flge+2)^0,c
 14466   004B30  0E7F               	movlw	127
 14467   004B32  142D               	andwf	(___flge@ff1+3)^0,w,c
 14468   004B34  6E35               	movwf	(??___flge+3)^0,c
 14469   004B36  5032               	movf	??___flge^0,w,c
 14470   004B38  1033               	iorwf	(??___flge+1)^0,w,c
 14471   004B3A  1034               	iorwf	(??___flge+2)^0,w,c
 14472   004B3C  1035               	iorwf	(??___flge+3)^0,w,c
 14473   004B3E  A4D8               	btfss	status,2,c
 14474   004B40  EFA4  F025         	goto	u4011
 14475   004B44  EFA6  F025         	goto	u4010
 14476   004B48                     u4011:
 14477   004B48  EFAE  F025         	goto	l4436
 14478   004B4C                     u4010:
 14479   004B4C  0E00               	movlw	0
 14480   004B4E  6E2A               	movwf	___flge@ff1^0,c
 14481   004B50  0E00               	movlw	0
 14482   004B52  6E2B               	movwf	(___flge@ff1+1)^0,c
 14483   004B54  0E00               	movlw	0
 14484   004B56  6E2C               	movwf	(___flge@ff1+2)^0,c
 14485   004B58  0E00               	movlw	0
 14486   004B5A  6E2D               	movwf	(___flge@ff1+3)^0,c
 14487   004B5C                     l4436:
 14488   004B5C  0E00               	movlw	0
 14489   004B5E  142E               	andwf	___flge@ff2^0,w,c
 14490   004B60  6E32               	movwf	??___flge^0,c
 14491   004B62  0E00               	movlw	0
 14492   004B64  142F               	andwf	(___flge@ff2+1)^0,w,c
 14493   004B66  6E33               	movwf	(??___flge+1)^0,c
 14494   004B68  0E80               	movlw	128
 14495   004B6A  1430               	andwf	(___flge@ff2+2)^0,w,c
 14496   004B6C  6E34               	movwf	(??___flge+2)^0,c
 14497   004B6E  0E7F               	movlw	127
 14498   004B70  1431               	andwf	(___flge@ff2+3)^0,w,c
 14499   004B72  6E35               	movwf	(??___flge+3)^0,c
 14500   004B74  5032               	movf	??___flge^0,w,c
 14501   004B76  1033               	iorwf	(??___flge+1)^0,w,c
 14502   004B78  1034               	iorwf	(??___flge+2)^0,w,c
 14503   004B7A  1035               	iorwf	(??___flge+3)^0,w,c
 14504   004B7C  A4D8               	btfss	status,2,c
 14505   004B7E  EFC3  F025         	goto	u4021
 14506   004B82  EFC5  F025         	goto	u4020
 14507   004B86                     u4021:
 14508   004B86  EFCD  F025         	goto	l4440
 14509   004B8A                     u4020:
 14510   004B8A  0E00               	movlw	0
 14511   004B8C  6E2E               	movwf	___flge@ff2^0,c
 14512   004B8E  0E00               	movlw	0
 14513   004B90  6E2F               	movwf	(___flge@ff2+1)^0,c
 14514   004B92  0E00               	movlw	0
 14515   004B94  6E30               	movwf	(___flge@ff2+2)^0,c
 14516   004B96  0E00               	movlw	0
 14517   004B98  6E31               	movwf	(___flge@ff2+3)^0,c
 14518   004B9A                     l4440:
 14519   004B9A  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14520   004B9C  EFD2  F025         	goto	u4031
 14521   004BA0  EFD4  F025         	goto	u4030
 14522   004BA4                     u4031:
 14523   004BA4  EFDD  F025         	goto	l4444
 14524   004BA8                     u4030:
 14525   004BA8  6C2A               	negf	___flge@ff1^0,c
 14526   004BAA  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14527   004BAC  B0D8               	btfsc	status,0,c
 14528   004BAE  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14529   004BB0  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14530   004BB2  B0D8               	btfsc	status,0,c
 14531   004BB4  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14532   004BB6  0E80               	movlw	128
 14533   004BB8  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14534   004BBA                     l4444:
 14535   004BBA  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14536   004BBC  EFE2  F025         	goto	u4041
 14537   004BC0  EFE4  F025         	goto	u4040
 14538   004BC4                     u4041:
 14539   004BC4  EFED  F025         	goto	l938
 14540   004BC8                     u4040:
 14541   004BC8  6C2E               	negf	___flge@ff2^0,c
 14542   004BCA  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14543   004BCC  B0D8               	btfsc	status,0,c
 14544   004BCE  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14545   004BD0  1E30               	comf	(___flge@ff2+2)^0,f,c
 14546   004BD2  B0D8               	btfsc	status,0,c
 14547   004BD4  2A30               	incf	(___flge@ff2+2)^0,f,c
 14548   004BD6  0E80               	movlw	128
 14549   004BD8  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14550   004BDA                     l938:
 14551   004BDA  0E00               	movlw	0
 14552   004BDC  1A2A               	xorwf	___flge@ff1^0,f,c
 14553   004BDE  0E00               	movlw	0
 14554   004BE0  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14555   004BE2  0E00               	movlw	0
 14556   004BE4  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14557   004BE6  0E80               	movlw	128
 14558   004BE8  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14559   004BEA  0E00               	movlw	0
 14560   004BEC  1A2E               	xorwf	___flge@ff2^0,f,c
 14561   004BEE  0E00               	movlw	0
 14562   004BF0  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14563   004BF2  0E00               	movlw	0
 14564   004BF4  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14565   004BF6  0E80               	movlw	128
 14566   004BF8  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14567   004BFA  502E               	movf	___flge@ff2^0,w,c
 14568   004BFC  5C2A               	subwf	___flge@ff1^0,w,c
 14569   004BFE  502F               	movf	(___flge@ff2+1)^0,w,c
 14570   004C00  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14571   004C02  5030               	movf	(___flge@ff2+2)^0,w,c
 14572   004C04  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14573   004C06  5031               	movf	(___flge@ff2+3)^0,w,c
 14574   004C08  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14575   004C0A  B0D8               	btfsc	status,0,c
 14576   004C0C  EF0A  F026         	goto	u4051
 14577   004C10  EF0C  F026         	goto	u4050
 14578   004C14                     u4051:
 14579   004C14  EF0F  F026         	goto	l4450
 14580   004C18                     u4050:
 14581   004C18  90D8               	bcf	status,0,c
 14582   004C1A  EF10  F026         	goto	l943
 14583   004C1E                     l4450:
 14584   004C1E  80D8               	bsf	status,0,c
 14585   004C20                     l943:
 14586   004C20  0012               	return		;funcret
 14587   004C22                     __end_of___flge:
 14588                           	callstack 0
 14589                           
 14590 ;; *************** function ___fleq *****************
 14591 ;; Defined at:
 14592 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14593 ;; Parameters:    Size  Location     Type
 14594 ;;  ff1             4   49[COMRAM] unsigned char 
 14595 ;;  ff2             4   53[COMRAM] unsigned char 
 14596 ;; Auto vars:     Size  Location     Type
 14597 ;;		None
 14598 ;; Return value:  Size  Location     Type
 14599 ;;		None               void
 14600 ;; Registers used:
 14601 ;;		wreg, status,2, status,0
 14602 ;; Tracked objects:
 14603 ;;		On entry : 0/0
 14604 ;;		On exit  : 0/0
 14605 ;;		Unchanged: 0/0
 14606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14607 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14609 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14610 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14611 ;;Total ram usage:       12 bytes
 14612 ;; Hardware stack levels used: 1
 14613 ;; Hardware stack levels required when called: 1
 14614 ;; This function calls:
 14615 ;;		Nothing
 14616 ;; This function is called by:
 14617 ;;		_Colour_decider
 14618 ;;		_efgtoa
 14619 ;; This function uses a non-reentrant model
 14620 ;;
 14621                           
 14622                           	psect	text77
 14623   005000                     __ptext77:
 14624                           	callstack 0
 14625   005000                     ___fleq:
 14626                           	callstack 25
 14627   005000  0E00               	movlw	0
 14628   005002  1432               	andwf	___fleq@ff1^0,w,c
 14629   005004  6E3A               	movwf	??___fleq^0,c
 14630   005006  0E00               	movlw	0
 14631   005008  1433               	andwf	(___fleq@ff1+1)^0,w,c
 14632   00500A  6E3B               	movwf	(??___fleq+1)^0,c
 14633   00500C  0E80               	movlw	128
 14634   00500E  1434               	andwf	(___fleq@ff1+2)^0,w,c
 14635   005010  6E3C               	movwf	(??___fleq+2)^0,c
 14636   005012  0E7F               	movlw	127
 14637   005014  1435               	andwf	(___fleq@ff1+3)^0,w,c
 14638   005016  6E3D               	movwf	(??___fleq+3)^0,c
 14639   005018  503A               	movf	??___fleq^0,w,c
 14640   00501A  103B               	iorwf	(??___fleq+1)^0,w,c
 14641   00501C  103C               	iorwf	(??___fleq+2)^0,w,c
 14642   00501E  103D               	iorwf	(??___fleq+3)^0,w,c
 14643   005020  A4D8               	btfss	status,2,c
 14644   005022  EF15  F028         	goto	u3981
 14645   005026  EF17  F028         	goto	u3980
 14646   00502A                     u3981:
 14647   00502A  EF1F  F028         	goto	l4420
 14648   00502E                     u3980:
 14649   00502E  0E00               	movlw	0
 14650   005030  6E32               	movwf	___fleq@ff1^0,c
 14651   005032  0E00               	movlw	0
 14652   005034  6E33               	movwf	(___fleq@ff1+1)^0,c
 14653   005036  0E00               	movlw	0
 14654   005038  6E34               	movwf	(___fleq@ff1+2)^0,c
 14655   00503A  0E00               	movlw	0
 14656   00503C  6E35               	movwf	(___fleq@ff1+3)^0,c
 14657   00503E                     l4420:
 14658   00503E  0E00               	movlw	0
 14659   005040  1436               	andwf	___fleq@ff2^0,w,c
 14660   005042  6E3A               	movwf	??___fleq^0,c
 14661   005044  0E00               	movlw	0
 14662   005046  1437               	andwf	(___fleq@ff2+1)^0,w,c
 14663   005048  6E3B               	movwf	(??___fleq+1)^0,c
 14664   00504A  0E80               	movlw	128
 14665   00504C  1438               	andwf	(___fleq@ff2+2)^0,w,c
 14666   00504E  6E3C               	movwf	(??___fleq+2)^0,c
 14667   005050  0E7F               	movlw	127
 14668   005052  1439               	andwf	(___fleq@ff2+3)^0,w,c
 14669   005054  6E3D               	movwf	(??___fleq+3)^0,c
 14670   005056  503A               	movf	??___fleq^0,w,c
 14671   005058  103B               	iorwf	(??___fleq+1)^0,w,c
 14672   00505A  103C               	iorwf	(??___fleq+2)^0,w,c
 14673   00505C  103D               	iorwf	(??___fleq+3)^0,w,c
 14674   00505E  A4D8               	btfss	status,2,c
 14675   005060  EF34  F028         	goto	u3991
 14676   005064  EF36  F028         	goto	u3990
 14677   005068                     u3991:
 14678   005068  EF3E  F028         	goto	l4424
 14679   00506C                     u3990:
 14680   00506C  0E00               	movlw	0
 14681   00506E  6E36               	movwf	___fleq@ff2^0,c
 14682   005070  0E00               	movlw	0
 14683   005072  6E37               	movwf	(___fleq@ff2+1)^0,c
 14684   005074  0E00               	movlw	0
 14685   005076  6E38               	movwf	(___fleq@ff2+2)^0,c
 14686   005078  0E00               	movlw	0
 14687   00507A  6E39               	movwf	(___fleq@ff2+3)^0,c
 14688   00507C                     l4424:
 14689   00507C  5036               	movf	___fleq@ff2^0,w,c
 14690   00507E  1832               	xorwf	___fleq@ff1^0,w,c
 14691   005080  E10F               	bnz	u4000
 14692   005082  5037               	movf	(___fleq@ff2+1)^0,w,c
 14693   005084  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 14694   005086  E10C               	bnz	u4000
 14695   005088  5038               	movf	(___fleq@ff2+2)^0,w,c
 14696   00508A  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 14697   00508C  E109               	bnz	u4000
 14698   00508E  5039               	movf	(___fleq@ff2+3)^0,w,c
 14699   005090  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 14700   005092  B4D8               	btfsc	status,2,c
 14701   005094  EF4E  F028         	goto	u4001
 14702   005098  EF50  F028         	goto	u4000
 14703   00509C                     u4001:
 14704   00509C  EF53  F028         	goto	l4428
 14705   0050A0                     u4000:
 14706   0050A0  90D8               	bcf	status,0,c
 14707   0050A2  EF54  F028         	goto	l932
 14708   0050A6                     l4428:
 14709   0050A6  80D8               	bsf	status,0,c
 14710   0050A8                     l932:
 14711   0050A8  0012               	return		;funcret
 14712   0050AA                     __end_of___fleq:
 14713                           	callstack 0
 14714                           
 14715 ;; *************** function ___fldiv *****************
 14716 ;; Defined at:
 14717 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14718 ;; Parameters:    Size  Location     Type
 14719 ;;  b               4   49[COMRAM] unsigned char 
 14720 ;;  a               4   53[COMRAM] unsigned char 
 14721 ;; Auto vars:     Size  Location     Type
 14722 ;;  grs             4   68[COMRAM] unsigned long 
 14723 ;;  rem             4   61[COMRAM] unsigned long 
 14724 ;;  new_exp         2   66[COMRAM] short 
 14725 ;;  aexp            1   73[COMRAM] unsigned char 
 14726 ;;  bexp            1   72[COMRAM] unsigned char 
 14727 ;;  sign            1   65[COMRAM] unsigned char 
 14728 ;; Return value:  Size  Location     Type
 14729 ;;                  4   49[COMRAM] unsigned char 
 14730 ;; Registers used:
 14731 ;;		wreg, status,2, status,0
 14732 ;; Tracked objects:
 14733 ;;		On entry : 0/0
 14734 ;;		On exit  : 0/0
 14735 ;;		Unchanged: 0/0
 14736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14737 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14738 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14739 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14740 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14741 ;;Total ram usage:       25 bytes
 14742 ;; Hardware stack levels used: 1
 14743 ;; Hardware stack levels required when called: 1
 14744 ;; This function calls:
 14745 ;;		Nothing
 14746 ;; This function is called by:
 14747 ;;		_colour_rel
 14748 ;;		_Colour_decider
 14749 ;;		_efgtoa
 14750 ;; This function uses a non-reentrant model
 14751 ;;
 14752                           
 14753                           	psect	text78
 14754   0030EE                     __ptext78:
 14755                           	callstack 0
 14756   0030EE                     ___fldiv:
 14757                           	callstack 25
 14758   0030EE  5035               	movf	(___fldiv@b+3)^0,w,c
 14759   0030F0  0B80               	andlw	128
 14760   0030F2  6E42               	movwf	___fldiv@sign^0,c
 14761   0030F4  5035               	movf	(___fldiv@b+3)^0,w,c
 14762   0030F6  2435               	addwf	(___fldiv@b+3)^0,w,c
 14763   0030F8  6E49               	movwf	___fldiv@bexp^0,c
 14764   0030FA  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14765   0030FC  EF82  F018         	goto	u3561
 14766   003100  EF84  F018         	goto	u3560
 14767   003104                     u3561:
 14768   003104  EF85  F018         	goto	l4148
 14769   003108                     u3560:
 14770   003108  8049               	bsf	___fldiv@bexp^0,0,c
 14771   00310A                     l4148:
 14772   00310A  5049               	movf	___fldiv@bexp^0,w,c
 14773   00310C  B4D8               	btfsc	status,2,c
 14774   00310E  EF8B  F018         	goto	u3571
 14775   003112  EF8D  F018         	goto	u3570
 14776   003116                     u3571:
 14777   003116  EFA2  F018         	goto	l4158
 14778   00311A                     u3570:
 14779   00311A  2849               	incf	___fldiv@bexp^0,w,c
 14780   00311C  A4D8               	btfss	status,2,c
 14781   00311E  EF93  F018         	goto	u3581
 14782   003122  EF95  F018         	goto	u3580
 14783   003126                     u3581:
 14784   003126  EF9D  F018         	goto	l4154
 14785   00312A                     u3580:
 14786   00312A  0E00               	movlw	0
 14787   00312C  6E32               	movwf	___fldiv@b^0,c
 14788   00312E  0E00               	movlw	0
 14789   003130  6E33               	movwf	(___fldiv@b+1)^0,c
 14790   003132  0E00               	movlw	0
 14791   003134  6E34               	movwf	(___fldiv@b+2)^0,c
 14792   003136  0E00               	movlw	0
 14793   003138  6E35               	movwf	(___fldiv@b+3)^0,c
 14794   00313A                     l4154:
 14795   00313A  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14796   00313C  0E00               	movlw	0
 14797   00313E  6E35               	movwf	(___fldiv@b+3)^0,c
 14798   003140  EFAA  F018         	goto	l4160
 14799   003144                     l4158:
 14800   003144  0E00               	movlw	0
 14801   003146  6E32               	movwf	___fldiv@b^0,c
 14802   003148  0E00               	movlw	0
 14803   00314A  6E33               	movwf	(___fldiv@b+1)^0,c
 14804   00314C  0E00               	movlw	0
 14805   00314E  6E34               	movwf	(___fldiv@b+2)^0,c
 14806   003150  0E00               	movlw	0
 14807   003152  6E35               	movwf	(___fldiv@b+3)^0,c
 14808   003154                     l4160:
 14809   003154  5039               	movf	(___fldiv@a+3)^0,w,c
 14810   003156  0B80               	andlw	128
 14811   003158  1A42               	xorwf	___fldiv@sign^0,f,c
 14812   00315A  5039               	movf	(___fldiv@a+3)^0,w,c
 14813   00315C  2439               	addwf	(___fldiv@a+3)^0,w,c
 14814   00315E  6E4A               	movwf	___fldiv@aexp^0,c
 14815   003160  AE38               	btfss	(___fldiv@a+2)^0,7,c
 14816   003162  EFB5  F018         	goto	u3591
 14817   003166  EFB7  F018         	goto	u3590
 14818   00316A                     u3591:
 14819   00316A  EFB8  F018         	goto	l4168
 14820   00316E                     u3590:
 14821   00316E  804A               	bsf	___fldiv@aexp^0,0,c
 14822   003170                     l4168:
 14823   003170  504A               	movf	___fldiv@aexp^0,w,c
 14824   003172  B4D8               	btfsc	status,2,c
 14825   003174  EFBE  F018         	goto	u3601
 14826   003178  EFC0  F018         	goto	u3600
 14827   00317C                     u3601:
 14828   00317C  EFD5  F018         	goto	l4178
 14829   003180                     u3600:
 14830   003180  284A               	incf	___fldiv@aexp^0,w,c
 14831   003182  A4D8               	btfss	status,2,c
 14832   003184  EFC6  F018         	goto	u3611
 14833   003188  EFC8  F018         	goto	u3610
 14834   00318C                     u3611:
 14835   00318C  EFD0  F018         	goto	l4174
 14836   003190                     u3610:
 14837   003190  0E00               	movlw	0
 14838   003192  6E36               	movwf	___fldiv@a^0,c
 14839   003194  0E00               	movlw	0
 14840   003196  6E37               	movwf	(___fldiv@a+1)^0,c
 14841   003198  0E00               	movlw	0
 14842   00319A  6E38               	movwf	(___fldiv@a+2)^0,c
 14843   00319C  0E00               	movlw	0
 14844   00319E  6E39               	movwf	(___fldiv@a+3)^0,c
 14845   0031A0                     l4174:
 14846   0031A0  8E38               	bsf	(___fldiv@a+2)^0,7,c
 14847   0031A2  0E00               	movlw	0
 14848   0031A4  6E39               	movwf	(___fldiv@a+3)^0,c
 14849   0031A6  EFDD  F018         	goto	l4180
 14850   0031AA                     l4178:
 14851   0031AA  0E00               	movlw	0
 14852   0031AC  6E36               	movwf	___fldiv@a^0,c
 14853   0031AE  0E00               	movlw	0
 14854   0031B0  6E37               	movwf	(___fldiv@a+1)^0,c
 14855   0031B2  0E00               	movlw	0
 14856   0031B4  6E38               	movwf	(___fldiv@a+2)^0,c
 14857   0031B6  0E00               	movlw	0
 14858   0031B8  6E39               	movwf	(___fldiv@a+3)^0,c
 14859   0031BA                     l4180:
 14860   0031BA  5036               	movf	___fldiv@a^0,w,c
 14861   0031BC  1037               	iorwf	(___fldiv@a+1)^0,w,c
 14862   0031BE  1038               	iorwf	(___fldiv@a+2)^0,w,c
 14863   0031C0  1039               	iorwf	(___fldiv@a+3)^0,w,c
 14864   0031C2  A4D8               	btfss	status,2,c
 14865   0031C4  EFE6  F018         	goto	u3621
 14866   0031C8  EFE8  F018         	goto	u3620
 14867   0031CC                     u3621:
 14868   0031CC  EF00  F019         	goto	l4192
 14869   0031D0                     u3620:
 14870   0031D0  0E00               	movlw	0
 14871   0031D2  6E32               	movwf	___fldiv@b^0,c
 14872   0031D4  0E00               	movlw	0
 14873   0031D6  6E33               	movwf	(___fldiv@b+1)^0,c
 14874   0031D8  0E00               	movlw	0
 14875   0031DA  6E34               	movwf	(___fldiv@b+2)^0,c
 14876   0031DC  0E00               	movlw	0
 14877   0031DE  6E35               	movwf	(___fldiv@b+3)^0,c
 14878   0031E0  0E80               	movlw	128
 14879   0031E2  1234               	iorwf	(___fldiv@b+2)^0,f,c
 14880   0031E4  0E7F               	movlw	127
 14881   0031E6  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14882   0031E8                     l4186:
 14883   0031E8  5042               	movf	___fldiv@sign^0,w,c
 14884   0031EA  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14885   0031EC  C032  F032         	movff	___fldiv@b,?___fldiv
 14886   0031F0  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 14887   0031F4  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 14888   0031F8  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 14889   0031FC  EF43  F01A         	goto	l1255
 14890   003200                     l4192:
 14891   003200  5049               	movf	___fldiv@bexp^0,w,c
 14892   003202  A4D8               	btfss	status,2,c
 14893   003204  EF06  F019         	goto	u3631
 14894   003208  EF08  F019         	goto	u3630
 14895   00320C                     u3631:
 14896   00320C  EF12  F019         	goto	l4200
 14897   003210                     u3630:
 14898   003210  0E00               	movlw	0
 14899   003212  6E32               	movwf	?___fldiv^0,c
 14900   003214  0E00               	movlw	0
 14901   003216  6E33               	movwf	(?___fldiv+1)^0,c
 14902   003218  0E00               	movlw	0
 14903   00321A  6E34               	movwf	(?___fldiv+2)^0,c
 14904   00321C  0E00               	movlw	0
 14905   00321E  6E35               	movwf	(?___fldiv+3)^0,c
 14906   003220  EF43  F01A         	goto	l1255
 14907   003224                     l4200:
 14908   003224  504A               	movf	___fldiv@aexp^0,w,c
 14909   003226  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 14910   00322A  6A3B               	clrf	(??___fldiv+1)^0,c
 14911   00322C  5E3A               	subwf	??___fldiv^0,f,c
 14912   00322E  0E00               	movlw	0
 14913   003230  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 14914   003232  0E7F               	movlw	127
 14915   003234  243A               	addwf	??___fldiv^0,w,c
 14916   003236  6E43               	movwf	___fldiv@new_exp^0,c
 14917   003238  0E00               	movlw	0
 14918   00323A  203B               	addwfc	(??___fldiv+1)^0,w,c
 14919   00323C  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14920   00323E  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 14921   003242  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 14922   003246  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 14923   00324A  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 14924   00324E  0E00               	movlw	0
 14925   003250  6E32               	movwf	___fldiv@b^0,c
 14926   003252  0E00               	movlw	0
 14927   003254  6E33               	movwf	(___fldiv@b+1)^0,c
 14928   003256  0E00               	movlw	0
 14929   003258  6E34               	movwf	(___fldiv@b+2)^0,c
 14930   00325A  0E00               	movlw	0
 14931   00325C  6E35               	movwf	(___fldiv@b+3)^0,c
 14932   00325E  0E00               	movlw	0
 14933   003260  6E45               	movwf	___fldiv@grs^0,c
 14934   003262  0E00               	movlw	0
 14935   003264  6E46               	movwf	(___fldiv@grs+1)^0,c
 14936   003266  0E00               	movlw	0
 14937   003268  6E47               	movwf	(___fldiv@grs+2)^0,c
 14938   00326A  0E00               	movlw	0
 14939   00326C  6E48               	movwf	(___fldiv@grs+3)^0,c
 14940   00326E  0E00               	movlw	0
 14941   003270  6E4A               	movwf	___fldiv@aexp^0,c
 14942   003272  EF73  F019         	goto	l1257
 14943   003276                     l4210:
 14944   003276  504A               	movf	___fldiv@aexp^0,w,c
 14945   003278  B4D8               	btfsc	status,2,c
 14946   00327A  EF41  F019         	goto	u3641
 14947   00327E  EF43  F019         	goto	u3640
 14948   003282                     u3641:
 14949   003282  EF5A  F019         	goto	l4218
 14950   003286                     u3640:
 14951   003286  90D8               	bcf	status,0,c
 14952   003288  363E               	rlcf	___fldiv@rem^0,f,c
 14953   00328A  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 14954   00328C  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 14955   00328E  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 14956   003290  90D8               	bcf	status,0,c
 14957   003292  3632               	rlcf	___fldiv@b^0,f,c
 14958   003294  3633               	rlcf	(___fldiv@b+1)^0,f,c
 14959   003296  3634               	rlcf	(___fldiv@b+2)^0,f,c
 14960   003298  3635               	rlcf	(___fldiv@b+3)^0,f,c
 14961   00329A  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 14962   00329C  EF52  F019         	goto	u3651
 14963   0032A0  EF54  F019         	goto	u3650
 14964   0032A4                     u3651:
 14965   0032A4  EF55  F019         	goto	l1260
 14966   0032A8                     u3650:
 14967   0032A8  8032               	bsf	___fldiv@b^0,0,c
 14968   0032AA                     l1260:
 14969   0032AA  90D8               	bcf	status,0,c
 14970   0032AC  3645               	rlcf	___fldiv@grs^0,f,c
 14971   0032AE  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 14972   0032B0  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 14973   0032B2  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 14974   0032B4                     l4218:
 14975   0032B4  5036               	movf	___fldiv@a^0,w,c
 14976   0032B6  5C3E               	subwf	___fldiv@rem^0,w,c
 14977   0032B8  5037               	movf	(___fldiv@a+1)^0,w,c
 14978   0032BA  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 14979   0032BC  5038               	movf	(___fldiv@a+2)^0,w,c
 14980   0032BE  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 14981   0032C0  5039               	movf	(___fldiv@a+3)^0,w,c
 14982   0032C2  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 14983   0032C4  A0D8               	btfss	status,0,c
 14984   0032C6  EF67  F019         	goto	u3661
 14985   0032CA  EF69  F019         	goto	u3660
 14986   0032CE                     u3661:
 14987   0032CE  EF72  F019         	goto	l4224
 14988   0032D2                     u3660:
 14989   0032D2  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 14990   0032D4  5036               	movf	___fldiv@a^0,w,c
 14991   0032D6  5E3E               	subwf	___fldiv@rem^0,f,c
 14992   0032D8  5037               	movf	(___fldiv@a+1)^0,w,c
 14993   0032DA  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 14994   0032DC  5038               	movf	(___fldiv@a+2)^0,w,c
 14995   0032DE  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 14996   0032E0  5039               	movf	(___fldiv@a+3)^0,w,c
 14997   0032E2  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 14998   0032E4                     l4224:
 14999   0032E4  2A4A               	incf	___fldiv@aexp^0,f,c
 15000   0032E6                     l1257:
 15001   0032E6  0E19               	movlw	25
 15002   0032E8  644A               	cpfsgt	___fldiv@aexp^0,c
 15003   0032EA  EF79  F019         	goto	u3671
 15004   0032EE  EF7B  F019         	goto	u3670
 15005   0032F2                     u3671:
 15006   0032F2  EF3B  F019         	goto	l4210
 15007   0032F6                     u3670:
 15008   0032F6  503E               	movf	___fldiv@rem^0,w,c
 15009   0032F8  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15010   0032FA  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15011   0032FC  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15012   0032FE  B4D8               	btfsc	status,2,c
 15013   003300  EF84  F019         	goto	u3681
 15014   003304  EF86  F019         	goto	u3680
 15015   003308                     u3681:
 15016   003308  EF9E  F019         	goto	l4236
 15017   00330C                     u3680:
 15018   00330C  8045               	bsf	___fldiv@grs^0,0,c
 15019   00330E  EF9E  F019         	goto	l4236
 15020   003312                     l4230:
 15021   003312  90D8               	bcf	status,0,c
 15022   003314  3632               	rlcf	___fldiv@b^0,f,c
 15023   003316  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15024   003318  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15025   00331A  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15026   00331C  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15027   00331E  EF93  F019         	goto	u3691
 15028   003322  EF95  F019         	goto	u3690
 15029   003326                     u3691:
 15030   003326  EF96  F019         	goto	l1266
 15031   00332A                     u3690:
 15032   00332A  8032               	bsf	___fldiv@b^0,0,c
 15033   00332C                     l1266:
 15034   00332C  90D8               	bcf	status,0,c
 15035   00332E  3645               	rlcf	___fldiv@grs^0,f,c
 15036   003330  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15037   003332  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15038   003334  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15039   003336  0643               	decf	___fldiv@new_exp^0,f,c
 15040   003338  A0D8               	btfss	status,0,c
 15041   00333A  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15042   00333C                     l4236:
 15043   00333C  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15044   00333E  EFA3  F019         	goto	u3701
 15045   003342  EFA5  F019         	goto	u3700
 15046   003346                     u3701:
 15047   003346  EF89  F019         	goto	l4230
 15048   00334A                     u3700:
 15049   00334A  0E00               	movlw	0
 15050   00334C  6E4A               	movwf	___fldiv@aexp^0,c
 15051   00334E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15052   003350  EFAC  F019         	goto	u3711
 15053   003354  EFAE  F019         	goto	u3710
 15054   003358                     u3711:
 15055   003358  EFD2  F019         	goto	l1268
 15056   00335C                     u3710:
 15057   00335C  0EFF               	movlw	255
 15058   00335E  1445               	andwf	___fldiv@grs^0,w,c
 15059   003360  6E3A               	movwf	??___fldiv^0,c
 15060   003362  0EFF               	movlw	255
 15061   003364  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15062   003366  6E3B               	movwf	(??___fldiv+1)^0,c
 15063   003368  0EFF               	movlw	255
 15064   00336A  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15065   00336C  6E3C               	movwf	(??___fldiv+2)^0,c
 15066   00336E  0E7F               	movlw	127
 15067   003370  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15068   003372  6E3D               	movwf	(??___fldiv+3)^0,c
 15069   003374  503A               	movf	??___fldiv^0,w,c
 15070   003376  103B               	iorwf	(??___fldiv+1)^0,w,c
 15071   003378  103C               	iorwf	(??___fldiv+2)^0,w,c
 15072   00337A  103D               	iorwf	(??___fldiv+3)^0,w,c
 15073   00337C  B4D8               	btfsc	status,2,c
 15074   00337E  EFC3  F019         	goto	u3721
 15075   003382  EFC5  F019         	goto	u3720
 15076   003386                     u3721:
 15077   003386  EFC9  F019         	goto	l1269
 15078   00338A                     u3720:
 15079   00338A                     l4244:
 15080   00338A  0E01               	movlw	1
 15081   00338C  6E4A               	movwf	___fldiv@aexp^0,c
 15082   00338E  EFD2  F019         	goto	l1268
 15083   003392                     l1269:
 15084   003392  A032               	btfss	___fldiv@b^0,0,c
 15085   003394  EFCE  F019         	goto	u3731
 15086   003398  EFD0  F019         	goto	u3730
 15087   00339C                     u3731:
 15088   00339C  EFD2  F019         	goto	l1268
 15089   0033A0                     u3730:
 15090   0033A0  EFC5  F019         	goto	l4244
 15091   0033A4                     l1268:
 15092   0033A4  504A               	movf	___fldiv@aexp^0,w,c
 15093   0033A6  B4D8               	btfsc	status,2,c
 15094   0033A8  EFD8  F019         	goto	u3741
 15095   0033AC  EFDA  F019         	goto	u3740
 15096   0033B0                     u3741:
 15097   0033B0  EFFE  F019         	goto	l4256
 15098   0033B4                     u3740:
 15099   0033B4  0E01               	movlw	1
 15100   0033B6  2632               	addwf	___fldiv@b^0,f,c
 15101   0033B8  0E00               	movlw	0
 15102   0033BA  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15103   0033BC  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15104   0033BE  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15105   0033C0  A035               	btfss	(___fldiv@b+3)^0,0,c
 15106   0033C2  EFE5  F019         	goto	u3751
 15107   0033C6  EFE7  F019         	goto	u3750
 15108   0033CA                     u3751:
 15109   0033CA  EFFE  F019         	goto	l4256
 15110   0033CE                     u3750:
 15111   0033CE  C032  F03A         	movff	___fldiv@b,??___fldiv
 15112   0033D2  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15113   0033D6  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15114   0033DA  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15115   0033DE  343D               	rlcf	(??___fldiv+3)^0,w,c
 15116   0033E0  323D               	rrcf	(??___fldiv+3)^0,f,c
 15117   0033E2  323C               	rrcf	(??___fldiv+2)^0,f,c
 15118   0033E4  323B               	rrcf	(??___fldiv+1)^0,f,c
 15119   0033E6  323A               	rrcf	??___fldiv^0,f,c
 15120   0033E8  C03A  F032         	movff	??___fldiv,___fldiv@b
 15121   0033EC  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15122   0033F0  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15123   0033F4  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15124   0033F8  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15125   0033FA  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15126   0033FC                     l4256:
 15127   0033FC  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15128   0033FE  EF09  F01A         	goto	u3761
 15129   003402  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15130   003404  E108               	bnz	u3760
 15131   003406  2843               	incf	___fldiv@new_exp^0,w,c
 15132   003408  A0D8               	btfss	status,0,c
 15133   00340A  EF09  F01A         	goto	u3761
 15134   00340E  EF0B  F01A         	goto	u3760
 15135   003412                     u3761:
 15136   003412  EF16  F01A         	goto	l4260
 15137   003416                     u3760:
 15138   003416  0E00               	movlw	0
 15139   003418  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15140   00341A  6843               	setf	___fldiv@new_exp^0,c
 15141   00341C  0E00               	movlw	0
 15142   00341E  6E32               	movwf	___fldiv@b^0,c
 15143   003420  0E00               	movlw	0
 15144   003422  6E33               	movwf	(___fldiv@b+1)^0,c
 15145   003424  0E00               	movlw	0
 15146   003426  6E34               	movwf	(___fldiv@b+2)^0,c
 15147   003428  0E00               	movlw	0
 15148   00342A  6E35               	movwf	(___fldiv@b+3)^0,c
 15149   00342C                     l4260:
 15150   00342C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15151   00342E  EF23  F01A         	goto	u3770
 15152   003432  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15153   003434  E106               	bnz	u3771
 15154   003436  0443               	decf	___fldiv@new_exp^0,w,c
 15155   003438  B0D8               	btfsc	status,0,c
 15156   00343A  EF21  F01A         	goto	u3771
 15157   00343E  EF23  F01A         	goto	u3770
 15158   003442                     u3771:
 15159   003442  EF31  F01A         	goto	l4264
 15160   003446                     u3770:
 15161   003446  0E00               	movlw	0
 15162   003448  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15163   00344A  0E00               	movlw	0
 15164   00344C  6E43               	movwf	___fldiv@new_exp^0,c
 15165   00344E  0E00               	movlw	0
 15166   003450  6E32               	movwf	___fldiv@b^0,c
 15167   003452  0E00               	movlw	0
 15168   003454  6E33               	movwf	(___fldiv@b+1)^0,c
 15169   003456  0E00               	movlw	0
 15170   003458  6E34               	movwf	(___fldiv@b+2)^0,c
 15171   00345A  0E00               	movlw	0
 15172   00345C  6E35               	movwf	(___fldiv@b+3)^0,c
 15173   00345E  0E00               	movlw	0
 15174   003460  6E42               	movwf	___fldiv@sign^0,c
 15175   003462                     l4264:
 15176   003462  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15177   003466  A049               	btfss	___fldiv@bexp^0,0,c
 15178   003468  EF38  F01A         	goto	u3781
 15179   00346C  EF3A  F01A         	goto	u3780
 15180   003470                     u3781:
 15181   003470  EF3D  F01A         	goto	l4270
 15182   003474                     u3780:
 15183   003474  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15184   003476  EF3E  F01A         	goto	l4272
 15185   00347A                     l4270:
 15186   00347A  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15187   00347C                     l4272:
 15188   00347C  90D8               	bcf	status,0,c
 15189   00347E  3049               	rrcf	___fldiv@bexp^0,w,c
 15190   003480  6E35               	movwf	(___fldiv@b+3)^0,c
 15191   003482  EFF4  F018         	goto	l4186
 15192   003486                     l1255:
 15193   003486  0012               	return		;funcret
 15194   003488                     __end_of___fldiv:
 15195                           	callstack 0
 15196                           
 15197 ;; *************** function _HighISR *****************
 15198 ;; Defined at:
 15199 ;;		line 23 in file "interrupts.c"
 15200 ;; Parameters:    Size  Location     Type
 15201 ;;		None
 15202 ;; Auto vars:     Size  Location     Type
 15203 ;;		None
 15204 ;; Return value:  Size  Location     Type
 15205 ;;                  1    wreg      void 
 15206 ;; Registers used:
 15207 ;;		wreg, status,2
 15208 ;; Tracked objects:
 15209 ;;		On entry : 0/0
 15210 ;;		On exit  : 0/0
 15211 ;;		Unchanged: 0/0
 15212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15217 ;;Total ram usage:        0 bytes
 15218 ;; Hardware stack levels used: 1
 15219 ;; This function calls:
 15220 ;;		Nothing
 15221 ;; This function is called by:
 15222 ;;		Interrupt level 2
 15223 ;; This function uses a non-reentrant model
 15224 ;;
 15225                           
 15226                           	psect	intcode
 15227   000008                     __pintcode:
 15228                           	callstack 0
 15229   000008                     _HighISR:
 15230                           	callstack 22
 15231                           
 15232                           ;incstack = 0
 15233   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15234   00000A                     
 15235                           ;interrupts.c: 25:     if (PIR0bits.TMR0IF){
 15236   00000A  010E               	movlb	14	; () banked
 15237   00000C  AB33               	btfss	51,5,b	;volatile
 15238   00000E  EF0B  F000         	goto	i2u563_41
 15239   000012  EF0D  F000         	goto	i2u563_40
 15240   000016                     i2u563_41:
 15241   000016  EF18  F000         	goto	i2l225
 15242   00001A                     i2u563_40:
 15243   00001A                     
 15244                           ; BSR set to: 14
 15245                           ;interrupts.c: 26:         TMR0H=0;
 15246   00001A  0E00               	movlw	0
 15247   00001C  6ED4               	movwf	212,c	;volatile
 15248                           
 15249                           ;interrupts.c: 27:         TMR0L=0;
 15250   00001E  0E00               	movlw	0
 15251   000020  6ED3               	movwf	211,c	;volatile
 15252                           
 15253                           ;interrupts.c: 28:         lost_flag=1;
 15254   000022  0E00               	movlw	0
 15255   000024  0101               	movlb	1	; () banked
 15256   000026  6F19               	movwf	(_lost_flag+1)& (0+255),b
 15257   000028  0E01               	movlw	1
 15258   00002A  6F18               	movwf	_lost_flag& (0+255),b
 15259   00002C                     
 15260                           ; BSR set to: 1
 15261                           ;interrupts.c: 29:         PIR0bits.TMR0IF=0;
 15262   00002C  010E               	movlb	14	; () banked
 15263   00002E  9B33               	bcf	51,5,b	;volatile
 15264   000030                     i2l225:
 15265                           
 15266                           ; BSR set to: 14
 15267   000030  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15268   000032  0011               	retfie		f
 15269   000034                     __end_of_HighISR:
 15270                           	callstack 0
 15271                           
 15272                           	psect	rparam
 15273   000000                     
 15274                           	psect	temp
 15275   00005F                     btemp:
 15276                           	callstack 0
 15277   00005F                     	ds	1
 15278   000000                     int$flags	set	btemp
 15279   000000                     wtemp8	set	btemp+1
 15280   000000                     ttemp5	set	btemp+1
 15281   000000                     ttemp6	set	btemp+4
 15282   000000                     ttemp7	set	btemp+8
 15283                           
 15284                           	psect	idloc
 15285                           
 15286                           ;Config register IDLOC0 @ 0x200000
 15287                           ;	unspecified, using default values
 15288   200000                     	org	2097152
 15289   200000  0FFF               	dw	4095
 15290                           
 15291                           ;Config register IDLOC1 @ 0x200002
 15292                           ;	unspecified, using default values
 15293   200002                     	org	2097154
 15294   200002  0FFF               	dw	4095
 15295                           
 15296                           ;Config register IDLOC2 @ 0x200004
 15297                           ;	unspecified, using default values
 15298   200004                     	org	2097156
 15299   200004  0FFF               	dw	4095
 15300                           
 15301                           ;Config register IDLOC3 @ 0x200006
 15302                           ;	unspecified, using default values
 15303   200006                     	org	2097158
 15304   200006  0FFF               	dw	4095
 15305                           
 15306                           ;Config register IDLOC4 @ 0x200008
 15307                           ;	unspecified, using default values
 15308   200008                     	org	2097160
 15309   200008  0FFF               	dw	4095
 15310                           
 15311                           ;Config register IDLOC5 @ 0x20000A
 15312                           ;	unspecified, using default values
 15313   20000A                     	org	2097162
 15314   20000A  0FFF               	dw	4095
 15315                           
 15316                           ;Config register IDLOC6 @ 0x20000C
 15317                           ;	unspecified, using default values
 15318   20000C                     	org	2097164
 15319   20000C  0FFF               	dw	4095
 15320                           
 15321                           ;Config register IDLOC7 @ 0x20000E
 15322                           ;	unspecified, using default values
 15323   20000E                     	org	2097166
 15324   20000E  0FFF               	dw	4095
 15325                           
 15326                           	psect	config
 15327                           
 15328                           ;Config register CONFIG1L @ 0x300000
 15329                           ;	External Oscillator mode Selection bits
 15330                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15331                           ;	Power-up default value for COSC bits
 15332                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15333   300000                     	org	3145728
 15334   300000  AA                 	db	170
 15335                           
 15336                           ;Config register CONFIG1H @ 0x300001
 15337                           ;	unspecified, using default values
 15338                           ;	Clock Out Enable bit
 15339                           ;	CLKOUTEN = 0x1, unprogrammed default
 15340                           ;	Clock Switch Enable bit
 15341                           ;	CSWEN = 0x1, unprogrammed default
 15342                           ;	Fail-Safe Clock Monitor Enable bit
 15343                           ;	FCMEN = 0x1, unprogrammed default
 15344   300001                     	org	3145729
 15345   300001  FF                 	db	255
 15346                           
 15347                           ;Config register CONFIG2L @ 0x300002
 15348                           ;	unspecified, using default values
 15349                           ;	Master Clear Enable bit
 15350                           ;	MCLRE = 0x1, unprogrammed default
 15351                           ;	Power-up Timer Enable bit
 15352                           ;	PWRTE = 0x1, unprogrammed default
 15353                           ;	Low-power BOR enable bit
 15354                           ;	LPBOREN = 0x1, unprogrammed default
 15355                           ;	Brown-out Reset Enable bits
 15356                           ;	BOREN = 0x3, unprogrammed default
 15357   300002                     	org	3145730
 15358   300002  FF                 	db	255
 15359                           
 15360                           ;Config register CONFIG2H @ 0x300003
 15361                           ;	unspecified, using default values
 15362                           ;	Brown Out Reset Voltage selection bits
 15363                           ;	BORV = 0x3, unprogrammed default
 15364                           ;	ZCD Disable bit
 15365                           ;	ZCD = 0x1, unprogrammed default
 15366                           ;	PPSLOCK bit One-Way Set Enable bit
 15367                           ;	PPS1WAY = 0x1, unprogrammed default
 15368                           ;	Stack Full/Underflow Reset Enable bit
 15369                           ;	STVREN = 0x1, unprogrammed default
 15370                           ;	Debugger Enable bit
 15371                           ;	DEBUG = 0x1, unprogrammed default
 15372                           ;	Extended Instruction Set Enable bit
 15373                           ;	XINST = 0x1, unprogrammed default
 15374   300003                     	org	3145731
 15375   300003  FF                 	db	255
 15376                           
 15377                           ;Config register CONFIG3L @ 0x300004
 15378                           ;	WDT Period Select bits
 15379                           ;	WDTCPS = 0x1F, unprogrammed default
 15380                           ;	WDT operating mode
 15381                           ;	WDTE = OFF, WDT Disabled
 15382   300004                     	org	3145732
 15383   300004  9F                 	db	159
 15384                           
 15385                           ;Config register CONFIG3H @ 0x300005
 15386                           ;	unspecified, using default values
 15387                           ;	WDT Window Select bits
 15388                           ;	WDTCWS = 0x7, unprogrammed default
 15389                           ;	WDT input clock selector
 15390                           ;	WDTCCS = 0x7, unprogrammed default
 15391   300005                     	org	3145733
 15392   300005  FF                 	db	255
 15393                           
 15394                           ;Config register CONFIG4L @ 0x300006
 15395                           ;	unspecified, using default values
 15396                           ;	Write Protection Block 0
 15397                           ;	WRT0 = 0x1, unprogrammed default
 15398                           ;	Write Protection Block 1
 15399                           ;	WRT1 = 0x1, unprogrammed default
 15400                           ;	Write Protection Block 2
 15401                           ;	WRT2 = 0x1, unprogrammed default
 15402                           ;	Write Protection Block 3
 15403                           ;	WRT3 = 0x1, unprogrammed default
 15404                           ;	Write Protection Block 3
 15405                           ;	WRT4 = 0x1, unprogrammed default
 15406                           ;	Write Protection Block 3
 15407                           ;	WRT5 = 0x1, unprogrammed default
 15408                           ;	Write Protection Block 3
 15409                           ;	WRT6 = 0x1, unprogrammed default
 15410                           ;	Write Protection Block 3
 15411                           ;	WRT7 = 0x1, unprogrammed default
 15412   300006                     	org	3145734
 15413   300006  FF                 	db	255
 15414                           
 15415                           ;Config register CONFIG4H @ 0x300007
 15416                           ;	unspecified, using default values
 15417                           ;	Configuration Register Write Protection bit
 15418                           ;	WRTC = 0x1, unprogrammed default
 15419                           ;	Boot Block Write Protection bit
 15420                           ;	WRTB = 0x1, unprogrammed default
 15421                           ;	Data EEPROM Write Protection bit
 15422                           ;	WRTD = 0x1, unprogrammed default
 15423                           ;	Scanner Enable bit
 15424                           ;	SCANE = 0x1, unprogrammed default
 15425                           ;	Low Voltage Programming Enable bit
 15426                           ;	LVP = 0x1, unprogrammed default
 15427   300007                     	org	3145735
 15428   300007  FF                 	db	255
 15429                           
 15430                           ;Config register CONFIG5L @ 0x300008
 15431                           ;	unspecified, using default values
 15432                           ;	UserNVM Program Memory Code Protection bit
 15433                           ;	CP = 0x1, unprogrammed default
 15434                           ;	DataNVM Memory Code Protection bit
 15435                           ;	CPD = 0x1, unprogrammed default
 15436   300008                     	org	3145736
 15437   300008  FF                 	db	255
 15438                           
 15439                           ;Config register CONFIG5H @ 0x300009
 15440                           ;	unspecified, using default values
 15441   300009                     	org	3145737
 15442   300009  FF                 	db	255
 15443                           
 15444                           ;Config register CONFIG6L @ 0x30000A
 15445                           ;	unspecified, using default values
 15446                           ;	Table Read Protection Block 0
 15447                           ;	EBTR0 = 0x1, unprogrammed default
 15448                           ;	Table Read Protection Block 1
 15449                           ;	EBTR1 = 0x1, unprogrammed default
 15450                           ;	Table Read Protection Block 2
 15451                           ;	EBTR2 = 0x1, unprogrammed default
 15452                           ;	Table Read Protection Block 3
 15453                           ;	EBTR3 = 0x1, unprogrammed default
 15454                           ;	Table Read Protection Block 4
 15455                           ;	EBTR4 = 0x1, unprogrammed default
 15456                           ;	Table Read Protection Block 5
 15457                           ;	EBTR5 = 0x1, unprogrammed default
 15458                           ;	Table Read Protection Block 6
 15459                           ;	EBTR6 = 0x1, unprogrammed default
 15460                           ;	Table Read Protection Block 7
 15461                           ;	EBTR7 = 0x1, unprogrammed default
 15462   30000A                     	org	3145738
 15463   30000A  FF                 	db	255
 15464                           
 15465                           ;Config register CONFIG6H @ 0x30000B
 15466                           ;	unspecified, using default values
 15467                           ;	Boot Block Table Read Protection bit
 15468                           ;	EBTRB = 0x1, unprogrammed default
 15469   30000B                     	org	3145739
 15470   30000B  FF                 	db	255
 15471                           tosu	equ	0xFFF
 15472                           tosh	equ	0xFFE
 15473                           tosl	equ	0xFFD
 15474                           stkptr	equ	0xFFC
 15475                           pclatu	equ	0xFFB
 15476                           pclath	equ	0xFFA
 15477                           pcl	equ	0xFF9
 15478                           tblptru	equ	0xFF8
 15479                           tblptrh	equ	0xFF7
 15480                           tblptrl	equ	0xFF6
 15481                           tablat	equ	0xFF5
 15482                           prodh	equ	0xFF4
 15483                           prodl	equ	0xFF3
 15484                           indf0	equ	0xFEF
 15485                           postinc0	equ	0xFEE
 15486                           postdec0	equ	0xFED
 15487                           preinc0	equ	0xFEC
 15488                           plusw0	equ	0xFEB
 15489                           fsr0h	equ	0xFEA
 15490                           fsr0l	equ	0xFE9
 15491                           wreg	equ	0xFE8
 15492                           indf1	equ	0xFE7
 15493                           postinc1	equ	0xFE6
 15494                           postdec1	equ	0xFE5
 15495                           preinc1	equ	0xFE4
 15496                           plusw1	equ	0xFE3
 15497                           fsr1h	equ	0xFE2
 15498                           fsr1l	equ	0xFE1
 15499                           bsr	equ	0xFE0
 15500                           indf2	equ	0xFDF
 15501                           postinc2	equ	0xFDE
 15502                           postdec2	equ	0xFDD
 15503                           preinc2	equ	0xFDC
 15504                           plusw2	equ	0xFDB
 15505                           fsr2h	equ	0xFDA
 15506                           fsr2l	equ	0xFD9
 15507                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        6
    BSS         383
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     150
    BANK1           256    108     222
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2793$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2709$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2709$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_reverseDetect
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0  411412
                                            113 BANK0      2     2      0
                                              0 BANK1    108   108      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9049
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35627
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   35272
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34919
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29073
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     692
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  159859
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                               _stop
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   18683
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    9024
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4   16076
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                      _reverseDetect
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6746
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    9330
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3785
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23701
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4006
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _TurnDelay
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _TurnDelay
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _reverseDetect
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _ReverseYellow
       _ForwardOneBlock
       _reverseDetect
       _turnRight45
     _reverseDetect
     _stop
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6C      DE       7       86.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      96       5       93.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllllh     17      0       0      38        0.0%
BITBIGSFRhllhh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRhllhlh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      B      0       0      59        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlllll      5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlllh       2      0       0      37        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllhll      1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C2      62        0.0%
DATA                 0      0     2C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 13 22:39:13 2023

               _color_read_Red 5AF4                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5AA4                   ___fldiv@sign 0042                _color_read_Blue 5B94  
                           l51 5AF2                             l60 5BE2                             l45 59AE  
                           l54 5B42                             l63 56A8                             l48 602C  
                           l57 5B92                             l66 37B4                             l76 189C  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 422C  
             _color_read_Green 5B44                readColours@vals 000C              ??_Interrupts_init 0001  
                          l130 5F98                            l204 5F6E                            l133 5F9A  
                          l142 60A4                            l151 5DDC                            l136 5FC0  
                          l145 60AE                            l219 609A                            l139 60B8  
                          l148 608E                            l510 5F24                            l513 5F3E  
                          l522 57B6                            l186 606A                            l531 5810  
                          l507 5282                            l195 606E                            l516 5C7E  
                          l540 5E98                            l356 237C                            l461 48B2  
                          l525 575C                            l454 53A8                            l198 6082  
                          l519 5CCC                            l543 564A                            l552 590A  
                          l528 5702                            l632 3D72                            l800 4A16  
                          l537 5E5A                            l561 4E9E                            l546 5A00  
                          l626 3D72                            l570 42A0                            l378 27B4  
                          l491 5320                            l467 5426                            l475 51E4  
                          l483 5146                            l555 595C                            l571 4314  
                          l564 4F54                            l580 440A                            l572 4384  
                          l549 5A52                            l661 604C                            l573 434C  
                          l389 2800                            l558 557E                            l670 5F08  
                          l638 3D9A                            l567 43BA                            l664 5FE6  
                          l568 424A                            l673 600C                            l578 43A0  
                          l667 5EF2                            l499 4FFE                            l579 43F0  
                          l932 50A8                            l943 4C20                            l938 4BDA  
                          l970 4B1C                            l787 4746                            l947 5ED0  
                          _abs 5DDE                            _pad 5428                            _rel 014C  
                          wreg 000FE8                   ___flmul@aexp 0022                   ___flmul@bexp 0023  
                 ___flmul@sign 001D                   ___flmul@temp 0028                   ___flmul@prod 0024  
                 ___fltol@exp1 000A                Colour_decider@i 007A                           l1201 29F2  
                         l1210 2CC2                           l1202 29E0                           l1203 29A6  
                         ?_abs 0013                           l1304 30AE                           l1218 2B0C  
                         l1227 2BDC                           l1243 5D12                           l1331 45BE  
                         l1171 5514                           l1260 32AA                           l1228 2BCA  
                         l1164 550C                           l1420 1C30                           l1342 4556  
                         l1502 5E14                           l1406 4018                           l1422 1A76  
                         l1255 3486                           l1335 44FA                           l1511 422A  
                         l1351 58B8                           l4000 2C86                           l1328 4462  
                         l1257 32E6                           l1505 5E1C                           l1417 2296  
                         l1266 332C                           l4010 2CB0                           l4002 2C94  
                         l1514 416E                           l1522 55D4                           l1450 2078  
                         l1291 30EC                           l1531 5AA2                           l1268 33A4  
                         l4012 2CB2                           l4004 2C9A                           l4020 54BC  
                         l4100 4706                           l1269 3392                           l1525 55E4  
                         l1294 2F7E                           l4006 2C9C                           l4030 54F6  
                         l4022 54C4                           l4102 4726                           l4110 48C6  
                         l1287 2D88                           l1543 4DE8                           l1551 5D9A  
                         l1383 544A                           l4200 3224                           l1296 2FF6  
                         l4008 2CA2                           l4032 54FE                           l4024 54CC  
                         l4016 54A2                           l5000 575E                           l4120 4936  
                         l4112 48E6                           l4040 5D64                           l1392 3E28  
                         l1560 5D56                           l1297 2FE4                           l1465 3ABA  
                         l4210 3276                           l4202 323E                           l4034 5500  
                         l4026 54DA                           l4018 54AA                           l4050 47B8  
                         l5002 5772                           l5010 56D6                           l4130 49AE  
                         l4122 493E                           l4114 48EA                           l4106 48B4  
                         l1554 60C0                           l4042 5D76                           l1394 3E30  
                         l1387 54A0                           l1395 3E76                           l4220 32D2  
                         l4212 3286                           l4204 324E                           l4300 2D32  
                         l4036 5506                           l4028 54E0                           l4060 4872  
                         l4052 47CC                           l5004 578A                           l5100 5F82  
                         l4132 49C0                           l4124 4952                           l4116 48F8  
                         l4108 48B8                           l4044 5D7A                           l5020 37FE  
                         l5012 37B6                           l4230 3312                           l4222 32D4  
                         l4214 329A                           l4206 325E                           l4150 311A  
                         l4142 30EE                           l4310 2D72                           l4302 2D40  
                         l4054 47D0                           l4046 4748                           l5102 5F84  
                         l5006 56AA                           l5110 5AEA                           l4070 45F6  
                         l4062 45C0                           l4126 4960                           l4134 49C6  
                         l4118 4918                           l4038 5D58                           l5022 380E  
                         l5014 37DE                           l1487 5866                           l4240 334E  
                         l4232 331C                           l4224 32E4                           l4216 32A8  
                         l4208 326E                           l4160 3154                           l4152 312A  
                         l4144 30FA                           l4400 30D0                           l4320 2DBC  
                         l4312 2D78                           l4304 2D42                           l5200 4546  
                         l4056 4812                           l4048 4764                           l5104 5F86  
                         l5008 56BE                           l5120 5B44                           l4080 4652  
                         l4072 4604                           l4064 45C4                           l4136 49D6  
                         l4128 498E                           l5040 390A                           l5032 38D4  
                         l5024 382E                           l5016 37EC                           l1497 4D1E  
                         l4250 33C0                           l4242 335C                           l4234 332A  
                         l4226 32F6                           l4218 32B4                           l4170 3180  
                         l4162 315A                           l4154 313A                           l4146 3108  
                         l4402 30D2                           l4330 2E0C                           l4322 2DC8  
                         l4314 2D98                           l4306 2D52                           l4410 5CCE  
                         l5210 459E                           l5202 4564                           l4058 482E  
                         l5106 6010                           l5122 5B8A                           l5114 5AF4  
                         l4090 46BC                           l4082 465A                           l4074 4624  
                         l4066 45D2                           l4138 49F6                           l5050 399C  
                         l5034 38E4                           l5026 384E                           l5018 37FA  
                         l4260 342C                           l4252 33CE                           l4244 338A  
                         l4228 330C                           l4236 333C                           l4180 31BA  
                         l4172 3190                           l4164 3160                           l4156 313C  
                         l4148 310A                           l4420 503E                           l4404 30D8  
                         l4340 2E4E                           l4332 2E18                           l4324 2DD2  
                         l4316 2DA8                           l4308 2D62                           l4412 5CDE  
                         l5212 45AC                           l5204 4566                           l5300 0FF6  
                         l5140 55E6                           l5116 5B3A                           l5108 5AA4  
                         l5132 606E                           l4092 46DC                           l4084 466E  
                         l4076 4628                           l4068 45F2                           l4500 4AFC  
                         l6020 3926                           l5036 38FA                           l5044 3912  
                         l5028 38A4                           l5220 581E                           l4270 347A  
                         l4262 3446                           l4254 33F8                           l4238 334A  
                         l4182 31D0                           l4174 31A0                           l4166 316E  
                         l4158 3144                           l4422 506C                           l4406 30DC  
                         l4350 2EB0                           l4342 2E5A                           l4334 2E24  
                         l4326 2DE8                           l5214 45AE                           l5206 456A  
                         l5302 1028                           l5230 5962                           l5142 5E5C  
                         l5150 4F92                           l5126 5B94                           l5134 607E  
                         l4094 46DE                           l4086 467C                           l4078 4634  
                         l4510 5442                           l4502 4B0C                           l6022 39E4  
                         l5054 39D0                           l5038 3902                           l5046 3944  
                         l5070 3A8E                           l5222 583C                           l4272 347C  
                         l4264 3462                           l4248 33B4                           l4256 33FC  
                         l4184 31E0                           l4192 3200                           l4176 31A2  
                         l4168 3170                           l4424 507C                           l4416 5000  
                         l4440 4B9A                           l4432 4B1E                           l4360 2F46  
                         l4352 2EBC                           l4344 2E6A                           l4336 2E32  
                         l4328 2DF4                           l4280 2CC4                           l5208 458E  
                         l5320 11A8                           l5312 10AC                           l5304 102E  
                         l4600 52A8                           l5240 599A                           l5232 596C  
                         l5144 590C                           l5136 5E1E                           l5160 4FF2  
                         l5152 4F9E                           l5128 5BDA                           l4096 46F0  
                         l4088 468E                           l4520 5DDE                           l3800 4D4E  
                         l4512 5456                           l6024 3A6E                           l5064 3A4C  
                         l5056 39FA                           l5048 3968                           l5224 585C  
                         l4266 3466                           l4258 3416                           l4194 3210  
                         l4186 31E8                           l4178 31AA                           l4426 50A0  
                         l4418 502E                           l4450 4C1E                           l4442 4BA8  
                         l4434 4B4C                           l4370 2F9C                           l4362 2F64  
                         l4354 2ED8                           l4346 2E84                           l4338 2E3E  
                         l4290 2D00                           l4282 2CD0                           l5322 11BA  
                         l5330 1366                           l5314 10C0                           l5306 104A  
                         l3810 6004                           l4610 5308                           l4602 52C0  
                         l5162 5704                           l5250 59A4                           l5242 599C  
                         l5234 597C                           l5138 58BA                           l5170 4EA0  
                         l5154 4FAA                           l5146 4F56                           l4098 46F6  
                         l4522 5DF8                           l3802 4D6C                           l4514 546A  
                         l4506 5428                           l4530 4CA8                           l5058 3A1A  
                         l5066 3A7C                           l5218 5812                           l4268 3474  
                         l4196 3210                           l4188 31EC                           l4428 50A6  
                         l4444 4BBA                           l4436 4B5C                           l4380 3006  
                         l4372 2FA0                           l4364 2F6E                           l4356 2F02  
                         l4348 2E94                           l4292 2D10                           l4284 2CDE  
                         l3900 299E                           l3820 2820                           l5180 4488  
                         l5172 440E                           l5420 17F6                           l5404 173C  
                         l5332 1398                           l5340 13D6                           l5324 1236  
                         l5316 1160                           l5308 10A0                           l4604 52CC  
                         l4620 53DE                           l4612 53AA                           l5164 5718  
                         l5500 604A                           l5252 59A6                           l5244 599E  
                         l5236 5986                           l5228 595E                           l5148 4F7A  
                         l5156 4FC2                           l5260 564C                           l3804 4DA2  
                         l4516 546E                           l4508 5436                           l4700 3E88  
                         l4532 4CB4                           l4524 4C22                           l4446 4BC8  
                         l4438 4B8A                           l4390 3068                           l4382 3012  
                         l4374 2FAE                           l4366 2F7C                           l4358 2F38  
                         l4294 2D16                           l4286 2CE0                           l3910 29D4  
                         l3902 29B4                           l3822 2830                           l3830 285A  
                         l3814 2804                           l5190 44E2                           l5174 441E  
                         l5430 1866                           l5422 1828                           l5406 177A  
                         l5342 1408                           l5350 1446                           l5334 13CA  
                         l5326 1292                           l5318 1170                           l4606 52D8  
                         l4614 53AE                           l4622 53F6                           l5166 5730  
                         l4630 5184                           l5094 5F70                           l5254 59A8  
                         l5246 59A0                           l5238 5990                           l5270 3650  
                         l5262 3488                           l5158 4FDA                           l4518 548C  
                         l4702 3E8E                           l4710 3F80                           l4454 5E9A  
                         l4470 4A6C                           l4462 4A18                           l4542 4D16  
                         l4526 4C42                           l4550 5580                           l5510 42F0  
                         l5502 422C                           ?_pad 0011                           l4448 4C18  
                         l4392 307C                           l4384 3020                           l4376 2FDC  
                         l4368 2F8E                           l4296 2D26                           l4288 2CF0  
                         l3920 2A24                           l3912 29DE                           l3904 29C0  
                         l3840 288A                           l3832 286A                           l3824 2840  
                         l3816 2810                           l5192 44E4                           l5184 449C  
                         l5176 442C                           l5408 17B8                           l5352 1478  
                         l5344 143A                           l5328 130E                           l5280 0E74  
                         l3808 5FE8                           l4608 52F0                           l4624 540E  
                         l4616 53C6                           l4632 5190                           l4640 50AA  
                         l5096 5F7A                           l5256 59AA                           l5248 59A2  
                         l5272 36E8                           l5264 3554                           l5168 4DEA  
                         l5600 3C9A                           l4720 3FE8                           l4712 3F9A  
                         l4704 3F10                           l4456 5EB0                           l4472 4A6E  
                         l4464 4A2E                           l4528 4C80                           l4536 4CC0  
                         l4560 40A4                           l4552 559E                           l4800 1B30  
                         l5520 432C                           l5512 42F4                           l5504 422E  
                         l4394 3096                           l4386 304A                           l4298 2D2C  
                         l3930 2A60                           l3922 2A34                           l3914 2A00  
                         l3906 29C4                           l3850 28CA                           l3842 2898  
                         l3834 2870                           l3826 2850                           l3818 281E  
                         l5194 44F0                           l5186 44A4                           l5178 4472  
                         l5418 17C4                           l5370 15C8                           l5354 14AA  
                         l5282 0EA4                           l4618 53D2                           l4634 519C  
                         l4626 5148                           l4642 50CE                           l4650 5116  
                         l5098 5F80                           l5258 59AC                           l5274 371C  
                         l5266 3588                           l5610 3D86                           l5602 3CC6  
                         l5450 6066                           l5442 604E                           l4722 3FF8  
                         l4714 3FB8                           l4706 3F16                           l4458 5EC0  
                         l4474 4A7E                           l4538 4CD2                           l4562 40B2  
                         l4570 4192                           l4554 401A                           l4546 5D14  
                         l4802 1B6E                           l4730 18B4                           l5530 4366  
                         l5522 432E                           l5514 430C                           l5506 424C  
                         l4396 30B2                           l4388 304E                           l3940 2AA6  
                         l3932 2A6E                           l3924 2A42                           l3916 2A10  
                         l3908 29D2                           l3860 2904                           l3852 28CC  
                         l3844 289A                           l3836 2882                           l3828 2852  
                         l5196 452C                           l5188 44B0                           l5428 1834  
                         l5356 14E4                           l5380 15E0                           l5292 0F16  
                         l5284 0ED8                           l5276 0E3E                           l4660 522E  
                         l4628 516C                           l4636 51B4                           l5620 556A  
                         l4652 512E                           l4644 50E6                           l5268 361C  
                         l5612 3D90                           l5604 3CF0                           l5452 6068  
                         l5444 6058                           l5460 5F56                           l4716 3FD2  
                         l4708 3F1C                           l4484 4AA8                           l4476 4A82  
                         l4468 4A42                           l4572 41CE                           l4556 403A  
                         l4548 5D24                           l4900 20BA                           l4820 1C5C  
                         l4804 1B82                           l4812 1BFE                           l4740 18FC  
                         l4732 18C2                           l5540 43F2                           l5532 437E  
                         l5524 4346                           l5516 430E                           l5508 42A2  
                         l5700 2314                           l4398 30C2                           l3950 2B22  
                         l3942 2ADA                           l3934 2A70                           l3926 2A50  
                         l3870 2918                           l3862 2908                           l3846 28AA  
                         l3854 28D4                           l3838 2884                           l5198 4538  
                         l5382 1612                           l5390 1650                           l5358 1522  
                         l5366 1550                           l5294 0F68                           l5286 0F0C  
                         l5278 0E68                           l5550 57CC                           l5462 6090  
                         l4662 523A                           l4654 51E6                           l4670 5F0E  
                         l4638 51CC                           l4646 50F2                           l5542 5FC2  
                         l5606 3D1C                           l5470 5338                           l5446 605A  
                         l5454 5F40                           l4718 3FE2                           l4494 4AD0  
                         l4486 4AB2                           l4478 4A90                           l4574 41E2  
                         l4566 4122                           l4558 4090                           l4590 5A84  
                         l4582 5A54                           l4910 20EC                           l4902 20CA  
                         l4830 1CA0                           l4822 1C64                           l4814 1C38  
                         l4806 1BB6                           l4742 190C                           l4750 1934  
                         l4734 18C6                           l4726 189E                           l5526 435A  
                         l5518 4322                           l5534 4384                           l5710 2330  
                         l5702 2318                           l5630 229C                           l3960 2B5E  
                         l3952 2B32                           l3944 2ADC                           l3936 2A7A  
                         l3928 2A5C                           l3880 292C                           l3872 291C  
                         l3864 290C                           l3856 28E4                           l3848 28BA  
                         l5392 1682                           l5384 1644                           l5368 158A  
                         l5376 15D4                           l5296 0F9A                           l5552 57E4  
                         l4656 520A                           l4664 5252                           l4672 5F1E  
                         l5616 5516                           l4648 50FE                           l5544 5FC4  
                         l5608 3D46                           l5480 5382                           l5472 533A  
                         l5464 5322                           l5448 6064                           l5456 5F44  
                         l4680 3DE0                           l4496 4ADC                           l4488 4ABC  
                         l4576 420A                           l4568 415E                           l4584 5A68  
                         l4592 5A88                           l4920 2194                           l4912 20FE  
                         l4904 20CE                           l4840 1CE6                           l4832 1CB2  
                         l4824 1C68                           l4816 1C48                           l4808 1BBE  
                         l4760 197E                           l4752 195A                           l4744 191C  
                         l4736 18EA                           l4728 18A4                           l5560 588A  
                         l5536 4392                           l5528 4364                           l5800 2604  
                         l5720 2360                           l5712 2338                           l5704 2320  
                         l5640 22B8                           l5632 22A0                           l3970 2B8A  
                         l3962 2B60                           l3946 2AEC                           l3938 2A80  
                         l3890 2940                           l3882 2930                           l3874 2920  
                         l3866 2910                           l3858 28F6                           l5394 16B4  
                         l5298 0FA2                           l4666 526A                           l4658 5222  
                         l5618 5552                           l4594 5F9A                           l5546 5FCA  
                         l5570 3ABC                           l5490 539C                           l5482 5384  
                         l5474 5350                           l5466 5334                           l5458 5F52  
                         l3794 4D20                           l4690 3E4E                           l4682 3E00  
                         l4674 3D9C                           l4498 4AEC                           l4578 421A  
                         l4586 5A74                           l4930 21E2                           l4922 219C  
                         l4914 2102                           l4906 20D4                           l4850 1DFA  
                         l4842 1D4A                           l4826 1C7A                           l4834 1CBA  
                         l4818 1C54                           l4770 19E6                           l4762 1996  
                         l4754 196C                           l4746 1928                           l4738 18F4  
                         l5562 58A6                           l5554 5868                           l5538 43A2  
                         l5810 2646                           l5730 23B2                           l5722 2362  
                         l5714 2340                           l5706 2328                           l5650 22C4  
                         l5642 22BA                           l5634 22A4                           l3980 2BC2  
                         l3964 2B6E                           l3956 2B46                           l3972 2B8C  
                         l3948 2AFC                           l3884 2934                           l3876 2924  
                         l3868 2914                           l3892 2944                           l5396 16F2  
                         l5548 57B8                           l4668 5F0A                           l4596 5FAA  
                         l5580 3AEC                           l5572 3AD0                           l5492 53A6  
                         l5484 538E                           l5476 5354                           l5468 5336  
                         l3796 4D32                           l4692 3E5E                           l4684 3E1C  
                         l4676 3DBC                           l4588 5A78                           l4940 2258  
                         l4932 21F2                           l4916 2108                           l4908 20DA  
                         l4924 21A0                           l4860 1EB8                           l4852 1E2E  
                         l4844 1DA2                           l4836 1CC2                           l4828 1C88  
                         l4772 19F8                           l4764 19A0                           l4756 1970  
                         l4748 1930                           l5556 587A                           l5820 2688  
                         l5812 264A                           l5804 261A                           l5740 2408  
                         l5732 23C6                           l5724 238A                           l5716 2344  
                         l5708 2330                           l5660 22CE                           l5652 22C6  
                         l5644 22BC                           l5636 22A8                           l5628 2298  
                         l3990 2C40                           l3966 2B76                           l3958 2B50  
                         l3974 2B9A                           l3894 2948                           l3886 2938  
                         l3878 2928                           l5398 1730                           l4598 5284  
                         l5494 602E                           l5566 59B0                           l4950 60B4  
                         l5590 3BC4                           l5582 3B1A                           l5574 3AD2  
                         l5486 5390                           l5478 5378                           l3798 4D44  
                         l4694 3E6A                           l4686 3E38                           l4678 3DD0  
                         l4942 226E                           l4934 2222                           l4926 21BE  
                         l4918 2160                           l4870 1F8C                           l4862 1EC8  
                         l4854 1E60                           l4846 1DD6                           l4838 1CD2  
                         l4774 19FC                           l4758 1976                           l5558 5882  
                         l5830 26BA                           l5822 268C                           l5806 262E  
                         l5750 245E                           l5742 240C                           l5734 23D2  
                         l5726 23A4                           l5718 234C                           l5670 22D8  
                         l5662 22D0                           l5654 22C8                           l5646 22BE  
                         l5638 22B4                           l3984 2BEC                           l3992 2C42  
                         l3976 2B9E                           l3968 2B7A                           l3896 2972  
                         l3888 293C                           l5568 5A02                           l5496 6036  
                         l4952 6086                           l5592 3BEE                           l5584 3B42  
                         l5576 3ADA                           l5488 539A                           l4960 609C  
                         l4696 3E72                           l4688 3E48                           l4944 2276  
                         l4936 2230                           l4928 21DA                           l4880 1FC2  
                         l4872 1FA0                           l4864 1EFC                           l4856 1E76  
                         l4848 1DDC                           l4792 1A86                           l4776 1A02  
                         l4768 19C0                           l5832 26CE                           l5840 26EC  
                         l5824 2690                           l5808 2642                           l5816 2660  
                         l5760 24B8                           l5752 2472                           l5744 2420  
                         l5736 23E6                           l5728 23AA                           l5680 22E2  
                         l5672 22DA                           l5664 22D2                           l5656 22CA  
                         l5648 22C0                           l3994 2C52                           l3986 2BF8  
                         l3978 2BAC                           l3898 298E                           l5498 6040  
                         l4954 608A                           l5594 3C1A                           l5586 3B6E  
                         l4970 5DB2                           l4962 60A0                           l4698 3E7E  
                         l4938 2248                           l4890 208A                           l4882 1FCA  
                         l4866 1F52                           l4874 1FA4                           l4858 1EA8  
                         l4794 1A8C                           l4778 1A0A                           l4786 1A26  
                         l5842 2700                           l5834 26D2                           l5818 2674  
                         l5770 2554                           l5754 248E                           l5746 2438  
                         l5762 24C0                           l5738 2404                           l5690 22F4  
                         l5682 22E4                           l5674 22DC                           l5666 22D4  
                         l5658 22CC                           l3996 2C62                           l3988 2C06  
                         l4948 60B0                           l4956 60A6                           l4980 5EDE  
                         l5596 3C44                           l5588 3B98                           l4972 5DD8  
                         l4964 5D9E                           l4892 2098                           l4884 1FD6  
                         l4876 1FB4                           l4868 1F58                           l4796 1AC0  
                         l4788 1A40                           l5860 277E                           l5844 2714  
                         l5852 2732                           l5836 26D6                           l5828 26A6  
                         l5772 2568                           l5780 258E                           l5764 24DE  
                         l5756 24A8                           l5748 2452                           l5692 22FC  
                         l5684 22E6                           l5676 22DE                           l5668 22D6  
                         l3998 2C82                           l4990 5C66                           l4958 60AA  
                         l4982 5EEE                           l5598 3C70                           l4974 5DDA  
                         l4966 5DA2                           l4894 20A8                           l4886 204E  
                         l4878 1FBC                           l4798 1AFE                           l5862 2792  
                         l5854 2746                           l5846 2718                           l5782 25A2  
                         l5774 256C                           l5766 2534                           l5758 24B0  
                         l5870 27B8                           l5694 2304                           l5686 22EC  
                         l5678 22E0                           l4992 5C80                           l4984 5C32  
                         l4968 5DAA                           l4896 20AC                           l4888 206E  
                         l5872 27CA                           l5864 2796                           l5856 274A  
                         l5848 271C                           l5784 25B6                           l5792 25D4  
                         l5776 2570                           l5768 2540                           l5696 230C  
                         l5688 22F0                           l4994 5C94                           l4986 5C46  
                         l4978 5ED2                           l4898 20B2                           l5874 27CE  
                         l5858 2766                           l5866 279E                           l5794 25E8  
                         l5786 25BA                           l5778 2582                           l5698 2310  
                         l4996 5CA0                           l4988 5C52                           l5796 25FC  
                         l5788 25BE                           l4998 5CB4                           l5798 2600  
                         l5878 27EC                    GreenMove@mL 0020                    GreenMove@mR 0022  
                         STR_1 0E01                           STR_2 0E34                           STR_5 0E38  
                         u3000 2840                           u3001 283C                           u3010 2882  
                         u3011 287E                           u3100 29B4                           u3020 2898  
                         u3101 29B0                           u3021 2894                           u3110 29D2  
                         u3030 28AA                           u3111 29CE                           u3031 28A6  
                         u4000 50A0                           u3200 2B22                           u3120 29F2  
                         u3040 28BA                   _BAUD4CONbits 000EE9                           u4001 509C  
                         u3201 2B1E                           u3121 29EE                           u3041 28B6  
                         u4010 4B4C                           u3210 2B32                           u3130 2A00  
                         u3050 28F6                           u4011 4B48                           u3211 2B2E  
                         u3131 29FC                           u3051 28F2                           u4020 4B8A  
                         u3300 2C06                           u3220 2B5E                           u3140 2A10  
                         u3060 2904                           u4100 4AA4                           u4021 4B86  
                         u3301 2C02                           u3221 2B5A                           u3141 2A0C  
                         u3061 2900                           u4101 4AA0                           u4030 4BA8  
                         u3310 2C40                           u3230 2B6E                           u3150 2A42  
                         u3070 2972                           u4110 4ACC                           u4031 4BA4  
                         u3311 2C3C                           u3231 2B6A                           u3151 2A3E  
                         u3071 296E                           u4111 4AC8                           u4040 4BC8  
                         u3320 2C52                           u3240 2B8A                           u3160 2A50  
                         u3080 298A                           u5000 4FDA                           u3400 5D9A  
                         u4120 4AEC                           u4200 4CD2                           u4041 4BC4  
                         u3321 2C4E                           u3241 2B86                           u3161 2A4C  
                         u3081 2984                           u5001 4FD6                           u3401 5D96  
                         u4121 4AE8                           u4201 4CCE                           u4050 4C18  
                         u3330 2C62                           u3250 2B9A                           u3170 2A6E  
                         u3090 298C                           u3410 4764                           u5010 4FF2  
                         u4130 4AFC                           _T2PR 000FBC                           u4051 4C14  
                         u3331 2C5E                           u3251 2B96                           u3171 2A6A  
                         u3411 4760                           u5011 4FEE                           u4131 4AF8  
                         u3340 2C82                           u3260 2BAC                           u3180 2AA6  
                         u5100 459E                           u5020 441E                           u3420 482E  
                         u3500 48C6                           u4140 5436                           u4060 5EB0  
                         u4220 4D0C                           u4300 411E                           u3341 2C7E  
                         u3261 2BA8                           u3181 2AA2                           u5101 459A  
                         u5021 441A                           u3421 482A                           u3501 48C2  
                         u4141 5432                           u4061 5EAC                           u4221 4D06  
                         u4301 411A                           u3350 2C94                           u3270 2BC2  
                         u3190 2AEC                           u5110 45AC                           u5030 442C  
                         u3430 45D2                           u3510 48F8                           u4150 548C  
                         u4070 4A2E                           u4230 4D0E                           u4310 4142  
                         u3351 2C90                           u3271 2BBE                           u3191 2AE8  
                         u5111 45A8                           u5031 4428                           u3431 45CE  
                         u3511 48F4                           u4151 5488                           u4071 4A2A  
                         u4215 4CE4                           u3600 3180                           u3360 2CB0  
                         u3280 2BD8                           u5040 4488                           u5200 11BA  
                         u4400 5320                           u3440 4604                           u3520 4936  
                         u4160 5DF8                           u4080 4A62                           u4320 415E  
                         u4240 5D56                           u5120 585C                           u3601 317C  
                         u3361 2CAC                           u3281 2BD4                           u5041 4484  
                         u5201 11B6                           u4401 531C                           u3441 4600  
                         u3521 4932                           u4161 5DF4                           u4321 415A  
                         u4241 5D52                           u5121 5858                           u3610 3190  
                         u3290 2BEC                           u5050 44DE                           u5210 1398  
                         u3370 54BC                           u4410 540E                           u3530 4960  
                         u4090 4A90                           u4170 4C62                           u4330 41B2  
                         u4250 559E                           u3611 318C                           u3291 2BE8  
                         u5051 44DA                           u5211 1394                           u5131 0E6E  
                         u3371 54B8                           u4411 540A                           u3451 462E  
                         u3531 495C                           u4091 4A8C                           u4315 4138  
                         u4251 559A                           u3700 334A                           u3620 31D0  
                         u5060 4528                           u5300 158A                           u5220 13CA  
                         u5140 0F68                           u3380 54DA                           u4420 5426  
                         u3460 4652                           u3540 498E                           u4500 3DCC  
                         u4180 4C80                           u4340 41CE                           u4260 4062  
                         u3701 3346                           u3621 31CC                           u5061 4524  
                         u5301 1586                           u5221 13C6                           u5141 0F64  
                         u3381 54D6                           u4421 5422                           u3461 464E  
                         u3541 498A                           u4501 3DC6                           u4085 4A58  
                         u4181 4C7C                           u4341 41CA                           u3710 335C  
                         u3630 3210                           u5070 4546                           u5310 15C8  
                         u5230 1408                           u5150 0FF6                           u3390 54F6  
                         u4430 51CC                           u3470 467C                           u3550 49D6  
                         u4510 3DCE                           u4190 4CA8                           u4350 420A  
                         u4270 4090                           u3711 3358                           u3631 320C  
                         u5071 4542                           u5311 15C4                           u5231 1404  
                         u5151 0FF2                           u3391 54F2                           u4431 51C8  
                         u6007 5972                           u3471 4678                           u3551 49D2  
                         u4191 4CA4                           u4175 4C58                           u4351 4206  
                         u4335 41A8                           u4271 408C                           u3720 338A  
                         u3640 3286                           u3560 3108                           u3800 2CF0  
                         u5080 4556                           u5400 17F6                           u5320 1612  
                         u5240 143A                           u5160 104A                           u4440 51E4  
                         u3480 46BC                           u4520 3DE0                           u4280 40B2  
                         u4360 5AA2                           u4600 18C2                           u3721 3386  
                         u3641 3282                           u3561 3104                           u3801 2CEC  
                         u5081 4552                           u5401 17F2                           u5321 160E  
                         u5241 1436                           u5161 1046                           u4441 51E0  
                         u6017 5C70                           u3481 46B8                           u4521 3DDC  
                         u4281 40AE                           u4265 4058                           u4361 5A9E  
                         u4601 18BE                           u3730 33A0                           u3650 32A8  
                         u3570 311A                           u3810 2D00                           u5090 4564  
                         u5410 1828                           u5330 1644                           u5250 1478  
                         u5170 10A0                           u4450 512E                           u4370 5FAA  
                         u3490 4706                           u4530 3E1C                           u4610 190C  
                         u3731 339C                           u3651 32A4                           u3571 3116  
                         u3811 2CFC                           u5091 4560                           u5411 1824  
                         u5331 1640                           u5251 1474                           u5171 109C  
                         u6107 57A8                           u4451 512A                           u6027 5108  
                         u4371 5FA6                           u3491 4702                           u4531 3E18  
                         u4611 1908                           u3740 33B4                           u3660 32D2  
                         u3580 312A                           u3900 2FAE                           u3820 2D40  
                         u5420 1866                           u5340 1682                           u5260 14AA  
                         u5180 10C0                           u4460 5146                           u4380 5FC0  
                         u2940 4D32                           u4540 3E48                           u4700 1B6E  
                         u4620 191C                           u5500 4392                           u3741 33B0  
                         u3661 32CE                           u3581 3126                           u3901 2FAA  
                         u3821 2D3C                           u5421 1862                           u5341 167E  
                         u5261 14A6                           u5181 10BC                           u6117 5244  
                         u6037 555C                           u4461 5142                           u4381 5FBC  
                         u2941 4D2E                           u4541 3E44                           u4701 1B6A  
                         u4621 1918                           u5501 438E                           u3750 33CE  
                         u3670 32F6                           u3590 316E                           u3910 2FDC  
                         u3830 2D52                           u5430 1898                           u5350 16B4  
                         u5270 14E4                           u5190 1170                           u4390 5308  
                         u4470 526A                           u2950 4D44                           u4550 3E5E  
                         u4710 1BFA                           u4630 195A                           u5510 43A0  
                         u3751 33CA                           u3671 32F2                           u3591 316A  
                         u3911 2FD8                           u3831 2D4E                           u5431 1894  
                         u5351 16B0                           u5271 14E0                           u5191 116C  
                         u4391 5304                           u6127 57D6                           u4471 5266  
                         u6047 5CBE                           u2951 4D40                           u4551 3E5A  
                         u4295 40C6                           u4711 1BF6                           u4631 1956  
                         u5511 439C                           u3760 3416                           u3680 330C  
                         u3920 2FF2                           u3840 2D62                           u5360 16F2  
                         u5280 1522                           u4480 5282                           u5600 3C9A  
                         u5440 5F6E                           u2960 4D6C                           u4560 3F9A  
                         u4296 40D0                           u4800 1EB8                           u4720 1C30  
                         u4640 196C                           u5520 43CA                           u3761 3412  
                         u3681 3308                           u3921 2FEE                           u3841 2D5E  
                         u5361 16EE                           u5281 151E                           u6137 5802  
                         u4481 527E                           u6057 51A6                           u5601 3C96  
                         u5441 5F6A                           u2961 4D68                           u4561 3F96  
                         u4297 40E0                           u4801 1EB4                           u4721 1C2C  
                         u4641 1968                           u5521 43C4                           u3770 3446  
                         u3690 332A                           u3930 3006                           u3850 2D98  
                         u5370 1730                           u5290 154C                           u4490 5F3E  
                         u5610 3CF0                           u2970 4DA2                           u4570 3FB8  
                         u4810 1F52                           u4730 1C48                           u4650 19E6  
                         u5530 43DE                           u5522 43CC                           u5450 42CA  
                         u3771 3442                           u3691 3326                           u3931 3002  
                         u3851 2D94                           u5371 172C                           u5291 1548  
                         u6147 53E8                           u4491 5F3A                           u6067 5F14  
                         u5611 3CEC                           u2971 4D9E                           u4571 3FB4  
                         u4811 1F4E                           u4731 1C44                           u4651 19E2  
                         u5531 43D8                           u5451 42C4                           u3780 3474  
                         u3940 3020                           u3860 2DA8                           u2980 281E  
                         u5380 177A                           u5620 3D46                           u4580 3FD2  
                         u4900 2244                           u4820 1FA0                           u4740 1C7A  
                         u4660 19F8                           u5540 43F0                           u5532 43E0  
                         u5460 42DE                           u5452 42CC                           u5700 25E8  
                         u3781 3470                           u3941 301C                           u3861 2DA4  
                         u2981 281A                           u5381 1776                           u6157 52E2  
                         u6077 5722                           u5621 3D42                           u4581 3FCE  
                         u4821 1F9C                           u4741 1C76                           u4661 19F4  
                         u5541 43EC                           u5461 42D8                           u5701 25E4  
                         u3950 3068                           u3870 2F22                           u3790 2CDE  
                         u2990 2830                           u5390 17B8                           u5550 3AE8  
                         u4590 3FE2                           u4910 2258                           u4830 204E  
                         u4750 1C88                           u4670 1A72                           u5470 42F0  
                         u5462 42E0                           u5710 262E                           u3951 3064  
                         u3791 2CDA                           u2991 282C                           u5391 17B4  
                         u6087 574E                           u5551 3AE4                           u4591 3FDE  
                         u4911 2254                           u4831 204A                           u4751 1C84  
                         u4671 1A6E                           u5471 42EC                           u5711 262A  
                         u3960 3096                           u3880 2F7C                           u5560 3B42  
                         u4920 5DC6                           u4840 208A                           u4760 1CB2  
                         u4680 1AFE                           u5480 4322                           u5720 2674  
                         u5640 238A                           u3961 3092                           u3881 2F78  
                         u6097 577C                           u5561 3B3E                           u4921 5DBE  
                         u4841 2086                           u4761 1CAE                           u4681 1AFA  
                         u5481 431E                           u5721 2670                           u5641 2386  
                         u3970 30D0                           u3890 2F9C                           u5570 3B98  
                         u4850 2098                           u4770 1DFA                           u4690 1B30  
                         u5490 435A                           u5730 26BA                           u5650 2404  
                         u3971 30CC                           u3891 2F98                           u3875 2F18  
                         u5571 3B94                           u4851 2094                           u4771 1DF6  
                         u4691 1B2C                           u5491 4356                           u5731 26B6  
                         u5651 2400                           u3980 502E                           u4940 5F08  
                         u5580 3BEE                           u4860 20EC                           u4780 1E60  
                         u5740 2700                           u5660 24A8                           u3981 502A  
                         u4941 5F04                           u5581 3BEA                           u4861 20E8  
                         u4781 1E5C                           u5741 26FC                           u5661 24A4  
                         u3990 506C                           u5590 3C44                           u4870 21BE  
                         u4790 1EA8                           u4950 37DE                           u5750 2746  
                         u5670 24DE                           u3991 5068                           u5591 3C40  
                         u4871 21BA                           u4791 1EA4                           u4951 37DA  
                         u5751 2742                           u5671 24DA                           u4880 21DA  
                         u4960 382E                           u5760 2766                           u5680 2554  
                         u4881 21D6                           u4961 382A                           u5761 2762  
                         u5681 2550                           u4938 5DC8                           u4890 2242  
                         u4970 384E                           u5770 27B0                           u5690 25A2  
                         u4891 223C                           u4971 384A                           u5907 42AC  
                         u5771 27AC                           u5691 259E                           u4980 3964  
                         u5780 27CA                           u4981 3960                           u5917 42FE  
                         u5781 27C6                           u4990 607E                           u5790 2800  
                         u4991 607A                           u5927 4338                           u5791 27FC  
                         u5937 4370                           u5947 43AC                           u5867 236E  
                         u5957 43FC                           u5877 2396                           u5967 4FB4  
                         u5887 2444                           u5977 5EE4                           u5897 4238  
                         u5987 56C8                           u5997 56F4                  _LightBlueMove 590C  
                         abs@a 0013                           _dbuf 02A0                           _labs 5580  
                         _main 2298                           _dtoa 3D9C                           _prec 00E9  
                         _vals 016A                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                         btemp 005F                           _stop 53AA                  ___fpclassifyf 4C22  
                         prodh 000FF4                           prodl 000FF3                           start 0034  
              ___fldiv@new_exp 0043         __end_of_color_read_Red 5B44                __end_of_HighISR 0034  
       __end_of_color_read_lum 5AF4                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 5E5C                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 5C32  
              _RunOneBlockTime 00F0                  ___fltol@sign1 0009                __end_of___aodiv 4748  
                        ?_labs 0001                __end_of___fladd 2CC4                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 4A18                __end_of___fldiv 3488  
              __end_of___flneg 5ED2                __end_of___flmul 30EE                __end_of___flsub 5D14  
              __end_of___fltol 4B1E                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 5516                          i2l225 0030                   vfpfcnvrt@fmt 0097  
                        _TMR0H 000FD4                          _TMR0L 000FD3                __end_of_go_Home 3D9C  
      __end_of_sendCharSerial4 6084     __end_of_I2C_2_Master_Start 60BA     __end_of_I2C_2_Master_Write 6090  
                 YellowMove@mL 0020                          _flags 00EB                   YellowMove@mR 0022  
                        _fputc 4D20                          _fputs 5D58                 delayed_ms@time 0001  
                        labs@a 0001                          pad@fp 0011                          _power 00F4  
                        _width 00E7                          _putch 60C0                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                 ?_LightBlueMove 0020  
                        tablat 000FF5                          plusw2 000FDB               ??_Colour_decider 004F  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 58BA  
               ?___fpclassifyf 0001        __end_of_color_read_Blue 5BE4          _I2C_2_Master_RepStart 609C  
             __end_of_BlueMove 564C                     PinkMove@mL 0020                     PinkMove@mR 0022  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 5BE4  
      __end_of_turnCalibration 440C                _reverseOneBlock 5704                   __end_of_labs 55E6  
                 __end_of_main 2804                   __end_of_dtoa 401A                   __end_of_stop 5428  
              _colour_rel$3203 0064                _colour_rel$3204 0068                         ??_labs 0005  
                       ??_main 00D1                         ??_dtoa 0026          __end_of_ReverseYellow 4EA0  
             __end_of_PinkMove 5A54                         ??_stop 0018                  __activetblptr 000003  
            Colour_decider@Hue 007C              Colour_decider@rel 004D                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         ?_fputs 000A                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         _RG6PPS 000E88  
                       i2l5622 000A                         i2l5624 001A                         i2l5626 002C  
                    ??_HighISR 0001       __end_of_color_click_init 59B0                         _RX4PPS 000E15  
                       _TX4REG 000EE4                     _OrangeMove 58BA               __end_of___xxtofl 45C0  
                    ??_RedMove 0024                  ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 00AE                  ??_ReversePink 0024                         ___flge 4B1E  
                       ___fleq 5000                      ??___aodiv 0011                      ??___fladd 0009  
                    ??___aomod 0011                         ___wmul 5FE8              ForwardOneBlock@mL 001A  
            ForwardOneBlock@mR 001C                      ??___fldiv 003A                      ??___flneg 0005  
                    ??___flmul 0019                      ??___flsub 0032                      ??___fltol 0005  
                       _efgtoa 189E                      ??___lwdiv 000B                         _floorf 401A  
                       _memcpy 5A54                         clear_0 5C0A                         clear_1 5C16  
                       clear_2 5C22                         _motorL 0161                         _motorR 0158  
                       isa$std 000001                      ??_go_Home 0028                         pad@buf 0013  
                       dtoa@fp 001C                         _strcpy 5D14                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
              ___fpclassifyf@e 0009                ___fpclassifyf@u 000B                ___fpclassifyf@x 0001  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A  
           Forwardhalfblock@mR 001C                         putch@c 0001                ??_LightBlueMove 0024  
             __end_of_vfprintf 5868                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 005F               __end_of_turnLeft 51E6  
                   ___flge@ff1 002A                     _YellowMove 59B0                     ___flge@ff2 002E  
              ??___fpclassifyf 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0032                     ___fleq@ff2 0036  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 5C28        __end_of_reverseOneBlock 575E                     ___flneg@f1 0001  
     __end_of_color_read_Green 5B94         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
                   ___fltol@f1 0001               ?_color_read_Blue 0005                _Interrupts_init 6090  
               __pcstackCOMRAM 0001               ?_turnCalibration 0020                  _fullSpeedBack 51E6  
                 __pidataBANK0 60BA                  __end_of_fputc 4DEA                  __end_of_fputs 5D9C  
                __end_of_putch 60C2              __end_of_GreenMove 5E9A            __end_of_Timer0_init 604E  
          __end_of_ReversePink 4F56                      ?_BlueMove 0020                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14357 00D3          __end_of_reverseDetect 57B8  
                      ??_putch 0001                     __pbssBANK0 00D3                     __pbssBANK1 0100  
                   __pbssBANK2 0200                reverseDetect@mL 001A                reverseDetect@mR 001C  
                  ?_OrangeMove 0020               _Forwardhalfblock 57B8                     _getTMR0val 5FC2  
            __end_of_RetryMove 5580                      ?_PinkMove 0020              _color_writetoaddr 600E  
                   _delayed_ms 5ED2                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 002A                        ?___fleq 0032             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                        ?_efgtoa 0060  
                      ?_floorf 004B                   ?_turnRight45 001A                        ?_memcpy 0001  
            __end_of_TurnDelay 5F40          __end_of_timed_forward 5000            ??_color_writetoaddr 0004  
                      ?_strcpy 0001                  colour_rel@rel 004D                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 3488  
      __end_of_Interrupts_init 609C         color_writetoaddr@value 0003               ??_color_read_Red 0007  
             main@consecuitive 01D6                        _HighISR 0008               ??_color_read_lum 0007  
             ?_reverseOneBlock 001A      __end_of_color_writetoaddr 602E                        _RedMove 5E1E  
           _I2C_2_Master_Start 60B0                     ??_PinkMove 0024                     _initUSART4 604E  
           _I2C_2_Master_Write 6084                        __Hparam 0000                        _WayBack 011A  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 602E  
                  RetryMove@mL 0020                    RetryMove@mR 0022        sendStringSerial4@string 0002  
            reverseOneBlock@mL 001A              reverseOneBlock@mR 001C                    _ReversePink 4EA0  
                      ___aodiv 45C0                        ___fladd 2804                        ___aomod 48B4  
                      ___fldiv 30EE                        ___flneg 5E9A                        ___flmul 2CC4  
                      ___flsub 5CCE                        ___fltol 4A18            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 54A2            ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8  
                 __psmallconst 0E00                   turnLeft45@mL 001A                   turnLeft45@mR 001C  
                      __pcinit 5BE4                        __ramtop 0E00                      ?_turnLeft 0014  
                      _go_Home 3ABC                        __ptext0 2298                        __ptext1 422C  
                      __ptext2 5868                        __ptext3 5812                        __ptext4 37B6  
                      __ptext5 189E                        __ptext6 5D14                        __ptext7 5A54  
                      __ptext8 5580                        __ptext9 401A                      _T2CONbits 000FBD  
                   ??___xxtofl 0005                 main@lost_count 01DA                      _T2HLTbits 000FBE  
                      efgtoa@c 0066                        efgtoa@d 0074                        efgtoa@e 0078  
                      efgtoa@f 0062                        efgtoa@g 008D                        efgtoa@h 0082  
                      efgtoa@i 0080                        efgtoa@l 0086                        efgtoa@m 0076  
                      efgtoa@n 008B                        efgtoa@p 006B                        efgtoa@t 006D  
                      efgtoa@u 0091                        efgtoa@w 007A                  _RxBufWriteCnt 00EF  
            color_read_lum@tmp 000A                        main@buf 0172                        _sprintf 5868  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 5C28  
                      floorf@e 0059                        floorf@m 0055                        floorf@u 005B  
                      floorf@x 004B                        memcpy@d 0007                        memcpy@n 0005  
                      memcpy@s 0009                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                    ?_getTMR0val 0001                LightBlueMove@mL 0020  
              LightBlueMove@mR 0022                ??_fullSpeedBack 0018             ??_color_click_init 0005  
                   _move_count 0114                    ?_delayed_ms 0001              turnCalibration@mL 0020  
            turnCalibration@mR 0022              __end_of_vfpfcnvrt 3ABC                     efgtoa@mode 0072  
                   efgtoa@sign 008A                        postdec1 000FE5                        postdec2 000FDD  
                  _Turn45Delay 00F2                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 009D                     ??_vfprintf 005F  
                      strcpy@d 0007                        strcpy@s 0005                _initDCmotorsPWM 5322  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 5148                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                      _TRISHbits 000F88                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E               fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016  
                ReversePink@mL 0020                  ReversePink@mR 0022       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B               ?_Interrupts_init 0001  
                  ___flmul@grs 001E                    _CCP1CONbits 000FAB                     main@colour 01D8  
                 _EUSART4RXbuf 0100                   _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001                      RedMove@mL 0020  
                    RedMove@mR 0022             ??_color_read_Green 0007                     _turnLeft45 5C80  
               __end_of___flge 4C22                 __end_of___fleq 50AA                 _fullSpeedAhead 5284  
                  vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095  
               __end_of___wmul 600E                 __end_of_efgtoa 2298                 __end_of_floorf 422C  
               __end_of_memcpy 5AA4                     floorf@F526 00DF       __end_of_Forwardhalfblock 5812  
                    _GreenMove 5E5C                 __end_of_strcpy 5D58            start_initialization 5BE4  
                  __end_of_abs 5E1E                    __end_of_pad 54A2                  _TxBufWriteCnt 00ED  
        __end_of_LightBlueMove 595E                   ??_OrangeMove 0024          __end_of___fpclassifyf 4D20  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 53AA                    vfprintf@fmt 00AA  
       __end_of_fullSpeedAhead 5322                       ??___flge 0032                       ??___fleq 003A  
                    _RetryMove 5516                       ??___wmul 0005            go_Home@Time_forward 0026  
                ??_readColours 000E                       ??_efgtoa 0067                    __pdataBANK0 00F0  
              _ForwardOneBlock 56AA                       ??_floorf 004F                       ??_memcpy 0007  
                     ??_strcpy 0005                      ___fladd@a 0005                      ___fladd@b 0001  
                _ReverseYellow 4DEA                      ___fldiv@a 0036                      ___fldiv@b 0032  
                   ?_GreenMove 0020                   OrangeMove@mL 0020                   OrangeMove@mR 0022  
           __end_of_OrangeMove 590C                      ___flmul@a 0015                      ___flmul@b 0011  
                    ___flsub@a 002E                      ___flsub@b 002A                      _TurnDelay 5F0A  
                __pcstackBANK0 0060                  __pcstackBANK1 0172               ___aodiv@dividend 0001  
                 ??_YellowMove 0024                       ?_HighISR 0001          Colour_decider@RGB_col 0066  
                     ?_RedMove 0020                    _efgtoa$2852 006F               ___lwdiv@dividend 0007  
                    _dtoa$2821 002E                   ?_Timer0_init 0001                    ?_turnLeft45 001A  
              ?_fullSpeedAhead 0014                      __pintcode 0008                   ?_ReversePink 0020  
                   ?_RetryMove 0020                timed_forward@mL 0014                       ?___aodiv 0001  
              timed_forward@mR 0016                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0032               ___aodiv@quotient 0013                       ?___flneg 0001  
                     ?___flmul 0011                       ?___flsub 002A                       ?___fltol 0001  
          _Colour_decider$3205 0060                       ?___lwdiv 0007                       ?_go_Home 0024  
         I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020             __end_of_YellowMove 5A02  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              timed_forward@time 0018  
          __end_of_readColours 56AA              _I2C_2_Master_Idle 5F9A              _I2C_2_Master_Init 5F70  
            _I2C_2_Master_Read 5D9C              _I2C_2_Master_Stop 60A6                     ?_TurnDelay 0001  
                 _RxBufReadCnt 00EE             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0  
             getTMR0val@moving 0001                 colour_rel@vals 004B              _sendStringSerial4 5F40  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _LATHbits 000F80                   ??_getTMR0val 0001                       _PIE0bits 000E29  
           ?_sendStringSerial4 0002        __end_of_ForwardOneBlock 5704                   ??_delayed_ms 0003  
                  turnRight@mL 0014                    turnRight@mR 0016                      _lost_flag 0118  
                     _PIR0bits 000E33                       _PIR4bits 000E37                       i2u563_40 001A  
                     i2u563_41 0016               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA                 _Colour_decider 0E3E            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 37B6      __end_of_I2C_2_Master_Idle 5FC2  
    __end_of_I2C_2_Master_Init 5F9A      __end_of_I2C_2_Master_Read 5DDE              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 60B0                   setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002  
                  ??_GreenMove 0024              ??_color_read_Blue 0007             __end_of_getTMR0val 5FE8  
                 _TxBufReadCnt 00EC                       _BlueMove 55E6                      _turnRight 50AA  
           __end_of_delayed_ms 5F0A                     vfpfcnvrt@c 00A5              ??_turnCalibration 0024  
                    copy_data0 5BF8      __end_of_sendStringSerial4 5F70                   ??_colour_rel 004F  
                _reverseDetect 575E  __end_of_I2C_2_Master_RepStart 60A6             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 48B4                   ??_initUSART4 0001                       _PinkMove 5A02  
                     __Hrparam 0000         __end_of_Colour_decider 189E                      memcpy@tmp 000B  
                   vfprintf@ap 00AC                       __Lrparam 0000                     vfprintf@fp 00A8  
        __end_of_fullSpeedBack 5284                    ??_RetryMove 0024           TurnDelay@Turn45Delay 0001  
                  _readColours 564C                ??_ReverseYellow 0024                     ?_vfpfcnvrt 0095  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 37B6  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00E3                     _ANSELFbits 000EB4  
                _timed_forward 4F56                     sprintf@fmt 00B2              ?_Forwardhalfblock 001A  
                     ___xxtofl 440C                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                  ??_TurnDelay 0003                   _Time_forward 023C                ___lwdiv@divisor 0009  
           __end_of_initUSART4 606C                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 4C22                       __ptext11 4A18  
                     __ptext20 45C0                       __ptext12 5E9A                       __ptext21 5F40  
                     __ptext13 3D9C                       __ptext30 604E                       __ptext22 606C  
                     __ptext14 5428                       __ptext31 5322                       __ptext23 564C  
                     __ptext15 5D58                       __ptext40 590C                       __ptext32 3ABC  
                     __ptext24 5AA4                       __ptext16 4D20                       __ptext41 5E5C  
                     __ptext33 4F56                       __ptext25 5AF4                       __ptext17 60C0  
                     __ptext50 5F9A                       __ptext42 55E6                       __ptext34 5ED2  
                     __ptext26 5B44                       __ptext18 5DDE                       __ptext51 5F70  
                     __ptext43 5FC2                       __ptext35 4DEA                       __ptext27 5B94  
                     __ptext19 48B4                       __ptext60 5F0A                       __ptext52 59B0  
                     __ptext44 3488                       __ptext36 4EA0                       __ptext28 609C  
                     __ptext61 5704                       __ptext53 5C32                       __ptext45 595E  
                     __ptext37 56AA                       __ptext29 5D9C                       __ptext70 54A2  
                     __ptext62 575E                       __ptext54 50AA                       __ptext46 600E  
                     __ptext38 5E1E                       __ptext71 0E3E                       __ptext63 51E6  
                     __ptext55 602E                       __ptext47 6084                       __ptext39 58BA  
                     __ptext72 440C                       __ptext64 6090                       __ptext56 5516  
                     __ptext48 60A6                       __ptext73 5CCE                       __ptext65 57B8  
                     __ptext57 5A02                       __ptext49 60B0                       __ptext74 2804  
                     __ptext66 53AA                       __ptext58 5C80                       __ptext75 2CC4  
                     __ptext67 5284                       __ptext59 5148                       __ptext76 4B1E  
                     __ptext68 4748                       __ptext77 5000                       __ptext69 5FE8  
                     __ptext78 30EE                 ?_reverseDetect 001A                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     strcpy@dest 0001                     turnLeft@mL 0014  
                   turnLeft@mR 0016               ?_ForwardOneBlock 001A                       go_Home@i 002B  
              ?_Colour_decider 004B                       efgtoa@fp 0060                       efgtoa@ne 0069  
                     efgtoa@pp 0071                       efgtoa@ou 007C                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005F                       _vfprintf 5812  
                     _run_flag 0116                  ??_turnRight45 001E                       _turnLeft 5148  
             ___aomod@dividend 0001                 ?_timed_forward 0014                    delayed_ms@i 0004  
            ??_reverseOneBlock 001E                     _INTCONbits 000FF2                main@prev_colour 01DC  
                     memcpy@d1 0001                       memcpy@s1 0003                    _setMotorPWM 4748  
                turnRight45@mL 001A                  turnRight45@mR 001C                       intlevel2 0000  
                    sprintf@ap 00C4               ??_fullSpeedAhead 0018                      strcpy@src 0003  
                 ??_turnLeft45 001E                     BlueMove@mL 0020                     BlueMove@mR 0022  
                  efgtoa@nmode 0073                ___aomod@divisor 0009                    ??_vfpfcnvrt 009B  
              ___aomod@counter 0011               _color_click_init 595E                       sprintf@f 00C6  
                     sprintf@s 00B0                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
          __end_of_turnRight45 5C80                ??_reverseDetect 001E                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 5CCE                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 606C                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
