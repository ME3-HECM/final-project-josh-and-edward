

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 15 18:58:56 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   101                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   102                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   103                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   104                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   105                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   106   000000                     
   107                           ; Generated 06/04/2022 GMT
   108                           ; 
   109                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   110                           ; All rights reserved.
   111                           ; 
   112                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   113                           ; 
   114                           ; Redistribution and use in source and binary forms, with or without modification, are
   115                           ; permitted provided that the following conditions are met:
   116                           ; 
   117                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   118                           ;        conditions and the following disclaimer.
   119                           ; 
   120                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   121                           ;        of conditions and the following disclaimer in the documentation and/or other
   122                           ;        materials provided with the distribution. Publication is not required when
   123                           ;        this file is used in an embedded application.
   124                           ; 
   125                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   126                           ;        software without specific prior written permission.
   127                           ; 
   128                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   129                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   130                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   131                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   132                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   133                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   134                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   135                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   136                           ; 
   137                           ; 
   138                           ; Code-generator required, PIC18F67K40 Definitions
   139                           ; 
   140                           ; SFR Addresses
   141   000000                     
   142                           	psect	idataBANK0
   143   006086                     __pidataBANK0:
   144                           	callstack 0
   145                           
   146                           ;initializer for _RunOneBlockTime
   147   006086  041A               	dw	1050
   148                           
   149                           ;initializer for _Turn45Delay
   150   006088  003C               	dw	60
   151                           
   152                           ;initializer for _power
   153   00608A  0032               	dw	50
   154                           
   155                           	psect	idataBANK1
   156   00608C                     __pidataBANK1:
   157                           	callstack 0
   158                           
   159                           ;initializer for _run_flag
   160   00608C  0001               	dw	1
   161                           
   162                           ;initializer for _move_count
   163   00608E  FFFF               	dw	65535
   164   000000                     _LATHbits	set	3968
   165   000000                     _TRISEbits	set	3973
   166   000000                     _TX4REG	set	3812
   167   000000                     _RC4STAbits	set	3815
   168   000000                     _SP4BRGH	set	3814
   169   000000                     _SSP2CON2bits	set	3802
   170   000000                     _RX4PPS	set	3605
   171   000000                     _SSP2CLKPPS	set	3612
   172   000000                     _SSP2DATPPS	set	3613
   173   000000                     _ANSELDbits	set	3751
   174   000000                     _SSP2ADD	set	3798
   175   000000                     _SSP2CON1bits	set	3801
   176   000000                     _LATAbits	set	3961
   177   000000                     _LATFbits	set	3966
   178   000000                     _LATGbits	set	3967
   179   000000                     _TRISAbits	set	3969
   180   000000                     _TRISGbits	set	3975
   181   000000                     _TRISHbits	set	3976
   182   000000                     _PORTFbits	set	3982
   183   000000                     _TMR0L	set	4051
   184   000000                     _TMR0H	set	4052
   185   000000                     _INTCONbits	set	4082
   186   000000                     _CCPR2H	set	4006
   187   000000                     _CCPR1H	set	4010
   188   000000                     _TRISCbits	set	3971
   189   000000                     _TRISDbits	set	3972
   190   000000                     _TRISFbits	set	3974
   191   000000                     _LATDbits	set	3964
   192   000000                     _RC4REG	set	3811
   193   000000                     _SP4BRGL	set	3813
   194   000000                     _TX4STAbits	set	3816
   195   000000                     _BAUD4CONbits	set	3817
   196   000000                     _SSP2CON2	set	3802
   197   000000                     _SSP2STAT	set	3800
   198   000000                     _ANSELFbits	set	3764
   199   000000                     _SSP2BUF	set	3797
   200   000000                     _PIE0bits	set	3625
   201   000000                     _PIR4bits	set	3639
   202   000000                     _RC0PPS	set	3682
   203   000000                     _RD5PPS	set	3695
   204   000000                     _RE2PPS	set	3700
   205   000000                     _RD6PPS	set	3696
   206   000000                     _RC7PPS	set	3689
   207   000000                     _CCPR4H	set	3873
   208   000000                     _CCPR3H	set	3877
   209   000000                     _PIR0bits	set	3635
   210   000000                     _T0CON1bits	set	4054
   211   000000                     _T0CON0bits	set	4053
   212   000000                     _CCP1CONbits	set	4011
   213   000000                     _CCPTMRS0bits	set	4013
   214   000000                     _T2PR	set	4028
   215   000000                     _T2CONbits	set	4029
   216   000000                     _CCP2CONbits	set	4007
   217   000000                     _CCP3CONbits	set	3878
   218   000000                     _CCP4CONbits	set	3874
   219   000000                     _RE4PPS	set	3702
   220   000000                     _RG6PPS	set	3720
   221   000000                     _T2CLKCONbits	set	4031
   222   000000                     _T2HLTbits	set	4030
   223                           
   224                           	psect	smallconst
   225   000E00                     __psmallconst:
   226                           	callstack 0
   227   000E00  00                 	db	0
   228   000E01                     STR_1:
   229                           
   230                           ; BSR set to: 14
   231   000E01  72                 	db	114	;'r'
   232   000E02  65                 	db	101	;'e'
   233   000E03  64                 	db	100	;'d'
   234   000E04  3D                 	db	61	;'='
   235   000E05  25                 	db	37
   236   000E06  66                 	db	102	;'f'
   237   000E07  20                 	db	32
   238   000E08  67                 	db	103	;'g'
   239   000E09  72                 	db	114	;'r'
   240   000E0A  65                 	db	101	;'e'
   241   000E0B  65                 	db	101	;'e'
   242   000E0C  6E                 	db	110	;'n'
   243   000E0D  3D                 	db	61	;'='
   244   000E0E  25                 	db	37
   245   000E0F  66                 	db	102	;'f'
   246   000E10  20                 	db	32
   247   000E11  62                 	db	98	;'b'
   248   000E12  6C                 	db	108	;'l'
   249   000E13  75                 	db	117	;'u'
   250   000E14  65                 	db	101	;'e'
   251   000E15  3D                 	db	61	;'='
   252   000E16  25                 	db	37
   253   000E17  66                 	db	102	;'f'
   254   000E18  20                 	db	32
   255   000E19  6C                 	db	108	;'l'
   256   000E1A  75                 	db	117	;'u'
   257   000E1B  6D                 	db	109	;'m'
   258   000E1C  3D                 	db	61	;'='
   259   000E1D  25                 	db	37
   260   000E1E  64                 	db	100	;'d'
   261   000E1F  20                 	db	32
   262   000E20  61                 	db	97	;'a'
   263   000E21  63                 	db	99	;'c'
   264   000E22  74                 	db	116	;'t'
   265   000E23  75                 	db	117	;'u'
   266   000E24  61                 	db	97	;'a'
   267   000E25  6C                 	db	108	;'l'
   268   000E26  5F                 	db	95	;'_'
   269   000E27  63                 	db	99	;'c'
   270   000E28  6F                 	db	111	;'o'
   271   000E29  6C                 	db	108	;'l'
   272   000E2A  6F                 	db	111	;'o'
   273   000E2B  75                 	db	117	;'u'
   274   000E2C  72                 	db	114	;'r'
   275   000E2D  3D                 	db	61	;'='
   276   000E2E  25                 	db	37
   277   000E2F  64                 	db	100	;'d'
   278   000E30  20                 	db	32
   279   000E31  0D                 	db	13
   280   000E32  0A                 	db	10
   281   000E33  00                 	db	0
   282   000E34                     STR_2:
   283                           
   284                           ; BSR set to: 14
   285   000E34  69                 	db	105	;'i'
   286   000E35  6E                 	db	110	;'n'
   287   000E36  66                 	db	102	;'f'
   288   000E37  00                 	db	0
   289   000E38                     STR_5:
   290                           
   291                           ; BSR set to: 14
   292   000E38  6E                 	db	110	;'n'
   293   000E39  61                 	db	97	;'a'
   294   000E3A  6E                 	db	110	;'n'
   295   000E3B  00                 	db	0
   296   000E3C  00                 	db	0	; dummy byte at the end
   297   000000                     
   298                           ; #config settings
   299                           
   300                           	psect	cinit
   301   005464                     __pcinit:
   302                           	callstack 0
   303   005464                     start_initialization:
   304                           	callstack 0
   305   005464                     __initialization:
   306                           	callstack 0
   307                           
   308                           ; Initialize objects allocated to BANK1 (4 bytes)
   309                           ; load TBLPTR registers with __pidataBANK1
   310   005464  0E8C               	movlw	low __pidataBANK1
   311   005466  6EF6               	movwf	tblptrl,c
   312   005468  0E60               	movlw	high __pidataBANK1
   313   00546A  6EF7               	movwf	tblptrh,c
   314   00546C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   315   00546E  6EF8               	movwf	tblptru,c
   316   005470  EE01  F0D8         	lfsr	0,__pdataBANK1
   317   005474  EE10 F004          	lfsr	1,4
   318   005478                     copy_data0:
   319   005478  0009               	tblrd		*+
   320   00547A  CFF5 FFEE          	movff	tablat,postinc0
   321   00547E  50E5               	movf	postdec1,w,c
   322   005480  50E1               	movf	fsr1l,w,c
   323   005482  E1FA               	bnz	copy_data0
   324                           
   325                           ; Initialize objects allocated to BANK0 (6 bytes)
   326                           ; load TBLPTR registers with __pidataBANK0
   327   005484  0E86               	movlw	low __pidataBANK0
   328   005486  6EF6               	movwf	tblptrl,c
   329   005488  0E60               	movlw	high __pidataBANK0
   330   00548A  6EF7               	movwf	tblptrh,c
   331   00548C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   332   00548E  6EF8               	movwf	tblptru,c
   333   005490  EE00  F0F2         	lfsr	0,__pdataBANK0
   334   005494  EE10 F006          	lfsr	1,6
   335   005498                     copy_data1:
   336   005498  0009               	tblrd		*+
   337   00549A  CFF5 FFEE          	movff	tablat,postinc0
   338   00549E  50E5               	movf	postdec1,w,c
   339   0054A0  50E1               	movf	fsr1l,w,c
   340   0054A2  E1FA               	bnz	copy_data1
   341                           
   342                           ; Clear objects allocated to BANK2 (240 bytes)
   343   0054A4  EE02  F000         	lfsr	0,__pbssBANK2
   344   0054A8  0EF0               	movlw	240
   345   0054AA                     clear_0:
   346   0054AA  6AEE               	clrf	postinc0,c
   347   0054AC  06E8               	decf	wreg,f,c
   348   0054AE  E1FD               	bnz	clear_0
   349                           
   350                           ; Clear objects allocated to BANK1 (114 bytes)
   351   0054B0  EE01  F000         	lfsr	0,__pbssBANK1
   352   0054B4  0E72               	movlw	114
   353   0054B6                     clear_1:
   354   0054B6  6AEE               	clrf	postinc0,c
   355   0054B8  06E8               	decf	wreg,f,c
   356   0054BA  E1FD               	bnz	clear_1
   357                           
   358                           ; Clear objects allocated to BANK0 (31 bytes)
   359   0054BC  EE00  F0D3         	lfsr	0,__pbssBANK0
   360   0054C0  0E1F               	movlw	31
   361   0054C2                     clear_2:
   362   0054C2  6AEE               	clrf	postinc0,c
   363   0054C4  06E8               	decf	wreg,f,c
   364   0054C6  E1FD               	bnz	clear_2
   365   0054C8                     end_of_initialization:
   366                           	callstack 0
   367   0054C8                     __end_of__initialization:
   368                           	callstack 0
   369   0054C8  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   370   0054CA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   371   0054CC  0100               	movlb	0
   372   0054CE  EF72  F01A         	goto	_main	;jump to C main() function
   373                           
   374                           	psect	bssBANK0
   375   0000D3                     __pbssBANK0:
   376                           	callstack 0
   377   0000D3                     	ds	12
   378   0000DF                     floorf@F526:
   379                           	callstack 0
   380   0000DF                     	ds	4
   381   0000E3                     ___fpclassifyf@F465:
   382                           	callstack 0
   383   0000E3                     	ds	4
   384   0000E7                     _width:
   385                           	callstack 0
   386   0000E7                     	ds	2
   387   0000E9                     _prec:
   388                           	callstack 0
   389   0000E9                     	ds	2
   390   0000EB                     _lost_count:
   391                           	callstack 0
   392   0000EB                     	ds	2
   393   0000ED                     _flags:
   394                           	callstack 0
   395   0000ED                     	ds	1
   396   0000EE                     _TxBufReadCnt:
   397                           	callstack 0
   398   0000EE                     	ds	1
   399   0000EF                     _TxBufWriteCnt:
   400                           	callstack 0
   401   0000EF                     	ds	1
   402   0000F0                     _RxBufReadCnt:
   403                           	callstack 0
   404   0000F0                     	ds	1
   405   0000F1                     _RxBufWriteCnt:
   406                           	callstack 0
   407   0000F1                     	ds	1
   408                           
   409                           	psect	dataBANK0
   410   0000F2                     __pdataBANK0:
   411                           	callstack 0
   412   0000F2                     _RunOneBlockTime:
   413                           	callstack 0
   414   0000F2                     	ds	2
   415   0000F4                     _Turn45Delay:
   416                           	callstack 0
   417   0000F4                     	ds	2
   418   0000F6                     _power:
   419                           	callstack 0
   420   0000F6                     	ds	2
   421                           
   422                           	psect	bssBANK1
   423   000100                     __pbssBANK1:
   424                           	callstack 0
   425   000100                     _EUSART4RXbuf:
   426                           	callstack 0
   427   000100                     	ds	20
   428   000114                     _lost_flag:
   429                           	callstack 0
   430   000114                     	ds	2
   431   000116                     _consecuitive:
   432                           	callstack 0
   433   000116                     	ds	2
   434   000118                     _prev_colour:
   435                           	callstack 0
   436   000118                     	ds	2
   437   00011A                     _WayBack:
   438                           	callstack 0
   439   00011A                     	ds	50
   440   00014C                     _rel:
   441                           	callstack 0
   442   00014C                     	ds	12
   443   000158                     _motorR:
   444                           	callstack 0
   445   000158                     	ds	9
   446   000161                     _motorL:
   447                           	callstack 0
   448   000161                     	ds	9
   449   00016A                     _vals:
   450                           	callstack 0
   451   00016A                     	ds	8
   452                           
   453                           	psect	dataBANK1
   454   0001D8                     __pdataBANK1:
   455                           	callstack 0
   456   0001D8                     _run_flag:
   457                           	callstack 0
   458   0001D8                     	ds	2
   459   0001DA                     _move_count:
   460                           	callstack 0
   461   0001DA                     	ds	2
   462                           
   463                           	psect	bssBANK2
   464   000200                     __pbssBANK2:
   465                           	callstack 0
   466   000200                     _EUSART4TXbuf:
   467                           	callstack 0
   468   000200                     	ds	60
   469   00023C                     _Time_forward:
   470                           	callstack 0
   471   00023C                     	ds	100
   472   0002A0                     _dbuf:
   473                           	callstack 0
   474   0002A0                     	ds	80
   475                           
   476                           	psect	cstackBANK1
   477   000172                     __pcstackBANK1:
   478                           	callstack 0
   479   000172                     main@buf:
   480                           	callstack 0
   481                           
   482                           ; 100 bytes @ 0x0
   483   000172                     	ds	100
   484   0001D6                     main@colour:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x64
   488   0001D6                     	ds	2
   489                           
   490                           	psect	cstackBANK0
   491   000060                     __pcstackBANK0:
   492                           	callstack 0
   493   000060                     efgtoa@fp:
   494                           	callstack 0
   495   000060                     colour_rel@L:
   496                           	callstack 0
   497   000060                     _Colour_decider$3265:
   498                           	callstack 0
   499                           
   500                           ; 4 bytes @ 0x0
   501   000060                     	ds	2
   502   000062                     efgtoa@f:
   503                           	callstack 0
   504                           
   505                           ; 4 bytes @ 0x2
   506   000062                     	ds	2
   507   000064                     Colour_decider@Cmax_i:
   508                           	callstack 0
   509   000064                     _colour_rel$3263:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0x4
   513   000064                     	ds	2
   514   000066                     efgtoa@c:
   515                           	callstack 0
   516   000066                     Colour_decider@RGB_col:
   517                           	callstack 0
   518                           
   519                           ; 12 bytes @ 0x6
   520   000066                     	ds	1
   521   000067                     ??_efgtoa:
   522                           
   523                           ; 1 bytes @ 0x7
   524   000067                     	ds	1
   525   000068                     _colour_rel$3264:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x8
   529   000068                     	ds	1
   530   000069                     efgtoa@ne:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x9
   534   000069                     	ds	2
   535   00006B                     efgtoa@p:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0xB
   539   00006B                     	ds	1
   540   00006C                     colour_rel@R:
   541                           	callstack 0
   542                           
   543                           ; 4 bytes @ 0xC
   544   00006C                     	ds	1
   545   00006D                     efgtoa@t:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0xD
   549   00006D                     	ds	2
   550   00006F                     _efgtoa$2894:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0xF
   554   00006F                     	ds	1
   555   000070                     colour_rel@G:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x10
   559   000070                     	ds	1
   560   000071                     efgtoa@pp:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x11
   564   000071                     	ds	1
   565   000072                     efgtoa@mode:
   566                           	callstack 0
   567   000072                     Colour_decider@Cmax:
   568                           	callstack 0
   569                           
   570                           ; 4 bytes @ 0x12
   571   000072                     	ds	1
   572   000073                     efgtoa@nmode:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x13
   576   000073                     	ds	1
   577   000074                     efgtoa@d:
   578                           	callstack 0
   579   000074                     colour_rel@B:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x14
   583   000074                     	ds	2
   584   000076                     efgtoa@m:
   585                           	callstack 0
   586   000076                     Colour_decider@Cmin:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0x16
   590   000076                     	ds	2
   591   000078                     efgtoa@e:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x18
   595   000078                     	ds	2
   596   00007A                     Colour_decider@i:
   597                           	callstack 0
   598   00007A                     efgtoa@w:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x1A
   602   00007A                     	ds	2
   603   00007C                     Colour_decider@Hue:
   604                           	callstack 0
   605   00007C                     efgtoa@ou:
   606                           	callstack 0
   607                           
   608                           ; 4 bytes @ 0x1C
   609   00007C                     	ds	4
   610   000080                     efgtoa@i:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x20
   614   000080                     	ds	2
   615   000082                     efgtoa@h:
   616                           	callstack 0
   617                           
   618                           ; 4 bytes @ 0x22
   619   000082                     	ds	4
   620   000086                     efgtoa@l:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x26
   624   000086                     	ds	4
   625   00008A                     efgtoa@sign:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x2A
   629   00008A                     	ds	1
   630   00008B                     efgtoa@n:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x2B
   634   00008B                     	ds	2
   635   00008D                     efgtoa@g:
   636                           	callstack 0
   637                           
   638                           ; 4 bytes @ 0x2D
   639   00008D                     	ds	4
   640   000091                     efgtoa@u:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x31
   644   000091                     	ds	4
   645   000095                     vfpfcnvrt@fp:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x35
   649   000095                     	ds	2
   650   000097                     vfpfcnvrt@fmt:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x37
   654   000097                     	ds	2
   655   000099                     vfpfcnvrt@ap:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x39
   659   000099                     	ds	2
   660   00009B                     ??_vfpfcnvrt:
   661                           
   662                           ; 1 bytes @ 0x3B
   663   00009B                     	ds	2
   664   00009D                     vfpfcnvrt@convarg:
   665                           	callstack 0
   666                           
   667                           ; 8 bytes @ 0x3D
   668   00009D                     	ds	8
   669   0000A5                     vfpfcnvrt@c:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x45
   673   0000A5                     	ds	1
   674   0000A6                     vfpfcnvrt@cp:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x46
   678   0000A6                     	ds	2
   679   0000A8                     ?_vfprintf:
   680                           	callstack 0
   681   0000A8                     vfprintf@fp:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x48
   685   0000A8                     	ds	2
   686   0000AA                     vfprintf@fmt:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x4A
   690   0000AA                     	ds	2
   691   0000AC                     vfprintf@ap:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x4C
   695   0000AC                     	ds	2
   696   0000AE                     vfprintf@cfmt:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x4E
   700   0000AE                     	ds	2
   701   0000B0                     ?_sprintf:
   702                           	callstack 0
   703   0000B0                     sprintf@s:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x50
   707   0000B0                     	ds	2
   708   0000B2                     sprintf@fmt:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x52
   712   0000B2                     	ds	18
   713   0000C4                     sprintf@ap:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x64
   717   0000C4                     	ds	2
   718   0000C6                     sprintf@f:
   719                           	callstack 0
   720                           
   721                           ; 11 bytes @ 0x66
   722   0000C6                     	ds	11
   723   0000D1                     ??_main:
   724                           
   725                           ; 1 bytes @ 0x71
   726   0000D1                     	ds	2
   727                           
   728                           	psect	cstackCOMRAM
   729   000001                     __pcstackCOMRAM:
   730                           	callstack 0
   731   000001                     ??_getTMR0val:
   732   000001                     ??_I2C_2_Master_Idle:
   733   000001                     ?___fpclassifyf:
   734                           	callstack 0
   735   000001                     ?___wmul:
   736                           	callstack 0
   737   000001                     ?___fladd:
   738                           	callstack 0
   739   000001                     ?_labs:
   740                           	callstack 0
   741   000001                     ?___flneg:
   742                           	callstack 0
   743   000001                     ?___fltol:
   744                           	callstack 0
   745   000001                     ?___xxtofl:
   746                           	callstack 0
   747   000001                     ?___aodiv:
   748                           	callstack 0
   749   000001                     ?___aomod:
   750                           	callstack 0
   751   000001                     sendCharSerial4@charToSend:
   752                           	callstack 0
   753   000001                     initDCmotorsPWM@PWMperiod:
   754                           	callstack 0
   755   000001                     TurnDelay@Turn45Delay:
   756                           	callstack 0
   757   000001                     delayed_ms@time:
   758                           	callstack 0
   759   000001                     ___wmul@multiplier:
   760                           	callstack 0
   761   000001                     memcpy@d1:
   762                           	callstack 0
   763   000001                     fputc@c:
   764                           	callstack 0
   765   000001                     strcpy@dest:
   766                           	callstack 0
   767   000001                     ___flneg@f1:
   768                           	callstack 0
   769   000001                     ___fltol@f1:
   770                           	callstack 0
   771   000001                     ___fladd@b:
   772                           	callstack 0
   773   000001                     ___xxtofl@val:
   774                           	callstack 0
   775   000001                     ___fpclassifyf@x:
   776                           	callstack 0
   777   000001                     labs@a:
   778                           	callstack 0
   779   000001                     ___aodiv@dividend:
   780                           	callstack 0
   781   000001                     ___aomod@dividend:
   782                           	callstack 0
   783                           
   784                           ; 8 bytes @ 0x0
   785   000001                     	ds	1
   786   000002                     ??_I2C_2_Master_Read:
   787   000002                     I2C_2_Master_Write@data_byte:
   788                           	callstack 0
   789   000002                     sendStringSerial4@string:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x1
   793   000002                     	ds	1
   794   000003                     ??_delayed_ms:
   795   000003                     ??_TurnDelay:
   796   000003                     color_writetoaddr@value:
   797                           	callstack 0
   798   000003                     I2C_2_Master_Read@ack:
   799                           	callstack 0
   800   000003                     getTMR0val@temp:
   801                           	callstack 0
   802   000003                     ___wmul@multiplicand:
   803                           	callstack 0
   804   000003                     memcpy@s1:
   805                           	callstack 0
   806   000003                     fputc@fp:
   807                           	callstack 0
   808   000003                     strcpy@src:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x2
   812   000003                     	ds	1
   813   000004                     color_writetoaddr@address:
   814                           	callstack 0
   815   000004                     I2C_2_Master_Read@tmp:
   816                           	callstack 0
   817   000004                     delayed_ms@i:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x3
   821   000004                     	ds	1
   822   000005                     ??_fputc:
   823   000005                     ??___fpclassifyf:
   824   000005                     ??_labs:
   825   000005                     ??_color_click_init:
   826   000005                     ??___fltol:
   827   000005                     ??___xxtofl:
   828   000005                     ?_color_read_lum:
   829                           	callstack 0
   830   000005                     ?_color_read_Red:
   831                           	callstack 0
   832   000005                     ?_color_read_Green:
   833                           	callstack 0
   834   000005                     ?_color_read_Blue:
   835                           	callstack 0
   836   000005                     getTMR0val@moving:
   837                           	callstack 0
   838   000005                     ___wmul@product:
   839                           	callstack 0
   840   000005                     memcpy@n:
   841                           	callstack 0
   842   000005                     strcpy@s:
   843                           	callstack 0
   844   000005                     ___fladd@a:
   845                           	callstack 0
   846                           
   847                           ; 4 bytes @ 0x4
   848   000005                     	ds	2
   849   000007                     ??_color_read_lum:
   850   000007                     ??_color_read_Red:
   851   000007                     ??_color_read_Green:
   852   000007                     ??_color_read_Blue:
   853   000007                     ?___lwdiv:
   854                           	callstack 0
   855   000007                     ___lwdiv@dividend:
   856                           	callstack 0
   857   000007                     memcpy@d:
   858                           	callstack 0
   859   000007                     strcpy@d:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x6
   863   000007                     	ds	2
   864   000009                     ??___fladd:
   865   000009                     ___fltol@sign1:
   866                           	callstack 0
   867   000009                     ___xxtofl@sign:
   868                           	callstack 0
   869   000009                     ___lwdiv@divisor:
   870                           	callstack 0
   871   000009                     ___fpclassifyf@e:
   872                           	callstack 0
   873   000009                     memcpy@s:
   874                           	callstack 0
   875   000009                     ___aodiv@divisor:
   876                           	callstack 0
   877   000009                     ___aomod@divisor:
   878                           	callstack 0
   879                           
   880                           ; 8 bytes @ 0x8
   881   000009                     	ds	1
   882   00000A                     ___fltol@exp1:
   883                           	callstack 0
   884   00000A                     ___xxtofl@exp:
   885                           	callstack 0
   886   00000A                     color_read_lum@tmp:
   887                           	callstack 0
   888   00000A                     color_read_Red@tmp:
   889                           	callstack 0
   890   00000A                     color_read_Green@tmp:
   891                           	callstack 0
   892   00000A                     color_read_Blue@tmp:
   893                           	callstack 0
   894   00000A                     fputs@s:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x9
   898   00000A                     	ds	1
   899   00000B                     memcpy@tmp:
   900                           	callstack 0
   901   00000B                     ___lwdiv@quotient:
   902                           	callstack 0
   903   00000B                     ___xxtofl@arg:
   904                           	callstack 0
   905   00000B                     ___fpclassifyf@u:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0xA
   909   00000B                     	ds	1
   910   00000C                     readColours@vals:
   911                           	callstack 0
   912   00000C                     fputs@fp:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0xB
   916   00000C                     	ds	1
   917   00000D                     ___lwdiv@counter:
   918                           	callstack 0
   919   00000D                     ___fladd@signs:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0xC
   923   00000D                     	ds	1
   924   00000E                     ___fladd@aexp:
   925                           	callstack 0
   926   00000E                     fputs@c:
   927                           	callstack 0
   928   00000E                     setMotorPWM@m:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0xD
   932   00000E                     	ds	1
   933   00000F                     ___fladd@bexp:
   934                           	callstack 0
   935   00000F                     fputs@i:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0xE
   939   00000F                     	ds	1
   940   000010                     ??_setMotorPWM:
   941   000010                     ___fladd@grs:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0xF
   945   000010                     	ds	1
   946   000011                     ?___flmul:
   947                           	callstack 0
   948   000011                     ___aodiv@counter:
   949                           	callstack 0
   950   000011                     ___aomod@counter:
   951                           	callstack 0
   952   000011                     pad@fp:
   953                           	callstack 0
   954   000011                     ___flmul@b:
   955                           	callstack 0
   956                           
   957                           ; 4 bytes @ 0x10
   958   000011                     	ds	1
   959   000012                     setMotorPWM@posDuty:
   960                           	callstack 0
   961   000012                     ___aodiv@sign:
   962                           	callstack 0
   963   000012                     ___aomod@sign:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x11
   967   000012                     	ds	1
   968   000013                     ?_abs:
   969                           	callstack 0
   970   000013                     setMotorPWM@negDuty:
   971                           	callstack 0
   972   000013                     pad@buf:
   973                           	callstack 0
   974   000013                     abs@a:
   975                           	callstack 0
   976   000013                     ___aodiv@quotient:
   977                           	callstack 0
   978                           
   979                           ; 8 bytes @ 0x12
   980   000013                     	ds	1
   981   000014                     stop@mL:
   982                           	callstack 0
   983   000014                     turnLeft@mL:
   984                           	callstack 0
   985   000014                     turnRight@mL:
   986                           	callstack 0
   987   000014                     fullSpeedAhead@mL:
   988                           	callstack 0
   989   000014                     timed_forward@mL:
   990                           	callstack 0
   991   000014                     fullSpeedBack@mL:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x13
   995   000014                     	ds	1
   996   000015                     ??_abs:
   997   000015                     pad@p:
   998                           	callstack 0
   999   000015                     ___flmul@a:
  1000                           	callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x14
  1003   000015                     	ds	1
  1004   000016                     stop@mR:
  1005                           	callstack 0
  1006   000016                     turnLeft@mR:
  1007                           	callstack 0
  1008   000016                     turnRight@mR:
  1009                           	callstack 0
  1010   000016                     fullSpeedAhead@mR:
  1011                           	callstack 0
  1012   000016                     timed_forward@mR:
  1013                           	callstack 0
  1014   000016                     fullSpeedBack@mR:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x15
  1018   000016                     	ds	1
  1019   000017                     ??_pad:
  1020                           
  1021                           ; 1 bytes @ 0x16
  1022   000017                     	ds	1
  1023   000018                     ??_fullSpeedAhead:
  1024   000018                     ??_stop:
  1025   000018                     ??_turnLeft:
  1026   000018                     ??_turnRight:
  1027   000018                     ??_fullSpeedBack:
  1028   000018                     timed_forward@time:
  1029                           	callstack 0
  1030   000018                     pad@i:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x17
  1034   000018                     	ds	1
  1035   000019                     ??___flmul:
  1036                           
  1037                           ; 1 bytes @ 0x18
  1038   000019                     	ds	1
  1039   00001A                     ??_timed_forward:
  1040   00001A                     turnRight45@mL:
  1041                           	callstack 0
  1042   00001A                     turnLeft45@mL:
  1043                           	callstack 0
  1044   00001A                     reverseDetect@mL:
  1045                           	callstack 0
  1046   00001A                     reverseOneBlock@mL:
  1047                           	callstack 0
  1048   00001A                     ForwardOneBlock@mL:
  1049                           	callstack 0
  1050   00001A                     Forwardhalfblock@mL:
  1051                           	callstack 0
  1052   00001A                     Backhalfblock@mL:
  1053                           	callstack 0
  1054   00001A                     pad@w:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x19
  1058   00001A                     	ds	2
  1059   00001C                     turnRight45@mR:
  1060                           	callstack 0
  1061   00001C                     turnLeft45@mR:
  1062                           	callstack 0
  1063   00001C                     reverseDetect@mR:
  1064                           	callstack 0
  1065   00001C                     reverseOneBlock@mR:
  1066                           	callstack 0
  1067   00001C                     ForwardOneBlock@mR:
  1068                           	callstack 0
  1069   00001C                     Forwardhalfblock@mR:
  1070                           	callstack 0
  1071   00001C                     Backhalfblock@mR:
  1072                           	callstack 0
  1073   00001C                     dtoa@fp:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x1B
  1077   00001C                     	ds	1
  1078   00001D                     ___flmul@sign:
  1079                           	callstack 0
  1080                           
  1081                           ; 1 bytes @ 0x1C
  1082   00001D                     	ds	1
  1083   00001E                     ??_Forwardhalfblock:
  1084   00001E                     ??_turnRight45:
  1085   00001E                     ??_turnLeft45:
  1086   00001E                     ??_reverseDetect:
  1087   00001E                     ??_reverseOneBlock:
  1088   00001E                     ??_ForwardOneBlock:
  1089   00001E                     ??_Backhalfblock:
  1090   00001E                     ___flmul@grs:
  1091                           	callstack 0
  1092   00001E                     dtoa@d:
  1093                           	callstack 0
  1094                           
  1095                           ; 8 bytes @ 0x1D
  1096   00001E                     	ds	2
  1097   000020                     RedMove@mL:
  1098                           	callstack 0
  1099   000020                     GreenMove@mL:
  1100                           	callstack 0
  1101   000020                     BlueMove@mL:
  1102                           	callstack 0
  1103   000020                     YellowMove@mL:
  1104                           	callstack 0
  1105   000020                     PinkMove@mL:
  1106                           	callstack 0
  1107   000020                     OrangeMove@mL:
  1108                           	callstack 0
  1109   000020                     LightBlueMove@mL:
  1110                           	callstack 0
  1111   000020                     RetryMove@mL:
  1112                           	callstack 0
  1113   000020                     ReverseYellow@mL:
  1114                           	callstack 0
  1115   000020                     ReversePink@mL:
  1116                           	callstack 0
  1117   000020                     turnCalibration@mL:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x1F
  1121   000020                     	ds	2
  1122   000022                     ___flmul@aexp:
  1123                           	callstack 0
  1124   000022                     RedMove@mR:
  1125                           	callstack 0
  1126   000022                     GreenMove@mR:
  1127                           	callstack 0
  1128   000022                     BlueMove@mR:
  1129                           	callstack 0
  1130   000022                     YellowMove@mR:
  1131                           	callstack 0
  1132   000022                     PinkMove@mR:
  1133                           	callstack 0
  1134   000022                     OrangeMove@mR:
  1135                           	callstack 0
  1136   000022                     LightBlueMove@mR:
  1137                           	callstack 0
  1138   000022                     RetryMove@mR:
  1139                           	callstack 0
  1140   000022                     ReverseYellow@mR:
  1141                           	callstack 0
  1142   000022                     ReversePink@mR:
  1143                           	callstack 0
  1144   000022                     turnCalibration@mR:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x21
  1148   000022                     	ds	1
  1149   000023                     ___flmul@bexp:
  1150                           	callstack 0
  1151                           
  1152                           ; 1 bytes @ 0x22
  1153   000023                     	ds	1
  1154   000024                     ??_turnCalibration:
  1155   000024                     ??_RetryMove:
  1156   000024                     go_Home@WayBack:
  1157                           	callstack 0
  1158   000024                     ___flmul@prod:
  1159                           	callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x23
  1162   000024                     	ds	2
  1163   000026                     ??_dtoa:
  1164   000026                     go_Home@Time_forward:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x25
  1168   000026                     	ds	2
  1169   000028                     ??_go_Home:
  1170   000028                     ___flmul@temp:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x27
  1174   000028                     	ds	2
  1175   00002A                     ?___flsub:
  1176                           	callstack 0
  1177   00002A                     ___flge@ff1:
  1178                           	callstack 0
  1179   00002A                     ___flsub@b:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x29
  1183   00002A                     	ds	1
  1184   00002B                     go_Home@i:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x2A
  1188   00002B                     	ds	2
  1189   00002D                     colour_move@recognized_colour:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x2C
  1193   00002D                     	ds	1
  1194   00002E                     _dtoa$2863:
  1195                           	callstack 0
  1196   00002E                     ___flge@ff2:
  1197                           	callstack 0
  1198   00002E                     ___flsub@a:
  1199                           	callstack 0
  1200                           
  1201                           ; 4 bytes @ 0x2D
  1202   00002E                     	ds	1
  1203   00002F                     
  1204                           ; 1 bytes @ 0x2E
  1205   00002F                     	ds	1
  1206   000030                     dtoa@p:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x2F
  1210   000030                     	ds	2
  1211   000032                     ??___flge:
  1212   000032                     ?___fldiv:
  1213                           	callstack 0
  1214   000032                     dtoa@w:
  1215                           	callstack 0
  1216   000032                     ___fleq@ff1:
  1217                           	callstack 0
  1218   000032                     ___fldiv@b:
  1219                           	callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x31
  1222   000032                     	ds	2
  1223   000034                     dtoa@n:
  1224                           	callstack 0
  1225                           
  1226                           ; 8 bytes @ 0x33
  1227   000034                     	ds	2
  1228   000036                     ___fleq@ff2:
  1229                           	callstack 0
  1230   000036                     ___fldiv@a:
  1231                           	callstack 0
  1232                           
  1233                           ; 4 bytes @ 0x35
  1234   000036                     	ds	4
  1235   00003A                     ??___fldiv:
  1236   00003A                     ??___fleq:
  1237                           
  1238                           ; 1 bytes @ 0x39
  1239   00003A                     	ds	2
  1240   00003C                     dtoa@i:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x3B
  1244   00003C                     	ds	2
  1245   00003E                     dtoa@s:
  1246                           	callstack 0
  1247   00003E                     ___fldiv@rem:
  1248                           	callstack 0
  1249                           
  1250                           ; 4 bytes @ 0x3D
  1251   00003E                     	ds	4
  1252   000042                     ___fldiv@sign:
  1253                           	callstack 0
  1254                           
  1255                           ; 1 bytes @ 0x41
  1256   000042                     	ds	1
  1257   000043                     ___fldiv@new_exp:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x42
  1261   000043                     	ds	2
  1262   000045                     ___fldiv@grs:
  1263                           	callstack 0
  1264                           
  1265                           ; 4 bytes @ 0x44
  1266   000045                     	ds	4
  1267   000049                     ___fldiv@bexp:
  1268                           	callstack 0
  1269                           
  1270                           ; 1 bytes @ 0x48
  1271   000049                     	ds	1
  1272   00004A                     ___fldiv@aexp:
  1273                           	callstack 0
  1274                           
  1275                           ; 1 bytes @ 0x49
  1276   00004A                     	ds	1
  1277   00004B                     ?_Colour_decider:
  1278                           	callstack 0
  1279   00004B                     ?_floorf:
  1280                           	callstack 0
  1281   00004B                     colour_rel@vals:
  1282                           	callstack 0
  1283   00004B                     Colour_decider@vals:
  1284                           	callstack 0
  1285   00004B                     floorf@x:
  1286                           	callstack 0
  1287                           
  1288                           ; 4 bytes @ 0x4A
  1289   00004B                     	ds	2
  1290   00004D                     colour_rel@rel:
  1291                           	callstack 0
  1292   00004D                     Colour_decider@rel:
  1293                           	callstack 0
  1294                           
  1295                           ; 2 bytes @ 0x4C
  1296   00004D                     	ds	2
  1297   00004F                     ??_floorf:
  1298   00004F                     ??_Colour_decider:
  1299                           
  1300                           ; 1 bytes @ 0x4E
  1301   00004F                     	ds	6
  1302   000055                     floorf@m:
  1303                           	callstack 0
  1304                           
  1305                           ; 4 bytes @ 0x54
  1306   000055                     	ds	4
  1307   000059                     floorf@e:
  1308                           	callstack 0
  1309                           
  1310                           ; 2 bytes @ 0x58
  1311   000059                     	ds	2
  1312   00005B                     floorf@u:
  1313                           	callstack 0
  1314                           
  1315                           ; 4 bytes @ 0x5A
  1316   00005B                     	ds	4
  1317   00005F                     
  1318                           ; 1 bytes @ 0x5E
  1319 ;;
  1320 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1321 ;;
  1322 ;; *************** function _main *****************
  1323 ;; Defined at:
  1324 ;;		line 33 in file "main.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  colour          2  100[BANK1 ] int 
  1329 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1340 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1341 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1342 ;;      Totals:         0       2     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1343 ;;Total ram usage:      104 bytes
  1344 ;; Hardware stack levels required when called: 9
  1345 ;; This function calls:
  1346 ;;		_Buttons_init
  1347 ;;		_Colour_decider
  1348 ;;		_Forwardhalfblock
  1349 ;;		_I2C_2_Master_Init
  1350 ;;		_Interrupts_init
  1351 ;;		_LED_init
  1352 ;;		_Timer0_init
  1353 ;;		_color_click_init
  1354 ;;		_colour_move
  1355 ;;		_colour_rel
  1356 ;;		_fullSpeedAhead
  1357 ;;		_getTMR0val
  1358 ;;		_go_Home
  1359 ;;		_initDCmotorsPWM
  1360 ;;		_initUSART4
  1361 ;;		_readColours
  1362 ;;		_sendStringSerial4
  1363 ;;		_sprintf
  1364 ;;		_stop
  1365 ;;		_turnCalibration
  1366 ;; This function is called by:
  1367 ;;		Startup code after reset
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text0
  1372   0034E4                     __ptext0:
  1373                           	callstack 0
  1374   0034E4                     _main:
  1375                           	callstack 22
  1376   0034E4                     
  1377                           ;main.c: 34:     initUSART4();
  1378   0034E4  EC07  F030         	call	_initUSART4	;wreg free
  1379   0034E8                     
  1380                           ;main.c: 35:     Interrupts_init();
  1381   0034E8  EC28  F030         	call	_Interrupts_init	;wreg free
  1382   0034EC                     
  1383                           ;main.c: 36:     color_click_init();
  1384   0034EC  EC08  F02D         	call	_color_click_init	;wreg free
  1385   0034F0                     
  1386                           ;main.c: 37:     I2C_2_Master_Init();
  1387   0034F0  EC98  F02F         	call	_I2C_2_Master_Init	;wreg free
  1388   0034F4                     
  1389                           ;main.c: 38:     LED_init();
  1390   0034F4  ECC1  F02F         	call	_LED_init	;wreg free
  1391   0034F8                     
  1392                           ;main.c: 39:     Buttons_init();
  1393   0034F8  EC2E  F030         	call	_Buttons_init	;wreg free
  1394   0034FC                     
  1395                           ;main.c: 40:     initDCmotorsPWM(200);
  1396   0034FC  0E00               	movlw	0
  1397   0034FE  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1398   003500  0EC8               	movlw	200
  1399   003502  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1400   003504  ECFB  F028         	call	_initDCmotorsPWM	;wreg free
  1401   003508                     
  1402                           ;main.c: 41:     Timer0_init();
  1403   003508  ECF7  F02F         	call	_Timer0_init	;wreg free
  1404   00350C                     
  1405                           ;main.c: 43:     motorL.power=0;
  1406   00350C  0E00               	movlw	0
  1407   00350E  0101               	movlb	1	; () banked
  1408   003510  6F61               	movwf	_motorL& (0+255),b
  1409   003512                     
  1410                           ; BSR set to: 1
  1411                           ;main.c: 44:     motorL.direction=1;
  1412   003512  0E01               	movlw	1
  1413   003514  6F62               	movwf	(_motorL+1)& (0+255),b
  1414   003516                     
  1415                           ; BSR set to: 1
  1416                           ;main.c: 45:     motorL.brakemode=1;
  1417   003516  0E01               	movlw	1
  1418   003518  6F63               	movwf	(_motorL+2)& (0+255),b
  1419   00351A                     
  1420                           ; BSR set to: 1
  1421                           ;main.c: 46:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1422   00351A  0EAA               	movlw	170
  1423   00351C  6F66               	movwf	(_motorL+5)& (0+255),b
  1424   00351E  0E0F               	movlw	15
  1425   003520  6F67               	movwf	(_motorL+6)& (0+255),b
  1426   003522                     
  1427                           ; BSR set to: 1
  1428                           ;main.c: 47:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1429   003522  0EA6               	movlw	166
  1430   003524  6F68               	movwf	(_motorL+7)& (0+255),b
  1431   003526  0E0F               	movlw	15
  1432   003528  6F69               	movwf	(_motorL+8)& (0+255),b
  1433   00352A                     
  1434                           ; BSR set to: 1
  1435                           ;main.c: 48:     motorL.PWMperiod=200;
  1436   00352A  0E00               	movlw	0
  1437   00352C  6F65               	movwf	(_motorL+4)& (0+255),b
  1438   00352E  0EC8               	movlw	200
  1439   003530  6F64               	movwf	(_motorL+3)& (0+255),b
  1440   003532                     
  1441                           ; BSR set to: 1
  1442                           ;main.c: 49:     motorR.power=0;
  1443   003532  0E00               	movlw	0
  1444   003534  6F58               	movwf	_motorR& (0+255),b
  1445   003536                     
  1446                           ; BSR set to: 1
  1447                           ;main.c: 50:     motorR.direction=1;
  1448   003536  0E01               	movlw	1
  1449   003538  6F59               	movwf	(_motorR+1)& (0+255),b
  1450   00353A                     
  1451                           ; BSR set to: 1
  1452                           ;main.c: 51:     motorR.brakemode=1;
  1453   00353A  0E01               	movlw	1
  1454   00353C  6F5A               	movwf	(_motorR+2)& (0+255),b
  1455   00353E                     
  1456                           ; BSR set to: 1
  1457                           ;main.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1458   00353E  0E25               	movlw	37
  1459   003540  6F5D               	movwf	(_motorR+5)& (0+255),b
  1460   003542  0E0F               	movlw	15
  1461   003544  6F5E               	movwf	(_motorR+6)& (0+255),b
  1462   003546                     
  1463                           ; BSR set to: 1
  1464                           ;main.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1465   003546  0E21               	movlw	33
  1466   003548  6F5F               	movwf	(_motorR+7)& (0+255),b
  1467   00354A  0E0F               	movlw	15
  1468   00354C  6F60               	movwf	(_motorR+8)& (0+255),b
  1469   00354E                     
  1470                           ; BSR set to: 1
  1471                           ;main.c: 54:     motorR.PWMperiod=200;
  1472   00354E  0E00               	movlw	0
  1473   003550  6F5C               	movwf	(_motorR+4)& (0+255),b
  1474   003552  0EC8               	movlw	200
  1475   003554  6F5B               	movwf	(_motorR+3)& (0+255),b
  1476   003556                     
  1477                           ; BSR set to: 1
  1478                           ;main.c: 56:     char buf[100];;main.c: 59:     turnCalibration(&motorL,&motorR);
  1479   003556  0E61               	movlw	low _motorL
  1480   003558  6E20               	movwf	turnCalibration@mL^0,c
  1481   00355A  0E01               	movlw	high _motorL
  1482   00355C  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1483   00355E  0E58               	movlw	low _motorR
  1484   003560  6E22               	movwf	turnCalibration@mR^0,c
  1485   003562  0E01               	movlw	high _motorR
  1486   003564  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1487   003566  EC74  F021         	call	_turnCalibration	;wreg free
  1488   00356A                     
  1489                           ;main.c: 61:     LATFbits.LATF0=0;
  1490   00356A  907E               	bcf	126,0,c	;volatile
  1491   00356C                     
  1492                           ;main.c: 62:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1493   00356C  0E52               	movlw	82
  1494   00356E  0100               	movlb	0	; () banked
  1495   003570  6FD2               	movwf	(??_main+1)& (0+255),b
  1496   003572  0E2B               	movlw	43
  1497   003574  6FD1               	movwf	??_main& (0+255),b
  1498   003576  0E00               	movlw	0
  1499   003578                     u5827:
  1500   003578  2EE8               	decfsz	wreg,f,c
  1501   00357A  D7FE               	bra	u5827
  1502   00357C  2FD1               	decfsz	??_main& (0+255),f,b
  1503   00357E  D7FC               	bra	u5827
  1504   003580  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1505   003582  D7FA               	bra	u5827
  1506   003584  F000               	nop	
  1507   003586                     l332:
  1508   003586  B48E               	btfsc	142,2,c	;volatile
  1509   003588  EFC8  F01A         	goto	u5691
  1510   00358C  EFCA  F01A         	goto	u5690
  1511   003590                     u5691:
  1512   003590  EFC3  F01A         	goto	l332
  1513   003594                     u5690:
  1514   003594                     
  1515                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1516   003594  0E52               	movlw	82
  1517   003596  0100               	movlb	0	; () banked
  1518   003598  6FD2               	movwf	(??_main+1)& (0+255),b
  1519   00359A  0E2B               	movlw	43
  1520   00359C  6FD1               	movwf	??_main& (0+255),b
  1521   00359E  0E00               	movlw	0
  1522   0035A0                     u5837:
  1523   0035A0  2EE8               	decfsz	wreg,f,c
  1524   0035A2  D7FE               	bra	u5837
  1525   0035A4  2FD1               	decfsz	??_main& (0+255),f,b
  1526   0035A6  D7FC               	bra	u5837
  1527   0035A8  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1528   0035AA  D7FA               	bra	u5837
  1529   0035AC  F000               	nop	
  1530   0035AE                     
  1531                           ;main.c: 68:     T0CON0bits.T0EN=1;
  1532   0035AE  8ED5               	bsf	213,7,c	;volatile
  1533                           
  1534                           ;main.c: 69:     while (run_flag)
  1535   0035B0  EFE0  F01B         	goto	l5889
  1536   0035B4                     l5833:
  1537                           
  1538                           ; BSR set to: 1
  1539                           ;main.c: 70:     {;main.c: 71:         consecuitive=0;
  1540   0035B4  0E00               	movlw	0
  1541   0035B6  6F17               	movwf	(_consecuitive+1)& (0+255),b
  1542   0035B8  0E00               	movlw	0
  1543   0035BA  6F16               	movwf	_consecuitive& (0+255),b
  1544   0035BC                     
  1545                           ; BSR set to: 1
  1546                           ;main.c: 73:         fullSpeedAhead(&motorL,&motorR);
  1547   0035BC  0E61               	movlw	low _motorL
  1548   0035BE  6E14               	movwf	fullSpeedAhead@mL^0,c
  1549   0035C0  0E01               	movlw	high _motorL
  1550   0035C2  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1551   0035C4  0E58               	movlw	low _motorR
  1552   0035C6  6E16               	movwf	fullSpeedAhead@mR^0,c
  1553   0035C8  0E01               	movlw	high _motorR
  1554   0035CA  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1555   0035CC  ECAC  F028         	call	_fullSpeedAhead	;wreg free
  1556   0035D0                     
  1557                           ;main.c: 75:         readColours(&vals);
  1558   0035D0  0E6A               	movlw	low _vals
  1559   0035D2  6E0C               	movwf	readColours@vals^0,c
  1560   0035D4  0E01               	movlw	high _vals
  1561   0035D6  6E0D               	movwf	(readColours@vals+1)^0,c
  1562   0035D8  EC02  F02B         	call	_readColours	;wreg free
  1563   0035DC                     
  1564                           ;main.c: 78:         colour_rel(&vals, &rel);
  1565   0035DC  0E6A               	movlw	low _vals
  1566   0035DE  6E4B               	movwf	colour_rel@vals^0,c
  1567   0035E0  0E01               	movlw	high _vals
  1568   0035E2  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1569   0035E4  0E4C               	movlw	low _rel
  1570   0035E6  6E4D               	movwf	colour_rel@rel^0,c
  1571   0035E8  0E01               	movlw	high _rel
  1572   0035EA  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1573   0035EC  EC58  F017         	call	_colour_rel	;wreg free
  1574   0035F0                     
  1575                           ;main.c: 81:         if (vals.L>=500){
  1576   0035F0  0101               	movlb	1	; () banked
  1577   0035F2  BF71               	btfsc	(_vals+7)& (0+255),7,b
  1578   0035F4  EF05  F01B         	goto	u5701
  1579   0035F8  0EF4               	movlw	244
  1580   0035FA  5D70               	subwf	(_vals+6)& (0+255),w,b
  1581   0035FC  0E01               	movlw	1
  1582   0035FE  5971               	subwfb	(_vals+7)& (0+255),w,b
  1583   003600  A0D8               	btfss	status,0,c
  1584   003602  EF05  F01B         	goto	u5701
  1585   003606  EF07  F01B         	goto	u5700
  1586   00360A                     u5701:
  1587   00360A  EFC6  F01B         	goto	l5881
  1588   00360E                     u5700:
  1589   00360E                     
  1590                           ; BSR set to: 1
  1591                           ;main.c: 82:             move_count++;
  1592   00360E  4BDA               	infsnz	_move_count& (0+255),f,b	;volatile
  1593   003610  2BDB               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1594   003612                     
  1595                           ; BSR set to: 1
  1596                           ;main.c: 83:             if (move_count>98){
  1597   003612  51DB               	movf	(_move_count+1)& (0+255),w,b	;volatile
  1598   003614  E109               	bnz	u5710
  1599   003616  0E63               	movlw	99
  1600   003618  5DDA               	subwf	_move_count& (0+255),w,b	;volatile
  1601   00361A  A0D8               	btfss	status,0,c
  1602   00361C  EF12  F01B         	goto	u5711
  1603   003620  EF14  F01B         	goto	u5710
  1604   003624                     u5711:
  1605   003624  EF22  F01B         	goto	l5851
  1606   003628                     u5710:
  1607   003628                     
  1608                           ; BSR set to: 1
  1609                           ;main.c: 84:                 getTMR0val();
  1610   003628  ECD1  F02A         	call	_getTMR0val	;wreg free
  1611   00362C                     l5849:
  1612                           
  1613                           ;main.c: 85:                 go_Home(WayBack, Time_forward);
  1614   00362C  0E1A               	movlw	low _WayBack
  1615   00362E  6E24               	movwf	go_Home@WayBack^0,c
  1616   003630  0E01               	movlw	high _WayBack
  1617   003632  6E25               	movwf	(go_Home@WayBack+1)^0,c
  1618   003634  0E3C               	movlw	low _Time_forward
  1619   003636  6E26               	movwf	go_Home@Time_forward^0,c
  1620   003638  0E02               	movlw	high _Time_forward
  1621   00363A  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  1622   00363C  EC67  F01E         	call	_go_Home	;wreg free
  1623                           
  1624                           ;main.c: 86:             }
  1625   003640  EFE0  F01B         	goto	l5889
  1626   003644                     l5851:
  1627                           
  1628                           ; BSR set to: 1
  1629                           ;main.c: 88:                 getTMR0val();
  1630   003644  ECD1  F02A         	call	_getTMR0val	;wreg free
  1631   003648                     
  1632                           ;main.c: 90:                 Forwardhalfblock(&motorL,&motorR);
  1633   003648  0E61               	movlw	low _motorL
  1634   00364A  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1635   00364C  0E01               	movlw	high _motorL
  1636   00364E  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1637   003650  0E58               	movlw	low _motorR
  1638   003652  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1639   003654  0E01               	movlw	high _motorR
  1640   003656  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1641   003658  EC8B  F02B         	call	_Forwardhalfblock	;wreg free
  1642   00365C                     
  1643                           ;main.c: 92:                 stop(&motorL, &motorR);
  1644   00365C  0E61               	movlw	low _motorL
  1645   00365E  6E14               	movwf	stop@mL^0,c
  1646   003660  0E01               	movlw	high _motorL
  1647   003662  6E15               	movwf	(stop@mL+1)^0,c
  1648   003664  0E58               	movlw	low _motorR
  1649   003666  6E16               	movwf	stop@mR^0,c
  1650   003668  0E01               	movlw	high _motorR
  1651   00366A  6E17               	movwf	(stop@mR+1)^0,c
  1652   00366C  EC3F  F029         	call	_stop	;wreg free
  1653                           
  1654                           ;main.c: 94:                 while (consecuitive<20){
  1655   003670  EF7E  F01B         	goto	l5873
  1656   003674                     l5857:
  1657                           
  1658                           ; BSR set to: 1
  1659                           ;main.c: 95:                     _delay((unsigned long)((100)*(64000000/4000.0)));
  1660   003674  0E09               	movlw	9
  1661   003676  0100               	movlb	0	; () banked
  1662   003678  6FD2               	movwf	(??_main+1)& (0+255),b
  1663   00367A  0E1E               	movlw	30
  1664   00367C  6FD1               	movwf	??_main& (0+255),b
  1665   00367E  0EE4               	movlw	228
  1666   003680                     u5847:
  1667   003680  2EE8               	decfsz	wreg,f,c
  1668   003682  D7FE               	bra	u5847
  1669   003684  2FD1               	decfsz	??_main& (0+255),f,b
  1670   003686  D7FC               	bra	u5847
  1671   003688  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1672   00368A  D7FA               	bra	u5847
  1673   00368C  F000               	nop	
  1674   00368E                     
  1675                           ;main.c: 96:                     readColours(&vals);
  1676   00368E  0E6A               	movlw	low _vals
  1677   003690  6E0C               	movwf	readColours@vals^0,c
  1678   003692  0E01               	movlw	high _vals
  1679   003694  6E0D               	movwf	(readColours@vals+1)^0,c
  1680   003696  EC02  F02B         	call	_readColours	;wreg free
  1681   00369A                     
  1682                           ;main.c: 97:                     colour_rel(&vals, &rel);
  1683   00369A  0E6A               	movlw	low _vals
  1684   00369C  6E4B               	movwf	colour_rel@vals^0,c
  1685   00369E  0E01               	movlw	high _vals
  1686   0036A0  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1687   0036A2  0E4C               	movlw	low _rel
  1688   0036A4  6E4D               	movwf	colour_rel@rel^0,c
  1689   0036A6  0E01               	movlw	high _rel
  1690   0036A8  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1691   0036AA  EC58  F017         	call	_colour_rel	;wreg free
  1692   0036AE                     
  1693                           ;main.c: 98:                     int colour = Colour_decider(&vals, &rel);
  1694   0036AE  0E6A               	movlw	low _vals
  1695   0036B0  6E4B               	movwf	Colour_decider@vals^0,c
  1696   0036B2  0E01               	movlw	high _vals
  1697   0036B4  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1698   0036B6  0E4C               	movlw	low _rel
  1699   0036B8  6E4D               	movwf	Colour_decider@rel^0,c
  1700   0036BA  0E01               	movlw	high _rel
  1701   0036BC  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1702   0036BE  EC1C  F00C         	call	_Colour_decider	;wreg free
  1703   0036C2  C04B  F1D6         	movff	?_Colour_decider,main@colour
  1704   0036C6  C04C  F1D7         	movff	?_Colour_decider+1,main@colour+1
  1705   0036CA                     
  1706                           ;main.c: 99:                     if (colour==prev_colour){
  1707   0036CA  0101               	movlb	1	; () banked
  1708   0036CC  5118               	movf	_prev_colour& (0+255),w,b
  1709   0036CE  19D6               	xorwf	main@colour& (0+255),w,b
  1710   0036D0  E107               	bnz	u5721
  1711   0036D2  5119               	movf	(_prev_colour+1)& (0+255),w,b
  1712   0036D4  19D7               	xorwf	(main@colour+1)& (0+255),w,b
  1713   0036D6  A4D8               	btfss	status,2,c
  1714   0036D8  EF70  F01B         	goto	u5721
  1715   0036DC  EF72  F01B         	goto	u5720
  1716   0036E0                     u5721:
  1717   0036E0  EF76  F01B         	goto	l5869
  1718   0036E4                     u5720:
  1719   0036E4                     
  1720                           ; BSR set to: 1
  1721                           ;main.c: 100:                         consecuitive++;
  1722   0036E4  4B16               	infsnz	_consecuitive& (0+255),f,b
  1723   0036E6  2B17               	incf	(_consecuitive+1)& (0+255),f,b
  1724                           
  1725                           ;main.c: 101:                     }
  1726   0036E8  EF7A  F01B         	goto	l5871
  1727   0036EC                     l5869:
  1728                           
  1729                           ; BSR set to: 1
  1730                           ;main.c: 103:                         consecuitive=0;
  1731   0036EC  0E00               	movlw	0
  1732   0036EE  6F17               	movwf	(_consecuitive+1)& (0+255),b
  1733   0036F0  0E00               	movlw	0
  1734   0036F2  6F16               	movwf	_consecuitive& (0+255),b
  1735   0036F4                     l5871:
  1736                           
  1737                           ; BSR set to: 1
  1738                           ;main.c: 105:                     prev_colour=colour;
  1739   0036F4  C1D6  F118         	movff	main@colour,_prev_colour
  1740   0036F8  C1D7  F119         	movff	main@colour+1,_prev_colour+1
  1741   0036FC                     l5873:
  1742                           
  1743                           ;main.c: 94:                 while (consecuitive<20){
  1744   0036FC  0101               	movlb	1	; () banked
  1745   0036FE  BF17               	btfsc	(_consecuitive+1)& (0+255),7,b
  1746   003700  EF8B  F01B         	goto	u5731
  1747   003704  5117               	movf	(_consecuitive+1)& (0+255),w,b
  1748   003706  E109               	bnz	u5730
  1749   003708  0E14               	movlw	20
  1750   00370A  5D16               	subwf	_consecuitive& (0+255),w,b
  1751   00370C  A0D8               	btfss	status,0,c
  1752   00370E  EF8B  F01B         	goto	u5731
  1753   003712  EF8D  F01B         	goto	u5730
  1754   003716                     u5731:
  1755   003716  EF3A  F01B         	goto	l5857
  1756   00371A                     u5730:
  1757   00371A                     
  1758                           ; BSR set to: 1
  1759                           ;main.c: 109:                 sprintf(buf,"red=%f green=%f blue=%f lum=%d actual_colour=
      +                          %d \r\n",rel.R, rel.G,rel.B,vals.L, prev_colour);
  1760   00371A  0E72               	movlw	low main@buf
  1761   00371C  0100               	movlb	0	; () banked
  1762   00371E  6FB0               	movwf	sprintf@s& (0+255),b
  1763   003720  0E01               	movlw	high main@buf
  1764   003722  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1765   003724  0E01               	movlw	low STR_1
  1766   003726  6FB2               	movwf	sprintf@fmt& (0+255),b
  1767   003728  0E0E               	movlw	high STR_1
  1768   00372A  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1769   00372C  C14C  F0B4         	movff	_rel,?_sprintf+4
  1770   003730  C14D  F0B5         	movff	_rel+1,?_sprintf+5
  1771   003734  C14E  F0B6         	movff	_rel+2,?_sprintf+6
  1772   003738  C14F  F0B7         	movff	_rel+3,?_sprintf+7
  1773   00373C  C150  F0B8         	movff	_rel+4,?_sprintf+8
  1774   003740  C151  F0B9         	movff	_rel+5,?_sprintf+9
  1775   003744  C152  F0BA         	movff	_rel+6,?_sprintf+10
  1776   003748  C153  F0BB         	movff	_rel+7,?_sprintf+11
  1777   00374C  C154  F0BC         	movff	_rel+8,?_sprintf+12
  1778   003750  C155  F0BD         	movff	_rel+9,?_sprintf+13
  1779   003754  C156  F0BE         	movff	_rel+10,?_sprintf+14
  1780   003758  C157  F0BF         	movff	_rel+11,?_sprintf+15
  1781   00375C  C170  F0C0         	movff	_vals+6,?_sprintf+16
  1782   003760  C171  F0C1         	movff	_vals+7,?_sprintf+17
  1783   003764  C118  F0C2         	movff	_prev_colour,?_sprintf+18
  1784   003768  C119  F0C3         	movff	_prev_colour+1,?_sprintf+19
  1785   00376C  EC3B  F02C         	call	_sprintf	;wreg free
  1786   003770                     
  1787                           ;main.c: 110:                 sendStringSerial4(buf);
  1788   003770  0E72               	movlw	low main@buf
  1789   003772  6E02               	movwf	sendStringSerial4@string^0,c
  1790   003774  0E01               	movlw	high main@buf
  1791   003776  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1792   003778  EC80  F02F         	call	_sendStringSerial4	;wreg free
  1793   00377C                     
  1794                           ;main.c: 112:                 colour_move (prev_colour);
  1795   00377C  C118  F02D         	movff	_prev_colour,colour_move@recognized_colour
  1796   003780  C119  F02E         	movff	_prev_colour+1,colour_move@recognized_colour+1
  1797   003784  EC2B  F01D         	call	_colour_move	;wreg free
  1798   003788  EFE0  F01B         	goto	l5889
  1799   00378C                     l5881:
  1800                           
  1801                           ; BSR set to: 1
  1802   00378C  5114               	movf	_lost_flag& (0+255),w,b
  1803   00378E  1115               	iorwf	(_lost_flag+1)& (0+255),w,b
  1804   003790  B4D8               	btfsc	status,2,c
  1805   003792  EFCD  F01B         	goto	u5741
  1806   003796  EFCF  F01B         	goto	u5740
  1807   00379A                     u5741:
  1808   00379A  EFE0  F01B         	goto	l5889
  1809   00379E                     u5740:
  1810   00379E                     
  1811                           ; BSR set to: 1
  1812                           ;main.c: 115:             move_count++;
  1813   00379E  4BDA               	infsnz	_move_count& (0+255),f,b	;volatile
  1814   0037A0  2BDB               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1815   0037A2                     
  1816                           ; BSR set to: 1
  1817                           ;main.c: 116:             Time_forward[move_count]=65535;
  1818   0037A2  90D8               	bcf	status,0,c
  1819   0037A4  35DA               	rlcf	_move_count& (0+255),w,b	;volatile
  1820   0037A6  6ED9               	movwf	fsr2l,c
  1821   0037A8  35DB               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  1822   0037AA  6EDA               	movwf	fsr2h,c
  1823   0037AC  0E3C               	movlw	low _Time_forward
  1824   0037AE  26D9               	addwf	fsr2l,f,c
  1825   0037B0  0E02               	movlw	high _Time_forward
  1826   0037B2  22DA               	addwfc	fsr2h,f,c
  1827   0037B4  0EFF               	movlw	255
  1828   0037B6  6EDE               	movwf	postinc2,c
  1829   0037B8  0EFF               	movlw	255
  1830   0037BA  6EDD               	movwf	postdec2,c
  1831   0037BC  EF16  F01B         	goto	l5849
  1832   0037C0                     l5889:
  1833                           
  1834                           ;main.c: 69:     while (run_flag)
  1835   0037C0  0101               	movlb	1	; () banked
  1836   0037C2  51D8               	movf	_run_flag& (0+255),w,b
  1837   0037C4  11D9               	iorwf	(_run_flag+1)& (0+255),w,b
  1838   0037C6  A4D8               	btfss	status,2,c
  1839   0037C8  EFE8  F01B         	goto	u5751
  1840   0037CC  EFEA  F01B         	goto	u5750
  1841   0037D0                     u5751:
  1842   0037D0  EFDA  F01A         	goto	l5833
  1843   0037D4                     u5750:
  1844   0037D4                     
  1845                           ; BSR set to: 1
  1846   0037D4  EF1A  F000         	goto	start
  1847   0037D8                     __end_of_main:
  1848                           	callstack 0
  1849                           
  1850 ;; *************** function _turnCalibration *****************
  1851 ;; Defined at:
  1852 ;;		line 365 in file "dc_motor.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  1855 ;;		 -> motorL(9), 
  1856 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  1857 ;;		 -> motorR(9), 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1869 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1871 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1872 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1873 ;;Total ram usage:        6 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; Hardware stack levels required when called: 5
  1876 ;; This function calls:
  1877 ;;		_turnLeft45
  1878 ;; This function is called by:
  1879 ;;		_main
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text1
  1884   0042E8                     __ptext1:
  1885                           	callstack 0
  1886   0042E8                     _turnCalibration:
  1887                           	callstack 25
  1888   0042E8                     
  1889                           ;dc_motor.c: 366:     LATFbits.LATF0=1;
  1890   0042E8  807E               	bsf	126,0,c	;volatile
  1891   0042EA                     
  1892                           ;dc_motor.c: 367:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1893   0042EA  0E52               	movlw	82
  1894   0042EC  6E25               	movwf	(??_turnCalibration+1)^0,c
  1895   0042EE  0E2B               	movlw	43
  1896   0042F0  6E24               	movwf	??_turnCalibration^0,c
  1897   0042F2  0E00               	movlw	0
  1898   0042F4                     u5857:
  1899   0042F4  2EE8               	decfsz	wreg,f,c
  1900   0042F6  D7FE               	bra	u5857
  1901   0042F8  2E24               	decfsz	??_turnCalibration^0,f,c
  1902   0042FA  D7FC               	bra	u5857
  1903   0042FC  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1904   0042FE  D7FA               	bra	u5857
  1905   004300  D000               	nop2	
  1906                           
  1907                           ;dc_motor.c: 369:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  1908   004302  EF2E  F022         	goto	l5643
  1909   004306                     l534:
  1910                           
  1911                           ;dc_motor.c: 370:         LATDbits.LATD3=1;
  1912   004306  867C               	bsf	124,3,c	;volatile
  1913   004308                     
  1914                           ;dc_motor.c: 372:         turnLeft45(&motorL, &motorR);
  1915   004308  0E61               	movlw	low _motorL
  1916   00430A  6E1A               	movwf	turnLeft45@mL^0,c
  1917   00430C  0E01               	movlw	high _motorL
  1918   00430E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1919   004310  0E58               	movlw	low _motorR
  1920   004312  6E1C               	movwf	turnLeft45@mR^0,c
  1921   004314  0E01               	movlw	high _motorR
  1922   004316  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1923   004318  EC20  F02E         	call	_turnLeft45	;wreg free
  1924                           
  1925                           ;dc_motor.c: 373:         turnLeft45(&motorL, &motorR);
  1926   00431C  0E61               	movlw	low _motorL
  1927   00431E  6E1A               	movwf	turnLeft45@mL^0,c
  1928   004320  0E01               	movlw	high _motorL
  1929   004322  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1930   004324  0E58               	movlw	low _motorR
  1931   004326  6E1C               	movwf	turnLeft45@mR^0,c
  1932   004328  0E01               	movlw	high _motorR
  1933   00432A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1934   00432C  EC20  F02E         	call	_turnLeft45	;wreg free
  1935                           
  1936                           ;dc_motor.c: 374:         turnLeft45(&motorL, &motorR);
  1937   004330  0E61               	movlw	low _motorL
  1938   004332  6E1A               	movwf	turnLeft45@mL^0,c
  1939   004334  0E01               	movlw	high _motorL
  1940   004336  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1941   004338  0E58               	movlw	low _motorR
  1942   00433A  6E1C               	movwf	turnLeft45@mR^0,c
  1943   00433C  0E01               	movlw	high _motorR
  1944   00433E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1945   004340  EC20  F02E         	call	_turnLeft45	;wreg free
  1946                           
  1947                           ;dc_motor.c: 375:         turnLeft45(&motorL, &motorR);
  1948   004344  0E61               	movlw	low _motorL
  1949   004346  6E1A               	movwf	turnLeft45@mL^0,c
  1950   004348  0E01               	movlw	high _motorL
  1951   00434A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1952   00434C  0E58               	movlw	low _motorR
  1953   00434E  6E1C               	movwf	turnLeft45@mR^0,c
  1954   004350  0E01               	movlw	high _motorR
  1955   004352  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1956   004354  EC20  F02E         	call	_turnLeft45	;wreg free
  1957                           
  1958                           ;dc_motor.c: 377:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  1959   004358  EF13  F022         	goto	l5637
  1960   00435C                     l536:
  1961                           
  1962                           ;dc_motor.c: 380:               LATDbits.LATD4=1;
  1963   00435C  887C               	bsf	124,4,c	;volatile
  1964   00435E                     
  1965                           ;dc_motor.c: 381:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1966   00435E  0EA3               	movlw	163
  1967   004360  6E25               	movwf	(??_turnCalibration+1)^0,c
  1968   004362  0E57               	movlw	87
  1969   004364  6E24               	movwf	??_turnCalibration^0,c
  1970   004366  0E02               	movlw	2
  1971   004368                     u5867:
  1972   004368  2EE8               	decfsz	wreg,f,c
  1973   00436A  D7FE               	bra	u5867
  1974   00436C  2E24               	decfsz	??_turnCalibration^0,f,c
  1975   00436E  D7FC               	bra	u5867
  1976   004370  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1977   004372  D7FA               	bra	u5867
  1978   004374  D000               	nop2	
  1979   004376                     
  1980                           ;dc_motor.c: 382:             if(!PORTFbits.RF3 && !PORTFbits.RF2){
  1981   004376  B68E               	btfsc	142,3,c	;volatile
  1982   004378  EFC0  F021         	goto	u5491
  1983   00437C  EFC2  F021         	goto	u5490
  1984   004380                     u5491:
  1985   004380  EFDB  F021         	goto	l537
  1986   004384                     u5490:
  1987   004384  B48E               	btfsc	142,2,c	;volatile
  1988   004386  EFC7  F021         	goto	u5501
  1989   00438A  EFC9  F021         	goto	u5500
  1990   00438E                     u5501:
  1991   00438E  EFDB  F021         	goto	l537
  1992   004392                     u5500:
  1993   004392                     
  1994                           ;dc_motor.c: 383:                 LATHbits.LATH3=1;
  1995   004392  8680               	bsf	128,3,c	;volatile
  1996                           
  1997                           ;dc_motor.c: 384:                 LATDbits.LATD7=1;
  1998   004394  8E7C               	bsf	124,7,c	;volatile
  1999   004396                     
  2000                           ;dc_motor.c: 385:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2001   004396  0E52               	movlw	82
  2002   004398  6E25               	movwf	(??_turnCalibration+1)^0,c
  2003   00439A  0E2B               	movlw	43
  2004   00439C  6E24               	movwf	??_turnCalibration^0,c
  2005   00439E  0E00               	movlw	0
  2006   0043A0                     u5877:
  2007   0043A0  2EE8               	decfsz	wreg,f,c
  2008   0043A2  D7FE               	bra	u5877
  2009   0043A4  2E24               	decfsz	??_turnCalibration^0,f,c
  2010   0043A6  D7FC               	bra	u5877
  2011   0043A8  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2012   0043AA  D7FA               	bra	u5877
  2013   0043AC  D000               	nop2	
  2014   0043AE                     
  2015                           ;dc_motor.c: 386:                 LATHbits.LATH3=0;
  2016   0043AE  9680               	bcf	128,3,c	;volatile
  2017   0043B0                     
  2018                           ;dc_motor.c: 387:                 LATDbits.LATD7=0;
  2019   0043B0  9E7C               	bcf	124,7,c	;volatile
  2020                           
  2021                           ;dc_motor.c: 388:             }
  2022   0043B2  EF13  F022         	goto	l5637
  2023   0043B6                     l537:
  2024   0043B6  B68E               	btfsc	142,3,c	;volatile
  2025   0043B8  EFE0  F021         	goto	u5511
  2026   0043BC  EFE2  F021         	goto	u5510
  2027   0043C0                     u5511:
  2028   0043C0  EFF7  F021         	goto	l539
  2029   0043C4                     u5510:
  2030   0043C4                     
  2031                           ;dc_motor.c: 391:                 Turn45Delay+=10;
  2032   0043C4  0E0A               	movlw	10
  2033   0043C6  0100               	movlb	0	; () banked
  2034   0043C8  27F4               	addwf	_Turn45Delay& (0+255),f,b
  2035   0043CA  0E00               	movlw	0
  2036   0043CC  23F5               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2037   0043CE                     
  2038                           ; BSR set to: 0
  2039                           ;dc_motor.c: 392:                 LATHbits.LATH3=1;
  2040   0043CE  8680               	bsf	128,3,c	;volatile
  2041   0043D0                     
  2042                           ; BSR set to: 0
  2043                           ;dc_motor.c: 393:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2044   0043D0  0E52               	movlw	82
  2045   0043D2  6E25               	movwf	(??_turnCalibration+1)^0,c
  2046   0043D4  0E2B               	movlw	43
  2047   0043D6  6E24               	movwf	??_turnCalibration^0,c
  2048   0043D8  0E00               	movlw	0
  2049   0043DA                     u5887:
  2050   0043DA  2EE8               	decfsz	wreg,f,c
  2051   0043DC  D7FE               	bra	u5887
  2052   0043DE  2E24               	decfsz	??_turnCalibration^0,f,c
  2053   0043E0  D7FC               	bra	u5887
  2054   0043E2  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2055   0043E4  D7FA               	bra	u5887
  2056   0043E6  D000               	nop2	
  2057   0043E8                     
  2058                           ;dc_motor.c: 394:                 LATHbits.LATH3=0;
  2059   0043E8  9680               	bcf	128,3,c	;volatile
  2060                           
  2061                           ;dc_motor.c: 395:             }
  2062   0043EA  EF13  F022         	goto	l5637
  2063   0043EE                     l539:
  2064   0043EE  B48E               	btfsc	142,2,c	;volatile
  2065   0043F0  EFFC  F021         	goto	u5521
  2066   0043F4  EFFE  F021         	goto	u5520
  2067   0043F8                     u5521:
  2068   0043F8  EF13  F022         	goto	l538
  2069   0043FC                     u5520:
  2070   0043FC                     
  2071                           ;dc_motor.c: 398:                 Turn45Delay-=10;
  2072   0043FC  0100               	movlb	0	; () banked
  2073   0043FE  0EF6               	movlw	246
  2074   004400  27F4               	addwf	_Turn45Delay& (0+255),f,b
  2075   004402  0EFF               	movlw	255
  2076   004404  23F5               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2077   004406                     
  2078                           ; BSR set to: 0
  2079                           ;dc_motor.c: 399:                 LATDbits.LATD7=1;
  2080   004406  8E7C               	bsf	124,7,c	;volatile
  2081   004408                     
  2082                           ; BSR set to: 0
  2083                           ;dc_motor.c: 400:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2084   004408  0E52               	movlw	82
  2085   00440A  6E25               	movwf	(??_turnCalibration+1)^0,c
  2086   00440C  0E2B               	movlw	43
  2087   00440E  6E24               	movwf	??_turnCalibration^0,c
  2088   004410  0E00               	movlw	0
  2089   004412                     u5897:
  2090   004412  2EE8               	decfsz	wreg,f,c
  2091   004414  D7FE               	bra	u5897
  2092   004416  2E24               	decfsz	??_turnCalibration^0,f,c
  2093   004418  D7FC               	bra	u5897
  2094   00441A  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2095   00441C  D7FA               	bra	u5897
  2096   00441E  D000               	nop2	
  2097   004420                     
  2098                           ;dc_motor.c: 401:                 LATDbits.LATD7=0;
  2099   004420  9E7C               	bcf	124,7,c	;volatile
  2100   004422  EF13  F022         	goto	l5637
  2101   004426                     l538:
  2102   004426                     l5637:
  2103                           
  2104                           ;dc_motor.c: 377:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2105   004426  A48E               	btfss	142,2,c	;volatile
  2106   004428  EF18  F022         	goto	u5531
  2107   00442C  EF1A  F022         	goto	u5530
  2108   004430                     u5531:
  2109   004430  EF21  F022         	goto	l544
  2110   004434                     u5530:
  2111   004434  B68E               	btfsc	142,3,c	;volatile
  2112   004436  EF1F  F022         	goto	u5541
  2113   00443A  EF21  F022         	goto	u5540
  2114   00443E                     u5541:
  2115   00443E  EFAE  F021         	goto	l536
  2116   004442                     u5540:
  2117   004442                     l544:
  2118                           
  2119                           ;dc_motor.c: 404:         LATDbits.LATD4=0;
  2120   004442  987C               	bcf	124,4,c	;volatile
  2121   004444                     
  2122                           ;dc_motor.c: 405:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2123   004444  0EA3               	movlw	163
  2124   004446  6E25               	movwf	(??_turnCalibration+1)^0,c
  2125   004448  0E57               	movlw	87
  2126   00444A  6E24               	movwf	??_turnCalibration^0,c
  2127   00444C  0E02               	movlw	2
  2128   00444E                     u5907:
  2129   00444E  2EE8               	decfsz	wreg,f,c
  2130   004450  D7FE               	bra	u5907
  2131   004452  2E24               	decfsz	??_turnCalibration^0,f,c
  2132   004454  D7FC               	bra	u5907
  2133   004456  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2134   004458  D7FA               	bra	u5907
  2135   00445A  D000               	nop2	
  2136   00445C                     l5643:
  2137                           
  2138                           ;dc_motor.c: 369:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  2139   00445C  B48E               	btfsc	142,2,c	;volatile
  2140   00445E  EF33  F022         	goto	u5551
  2141   004462  EF35  F022         	goto	u5550
  2142   004466                     u5551:
  2143   004466  EF83  F021         	goto	l534
  2144   00446A                     u5550:
  2145   00446A  B68E               	btfsc	142,3,c	;volatile
  2146   00446C  EF3A  F022         	goto	u5561
  2147   004470  EF3C  F022         	goto	u5560
  2148   004474                     u5561:
  2149   004474  EF83  F021         	goto	l534
  2150   004478                     u5560:
  2151   004478                     
  2152                           ;dc_motor.c: 407:     LATDbits.LATD3=0;
  2153   004478  967C               	bcf	124,3,c	;volatile
  2154   00447A                     
  2155                           ;dc_motor.c: 408:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2156   00447A  0EA3               	movlw	163
  2157   00447C  6E25               	movwf	(??_turnCalibration+1)^0,c
  2158   00447E  0E57               	movlw	87
  2159   004480  6E24               	movwf	??_turnCalibration^0,c
  2160   004482  0E02               	movlw	2
  2161   004484                     u5917:
  2162   004484  2EE8               	decfsz	wreg,f,c
  2163   004486  D7FE               	bra	u5917
  2164   004488  2E24               	decfsz	??_turnCalibration^0,f,c
  2165   00448A  D7FC               	bra	u5917
  2166   00448C  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2167   00448E  D7FA               	bra	u5917
  2168   004490  D000               	nop2	
  2169   004492  0012               	return		;funcret
  2170   004494                     __end_of_turnCalibration:
  2171                           	callstack 0
  2172                           
  2173 ;; *************** function _sprintf *****************
  2174 ;; Defined at:
  2175 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2178 ;;		 -> main@buf(100), 
  2179 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2180 ;;		 -> STR_1(51), 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2183 ;;  ap              2  100[BANK0 ] PTR void [1]
  2184 ;;		 -> ?_sprintf(2), 
  2185 ;;  ret             2    0        int 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  2   80[BANK0 ] int 
  2188 ;; Registers used:
  2189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2195 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2196 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2198 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2199 ;;Total ram usage:       33 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 8
  2202 ;; This function calls:
  2203 ;;		_vfprintf
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text2
  2210   005876                     __ptext2:
  2211                           	callstack 0
  2212   005876                     _sprintf:
  2213                           	callstack 22
  2214   005876  0EB4               	movlw	low (?_sprintf+4)
  2215   005878  0100               	movlb	0	; () banked
  2216   00587A  6FC4               	movwf	sprintf@ap& (0+255),b
  2217   00587C  0E00               	movlw	high (?_sprintf+4)
  2218   00587E  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2219   005880  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2220   005884  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2221   005888                     
  2222                           ; BSR set to: 0
  2223   005888  0E00               	movlw	0
  2224   00588A  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2225   00588C  0E00               	movlw	0
  2226   00588E  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2227   005890                     
  2228                           ; BSR set to: 0
  2229   005890  0E00               	movlw	0
  2230   005892  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2231   005894  0E00               	movlw	0
  2232   005896  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2233   005898                     
  2234                           ; BSR set to: 0
  2235   005898  0EC6               	movlw	low sprintf@f
  2236   00589A  6FA8               	movwf	vfprintf@fp& (0+255),b
  2237   00589C  0E00               	movlw	high sprintf@f
  2238   00589E  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2239   0058A0  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2240   0058A4  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2241   0058A8  0EC4               	movlw	low sprintf@ap
  2242   0058AA  6FAC               	movwf	vfprintf@ap& (0+255),b
  2243   0058AC  0E00               	movlw	high sprintf@ap
  2244   0058AE  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2245   0058B0  EC10  F02C         	call	_vfprintf	;wreg free
  2246   0058B4  0100               	movlb	0	; () banked
  2247   0058B6  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2248   0058B8  25B0               	addwf	sprintf@s& (0+255),w,b
  2249   0058BA  6ED9               	movwf	fsr2l,c
  2250   0058BC  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2251   0058BE  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2252   0058C0  6EDA               	movwf	fsr2h,c
  2253   0058C2  0E00               	movlw	0
  2254   0058C4  6EDF               	movwf	indf2,c
  2255   0058C6                     
  2256                           ; BSR set to: 0
  2257   0058C6  0012               	return		;funcret
  2258   0058C8                     __end_of_sprintf:
  2259                           	callstack 0
  2260                           
  2261 ;; *************** function _vfprintf *****************
  2262 ;; Defined at:
  2263 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2266 ;;		 -> sprintf@f(11), 
  2267 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2268 ;;		 -> STR_1(51), 
  2269 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2270 ;;		 -> sprintf@ap(2), 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2273 ;;		 -> STR_1(51), 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  2   72[BANK0 ] int 
  2276 ;; Registers used:
  2277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2283 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2284 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2286 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2287 ;;Total ram usage:        8 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; Hardware stack levels required when called: 7
  2290 ;; This function calls:
  2291 ;;		_vfpfcnvrt
  2292 ;; This function is called by:
  2293 ;;		_sprintf
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text3
  2298   005820                     __ptext3:
  2299                           	callstack 0
  2300   005820                     _vfprintf:
  2301                           	callstack 22
  2302   005820                     
  2303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2304   005820  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2305   005824  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2308   005828  EF25  F02C         	goto	l5327
  2309   00582C                     l5325:
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2312   00582C  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2313   005830  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2314   005834  0EAE               	movlw	low vfprintf@cfmt
  2315   005836  0100               	movlb	0	; () banked
  2316   005838  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2317   00583A  0E00               	movlw	high vfprintf@cfmt
  2318   00583C  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2319   00583E  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2320   005842  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2321   005846  ECEF  F018         	call	_vfpfcnvrt	;wreg free
  2322   00584A                     l5327:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2325   00584A  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2326   00584E  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2327   005852                     	if	0	;tblptru may be non-zero
  2328   005852                     	endif
  2329   005852                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2330   005852  0E00               	movlw	low (__mediumconst shr (0+16))
  2331   005854  6EF8               	movwf	tblptru,c
  2332   005856                     	endif
  2333   005856  0008               	tblrd		*
  2334   005858  50F5               	movf	tablat,w,c
  2335   00585A  0900               	iorlw	0
  2336   00585C  A4D8               	btfss	status,2,c
  2337   00585E  EF33  F02C         	goto	u5181
  2338   005862  EF35  F02C         	goto	u5180
  2339   005866                     u5181:
  2340   005866  EF16  F02C         	goto	l5325
  2341   00586A                     u5180:
  2342   00586A                     
  2343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2344   00586A  0E00               	movlw	0
  2345   00586C  0100               	movlb	0	; () banked
  2346   00586E  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2347   005870  0E00               	movlw	0
  2348   005872  6FA8               	movwf	?_vfprintf& (0+255),b
  2349   005874                     
  2350                           ; BSR set to: 0
  2351   005874  0012               	return		;funcret
  2352   005876                     __end_of_vfprintf:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function _vfpfcnvrt *****************
  2356 ;; Defined at:
  2357 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2360 ;;		 -> sprintf@f(11), 
  2361 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2362 ;;		 -> vfprintf@cfmt(2), 
  2363 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2364 ;;		 -> sprintf@ap(2), 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  convarg         8   61[BANK0 ] struct .
  2367 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2368 ;;		 -> STR_1(51), 
  2369 ;;  i               2    0        int 
  2370 ;;  done            2    0        int 
  2371 ;;  c               1   69[BANK0 ] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2381 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2384 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2385 ;;Total ram usage:       19 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 6
  2388 ;; This function calls:
  2389 ;;		_dtoa
  2390 ;;		_efgtoa
  2391 ;;		_fputc
  2392 ;; This function is called by:
  2393 ;;		_vfprintf
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text4
  2398   0031DE                     __ptext4:
  2399                           	callstack 0
  2400   0031DE                     _vfpfcnvrt:
  2401                           	callstack 22
  2402   0031DE                     
  2403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2404   0031DE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2405   0031E2  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2406   0031E6  CFDE FFF6          	movff	postinc2,tblptrl
  2407   0031EA  CFDD FFF7          	movff	postdec2,tblptrh
  2408   0031EE                     	if	0	;tblptru may be non-zero
  2409   0031EE                     	endif
  2410   0031EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2411   0031EE  0E00               	movlw	low (__mediumconst shr (0+16))
  2412   0031F0  6EF8               	movwf	tblptru,c
  2413   0031F2                     	endif
  2414   0031F2  0008               	tblrd		*
  2415   0031F4  50F5               	movf	tablat,w,c
  2416   0031F6  0A25               	xorlw	37
  2417   0031F8  A4D8               	btfss	status,2,c
  2418   0031FA  EF01  F019         	goto	u4951
  2419   0031FE  EF03  F019         	goto	u4950
  2420   003202                     u4951:
  2421   003202  EF5B  F01A         	goto	l5155
  2422   003206                     u4950:
  2423   003206                     
  2424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2425   003206  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2426   00320A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2427   00320E  2ADE               	incf	postinc2,f,c
  2428   003210  0E00               	movlw	0
  2429   003212  22DD               	addwfc	postdec2,f,c
  2430   003214                     
  2431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2432   003214  0E00               	movlw	0
  2433   003216  0100               	movlb	0	; () banked
  2434   003218  6FE8               	movwf	(_width+1)& (0+255),b
  2435   00321A  0E00               	movlw	0
  2436   00321C  6FE7               	movwf	_width& (0+255),b
  2437   00321E  C0E7  F0ED         	movff	_width,_flags
  2438   003222                     
  2439                           ; BSR set to: 0
  2440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2441   003222  69E9               	setf	_prec& (0+255),b
  2442   003224  69EA               	setf	(_prec+1)& (0+255),b
  2443   003226                     
  2444                           ; BSR set to: 0
  2445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2446   003226  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2447   00322A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2448   00322E  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2449   003232  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2450   003236                     
  2451                           ; BSR set to: 0
  2452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2453   003236  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2454   00323A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2455   00323E                     	if	0	;tblptru may be non-zero
  2456   00323E                     	endif
  2457   00323E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2458   00323E  0E00               	movlw	low (__mediumconst shr (0+16))
  2459   003240  6EF8               	movwf	tblptru,c
  2460   003242                     	endif
  2461   003242  0008               	tblrd		*
  2462   003244  50F5               	movf	tablat,w,c
  2463   003246  0A64               	xorlw	100
  2464   003248  B4D8               	btfsc	status,2,c
  2465   00324A  EF29  F019         	goto	u4961
  2466   00324E  EF2B  F019         	goto	u4960
  2467   003252                     u4961:
  2468   003252  EF3B  F019         	goto	l5111
  2469   003256                     u4960:
  2470   003256                     
  2471                           ; BSR set to: 0
  2472   003256  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2473   00325A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2474   00325E                     	if	0	;tblptru may be non-zero
  2475   00325E                     	endif
  2476   00325E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2477   00325E  0E00               	movlw	low (__mediumconst shr (0+16))
  2478   003260  6EF8               	movwf	tblptru,c
  2479   003262                     	endif
  2480   003262  0008               	tblrd		*
  2481   003264  50F5               	movf	tablat,w,c
  2482   003266  0A69               	xorlw	105
  2483   003268  A4D8               	btfss	status,2,c
  2484   00326A  EF39  F019         	goto	u4971
  2485   00326E  EF3B  F019         	goto	u4970
  2486   003272                     u4971:
  2487   003272  EF7E  F019         	goto	l5117
  2488   003276                     u4970:
  2489   003276                     l5111:
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2493   003276  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2494   00327A  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2495   00327E  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2496   003282  0E02               	movlw	2
  2497   003284  26DE               	addwf	postinc2,f,c
  2498   003286  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2499   00328A  0E00               	movlw	0
  2500   00328C  22DD               	addwfc	postdec2,f,c
  2501   00328E  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2502   003292  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2503   003296  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2504   00329A  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2505   00329E  0E00               	movlw	0
  2506   0032A0  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2507   0032A2  0EFF               	movlw	-1
  2508   0032A4  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2509   0032A6  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2510   0032A8  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2511   0032AA  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2512   0032AC  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2513   0032AE  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2514                           
  2515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2516   0032B0  0E01               	movlw	1
  2517   0032B2  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2518   0032B4  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2519   0032B6  0E00               	movlw	0
  2520   0032B8  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2521   0032BA  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2522   0032BC  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2523   0032C0  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2524   0032C4  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2525   0032C8  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2526   0032CC                     
  2527                           ; BSR set to: 0
  2528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2529   0032CC  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2530   0032D0  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2531   0032D4  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2532   0032D8  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2533   0032DC  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2534   0032E0  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2535   0032E4  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2536   0032E8  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2537   0032EC  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2538   0032F0  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2539   0032F4  ECEC  F01B         	call	_dtoa	;wreg free
  2540   0032F8  EF71  F01A         	goto	l1540
  2541   0032FC                     l5117:
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2545   0032FC  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2546   003300  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2547   003304  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2548   003308  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2549   00330C                     
  2550                           ; BSR set to: 0
  2551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2552   00330C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2553   003310  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2554   003314                     	if	0	;tblptru may be non-zero
  2555   003314                     	endif
  2556   003314                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2557   003314  0E00               	movlw	low (__mediumconst shr (0+16))
  2558   003316  6EF8               	movwf	tblptru,c
  2559   003318                     	endif
  2560   003318  0008               	tblrd		*
  2561   00331A  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2564   00331E  EF9D  F019         	goto	l5129
  2565   003322                     l5121:
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2569   003322  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2570   003324  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2573   003326  EFB6  F019         	goto	l5131
  2574   00332A                     l5123:
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2578   00332A  0E6C               	movlw	108
  2579   00332C  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2580                           
  2581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2582   00332E  EFB6  F019         	goto	l5131
  2583   003332                     l5125:
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2587   003332  0E00               	movlw	0
  2588   003334  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2589                           
  2590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2591   003336  EFB6  F019         	goto	l5131
  2592   00333A                     l5129:
  2593                           
  2594                           ; BSR set to: 0
  2595   00333A  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2596   00333C  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2597   00333E  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2598                           
  2599                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2600                           ; Switch size 1, requested type "simple"
  2601                           ; Number of cases is 1, Range of values is 0 to 0
  2602                           ; switch strategies available:
  2603                           ; Name         Instructions Cycles
  2604                           ; simple_byte            4     3 (average)
  2605                           ;	Chosen strategy is simple_byte
  2606   003340  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2607   003342  0A00               	xorlw	0	; case 0
  2608   003344  B4D8               	btfsc	status,2,c
  2609   003346  EFA7  F019         	goto	l6031
  2610   00334A  EF99  F019         	goto	l5125
  2611   00334E                     l6031:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ; Switch size 1, requested type "simple"
  2615                           ; Number of cases is 3, Range of values is 76 to 108
  2616                           ; switch strategies available:
  2617                           ; Name         Instructions Cycles
  2618                           ; simple_byte           10     6 (average)
  2619                           ;	Chosen strategy is simple_byte
  2620   00334E  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2621   003350  0A4C               	xorlw	76	; case 76
  2622   003352  B4D8               	btfsc	status,2,c
  2623   003354  EF91  F019         	goto	l5121
  2624   003358  0A2A               	xorlw	42	; case 102
  2625   00335A  B4D8               	btfsc	status,2,c
  2626   00335C  EF95  F019         	goto	l5123
  2627   003360  0A0A               	xorlw	10	; case 108
  2628   003362  B4D8               	btfsc	status,2,c
  2629   003364  EF91  F019         	goto	l5121
  2630   003368  EF99  F019         	goto	l5125
  2631   00336C                     l5131:
  2632                           
  2633                           ; BSR set to: 0
  2634   00336C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2635   003370  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2636   003374                     	if	0	;tblptru may be non-zero
  2637   003374                     	endif
  2638   003374                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2639   003374  0E00               	movlw	low (__mediumconst shr (0+16))
  2640   003376  6EF8               	movwf	tblptru,c
  2641   003378                     	endif
  2642   003378  0008               	tblrd		*
  2643   00337A  50F5               	movf	tablat,w,c
  2644   00337C  0A66               	xorlw	102
  2645   00337E  A4D8               	btfss	status,2,c
  2646   003380  EFC4  F019         	goto	u4981
  2647   003384  EFC6  F019         	goto	u4980
  2648   003388                     u4981:
  2649   003388  EF52  F01A         	goto	l5151
  2650   00338C                     u4980:
  2651   00338C  EFFC  F019         	goto	l5139
  2652   003390                     l5133:
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2656   003390  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2657   003394  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2658   003398  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2659   00339C  0E04               	movlw	4
  2660   00339E  26DE               	addwf	postinc2,f,c
  2661   0033A0  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2662   0033A4  0E00               	movlw	0
  2663   0033A6  22DD               	addwfc	postdec2,f,c
  2664   0033A8  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2665   0033AC  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2666   0033B0  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2667   0033B4  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2668   0033B8  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2669   0033BC  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2670                           
  2671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2672   0033C0  EF11  F01A         	goto	l5141
  2673   0033C4                     l5135:
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2677   0033C4  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2678   0033C8  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2679   0033CC  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2680   0033D0  0E04               	movlw	4
  2681   0033D2  26DE               	addwf	postinc2,f,c
  2682   0033D4  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2683   0033D8  0E00               	movlw	0
  2684   0033DA  22DD               	addwfc	postdec2,f,c
  2685   0033DC  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2686   0033E0  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2687   0033E4  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2688   0033E8  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2689   0033EC  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2690   0033F0  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2693   0033F4  EF11  F01A         	goto	l5141
  2694   0033F8                     l5139:
  2695                           
  2696                           ; BSR set to: 0
  2697   0033F8  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2698   0033FA  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2699   0033FC  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2700                           
  2701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2702                           ; Switch size 1, requested type "simple"
  2703                           ; Number of cases is 1, Range of values is 0 to 0
  2704                           ; switch strategies available:
  2705                           ; Name         Instructions Cycles
  2706                           ; simple_byte            4     3 (average)
  2707                           ;	Chosen strategy is simple_byte
  2708   0033FE  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2709   003400  0A00               	xorlw	0	; case 0
  2710   003402  B4D8               	btfsc	status,2,c
  2711   003404  EF06  F01A         	goto	l6033
  2712   003408  EF11  F01A         	goto	l5141
  2713   00340C                     l6033:
  2714                           
  2715                           ; BSR set to: 0
  2716                           ; Switch size 1, requested type "simple"
  2717                           ; Number of cases is 2, Range of values is 76 to 108
  2718                           ; switch strategies available:
  2719                           ; Name         Instructions Cycles
  2720                           ; simple_byte            7     4 (average)
  2721                           ;	Chosen strategy is simple_byte
  2722   00340C  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2723   00340E  0A4C               	xorlw	76	; case 76
  2724   003410  B4D8               	btfsc	status,2,c
  2725   003412  EFE2  F019         	goto	l5135
  2726   003416  0A20               	xorlw	32	; case 108
  2727   003418  B4D8               	btfsc	status,2,c
  2728   00341A  EFC8  F019         	goto	l5133
  2729   00341E  EF11  F01A         	goto	l5141
  2730   003422                     l5141:
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2734   003422  0E01               	movlw	1
  2735   003424  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2736   003426  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2737   003428  0E00               	movlw	0
  2738   00342A  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2739   00342C  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2740   00342E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2741   003432  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2742   003436  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2743   00343A  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2746   00343E  EF3A  F01A         	goto	l5149
  2747   003442                     l5143:
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2751   003442  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2752   003446  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2753   00344A  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  2754   00344E  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2755   003452  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2756   003456  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2757   00345A  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2758   00345E  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2759   003462                     	if	0	;tblptru may be non-zero
  2760   003462                     	endif
  2761   003462                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2762   003462  0E00               	movlw	low (__mediumconst shr (0+16))
  2763   003464  6EF8               	movwf	tblptru,c
  2764   003466                     	endif
  2765   003466  0008               	tblrd		*
  2766   003468  CFF5 F066          	movff	tablat,efgtoa@c
  2767   00346C  EC1F  F007         	call	_efgtoa	;wreg free
  2768   003470  EF71  F01A         	goto	l1540
  2769   003474                     l5149:
  2770                           
  2771                           ; BSR set to: 0
  2772   003474  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2773   003478  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2774   00347C                     	if	0	;tblptru may be non-zero
  2775   00347C                     	endif
  2776   00347C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2777   00347C  0E00               	movlw	low (__mediumconst shr (0+16))
  2778   00347E  6EF8               	movwf	tblptru,c
  2779   003480                     	endif
  2780   003480  0008               	tblrd		*
  2781   003482  50F5               	movf	tablat,w,c
  2782   003484  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2783   003486  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2784                           
  2785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2786                           ; Switch size 1, requested type "simple"
  2787                           ; Number of cases is 1, Range of values is 0 to 0
  2788                           ; switch strategies available:
  2789                           ; Name         Instructions Cycles
  2790                           ; simple_byte            4     3 (average)
  2791                           ;	Chosen strategy is simple_byte
  2792   003488  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2793   00348A  0A00               	xorlw	0	; case 0
  2794   00348C  B4D8               	btfsc	status,2,c
  2795   00348E  EF4B  F01A         	goto	l6035
  2796   003492  EF52  F01A         	goto	l5151
  2797   003496                     l6035:
  2798                           
  2799                           ; BSR set to: 0
  2800                           ; Switch size 1, requested type "simple"
  2801                           ; Number of cases is 1, Range of values is 102 to 102
  2802                           ; switch strategies available:
  2803                           ; Name         Instructions Cycles
  2804                           ; simple_byte            4     3 (average)
  2805                           ;	Chosen strategy is simple_byte
  2806   003496  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2807   003498  0A66               	xorlw	102	; case 102
  2808   00349A  B4D8               	btfsc	status,2,c
  2809   00349C  EF21  F01A         	goto	l5143
  2810   0034A0  EF52  F01A         	goto	l5151
  2811   0034A4                     l5151:
  2812                           
  2813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2814   0034A4  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2815   0034A8  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2816   0034AC  2ADE               	incf	postinc2,f,c
  2817   0034AE  0E00               	movlw	0
  2818   0034B0  22DD               	addwfc	postdec2,f,c
  2819   0034B2  EF71  F01A         	goto	l1540
  2820   0034B6                     l5155:
  2821                           
  2822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2823   0034B6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2824   0034BA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2825   0034BE  CFDE FFF6          	movff	postinc2,tblptrl
  2826   0034C2  CFDD FFF7          	movff	postdec2,tblptrh
  2827   0034C6                     	if	0	;tblptru may be non-zero
  2828   0034C6                     	endif
  2829   0034C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2830   0034C6  0E00               	movlw	low (__mediumconst shr (0+16))
  2831   0034C8  6EF8               	movwf	tblptru,c
  2832   0034CA                     	endif
  2833   0034CA  0008               	tblrd		*
  2834   0034CC  50F5               	movf	tablat,w,c
  2835   0034CE  6E01               	movwf	fputc@c^0,c
  2836   0034D0  6A02               	clrf	(fputc@c+1)^0,c
  2837   0034D2  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2838   0034D6  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2839   0034DA  ECFA  F025         	call	_fputc	;wreg free
  2840   0034DE  EF52  F01A         	goto	l5151
  2841   0034E2                     l1540:
  2842   0034E2  0012               	return		;funcret
  2843   0034E4                     __end_of_vfpfcnvrt:
  2844                           	callstack 0
  2845                           
  2846 ;; *************** function _efgtoa *****************
  2847 ;; Defined at:
  2848 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2851 ;;		 -> sprintf@f(11), 
  2852 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2853 ;;  c               1    6[BANK0 ] unsigned char 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;  u               4   49[BANK0 ] struct flui
  2856 ;;  g               4   45[BANK0 ] struct flui
  2857 ;;  l               4   38[BANK0 ] struct flui
  2858 ;;  h               4   34[BANK0 ] struct flui
  2859 ;;  ou              4   28[BANK0 ] struct flui
  2860 ;;  n               2   43[BANK0 ] int 
  2861 ;;  i               2   32[BANK0 ] int 
  2862 ;;  w               2   26[BANK0 ] int 
  2863 ;;  e               2   24[BANK0 ] int 
  2864 ;;  m               2   22[BANK0 ] int 
  2865 ;;  d               2   20[BANK0 ] int 
  2866 ;;  t               2   13[BANK0 ] int 
  2867 ;;  p               2   11[BANK0 ] int 
  2868 ;;  ne              2    9[BANK0 ] int 
  2869 ;;  sign            1   42[BANK0 ] unsigned char 
  2870 ;;  nmode           1   19[BANK0 ] unsigned char 
  2871 ;;  mode            1   18[BANK0 ] unsigned char 
  2872 ;;  pp              1   17[BANK0 ] unsigned char 
  2873 ;;  esign           1    0        unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2883 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2885 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2886 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2887 ;;Total ram usage:       53 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; Hardware stack levels required when called: 5
  2890 ;; This function calls:
  2891 ;;		___fladd
  2892 ;;		___fldiv
  2893 ;;		___fleq
  2894 ;;		___flge
  2895 ;;		___flmul
  2896 ;;		___flneg
  2897 ;;		___flsub
  2898 ;;		___fltol
  2899 ;;		___fpclassifyf
  2900 ;;		_floorf
  2901 ;;		_labs
  2902 ;;		_memcpy
  2903 ;;		_pad
  2904 ;;		_strcpy
  2905 ;; This function is called by:
  2906 ;;		_vfpfcnvrt
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text5
  2911   000E3E                     __ptext5:
  2912                           	callstack 0
  2913   000E3E                     _efgtoa:
  2914                           	callstack 22
  2915   000E3E                     
  2916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2917   000E3E  0E00               	movlw	0
  2918   000E40  0100               	movlb	0	; () banked
  2919   000E42  6F8A               	movwf	efgtoa@sign& (0+255),b
  2920   000E44                     
  2921                           ; BSR set to: 0
  2922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2923   000E44  C062  F08D         	movff	efgtoa@f,efgtoa@g
  2924   000E48  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  2925   000E4C  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  2926   000E50  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  2927   000E54                     
  2928                           ; BSR set to: 0
  2929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2930   000E54  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2931   000E56  EF31  F007         	goto	u4590
  2932   000E5A  EF2F  F007         	goto	u4591
  2933   000E5E                     u4591:
  2934   000E5E  EF45  F007         	goto	l4819
  2935   000E62                     u4590:
  2936   000E62                     
  2937                           ; BSR set to: 0
  2938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2939   000E62  0E01               	movlw	1
  2940   000E64  6F8A               	movwf	efgtoa@sign& (0+255),b
  2941   000E66                     
  2942                           ; BSR set to: 0
  2943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2944   000E66  C08D  F001         	movff	efgtoa@g,___flneg@f1
  2945   000E6A  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2946   000E6E  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2947   000E72  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2948   000E76  EC2D  F02F         	call	___flneg	;wreg free
  2949   000E7A  C001  F08D         	movff	?___flneg,efgtoa@g
  2950   000E7E  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  2951   000E82  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  2952   000E86  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  2953   000E8A                     l4819:
  2954                           
  2955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2956   000E8A  0E00               	movlw	0
  2957   000E8C  0100               	movlb	0	; () banked
  2958   000E8E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2959   000E90  0E00               	movlw	0
  2960   000E92  6F8B               	movwf	efgtoa@n& (0+255),b
  2961   000E94                     
  2962                           ; BSR set to: 0
  2963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2964   000E94  C0E7  F07A         	movff	_width,efgtoa@w
  2965   000E98  C0E8  F07B         	movff	_width+1,efgtoa@w+1
  2966   000E9C                     
  2967                           ; BSR set to: 0
  2968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2969   000E9C  518A               	movf	efgtoa@sign& (0+255),w,b
  2970   000E9E  B4D8               	btfsc	status,2,c
  2971   000EA0  EF54  F007         	goto	u4601
  2972   000EA4  EF56  F007         	goto	u4600
  2973   000EA8                     u4601:
  2974   000EA8  EF6A  F007         	goto	l4833
  2975   000EAC                     u4600:
  2976   000EAC                     
  2977                           ; BSR set to: 0
  2978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2979   000EAC  518A               	movf	efgtoa@sign& (0+255),w,b
  2980   000EAE  A4D8               	btfss	status,2,c
  2981   000EB0  EF5C  F007         	goto	u4611
  2982   000EB4  EF5E  F007         	goto	u4610
  2983   000EB8                     u4611:
  2984   000EB8  EF64  F007         	goto	l4829
  2985   000EBC                     u4610:
  2986   000EBC                     
  2987                           ; BSR set to: 0
  2988   000EBC  0E00               	movlw	0
  2989   000EBE  6F70               	movwf	(_efgtoa$2894+1)& (0+255),b
  2990   000EC0  0E2B               	movlw	43
  2991   000EC2  6F6F               	movwf	_efgtoa$2894& (0+255),b
  2992   000EC4  EF68  F007         	goto	l4831
  2993   000EC8                     l4829:
  2994                           
  2995                           ; BSR set to: 0
  2996   000EC8  0E00               	movlw	0
  2997   000ECA  6F70               	movwf	(_efgtoa$2894+1)& (0+255),b
  2998   000ECC  0E2D               	movlw	45
  2999   000ECE  6F6F               	movwf	_efgtoa$2894& (0+255),b
  3000   000ED0                     l4831:
  3001                           
  3002                           ; BSR set to: 0
  3003   000ED0  C06F  F08A         	movff	_efgtoa$2894,efgtoa@sign
  3004   000ED4                     l4833:
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3008   000ED4  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3009   000ED8  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3010   000EDC  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3011   000EE0  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3012   000EE4  EC7B  F025         	call	___fpclassifyf	;wreg free
  3013   000EE8  0401               	decf	?___fpclassifyf^0,w,c
  3014   000EEA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3015   000EEC  A4D8               	btfss	status,2,c
  3016   000EEE  EF7B  F007         	goto	u4621
  3017   000EF2  EF7D  F007         	goto	u4620
  3018   000EF6                     u4621:
  3019   000EF6  EFB0  F007         	goto	l4851
  3020   000EFA                     u4620:
  3021   000EFA                     
  3022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3023   000EFA  0100               	movlb	0	; () banked
  3024   000EFC  518A               	movf	efgtoa@sign& (0+255),w,b
  3025   000EFE  B4D8               	btfsc	status,2,c
  3026   000F00  EF84  F007         	goto	u4631
  3027   000F04  EF86  F007         	goto	u4630
  3028   000F08                     u4631:
  3029   000F08  EF8F  F007         	goto	l4843
  3030   000F0C                     u4630:
  3031   000F0C                     
  3032                           ; BSR set to: 0
  3033                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3034   000F0C  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3035   000F10                     
  3036                           ; BSR set to: 0
  3037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3038   000F10  077A               	decf	efgtoa@w& (0+255),f,b
  3039   000F12  A0D8               	btfss	status,0,c
  3040   000F14  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3041   000F16                     
  3042                           ; BSR set to: 0
  3043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3044   000F16  0E00               	movlw	0
  3045   000F18  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3046   000F1A  0E01               	movlw	1
  3047   000F1C  6F8B               	movwf	efgtoa@n& (0+255),b
  3048   000F1E                     l4843:
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3052   000F1E  0EA0               	movlw	low _dbuf
  3053   000F20  258B               	addwf	efgtoa@n& (0+255),w,b
  3054   000F22  6E01               	movwf	strcpy@dest^0,c
  3055   000F24  0E02               	movlw	high _dbuf
  3056   000F26  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3057   000F28  6E02               	movwf	(strcpy@dest+1)^0,c
  3058   000F2A  0E34               	movlw	low STR_2
  3059   000F2C  6E03               	movwf	strcpy@src^0,c
  3060   000F2E  0E0E               	movlw	high STR_2
  3061   000F30  6E04               	movwf	(strcpy@src+1)^0,c
  3062   000F32  EC6A  F02E         	call	_strcpy	;wreg free
  3063   000F36                     l4845:
  3064                           
  3065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3066   000F36  0100               	movlb	0	; () banked
  3067   000F38  0EFD               	movlw	253
  3068   000F3A  277A               	addwf	efgtoa@w& (0+255),f,b
  3069   000F3C  0EFF               	movlw	255
  3070   000F3E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3071   000F40                     
  3072                           ; BSR set to: 0
  3073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3074   000F40  C060  F011         	movff	efgtoa@fp,pad@fp
  3075   000F44  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3076   000F48  0EA0               	movlw	low _dbuf
  3077   000F4A  6E13               	movwf	pad@buf^0,c
  3078   000F4C  0E02               	movlw	high _dbuf
  3079   000F4E  6E14               	movwf	(pad@buf+1)^0,c
  3080   000F50  C07A  F015         	movff	efgtoa@w,pad@p
  3081   000F54  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3082   000F58  EC7E  F029         	call	_pad	;wreg free
  3083   000F5C  EF1B  F00C         	goto	l1492
  3084   000F60                     l4851:
  3085                           
  3086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3087   000F60  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3088   000F64  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3089   000F68  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3090   000F6C  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3091   000F70  EC7B  F025         	call	___fpclassifyf	;wreg free
  3092   000F74  5001               	movf	?___fpclassifyf^0,w,c
  3093   000F76  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3094   000F78  A4D8               	btfss	status,2,c
  3095   000F7A  EFC1  F007         	goto	u4641
  3096   000F7E  EFC3  F007         	goto	u4640
  3097   000F82                     u4641:
  3098   000F82  EFE3  F007         	goto	l4869
  3099   000F86                     u4640:
  3100   000F86                     
  3101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3102   000F86  0100               	movlb	0	; () banked
  3103   000F88  518A               	movf	efgtoa@sign& (0+255),w,b
  3104   000F8A  B4D8               	btfsc	status,2,c
  3105   000F8C  EFCA  F007         	goto	u4651
  3106   000F90  EFCC  F007         	goto	u4650
  3107   000F94                     u4651:
  3108   000F94  EFD5  F007         	goto	l4861
  3109   000F98                     u4650:
  3110   000F98                     
  3111                           ; BSR set to: 0
  3112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3113   000F98  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3114   000F9C                     
  3115                           ; BSR set to: 0
  3116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3117   000F9C  077A               	decf	efgtoa@w& (0+255),f,b
  3118   000F9E  A0D8               	btfss	status,0,c
  3119   000FA0  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3120   000FA2                     
  3121                           ; BSR set to: 0
  3122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3123   000FA2  0E00               	movlw	0
  3124   000FA4  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3125   000FA6  0E01               	movlw	1
  3126   000FA8  6F8B               	movwf	efgtoa@n& (0+255),b
  3127   000FAA                     l4861:
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3131   000FAA  0EA0               	movlw	low _dbuf
  3132   000FAC  258B               	addwf	efgtoa@n& (0+255),w,b
  3133   000FAE  6E01               	movwf	strcpy@dest^0,c
  3134   000FB0  0E02               	movlw	high _dbuf
  3135   000FB2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3136   000FB4  6E02               	movwf	(strcpy@dest+1)^0,c
  3137   000FB6  0E38               	movlw	low STR_5
  3138   000FB8  6E03               	movwf	strcpy@src^0,c
  3139   000FBA  0E0E               	movlw	high STR_5
  3140   000FBC  6E04               	movwf	(strcpy@src+1)^0,c
  3141   000FBE  EC6A  F02E         	call	_strcpy	;wreg free
  3142   000FC2  EF9B  F007         	goto	l4845
  3143   000FC6                     l4869:
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3146   000FC6  0E00               	movlw	0
  3147   000FC8  0100               	movlb	0	; () banked
  3148   000FCA  6F91               	movwf	efgtoa@u& (0+255),b
  3149   000FCC  0E00               	movlw	0
  3150   000FCE  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3151   000FD0  0E80               	movlw	128
  3152   000FD2  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3153   000FD4  0E3F               	movlw	63
  3154   000FD6  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3157   000FD8  0E00               	movlw	0
  3158   000FDA  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3159   000FDC  0E00               	movlw	0
  3160   000FDE  6F78               	movwf	efgtoa@e& (0+255),b
  3161   000FE0                     
  3162                           ; BSR set to: 0
  3163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3164   000FE0  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3165   000FE4  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3166   000FE8  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3167   000FEC  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3168   000FF0  0E00               	movlw	0
  3169   000FF2  6E36               	movwf	___fleq@ff2^0,c
  3170   000FF4  0E00               	movlw	0
  3171   000FF6  6E37               	movwf	(___fleq@ff2+1)^0,c
  3172   000FF8  0E00               	movlw	0
  3173   000FFA  6E38               	movwf	(___fleq@ff2+2)^0,c
  3174   000FFC  0E00               	movlw	0
  3175   000FFE  6E39               	movwf	(___fleq@ff2+3)^0,c
  3176   001000  EC6A  F027         	call	___fleq	;wreg free
  3177   001004  B0D8               	btfsc	status,0,c
  3178   001006  EF07  F008         	goto	u4661
  3179   00100A  EF09  F008         	goto	u4660
  3180   00100E                     u4661:
  3181   00100E  EFE8  F008         	goto	l1495
  3182   001012                     u4660:
  3183   001012  EF16  F008         	goto	l4877
  3184   001016                     l1497:
  3185                           
  3186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3187   001016  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3188   00101A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3189   00101E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3190   001022  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3191   001026                     
  3192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3193   001026  0100               	movlb	0	; () banked
  3194   001028  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3195   00102A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3196   00102C                     l4877:
  3197                           
  3198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3199   00102C  C091  F011         	movff	efgtoa@u,___flmul@b
  3200   001030  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3201   001034  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3202   001038  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3203   00103C  0E00               	movlw	0
  3204   00103E  6E15               	movwf	___flmul@a^0,c
  3205   001040  0E00               	movlw	0
  3206   001042  6E16               	movwf	(___flmul@a+1)^0,c
  3207   001044  0E20               	movlw	32
  3208   001046  6E17               	movwf	(___flmul@a+2)^0,c
  3209   001048  0E41               	movlw	65
  3210   00104A  6E18               	movwf	(___flmul@a+3)^0,c
  3211   00104C  EC76  F013         	call	___flmul	;wreg free
  3212   001050  C011  F07C         	movff	?___flmul,efgtoa@ou
  3213   001054  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3214   001058  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3215   00105C  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3216   001060  0100               	movlb	0	; () banked
  3217   001062  517C               	movf	efgtoa@ou& (0+255),w,b
  3218   001064  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3219   001066  6E01               	movwf	labs@a^0,c
  3220   001068  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3221   00106A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3222   00106C  6E02               	movwf	(labs@a+1)^0,c
  3223   00106E  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3224   001070  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3225   001072  6E03               	movwf	(labs@a+2)^0,c
  3226   001074  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3227   001076  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3228   001078  6E04               	movwf	(labs@a+3)^0,c
  3229   00107A  EC9E  F02A         	call	_labs	;wreg free
  3230   00107E  BE04               	btfsc	(?_labs+3)^0,7,c
  3231   001080  EF4D  F008         	goto	u4671
  3232   001084  5004               	movf	(?_labs+3)^0,w,c
  3233   001086  1003               	iorwf	(?_labs+2)^0,w,c
  3234   001088  1002               	iorwf	(?_labs+1)^0,w,c
  3235   00108A  E109               	bnz	u4670
  3236   00108C  0E02               	movlw	2
  3237   00108E  5C01               	subwf	?_labs^0,w,c
  3238   001090  A0D8               	btfss	status,0,c
  3239   001092  EF4D  F008         	goto	u4671
  3240   001096  EF4F  F008         	goto	u4670
  3241   00109A                     u4671:
  3242   00109A  EF0B  F008         	goto	l1497
  3243   00109E                     u4670:
  3244   00109E  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3245   0010A2  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3246   0010A6  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3247   0010AA  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3248   0010AE  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3249   0010B2  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3250   0010B6  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3251   0010BA  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3252   0010BE  ECF9  F024         	call	___flge	;wreg free
  3253   0010C2  A0D8               	btfss	status,0,c
  3254   0010C4  EF66  F008         	goto	u4681
  3255   0010C8  EF68  F008         	goto	u4680
  3256   0010CC                     u4681:
  3257   0010CC  EF0B  F008         	goto	l1497
  3258   0010D0                     u4680:
  3259   0010D0                     
  3260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3261   0010D0  0100               	movlb	0	; () banked
  3262   0010D2  5191               	movf	efgtoa@u& (0+255),w,b
  3263   0010D4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3264   0010D6  6E01               	movwf	labs@a^0,c
  3265   0010D8  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3266   0010DA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3267   0010DC  6E02               	movwf	(labs@a+1)^0,c
  3268   0010DE  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3269   0010E0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3270   0010E2  6E03               	movwf	(labs@a+2)^0,c
  3271   0010E4  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3272   0010E6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3273   0010E8  6E04               	movwf	(labs@a+3)^0,c
  3274   0010EA  EC9E  F02A         	call	_labs	;wreg free
  3275   0010EE  BE04               	btfsc	(?_labs+3)^0,7,c
  3276   0010F0  EF87  F008         	goto	u4690
  3277   0010F4  5004               	movf	(?_labs+3)^0,w,c
  3278   0010F6  1003               	iorwf	(?_labs+2)^0,w,c
  3279   0010F8  1002               	iorwf	(?_labs+1)^0,w,c
  3280   0010FA  E107               	bnz	u4691
  3281   0010FC  0E02               	movlw	2
  3282   0010FE  5C01               	subwf	?_labs^0,w,c
  3283   001100  B0D8               	btfsc	status,0,c
  3284   001102  EF85  F008         	goto	u4691
  3285   001106  EF87  F008         	goto	u4690
  3286   00110A                     u4691:
  3287   00110A  EFCF  F008         	goto	l4895
  3288   00110E                     u4690:
  3289   00110E                     l4885:
  3290                           
  3291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3292   00110E  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3293   001112  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3294   001116  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3295   00111A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3298   00111E  EFE8  F008         	goto	l1495
  3299   001122                     l4887:
  3300                           
  3301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3302   001122  C091  F032         	movff	efgtoa@u,___fldiv@b
  3303   001126  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3304   00112A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3305   00112E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3306   001132  0E00               	movlw	0
  3307   001134  6E36               	movwf	___fldiv@a^0,c
  3308   001136  0E00               	movlw	0
  3309   001138  6E37               	movwf	(___fldiv@a+1)^0,c
  3310   00113A  0E20               	movlw	32
  3311   00113C  6E38               	movwf	(___fldiv@a+2)^0,c
  3312   00113E  0E41               	movlw	65
  3313   001140  6E39               	movwf	(___fldiv@a+3)^0,c
  3314   001142  EC8B  F015         	call	___fldiv	;wreg free
  3315   001146  C032  F091         	movff	?___fldiv,efgtoa@u
  3316   00114A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3317   00114E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3318   001152  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3319   001156                     
  3320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3321   001156  0100               	movlb	0	; () banked
  3322   001158  0778               	decf	efgtoa@e& (0+255),f,b
  3323   00115A  A0D8               	btfss	status,0,c
  3324   00115C  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3325   00115E                     
  3326                           ; BSR set to: 0
  3327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3328   00115E  5191               	movf	efgtoa@u& (0+255),w,b
  3329   001160  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3330   001162  6E01               	movwf	labs@a^0,c
  3331   001164  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3332   001166  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3333   001168  6E02               	movwf	(labs@a+1)^0,c
  3334   00116A  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3335   00116C  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3336   00116E  6E03               	movwf	(labs@a+2)^0,c
  3337   001170  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3338   001172  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3339   001174  6E04               	movwf	(labs@a+3)^0,c
  3340   001176  EC9E  F02A         	call	_labs	;wreg free
  3341   00117A  BE04               	btfsc	(?_labs+3)^0,7,c
  3342   00117C  EFCD  F008         	goto	u4700
  3343   001180  5004               	movf	(?_labs+3)^0,w,c
  3344   001182  1003               	iorwf	(?_labs+2)^0,w,c
  3345   001184  1002               	iorwf	(?_labs+1)^0,w,c
  3346   001186  E107               	bnz	u4701
  3347   001188  0E02               	movlw	2
  3348   00118A  5C01               	subwf	?_labs^0,w,c
  3349   00118C  B0D8               	btfsc	status,0,c
  3350   00118E  EFCB  F008         	goto	u4701
  3351   001192  EFCD  F008         	goto	u4700
  3352   001196                     u4701:
  3353   001196  EFCF  F008         	goto	l4895
  3354   00119A                     u4700:
  3355   00119A  EF87  F008         	goto	l4885
  3356   00119E                     l4895:
  3357                           
  3358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3359   00119E  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3360   0011A2  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3361   0011A6  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3362   0011AA  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3363   0011AE  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3364   0011B2  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3365   0011B6  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3366   0011BA  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3367   0011BE  ECF9  F024         	call	___flge	;wreg free
  3368   0011C2  A0D8               	btfss	status,0,c
  3369   0011C4  EFE6  F008         	goto	u4711
  3370   0011C8  EFE8  F008         	goto	u4710
  3371   0011CC                     u4711:
  3372   0011CC  EF91  F008         	goto	l4887
  3373   0011D0                     u4710:
  3374   0011D0                     l1495:
  3375                           
  3376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3377   0011D0  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3378                           
  3379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3380   0011D4  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3381   0011D8                     
  3382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3383   0011D8  0100               	movlb	0	; () banked
  3384   0011DA  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3385   0011DC  EFF2  F008         	goto	u4721
  3386   0011E0  EFF4  F008         	goto	u4720
  3387   0011E4                     u4721:
  3388   0011E4  EFFA  F008         	goto	l4901
  3389   0011E8                     u4720:
  3390   0011E8                     
  3391                           ; BSR set to: 0
  3392   0011E8  C0E9  F06B         	movff	_prec,efgtoa@p
  3393   0011EC  C0EA  F06C         	movff	_prec+1,efgtoa@p+1
  3394   0011F0  EFFE  F008         	goto	l4903
  3395   0011F4                     l4901:
  3396                           
  3397                           ; BSR set to: 0
  3398   0011F4  0E00               	movlw	0
  3399   0011F6  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3400   0011F8  0E06               	movlw	6
  3401   0011FA  6F6B               	movwf	efgtoa@p& (0+255),b
  3402   0011FC                     l4903:
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3406   0011FC  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3407   001200  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3408   001204                     
  3409                           ; BSR set to: 0
  3410                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3411   001204  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3412   001206  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3413   001208                     
  3414                           ; BSR set to: 0
  3415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3416   001208  0E66               	movlw	102
  3417   00120A  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3418   00120C  A4D8               	btfss	status,2,c
  3419   00120E  EF0B  F009         	goto	u4731
  3420   001212  EF0D  F009         	goto	u4730
  3421   001216                     u4731:
  3422   001216  EF2D  F009         	goto	l4917
  3423   00121A                     u4730:
  3424   00121A                     
  3425                           ; BSR set to: 0
  3426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3427   00121A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3428   00121C  EF14  F009         	goto	u4740
  3429   001220  EF12  F009         	goto	u4741
  3430   001224                     u4741:
  3431   001224  EF20  F009         	goto	l4913
  3432   001228                     u4740:
  3433   001228                     
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3436   001228  0E00               	movlw	0
  3437   00122A  6F91               	movwf	efgtoa@u& (0+255),b
  3438   00122C  0E00               	movlw	0
  3439   00122E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3440   001230  0E80               	movlw	128
  3441   001232  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3442   001234  0E3F               	movlw	63
  3443   001236  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3444                           
  3445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3446   001238  0E00               	movlw	0
  3447   00123A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3448   00123C  0E00               	movlw	0
  3449   00123E  6F78               	movwf	efgtoa@e& (0+255),b
  3450   001240                     l4913:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3454   001240  0E67               	movlw	103
  3455   001242  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3456   001244  B4D8               	btfsc	status,2,c
  3457   001246  EF27  F009         	goto	u4751
  3458   00124A  EF29  F009         	goto	u4750
  3459   00124E                     u4751:
  3460   00124E  EF2D  F009         	goto	l4917
  3461   001252                     u4750:
  3462   001252                     
  3463                           ; BSR set to: 0
  3464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3465   001252  5178               	movf	efgtoa@e& (0+255),w,b
  3466   001254  2776               	addwf	efgtoa@m& (0+255),f,b
  3467   001256  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3468   001258  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3469   00125A                     l4917:
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3473   00125A  0E00               	movlw	0
  3474   00125C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3475   00125E  0E00               	movlw	0
  3476   001260  6F80               	movwf	efgtoa@i& (0+255),b
  3477   001262                     
  3478                           ; BSR set to: 0
  3479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3480   001262  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3481   001266  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3482   00126A  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3483   00126E  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3484   001272                     
  3485                           ; BSR set to: 0
  3486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3487   001272  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3488   001276  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3489   00127A  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3490   00127E  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3491                           
  3492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3493   001282  EFBE  F009         	goto	l4931
  3494   001286                     l4923:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3498   001286  C082  F032         	movff	efgtoa@h,___fldiv@b
  3499   00128A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3500   00128E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3501   001292  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3502   001296  C091  F036         	movff	efgtoa@u,___fldiv@a
  3503   00129A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3504   00129E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3505   0012A2  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3506   0012A6  EC8B  F015         	call	___fldiv	;wreg free
  3507   0012AA  C032  F04B         	movff	?___fldiv,floorf@x
  3508   0012AE  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3509   0012B2  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3510   0012B6  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3511   0012BA  EC91  F01F         	call	_floorf	;wreg free
  3512   0012BE  C04B  F086         	movff	?_floorf,efgtoa@l
  3513   0012C2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3514   0012C6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3515   0012CA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3516                           
  3517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3518   0012CE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3519   0012D2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3520   0012D6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3521   0012DA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3522   0012DE  EC76  F024         	call	___fltol	;wreg free
  3523   0012E2  C001  F074         	movff	?___fltol,efgtoa@d
  3524   0012E6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3525   0012EA                     
  3526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3527   0012EA  C082  F02A         	movff	efgtoa@h,___flsub@b
  3528   0012EE  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3529   0012F2  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3530   0012F6  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3531   0012FA  C086  F015         	movff	efgtoa@l,___flmul@a
  3532   0012FE  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3533   001302  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3534   001306  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3535   00130A  C091  F011         	movff	efgtoa@u,___flmul@b
  3536   00130E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3537   001312  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3538   001316  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3539   00131A  EC76  F013         	call	___flmul	;wreg free
  3540   00131E  C011  F02E         	movff	?___flmul,___flsub@a
  3541   001322  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3542   001326  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3543   00132A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3544   00132E  EC47  F02E         	call	___flsub	;wreg free
  3545   001332  C02A  F082         	movff	?___flsub,efgtoa@h
  3546   001336  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3547   00133A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3548   00133E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3549   001342                     
  3550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3551   001342  C091  F032         	movff	efgtoa@u,___fldiv@b
  3552   001346  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3553   00134A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3554   00134E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3555   001352  0E00               	movlw	0
  3556   001354  6E36               	movwf	___fldiv@a^0,c
  3557   001356  0E00               	movlw	0
  3558   001358  6E37               	movwf	(___fldiv@a+1)^0,c
  3559   00135A  0E20               	movlw	32
  3560   00135C  6E38               	movwf	(___fldiv@a+2)^0,c
  3561   00135E  0E41               	movlw	65
  3562   001360  6E39               	movwf	(___fldiv@a+3)^0,c
  3563   001362  EC8B  F015         	call	___fldiv	;wreg free
  3564   001366  C032  F091         	movff	?___fldiv,efgtoa@u
  3565   00136A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3566   00136E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3567   001372  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3568   001376                     
  3569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3570   001376  0100               	movlb	0	; () banked
  3571   001378  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3572   00137A  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3573   00137C                     l4931:
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3577   00137C  5176               	movf	efgtoa@m& (0+255),w,b
  3578   00137E  5D80               	subwf	efgtoa@i& (0+255),w,b
  3579   001380  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3580   001382  0A80               	xorlw	128
  3581   001384  6F67               	movwf	??_efgtoa& (0+255),b
  3582   001386  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3583   001388  0A80               	xorlw	128
  3584   00138A  5967               	subwfb	??_efgtoa& (0+255),w,b
  3585   00138C  A0D8               	btfss	status,0,c
  3586   00138E  EFCB  F009         	goto	u4761
  3587   001392  EFCD  F009         	goto	u4760
  3588   001396                     u4761:
  3589   001396  EF43  F009         	goto	l4923
  3590   00139A                     u4760:
  3591   00139A                     
  3592                           ; BSR set to: 0
  3593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3594   00139A  C091  F011         	movff	efgtoa@u,___flmul@b
  3595   00139E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3596   0013A2  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3597   0013A6  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3598   0013AA  0E00               	movlw	0
  3599   0013AC  6E15               	movwf	___flmul@a^0,c
  3600   0013AE  0E00               	movlw	0
  3601   0013B0  6E16               	movwf	(___flmul@a+1)^0,c
  3602   0013B2  0EA0               	movlw	160
  3603   0013B4  6E17               	movwf	(___flmul@a+2)^0,c
  3604   0013B6  0E40               	movlw	64
  3605   0013B8  6E18               	movwf	(___flmul@a+3)^0,c
  3606   0013BA  EC76  F013         	call	___flmul	;wreg free
  3607   0013BE  C011  F086         	movff	?___flmul,efgtoa@l
  3608   0013C2  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  3609   0013C6  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  3610   0013CA  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  3611   0013CE                     
  3612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3613   0013CE  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3614   0013D2  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3615   0013D6  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3616   0013DA  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3617   0013DE  C086  F02E         	movff	efgtoa@l,___flge@ff2
  3618   0013E2  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  3619   0013E6  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  3620   0013EA  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  3621   0013EE  ECF9  F024         	call	___flge	;wreg free
  3622   0013F2  B0D8               	btfsc	status,0,c
  3623   0013F4  EFFE  F009         	goto	u4771
  3624   0013F8  EF00  F00A         	goto	u4770
  3625   0013FC                     u4771:
  3626   0013FC  EF0B  F00A         	goto	l4939
  3627   001400                     u4770:
  3628   001400                     
  3629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3630   001400  0E00               	movlw	0
  3631   001402  0100               	movlb	0	; () banked
  3632   001404  6F86               	movwf	efgtoa@l& (0+255),b
  3633   001406  0E00               	movlw	0
  3634   001408  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3635   00140A  0E00               	movlw	0
  3636   00140C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3637   00140E  0E00               	movlw	0
  3638   001410  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3639                           
  3640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3641   001412  EF34  F00A         	goto	l4945
  3642   001416                     l4939:
  3643                           
  3644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3645   001416  C082  F032         	movff	efgtoa@h,___fleq@ff1
  3646   00141A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  3647   00141E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  3648   001422  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  3649   001426  C086  F036         	movff	efgtoa@l,___fleq@ff2
  3650   00142A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  3651   00142E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  3652   001432  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  3653   001436  EC6A  F027         	call	___fleq	;wreg free
  3654   00143A  A0D8               	btfss	status,0,c
  3655   00143C  EF22  F00A         	goto	u4781
  3656   001440  EF24  F00A         	goto	u4780
  3657   001444                     u4781:
  3658   001444  EF34  F00A         	goto	l4945
  3659   001448                     u4780:
  3660   001448  0100               	movlb	0	; () banked
  3661   00144A  B174               	btfsc	efgtoa@d& (0+255),0,b
  3662   00144C  EF2A  F00A         	goto	u4791
  3663   001450  EF2C  F00A         	goto	u4790
  3664   001454                     u4791:
  3665   001454  EF34  F00A         	goto	l4945
  3666   001458                     u4790:
  3667   001458                     
  3668                           ; BSR set to: 0
  3669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3670   001458  0E00               	movlw	0
  3671   00145A  6F86               	movwf	efgtoa@l& (0+255),b
  3672   00145C  0E00               	movlw	0
  3673   00145E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3674   001460  0E00               	movlw	0
  3675   001462  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3676   001464  0E00               	movlw	0
  3677   001466  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3678   001468                     l4945:
  3679                           
  3680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3681   001468  C08D  F001         	movff	efgtoa@g,___fladd@b
  3682   00146C  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  3683   001470  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  3684   001474  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  3685   001478  C086  F005         	movff	efgtoa@l,___fladd@a
  3686   00147C  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3687   001480  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3688   001484  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3689   001488  EC16  F011         	call	___fladd	;wreg free
  3690   00148C  C001  F082         	movff	?___fladd,efgtoa@h
  3691   001490  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3692   001494  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3693   001498  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3694   00149C                     
  3695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3696   00149C  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3697   0014A0  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3698   0014A4  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3699   0014A8  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3700   0014AC  0E00               	movlw	0
  3701   0014AE  6E15               	movwf	___flmul@a^0,c
  3702   0014B0  0E00               	movlw	0
  3703   0014B2  6E16               	movwf	(___flmul@a+1)^0,c
  3704   0014B4  0E20               	movlw	32
  3705   0014B6  6E17               	movwf	(___flmul@a+2)^0,c
  3706   0014B8  0E41               	movlw	65
  3707   0014BA  6E18               	movwf	(___flmul@a+3)^0,c
  3708   0014BC  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3709   0014C0  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3710   0014C4  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3711   0014C8  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3712   0014CC  EC76  F013         	call	___flmul	;wreg free
  3713   0014D0  C011  F02E         	movff	?___flmul,___flge@ff2
  3714   0014D4  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  3715   0014D8  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  3716   0014DC  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  3717   0014E0  ECF9  F024         	call	___flge	;wreg free
  3718   0014E4  A0D8               	btfss	status,0,c
  3719   0014E6  EF77  F00A         	goto	u4801
  3720   0014EA  EF79  F00A         	goto	u4800
  3721   0014EE                     u4801:
  3722   0014EE  EFA2  F00A         	goto	l4957
  3723   0014F2                     u4800:
  3724   0014F2                     
  3725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3726   0014F2  0100               	movlb	0	; () banked
  3727   0014F4  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3728   0014F6  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3729   0014F8                     
  3730                           ; BSR set to: 0
  3731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3732   0014F8  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3733   0014FC  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3734   001500  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3735   001504  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3736   001508  0E00               	movlw	0
  3737   00150A  6E15               	movwf	___flmul@a^0,c
  3738   00150C  0E00               	movlw	0
  3739   00150E  6E16               	movwf	(___flmul@a+1)^0,c
  3740   001510  0E20               	movlw	32
  3741   001512  6E17               	movwf	(___flmul@a+2)^0,c
  3742   001514  0E41               	movlw	65
  3743   001516  6E18               	movwf	(___flmul@a+3)^0,c
  3744   001518  EC76  F013         	call	___flmul	;wreg free
  3745   00151C  C011  F07C         	movff	?___flmul,efgtoa@ou
  3746   001520  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3747   001524  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3748   001528  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3749   00152C                     
  3750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3751   00152C  0E66               	movlw	102
  3752   00152E  0100               	movlb	0	; () banked
  3753   001530  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3754   001532  A4D8               	btfss	status,2,c
  3755   001534  EF9E  F00A         	goto	u4811
  3756   001538  EFA0  F00A         	goto	u4810
  3757   00153C                     u4811:
  3758   00153C  EFA2  F00A         	goto	l4957
  3759   001540                     u4810:
  3760   001540                     
  3761                           ; BSR set to: 0
  3762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3763   001540  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3764   001542  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3765   001544                     l4957:
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3768   001544  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3769   001548  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3770   00154C  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3771   001550  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3772   001554                     
  3773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3774   001554  C078  F069         	movff	efgtoa@e,efgtoa@ne
  3775   001558  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  3776   00155C                     
  3777                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3778   00155C  0E00               	movlw	0
  3779   00155E  0100               	movlb	0	; () banked
  3780   001560  6F71               	movwf	efgtoa@pp& (0+255),b
  3781   001562                     
  3782                           ; BSR set to: 0
  3783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3784   001562  0E00               	movlw	0
  3785   001564  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  3786   001566  0E00               	movlw	0
  3787   001568  6F6D               	movwf	efgtoa@t& (0+255),b
  3788   00156A                     
  3789                           ; BSR set to: 0
  3790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3791   00156A  0E00               	movlw	0
  3792   00156C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3793   00156E  0E00               	movlw	0
  3794   001570  6F80               	movwf	efgtoa@i& (0+255),b
  3795                           
  3796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3797   001572  EFA0  F00B         	goto	l5007
  3798   001576                     l4967:
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3802   001576  C082  F032         	movff	efgtoa@h,___fldiv@b
  3803   00157A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3804   00157E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3805   001582  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3806   001586  C091  F036         	movff	efgtoa@u,___fldiv@a
  3807   00158A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3808   00158E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3809   001592  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3810   001596  EC8B  F015         	call	___fldiv	;wreg free
  3811   00159A  C032  F04B         	movff	?___fldiv,floorf@x
  3812   00159E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3813   0015A2  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3814   0015A6  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3815   0015AA  EC91  F01F         	call	_floorf	;wreg free
  3816   0015AE  C04B  F086         	movff	?_floorf,efgtoa@l
  3817   0015B2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3818   0015B6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3819   0015BA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3820                           
  3821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3822   0015BE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3823   0015C2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3824   0015C6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3825   0015CA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3826   0015CE  EC76  F024         	call	___fltol	;wreg free
  3827   0015D2  BE02               	btfsc	(?___fltol+1)^0,7,c
  3828   0015D4  EFF7  F00A         	goto	u4820
  3829   0015D8  5002               	movf	(?___fltol+1)^0,w,c
  3830   0015DA  E107               	bnz	u4821
  3831   0015DC  0E0A               	movlw	10
  3832   0015DE  5C01               	subwf	?___fltol^0,w,c
  3833   0015E0  B0D8               	btfsc	status,0,c
  3834   0015E2  EFF5  F00A         	goto	u4821
  3835   0015E6  EFF7  F00A         	goto	u4820
  3836   0015EA                     u4821:
  3837   0015EA  EF07  F00B         	goto	l4971
  3838   0015EE                     u4820:
  3839   0015EE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3840   0015F2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3841   0015F6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3842   0015FA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3843   0015FE  EC76  F024         	call	___fltol	;wreg free
  3844   001602  C001  F074         	movff	?___fltol,efgtoa@d
  3845   001606  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3846   00160A  EF0C  F00B         	goto	l1525
  3847   00160E                     l4971:
  3848   00160E  0E00               	movlw	0
  3849   001610  0100               	movlb	0	; () banked
  3850   001612  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  3851   001614  0E09               	movlw	9
  3852   001616  6F74               	movwf	efgtoa@d& (0+255),b
  3853   001618                     l1525:
  3854                           
  3855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3856   001618  0100               	movlb	0	; () banked
  3857   00161A  5171               	movf	efgtoa@pp& (0+255),w,b
  3858   00161C  A4D8               	btfss	status,2,c
  3859   00161E  EF13  F00B         	goto	u4831
  3860   001622  EF15  F00B         	goto	u4830
  3861   001626                     u4831:
  3862   001626  EF3D  F00B         	goto	l4991
  3863   00162A                     u4830:
  3864   00162A                     
  3865                           ; BSR set to: 0
  3866   00162A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3867   00162C  EF1C  F00B         	goto	u4840
  3868   001630  EF1A  F00B         	goto	u4841
  3869   001634                     u4841:
  3870   001634  EF3D  F00B         	goto	l4991
  3871   001638                     u4840:
  3872   001638                     
  3873                           ; BSR set to: 0
  3874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3875   001638  0EA0               	movlw	low _dbuf
  3876   00163A  258B               	addwf	efgtoa@n& (0+255),w,b
  3877   00163C  6ED9               	movwf	fsr2l,c
  3878   00163E  0E02               	movlw	high _dbuf
  3879   001640  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3880   001642  6EDA               	movwf	fsr2h,c
  3881   001644  0E2E               	movlw	46
  3882   001646  6EDF               	movwf	indf2,c
  3883   001648                     
  3884                           ; BSR set to: 0
  3885   001648  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3886   00164A  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3887   00164C                     
  3888                           ; BSR set to: 0
  3889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3890   00164C  077A               	decf	efgtoa@w& (0+255),f,b
  3891   00164E  A0D8               	btfss	status,0,c
  3892   001650  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3893   001652                     
  3894                           ; BSR set to: 0
  3895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3896   001652  0E01               	movlw	1
  3897   001654  6F71               	movwf	efgtoa@pp& (0+255),b
  3898   001656  EF3D  F00B         	goto	l4991
  3899   00165A                     l4983:
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3903   00165A  0EA0               	movlw	low _dbuf
  3904   00165C  258B               	addwf	efgtoa@n& (0+255),w,b
  3905   00165E  6ED9               	movwf	fsr2l,c
  3906   001660  0E02               	movlw	high _dbuf
  3907   001662  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3908   001664  6EDA               	movwf	fsr2h,c
  3909   001666  0E30               	movlw	48
  3910   001668  6EDF               	movwf	indf2,c
  3911   00166A                     
  3912                           ; BSR set to: 0
  3913   00166A  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3914   00166C  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3915   00166E                     
  3916                           ; BSR set to: 0
  3917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3918   00166E  077A               	decf	efgtoa@w& (0+255),f,b
  3919   001670  A0D8               	btfss	status,0,c
  3920   001672  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3921   001674                     
  3922                           ; BSR set to: 0
  3923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3924   001674  076D               	decf	efgtoa@t& (0+255),f,b
  3925   001676  A0D8               	btfss	status,0,c
  3926   001678  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  3927   00167A                     l4991:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3931   00167A  516D               	movf	efgtoa@t& (0+255),w,b
  3932   00167C  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3933   00167E  A4D8               	btfss	status,2,c
  3934   001680  EF44  F00B         	goto	u4851
  3935   001684  EF46  F00B         	goto	u4850
  3936   001688                     u4851:
  3937   001688  EF2D  F00B         	goto	l4983
  3938   00168C                     u4850:
  3939   00168C                     
  3940                           ; BSR set to: 0
  3941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3942   00168C  0EA0               	movlw	low _dbuf
  3943   00168E  258B               	addwf	efgtoa@n& (0+255),w,b
  3944   001690  6ED9               	movwf	fsr2l,c
  3945   001692  0E02               	movlw	high _dbuf
  3946   001694  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3947   001696  6EDA               	movwf	fsr2h,c
  3948   001698  5174               	movf	efgtoa@d& (0+255),w,b
  3949   00169A  0F30               	addlw	48
  3950   00169C  6EDF               	movwf	indf2,c
  3951   00169E                     
  3952                           ; BSR set to: 0
  3953   00169E  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3954   0016A0  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3955   0016A2                     
  3956                           ; BSR set to: 0
  3957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3958   0016A2  077A               	decf	efgtoa@w& (0+255),f,b
  3959   0016A4  A0D8               	btfss	status,0,c
  3960   0016A6  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3961   0016A8                     
  3962                           ; BSR set to: 0
  3963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3964   0016A8  C082  F02A         	movff	efgtoa@h,___flsub@b
  3965   0016AC  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3966   0016B0  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3967   0016B4  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3968   0016B8  C086  F015         	movff	efgtoa@l,___flmul@a
  3969   0016BC  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3970   0016C0  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3971   0016C4  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3972   0016C8  C091  F011         	movff	efgtoa@u,___flmul@b
  3973   0016CC  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3974   0016D0  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3975   0016D4  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3976   0016D8  EC76  F013         	call	___flmul	;wreg free
  3977   0016DC  C011  F02E         	movff	?___flmul,___flsub@a
  3978   0016E0  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3979   0016E4  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3980   0016E8  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3981   0016EC  EC47  F02E         	call	___flsub	;wreg free
  3982   0016F0  C02A  F082         	movff	?___flsub,efgtoa@h
  3983   0016F4  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3984   0016F8  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3985   0016FC  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3986   001700                     
  3987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3988   001700  C091  F032         	movff	efgtoa@u,___fldiv@b
  3989   001704  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3990   001708  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3991   00170C  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3992   001710  0E00               	movlw	0
  3993   001712  6E36               	movwf	___fldiv@a^0,c
  3994   001714  0E00               	movlw	0
  3995   001716  6E37               	movwf	(___fldiv@a+1)^0,c
  3996   001718  0E20               	movlw	32
  3997   00171A  6E38               	movwf	(___fldiv@a+2)^0,c
  3998   00171C  0E41               	movlw	65
  3999   00171E  6E39               	movwf	(___fldiv@a+3)^0,c
  4000   001720  EC8B  F015         	call	___fldiv	;wreg free
  4001   001724  C032  F091         	movff	?___fldiv,efgtoa@u
  4002   001728  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4003   00172C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4004   001730  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4005   001734                     
  4006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4007   001734  0100               	movlb	0	; () banked
  4008   001736  0769               	decf	efgtoa@ne& (0+255),f,b
  4009   001738  A0D8               	btfss	status,0,c
  4010   00173A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4011   00173C                     
  4012                           ; BSR set to: 0
  4013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4014   00173C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4015   00173E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4016   001740                     l5007:
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4020   001740  5176               	movf	efgtoa@m& (0+255),w,b
  4021   001742  5D80               	subwf	efgtoa@i& (0+255),w,b
  4022   001744  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4023   001746  0A80               	xorlw	128
  4024   001748  6F67               	movwf	??_efgtoa& (0+255),b
  4025   00174A  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4026   00174C  0A80               	xorlw	128
  4027   00174E  5967               	subwfb	??_efgtoa& (0+255),w,b
  4028   001750  B0D8               	btfsc	status,0,c
  4029   001752  EFAD  F00B         	goto	u4861
  4030   001756  EFAF  F00B         	goto	u4860
  4031   00175A                     u4861:
  4032   00175A  EFBD  F00B         	goto	l5011
  4033   00175E                     u4860:
  4034   00175E                     
  4035                           ; BSR set to: 0
  4036   00175E  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4037   001760  EFBB  F00B         	goto	u4871
  4038   001764  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4039   001766  E109               	bnz	u4870
  4040   001768  0E4B               	movlw	75
  4041   00176A  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4042   00176C  A0D8               	btfss	status,0,c
  4043   00176E  EFBB  F00B         	goto	u4871
  4044   001772  EFBD  F00B         	goto	u4870
  4045   001776                     u4871:
  4046   001776  EFBB  F00A         	goto	l4967
  4047   00177A                     u4870:
  4048   00177A                     l5011:
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4052   00177A  0E00               	movlw	0
  4053   00177C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4054   00177E  0E4F               	movlw	79
  4055   001780  6F80               	movwf	efgtoa@i& (0+255),b
  4056   001782                     
  4057                           ; BSR set to: 0
  4058                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4059   001782  0EA0               	movlw	low _dbuf
  4060   001784  2580               	addwf	efgtoa@i& (0+255),w,b
  4061   001786  6ED9               	movwf	fsr2l,c
  4062   001788  0E02               	movlw	high _dbuf
  4063   00178A  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4064   00178C  6EDA               	movwf	fsr2h,c
  4065   00178E  0E00               	movlw	0
  4066   001790  6EDF               	movwf	indf2,c
  4067   001792                     
  4068                           ; BSR set to: 0
  4069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4070   001792  0EA0               	movlw	low _dbuf
  4071   001794  6F67               	movwf	??_efgtoa& (0+255),b
  4072   001796  0E02               	movlw	high _dbuf
  4073   001798  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4074   00179A  518B               	movf	efgtoa@n& (0+255),w,b
  4075   00179C  5F67               	subwf	??_efgtoa& (0+255),f,b
  4076   00179E  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4077   0017A0  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4078   0017A2  5180               	movf	efgtoa@i& (0+255),w,b
  4079   0017A4  2567               	addwf	??_efgtoa& (0+255),w,b
  4080   0017A6  6E01               	movwf	memcpy@d1^0,c
  4081   0017A8  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4082   0017AA  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4083   0017AC  6E02               	movwf	(memcpy@d1+1)^0,c
  4084   0017AE  0EA0               	movlw	low _dbuf
  4085   0017B0  6E03               	movwf	memcpy@s1^0,c
  4086   0017B2  0E02               	movlw	high _dbuf
  4087   0017B4  6E04               	movwf	(memcpy@s1+1)^0,c
  4088   0017B6  C08B  F005         	movff	efgtoa@n,memcpy@n
  4089   0017BA  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4090   0017BE  EC31  F02D         	call	_memcpy	;wreg free
  4091   0017C2                     
  4092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4093   0017C2  0100               	movlb	0	; () banked
  4094   0017C4  518B               	movf	efgtoa@n& (0+255),w,b
  4095   0017C6  5D80               	subwf	efgtoa@i& (0+255),w,b
  4096   0017C8  6F8B               	movwf	efgtoa@n& (0+255),b
  4097   0017CA  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4098   0017CC  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4099   0017CE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4100   0017D0                     
  4101                           ; BSR set to: 0
  4102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4103   0017D0  518A               	movf	efgtoa@sign& (0+255),w,b
  4104   0017D2  A4D8               	btfss	status,2,c
  4105   0017D4  EFEE  F00B         	goto	u4881
  4106   0017D8  EFF1  F00B         	goto	u4880
  4107   0017DC                     u4881:
  4108   0017DC  0E01               	movlw	1
  4109   0017DE  EFF2  F00B         	goto	u4890
  4110   0017E2                     u4880:
  4111   0017E2  0E00               	movlw	0
  4112   0017E4                     u4890:
  4113   0017E4  6F80               	movwf	efgtoa@i& (0+255),b
  4114   0017E6  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4115   0017E8                     
  4116                           ; BSR set to: 0
  4117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4118   0017E8  518A               	movf	efgtoa@sign& (0+255),w,b
  4119   0017EA  B4D8               	btfsc	status,2,c
  4120   0017EC  EFFA  F00B         	goto	u4901
  4121   0017F0  EFFC  F00B         	goto	u4900
  4122   0017F4                     u4901:
  4123   0017F4  EF07  F00C         	goto	l5025
  4124   0017F8                     u4900:
  4125   0017F8                     
  4126                           ; BSR set to: 0
  4127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4128   0017F8  078B               	decf	efgtoa@n& (0+255),f,b
  4129   0017FA  A0D8               	btfss	status,0,c
  4130   0017FC  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4131   0017FE  0EA0               	movlw	low _dbuf
  4132   001800  258B               	addwf	efgtoa@n& (0+255),w,b
  4133   001802  6ED9               	movwf	fsr2l,c
  4134   001804  0E02               	movlw	high _dbuf
  4135   001806  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4136   001808  6EDA               	movwf	fsr2h,c
  4137   00180A  C08A  FFDF         	movff	efgtoa@sign,indf2
  4138   00180E                     l5025:
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4142   00180E  5180               	movf	efgtoa@i& (0+255),w,b
  4143   001810  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4144   001812  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4145   001814  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4146   001816                     
  4147                           ; BSR set to: 0
  4148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4149   001816  C060  F011         	movff	efgtoa@fp,pad@fp
  4150   00181A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4151   00181E  0EA0               	movlw	low _dbuf
  4152   001820  258B               	addwf	efgtoa@n& (0+255),w,b
  4153   001822  6E13               	movwf	pad@buf^0,c
  4154   001824  0E02               	movlw	high _dbuf
  4155   001826  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4156   001828  6E14               	movwf	(pad@buf+1)^0,c
  4157   00182A  C07A  F015         	movff	efgtoa@w,pad@p
  4158   00182E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4159   001832  EC7E  F029         	call	_pad	;wreg free
  4160   001836                     l1492:
  4161   001836  0012               	return		;funcret
  4162   001838                     __end_of_efgtoa:
  4163                           	callstack 0
  4164                           
  4165 ;; *************** function _strcpy *****************
  4166 ;; Defined at:
  4167 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4170 ;;		 -> dbuf(80), 
  4171 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4172 ;;		 -> STR_5(4), STR_2(4), 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  d               2    6[COMRAM] PTR unsigned char 
  4175 ;;		 -> dbuf(80), 
  4176 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4177 ;;		 -> STR_5(4), STR_2(4), 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  2    0[COMRAM] PTR unsigned char 
  4180 ;; Registers used:
  4181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4188 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4190 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4191 ;;Total ram usage:        8 bytes
  4192 ;; Hardware stack levels used: 1
  4193 ;; Hardware stack levels required when called: 1
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_efgtoa
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text6
  4202   005CD4                     __ptext6:
  4203                           	callstack 0
  4204   005CD4                     _strcpy:
  4205                           	callstack 25
  4206   005CD4  C003  F005         	movff	strcpy@src,strcpy@s
  4207   005CD8  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4208   005CDC  C001  F007         	movff	strcpy@dest,strcpy@d
  4209   005CE0  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4210   005CE4                     l4667:
  4211   005CE4  C005  FFF6         	movff	strcpy@s,tblptrl
  4212   005CE8  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4213   005CEC  4A05               	infsnz	strcpy@s^0,f,c
  4214   005CEE  2A06               	incf	(strcpy@s+1)^0,f,c
  4215   005CF0                     	if	0	;tblptru may be non-zero
  4216   005CF0                     	endif
  4217   005CF0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4218   005CF0  0E00               	movlw	low (__mediumconst shr (0+16))
  4219   005CF2  6EF8               	movwf	tblptru,c
  4220   005CF4                     	endif
  4221   005CF4  C007  FFD9         	movff	strcpy@d,fsr2l
  4222   005CF8  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4223   005CFC  4A07               	infsnz	strcpy@d^0,f,c
  4224   005CFE  2A08               	incf	(strcpy@d+1)^0,f,c
  4225   005D00  0008               	tblrd		*
  4226   005D02  CFF5 FFDF          	movff	tablat,indf2
  4227   005D06  50DF               	movf	indf2,w,c
  4228   005D08  A4D8               	btfss	status,2,c
  4229   005D0A  EF89  F02E         	goto	u4331
  4230   005D0E  EF8B  F02E         	goto	u4330
  4231   005D12                     u4331:
  4232   005D12  EF72  F02E         	goto	l4667
  4233   005D16                     u4330:
  4234   005D16  0012               	return		;funcret
  4235   005D18                     __end_of_strcpy:
  4236                           	callstack 0
  4237                           
  4238 ;; *************** function _memcpy *****************
  4239 ;; Defined at:
  4240 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  d1              2    0[COMRAM] PTR void 
  4243 ;;		 -> dbuf(80), 
  4244 ;;  s1              2    2[COMRAM] PTR const void 
  4245 ;;		 -> dbuf(80), 
  4246 ;;  n               2    4[COMRAM] unsigned int 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4249 ;;		 -> dbuf(80), 
  4250 ;;  d               2    6[COMRAM] PTR unsigned char 
  4251 ;;		 -> dbuf(80), 
  4252 ;;  tmp             1   10[COMRAM] unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  2    0[COMRAM] PTR void 
  4255 ;; Registers used:
  4256 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4262 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4265 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;Total ram usage:       11 bytes
  4267 ;; Hardware stack levels used: 1
  4268 ;; Hardware stack levels required when called: 1
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_efgtoa
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text7
  4277   005A62                     __ptext7:
  4278                           	callstack 0
  4279   005A62                     _memcpy:
  4280                           	callstack 25
  4281   005A62  C003  F009         	movff	memcpy@s1,memcpy@s
  4282   005A66  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4283   005A6A  C001  F007         	movff	memcpy@d1,memcpy@d
  4284   005A6E  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4285   005A72  EF4B  F02D         	goto	l4711
  4286   005A76                     l4703:
  4287   005A76  C009  FFD9         	movff	memcpy@s,fsr2l
  4288   005A7A  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4289   005A7E  50DF               	movf	indf2,w,c
  4290   005A80  6E0B               	movwf	memcpy@tmp^0,c
  4291   005A82  4A09               	infsnz	memcpy@s^0,f,c
  4292   005A84  2A0A               	incf	(memcpy@s+1)^0,f,c
  4293   005A86  C007  FFD9         	movff	memcpy@d,fsr2l
  4294   005A8A  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4295   005A8E  C00B  FFDF         	movff	memcpy@tmp,indf2
  4296   005A92  4A07               	infsnz	memcpy@d^0,f,c
  4297   005A94  2A08               	incf	(memcpy@d+1)^0,f,c
  4298   005A96                     l4711:
  4299   005A96  0605               	decf	memcpy@n^0,f,c
  4300   005A98  A0D8               	btfss	status,0,c
  4301   005A9A  0606               	decf	(memcpy@n+1)^0,f,c
  4302   005A9C  2805               	incf	memcpy@n^0,w,c
  4303   005A9E  E106               	bnz	u4451
  4304   005AA0  2806               	incf	(memcpy@n+1)^0,w,c
  4305   005AA2  A4D8               	btfss	status,2,c
  4306   005AA4  EF56  F02D         	goto	u4451
  4307   005AA8  EF58  F02D         	goto	u4450
  4308   005AAC                     u4451:
  4309   005AAC  EF3B  F02D         	goto	l4703
  4310   005AB0                     u4450:
  4311   005AB0  0012               	return		;funcret
  4312   005AB2                     __end_of_memcpy:
  4313                           	callstack 0
  4314                           
  4315 ;; *************** function _labs *****************
  4316 ;; Defined at:
  4317 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  a               4    0[COMRAM] long 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  4    0[COMRAM] long 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4333 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4334 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4335 ;;Total ram usage:        8 bytes
  4336 ;; Hardware stack levels used: 1
  4337 ;; Hardware stack levels required when called: 1
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		_efgtoa
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text8
  4346   00553C                     __ptext8:
  4347                           	callstack 0
  4348   00553C                     _labs:
  4349                           	callstack 25
  4350   00553C  BE04               	btfsc	(labs@a+3)^0,7,c
  4351   00553E  EFAD  F02A         	goto	u4340
  4352   005542  5004               	movf	(labs@a+3)^0,w,c
  4353   005544  1003               	iorwf	(labs@a+2)^0,w,c
  4354   005546  1002               	iorwf	(labs@a+1)^0,w,c
  4355   005548  E106               	bnz	u4341
  4356   00554A  0401               	decf	labs@a^0,w,c
  4357   00554C  B0D8               	btfsc	status,0,c
  4358   00554E  EFAB  F02A         	goto	u4341
  4359   005552  EFAD  F02A         	goto	u4340
  4360   005556                     u4341:
  4361   005556  EFC8  F02A         	goto	l1597
  4362   00555A                     u4340:
  4363   00555A  C001  F005         	movff	labs@a,??_labs
  4364   00555E  C002  F006         	movff	labs@a+1,??_labs+1
  4365   005562  C003  F007         	movff	labs@a+2,??_labs+2
  4366   005566  C004  F008         	movff	labs@a+3,??_labs+3
  4367   00556A  1E05               	comf	??_labs^0,f,c
  4368   00556C  1E06               	comf	(??_labs+1)^0,f,c
  4369   00556E  1E07               	comf	(??_labs+2)^0,f,c
  4370   005570  1E08               	comf	(??_labs+3)^0,f,c
  4371   005572  2A05               	incf	??_labs^0,f,c
  4372   005574  0E00               	movlw	0
  4373   005576  2206               	addwfc	(??_labs+1)^0,f,c
  4374   005578  2207               	addwfc	(??_labs+2)^0,f,c
  4375   00557A  2208               	addwfc	(??_labs+3)^0,f,c
  4376   00557C  C005  F001         	movff	??_labs,?_labs
  4377   005580  C006  F002         	movff	??_labs+1,?_labs+1
  4378   005584  C007  F003         	movff	??_labs+2,?_labs+2
  4379   005588  C008  F004         	movff	??_labs+3,?_labs+3
  4380   00558C  EFD0  F02A         	goto	l1600
  4381   005590                     l1597:
  4382   005590  C001  F001         	movff	labs@a,?_labs
  4383   005594  C002  F002         	movff	labs@a+1,?_labs+1
  4384   005598  C003  F003         	movff	labs@a+2,?_labs+2
  4385   00559C  C004  F004         	movff	labs@a+3,?_labs+3
  4386   0055A0                     l1600:
  4387   0055A0  0012               	return		;funcret
  4388   0055A2                     __end_of_labs:
  4389                           	callstack 0
  4390                           
  4391 ;; *************** function _floorf *****************
  4392 ;; Defined at:
  4393 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  x               4   74[COMRAM] float 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  u               4   90[COMRAM] struct .
  4398 ;;  m               4   84[COMRAM] unsigned long 
  4399 ;;  e               2   88[COMRAM] int 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  4   74[COMRAM] float 
  4402 ;; Registers used:
  4403 ;;		wreg, status,2, status,0
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4409 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4410 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4411 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4412 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4413 ;;Total ram usage:       20 bytes
  4414 ;; Hardware stack levels used: 1
  4415 ;; Hardware stack levels required when called: 1
  4416 ;; This function calls:
  4417 ;;		Nothing
  4418 ;; This function is called by:
  4419 ;;		_efgtoa
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           	psect	text9
  4424   003F22                     __ptext9:
  4425                           	callstack 0
  4426   003F22                     _floorf:
  4427                           	callstack 25
  4428   003F22  C0DF  F05B         	movff	floorf@F526,floorf@u
  4429   003F26  C0E0  F05C         	movff	floorf@F526+1,floorf@u+1
  4430   003F2A  C0E1  F05D         	movff	floorf@F526+2,floorf@u+2
  4431   003F2E  C0E2  F05E         	movff	floorf@F526+3,floorf@u+3
  4432   003F32  C04B  F05B         	movff	floorf@x,floorf@u
  4433   003F36  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4434   003F3A  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4435   003F3E  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4436   003F42  0E81               	movlw	129
  4437   003F44  6E4F               	movwf	??_floorf^0,c
  4438   003F46  0EFF               	movlw	255
  4439   003F48  6E50               	movwf	(??_floorf+1)^0,c
  4440   003F4A  C05B  F051         	movff	floorf@u,??_floorf+2
  4441   003F4E  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4442   003F52  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4443   003F56  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4444   003F5A  0E18               	movlw	24
  4445   003F5C  EFB5  F01F         	goto	u4350
  4446   003F60                     u4355:
  4447   003F60  90D8               	bcf	status,0,c
  4448   003F62  3254               	rrcf	(??_floorf+5)^0,f,c
  4449   003F64  3253               	rrcf	(??_floorf+4)^0,f,c
  4450   003F66  3252               	rrcf	(??_floorf+3)^0,f,c
  4451   003F68  3251               	rrcf	(??_floorf+2)^0,f,c
  4452   003F6A                     u4350:
  4453   003F6A  2EE8               	decfsz	wreg,f,c
  4454   003F6C  EFB0  F01F         	goto	u4355
  4455   003F70  5051               	movf	(??_floorf+2)^0,w,c
  4456   003F72  244F               	addwf	??_floorf^0,w,c
  4457   003F74  6E59               	movwf	floorf@e^0,c
  4458   003F76  0E00               	movlw	0
  4459   003F78  2050               	addwfc	(??_floorf+1)^0,w,c
  4460   003F7A  6E5A               	movwf	(floorf@e+1)^0,c
  4461   003F7C  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4462   003F7E  EFCA  F01F         	goto	u4361
  4463   003F82  505A               	movf	(floorf@e+1)^0,w,c
  4464   003F84  E109               	bnz	u4360
  4465   003F86  0E17               	movlw	23
  4466   003F88  5C59               	subwf	floorf@e^0,w,c
  4467   003F8A  A0D8               	btfss	status,0,c
  4468   003F8C  EFCA  F01F         	goto	u4361
  4469   003F90  EFCC  F01F         	goto	u4360
  4470   003F94                     u4361:
  4471   003F94  EFD6  F01F         	goto	l4679
  4472   003F98                     u4360:
  4473   003F98                     l4677:
  4474   003F98  C04B  F04B         	movff	floorf@x,?_floorf
  4475   003F9C  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4476   003FA0  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4477   003FA4  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4478   003FA8  EF99  F020         	goto	l1586
  4479   003FAC                     l4679:
  4480   003FAC  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4481   003FAE  EFDB  F01F         	goto	u4371
  4482   003FB2  EFDD  F01F         	goto	u4370
  4483   003FB6                     u4371:
  4484   003FB6  EF4D  F020         	goto	l4689
  4485   003FBA                     u4370:
  4486   003FBA  C059  F04F         	movff	floorf@e,??_floorf
  4487   003FBE  0EFF               	movlw	255
  4488   003FC0  6E50               	movwf	(??_floorf+1)^0,c
  4489   003FC2  0EFF               	movlw	255
  4490   003FC4  6E51               	movwf	(??_floorf+2)^0,c
  4491   003FC6  0E7F               	movlw	127
  4492   003FC8  6E52               	movwf	(??_floorf+3)^0,c
  4493   003FCA  0E00               	movlw	0
  4494   003FCC  6E53               	movwf	(??_floorf+4)^0,c
  4495   003FCE                     u4385:
  4496   003FCE  664F               	tstfsz	??_floorf^0,c
  4497   003FD0  EFEC  F01F         	goto	u4386
  4498   003FD4  EFF4  F01F         	goto	u4387
  4499   003FD8                     u4386:
  4500   003FD8  3453               	rlcf	(??_floorf+4)^0,w,c
  4501   003FDA  3253               	rrcf	(??_floorf+4)^0,f,c
  4502   003FDC  3252               	rrcf	(??_floorf+3)^0,f,c
  4503   003FDE  3251               	rrcf	(??_floorf+2)^0,f,c
  4504   003FE0  3250               	rrcf	(??_floorf+1)^0,f,c
  4505   003FE2  2E4F               	decfsz	??_floorf^0,f,c
  4506   003FE4  EFE7  F01F         	goto	u4385
  4507   003FE8                     u4387:
  4508   003FE8  C050  F055         	movff	??_floorf+1,floorf@m
  4509   003FEC  C051  F056         	movff	??_floorf+2,floorf@m+1
  4510   003FF0  C052  F057         	movff	??_floorf+3,floorf@m+2
  4511   003FF4  C053  F058         	movff	??_floorf+4,floorf@m+3
  4512   003FF8  5055               	movf	floorf@m^0,w,c
  4513   003FFA  145B               	andwf	floorf@u^0,w,c
  4514   003FFC  6E4F               	movwf	??_floorf^0,c
  4515   003FFE  5056               	movf	(floorf@m+1)^0,w,c
  4516   004000  145C               	andwf	(floorf@u+1)^0,w,c
  4517   004002  6E50               	movwf	(??_floorf+1)^0,c
  4518   004004  5057               	movf	(floorf@m+2)^0,w,c
  4519   004006  145D               	andwf	(floorf@u+2)^0,w,c
  4520   004008  6E51               	movwf	(??_floorf+2)^0,c
  4521   00400A  5058               	movf	(floorf@m+3)^0,w,c
  4522   00400C  145E               	andwf	(floorf@u+3)^0,w,c
  4523   00400E  6E52               	movwf	(??_floorf+3)^0,c
  4524   004010  504F               	movf	??_floorf^0,w,c
  4525   004012  1050               	iorwf	(??_floorf+1)^0,w,c
  4526   004014  1051               	iorwf	(??_floorf+2)^0,w,c
  4527   004016  1052               	iorwf	(??_floorf+3)^0,w,c
  4528   004018  A4D8               	btfss	status,2,c
  4529   00401A  EF11  F020         	goto	u4391
  4530   00401E  EF13  F020         	goto	u4390
  4531   004022                     u4391:
  4532   004022  EF15  F020         	goto	l4685
  4533   004026                     u4390:
  4534   004026  EFCC  F01F         	goto	l4677
  4535   00402A                     l4685:
  4536   00402A  C05B  F04F         	movff	floorf@u,??_floorf
  4537   00402E  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4538   004032  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4539   004036  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4540   00403A  0E20               	movlw	32
  4541   00403C  EF25  F020         	goto	u4400
  4542   004040                     u4405:
  4543   004040  90D8               	bcf	status,0,c
  4544   004042  3252               	rrcf	(??_floorf+3)^0,f,c
  4545   004044  3251               	rrcf	(??_floorf+2)^0,f,c
  4546   004046  3250               	rrcf	(??_floorf+1)^0,f,c
  4547   004048  324F               	rrcf	??_floorf^0,f,c
  4548   00404A                     u4400:
  4549   00404A  2EE8               	decfsz	wreg,f,c
  4550   00404C  EF20  F020         	goto	u4405
  4551   004050  504F               	movf	??_floorf^0,w,c
  4552   004052  1050               	iorwf	(??_floorf+1)^0,w,c
  4553   004054  1051               	iorwf	(??_floorf+2)^0,w,c
  4554   004056  1052               	iorwf	(??_floorf+3)^0,w,c
  4555   004058  B4D8               	btfsc	status,2,c
  4556   00405A  EF31  F020         	goto	u4411
  4557   00405E  EF33  F020         	goto	u4410
  4558   004062                     u4411:
  4559   004062  EF3B  F020         	goto	l1589
  4560   004066                     u4410:
  4561   004066  5055               	movf	floorf@m^0,w,c
  4562   004068  265B               	addwf	floorf@u^0,f,c
  4563   00406A  5056               	movf	(floorf@m+1)^0,w,c
  4564   00406C  225C               	addwfc	(floorf@u+1)^0,f,c
  4565   00406E  5057               	movf	(floorf@m+2)^0,w,c
  4566   004070  225D               	addwfc	(floorf@u+2)^0,f,c
  4567   004072  5058               	movf	(floorf@m+3)^0,w,c
  4568   004074  225E               	addwfc	(floorf@u+3)^0,f,c
  4569   004076                     l1589:
  4570   004076  1C55               	comf	floorf@m^0,w,c
  4571   004078  6E4F               	movwf	??_floorf^0,c
  4572   00407A  1C56               	comf	(floorf@m+1)^0,w,c
  4573   00407C  6E50               	movwf	(??_floorf+1)^0,c
  4574   00407E  1C57               	comf	(floorf@m+2)^0,w,c
  4575   004080  6E51               	movwf	(??_floorf+2)^0,c
  4576   004082  1C58               	comf	(floorf@m+3)^0,w,c
  4577   004084  6E52               	movwf	(??_floorf+3)^0,c
  4578   004086  504F               	movf	??_floorf^0,w,c
  4579   004088  165B               	andwf	floorf@u^0,f,c
  4580   00408A  5050               	movf	(??_floorf+1)^0,w,c
  4581   00408C  165C               	andwf	(floorf@u+1)^0,f,c
  4582   00408E  5051               	movf	(??_floorf+2)^0,w,c
  4583   004090  165D               	andwf	(floorf@u+2)^0,f,c
  4584   004092  5052               	movf	(??_floorf+3)^0,w,c
  4585   004094  165E               	andwf	(floorf@u+3)^0,f,c
  4586   004096  EF91  F020         	goto	l4697
  4587   00409A                     l4689:
  4588   00409A  C05B  F04F         	movff	floorf@u,??_floorf
  4589   00409E  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4590   0040A2  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4591   0040A6  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4592   0040AA  0E20               	movlw	32
  4593   0040AC  EF5D  F020         	goto	u4420
  4594   0040B0                     u4425:
  4595   0040B0  90D8               	bcf	status,0,c
  4596   0040B2  3252               	rrcf	(??_floorf+3)^0,f,c
  4597   0040B4  3251               	rrcf	(??_floorf+2)^0,f,c
  4598   0040B6  3250               	rrcf	(??_floorf+1)^0,f,c
  4599   0040B8  324F               	rrcf	??_floorf^0,f,c
  4600   0040BA                     u4420:
  4601   0040BA  2EE8               	decfsz	wreg,f,c
  4602   0040BC  EF58  F020         	goto	u4425
  4603   0040C0  504F               	movf	??_floorf^0,w,c
  4604   0040C2  1050               	iorwf	(??_floorf+1)^0,w,c
  4605   0040C4  1051               	iorwf	(??_floorf+2)^0,w,c
  4606   0040C6  1052               	iorwf	(??_floorf+3)^0,w,c
  4607   0040C8  A4D8               	btfss	status,2,c
  4608   0040CA  EF69  F020         	goto	u4431
  4609   0040CE  EF6B  F020         	goto	u4430
  4610   0040D2                     u4431:
  4611   0040D2  EF75  F020         	goto	l4693
  4612   0040D6                     u4430:
  4613   0040D6  0E00               	movlw	0
  4614   0040D8  6E5B               	movwf	floorf@u^0,c
  4615   0040DA  0E00               	movlw	0
  4616   0040DC  6E5C               	movwf	(floorf@u+1)^0,c
  4617   0040DE  0E00               	movlw	0
  4618   0040E0  6E5D               	movwf	(floorf@u+2)^0,c
  4619   0040E2  0E00               	movlw	0
  4620   0040E4  6E5E               	movwf	(floorf@u+3)^0,c
  4621   0040E6  EF91  F020         	goto	l4697
  4622   0040EA                     l4693:
  4623   0040EA  90D8               	bcf	status,0,c
  4624   0040EC  345B               	rlcf	floorf@u^0,w,c
  4625   0040EE  6E4F               	movwf	??_floorf^0,c
  4626   0040F0  345C               	rlcf	(floorf@u+1)^0,w,c
  4627   0040F2  6E50               	movwf	(??_floorf+1)^0,c
  4628   0040F4  345D               	rlcf	(floorf@u+2)^0,w,c
  4629   0040F6  6E51               	movwf	(??_floorf+2)^0,c
  4630   0040F8  345E               	rlcf	(floorf@u+3)^0,w,c
  4631   0040FA  6E52               	movwf	(??_floorf+3)^0,c
  4632   0040FC  504F               	movf	??_floorf^0,w,c
  4633   0040FE  1050               	iorwf	(??_floorf+1)^0,w,c
  4634   004100  1051               	iorwf	(??_floorf+2)^0,w,c
  4635   004102  1052               	iorwf	(??_floorf+3)^0,w,c
  4636   004104  B4D8               	btfsc	status,2,c
  4637   004106  EF87  F020         	goto	u4441
  4638   00410A  EF89  F020         	goto	u4440
  4639   00410E                     u4441:
  4640   00410E  EF91  F020         	goto	l4697
  4641   004112                     u4440:
  4642   004112  0E00               	movlw	0
  4643   004114  6E5B               	movwf	floorf@u^0,c
  4644   004116  0E00               	movlw	0
  4645   004118  6E5C               	movwf	(floorf@u+1)^0,c
  4646   00411A  0E80               	movlw	128
  4647   00411C  6E5D               	movwf	(floorf@u+2)^0,c
  4648   00411E  0EBF               	movlw	191
  4649   004120  6E5E               	movwf	(floorf@u+3)^0,c
  4650   004122                     l4697:
  4651   004122  C05B  F04B         	movff	floorf@u,?_floorf
  4652   004126  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  4653   00412A  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  4654   00412E  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  4655   004132                     l1586:
  4656   004132  0012               	return		;funcret
  4657   004134                     __end_of_floorf:
  4658                           	callstack 0
  4659                           
  4660 ;; *************** function ___fpclassifyf *****************
  4661 ;; Defined at:
  4662 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;  x               4    0[COMRAM] float 
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  u               4   10[COMRAM] struct .
  4667 ;;  e               2    8[COMRAM] int 
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  2    0[COMRAM] int 
  4670 ;; Registers used:
  4671 ;;		wreg, status,2, status,0
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4677 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4678 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4679 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4680 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;Total ram usage:       14 bytes
  4682 ;; Hardware stack levels used: 1
  4683 ;; Hardware stack levels required when called: 1
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_efgtoa
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text10
  4692   004AF6                     __ptext10:
  4693                           	callstack 0
  4694   004AF6                     ___fpclassifyf:
  4695                           	callstack 25
  4696   004AF6  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4697   004AFA  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4698   004AFE  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4699   004B02  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4700   004B06  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4701   004B0A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4702   004B0E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4703   004B12  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4704   004B16  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4705   004B1A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4706   004B1E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4707   004B22  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4708   004B26  0E18               	movlw	24
  4709   004B28  EF9B  F025         	goto	u4260
  4710   004B2C                     u4265:
  4711   004B2C  90D8               	bcf	status,0,c
  4712   004B2E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4713   004B30  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4714   004B32  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4715   004B34  3205               	rrcf	??___fpclassifyf^0,f,c
  4716   004B36                     u4260:
  4717   004B36  2EE8               	decfsz	wreg,f,c
  4718   004B38  EF96  F025         	goto	u4265
  4719   004B3C  5005               	movf	??___fpclassifyf^0,w,c
  4720   004B3E  6E09               	movwf	___fpclassifyf@e^0,c
  4721   004B40  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4722   004B42  5009               	movf	___fpclassifyf@e^0,w,c
  4723   004B44  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4724   004B46  A4D8               	btfss	status,2,c
  4725   004B48  EFA8  F025         	goto	u4271
  4726   004B4C  EFAA  F025         	goto	u4270
  4727   004B50                     u4271:
  4728   004B50  EFCA  F025         	goto	l4655
  4729   004B54                     u4270:
  4730   004B54  90D8               	bcf	status,0,c
  4731   004B56  340B               	rlcf	___fpclassifyf@u^0,w,c
  4732   004B58  6E05               	movwf	??___fpclassifyf^0,c
  4733   004B5A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4734   004B5C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4735   004B5E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4736   004B60  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4737   004B62  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4738   004B64  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4739   004B66  5005               	movf	??___fpclassifyf^0,w,c
  4740   004B68  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4741   004B6A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4742   004B6C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4743   004B6E  A4D8               	btfss	status,2,c
  4744   004B70  EFBC  F025         	goto	u4281
  4745   004B74  EFBE  F025         	goto	u4280
  4746   004B78                     u4281:
  4747   004B78  EFC4  F025         	goto	l4651
  4748   004B7C                     u4280:
  4749   004B7C  0E00               	movlw	0
  4750   004B7E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4751   004B80  0E02               	movlw	2
  4752   004B82  6E01               	movwf	?___fpclassifyf^0,c
  4753   004B84  EFF9  F025         	goto	l1572
  4754   004B88                     l4651:
  4755   004B88  0E00               	movlw	0
  4756   004B8A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4757   004B8C  0E03               	movlw	3
  4758   004B8E  6E01               	movwf	?___fpclassifyf^0,c
  4759   004B90  EFF9  F025         	goto	l1572
  4760   004B94                     l4655:
  4761   004B94  2809               	incf	___fpclassifyf@e^0,w,c
  4762   004B96  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4763   004B98  A4D8               	btfss	status,2,c
  4764   004B9A  EFD1  F025         	goto	u4291
  4765   004B9E  EFD3  F025         	goto	u4290
  4766   004BA2                     u4291:
  4767   004BA2  EFF5  F025         	goto	l4661
  4768   004BA6                     u4290:
  4769   004BA6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4770   004BAA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4771   004BAE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4772   004BB2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4773   004BB6  0E09               	movlw	9
  4774   004BB8                     u4305:
  4775   004BB8  90D8               	bcf	status,0,c
  4776   004BBA  3605               	rlcf	??___fpclassifyf^0,f,c
  4777   004BBC  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4778   004BBE  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4779   004BC0  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4780   004BC2  2EE8               	decfsz	wreg,f,c
  4781   004BC4  EFDC  F025         	goto	u4305
  4782   004BC8  5005               	movf	??___fpclassifyf^0,w,c
  4783   004BCA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4784   004BCC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4785   004BCE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4786   004BD0  B4D8               	btfsc	status,2,c
  4787   004BD2  EFED  F025         	goto	u4311
  4788   004BD6  EFF0  F025         	goto	u4310
  4789   004BDA                     u4311:
  4790   004BDA  0E01               	movlw	1
  4791   004BDC  EFF1  F025         	goto	u4320
  4792   004BE0                     u4310:
  4793   004BE0  0E00               	movlw	0
  4794   004BE2                     u4320:
  4795   004BE2  6E01               	movwf	?___fpclassifyf^0,c
  4796   004BE4  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4797   004BE6  EFF9  F025         	goto	l1572
  4798   004BEA                     l4661:
  4799   004BEA  0E00               	movlw	0
  4800   004BEC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4801   004BEE  0E04               	movlw	4
  4802   004BF0  6E01               	movwf	?___fpclassifyf^0,c
  4803   004BF2                     l1572:
  4804   004BF2  0012               	return		;funcret
  4805   004BF4                     __end_of___fpclassifyf:
  4806                           	callstack 0
  4807                           
  4808 ;; *************** function ___fltol *****************
  4809 ;; Defined at:
  4810 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  f1              4    0[COMRAM] int 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  exp1            1    9[COMRAM] unsigned char 
  4815 ;;  sign1           1    8[COMRAM] unsigned char 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  4    0[COMRAM] long 
  4818 ;; Registers used:
  4819 ;;		wreg, status,2, status,0
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4827 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4828 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4829 ;;Total ram usage:       10 bytes
  4830 ;; Hardware stack levels used: 1
  4831 ;; Hardware stack levels required when called: 1
  4832 ;; This function calls:
  4833 ;;		Nothing
  4834 ;; This function is called by:
  4835 ;;		_reverseOneBlock
  4836 ;;		_ForwardOneBlock
  4837 ;;		_Forwardhalfblock
  4838 ;;		_Backhalfblock
  4839 ;;		_efgtoa
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           	psect	text11
  4844   0048EC                     __ptext11:
  4845                           	callstack 0
  4846   0048EC                     ___fltol:
  4847                           	callstack 25
  4848   0048EC  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4849   0048EE  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4850   0048F0  6E0A               	movwf	___fltol@exp1^0,c
  4851   0048F2  500A               	movf	___fltol@exp1^0,w,c
  4852   0048F4  A4D8               	btfss	status,2,c
  4853   0048F6  EF7F  F024         	goto	u4161
  4854   0048FA  EF81  F024         	goto	u4160
  4855   0048FE                     u4161:
  4856   0048FE  EF8B  F024         	goto	l4587
  4857   004902                     u4160:
  4858   004902                     l4583:
  4859   004902  0E00               	movlw	0
  4860   004904  6E01               	movwf	?___fltol^0,c
  4861   004906  0E00               	movlw	0
  4862   004908  6E02               	movwf	(?___fltol+1)^0,c
  4863   00490A  0E00               	movlw	0
  4864   00490C  6E03               	movwf	(?___fltol+2)^0,c
  4865   00490E  0E00               	movlw	0
  4866   004910  6E04               	movwf	(?___fltol+3)^0,c
  4867   004912  EFF8  F024         	goto	l1045
  4868   004916                     l4587:
  4869   004916  C001  F005         	movff	___fltol@f1,??___fltol
  4870   00491A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4871   00491E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4872   004922  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4873   004926  0E20               	movlw	32
  4874   004928  EF9B  F024         	goto	u4170
  4875   00492C                     u4175:
  4876   00492C  90D8               	bcf	status,0,c
  4877   00492E  3208               	rrcf	(??___fltol+3)^0,f,c
  4878   004930  3207               	rrcf	(??___fltol+2)^0,f,c
  4879   004932  3206               	rrcf	(??___fltol+1)^0,f,c
  4880   004934  3205               	rrcf	??___fltol^0,f,c
  4881   004936                     u4170:
  4882   004936  2EE8               	decfsz	wreg,f,c
  4883   004938  EF96  F024         	goto	u4175
  4884   00493C  5005               	movf	??___fltol^0,w,c
  4885   00493E  6E09               	movwf	___fltol@sign1^0,c
  4886   004940  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4887   004942  0EFF               	movlw	255
  4888   004944  1601               	andwf	___fltol@f1^0,f,c
  4889   004946  0EFF               	movlw	255
  4890   004948  1602               	andwf	(___fltol@f1+1)^0,f,c
  4891   00494A  0EFF               	movlw	255
  4892   00494C  1603               	andwf	(___fltol@f1+2)^0,f,c
  4893   00494E  0E00               	movlw	0
  4894   004950  1604               	andwf	(___fltol@f1+3)^0,f,c
  4895   004952  0E96               	movlw	150
  4896   004954  5E0A               	subwf	___fltol@exp1^0,f,c
  4897   004956  BE0A               	btfsc	___fltol@exp1^0,7,c
  4898   004958  EFB2  F024         	goto	u4180
  4899   00495C  EFB0  F024         	goto	u4181
  4900   004960                     u4181:
  4901   004960  EFC8  F024         	goto	l4607
  4902   004964                     u4180:
  4903   004964  500A               	movf	___fltol@exp1^0,w,c
  4904   004966  0A80               	xorlw	128
  4905   004968  0F97               	addlw	151
  4906   00496A  B0D8               	btfsc	status,0,c
  4907   00496C  EFBA  F024         	goto	u4191
  4908   004970  EFBC  F024         	goto	u4190
  4909   004974                     u4191:
  4910   004974  EFBE  F024         	goto	l4603
  4911   004978                     u4190:
  4912   004978  EF81  F024         	goto	l4583
  4913   00497C                     l4603:
  4914   00497C  90D8               	bcf	status,0,c
  4915   00497E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4916   004980  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4917   004982  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4918   004984  3201               	rrcf	___fltol@f1^0,f,c
  4919   004986  3E0A               	incfsz	___fltol@exp1^0,f,c
  4920   004988  EFBE  F024         	goto	l4603
  4921   00498C  EFE0  F024         	goto	l4617
  4922   004990                     l4607:
  4923   004990  0E1F               	movlw	31
  4924   004992  640A               	cpfsgt	___fltol@exp1^0,c
  4925   004994  EFCE  F024         	goto	u4201
  4926   004998  EFD0  F024         	goto	u4200
  4927   00499C                     u4201:
  4928   00499C  EFD8  F024         	goto	l4615
  4929   0049A0                     u4200:
  4930   0049A0  EF81  F024         	goto	l4583
  4931   0049A4                     l4613:
  4932   0049A4  90D8               	bcf	status,0,c
  4933   0049A6  3601               	rlcf	___fltol@f1^0,f,c
  4934   0049A8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4935   0049AA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4936   0049AC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4937   0049AE  060A               	decf	___fltol@exp1^0,f,c
  4938   0049B0                     l4615:
  4939   0049B0  500A               	movf	___fltol@exp1^0,w,c
  4940   0049B2  A4D8               	btfss	status,2,c
  4941   0049B4  EFDE  F024         	goto	u4211
  4942   0049B8  EFE0  F024         	goto	u4210
  4943   0049BC                     u4211:
  4944   0049BC  EFD2  F024         	goto	l4613
  4945   0049C0                     u4210:
  4946   0049C0                     l4617:
  4947   0049C0  5009               	movf	___fltol@sign1^0,w,c
  4948   0049C2  B4D8               	btfsc	status,2,c
  4949   0049C4  EFE6  F024         	goto	u4221
  4950   0049C8  EFE8  F024         	goto	u4220
  4951   0049CC                     u4221:
  4952   0049CC  EFF0  F024         	goto	l4621
  4953   0049D0                     u4220:
  4954   0049D0  1E04               	comf	(___fltol@f1+3)^0,f,c
  4955   0049D2  1E03               	comf	(___fltol@f1+2)^0,f,c
  4956   0049D4  1E02               	comf	(___fltol@f1+1)^0,f,c
  4957   0049D6  6C01               	negf	___fltol@f1^0,c
  4958   0049D8  0E00               	movlw	0
  4959   0049DA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4960   0049DC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4961   0049DE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4962   0049E0                     l4621:
  4963   0049E0  C001  F001         	movff	___fltol@f1,?___fltol
  4964   0049E4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4965   0049E8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4966   0049EC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4967   0049F0                     l1045:
  4968   0049F0  0012               	return		;funcret
  4969   0049F2                     __end_of___fltol:
  4970                           	callstack 0
  4971                           
  4972 ;; *************** function ___flneg *****************
  4973 ;; Defined at:
  4974 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  f1              4    0[COMRAM] long 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;		None
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  4    0[COMRAM] long 
  4981 ;; Registers used:
  4982 ;;		wreg, status,2, status,0
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4988 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4991 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4992 ;;Total ram usage:        4 bytes
  4993 ;; Hardware stack levels used: 1
  4994 ;; Hardware stack levels required when called: 1
  4995 ;; This function calls:
  4996 ;;		Nothing
  4997 ;; This function is called by:
  4998 ;;		_efgtoa
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           	psect	text12
  5003   005E5A                     __ptext12:
  5004                           	callstack 0
  5005   005E5A                     ___flneg:
  5006                           	callstack 25
  5007   005E5A  5001               	movf	___flneg@f1^0,w,c
  5008   005E5C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5009   005E5E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5010   005E60  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5011   005E62  B4D8               	btfsc	status,2,c
  5012   005E64  EF36  F02F         	goto	u4151
  5013   005E68  EF38  F02F         	goto	u4150
  5014   005E6C                     u4151:
  5015   005E6C  EF40  F02F         	goto	l4577
  5016   005E70                     u4150:
  5017   005E70  0E00               	movlw	0
  5018   005E72  1A01               	xorwf	___flneg@f1^0,f,c
  5019   005E74  0E00               	movlw	0
  5020   005E76  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5021   005E78  0E00               	movlw	0
  5022   005E7A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5023   005E7C  0E80               	movlw	128
  5024   005E7E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5025   005E80                     l4577:
  5026   005E80  C001  F001         	movff	___flneg@f1,?___flneg
  5027   005E84  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5028   005E88  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5029   005E8C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5030   005E90  0012               	return		;funcret
  5031   005E92                     __end_of___flneg:
  5032                           	callstack 0
  5033                           
  5034 ;; *************** function _dtoa *****************
  5035 ;; Defined at:
  5036 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5039 ;;		 -> sprintf@f(11), 
  5040 ;;  d               8   29[COMRAM] long long 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  n               8   51[COMRAM] long long 
  5043 ;;  i               2   59[COMRAM] int 
  5044 ;;  w               2   49[COMRAM] int 
  5045 ;;  p               2   47[COMRAM] int 
  5046 ;;  s               1   61[COMRAM] unsigned char 
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  1    wreg      void 
  5049 ;; Registers used:
  5050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5056 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5057 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5058 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5059 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5060 ;;Total ram usage:       35 bytes
  5061 ;; Hardware stack levels used: 1
  5062 ;; Hardware stack levels required when called: 5
  5063 ;; This function calls:
  5064 ;;		___aodiv
  5065 ;;		___aomod
  5066 ;;		_abs
  5067 ;;		_pad
  5068 ;; This function is called by:
  5069 ;;		_vfpfcnvrt
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           	psect	text13
  5074   0037D8                     __ptext13:
  5075                           	callstack 0
  5076   0037D8                     _dtoa:
  5077                           	callstack 22
  5078   0037D8                     
  5079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5080   0037D8  C01E  F034         	movff	dtoa@d,dtoa@n
  5081   0037DC  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5082   0037E0  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5083   0037E4  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5084   0037E8  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5085   0037EC  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5086   0037F0  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5087   0037F4  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5088   0037F8                     
  5089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5090   0037F8  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5091   0037FA  EF01  F01C         	goto	u4491
  5092   0037FE  EF04  F01C         	goto	u4490
  5093   003802                     u4491:
  5094   003802  0E01               	movlw	1
  5095   003804  EF05  F01C         	goto	u4500
  5096   003808                     u4490:
  5097   003808  0E00               	movlw	0
  5098   00380A                     u4500:
  5099   00380A  6E3E               	movwf	dtoa@s^0,c
  5100   00380C                     
  5101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5102   00380C  503E               	movf	dtoa@s^0,w,c
  5103   00380E  B4D8               	btfsc	status,2,c
  5104   003810  EF0C  F01C         	goto	u4511
  5105   003814  EF0E  F01C         	goto	u4510
  5106   003818                     u4511:
  5107   003818  EF1E  F01C         	goto	l4765
  5108   00381C                     u4510:
  5109   00381C                     
  5110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5111   00381C  1E3B               	comf	(dtoa@n+7)^0,f,c
  5112   00381E  1E3A               	comf	(dtoa@n+6)^0,f,c
  5113   003820  1E39               	comf	(dtoa@n+5)^0,f,c
  5114   003822  1E38               	comf	(dtoa@n+4)^0,f,c
  5115   003824  1E37               	comf	(dtoa@n+3)^0,f,c
  5116   003826  1E36               	comf	(dtoa@n+2)^0,f,c
  5117   003828  1E35               	comf	(dtoa@n+1)^0,f,c
  5118   00382A  6C34               	negf	dtoa@n^0,c
  5119   00382C  0E00               	movlw	0
  5120   00382E  2235               	addwfc	(dtoa@n+1)^0,f,c
  5121   003830  2236               	addwfc	(dtoa@n+2)^0,f,c
  5122   003832  2237               	addwfc	(dtoa@n+3)^0,f,c
  5123   003834  2238               	addwfc	(dtoa@n+4)^0,f,c
  5124   003836  2239               	addwfc	(dtoa@n+5)^0,f,c
  5125   003838  223A               	addwfc	(dtoa@n+6)^0,f,c
  5126   00383A  223B               	addwfc	(dtoa@n+7)^0,f,c
  5127   00383C                     l4765:
  5128                           
  5129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5130   00383C  0100               	movlb	0	; () banked
  5131   00383E  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  5132   003840  EF2C  F01C         	goto	u4520
  5133   003844  51EA               	movf	(_prec+1)& (0+255),w,b
  5134   003846  E106               	bnz	u4521
  5135   003848  05E9               	decf	_prec& (0+255),w,b
  5136   00384A  B0D8               	btfsc	status,0,c
  5137   00384C  EF2A  F01C         	goto	u4521
  5138   003850  EF2C  F01C         	goto	u4520
  5139   003854                     u4521:
  5140   003854  EF32  F01C         	goto	l1467
  5141   003858                     u4520:
  5142   003858                     
  5143                           ; BSR set to: 0
  5144   003858  0E00               	movlw	0
  5145   00385A  6E31               	movwf	(dtoa@p+1)^0,c
  5146   00385C  0E01               	movlw	1
  5147   00385E  6E30               	movwf	dtoa@p^0,c
  5148   003860  EF36  F01C         	goto	l1469
  5149   003864                     l1467:
  5150                           
  5151                           ; BSR set to: 0
  5152   003864  C0E9  F030         	movff	_prec,dtoa@p
  5153   003868  C0EA  F031         	movff	_prec+1,dtoa@p+1
  5154   00386C                     l1469:
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5158   00386C  C0E7  F032         	movff	_width,dtoa@w
  5159   003870  C0E8  F033         	movff	_width+1,dtoa@w+1
  5160   003874                     
  5161                           ; BSR set to: 0
  5162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5163   003874  503E               	movf	dtoa@s^0,w,c
  5164   003876  B4D8               	btfsc	status,2,c
  5165   003878  EF40  F01C         	goto	u4531
  5166   00387C  EF42  F01C         	goto	u4530
  5167   003880                     u4531:
  5168   003880  EF59  F01C         	goto	l1470
  5169   003884                     u4530:
  5170   003884                     
  5171                           ; BSR set to: 0
  5172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5173   003884  0632               	decf	dtoa@w^0,f,c
  5174   003886  A0D8               	btfss	status,0,c
  5175   003888  0633               	decf	(dtoa@w+1)^0,f,c
  5176   00388A                     
  5177                           ; BSR set to: 0
  5178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5179   00388A  503E               	movf	dtoa@s^0,w,c
  5180   00388C  A4D8               	btfss	status,2,c
  5181   00388E  EF4B  F01C         	goto	u4541
  5182   003892  EF4D  F01C         	goto	u4540
  5183   003896                     u4541:
  5184   003896  EF53  F01C         	goto	l4777
  5185   00389A                     u4540:
  5186   00389A                     
  5187                           ; BSR set to: 0
  5188   00389A  0E00               	movlw	0
  5189   00389C  6E2F               	movwf	(_dtoa$2863+1)^0,c
  5190   00389E  0E2B               	movlw	43
  5191   0038A0  6E2E               	movwf	_dtoa$2863^0,c
  5192   0038A2  EF57  F01C         	goto	l4779
  5193   0038A6                     l4777:
  5194                           
  5195                           ; BSR set to: 0
  5196   0038A6  0E00               	movlw	0
  5197   0038A8  6E2F               	movwf	(_dtoa$2863+1)^0,c
  5198   0038AA  0E2D               	movlw	45
  5199   0038AC  6E2E               	movwf	_dtoa$2863^0,c
  5200   0038AE                     l4779:
  5201                           
  5202                           ; BSR set to: 0
  5203   0038AE  C02E  F03E         	movff	_dtoa$2863,dtoa@s
  5204   0038B2                     l1470:
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5208   0038B2  0E00               	movlw	0
  5209   0038B4  6E3D               	movwf	(dtoa@i+1)^0,c
  5210   0038B6  0E4F               	movlw	79
  5211   0038B8  6E3C               	movwf	dtoa@i^0,c
  5212   0038BA                     
  5213                           ; BSR set to: 0
  5214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5215   0038BA  0E00               	movlw	0
  5216   0038BC  0102               	movlb	2	; () banked
  5217   0038BE  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5218                           
  5219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5220   0038C0  EFDE  F01C         	goto	l4793
  5221   0038C4                     l4783:
  5222                           
  5223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5224   0038C4  063C               	decf	dtoa@i^0,f,c
  5225   0038C6  A0D8               	btfss	status,0,c
  5226   0038C8  063D               	decf	(dtoa@i+1)^0,f,c
  5227   0038CA                     
  5228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5229   0038CA  0EA0               	movlw	low _dbuf
  5230   0038CC  243C               	addwf	dtoa@i^0,w,c
  5231   0038CE  6ED9               	movwf	fsr2l,c
  5232   0038D0  0E02               	movlw	high _dbuf
  5233   0038D2  203D               	addwfc	(dtoa@i+1)^0,w,c
  5234   0038D4  6EDA               	movwf	fsr2h,c
  5235   0038D6  C034  F001         	movff	dtoa@n,___aomod@dividend
  5236   0038DA  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5237   0038DE  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5238   0038E2  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5239   0038E6  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5240   0038EA  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5241   0038EE  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5242   0038F2  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5243   0038F6  0E0A               	movlw	10
  5244   0038F8  6E09               	movwf	___aomod@divisor^0,c
  5245   0038FA  0E00               	movlw	0
  5246   0038FC  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5247   0038FE  0E00               	movlw	0
  5248   003900  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5249   003902  0E00               	movlw	0
  5250   003904  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5251   003906  0E00               	movlw	0
  5252   003908  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5253   00390A  0E00               	movlw	0
  5254   00390C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5255   00390E  0E00               	movlw	0
  5256   003910  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5257   003912  0E00               	movlw	0
  5258   003914  6E10               	movwf	(___aomod@divisor+7)^0,c
  5259   003916  ECC4  F023         	call	___aomod	;wreg free
  5260   00391A  C001  F026         	movff	?___aomod,??_dtoa
  5261   00391E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5262   003922  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5263   003926  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5264   00392A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5265   00392E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5266   003932  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5267   003936  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5268   00393A  C026  F013         	movff	??_dtoa,abs@a
  5269   00393E  C027  F014         	movff	??_dtoa+1,abs@a+1
  5270   003942  ECCF  F02E         	call	_abs	;wreg free
  5271   003946  5013               	movf	?_abs^0,w,c
  5272   003948  0F30               	addlw	48
  5273   00394A  6EDF               	movwf	indf2,c
  5274   00394C                     
  5275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5276   00394C  0630               	decf	dtoa@p^0,f,c
  5277   00394E  A0D8               	btfss	status,0,c
  5278   003950  0631               	decf	(dtoa@p+1)^0,f,c
  5279   003952                     
  5280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5281   003952  0632               	decf	dtoa@w^0,f,c
  5282   003954  A0D8               	btfss	status,0,c
  5283   003956  0633               	decf	(dtoa@w+1)^0,f,c
  5284   003958                     
  5285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5286   003958  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5287   00395C  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5288   003960  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5289   003964  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5290   003968  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5291   00396C  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5292   003970  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5293   003974  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5294   003978  0E0A               	movlw	10
  5295   00397A  6E09               	movwf	___aodiv@divisor^0,c
  5296   00397C  0E00               	movlw	0
  5297   00397E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5298   003980  0E00               	movlw	0
  5299   003982  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5300   003984  0E00               	movlw	0
  5301   003986  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5302   003988  0E00               	movlw	0
  5303   00398A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5304   00398C  0E00               	movlw	0
  5305   00398E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5306   003990  0E00               	movlw	0
  5307   003992  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5308   003994  0E00               	movlw	0
  5309   003996  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5310   003998  EC4A  F022         	call	___aodiv	;wreg free
  5311   00399C  C001  F034         	movff	?___aodiv,dtoa@n
  5312   0039A0  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5313   0039A4  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5314   0039A8  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5315   0039AC  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5316   0039B0  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5317   0039B4  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5318   0039B8  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5319   0039BC                     l4793:
  5320                           
  5321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5322   0039BC  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5323   0039BE  EFE9  F01C         	goto	u4551
  5324   0039C2  503D               	movf	(dtoa@i+1)^0,w,c
  5325   0039C4  E108               	bnz	u4550
  5326   0039C6  043C               	decf	dtoa@i^0,w,c
  5327   0039C8  A0D8               	btfss	status,0,c
  5328   0039CA  EFE9  F01C         	goto	u4551
  5329   0039CE  EFEB  F01C         	goto	u4550
  5330   0039D2                     u4551:
  5331   0039D2  EF07  F01D         	goto	l4799
  5332   0039D6                     u4550:
  5333   0039D6  5034               	movf	dtoa@n^0,w,c
  5334   0039D8  1035               	iorwf	(dtoa@n+1)^0,w,c
  5335   0039DA  1036               	iorwf	(dtoa@n+2)^0,w,c
  5336   0039DC  1037               	iorwf	(dtoa@n+3)^0,w,c
  5337   0039DE  1038               	iorwf	(dtoa@n+4)^0,w,c
  5338   0039E0  1039               	iorwf	(dtoa@n+5)^0,w,c
  5339   0039E2  103A               	iorwf	(dtoa@n+6)^0,w,c
  5340   0039E4  103B               	iorwf	(dtoa@n+7)^0,w,c
  5341   0039E6  A4D8               	btfss	status,2,c
  5342   0039E8  EFF8  F01C         	goto	u4561
  5343   0039EC  EFFA  F01C         	goto	u4560
  5344   0039F0                     u4561:
  5345   0039F0  EF62  F01C         	goto	l4783
  5346   0039F4                     u4560:
  5347   0039F4  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5348   0039F6  EF07  F01D         	goto	u4570
  5349   0039FA  5031               	movf	(dtoa@p+1)^0,w,c
  5350   0039FC  E106               	bnz	u4571
  5351   0039FE  0430               	decf	dtoa@p^0,w,c
  5352   003A00  B0D8               	btfsc	status,0,c
  5353   003A02  EF05  F01D         	goto	u4571
  5354   003A06  EF07  F01D         	goto	u4570
  5355   003A0A                     u4571:
  5356   003A0A  EF62  F01C         	goto	l4783
  5357   003A0E                     u4570:
  5358   003A0E                     l4799:
  5359                           
  5360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5361   003A0E  503E               	movf	dtoa@s^0,w,c
  5362   003A10  B4D8               	btfsc	status,2,c
  5363   003A12  EF0D  F01D         	goto	u4581
  5364   003A16  EF0F  F01D         	goto	u4580
  5365   003A1A                     u4581:
  5366   003A1A  EF1A  F01D         	goto	l4805
  5367   003A1E                     u4580:
  5368   003A1E                     
  5369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5370   003A1E  063C               	decf	dtoa@i^0,f,c
  5371   003A20  A0D8               	btfss	status,0,c
  5372   003A22  063D               	decf	(dtoa@i+1)^0,f,c
  5373   003A24                     
  5374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5375   003A24  0EA0               	movlw	low _dbuf
  5376   003A26  243C               	addwf	dtoa@i^0,w,c
  5377   003A28  6ED9               	movwf	fsr2l,c
  5378   003A2A  0E02               	movlw	high _dbuf
  5379   003A2C  203D               	addwfc	(dtoa@i+1)^0,w,c
  5380   003A2E  6EDA               	movwf	fsr2h,c
  5381   003A30  C03E  FFDF         	movff	dtoa@s,indf2
  5382   003A34                     l4805:
  5383                           
  5384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5385   003A34  C01C  F011         	movff	dtoa@fp,pad@fp
  5386   003A38  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5387   003A3C  0EA0               	movlw	low _dbuf
  5388   003A3E  243C               	addwf	dtoa@i^0,w,c
  5389   003A40  6E13               	movwf	pad@buf^0,c
  5390   003A42  0E02               	movlw	high _dbuf
  5391   003A44  203D               	addwfc	(dtoa@i+1)^0,w,c
  5392   003A46  6E14               	movwf	(pad@buf+1)^0,c
  5393   003A48  C032  F015         	movff	dtoa@w,pad@p
  5394   003A4C  C033  F016         	movff	dtoa@w+1,pad@p+1
  5395   003A50  EC7E  F029         	call	_pad	;wreg free
  5396   003A54  0012               	return		;funcret
  5397   003A56                     __end_of_dtoa:
  5398                           	callstack 0
  5399                           
  5400 ;; *************** function _pad *****************
  5401 ;; Defined at:
  5402 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5405 ;;		 -> sprintf@f(11), 
  5406 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5407 ;;		 -> dbuf(80), 
  5408 ;;  p               2   20[COMRAM] int 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;  w               2   25[COMRAM] int 
  5411 ;;  i               2   23[COMRAM] int 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  1    wreg      void 
  5414 ;; Registers used:
  5415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5421 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5422 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5423 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5424 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5425 ;;Total ram usage:       11 bytes
  5426 ;; Hardware stack levels used: 1
  5427 ;; Hardware stack levels required when called: 4
  5428 ;; This function calls:
  5429 ;;		_fputc
  5430 ;;		_fputs
  5431 ;; This function is called by:
  5432 ;;		_dtoa
  5433 ;;		_efgtoa
  5434 ;; This function uses a non-reentrant model
  5435 ;;
  5436                           
  5437                           	psect	text14
  5438   0052FC                     __ptext14:
  5439                           	callstack 0
  5440   0052FC                     _pad:
  5441                           	callstack 22
  5442   0052FC                     
  5443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5444   0052FC  BE16               	btfsc	(pad@p+1)^0,7,c
  5445   0052FE  EF83  F029         	goto	u4231
  5446   005302  EF85  F029         	goto	u4230
  5447   005306                     u4231:
  5448   005306  EF8B  F029         	goto	l4629
  5449   00530A                     u4230:
  5450   00530A  C015  F01A         	movff	pad@p,pad@w
  5451   00530E  C016  F01B         	movff	pad@p+1,pad@w+1
  5452   005312  EF8F  F029         	goto	l1458
  5453   005316                     l4629:
  5454   005316  0E00               	movlw	0
  5455   005318  6E1B               	movwf	(pad@w+1)^0,c
  5456   00531A  0E00               	movlw	0
  5457   00531C  6E1A               	movwf	pad@w^0,c
  5458   00531E                     l1458:
  5459                           
  5460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5461   00531E  0E00               	movlw	0
  5462   005320  6E19               	movwf	(pad@i+1)^0,c
  5463   005322  0E00               	movlw	0
  5464   005324  6E18               	movwf	pad@i^0,c
  5465                           
  5466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5467   005326  EFA1  F029         	goto	l4635
  5468   00532A                     l4631:
  5469                           
  5470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5471   00532A  0E00               	movlw	0
  5472   00532C  6E02               	movwf	(fputc@c+1)^0,c
  5473   00532E  0E20               	movlw	32
  5474   005330  6E01               	movwf	fputc@c^0,c
  5475   005332  C011  F003         	movff	pad@fp,fputc@fp
  5476   005336  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5477   00533A  ECFA  F025         	call	_fputc	;wreg free
  5478   00533E                     
  5479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5480   00533E  4A18               	infsnz	pad@i^0,f,c
  5481   005340  2A19               	incf	(pad@i+1)^0,f,c
  5482   005342                     l4635:
  5483                           
  5484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5485   005342  501A               	movf	pad@w^0,w,c
  5486   005344  5C18               	subwf	pad@i^0,w,c
  5487   005346  5019               	movf	(pad@i+1)^0,w,c
  5488   005348  0A80               	xorlw	128
  5489   00534A  6E17               	movwf	??_pad^0,c
  5490   00534C  501B               	movf	(pad@w+1)^0,w,c
  5491   00534E  0A80               	xorlw	128
  5492   005350  5817               	subwfb	??_pad^0,w,c
  5493   005352  A0D8               	btfss	status,0,c
  5494   005354  EFAE  F029         	goto	u4241
  5495   005358  EFB0  F029         	goto	u4240
  5496   00535C                     u4241:
  5497   00535C  EF95  F029         	goto	l4631
  5498   005360                     u4240:
  5499   005360                     
  5500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5501   005360  C013  F00A         	movff	pad@buf,fputs@s
  5502   005364  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5503   005368  C011  F00C         	movff	pad@fp,fputs@fp
  5504   00536C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5505   005370  EC8C  F02E         	call	_fputs	;wreg free
  5506   005374  0012               	return		;funcret
  5507   005376                     __end_of_pad:
  5508                           	callstack 0
  5509                           
  5510 ;; *************** function _fputs *****************
  5511 ;; Defined at:
  5512 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5515 ;;		 -> dbuf(80), 
  5516 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5517 ;;		 -> sprintf@f(11), 
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;  i               2   14[COMRAM] int 
  5520 ;;  c               1   13[COMRAM] unsigned char 
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  2    9[COMRAM] int 
  5523 ;; Registers used:
  5524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5530 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5531 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5533 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5534 ;;Total ram usage:        7 bytes
  5535 ;; Hardware stack levels used: 1
  5536 ;; Hardware stack levels required when called: 3
  5537 ;; This function calls:
  5538 ;;		_fputc
  5539 ;; This function is called by:
  5540 ;;		_pad
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text15
  5545   005D18                     __ptext15:
  5546                           	callstack 0
  5547   005D18                     _fputs:
  5548                           	callstack 22
  5549   005D18  0E00               	movlw	0
  5550   005D1A  6E10               	movwf	(fputs@i+1)^0,c
  5551   005D1C  0E00               	movlw	0
  5552   005D1E  6E0F               	movwf	fputs@i^0,c
  5553   005D20  EF9D  F02E         	goto	l4103
  5554   005D24                     l4099:
  5555   005D24  C00E  F001         	movff	fputs@c,fputc@c
  5556   005D28  6A02               	clrf	(fputc@c+1)^0,c
  5557   005D2A  C00C  F003         	movff	fputs@fp,fputc@fp
  5558   005D2E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5559   005D32  ECFA  F025         	call	_fputc	;wreg free
  5560   005D36  4A0F               	infsnz	fputs@i^0,f,c
  5561   005D38  2A10               	incf	(fputs@i+1)^0,f,c
  5562   005D3A                     l4103:
  5563   005D3A  500F               	movf	fputs@i^0,w,c
  5564   005D3C  240A               	addwf	fputs@s^0,w,c
  5565   005D3E  6ED9               	movwf	fsr2l,c
  5566   005D40  5010               	movf	(fputs@i+1)^0,w,c
  5567   005D42  200B               	addwfc	(fputs@s+1)^0,w,c
  5568   005D44  6EDA               	movwf	fsr2h,c
  5569   005D46  50DF               	movf	indf2,w,c
  5570   005D48  6E0E               	movwf	fputs@c^0,c
  5571   005D4A  500E               	movf	fputs@c^0,w,c
  5572   005D4C  A4D8               	btfss	status,2,c
  5573   005D4E  EFAB  F02E         	goto	u3401
  5574   005D52  EFAD  F02E         	goto	u3400
  5575   005D56                     u3401:
  5576   005D56  EF92  F02E         	goto	l4099
  5577   005D5A                     u3400:
  5578   005D5A  0012               	return		;funcret
  5579   005D5C                     __end_of_fputs:
  5580                           	callstack 0
  5581                           
  5582 ;; *************** function _fputc *****************
  5583 ;; Defined at:
  5584 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;  c               2    0[COMRAM] int 
  5587 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5588 ;;		 -> sprintf@f(11), 
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  2    0[COMRAM] int 
  5593 ;; Registers used:
  5594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5600 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5602 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5603 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5604 ;;Total ram usage:        9 bytes
  5605 ;; Hardware stack levels used: 1
  5606 ;; Hardware stack levels required when called: 2
  5607 ;; This function calls:
  5608 ;;		_putch
  5609 ;; This function is called by:
  5610 ;;		_pad
  5611 ;;		_vfpfcnvrt
  5612 ;;		_fputs
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           	psect	text16
  5617   004BF4                     __ptext16:
  5618                           	callstack 0
  5619   004BF4                     _fputc:
  5620                           	callstack 25
  5621   004BF4  5003               	movf	fputc@fp^0,w,c
  5622   004BF6  1004               	iorwf	(fputc@fp+1)^0,w,c
  5623   004BF8  B4D8               	btfsc	status,2,c
  5624   004BFA  EF01  F026         	goto	u2951
  5625   004BFE  EF03  F026         	goto	u2950
  5626   004C02                     u2951:
  5627   004C02  EF0C  F026         	goto	l3869
  5628   004C06                     u2950:
  5629   004C06  5003               	movf	fputc@fp^0,w,c
  5630   004C08  1004               	iorwf	(fputc@fp+1)^0,w,c
  5631   004C0A  A4D8               	btfss	status,2,c
  5632   004C0C  EF0A  F026         	goto	u2961
  5633   004C10  EF0C  F026         	goto	u2960
  5634   004C14                     u2961:
  5635   004C14  EF11  F026         	goto	l3871
  5636   004C18                     u2960:
  5637   004C18                     l3869:
  5638   004C18  5001               	movf	fputc@c^0,w,c
  5639   004C1A  EC48  F030         	call	_putch
  5640   004C1E  EF5E  F026         	goto	l1618
  5641   004C22                     l3871:
  5642   004C22  EE20 F009          	lfsr	2,9
  5643   004C26  5003               	movf	fputc@fp^0,w,c
  5644   004C28  26D9               	addwf	fsr2l,f,c
  5645   004C2A  5004               	movf	(fputc@fp+1)^0,w,c
  5646   004C2C  22DA               	addwfc	fsr2h,f,c
  5647   004C2E  50DE               	movf	postinc2,w,c
  5648   004C30  10DE               	iorwf	postinc2,w,c
  5649   004C32  B4D8               	btfsc	status,2,c
  5650   004C34  EF1E  F026         	goto	u2971
  5651   004C38  EF20  F026         	goto	u2970
  5652   004C3C                     u2971:
  5653   004C3C  EF3B  F026         	goto	l3875
  5654   004C40                     u2970:
  5655   004C40  EE20 F009          	lfsr	2,9
  5656   004C44  5003               	movf	fputc@fp^0,w,c
  5657   004C46  26D9               	addwf	fsr2l,f,c
  5658   004C48  5004               	movf	(fputc@fp+1)^0,w,c
  5659   004C4A  22DA               	addwfc	fsr2h,f,c
  5660   004C4C  EE10 F003          	lfsr	1,3
  5661   004C50  5003               	movf	fputc@fp^0,w,c
  5662   004C52  26E1               	addwf	fsr1l,f,c
  5663   004C54  5004               	movf	(fputc@fp+1)^0,w,c
  5664   004C56  22E2               	addwfc	fsr1h,f,c
  5665   004C58  50DE               	movf	postinc2,w,c
  5666   004C5A  5CE6               	subwf	postinc1,w,c
  5667   004C5C  50E6               	movf	postinc1,w,c
  5668   004C5E  0A80               	xorlw	128
  5669   004C60  6E09               	movwf	(??_fputc+4)^0,c
  5670   004C62  50DE               	movf	postinc2,w,c
  5671   004C64  0A80               	xorlw	128
  5672   004C66  5809               	subwfb	(??_fputc+4)^0,w,c
  5673   004C68  B0D8               	btfsc	status,0,c
  5674   004C6A  EF39  F026         	goto	u2981
  5675   004C6E  EF3B  F026         	goto	u2980
  5676   004C72                     u2981:
  5677   004C72  EF5E  F026         	goto	l1618
  5678   004C76                     u2980:
  5679   004C76                     l3875:
  5680   004C76  EE20 F003          	lfsr	2,3
  5681   004C7A  5003               	movf	fputc@fp^0,w,c
  5682   004C7C  26D9               	addwf	fsr2l,f,c
  5683   004C7E  5004               	movf	(fputc@fp+1)^0,w,c
  5684   004C80  22DA               	addwfc	fsr2h,f,c
  5685   004C82  CFDE F005          	movff	postinc2,??_fputc
  5686   004C86  CFDD F006          	movff	postdec2,??_fputc+1
  5687   004C8A  C003  FFD9         	movff	fputc@fp,fsr2l
  5688   004C8E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5689   004C92  CFDE F007          	movff	postinc2,??_fputc+2
  5690   004C96  CFDD F008          	movff	postdec2,??_fputc+3
  5691   004C9A  5005               	movf	??_fputc^0,w,c
  5692   004C9C  2407               	addwf	(??_fputc+2)^0,w,c
  5693   004C9E  6ED9               	movwf	fsr2l,c
  5694   004CA0  5006               	movf	(??_fputc+1)^0,w,c
  5695   004CA2  2008               	addwfc	(??_fputc+3)^0,w,c
  5696   004CA4  6EDA               	movwf	fsr2h,c
  5697   004CA6  C001  FFDF         	movff	fputc@c,indf2
  5698   004CAA  EE20 F003          	lfsr	2,3
  5699   004CAE  5003               	movf	fputc@fp^0,w,c
  5700   004CB0  26D9               	addwf	fsr2l,f,c
  5701   004CB2  5004               	movf	(fputc@fp+1)^0,w,c
  5702   004CB4  22DA               	addwfc	fsr2h,f,c
  5703   004CB6  2ADE               	incf	postinc2,f,c
  5704   004CB8  0E00               	movlw	0
  5705   004CBA  22DD               	addwfc	postdec2,f,c
  5706   004CBC                     l1618:
  5707   004CBC  0012               	return		;funcret
  5708   004CBE                     __end_of_fputc:
  5709                           	callstack 0
  5710                           
  5711 ;; *************** function _putch *****************
  5712 ;; Defined at:
  5713 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  c               1    wreg     unsigned char 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;  c               1    0[COMRAM] unsigned char 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      void 
  5720 ;; Registers used:
  5721 ;;		wreg
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5731 ;;Total ram usage:        0 bytes
  5732 ;; Hardware stack levels used: 1
  5733 ;; Hardware stack levels required when called: 1
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_fputc
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text17
  5742   006090                     __ptext17:
  5743                           	callstack 0
  5744   006090                     _putch:
  5745                           	callstack 25
  5746   006090  0012               	return		;funcret
  5747   006092                     __end_of_putch:
  5748                           	callstack 0
  5749                           
  5750 ;; *************** function _abs *****************
  5751 ;; Defined at:
  5752 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  a               2   18[COMRAM] int 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;		None
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  2   18[COMRAM] int 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5766 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5768 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5769 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5770 ;;Total ram usage:        4 bytes
  5771 ;; Hardware stack levels used: 1
  5772 ;; Hardware stack levels required when called: 1
  5773 ;; This function calls:
  5774 ;;		Nothing
  5775 ;; This function is called by:
  5776 ;;		_dtoa
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text18
  5781   005D9E                     __ptext18:
  5782                           	callstack 0
  5783   005D9E                     _abs:
  5784                           	callstack 25
  5785   005D9E  BE14               	btfsc	(abs@a+1)^0,7,c
  5786   005DA0  EFDC  F02E         	goto	u4250
  5787   005DA4  5014               	movf	(abs@a+1)^0,w,c
  5788   005DA6  E106               	bnz	u4251
  5789   005DA8  0413               	decf	abs@a^0,w,c
  5790   005DAA  B0D8               	btfsc	status,0,c
  5791   005DAC  EFDA  F02E         	goto	u4251
  5792   005DB0  EFDC  F02E         	goto	u4250
  5793   005DB4                     u4251:
  5794   005DB4  EFEA  F02E         	goto	l1577
  5795   005DB8                     u4250:
  5796   005DB8  C013  F015         	movff	abs@a,??_abs
  5797   005DBC  C014  F016         	movff	abs@a+1,??_abs+1
  5798   005DC0  1E15               	comf	??_abs^0,f,c
  5799   005DC2  1E16               	comf	(??_abs+1)^0,f,c
  5800   005DC4  4A15               	infsnz	??_abs^0,f,c
  5801   005DC6  2A16               	incf	(??_abs+1)^0,f,c
  5802   005DC8  C015  F013         	movff	??_abs,?_abs
  5803   005DCC  C016  F014         	movff	??_abs+1,?_abs+1
  5804   005DD0  EFEE  F02E         	goto	l1580
  5805   005DD4                     l1577:
  5806   005DD4  C013  F013         	movff	abs@a,?_abs
  5807   005DD8  C014  F014         	movff	abs@a+1,?_abs+1
  5808   005DDC                     l1580:
  5809   005DDC  0012               	return		;funcret
  5810   005DDE                     __end_of_abs:
  5811                           	callstack 0
  5812                           
  5813 ;; *************** function ___aomod *****************
  5814 ;; Defined at:
  5815 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  dividend        8    0[COMRAM] long long 
  5818 ;;  divisor         8    8[COMRAM] long long 
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;  sign            1   17[COMRAM] unsigned char 
  5821 ;;  counter         1   16[COMRAM] unsigned char 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  8    0[COMRAM] long long 
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5831 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5832 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5834 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5835 ;;Total ram usage:       18 bytes
  5836 ;; Hardware stack levels used: 1
  5837 ;; Hardware stack levels required when called: 1
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		_dtoa
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           	psect	text19
  5846   004788                     __ptext19:
  5847                           	callstack 0
  5848   004788                     ___aomod:
  5849                           	callstack 25
  5850   004788  0E00               	movlw	0
  5851   00478A  6E12               	movwf	___aomod@sign^0,c
  5852   00478C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5853   00478E  EFCD  F023         	goto	u3590
  5854   004792  EFCB  F023         	goto	u3591
  5855   004796                     u3591:
  5856   004796  EFDF  F023         	goto	l4233
  5857   00479A                     u3590:
  5858   00479A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5859   00479C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5860   00479E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5861   0047A0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5862   0047A2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5863   0047A4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5864   0047A6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5865   0047A8  6C01               	negf	___aomod@dividend^0,c
  5866   0047AA  0E00               	movlw	0
  5867   0047AC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5868   0047AE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5869   0047B0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5870   0047B2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5871   0047B4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5872   0047B6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5873   0047B8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5874   0047BA  0E01               	movlw	1
  5875   0047BC  6E12               	movwf	___aomod@sign^0,c
  5876   0047BE                     l4233:
  5877   0047BE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5878   0047C0  EFE6  F023         	goto	u3600
  5879   0047C4  EFE4  F023         	goto	u3601
  5880   0047C8                     u3601:
  5881   0047C8  EFF6  F023         	goto	l4237
  5882   0047CC                     u3600:
  5883   0047CC  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5884   0047CE  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5885   0047D0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5886   0047D2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5887   0047D4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5888   0047D6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5889   0047D8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5890   0047DA  6C09               	negf	___aomod@divisor^0,c
  5891   0047DC  0E00               	movlw	0
  5892   0047DE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5893   0047E0  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5894   0047E2  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5895   0047E4  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5896   0047E6  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5897   0047E8  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5898   0047EA  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5899   0047EC                     l4237:
  5900   0047EC  5009               	movf	___aomod@divisor^0,w,c
  5901   0047EE  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5902   0047F0  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5903   0047F2  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5904   0047F4  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5905   0047F6  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5906   0047F8  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5907   0047FA  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5908   0047FC  B4D8               	btfsc	status,2,c
  5909   0047FE  EF03  F024         	goto	u3611
  5910   004802  EF05  F024         	goto	u3610
  5911   004806                     u3611:
  5912   004806  EF4D  F024         	goto	l4253
  5913   00480A                     u3610:
  5914   00480A  0E01               	movlw	1
  5915   00480C  6E11               	movwf	___aomod@counter^0,c
  5916   00480E  EF13  F024         	goto	l4243
  5917   004812                     l4241:
  5918   004812  90D8               	bcf	status,0,c
  5919   004814  3609               	rlcf	___aomod@divisor^0,f,c
  5920   004816  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5921   004818  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5922   00481A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5923   00481C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5924   00481E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5925   004820  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5926   004822  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5927   004824  2A11               	incf	___aomod@counter^0,f,c
  5928   004826                     l4243:
  5929   004826  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5930   004828  EF18  F024         	goto	u3621
  5931   00482C  EF1A  F024         	goto	u3620
  5932   004830                     u3621:
  5933   004830  EF09  F024         	goto	l4241
  5934   004834                     u3620:
  5935   004834                     l4245:
  5936   004834  5009               	movf	___aomod@divisor^0,w,c
  5937   004836  5C01               	subwf	___aomod@dividend^0,w,c
  5938   004838  500A               	movf	(___aomod@divisor+1)^0,w,c
  5939   00483A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5940   00483C  500B               	movf	(___aomod@divisor+2)^0,w,c
  5941   00483E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5942   004840  500C               	movf	(___aomod@divisor+3)^0,w,c
  5943   004842  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5944   004844  500D               	movf	(___aomod@divisor+4)^0,w,c
  5945   004846  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5946   004848  500E               	movf	(___aomod@divisor+5)^0,w,c
  5947   00484A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5948   00484C  500F               	movf	(___aomod@divisor+6)^0,w,c
  5949   00484E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5950   004850  5010               	movf	(___aomod@divisor+7)^0,w,c
  5951   004852  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5952   004854  A0D8               	btfss	status,0,c
  5953   004856  EF2F  F024         	goto	u3631
  5954   00485A  EF31  F024         	goto	u3630
  5955   00485E                     u3631:
  5956   00485E  EF41  F024         	goto	l4249
  5957   004862                     u3630:
  5958   004862  5009               	movf	___aomod@divisor^0,w,c
  5959   004864  5E01               	subwf	___aomod@dividend^0,f,c
  5960   004866  500A               	movf	(___aomod@divisor+1)^0,w,c
  5961   004868  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5962   00486A  500B               	movf	(___aomod@divisor+2)^0,w,c
  5963   00486C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5964   00486E  500C               	movf	(___aomod@divisor+3)^0,w,c
  5965   004870  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5966   004872  500D               	movf	(___aomod@divisor+4)^0,w,c
  5967   004874  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5968   004876  500E               	movf	(___aomod@divisor+5)^0,w,c
  5969   004878  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5970   00487A  500F               	movf	(___aomod@divisor+6)^0,w,c
  5971   00487C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5972   00487E  5010               	movf	(___aomod@divisor+7)^0,w,c
  5973   004880  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5974   004882                     l4249:
  5975   004882  90D8               	bcf	status,0,c
  5976   004884  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5977   004886  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5978   004888  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5979   00488A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5980   00488C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5981   00488E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5982   004890  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5983   004892  3209               	rrcf	___aomod@divisor^0,f,c
  5984   004894  2E11               	decfsz	___aomod@counter^0,f,c
  5985   004896  EF1A  F024         	goto	l4245
  5986   00489A                     l4253:
  5987   00489A  5012               	movf	___aomod@sign^0,w,c
  5988   00489C  B4D8               	btfsc	status,2,c
  5989   00489E  EF53  F024         	goto	u3641
  5990   0048A2  EF55  F024         	goto	u3640
  5991   0048A6                     u3641:
  5992   0048A6  EF65  F024         	goto	l4257
  5993   0048AA                     u3640:
  5994   0048AA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5995   0048AC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5996   0048AE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5997   0048B0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5998   0048B2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5999   0048B4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6000   0048B6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6001   0048B8  6C01               	negf	___aomod@dividend^0,c
  6002   0048BA  0E00               	movlw	0
  6003   0048BC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6004   0048BE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6005   0048C0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6006   0048C2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6007   0048C4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6008   0048C6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6009   0048C8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6010   0048CA                     l4257:
  6011   0048CA  C001  F001         	movff	___aomod@dividend,?___aomod
  6012   0048CE  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6013   0048D2  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6014   0048D6  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6015   0048DA  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6016   0048DE  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6017   0048E2  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6018   0048E6  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6019   0048EA  0012               	return		;funcret
  6020   0048EC                     __end_of___aomod:
  6021                           	callstack 0
  6022                           
  6023 ;; *************** function ___aodiv *****************
  6024 ;; Defined at:
  6025 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;  dividend        8    0[COMRAM] long long 
  6028 ;;  divisor         8    8[COMRAM] long long 
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;  quotient        8   18[COMRAM] long long 
  6031 ;;  sign            1   17[COMRAM] unsigned char 
  6032 ;;  counter         1   16[COMRAM] unsigned char 
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  8    0[COMRAM] long long 
  6035 ;; Registers used:
  6036 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6042 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6043 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6045 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6046 ;;Total ram usage:       26 bytes
  6047 ;; Hardware stack levels used: 1
  6048 ;; Hardware stack levels required when called: 1
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		_dtoa
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           	psect	text20
  6057   004494                     __ptext20:
  6058                           	callstack 0
  6059   004494                     ___aodiv:
  6060                           	callstack 25
  6061   004494  0E00               	movlw	0
  6062   004496  6E12               	movwf	___aodiv@sign^0,c
  6063   004498  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6064   00449A  EF53  F022         	goto	u3520
  6065   00449E  EF51  F022         	goto	u3521
  6066   0044A2                     u3521:
  6067   0044A2  EF65  F022         	goto	l4189
  6068   0044A6                     u3520:
  6069   0044A6  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6070   0044A8  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6071   0044AA  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6072   0044AC  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6073   0044AE  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6074   0044B0  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6075   0044B2  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6076   0044B4  6C09               	negf	___aodiv@divisor^0,c
  6077   0044B6  0E00               	movlw	0
  6078   0044B8  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6079   0044BA  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6080   0044BC  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6081   0044BE  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6082   0044C0  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6083   0044C2  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6084   0044C4  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6085   0044C6  0E01               	movlw	1
  6086   0044C8  6E12               	movwf	___aodiv@sign^0,c
  6087   0044CA                     l4189:
  6088   0044CA  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6089   0044CC  EF6C  F022         	goto	u3530
  6090   0044D0  EF6A  F022         	goto	u3531
  6091   0044D4                     u3531:
  6092   0044D4  EF7E  F022         	goto	l4195
  6093   0044D8                     u3530:
  6094   0044D8  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6095   0044DA  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6096   0044DC  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6097   0044DE  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6098   0044E0  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6099   0044E2  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6100   0044E4  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6101   0044E6  6C01               	negf	___aodiv@dividend^0,c
  6102   0044E8  0E00               	movlw	0
  6103   0044EA  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6104   0044EC  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6105   0044EE  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6106   0044F0  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6107   0044F2  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6108   0044F4  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6109   0044F6  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6110   0044F8  0E01               	movlw	1
  6111   0044FA  1A12               	xorwf	___aodiv@sign^0,f,c
  6112   0044FC                     l4195:
  6113   0044FC  EE20  F013         	lfsr	2,___aodiv@quotient
  6114   004500  0E07               	movlw	7
  6115   004502                     u3541:
  6116   004502  6ADE               	clrf	postinc2,c
  6117   004504  06E8               	decf	wreg,f,c
  6118   004506  E2FD               	bc	u3541
  6119   004508  5009               	movf	___aodiv@divisor^0,w,c
  6120   00450A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6121   00450C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6122   00450E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6123   004510  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6124   004512  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6125   004514  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6126   004516  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6127   004518  B4D8               	btfsc	status,2,c
  6128   00451A  EF91  F022         	goto	u3551
  6129   00451E  EF93  F022         	goto	u3550
  6130   004522                     u3551:
  6131   004522  EFE5  F022         	goto	l4217
  6132   004526                     u3550:
  6133   004526  0E01               	movlw	1
  6134   004528  6E11               	movwf	___aodiv@counter^0,c
  6135   00452A  EFA1  F022         	goto	l4203
  6136   00452E                     l4201:
  6137   00452E  90D8               	bcf	status,0,c
  6138   004530  3609               	rlcf	___aodiv@divisor^0,f,c
  6139   004532  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6140   004534  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6141   004536  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6142   004538  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6143   00453A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6144   00453C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6145   00453E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6146   004540  2A11               	incf	___aodiv@counter^0,f,c
  6147   004542                     l4203:
  6148   004542  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6149   004544  EFA6  F022         	goto	u3561
  6150   004548  EFA8  F022         	goto	u3560
  6151   00454C                     u3561:
  6152   00454C  EF97  F022         	goto	l4201
  6153   004550                     u3560:
  6154   004550                     l4205:
  6155   004550  90D8               	bcf	status,0,c
  6156   004552  3613               	rlcf	___aodiv@quotient^0,f,c
  6157   004554  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6158   004556  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6159   004558  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6160   00455A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6161   00455C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6162   00455E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6163   004560  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6164   004562  5009               	movf	___aodiv@divisor^0,w,c
  6165   004564  5C01               	subwf	___aodiv@dividend^0,w,c
  6166   004566  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6167   004568  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6168   00456A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6169   00456C  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6170   00456E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6171   004570  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6172   004572  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6173   004574  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6174   004576  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6175   004578  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6176   00457A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6177   00457C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6178   00457E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6179   004580  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6180   004582  A0D8               	btfss	status,0,c
  6181   004584  EFC6  F022         	goto	u3571
  6182   004588  EFC8  F022         	goto	u3570
  6183   00458C                     u3571:
  6184   00458C  EFD9  F022         	goto	l4213
  6185   004590                     u3570:
  6186   004590  5009               	movf	___aodiv@divisor^0,w,c
  6187   004592  5E01               	subwf	___aodiv@dividend^0,f,c
  6188   004594  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6189   004596  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6190   004598  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6191   00459A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6192   00459C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6193   00459E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6194   0045A0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6195   0045A2  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6196   0045A4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6197   0045A6  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6198   0045A8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6199   0045AA  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6200   0045AC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6201   0045AE  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6202   0045B0  8013               	bsf	___aodiv@quotient^0,0,c
  6203   0045B2                     l4213:
  6204   0045B2  90D8               	bcf	status,0,c
  6205   0045B4  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6206   0045B6  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6207   0045B8  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6208   0045BA  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6209   0045BC  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6210   0045BE  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6211   0045C0  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6212   0045C2  3209               	rrcf	___aodiv@divisor^0,f,c
  6213   0045C4  2E11               	decfsz	___aodiv@counter^0,f,c
  6214   0045C6  EFA8  F022         	goto	l4205
  6215   0045CA                     l4217:
  6216   0045CA  5012               	movf	___aodiv@sign^0,w,c
  6217   0045CC  B4D8               	btfsc	status,2,c
  6218   0045CE  EFEB  F022         	goto	u3581
  6219   0045D2  EFED  F022         	goto	u3580
  6220   0045D6                     u3581:
  6221   0045D6  EFFD  F022         	goto	l4221
  6222   0045DA                     u3580:
  6223   0045DA  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6224   0045DC  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6225   0045DE  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6226   0045E0  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6227   0045E2  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6228   0045E4  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6229   0045E6  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6230   0045E8  6C13               	negf	___aodiv@quotient^0,c
  6231   0045EA  0E00               	movlw	0
  6232   0045EC  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6233   0045EE  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6234   0045F0  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6235   0045F2  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6236   0045F4  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6237   0045F6  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6238   0045F8  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6239   0045FA                     l4221:
  6240   0045FA  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6241   0045FE  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6242   004602  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6243   004606  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6244   00460A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6245   00460E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6246   004612  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6247   004616  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6248   00461A  0012               	return		;funcret
  6249   00461C                     __end_of___aodiv:
  6250                           	callstack 0
  6251                           
  6252 ;; *************** function _sendStringSerial4 *****************
  6253 ;; Defined at:
  6254 ;;		line 33 in file "serial.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  string          2    1[COMRAM] PTR unsigned char 
  6257 ;;		 -> main@buf(100), 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;		None
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  1    wreg      void 
  6262 ;; Registers used:
  6263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6272 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6273 ;;Total ram usage:        2 bytes
  6274 ;; Hardware stack levels used: 1
  6275 ;; Hardware stack levels required when called: 2
  6276 ;; This function calls:
  6277 ;;		_sendCharSerial4
  6278 ;; This function is called by:
  6279 ;;		_main
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           	psect	text21
  6284   005F00                     __ptext21:
  6285                           	callstack 0
  6286   005F00                     _sendStringSerial4:
  6287                           	callstack 28
  6288   005F00                     
  6289                           ;serial.c: 34:     while (*string!=0){
  6290   005F00  EF8B  F02F         	goto	l5555
  6291   005F04                     l5551:
  6292                           
  6293                           ;serial.c: 35:         sendCharSerial4(*string++);
  6294   005F04  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6295   005F08  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6296   005F0C  50DF               	movf	indf2,w,c
  6297   005F0E  EC16  F030         	call	_sendCharSerial4
  6298   005F12  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6299   005F14  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6300   005F16                     l5555:
  6301                           
  6302                           ;serial.c: 34:     while (*string!=0){
  6303   005F16  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6304   005F1A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6305   005F1E  50DF               	movf	indf2,w,c
  6306   005F20  A4D8               	btfss	status,2,c
  6307   005F22  EF95  F02F         	goto	u5481
  6308   005F26  EF97  F02F         	goto	u5480
  6309   005F2A                     u5481:
  6310   005F2A  EF82  F02F         	goto	l5551
  6311   005F2E                     u5480:
  6312   005F2E  0012               	return		;funcret
  6313   005F30                     __end_of_sendStringSerial4:
  6314                           	callstack 0
  6315                           
  6316 ;; *************** function _sendCharSerial4 *****************
  6317 ;; Defined at:
  6318 ;;		line 26 in file "serial.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  charToSend      1    wreg     unsigned char 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;  charToSend      1    0[COMRAM] unsigned char 
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  1    wreg      void 
  6325 ;; Registers used:
  6326 ;;		wreg
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6336 ;;Total ram usage:        1 bytes
  6337 ;; Hardware stack levels used: 1
  6338 ;; Hardware stack levels required when called: 1
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_sendStringSerial4
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text22
  6347   00602C                     __ptext22:
  6348                           	callstack 0
  6349   00602C                     _sendCharSerial4:
  6350                           	callstack 28
  6351                           
  6352                           ;incstack = 0
  6353                           ;sendCharSerial4@charToSend stored from wreg
  6354   00602C  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6355   00602E                     l197:
  6356   00602E  010E               	movlb	14	; () banked
  6357   006030  A537               	btfss	55,2,b	;volatile
  6358   006032  EF1D  F030         	goto	u4991
  6359   006036  EF1F  F030         	goto	u4990
  6360   00603A                     u4991:
  6361   00603A  EF17  F030         	goto	l197
  6362   00603E                     u4990:
  6363   00603E                     
  6364                           ; BSR set to: 14
  6365                           ;serial.c: 28:     TX4REG = charToSend;
  6366   00603E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6367   006042                     
  6368                           ; BSR set to: 14
  6369   006042  0012               	return		;funcret
  6370   006044                     __end_of_sendCharSerial4:
  6371                           	callstack 0
  6372                           
  6373 ;; *************** function _readColours *****************
  6374 ;; Defined at:
  6375 ;;		line 106 in file "color.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;  vals            2   11[COMRAM] PTR struct RGB
  6378 ;;		 -> vals(8), 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;		None
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  1    wreg      void 
  6383 ;; Registers used:
  6384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6393 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6394 ;;Total ram usage:        2 bytes
  6395 ;; Hardware stack levels used: 1
  6396 ;; Hardware stack levels required when called: 4
  6397 ;; This function calls:
  6398 ;;		_color_read_Blue
  6399 ;;		_color_read_Green
  6400 ;;		_color_read_Red
  6401 ;;		_color_read_lum
  6402 ;; This function is called by:
  6403 ;;		_main
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           	psect	text23
  6408   005604                     __ptext23:
  6409                           	callstack 0
  6410   005604                     _readColours:
  6411                           	callstack 26
  6412   005604                     
  6413                           ;color.c: 108:     vals ->R = color_read_Red();
  6414   005604  EC81  F02D         	call	_color_read_Red	;wreg free
  6415   005608  C00C  FFD9         	movff	readColours@vals,fsr2l
  6416   00560C  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6417   005610  C005  FFDE         	movff	?_color_read_Red,postinc2
  6418   005614  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6419                           
  6420                           ;color.c: 109:     vals ->B = color_read_Blue();
  6421   005618  ECD1  F02D         	call	_color_read_Blue	;wreg free
  6422   00561C  EE20 F004          	lfsr	2,4
  6423   005620  500C               	movf	readColours@vals^0,w,c
  6424   005622  26D9               	addwf	fsr2l,f,c
  6425   005624  500D               	movf	(readColours@vals+1)^0,w,c
  6426   005626  22DA               	addwfc	fsr2h,f,c
  6427   005628  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6428   00562C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6429                           
  6430                           ;color.c: 110:     vals ->G = color_read_Green();
  6431   005630  ECA9  F02D         	call	_color_read_Green	;wreg free
  6432   005634  EE20 F002          	lfsr	2,2
  6433   005638  500C               	movf	readColours@vals^0,w,c
  6434   00563A  26D9               	addwf	fsr2l,f,c
  6435   00563C  500D               	movf	(readColours@vals+1)^0,w,c
  6436   00563E  22DA               	addwfc	fsr2h,f,c
  6437   005640  C005  FFDE         	movff	?_color_read_Green,postinc2
  6438   005644  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6439                           
  6440                           ;color.c: 111:     vals ->L = color_read_lum();
  6441   005648  EC59  F02D         	call	_color_read_lum	;wreg free
  6442   00564C  EE20 F006          	lfsr	2,6
  6443   005650  500C               	movf	readColours@vals^0,w,c
  6444   005652  26D9               	addwf	fsr2l,f,c
  6445   005654  500D               	movf	(readColours@vals+1)^0,w,c
  6446   005656  22DA               	addwfc	fsr2h,f,c
  6447   005658  C005  FFDE         	movff	?_color_read_lum,postinc2
  6448   00565C  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6449   005660  0012               	return		;funcret
  6450   005662                     __end_of_readColours:
  6451                           	callstack 0
  6452                           
  6453 ;; *************** function _color_read_lum *****************
  6454 ;; Defined at:
  6455 ;;		line 50 in file "color.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;		None
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  tmp             2    9[COMRAM] unsigned int 
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  2    4[COMRAM] unsigned int 
  6462 ;; Registers used:
  6463 ;;		wreg, status,2, status,0, cstack
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6471 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6472 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6473 ;;Total ram usage:        7 bytes
  6474 ;; Hardware stack levels used: 1
  6475 ;; Hardware stack levels required when called: 3
  6476 ;; This function calls:
  6477 ;;		_I2C_2_Master_Read
  6478 ;;		_I2C_2_Master_RepStart
  6479 ;;		_I2C_2_Master_Start
  6480 ;;		_I2C_2_Master_Stop
  6481 ;;		_I2C_2_Master_Write
  6482 ;; This function is called by:
  6483 ;;		_readColours
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text24
  6488   005AB2                     __ptext24:
  6489                           	callstack 0
  6490   005AB2                     _color_read_lum:
  6491                           	callstack 26
  6492   005AB2                     
  6493                           ;color.c: 52:  unsigned int tmp;;color.c: 53:  I2C_2_Master_Start();
  6494   005AB2  EC3E  F030         	call	_I2C_2_Master_Start	;wreg free
  6495                           
  6496                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x00);
  6497   005AB6  0E52               	movlw	82
  6498   005AB8  EC22  F030         	call	_I2C_2_Master_Write
  6499                           
  6500                           ;color.c: 55:  I2C_2_Master_Write(0xA0 | 0x14);
  6501   005ABC  0EB4               	movlw	180
  6502   005ABE  EC22  F030         	call	_I2C_2_Master_Write
  6503                           
  6504                           ;color.c: 56:  I2C_2_Master_RepStart();
  6505   005AC2  EC34  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6506                           
  6507                           ;color.c: 57:  I2C_2_Master_Write(0x52 | 0x01);
  6508   005AC6  0E53               	movlw	83
  6509   005AC8  EC22  F030         	call	_I2C_2_Master_Write
  6510                           
  6511                           ;color.c: 58:  tmp=I2C_2_Master_Read(1);
  6512   005ACC  0E01               	movlw	1
  6513   005ACE  ECAE  F02E         	call	_I2C_2_Master_Read
  6514   005AD2  6E07               	movwf	??_color_read_lum^0,c
  6515   005AD4  5007               	movf	??_color_read_lum^0,w,c
  6516   005AD6  6E0A               	movwf	color_read_lum@tmp^0,c
  6517   005AD8  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6518                           
  6519                           ;color.c: 59:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6520   005ADA  0E00               	movlw	0
  6521   005ADC  ECAE  F02E         	call	_I2C_2_Master_Read
  6522   005AE0  6E07               	movwf	??_color_read_lum^0,c
  6523   005AE2  5007               	movf	??_color_read_lum^0,w,c
  6524   005AE4  6E09               	movwf	(??_color_read_lum+2)^0,c
  6525   005AE6  6A08               	clrf	(??_color_read_lum+1)^0,c
  6526   005AE8  500A               	movf	color_read_lum@tmp^0,w,c
  6527   005AEA  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6528   005AEC  6E0A               	movwf	color_read_lum@tmp^0,c
  6529   005AEE  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6530   005AF0  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6531   005AF2  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6532                           
  6533                           ;color.c: 60:  I2C_2_Master_Stop();
  6534   005AF4  EC39  F030         	call	_I2C_2_Master_Stop	;wreg free
  6535   005AF8                     
  6536                           ;color.c: 61:  return tmp;
  6537   005AF8  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6538   005AFC  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6539   005B00  0012               	return		;funcret
  6540   005B02                     __end_of_color_read_lum:
  6541                           	callstack 0
  6542                           
  6543 ;; *************** function _color_read_Red *****************
  6544 ;; Defined at:
  6545 ;;		line 64 in file "color.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;		None
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  tmp             2    9[COMRAM] unsigned int 
  6550 ;; Return value:  Size  Location     Type
  6551 ;;                  2    4[COMRAM] unsigned int 
  6552 ;; Registers used:
  6553 ;;		wreg, status,2, status,0, cstack
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/0
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6560 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6561 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6562 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6563 ;;Total ram usage:        7 bytes
  6564 ;; Hardware stack levels used: 1
  6565 ;; Hardware stack levels required when called: 3
  6566 ;; This function calls:
  6567 ;;		_I2C_2_Master_Read
  6568 ;;		_I2C_2_Master_RepStart
  6569 ;;		_I2C_2_Master_Start
  6570 ;;		_I2C_2_Master_Stop
  6571 ;;		_I2C_2_Master_Write
  6572 ;; This function is called by:
  6573 ;;		_readColours
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text25
  6578   005B02                     __ptext25:
  6579                           	callstack 0
  6580   005B02                     _color_read_Red:
  6581                           	callstack 26
  6582   005B02                     
  6583                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  6584   005B02  EC3E  F030         	call	_I2C_2_Master_Start	;wreg free
  6585                           
  6586                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  6587   005B06  0E52               	movlw	82
  6588   005B08  EC22  F030         	call	_I2C_2_Master_Write
  6589                           
  6590                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x16);
  6591   005B0C  0EB6               	movlw	182
  6592   005B0E  EC22  F030         	call	_I2C_2_Master_Write
  6593                           
  6594                           ;color.c: 70:  I2C_2_Master_RepStart();
  6595   005B12  EC34  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6596                           
  6597                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  6598   005B16  0E53               	movlw	83
  6599   005B18  EC22  F030         	call	_I2C_2_Master_Write
  6600                           
  6601                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  6602   005B1C  0E01               	movlw	1
  6603   005B1E  ECAE  F02E         	call	_I2C_2_Master_Read
  6604   005B22  6E07               	movwf	??_color_read_Red^0,c
  6605   005B24  5007               	movf	??_color_read_Red^0,w,c
  6606   005B26  6E0A               	movwf	color_read_Red@tmp^0,c
  6607   005B28  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6608                           
  6609                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6610   005B2A  0E00               	movlw	0
  6611   005B2C  ECAE  F02E         	call	_I2C_2_Master_Read
  6612   005B30  6E07               	movwf	??_color_read_Red^0,c
  6613   005B32  5007               	movf	??_color_read_Red^0,w,c
  6614   005B34  6E09               	movwf	(??_color_read_Red+2)^0,c
  6615   005B36  6A08               	clrf	(??_color_read_Red+1)^0,c
  6616   005B38  500A               	movf	color_read_Red@tmp^0,w,c
  6617   005B3A  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6618   005B3C  6E0A               	movwf	color_read_Red@tmp^0,c
  6619   005B3E  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6620   005B40  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6621   005B42  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6622                           
  6623                           ;color.c: 74:  I2C_2_Master_Stop();
  6624   005B44  EC39  F030         	call	_I2C_2_Master_Stop	;wreg free
  6625   005B48                     
  6626                           ;color.c: 75:  return tmp;
  6627   005B48  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6628   005B4C  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6629   005B50  0012               	return		;funcret
  6630   005B52                     __end_of_color_read_Red:
  6631                           	callstack 0
  6632                           
  6633 ;; *************** function _color_read_Green *****************
  6634 ;; Defined at:
  6635 ;;		line 77 in file "color.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;		None
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;  tmp             2    9[COMRAM] unsigned int 
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  2    4[COMRAM] unsigned int 
  6642 ;; Registers used:
  6643 ;;		wreg, status,2, status,0, cstack
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6649 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6650 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6651 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6652 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6653 ;;Total ram usage:        7 bytes
  6654 ;; Hardware stack levels used: 1
  6655 ;; Hardware stack levels required when called: 3
  6656 ;; This function calls:
  6657 ;;		_I2C_2_Master_Read
  6658 ;;		_I2C_2_Master_RepStart
  6659 ;;		_I2C_2_Master_Start
  6660 ;;		_I2C_2_Master_Stop
  6661 ;;		_I2C_2_Master_Write
  6662 ;; This function is called by:
  6663 ;;		_readColours
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           	psect	text26
  6668   005B52                     __ptext26:
  6669                           	callstack 0
  6670   005B52                     _color_read_Green:
  6671                           	callstack 26
  6672   005B52                     
  6673                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  6674   005B52  EC3E  F030         	call	_I2C_2_Master_Start	;wreg free
  6675                           
  6676                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  6677   005B56  0E52               	movlw	82
  6678   005B58  EC22  F030         	call	_I2C_2_Master_Write
  6679                           
  6680                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x18);
  6681   005B5C  0EB8               	movlw	184
  6682   005B5E  EC22  F030         	call	_I2C_2_Master_Write
  6683                           
  6684                           ;color.c: 83:  I2C_2_Master_RepStart();
  6685   005B62  EC34  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6686                           
  6687                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  6688   005B66  0E53               	movlw	83
  6689   005B68  EC22  F030         	call	_I2C_2_Master_Write
  6690                           
  6691                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  6692   005B6C  0E01               	movlw	1
  6693   005B6E  ECAE  F02E         	call	_I2C_2_Master_Read
  6694   005B72  6E07               	movwf	??_color_read_Green^0,c
  6695   005B74  5007               	movf	??_color_read_Green^0,w,c
  6696   005B76  6E0A               	movwf	color_read_Green@tmp^0,c
  6697   005B78  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6698                           
  6699                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6700   005B7A  0E00               	movlw	0
  6701   005B7C  ECAE  F02E         	call	_I2C_2_Master_Read
  6702   005B80  6E07               	movwf	??_color_read_Green^0,c
  6703   005B82  5007               	movf	??_color_read_Green^0,w,c
  6704   005B84  6E09               	movwf	(??_color_read_Green+2)^0,c
  6705   005B86  6A08               	clrf	(??_color_read_Green+1)^0,c
  6706   005B88  500A               	movf	color_read_Green@tmp^0,w,c
  6707   005B8A  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6708   005B8C  6E0A               	movwf	color_read_Green@tmp^0,c
  6709   005B8E  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6710   005B90  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6711   005B92  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6712                           
  6713                           ;color.c: 87:  I2C_2_Master_Stop();
  6714   005B94  EC39  F030         	call	_I2C_2_Master_Stop	;wreg free
  6715   005B98                     
  6716                           ;color.c: 88:  return tmp;
  6717   005B98  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6718   005B9C  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6719   005BA0  0012               	return		;funcret
  6720   005BA2                     __end_of_color_read_Green:
  6721                           	callstack 0
  6722                           
  6723 ;; *************** function _color_read_Blue *****************
  6724 ;; Defined at:
  6725 ;;		line 91 in file "color.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;		None
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;  tmp             2    9[COMRAM] unsigned int 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  2    4[COMRAM] unsigned int 
  6732 ;; Registers used:
  6733 ;;		wreg, status,2, status,0, cstack
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6740 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6741 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6742 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6743 ;;Total ram usage:        7 bytes
  6744 ;; Hardware stack levels used: 1
  6745 ;; Hardware stack levels required when called: 3
  6746 ;; This function calls:
  6747 ;;		_I2C_2_Master_Read
  6748 ;;		_I2C_2_Master_RepStart
  6749 ;;		_I2C_2_Master_Start
  6750 ;;		_I2C_2_Master_Stop
  6751 ;;		_I2C_2_Master_Write
  6752 ;; This function is called by:
  6753 ;;		_readColours
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text27
  6758   005BA2                     __ptext27:
  6759                           	callstack 0
  6760   005BA2                     _color_read_Blue:
  6761                           	callstack 26
  6762   005BA2                     
  6763                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  6764   005BA2  EC3E  F030         	call	_I2C_2_Master_Start	;wreg free
  6765                           
  6766                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  6767   005BA6  0E52               	movlw	82
  6768   005BA8  EC22  F030         	call	_I2C_2_Master_Write
  6769                           
  6770                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
  6771   005BAC  0EBA               	movlw	186
  6772   005BAE  EC22  F030         	call	_I2C_2_Master_Write
  6773                           
  6774                           ;color.c: 97:  I2C_2_Master_RepStart();
  6775   005BB2  EC34  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6776                           
  6777                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  6778   005BB6  0E53               	movlw	83
  6779   005BB8  EC22  F030         	call	_I2C_2_Master_Write
  6780                           
  6781                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  6782   005BBC  0E01               	movlw	1
  6783   005BBE  ECAE  F02E         	call	_I2C_2_Master_Read
  6784   005BC2  6E07               	movwf	??_color_read_Blue^0,c
  6785   005BC4  5007               	movf	??_color_read_Blue^0,w,c
  6786   005BC6  6E0A               	movwf	color_read_Blue@tmp^0,c
  6787   005BC8  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6788                           
  6789                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6790   005BCA  0E00               	movlw	0
  6791   005BCC  ECAE  F02E         	call	_I2C_2_Master_Read
  6792   005BD0  6E07               	movwf	??_color_read_Blue^0,c
  6793   005BD2  5007               	movf	??_color_read_Blue^0,w,c
  6794   005BD4  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6795   005BD6  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6796   005BD8  500A               	movf	color_read_Blue@tmp^0,w,c
  6797   005BDA  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6798   005BDC  6E0A               	movwf	color_read_Blue@tmp^0,c
  6799   005BDE  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6800   005BE0  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6801   005BE2  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6802                           
  6803                           ;color.c: 101:  I2C_2_Master_Stop();
  6804   005BE4  EC39  F030         	call	_I2C_2_Master_Stop	;wreg free
  6805   005BE8                     
  6806                           ;color.c: 102:  return tmp;
  6807   005BE8  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6808   005BEC  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6809   005BF0  0012               	return		;funcret
  6810   005BF2                     __end_of_color_read_Blue:
  6811                           	callstack 0
  6812                           
  6813 ;; *************** function _I2C_2_Master_RepStart *****************
  6814 ;; Defined at:
  6815 ;;		line 33 in file "i2c.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;		None
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;		None
  6820 ;; Return value:  Size  Location     Type
  6821 ;;                  1    wreg      void 
  6822 ;; Registers used:
  6823 ;;		wreg, status,2, status,0, cstack
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6833 ;;Total ram usage:        0 bytes
  6834 ;; Hardware stack levels used: 1
  6835 ;; Hardware stack levels required when called: 2
  6836 ;; This function calls:
  6837 ;;		_I2C_2_Master_Idle
  6838 ;; This function is called by:
  6839 ;;		_color_read_lum
  6840 ;;		_color_read_Red
  6841 ;;		_color_read_Green
  6842 ;;		_color_read_Blue
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           	psect	text28
  6847   006068                     __ptext28:
  6848                           	callstack 0
  6849   006068                     _I2C_2_Master_RepStart:
  6850                           	callstack 26
  6851   006068                     
  6852                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6853   006068  ECAD  F02F         	call	_I2C_2_Master_Idle	;wreg free
  6854   00606C                     
  6855                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6856   00606C  010E               	movlb	14	; () banked
  6857   00606E  83DA               	bsf	218,1,b	;volatile
  6858   006070                     
  6859                           ; BSR set to: 14
  6860   006070  0012               	return		;funcret
  6861   006072                     __end_of_I2C_2_Master_RepStart:
  6862                           	callstack 0
  6863                           
  6864 ;; *************** function _I2C_2_Master_Read *****************
  6865 ;; Defined at:
  6866 ;;		line 51 in file "i2c.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;  ack             1    wreg     unsigned char 
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;  ack             1    2[COMRAM] unsigned char 
  6871 ;;  tmp             1    3[COMRAM] unsigned char 
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  1    wreg      unsigned char 
  6874 ;; Registers used:
  6875 ;;		wreg, status,2, status,0, cstack
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6882 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6884 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6885 ;;Total ram usage:        3 bytes
  6886 ;; Hardware stack levels used: 1
  6887 ;; Hardware stack levels required when called: 2
  6888 ;; This function calls:
  6889 ;;		_I2C_2_Master_Idle
  6890 ;; This function is called by:
  6891 ;;		_color_read_lum
  6892 ;;		_color_read_Red
  6893 ;;		_color_read_Green
  6894 ;;		_color_read_Blue
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           	psect	text29
  6899   005D5C                     __ptext29:
  6900                           	callstack 0
  6901   005D5C                     _I2C_2_Master_Read:
  6902                           	callstack 26
  6903                           
  6904                           ; BSR set to: 14
  6905                           ;incstack = 0
  6906                           ;I2C_2_Master_Read@ack stored from wreg
  6907   005D5C  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6908   005D5E                     
  6909                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6910   005D5E  ECAD  F02F         	call	_I2C_2_Master_Idle	;wreg free
  6911   005D62                     
  6912                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6913   005D62  010E               	movlb	14	; () banked
  6914   005D64  87DA               	bsf	218,3,b	;volatile
  6915                           
  6916                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6917   005D66  ECAD  F02F         	call	_I2C_2_Master_Idle	;wreg free
  6918   005D6A                     
  6919                           ;i2c.c: 57:   tmp = SSP2BUF;
  6920   005D6A  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6921                           
  6922                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6923   005D6E  ECAD  F02F         	call	_I2C_2_Master_Idle	;wreg free
  6924   005D72                     
  6925                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6926   005D72  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6927   005D74  B4D8               	btfsc	status,2,c
  6928   005D76  EFBF  F02E         	goto	u4911
  6929   005D7A  EFC3  F02E         	goto	u4910
  6930   005D7E                     u4911:
  6931   005D7E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6932   005D80  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6933   005D82  EFC4  F02E         	goto	u4928
  6934   005D86                     u4910:
  6935   005D86  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6936   005D88                     u4928:
  6937   005D88  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6938   005D8A  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6939   005D8C  010E               	movlb	14	; () banked
  6940   005D8E  51DA               	movf	218,w,b	;volatile
  6941   005D90  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6942   005D92  0BDF               	andlw	-33
  6943   005D94  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6944   005D96  6FDA               	movwf	218,b	;volatile
  6945   005D98                     
  6946                           ; BSR set to: 14
  6947                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6948   005D98  89DA               	bsf	218,4,b	;volatile
  6949   005D9A                     
  6950                           ; BSR set to: 14
  6951                           ;i2c.c: 61:   return tmp;
  6952   005D9A  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6953   005D9C                     
  6954                           ; BSR set to: 14
  6955   005D9C  0012               	return		;funcret
  6956   005D9E                     __end_of_I2C_2_Master_Read:
  6957                           	callstack 0
  6958                           
  6959 ;; *************** function _initUSART4 *****************
  6960 ;; Defined at:
  6961 ;;		line 4 in file "serial.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;		None
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;		None
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  1    wreg      void 
  6968 ;; Registers used:
  6969 ;;		wreg, status,2
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6979 ;;Total ram usage:        0 bytes
  6980 ;; Hardware stack levels used: 1
  6981 ;; Hardware stack levels required when called: 1
  6982 ;; This function calls:
  6983 ;;		Nothing
  6984 ;; This function is called by:
  6985 ;;		_main
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text30
  6990   00600E                     __ptext30:
  6991                           	callstack 0
  6992   00600E                     _initUSART4:
  6993                           	callstack 29
  6994   00600E                     
  6995                           ;serial.c: 5:     RC0PPS = 0x12;
  6996   00600E  0E12               	movlw	18
  6997   006010  010E               	movlb	14	; () banked
  6998   006012  6F62               	movwf	98,b	;volatile
  6999                           
  7000                           ;serial.c: 6:     RX4PPS = 0x11;
  7001   006014  0E11               	movlw	17
  7002   006016  6F15               	movwf	21,b	;volatile
  7003   006018                     
  7004                           ; BSR set to: 14
  7005                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7006   006018  97E9               	bcf	233,3,b	;volatile
  7007   00601A                     
  7008                           ; BSR set to: 14
  7009                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7010   00601A  95E8               	bcf	232,2,b	;volatile
  7011                           
  7012                           ;serial.c: 9:     SP4BRGL = 51;
  7013   00601C  0E33               	movlw	51
  7014   00601E  6FE5               	movwf	229,b	;volatile
  7015                           
  7016                           ;serial.c: 10:     SP4BRGH = 0;
  7017   006020  0E00               	movlw	0
  7018   006022  6FE6               	movwf	230,b	;volatile
  7019   006024                     
  7020                           ; BSR set to: 14
  7021                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7022   006024  89E7               	bsf	231,4,b	;volatile
  7023   006026                     
  7024                           ; BSR set to: 14
  7025                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7026   006026  8BE8               	bsf	232,5,b	;volatile
  7027   006028                     
  7028                           ; BSR set to: 14
  7029                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7030   006028  8FE7               	bsf	231,7,b	;volatile
  7031   00602A                     
  7032                           ; BSR set to: 14
  7033   00602A  0012               	return		;funcret
  7034   00602C                     __end_of_initUSART4:
  7035                           	callstack 0
  7036                           
  7037 ;; *************** function _initDCmotorsPWM *****************
  7038 ;; Defined at:
  7039 ;;		line 7 in file "dc_motor.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;		None
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  1    wreg      void 
  7046 ;; Registers used:
  7047 ;;		wreg, status,2
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7056 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7057 ;;Total ram usage:        2 bytes
  7058 ;; Hardware stack levels used: 1
  7059 ;; Hardware stack levels required when called: 1
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_main
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           	psect	text31
  7068   0051F6                     __ptext31:
  7069                           	callstack 0
  7070   0051F6                     _initDCmotorsPWM:
  7071                           	callstack 29
  7072   0051F6                     
  7073                           ;dc_motor.c: 11:     RE2PPS=0x05;
  7074   0051F6  0E05               	movlw	5
  7075   0051F8  010E               	movlb	14	; () banked
  7076   0051FA  6F74               	movwf	116,b	;volatile
  7077                           
  7078                           ;dc_motor.c: 12:     RE4PPS=0x06;
  7079   0051FC  0E06               	movlw	6
  7080   0051FE  6F76               	movwf	118,b	;volatile
  7081                           
  7082                           ;dc_motor.c: 13:     RC7PPS=0x07;
  7083   005200  0E07               	movlw	7
  7084   005202  6F69               	movwf	105,b	;volatile
  7085                           
  7086                           ;dc_motor.c: 14:     RG6PPS=0x08;
  7087   005204  0E08               	movlw	8
  7088   005206  6F88               	movwf	136,b	;volatile
  7089   005208                     
  7090                           ; BSR set to: 14
  7091                           ;dc_motor.c: 17:     TRISEbits.TRISE2=0;
  7092   005208  9485               	bcf	133,2,c	;volatile
  7093   00520A                     
  7094                           ; BSR set to: 14
  7095                           ;dc_motor.c: 18:     TRISEbits.TRISE4=0;
  7096   00520A  9885               	bcf	133,4,c	;volatile
  7097   00520C                     
  7098                           ; BSR set to: 14
  7099                           ;dc_motor.c: 19:     TRISCbits.TRISC7=0;
  7100   00520C  9E83               	bcf	131,7,c	;volatile
  7101   00520E                     
  7102                           ; BSR set to: 14
  7103                           ;dc_motor.c: 20:     TRISGbits.TRISG6=0;
  7104   00520E  9C87               	bcf	135,6,c	;volatile
  7105                           
  7106                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b011;
  7107   005210  50BD               	movf	189,w,c	;volatile
  7108   005212  0B8F               	andlw	-113
  7109   005214  0930               	iorlw	48
  7110   005216  6EBD               	movwf	189,c	;volatile
  7111                           
  7112                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  7113   005218  0EE0               	movlw	-32
  7114   00521A  16BE               	andwf	190,f,c	;volatile
  7115                           
  7116                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  7117   00521C  50BF               	movf	191,w,c	;volatile
  7118   00521E  0BF0               	andlw	-16
  7119   005220  0901               	iorlw	1
  7120   005222  6EBF               	movwf	191,c	;volatile
  7121   005224                     
  7122                           ; BSR set to: 14
  7123                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  7124   005224  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7125   005228                     
  7126                           ; BSR set to: 14
  7127                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  7128   005228  8EBD               	bsf	189,7,c	;volatile
  7129                           
  7130                           ;dc_motor.c: 35:     CCPR1H=0;
  7131   00522A  0E00               	movlw	0
  7132   00522C  6EAA               	movwf	170,c	;volatile
  7133                           
  7134                           ;dc_motor.c: 36:     CCPR2H=0;
  7135   00522E  0E00               	movlw	0
  7136   005230  6EA6               	movwf	166,c	;volatile
  7137                           
  7138                           ;dc_motor.c: 37:     CCPR3H=0;
  7139   005232  0E00               	movlw	0
  7140   005234  010F               	movlb	15	; () banked
  7141   005236  6F25               	movwf	37,b	;volatile
  7142                           
  7143                           ;dc_motor.c: 38:     CCPR4H=0;
  7144   005238  0E00               	movlw	0
  7145   00523A  6F21               	movwf	33,b	;volatile
  7146                           
  7147                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  7148   00523C  0EFC               	movlw	-4
  7149   00523E  16AD               	andwf	173,f,c	;volatile
  7150                           
  7151                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  7152   005240  0EF3               	movlw	-13
  7153   005242  16AD               	andwf	173,f,c	;volatile
  7154                           
  7155                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  7156   005244  0ECF               	movlw	-49
  7157   005246  16AD               	andwf	173,f,c	;volatile
  7158                           
  7159                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  7160   005248  0E3F               	movlw	-193
  7161   00524A  16AD               	andwf	173,f,c	;volatile
  7162   00524C                     
  7163                           ; BSR set to: 15
  7164                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  7165   00524C  88AB               	bsf	171,4,c	;volatile
  7166                           
  7167                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  7168   00524E  50AB               	movf	171,w,c	;volatile
  7169   005250  0BF0               	andlw	-16
  7170   005252  090C               	iorlw	12
  7171   005254  6EAB               	movwf	171,c	;volatile
  7172   005256                     
  7173                           ; BSR set to: 15
  7174                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  7175   005256  8EAB               	bsf	171,7,c	;volatile
  7176   005258                     
  7177                           ; BSR set to: 15
  7178                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  7179   005258  88A7               	bsf	167,4,c	;volatile
  7180                           
  7181                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  7182   00525A  50A7               	movf	167,w,c	;volatile
  7183   00525C  0BF0               	andlw	-16
  7184   00525E  090C               	iorlw	12
  7185   005260  6EA7               	movwf	167,c	;volatile
  7186   005262                     
  7187                           ; BSR set to: 15
  7188                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  7189   005262  8EA7               	bsf	167,7,c	;volatile
  7190   005264                     
  7191                           ; BSR set to: 15
  7192                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  7193   005264  8926               	bsf	38,4,b	;volatile
  7194                           
  7195                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  7196   005266  5126               	movf	38,w,b	;volatile
  7197   005268  0BF0               	andlw	-16
  7198   00526A  090C               	iorlw	12
  7199   00526C  6F26               	movwf	38,b	;volatile
  7200   00526E                     
  7201                           ; BSR set to: 15
  7202                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  7203   00526E  8F26               	bsf	38,7,b	;volatile
  7204   005270                     
  7205                           ; BSR set to: 15
  7206                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  7207   005270  8922               	bsf	34,4,b	;volatile
  7208                           
  7209                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  7210   005272  5122               	movf	34,w,b	;volatile
  7211   005274  0BF0               	andlw	-16
  7212   005276  090C               	iorlw	12
  7213   005278  6F22               	movwf	34,b	;volatile
  7214   00527A                     
  7215                           ; BSR set to: 15
  7216                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  7217   00527A  8F22               	bsf	34,7,b	;volatile
  7218   00527C                     
  7219                           ; BSR set to: 15
  7220   00527C  0012               	return		;funcret
  7221   00527E                     __end_of_initDCmotorsPWM:
  7222                           	callstack 0
  7223                           
  7224 ;; *************** function _getTMR0val *****************
  7225 ;; Defined at:
  7226 ;;		line 28 in file "timers.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;		None
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;  moving          2    4[COMRAM] int 
  7231 ;;  temp            2    2[COMRAM] unsigned int 
  7232 ;; Return value:  Size  Location     Type
  7233 ;;                  1    wreg      void 
  7234 ;; Registers used:
  7235 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7236 ;; Tracked objects:
  7237 ;;		On entry : 0/0
  7238 ;;		On exit  : 0/0
  7239 ;;		Unchanged: 0/0
  7240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7242 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7243 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7244 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7245 ;;Total ram usage:        6 bytes
  7246 ;; Hardware stack levels used: 1
  7247 ;; Hardware stack levels required when called: 1
  7248 ;; This function calls:
  7249 ;;		Nothing
  7250 ;; This function is called by:
  7251 ;;		_main
  7252 ;; This function uses a non-reentrant model
  7253 ;;
  7254                           
  7255                           	psect	text32
  7256   0055A2                     __ptext32:
  7257                           	callstack 0
  7258   0055A2                     _getTMR0val:
  7259                           	callstack 29
  7260   0055A2                     
  7261                           ;timers.c: 30:     unsigned int temp= TMR0L;
  7262   0055A2  CFD3 F003          	movff	4051,getTMR0val@temp	;volatile
  7263   0055A6  6A04               	clrf	(getTMR0val@temp+1)^0,c
  7264   0055A8                     
  7265                           ;timers.c: 32:     int moving=(TMR0H<<8)|(temp&0xff);
  7266   0055A8  5003               	movf	getTMR0val@temp^0,w,c
  7267   0055AA  CFD4 F001          	movff	4052,??_getTMR0val	;volatile
  7268   0055AE  6A02               	clrf	(??_getTMR0val+1)^0,c
  7269   0055B0  C001  F002         	movff	??_getTMR0val,??_getTMR0val+1
  7270   0055B4  6A01               	clrf	??_getTMR0val^0,c
  7271   0055B6  1001               	iorwf	??_getTMR0val^0,w,c
  7272   0055B8  6E05               	movwf	getTMR0val@moving^0,c
  7273   0055BA  5002               	movf	(??_getTMR0val+1)^0,w,c
  7274   0055BC  6E06               	movwf	(getTMR0val@moving+1)^0,c
  7275                           
  7276                           ;timers.c: 33:     if (moving>1000){
  7277   0055BE  BE06               	btfsc	(getTMR0val@moving+1)^0,7,c
  7278   0055C0  EFEB  F02A         	goto	u5571
  7279   0055C4  0EE9               	movlw	233
  7280   0055C6  5C05               	subwf	getTMR0val@moving^0,w,c
  7281   0055C8  0E03               	movlw	3
  7282   0055CA  5806               	subwfb	(getTMR0val@moving+1)^0,w,c
  7283   0055CC  A0D8               	btfss	status,0,c
  7284   0055CE  EFEB  F02A         	goto	u5571
  7285   0055D2  EFED  F02A         	goto	u5570
  7286   0055D6                     u5571:
  7287   0055D6  EFF3  F02A         	goto	l5655
  7288   0055DA                     u5570:
  7289   0055DA                     
  7290                           ;timers.c: 34:         moving=moving-1000;
  7291   0055DA  0E18               	movlw	24
  7292   0055DC  2405               	addwf	getTMR0val@moving^0,w,c
  7293   0055DE  6E05               	movwf	getTMR0val@moving^0,c
  7294   0055E0  0EFC               	movlw	252
  7295   0055E2  2006               	addwfc	(getTMR0val@moving+1)^0,w,c
  7296   0055E4  6E06               	movwf	(getTMR0val@moving+1)^0,c
  7297   0055E6                     l5655:
  7298                           
  7299                           ;timers.c: 37:     Time_forward[move_count]=moving;
  7300   0055E6  90D8               	bcf	status,0,c
  7301   0055E8  0101               	movlb	1	; () banked
  7302   0055EA  35DA               	rlcf	_move_count& (0+255),w,b	;volatile
  7303   0055EC  6ED9               	movwf	fsr2l,c
  7304   0055EE  35DB               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  7305   0055F0  6EDA               	movwf	fsr2h,c
  7306   0055F2  0E3C               	movlw	low _Time_forward
  7307   0055F4  26D9               	addwf	fsr2l,f,c
  7308   0055F6  0E02               	movlw	high _Time_forward
  7309   0055F8  22DA               	addwfc	fsr2h,f,c
  7310   0055FA  C005  FFDE         	movff	getTMR0val@moving,postinc2
  7311   0055FE  C006  FFDD         	movff	getTMR0val@moving+1,postdec2
  7312   005602                     
  7313                           ; BSR set to: 1
  7314   005602  0012               	return		;funcret
  7315   005604                     __end_of_getTMR0val:
  7316                           	callstack 0
  7317                           
  7318 ;; *************** function _colour_rel *****************
  7319 ;; Defined at:
  7320 ;;		line 115 in file "color.c"
  7321 ;; Parameters:    Size  Location     Type
  7322 ;;  vals            2   74[COMRAM] PTR struct RGB
  7323 ;;		 -> vals(8), 
  7324 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  7325 ;;		 -> rel(12), 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;  B               4   20[BANK0 ] float 
  7328 ;;  G               4   16[BANK0 ] float 
  7329 ;;  R               4   12[BANK0 ] float 
  7330 ;;  L               4    0[BANK0 ] float 
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  1    wreg      void 
  7333 ;; Registers used:
  7334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7341 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7343 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7344 ;;Total ram usage:       28 bytes
  7345 ;; Hardware stack levels used: 1
  7346 ;; Hardware stack levels required when called: 2
  7347 ;; This function calls:
  7348 ;;		___fladd
  7349 ;;		___fldiv
  7350 ;;		___xxtofl
  7351 ;; This function is called by:
  7352 ;;		_main
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           	psect	text33
  7357   002EB0                     __ptext33:
  7358                           	callstack 0
  7359   002EB0                     _colour_rel:
  7360                           	callstack 28
  7361   002EB0                     
  7362                           ;color.c: 116:     float R = vals->R;
  7363   002EB0  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  7364   002EB4  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  7365   002EB8  CFDE F001          	movff	postinc2,___xxtofl@val
  7366   002EBC  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7367   002EC0  0E00               	movlw	0
  7368   002EC2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7369   002EC4  0EFF               	movlw	-1
  7370   002EC6  6E03               	movwf	(___xxtofl@val+2)^0,c
  7371   002EC8  6E04               	movwf	(___xxtofl@val+3)^0,c
  7372   002ECA  0E01               	movlw	1
  7373   002ECC  EC9A  F020         	call	___xxtofl
  7374   002ED0  C001  F06C         	movff	?___xxtofl,colour_rel@R
  7375   002ED4  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  7376   002ED8  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  7377   002EDC  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  7378                           
  7379                           ;color.c: 117:     float G = vals->G;
  7380   002EE0  EE20 F002          	lfsr	2,2
  7381   002EE4  504B               	movf	colour_rel@vals^0,w,c
  7382   002EE6  26D9               	addwf	fsr2l,f,c
  7383   002EE8  504C               	movf	(colour_rel@vals+1)^0,w,c
  7384   002EEA  22DA               	addwfc	fsr2h,f,c
  7385   002EEC  CFDE F001          	movff	postinc2,___xxtofl@val
  7386   002EF0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7387   002EF4  0E00               	movlw	0
  7388   002EF6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7389   002EF8  0EFF               	movlw	-1
  7390   002EFA  6E03               	movwf	(___xxtofl@val+2)^0,c
  7391   002EFC  6E04               	movwf	(___xxtofl@val+3)^0,c
  7392   002EFE  0E01               	movlw	1
  7393   002F00  EC9A  F020         	call	___xxtofl
  7394   002F04  C001  F070         	movff	?___xxtofl,colour_rel@G
  7395   002F08  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  7396   002F0C  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  7397   002F10  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  7398                           
  7399                           ;color.c: 118:     float B = vals->B;
  7400   002F14  EE20 F004          	lfsr	2,4
  7401   002F18  504B               	movf	colour_rel@vals^0,w,c
  7402   002F1A  26D9               	addwf	fsr2l,f,c
  7403   002F1C  504C               	movf	(colour_rel@vals+1)^0,w,c
  7404   002F1E  22DA               	addwfc	fsr2h,f,c
  7405   002F20  CFDE F001          	movff	postinc2,___xxtofl@val
  7406   002F24  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7407   002F28  0E00               	movlw	0
  7408   002F2A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7409   002F2C  0EFF               	movlw	-1
  7410   002F2E  6E03               	movwf	(___xxtofl@val+2)^0,c
  7411   002F30  6E04               	movwf	(___xxtofl@val+3)^0,c
  7412   002F32  0E01               	movlw	1
  7413   002F34  EC9A  F020         	call	___xxtofl
  7414   002F38  C001  F074         	movff	?___xxtofl,colour_rel@B
  7415   002F3C  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  7416   002F40  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  7417   002F44  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  7418                           
  7419                           ;color.c: 119:     float L = vals->L;
  7420   002F48  EE20 F006          	lfsr	2,6
  7421   002F4C  504B               	movf	colour_rel@vals^0,w,c
  7422   002F4E  26D9               	addwf	fsr2l,f,c
  7423   002F50  504C               	movf	(colour_rel@vals+1)^0,w,c
  7424   002F52  22DA               	addwfc	fsr2h,f,c
  7425   002F54  CFDE F001          	movff	postinc2,___xxtofl@val
  7426   002F58  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7427   002F5C  0E00               	movlw	0
  7428   002F5E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7429   002F60  0EFF               	movlw	-1
  7430   002F62  6E03               	movwf	(___xxtofl@val+2)^0,c
  7431   002F64  6E04               	movwf	(___xxtofl@val+3)^0,c
  7432   002F66  0E01               	movlw	1
  7433   002F68  EC9A  F020         	call	___xxtofl
  7434   002F6C  C001  F060         	movff	?___xxtofl,colour_rel@L
  7435   002F70  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  7436   002F74  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  7437   002F78  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  7438   002F7C                     
  7439                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7440   002F7C  C070  F005         	movff	colour_rel@G,___fladd@a
  7441   002F80  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7442   002F84  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7443   002F88  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7444   002F8C  C06C  F001         	movff	colour_rel@R,___fladd@b
  7445   002F90  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7446   002F94  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7447   002F98  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7448   002F9C  EC16  F011         	call	___fladd	;wreg free
  7449   002FA0  C001  F064         	movff	?___fladd,_colour_rel$3263
  7450   002FA4  C002  F065         	movff	?___fladd+1,_colour_rel$3263+1
  7451   002FA8  C003  F066         	movff	?___fladd+2,_colour_rel$3263+2
  7452   002FAC  C004  F067         	movff	?___fladd+3,_colour_rel$3263+3
  7453   002FB0                     
  7454                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7455   002FB0  C074  F005         	movff	colour_rel@B,___fladd@a
  7456   002FB4  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7457   002FB8  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7458   002FBC  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7459   002FC0  C064  F001         	movff	_colour_rel$3263,___fladd@b
  7460   002FC4  C065  F002         	movff	_colour_rel$3263+1,___fladd@b+1
  7461   002FC8  C066  F003         	movff	_colour_rel$3263+2,___fladd@b+2
  7462   002FCC  C067  F004         	movff	_colour_rel$3263+3,___fladd@b+3
  7463   002FD0  EC16  F011         	call	___fladd	;wreg free
  7464   002FD4  C001  F068         	movff	?___fladd,_colour_rel$3264
  7465   002FD8  C002  F069         	movff	?___fladd+1,_colour_rel$3264+1
  7466   002FDC  C003  F06A         	movff	?___fladd+2,_colour_rel$3264+2
  7467   002FE0  C004  F06B         	movff	?___fladd+3,_colour_rel$3264+3
  7468                           
  7469                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7470   002FE4  C06C  F032         	movff	colour_rel@R,___fldiv@b
  7471   002FE8  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  7472   002FEC  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  7473   002FF0  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  7474   002FF4  C060  F005         	movff	colour_rel@L,___fladd@a
  7475   002FF8  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7476   002FFC  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7477   003000  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7478   003004  C068  F001         	movff	_colour_rel$3264,___fladd@b
  7479   003008  C069  F002         	movff	_colour_rel$3264+1,___fladd@b+1
  7480   00300C  C06A  F003         	movff	_colour_rel$3264+2,___fladd@b+2
  7481   003010  C06B  F004         	movff	_colour_rel$3264+3,___fladd@b+3
  7482   003014  EC16  F011         	call	___fladd	;wreg free
  7483   003018  C001  F036         	movff	?___fladd,___fldiv@a
  7484   00301C  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7485   003020  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7486   003024  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7487   003028  EC8B  F015         	call	___fldiv	;wreg free
  7488   00302C  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  7489   003030  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  7490   003034  C032  FFDE         	movff	?___fldiv,postinc2
  7491   003038  C033  FFDE         	movff	?___fldiv+1,postinc2
  7492   00303C  C034  FFDE         	movff	?___fldiv+2,postinc2
  7493   003040  C035  FFDE         	movff	?___fldiv+3,postinc2
  7494   003044                     
  7495                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7496   003044  C070  F005         	movff	colour_rel@G,___fladd@a
  7497   003048  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7498   00304C  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7499   003050  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7500   003054  C06C  F001         	movff	colour_rel@R,___fladd@b
  7501   003058  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7502   00305C  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7503   003060  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7504   003064  EC16  F011         	call	___fladd	;wreg free
  7505   003068  C001  F064         	movff	?___fladd,_colour_rel$3263
  7506   00306C  C002  F065         	movff	?___fladd+1,_colour_rel$3263+1
  7507   003070  C003  F066         	movff	?___fladd+2,_colour_rel$3263+2
  7508   003074  C004  F067         	movff	?___fladd+3,_colour_rel$3263+3
  7509   003078                     
  7510                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7511   003078  C074  F005         	movff	colour_rel@B,___fladd@a
  7512   00307C  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7513   003080  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7514   003084  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7515   003088  C064  F001         	movff	_colour_rel$3263,___fladd@b
  7516   00308C  C065  F002         	movff	_colour_rel$3263+1,___fladd@b+1
  7517   003090  C066  F003         	movff	_colour_rel$3263+2,___fladd@b+2
  7518   003094  C067  F004         	movff	_colour_rel$3263+3,___fladd@b+3
  7519   003098  EC16  F011         	call	___fladd	;wreg free
  7520   00309C  C001  F068         	movff	?___fladd,_colour_rel$3264
  7521   0030A0  C002  F069         	movff	?___fladd+1,_colour_rel$3264+1
  7522   0030A4  C003  F06A         	movff	?___fladd+2,_colour_rel$3264+2
  7523   0030A8  C004  F06B         	movff	?___fladd+3,_colour_rel$3264+3
  7524                           
  7525                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7526   0030AC  C074  F032         	movff	colour_rel@B,___fldiv@b
  7527   0030B0  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  7528   0030B4  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  7529   0030B8  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  7530   0030BC  C060  F005         	movff	colour_rel@L,___fladd@a
  7531   0030C0  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7532   0030C4  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7533   0030C8  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7534   0030CC  C068  F001         	movff	_colour_rel$3264,___fladd@b
  7535   0030D0  C069  F002         	movff	_colour_rel$3264+1,___fladd@b+1
  7536   0030D4  C06A  F003         	movff	_colour_rel$3264+2,___fladd@b+2
  7537   0030D8  C06B  F004         	movff	_colour_rel$3264+3,___fladd@b+3
  7538   0030DC  EC16  F011         	call	___fladd	;wreg free
  7539   0030E0  C001  F036         	movff	?___fladd,___fldiv@a
  7540   0030E4  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7541   0030E8  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7542   0030EC  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7543   0030F0  EC8B  F015         	call	___fldiv	;wreg free
  7544   0030F4  EE20 F008          	lfsr	2,8
  7545   0030F8  504D               	movf	colour_rel@rel^0,w,c
  7546   0030FA  26D9               	addwf	fsr2l,f,c
  7547   0030FC  504E               	movf	(colour_rel@rel+1)^0,w,c
  7548   0030FE  22DA               	addwfc	fsr2h,f,c
  7549   003100  C032  FFDE         	movff	?___fldiv,postinc2
  7550   003104  C033  FFDE         	movff	?___fldiv+1,postinc2
  7551   003108  C034  FFDE         	movff	?___fldiv+2,postinc2
  7552   00310C  C035  FFDE         	movff	?___fldiv+3,postinc2
  7553   003110                     
  7554                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7555   003110  C070  F005         	movff	colour_rel@G,___fladd@a
  7556   003114  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7557   003118  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7558   00311C  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7559   003120  C06C  F001         	movff	colour_rel@R,___fladd@b
  7560   003124  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7561   003128  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7562   00312C  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7563   003130  EC16  F011         	call	___fladd	;wreg free
  7564   003134  C001  F064         	movff	?___fladd,_colour_rel$3263
  7565   003138  C002  F065         	movff	?___fladd+1,_colour_rel$3263+1
  7566   00313C  C003  F066         	movff	?___fladd+2,_colour_rel$3263+2
  7567   003140  C004  F067         	movff	?___fladd+3,_colour_rel$3263+3
  7568   003144                     
  7569                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7570   003144  C074  F005         	movff	colour_rel@B,___fladd@a
  7571   003148  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7572   00314C  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7573   003150  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7574   003154  C064  F001         	movff	_colour_rel$3263,___fladd@b
  7575   003158  C065  F002         	movff	_colour_rel$3263+1,___fladd@b+1
  7576   00315C  C066  F003         	movff	_colour_rel$3263+2,___fladd@b+2
  7577   003160  C067  F004         	movff	_colour_rel$3263+3,___fladd@b+3
  7578   003164  EC16  F011         	call	___fladd	;wreg free
  7579   003168  C001  F068         	movff	?___fladd,_colour_rel$3264
  7580   00316C  C002  F069         	movff	?___fladd+1,_colour_rel$3264+1
  7581   003170  C003  F06A         	movff	?___fladd+2,_colour_rel$3264+2
  7582   003174  C004  F06B         	movff	?___fladd+3,_colour_rel$3264+3
  7583                           
  7584                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7585   003178  C070  F032         	movff	colour_rel@G,___fldiv@b
  7586   00317C  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  7587   003180  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  7588   003184  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  7589   003188  C060  F005         	movff	colour_rel@L,___fladd@a
  7590   00318C  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7591   003190  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7592   003194  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7593   003198  C068  F001         	movff	_colour_rel$3264,___fladd@b
  7594   00319C  C069  F002         	movff	_colour_rel$3264+1,___fladd@b+1
  7595   0031A0  C06A  F003         	movff	_colour_rel$3264+2,___fladd@b+2
  7596   0031A4  C06B  F004         	movff	_colour_rel$3264+3,___fladd@b+3
  7597   0031A8  EC16  F011         	call	___fladd	;wreg free
  7598   0031AC  C001  F036         	movff	?___fladd,___fldiv@a
  7599   0031B0  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7600   0031B4  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7601   0031B8  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7602   0031BC  EC8B  F015         	call	___fldiv	;wreg free
  7603   0031C0  EE20 F004          	lfsr	2,4
  7604   0031C4  504D               	movf	colour_rel@rel^0,w,c
  7605   0031C6  26D9               	addwf	fsr2l,f,c
  7606   0031C8  504E               	movf	(colour_rel@rel+1)^0,w,c
  7607   0031CA  22DA               	addwfc	fsr2h,f,c
  7608   0031CC  C032  FFDE         	movff	?___fldiv,postinc2
  7609   0031D0  C033  FFDE         	movff	?___fldiv+1,postinc2
  7610   0031D4  C034  FFDE         	movff	?___fldiv+2,postinc2
  7611   0031D8  C035  FFDE         	movff	?___fldiv+3,postinc2
  7612   0031DC  0012               	return		;funcret
  7613   0031DE                     __end_of_colour_rel:
  7614                           	callstack 0
  7615                           
  7616 ;; *************** function _colour_move *****************
  7617 ;; Defined at:
  7618 ;;		line 8 in file "colour_move.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;  recognized_c    2   44[COMRAM] int 
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;		None
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  1    wreg      void 
  7625 ;; Registers used:
  7626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7636 ;;Total ram usage:        2 bytes
  7637 ;; Hardware stack levels used: 1
  7638 ;; Hardware stack levels required when called: 7
  7639 ;; This function calls:
  7640 ;;		_BlueMove
  7641 ;;		_GreenMove
  7642 ;;		_LightBlueMove
  7643 ;;		_OrangeMove
  7644 ;;		_PinkMove
  7645 ;;		_RedMove
  7646 ;;		_RetryMove
  7647 ;;		_YellowMove
  7648 ;;		_go_Home
  7649 ;; This function is called by:
  7650 ;;		_main
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text34
  7655   003A56                     __ptext34:
  7656                           	callstack 0
  7657   003A56                     _colour_move:
  7658                           	callstack 23
  7659   003A56                     
  7660                           ;colour_move.c: 8: void colour_move (int recognized_colour);colour_move.c: 9: {;colour_m
      +                          ove.c: 12:     if (recognized_colour==1){
  7661   003A56  042D               	decf	colour_move@recognized_colour^0,w,c
  7662   003A58  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7663   003A5A  A4D8               	btfss	status,2,c
  7664   003A5C  EF32  F01D         	goto	u5581
  7665   003A60  EF34  F01D         	goto	u5580
  7666   003A64                     u5581:
  7667   003A64  EF52  F01D         	goto	l5687
  7668   003A68                     u5580:
  7669   003A68                     
  7670                           ;colour_move.c: 13:         RedMove(&motorL, &motorR);
  7671   003A68  0E61               	movlw	low _motorL
  7672   003A6A  6E20               	movwf	RedMove@mL^0,c
  7673   003A6C  0E01               	movlw	high _motorL
  7674   003A6E  6E21               	movwf	(RedMove@mL+1)^0,c
  7675   003A70  0E58               	movlw	low _motorR
  7676   003A72  6E22               	movwf	RedMove@mR^0,c
  7677   003A74  0E01               	movlw	high _motorR
  7678   003A76  6E23               	movwf	(RedMove@mR+1)^0,c
  7679   003A78  ECEF  F02E         	call	_RedMove	;wreg free
  7680   003A7C                     
  7681                           ;colour_move.c: 14:         TMR0H=0;
  7682   003A7C  0E00               	movlw	0
  7683   003A7E  6ED4               	movwf	212,c	;volatile
  7684   003A80                     
  7685                           ;colour_move.c: 15:         TMR0L=0;
  7686   003A80  0E00               	movlw	0
  7687   003A82  6ED3               	movwf	211,c	;volatile
  7688   003A84                     
  7689                           ;colour_move.c: 16:         WayBack[move_count]=1;
  7690   003A84  0E1A               	movlw	low _WayBack
  7691   003A86  0101               	movlb	1	; () banked
  7692   003A88  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7693   003A8A  6ED9               	movwf	fsr2l,c
  7694   003A8C  0E01               	movlw	high _WayBack
  7695   003A8E  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7696   003A90  6EDA               	movwf	fsr2h,c
  7697   003A92  0E01               	movlw	1
  7698   003A94  6EDF               	movwf	indf2,c
  7699   003A96                     l5685:
  7700                           
  7701                           ; BSR set to: 1
  7702                           ;colour_move.c: 17:         lost_count=0;
  7703   003A96  0E00               	movlw	0
  7704   003A98  0100               	movlb	0	; () banked
  7705   003A9A  6FEC               	movwf	(_lost_count+1)& (0+255),b
  7706   003A9C  0E00               	movlw	0
  7707   003A9E  6FEB               	movwf	_lost_count& (0+255),b
  7708                           
  7709                           ;colour_move.c: 18:     }
  7710   003AA0  EF66  F01E         	goto	l745
  7711   003AA4                     l5687:
  7712   003AA4  0E02               	movlw	2
  7713   003AA6  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7714   003AA8  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7715   003AAA  A4D8               	btfss	status,2,c
  7716   003AAC  EF5A  F01D         	goto	u5591
  7717   003AB0  EF5C  F01D         	goto	u5590
  7718   003AB4                     u5591:
  7719   003AB4  EF75  F01D         	goto	l5699
  7720   003AB8                     u5590:
  7721   003AB8                     
  7722                           ;colour_move.c: 20:         OrangeMove(&motorL, &motorR);
  7723   003AB8  0E61               	movlw	low _motorL
  7724   003ABA  6E20               	movwf	OrangeMove@mL^0,c
  7725   003ABC  0E01               	movlw	high _motorL
  7726   003ABE  6E21               	movwf	(OrangeMove@mL+1)^0,c
  7727   003AC0  0E58               	movlw	low _motorR
  7728   003AC2  6E22               	movwf	OrangeMove@mR^0,c
  7729   003AC4  0E01               	movlw	high _motorR
  7730   003AC6  6E23               	movwf	(OrangeMove@mR+1)^0,c
  7731   003AC8  EC64  F02C         	call	_OrangeMove	;wreg free
  7732   003ACC                     
  7733                           ;colour_move.c: 21:         TMR0H=0;
  7734   003ACC  0E00               	movlw	0
  7735   003ACE  6ED4               	movwf	212,c	;volatile
  7736   003AD0                     
  7737                           ;colour_move.c: 22:         TMR0L=0;
  7738   003AD0  0E00               	movlw	0
  7739   003AD2  6ED3               	movwf	211,c	;volatile
  7740   003AD4                     
  7741                           ;colour_move.c: 23:         WayBack[move_count]=2;
  7742   003AD4  0E1A               	movlw	low _WayBack
  7743   003AD6  0101               	movlb	1	; () banked
  7744   003AD8  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7745   003ADA  6ED9               	movwf	fsr2l,c
  7746   003ADC  0E01               	movlw	high _WayBack
  7747   003ADE  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7748   003AE0  6EDA               	movwf	fsr2h,c
  7749   003AE2  0E02               	movlw	2
  7750   003AE4  6EDF               	movwf	indf2,c
  7751   003AE6  EF4B  F01D         	goto	l5685
  7752   003AEA                     l5699:
  7753   003AEA  0E03               	movlw	3
  7754   003AEC  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7755   003AEE  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7756   003AF0  A4D8               	btfss	status,2,c
  7757   003AF2  EF7D  F01D         	goto	u5601
  7758   003AF6  EF7F  F01D         	goto	u5600
  7759   003AFA                     u5601:
  7760   003AFA  EF98  F01D         	goto	l5711
  7761   003AFE                     u5600:
  7762   003AFE                     
  7763                           ;colour_move.c: 27:         YellowMove(&motorL, &motorR);
  7764   003AFE  0E61               	movlw	low _motorL
  7765   003B00  6E20               	movwf	YellowMove@mL^0,c
  7766   003B02  0E01               	movlw	high _motorL
  7767   003B04  6E21               	movwf	(YellowMove@mL+1)^0,c
  7768   003B06  0E58               	movlw	low _motorR
  7769   003B08  6E22               	movwf	YellowMove@mR^0,c
  7770   003B0A  0E01               	movlw	high _motorR
  7771   003B0C  6E23               	movwf	(YellowMove@mR+1)^0,c
  7772   003B0E  ECB6  F02C         	call	_YellowMove	;wreg free
  7773   003B12                     
  7774                           ;colour_move.c: 28:         TMR0H=0;
  7775   003B12  0E00               	movlw	0
  7776   003B14  6ED4               	movwf	212,c	;volatile
  7777   003B16                     
  7778                           ;colour_move.c: 29:         TMR0L=0;
  7779   003B16  0E00               	movlw	0
  7780   003B18  6ED3               	movwf	211,c	;volatile
  7781   003B1A                     
  7782                           ;colour_move.c: 30:         WayBack[move_count]=3;
  7783   003B1A  0E1A               	movlw	low _WayBack
  7784   003B1C  0101               	movlb	1	; () banked
  7785   003B1E  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7786   003B20  6ED9               	movwf	fsr2l,c
  7787   003B22  0E01               	movlw	high _WayBack
  7788   003B24  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7789   003B26  6EDA               	movwf	fsr2h,c
  7790   003B28  0E03               	movlw	3
  7791   003B2A  6EDF               	movwf	indf2,c
  7792   003B2C  EF4B  F01D         	goto	l5685
  7793   003B30                     l5711:
  7794   003B30  0E04               	movlw	4
  7795   003B32  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7796   003B34  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7797   003B36  A4D8               	btfss	status,2,c
  7798   003B38  EFA0  F01D         	goto	u5611
  7799   003B3C  EFA2  F01D         	goto	u5610
  7800   003B40                     u5611:
  7801   003B40  EFBB  F01D         	goto	l5723
  7802   003B44                     u5610:
  7803   003B44                     
  7804                           ;colour_move.c: 34:         BlueMove(&motorL, &motorR);
  7805   003B44  0E61               	movlw	low _motorL
  7806   003B46  6E20               	movwf	BlueMove@mL^0,c
  7807   003B48  0E01               	movlw	high _motorL
  7808   003B4A  6E21               	movwf	(BlueMove@mL+1)^0,c
  7809   003B4C  0E58               	movlw	low _motorR
  7810   003B4E  6E22               	movwf	BlueMove@mR^0,c
  7811   003B50  0E01               	movlw	high _motorR
  7812   003B52  6E23               	movwf	(BlueMove@mR+1)^0,c
  7813   003B54  ECBB  F029         	call	_BlueMove	;wreg free
  7814   003B58                     
  7815                           ;colour_move.c: 35:         TMR0H=0;
  7816   003B58  0E00               	movlw	0
  7817   003B5A  6ED4               	movwf	212,c	;volatile
  7818   003B5C                     
  7819                           ;colour_move.c: 36:         TMR0L=0;
  7820   003B5C  0E00               	movlw	0
  7821   003B5E  6ED3               	movwf	211,c	;volatile
  7822   003B60                     
  7823                           ;colour_move.c: 37:         WayBack[move_count]=4;
  7824   003B60  0E1A               	movlw	low _WayBack
  7825   003B62  0101               	movlb	1	; () banked
  7826   003B64  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7827   003B66  6ED9               	movwf	fsr2l,c
  7828   003B68  0E01               	movlw	high _WayBack
  7829   003B6A  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7830   003B6C  6EDA               	movwf	fsr2h,c
  7831   003B6E  0E04               	movlw	4
  7832   003B70  6EDF               	movwf	indf2,c
  7833   003B72  EF4B  F01D         	goto	l5685
  7834   003B76                     l5723:
  7835   003B76  0E05               	movlw	5
  7836   003B78  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7837   003B7A  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7838   003B7C  A4D8               	btfss	status,2,c
  7839   003B7E  EFC3  F01D         	goto	u5621
  7840   003B82  EFC5  F01D         	goto	u5620
  7841   003B86                     u5621:
  7842   003B86  EFDE  F01D         	goto	l5735
  7843   003B8A                     u5620:
  7844   003B8A                     
  7845                           ;colour_move.c: 41:         GreenMove(&motorL, &motorR);
  7846   003B8A  0E61               	movlw	low _motorL
  7847   003B8C  6E20               	movwf	GreenMove@mL^0,c
  7848   003B8E  0E01               	movlw	high _motorL
  7849   003B90  6E21               	movwf	(GreenMove@mL+1)^0,c
  7850   003B92  0E58               	movlw	low _motorR
  7851   003B94  6E22               	movwf	GreenMove@mR^0,c
  7852   003B96  0E01               	movlw	high _motorR
  7853   003B98  6E23               	movwf	(GreenMove@mR+1)^0,c
  7854   003B9A  EC0E  F02F         	call	_GreenMove	;wreg free
  7855   003B9E                     
  7856                           ;colour_move.c: 42:         TMR0H=0;
  7857   003B9E  0E00               	movlw	0
  7858   003BA0  6ED4               	movwf	212,c	;volatile
  7859   003BA2                     
  7860                           ;colour_move.c: 43:         TMR0L=0;
  7861   003BA2  0E00               	movlw	0
  7862   003BA4  6ED3               	movwf	211,c	;volatile
  7863   003BA6                     
  7864                           ;colour_move.c: 44:         WayBack[move_count]=5;
  7865   003BA6  0E1A               	movlw	low _WayBack
  7866   003BA8  0101               	movlb	1	; () banked
  7867   003BAA  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7868   003BAC  6ED9               	movwf	fsr2l,c
  7869   003BAE  0E01               	movlw	high _WayBack
  7870   003BB0  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7871   003BB2  6EDA               	movwf	fsr2h,c
  7872   003BB4  0E05               	movlw	5
  7873   003BB6  6EDF               	movwf	indf2,c
  7874   003BB8  EF4B  F01D         	goto	l5685
  7875   003BBC                     l5735:
  7876   003BBC  0E06               	movlw	6
  7877   003BBE  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7878   003BC0  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7879   003BC2  A4D8               	btfss	status,2,c
  7880   003BC4  EFE6  F01D         	goto	u5631
  7881   003BC8  EFE8  F01D         	goto	u5630
  7882   003BCC                     u5631:
  7883   003BCC  EF01  F01E         	goto	l5747
  7884   003BD0                     u5630:
  7885   003BD0                     
  7886                           ;colour_move.c: 48:         LightBlueMove(&motorL, &motorR);
  7887   003BD0  0E61               	movlw	low _motorL
  7888   003BD2  6E20               	movwf	LightBlueMove@mL^0,c
  7889   003BD4  0E01               	movlw	high _motorL
  7890   003BD6  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7891   003BD8  0E58               	movlw	low _motorR
  7892   003BDA  6E22               	movwf	LightBlueMove@mR^0,c
  7893   003BDC  0E01               	movlw	high _motorR
  7894   003BDE  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7895   003BE0  EC8D  F02C         	call	_LightBlueMove	;wreg free
  7896   003BE4                     
  7897                           ;colour_move.c: 49:         TMR0H=0;
  7898   003BE4  0E00               	movlw	0
  7899   003BE6  6ED4               	movwf	212,c	;volatile
  7900   003BE8                     
  7901                           ;colour_move.c: 50:         TMR0L=0;
  7902   003BE8  0E00               	movlw	0
  7903   003BEA  6ED3               	movwf	211,c	;volatile
  7904   003BEC                     
  7905                           ;colour_move.c: 51:         WayBack[move_count]=6;
  7906   003BEC  0E1A               	movlw	low _WayBack
  7907   003BEE  0101               	movlb	1	; () banked
  7908   003BF0  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7909   003BF2  6ED9               	movwf	fsr2l,c
  7910   003BF4  0E01               	movlw	high _WayBack
  7911   003BF6  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7912   003BF8  6EDA               	movwf	fsr2h,c
  7913   003BFA  0E06               	movlw	6
  7914   003BFC  6EDF               	movwf	indf2,c
  7915   003BFE  EF4B  F01D         	goto	l5685
  7916   003C02                     l5747:
  7917   003C02  0E07               	movlw	7
  7918   003C04  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7919   003C06  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7920   003C08  A4D8               	btfss	status,2,c
  7921   003C0A  EF09  F01E         	goto	u5641
  7922   003C0E  EF0B  F01E         	goto	u5640
  7923   003C12                     u5641:
  7924   003C12  EF24  F01E         	goto	l5759
  7925   003C16                     u5640:
  7926   003C16                     
  7927                           ;colour_move.c: 55:         PinkMove(&motorL, &motorR);
  7928   003C16  0E61               	movlw	low _motorL
  7929   003C18  6E20               	movwf	PinkMove@mL^0,c
  7930   003C1A  0E01               	movlw	high _motorL
  7931   003C1C  6E21               	movwf	(PinkMove@mL+1)^0,c
  7932   003C1E  0E58               	movlw	low _motorR
  7933   003C20  6E22               	movwf	PinkMove@mR^0,c
  7934   003C22  0E01               	movlw	high _motorR
  7935   003C24  6E23               	movwf	(PinkMove@mR+1)^0,c
  7936   003C26  ECDF  F02C         	call	_PinkMove	;wreg free
  7937   003C2A                     
  7938                           ;colour_move.c: 56:         TMR0H=0;
  7939   003C2A  0E00               	movlw	0
  7940   003C2C  6ED4               	movwf	212,c	;volatile
  7941   003C2E                     
  7942                           ;colour_move.c: 57:         TMR0L=0;
  7943   003C2E  0E00               	movlw	0
  7944   003C30  6ED3               	movwf	211,c	;volatile
  7945   003C32                     
  7946                           ;colour_move.c: 58:         WayBack[move_count]=7;
  7947   003C32  0E1A               	movlw	low _WayBack
  7948   003C34  0101               	movlb	1	; () banked
  7949   003C36  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7950   003C38  6ED9               	movwf	fsr2l,c
  7951   003C3A  0E01               	movlw	high _WayBack
  7952   003C3C  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7953   003C3E  6EDA               	movwf	fsr2h,c
  7954   003C40  0E07               	movlw	7
  7955   003C42  6EDF               	movwf	indf2,c
  7956   003C44  EF4B  F01D         	goto	l5685
  7957   003C48                     l5759:
  7958   003C48  0E0A               	movlw	10
  7959   003C4A  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7960   003C4C  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7961   003C4E  A4D8               	btfss	status,2,c
  7962   003C50  EF2C  F01E         	goto	u5651
  7963   003C54  EF2E  F01E         	goto	u5650
  7964   003C58                     u5651:
  7965   003C58  EF5B  F01E         	goto	l5773
  7966   003C5C                     u5650:
  7967   003C5C                     
  7968                           ;colour_move.c: 62:         lost_count++;
  7969   003C5C  0100               	movlb	0	; () banked
  7970   003C5E  4BEB               	infsnz	_lost_count& (0+255),f,b
  7971   003C60  2BEC               	incf	(_lost_count+1)& (0+255),f,b
  7972   003C62                     
  7973                           ; BSR set to: 0
  7974                           ;colour_move.c: 63:         if (lost_count>=3){
  7975   003C62  BFEC               	btfsc	(_lost_count+1)& (0+255),7,b
  7976   003C64  EF3D  F01E         	goto	u5661
  7977   003C68  51EC               	movf	(_lost_count+1)& (0+255),w,b
  7978   003C6A  E109               	bnz	u5660
  7979   003C6C  0E03               	movlw	3
  7980   003C6E  5DEB               	subwf	_lost_count& (0+255),w,b
  7981   003C70  A0D8               	btfss	status,0,c
  7982   003C72  EF3D  F01E         	goto	u5661
  7983   003C76  EF3F  F01E         	goto	u5660
  7984   003C7A                     u5661:
  7985   003C7A  EF4B  F01E         	goto	l5767
  7986   003C7E                     u5660:
  7987   003C7E                     l5765:
  7988                           
  7989                           ;colour_move.c: 64:             go_Home(WayBack, Time_forward);
  7990   003C7E  0E1A               	movlw	low _WayBack
  7991   003C80  6E24               	movwf	go_Home@WayBack^0,c
  7992   003C82  0E01               	movlw	high _WayBack
  7993   003C84  6E25               	movwf	(go_Home@WayBack+1)^0,c
  7994   003C86  0E3C               	movlw	low _Time_forward
  7995   003C88  6E26               	movwf	go_Home@Time_forward^0,c
  7996   003C8A  0E02               	movlw	high _Time_forward
  7997   003C8C  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  7998   003C8E  EC67  F01E         	call	_go_Home	;wreg free
  7999                           
  8000                           ;colour_move.c: 65:         }
  8001   003C92  EF66  F01E         	goto	l745
  8002   003C96                     l5767:
  8003                           
  8004                           ; BSR set to: 0
  8005                           ;colour_move.c: 67:             RetryMove(&motorL, &motorR);
  8006   003C96  0E61               	movlw	low _motorL
  8007   003C98  6E20               	movwf	RetryMove@mL^0,c
  8008   003C9A  0E01               	movlw	high _motorL
  8009   003C9C  6E21               	movwf	(RetryMove@mL+1)^0,c
  8010   003C9E  0E58               	movlw	low _motorR
  8011   003CA0  6E22               	movwf	RetryMove@mR^0,c
  8012   003CA2  0E01               	movlw	high _motorR
  8013   003CA4  6E23               	movwf	(RetryMove@mR+1)^0,c
  8014   003CA6  EC69  F02A         	call	_RetryMove	;wreg free
  8015   003CAA                     
  8016                           ;colour_move.c: 68:             TMR0H=0;
  8017   003CAA  0E00               	movlw	0
  8018   003CAC  6ED4               	movwf	212,c	;volatile
  8019   003CAE                     
  8020                           ;colour_move.c: 69:             TMR0L=0;
  8021   003CAE  0E00               	movlw	0
  8022   003CB0  6ED3               	movwf	211,c	;volatile
  8023   003CB2  EF66  F01E         	goto	l745
  8024   003CB6                     l5773:
  8025   003CB6  502D               	movf	colour_move@recognized_colour^0,w,c
  8026   003CB8  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  8027   003CBA  A4D8               	btfss	status,2,c
  8028   003CBC  EF62  F01E         	goto	u5671
  8029   003CC0  EF64  F01E         	goto	u5670
  8030   003CC4                     u5671:
  8031   003CC4  EF66  F01E         	goto	l737
  8032   003CC8                     u5670:
  8033   003CC8  EF3F  F01E         	goto	l5765
  8034   003CCC                     l737:
  8035   003CCC                     l745:
  8036   003CCC  0012               	return		;funcret
  8037   003CCE                     __end_of_colour_move:
  8038                           	callstack 0
  8039                           
  8040 ;; *************** function _go_Home *****************
  8041 ;; Defined at:
  8042 ;;		line 4 in file "Memory.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  8045 ;;		 -> WayBack(50), 
  8046 ;;  Time_forward    2   37[COMRAM] PTR int 
  8047 ;;		 -> Time_forward(100), 
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;  i               2   42[COMRAM] int 
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      void 
  8052 ;; Registers used:
  8053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8059 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8061 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8062 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8063 ;;Total ram usage:        9 bytes
  8064 ;; Hardware stack levels used: 1
  8065 ;; Hardware stack levels required when called: 6
  8066 ;; This function calls:
  8067 ;;		_BlueMove
  8068 ;;		_GreenMove
  8069 ;;		_LightBlueMove
  8070 ;;		_OrangeMove
  8071 ;;		_RedMove
  8072 ;;		_ReversePink
  8073 ;;		_ReverseYellow
  8074 ;;		_stop
  8075 ;;		_timed_forward
  8076 ;; This function is called by:
  8077 ;;		_main
  8078 ;;		_colour_move
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text35
  8083   003CCE                     __ptext35:
  8084                           	callstack 0
  8085   003CCE                     _go_Home:
  8086                           	callstack 24
  8087   003CCE                     
  8088                           ;Memory.c: 5:     int i;;Memory.c: 6:     BlueMove(&motorL, &motorR);
  8089   003CCE  0E61               	movlw	low _motorL
  8090   003CD0  6E20               	movwf	BlueMove@mL^0,c
  8091   003CD2  0E01               	movlw	high _motorL
  8092   003CD4  6E21               	movwf	(BlueMove@mL+1)^0,c
  8093   003CD6  0E58               	movlw	low _motorR
  8094   003CD8  6E22               	movwf	BlueMove@mR^0,c
  8095   003CDA  0E01               	movlw	high _motorR
  8096   003CDC  6E23               	movwf	(BlueMove@mR+1)^0,c
  8097   003CDE  ECBB  F029         	call	_BlueMove	;wreg free
  8098   003CE2                     
  8099                           ;Memory.c: 7:     T0CON0bits.T0EN=0;
  8100   003CE2  9ED5               	bcf	213,7,c	;volatile
  8101   003CE4                     
  8102                           ;Memory.c: 8:     for (i = move_count; i >= 0; i--){
  8103   003CE4  C1DA  F02B         	movff	_move_count,go_Home@i	;volatile
  8104   003CE8  C1DB  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  8105   003CEC                     l5227:
  8106   003CEC  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  8107   003CEE  EF7D  F01E         	goto	u5000
  8108   003CF2  EF7B  F01E         	goto	u5001
  8109   003CF6                     u5001:
  8110   003CF6  EF7F  F01E         	goto	l5231
  8111   003CFA                     u5000:
  8112   003CFA  EF90  F01F         	goto	l604
  8113   003CFE                     l5231:
  8114                           
  8115                           ;Memory.c: 9:         timed_forward(&motorL, &motorR,Time_forward[i]);
  8116   003CFE  0E61               	movlw	low _motorL
  8117   003D00  6E14               	movwf	timed_forward@mL^0,c
  8118   003D02  0E01               	movlw	high _motorL
  8119   003D04  6E15               	movwf	(timed_forward@mL+1)^0,c
  8120   003D06  0E58               	movlw	low _motorR
  8121   003D08  6E16               	movwf	timed_forward@mR^0,c
  8122   003D0A  0E01               	movlw	high _motorR
  8123   003D0C  6E17               	movwf	(timed_forward@mR+1)^0,c
  8124   003D0E  90D8               	bcf	status,0,c
  8125   003D10  342B               	rlcf	go_Home@i^0,w,c
  8126   003D12  6ED9               	movwf	fsr2l,c
  8127   003D14  342C               	rlcf	(go_Home@i+1)^0,w,c
  8128   003D16  6EDA               	movwf	fsr2h,c
  8129   003D18  5026               	movf	go_Home@Time_forward^0,w,c
  8130   003D1A  26D9               	addwf	fsr2l,f,c
  8131   003D1C  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  8132   003D1E  22DA               	addwfc	fsr2h,f,c
  8133   003D20  CFDE F018          	movff	postinc2,timed_forward@time
  8134   003D24  CFDD F019          	movff	postdec2,timed_forward@time+1
  8135   003D28  EC15  F027         	call	_timed_forward	;wreg free
  8136   003D2C                     
  8137                           ;Memory.c: 11:         if (WayBack[i-1]==1){
  8138   003D2C  502B               	movf	go_Home@i^0,w,c
  8139   003D2E  2424               	addwf	go_Home@WayBack^0,w,c
  8140   003D30  6E28               	movwf	??_go_Home^0,c
  8141   003D32  502C               	movf	(go_Home@i+1)^0,w,c
  8142   003D34  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8143   003D36  6E29               	movwf	(??_go_Home+1)^0,c
  8144   003D38  0EFF               	movlw	255
  8145   003D3A  2428               	addwf	??_go_Home^0,w,c
  8146   003D3C  6ED9               	movwf	fsr2l,c
  8147   003D3E  0EFF               	movlw	255
  8148   003D40  2029               	addwfc	(??_go_Home+1)^0,w,c
  8149   003D42  6EDA               	movwf	fsr2h,c
  8150   003D44  04DE               	decf	postinc2,w,c
  8151   003D46  A4D8               	btfss	status,2,c
  8152   003D48  EFA8  F01E         	goto	u5011
  8153   003D4C  EFAA  F01E         	goto	u5010
  8154   003D50                     u5011:
  8155   003D50  EFB6  F01E         	goto	l5237
  8156   003D54                     u5010:
  8157   003D54                     
  8158                           ;Memory.c: 13:             GreenMove(&motorL, &motorR);
  8159   003D54  0E61               	movlw	low _motorL
  8160   003D56  6E20               	movwf	GreenMove@mL^0,c
  8161   003D58  0E01               	movlw	high _motorL
  8162   003D5A  6E21               	movwf	(GreenMove@mL+1)^0,c
  8163   003D5C  0E58               	movlw	low _motorR
  8164   003D5E  6E22               	movwf	GreenMove@mR^0,c
  8165   003D60  0E01               	movlw	high _motorR
  8166   003D62  6E23               	movwf	(GreenMove@mR+1)^0,c
  8167   003D64  EC0E  F02F         	call	_GreenMove	;wreg free
  8168                           
  8169                           ;Memory.c: 14:         }
  8170   003D68  EF7C  F01F         	goto	l592
  8171   003D6C                     l5237:
  8172   003D6C  502B               	movf	go_Home@i^0,w,c
  8173   003D6E  2424               	addwf	go_Home@WayBack^0,w,c
  8174   003D70  6E28               	movwf	??_go_Home^0,c
  8175   003D72  502C               	movf	(go_Home@i+1)^0,w,c
  8176   003D74  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8177   003D76  6E29               	movwf	(??_go_Home+1)^0,c
  8178   003D78  0EFF               	movlw	255
  8179   003D7A  2428               	addwf	??_go_Home^0,w,c
  8180   003D7C  6ED9               	movwf	fsr2l,c
  8181   003D7E  0EFF               	movlw	255
  8182   003D80  2029               	addwfc	(??_go_Home+1)^0,w,c
  8183   003D82  6EDA               	movwf	fsr2h,c
  8184   003D84  0E02               	movlw	2
  8185   003D86  18DE               	xorwf	postinc2,w,c
  8186   003D88  A4D8               	btfss	status,2,c
  8187   003D8A  EFC9  F01E         	goto	u5021
  8188   003D8E  EFCB  F01E         	goto	u5020
  8189   003D92                     u5021:
  8190   003D92  EFD7  F01E         	goto	l5241
  8191   003D96                     u5020:
  8192   003D96                     
  8193                           ;Memory.c: 17:             LightBlueMove(&motorL, &motorR);
  8194   003D96  0E61               	movlw	low _motorL
  8195   003D98  6E20               	movwf	LightBlueMove@mL^0,c
  8196   003D9A  0E01               	movlw	high _motorL
  8197   003D9C  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  8198   003D9E  0E58               	movlw	low _motorR
  8199   003DA0  6E22               	movwf	LightBlueMove@mR^0,c
  8200   003DA2  0E01               	movlw	high _motorR
  8201   003DA4  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  8202   003DA6  EC8D  F02C         	call	_LightBlueMove	;wreg free
  8203                           
  8204                           ;Memory.c: 18:         }
  8205   003DAA  EF7C  F01F         	goto	l592
  8206   003DAE                     l5241:
  8207   003DAE  502B               	movf	go_Home@i^0,w,c
  8208   003DB0  2424               	addwf	go_Home@WayBack^0,w,c
  8209   003DB2  6E28               	movwf	??_go_Home^0,c
  8210   003DB4  502C               	movf	(go_Home@i+1)^0,w,c
  8211   003DB6  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8212   003DB8  6E29               	movwf	(??_go_Home+1)^0,c
  8213   003DBA  0EFF               	movlw	255
  8214   003DBC  2428               	addwf	??_go_Home^0,w,c
  8215   003DBE  6ED9               	movwf	fsr2l,c
  8216   003DC0  0EFF               	movlw	255
  8217   003DC2  2029               	addwfc	(??_go_Home+1)^0,w,c
  8218   003DC4  6EDA               	movwf	fsr2h,c
  8219   003DC6  0E03               	movlw	3
  8220   003DC8  18DE               	xorwf	postinc2,w,c
  8221   003DCA  A4D8               	btfss	status,2,c
  8222   003DCC  EFEA  F01E         	goto	u5031
  8223   003DD0  EFEC  F01E         	goto	u5030
  8224   003DD4                     u5031:
  8225   003DD4  EFF8  F01E         	goto	l5245
  8226   003DD8                     u5030:
  8227   003DD8                     
  8228                           ;Memory.c: 21:             ReverseYellow(&motorL, &motorR);
  8229   003DD8  0E61               	movlw	low _motorL
  8230   003DDA  6E20               	movwf	ReverseYellow@mL^0,c
  8231   003DDC  0E01               	movlw	high _motorL
  8232   003DDE  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  8233   003DE0  0E58               	movlw	low _motorR
  8234   003DE2  6E22               	movwf	ReverseYellow@mR^0,c
  8235   003DE4  0E01               	movlw	high _motorR
  8236   003DE6  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  8237   003DE8  EC5F  F026         	call	_ReverseYellow	;wreg free
  8238                           
  8239                           ;Memory.c: 22:         }
  8240   003DEC  EF7C  F01F         	goto	l592
  8241   003DF0                     l5245:
  8242   003DF0  502B               	movf	go_Home@i^0,w,c
  8243   003DF2  2424               	addwf	go_Home@WayBack^0,w,c
  8244   003DF4  6E28               	movwf	??_go_Home^0,c
  8245   003DF6  502C               	movf	(go_Home@i+1)^0,w,c
  8246   003DF8  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8247   003DFA  6E29               	movwf	(??_go_Home+1)^0,c
  8248   003DFC  0EFF               	movlw	255
  8249   003DFE  2428               	addwf	??_go_Home^0,w,c
  8250   003E00  6ED9               	movwf	fsr2l,c
  8251   003E02  0EFF               	movlw	255
  8252   003E04  2029               	addwfc	(??_go_Home+1)^0,w,c
  8253   003E06  6EDA               	movwf	fsr2h,c
  8254   003E08  0E04               	movlw	4
  8255   003E0A  18DE               	xorwf	postinc2,w,c
  8256   003E0C  A4D8               	btfss	status,2,c
  8257   003E0E  EF0B  F01F         	goto	u5041
  8258   003E12  EF0D  F01F         	goto	u5040
  8259   003E16                     u5041:
  8260   003E16  EF19  F01F         	goto	l5249
  8261   003E1A                     u5040:
  8262   003E1A                     
  8263                           ;Memory.c: 25:             BlueMove(&motorL, &motorR);
  8264   003E1A  0E61               	movlw	low _motorL
  8265   003E1C  6E20               	movwf	BlueMove@mL^0,c
  8266   003E1E  0E01               	movlw	high _motorL
  8267   003E20  6E21               	movwf	(BlueMove@mL+1)^0,c
  8268   003E22  0E58               	movlw	low _motorR
  8269   003E24  6E22               	movwf	BlueMove@mR^0,c
  8270   003E26  0E01               	movlw	high _motorR
  8271   003E28  6E23               	movwf	(BlueMove@mR+1)^0,c
  8272   003E2A  ECBB  F029         	call	_BlueMove	;wreg free
  8273                           
  8274                           ;Memory.c: 26:         }
  8275   003E2E  EF7C  F01F         	goto	l592
  8276   003E32                     l5249:
  8277   003E32  502B               	movf	go_Home@i^0,w,c
  8278   003E34  2424               	addwf	go_Home@WayBack^0,w,c
  8279   003E36  6E28               	movwf	??_go_Home^0,c
  8280   003E38  502C               	movf	(go_Home@i+1)^0,w,c
  8281   003E3A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8282   003E3C  6E29               	movwf	(??_go_Home+1)^0,c
  8283   003E3E  0EFF               	movlw	255
  8284   003E40  2428               	addwf	??_go_Home^0,w,c
  8285   003E42  6ED9               	movwf	fsr2l,c
  8286   003E44  0EFF               	movlw	255
  8287   003E46  2029               	addwfc	(??_go_Home+1)^0,w,c
  8288   003E48  6EDA               	movwf	fsr2h,c
  8289   003E4A  0E05               	movlw	5
  8290   003E4C  18DE               	xorwf	postinc2,w,c
  8291   003E4E  A4D8               	btfss	status,2,c
  8292   003E50  EF2C  F01F         	goto	u5051
  8293   003E54  EF2E  F01F         	goto	u5050
  8294   003E58                     u5051:
  8295   003E58  EF3A  F01F         	goto	l5253
  8296   003E5C                     u5050:
  8297   003E5C                     
  8298                           ;Memory.c: 29:             RedMove(&motorL, &motorR);
  8299   003E5C  0E61               	movlw	low _motorL
  8300   003E5E  6E20               	movwf	RedMove@mL^0,c
  8301   003E60  0E01               	movlw	high _motorL
  8302   003E62  6E21               	movwf	(RedMove@mL+1)^0,c
  8303   003E64  0E58               	movlw	low _motorR
  8304   003E66  6E22               	movwf	RedMove@mR^0,c
  8305   003E68  0E01               	movlw	high _motorR
  8306   003E6A  6E23               	movwf	(RedMove@mR+1)^0,c
  8307   003E6C  ECEF  F02E         	call	_RedMove	;wreg free
  8308                           
  8309                           ;Memory.c: 30:         }
  8310   003E70  EF7C  F01F         	goto	l592
  8311   003E74                     l5253:
  8312   003E74  502B               	movf	go_Home@i^0,w,c
  8313   003E76  2424               	addwf	go_Home@WayBack^0,w,c
  8314   003E78  6E28               	movwf	??_go_Home^0,c
  8315   003E7A  502C               	movf	(go_Home@i+1)^0,w,c
  8316   003E7C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8317   003E7E  6E29               	movwf	(??_go_Home+1)^0,c
  8318   003E80  0EFF               	movlw	255
  8319   003E82  2428               	addwf	??_go_Home^0,w,c
  8320   003E84  6ED9               	movwf	fsr2l,c
  8321   003E86  0EFF               	movlw	255
  8322   003E88  2029               	addwfc	(??_go_Home+1)^0,w,c
  8323   003E8A  6EDA               	movwf	fsr2h,c
  8324   003E8C  0E06               	movlw	6
  8325   003E8E  18DE               	xorwf	postinc2,w,c
  8326   003E90  A4D8               	btfss	status,2,c
  8327   003E92  EF4D  F01F         	goto	u5061
  8328   003E96  EF4F  F01F         	goto	u5060
  8329   003E9A                     u5061:
  8330   003E9A  EF5B  F01F         	goto	l5257
  8331   003E9E                     u5060:
  8332   003E9E                     
  8333                           ;Memory.c: 33:             OrangeMove(&motorL, &motorR);
  8334   003E9E  0E61               	movlw	low _motorL
  8335   003EA0  6E20               	movwf	OrangeMove@mL^0,c
  8336   003EA2  0E01               	movlw	high _motorL
  8337   003EA4  6E21               	movwf	(OrangeMove@mL+1)^0,c
  8338   003EA6  0E58               	movlw	low _motorR
  8339   003EA8  6E22               	movwf	OrangeMove@mR^0,c
  8340   003EAA  0E01               	movlw	high _motorR
  8341   003EAC  6E23               	movwf	(OrangeMove@mR+1)^0,c
  8342   003EAE  EC64  F02C         	call	_OrangeMove	;wreg free
  8343                           
  8344                           ;Memory.c: 34:         }
  8345   003EB2  EF7C  F01F         	goto	l592
  8346   003EB6                     l5257:
  8347   003EB6  502B               	movf	go_Home@i^0,w,c
  8348   003EB8  2424               	addwf	go_Home@WayBack^0,w,c
  8349   003EBA  6E28               	movwf	??_go_Home^0,c
  8350   003EBC  502C               	movf	(go_Home@i+1)^0,w,c
  8351   003EBE  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8352   003EC0  6E29               	movwf	(??_go_Home+1)^0,c
  8353   003EC2  0EFF               	movlw	255
  8354   003EC4  2428               	addwf	??_go_Home^0,w,c
  8355   003EC6  6ED9               	movwf	fsr2l,c
  8356   003EC8  0EFF               	movlw	255
  8357   003ECA  2029               	addwfc	(??_go_Home+1)^0,w,c
  8358   003ECC  6EDA               	movwf	fsr2h,c
  8359   003ECE  0E07               	movlw	7
  8360   003ED0  18DE               	xorwf	postinc2,w,c
  8361   003ED2  A4D8               	btfss	status,2,c
  8362   003ED4  EF6E  F01F         	goto	u5071
  8363   003ED8  EF70  F01F         	goto	u5070
  8364   003EDC                     u5071:
  8365   003EDC  EF7C  F01F         	goto	l598
  8366   003EE0                     u5070:
  8367   003EE0                     
  8368                           ;Memory.c: 37:             ReversePink(&motorL, &motorR);
  8369   003EE0  0E61               	movlw	low _motorL
  8370   003EE2  6E20               	movwf	ReversePink@mL^0,c
  8371   003EE4  0E01               	movlw	high _motorL
  8372   003EE6  6E21               	movwf	(ReversePink@mL+1)^0,c
  8373   003EE8  0E58               	movlw	low _motorR
  8374   003EEA  6E22               	movwf	ReversePink@mR^0,c
  8375   003EEC  0E01               	movlw	high _motorR
  8376   003EEE  6E23               	movwf	(ReversePink@mR+1)^0,c
  8377   003EF0  ECBA  F026         	call	_ReversePink	;wreg free
  8378   003EF4  EF7C  F01F         	goto	l592
  8379   003EF8                     l598:
  8380   003EF8                     l592:
  8381                           
  8382                           ;Memory.c: 39:         stop(&motorL, &motorR);
  8383   003EF8  0E61               	movlw	low _motorL
  8384   003EFA  6E14               	movwf	stop@mL^0,c
  8385   003EFC  0E01               	movlw	high _motorL
  8386   003EFE  6E15               	movwf	(stop@mL+1)^0,c
  8387   003F00  0E58               	movlw	low _motorR
  8388   003F02  6E16               	movwf	stop@mR^0,c
  8389   003F04  0E01               	movlw	high _motorR
  8390   003F06  6E17               	movwf	(stop@mR+1)^0,c
  8391   003F08  EC3F  F029         	call	_stop	;wreg free
  8392   003F0C                     
  8393                           ;Memory.c: 40:         run_flag=0;
  8394   003F0C  0E00               	movlw	0
  8395   003F0E  0101               	movlb	1	; () banked
  8396   003F10  6FD9               	movwf	(_run_flag+1)& (0+255),b
  8397   003F12  0E00               	movlw	0
  8398   003F14  6FD8               	movwf	_run_flag& (0+255),b
  8399   003F16                     
  8400                           ; BSR set to: 1
  8401                           ;Memory.c: 43:   }
  8402   003F16  062B               	decf	go_Home@i^0,f,c
  8403   003F18  A0D8               	btfss	status,0,c
  8404   003F1A  062C               	decf	(go_Home@i+1)^0,f,c
  8405   003F1C  EF76  F01E         	goto	l5227
  8406   003F20                     l604:
  8407   003F20  0012               	return		;funcret
  8408   003F22                     __end_of_go_Home:
  8409                           	callstack 0
  8410                           
  8411 ;; *************** function _timed_forward *****************
  8412 ;; Defined at:
  8413 ;;		line 166 in file "dc_motor.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8416 ;;		 -> motorL(9), 
  8417 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8418 ;;		 -> motorR(9), 
  8419 ;;  time            2   23[COMRAM] int 
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;		None
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  1    wreg      void 
  8424 ;; Registers used:
  8425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8431 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8433 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8434 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8435 ;;Total ram usage:        8 bytes
  8436 ;; Hardware stack levels used: 1
  8437 ;; Hardware stack levels required when called: 3
  8438 ;; This function calls:
  8439 ;;		_delayed_ms
  8440 ;;		_setMotorPWM
  8441 ;; This function is called by:
  8442 ;;		_go_Home
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           	psect	text36
  8447   004E2A                     __ptext36:
  8448                           	callstack 0
  8449   004E2A                     _timed_forward:
  8450                           	callstack 26
  8451   004E2A                     
  8452                           ;dc_motor.c: 166: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 167: {;dc_motor.c: 169:     mL->direction =1;
  8453   004E2A  EE20 F001          	lfsr	2,1
  8454   004E2E  5014               	movf	timed_forward@mL^0,w,c
  8455   004E30  26D9               	addwf	fsr2l,f,c
  8456   004E32  5015               	movf	(timed_forward@mL+1)^0,w,c
  8457   004E34  22DA               	addwfc	fsr2h,f,c
  8458   004E36  0E01               	movlw	1
  8459   004E38  6EDF               	movwf	indf2,c
  8460                           
  8461                           ;dc_motor.c: 170:     mR->direction =1;
  8462   004E3A  EE20 F001          	lfsr	2,1
  8463   004E3E  5016               	movf	timed_forward@mR^0,w,c
  8464   004E40  26D9               	addwf	fsr2l,f,c
  8465   004E42  5017               	movf	(timed_forward@mR+1)^0,w,c
  8466   004E44  22DA               	addwfc	fsr2h,f,c
  8467   004E46  0E01               	movlw	1
  8468   004E48  6EDF               	movwf	indf2,c
  8469                           
  8470                           ;dc_motor.c: 171:     while (mL->power < power && mR->power < power){
  8471   004E4A  EF4B  F027         	goto	l5071
  8472   004E4E                     l5063:
  8473                           
  8474                           ;dc_motor.c: 173:         mL->power+=10;
  8475   004E4E  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8476   004E52  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8477   004E56  0E0A               	movlw	10
  8478   004E58  26DF               	addwf	indf2,f,c
  8479                           
  8480                           ;dc_motor.c: 174:         mR->power+=10;
  8481   004E5A  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8482   004E5E  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8483   004E62  0E0A               	movlw	10
  8484   004E64  26DF               	addwf	indf2,f,c
  8485   004E66                     
  8486                           ;dc_motor.c: 176:         setMotorPWM(mL);
  8487   004E66  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8488   004E6A  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8489   004E6E  EC0E  F023         	call	_setMotorPWM	;wreg free
  8490   004E72                     
  8491                           ;dc_motor.c: 177:         setMotorPWM(mR);
  8492   004E72  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8493   004E76  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8494   004E7A  EC0E  F023         	call	_setMotorPWM	;wreg free
  8495   004E7E                     
  8496                           ;dc_motor.c: 180:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8497   004E7E  0E02               	movlw	2
  8498   004E80  6E1B               	movwf	(??_timed_forward+1)^0,c
  8499   004E82  0EA0               	movlw	160
  8500   004E84  6E1A               	movwf	??_timed_forward^0,c
  8501   004E86  0E92               	movlw	146
  8502   004E88                     u5927:
  8503   004E88  2EE8               	decfsz	wreg,f,c
  8504   004E8A  D7FE               	bra	u5927
  8505   004E8C  2E1A               	decfsz	??_timed_forward^0,f,c
  8506   004E8E  D7FC               	bra	u5927
  8507   004E90  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8508   004E92  D7FA               	bra	u5927
  8509   004E94  D000               	nop2	
  8510   004E96                     l5071:
  8511   004E96  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8512   004E9A  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8513   004E9E  0E32               	movlw	50
  8514   004EA0  60DF               	cpfslt	indf2,c
  8515   004EA2  EF55  F027         	goto	u4931
  8516   004EA6  EF57  F027         	goto	u4930
  8517   004EAA                     u4931:
  8518   004EAA  EF63  F027         	goto	l5075
  8519   004EAE                     u4930:
  8520   004EAE  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8521   004EB2  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8522   004EB6  0E31               	movlw	49
  8523   004EB8  64DF               	cpfsgt	indf2,c
  8524   004EBA  EF61  F027         	goto	u4941
  8525   004EBE  EF63  F027         	goto	u4940
  8526   004EC2                     u4941:
  8527   004EC2  EF27  F027         	goto	l5063
  8528   004EC6                     u4940:
  8529   004EC6                     l5075:
  8530                           
  8531                           ;dc_motor.c: 182:     delayed_ms(time);
  8532   004EC6  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8533   004ECA  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8534   004ECE  EC49  F02F         	call	_delayed_ms	;wreg free
  8535   004ED2  0012               	return		;funcret
  8536   004ED4                     __end_of_timed_forward:
  8537                           	callstack 0
  8538                           
  8539 ;; *************** function _delayed_ms *****************
  8540 ;; Defined at:
  8541 ;;		line 43 in file "timers.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;  time            2    0[COMRAM] int 
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;  i               2    3[COMRAM] unsigned int 
  8546 ;; Return value:  Size  Location     Type
  8547 ;;                  1    wreg      void 
  8548 ;; Registers used:
  8549 ;;		wreg, status,2, status,0
  8550 ;; Tracked objects:
  8551 ;;		On entry : 0/0
  8552 ;;		On exit  : 0/0
  8553 ;;		Unchanged: 0/0
  8554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8556 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8557 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8558 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8559 ;;Total ram usage:        5 bytes
  8560 ;; Hardware stack levels used: 1
  8561 ;; Hardware stack levels required when called: 1
  8562 ;; This function calls:
  8563 ;;		Nothing
  8564 ;; This function is called by:
  8565 ;;		_timed_forward
  8566 ;; This function uses a non-reentrant model
  8567 ;;
  8568                           
  8569                           	psect	text37
  8570   005E92                     __ptext37:
  8571                           	callstack 0
  8572   005E92                     _delayed_ms:
  8573                           	callstack 27
  8574   005E92                     
  8575                           ;timers.c: 44:     for(unsigned int i=0;i<time;i++){
  8576   005E92  0E00               	movlw	0
  8577   005E94  6E05               	movwf	(delayed_ms@i+1)^0,c
  8578   005E96  0E00               	movlw	0
  8579   005E98  6E04               	movwf	delayed_ms@i^0,c
  8580   005E9A  EF59  F02F         	goto	l634
  8581   005E9E                     l4719:
  8582                           
  8583                           ;timers.c: 45:         _delay((unsigned long)((500)*(64000000/4000000.0)));
  8584   005E9E  0E0B               	movlw	11
  8585   005EA0  6E03               	movwf	??_delayed_ms^0,c
  8586   005EA2  0E62               	movlw	98
  8587   005EA4                     u5937:
  8588   005EA4  2EE8               	decfsz	wreg,f,c
  8589   005EA6  D7FE               	bra	u5937
  8590   005EA8  2E03               	decfsz	??_delayed_ms^0,f,c
  8591   005EAA  D7FC               	bra	u5937
  8592   005EAC  D000               	nop2	
  8593   005EAE                     
  8594                           ;timers.c: 46:     }
  8595   005EAE  4A04               	infsnz	delayed_ms@i^0,f,c
  8596   005EB0  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8597   005EB2                     l634:
  8598   005EB2  5001               	movf	delayed_ms@time^0,w,c
  8599   005EB4  5C04               	subwf	delayed_ms@i^0,w,c
  8600   005EB6  5002               	movf	(delayed_ms@time+1)^0,w,c
  8601   005EB8  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8602   005EBA  A0D8               	btfss	status,0,c
  8603   005EBC  EF62  F02F         	goto	u4481
  8604   005EC0  EF64  F02F         	goto	u4480
  8605   005EC4                     u4481:
  8606   005EC4  EF4F  F02F         	goto	l4719
  8607   005EC8                     u4480:
  8608   005EC8  0012               	return		;funcret
  8609   005ECA                     __end_of_delayed_ms:
  8610                           	callstack 0
  8611                           
  8612 ;; *************** function _ReverseYellow *****************
  8613 ;; Defined at:
  8614 ;;		line 342 in file "dc_motor.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8617 ;;		 -> motorL(9), 
  8618 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8619 ;;		 -> motorR(9), 
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;		None
  8622 ;; Return value:  Size  Location     Type
  8623 ;;                  1    wreg      void 
  8624 ;; Registers used:
  8625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8631 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8634 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8635 ;;Total ram usage:        4 bytes
  8636 ;; Hardware stack levels used: 1
  8637 ;; Hardware stack levels required when called: 5
  8638 ;; This function calls:
  8639 ;;		_ForwardOneBlock
  8640 ;;		_reverseDetect
  8641 ;;		_turnRight45
  8642 ;; This function is called by:
  8643 ;;		_go_Home
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           	psect	text38
  8648   004CBE                     __ptext38:
  8649                           	callstack 0
  8650   004CBE                     _ReverseYellow:
  8651                           	callstack 24
  8652   004CBE                     
  8653                           ;dc_motor.c: 343:     reverseDetect(&motorL, &motorR);
  8654   004CBE  0E61               	movlw	low _motorL
  8655   004CC0  6E1A               	movwf	reverseDetect@mL^0,c
  8656   004CC2  0E01               	movlw	high _motorL
  8657   004CC4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8658   004CC6  0E58               	movlw	low _motorR
  8659   004CC8  6E1C               	movwf	reverseDetect@mR^0,c
  8660   004CCA  0E01               	movlw	high _motorR
  8661   004CCC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8662   004CCE  EC5E  F02B         	call	_reverseDetect	;wreg free
  8663                           
  8664                           ;dc_motor.c: 344:     turnRight45(&motorL, &motorR);
  8665   004CD2  0E61               	movlw	low _motorL
  8666   004CD4  6E1A               	movwf	turnRight45@mL^0,c
  8667   004CD6  0E01               	movlw	high _motorL
  8668   004CD8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8669   004CDA  0E58               	movlw	low _motorR
  8670   004CDC  6E1C               	movwf	turnRight45@mR^0,c
  8671   004CDE  0E01               	movlw	high _motorR
  8672   004CE0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8673   004CE2  ECF9  F02D         	call	_turnRight45	;wreg free
  8674                           
  8675                           ;dc_motor.c: 345:     turnRight45(&motorL, &motorR);
  8676   004CE6  0E61               	movlw	low _motorL
  8677   004CE8  6E1A               	movwf	turnRight45@mL^0,c
  8678   004CEA  0E01               	movlw	high _motorL
  8679   004CEC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8680   004CEE  0E58               	movlw	low _motorR
  8681   004CF0  6E1C               	movwf	turnRight45@mR^0,c
  8682   004CF2  0E01               	movlw	high _motorR
  8683   004CF4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8684   004CF6  ECF9  F02D         	call	_turnRight45	;wreg free
  8685                           
  8686                           ;dc_motor.c: 346:     ForwardOneBlock(&motorL, &motorR);
  8687   004CFA  0E61               	movlw	low _motorL
  8688   004CFC  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8689   004CFE  0E01               	movlw	high _motorL
  8690   004D00  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8691   004D02  0E58               	movlw	low _motorR
  8692   004D04  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8693   004D06  0E01               	movlw	high _motorR
  8694   004D08  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8695   004D0A  ECB8  F02B         	call	_ForwardOneBlock	;wreg free
  8696                           
  8697                           ;dc_motor.c: 347:     reverseDetect(&motorL, &motorR);
  8698   004D0E  0E61               	movlw	low _motorL
  8699   004D10  6E1A               	movwf	reverseDetect@mL^0,c
  8700   004D12  0E01               	movlw	high _motorL
  8701   004D14  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8702   004D16  0E58               	movlw	low _motorR
  8703   004D18  6E1C               	movwf	reverseDetect@mR^0,c
  8704   004D1A  0E01               	movlw	high _motorR
  8705   004D1C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8706   004D1E  EC5E  F02B         	call	_reverseDetect	;wreg free
  8707                           
  8708                           ;dc_motor.c: 348:     turnRight45(&motorL, &motorR);
  8709   004D22  0E61               	movlw	low _motorL
  8710   004D24  6E1A               	movwf	turnRight45@mL^0,c
  8711   004D26  0E01               	movlw	high _motorL
  8712   004D28  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8713   004D2A  0E58               	movlw	low _motorR
  8714   004D2C  6E1C               	movwf	turnRight45@mR^0,c
  8715   004D2E  0E01               	movlw	high _motorR
  8716   004D30  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8717   004D32  ECF9  F02D         	call	_turnRight45	;wreg free
  8718                           
  8719                           ;dc_motor.c: 349:     turnRight45(&motorL, &motorR);
  8720   004D36  0E61               	movlw	low _motorL
  8721   004D38  6E1A               	movwf	turnRight45@mL^0,c
  8722   004D3A  0E01               	movlw	high _motorL
  8723   004D3C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8724   004D3E  0E58               	movlw	low _motorR
  8725   004D40  6E1C               	movwf	turnRight45@mR^0,c
  8726   004D42  0E01               	movlw	high _motorR
  8727   004D44  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8728   004D46  ECF9  F02D         	call	_turnRight45	;wreg free
  8729                           
  8730                           ;dc_motor.c: 350:     turnRight45(&motorL, &motorR);
  8731   004D4A  0E61               	movlw	low _motorL
  8732   004D4C  6E1A               	movwf	turnRight45@mL^0,c
  8733   004D4E  0E01               	movlw	high _motorL
  8734   004D50  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8735   004D52  0E58               	movlw	low _motorR
  8736   004D54  6E1C               	movwf	turnRight45@mR^0,c
  8737   004D56  0E01               	movlw	high _motorR
  8738   004D58  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8739   004D5A  ECF9  F02D         	call	_turnRight45	;wreg free
  8740                           
  8741                           ;dc_motor.c: 351:     turnRight45(&motorL, &motorR);
  8742   004D5E  0E61               	movlw	low _motorL
  8743   004D60  6E1A               	movwf	turnRight45@mL^0,c
  8744   004D62  0E01               	movlw	high _motorL
  8745   004D64  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8746   004D66  0E58               	movlw	low _motorR
  8747   004D68  6E1C               	movwf	turnRight45@mR^0,c
  8748   004D6A  0E01               	movlw	high _motorR
  8749   004D6C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8750   004D6E  ECF9  F02D         	call	_turnRight45	;wreg free
  8751   004D72  0012               	return		;funcret
  8752   004D74                     __end_of_ReverseYellow:
  8753                           	callstack 0
  8754                           
  8755 ;; *************** function _ReversePink *****************
  8756 ;; Defined at:
  8757 ;;		line 353 in file "dc_motor.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8760 ;;		 -> motorL(9), 
  8761 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8762 ;;		 -> motorR(9), 
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;		None
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  1    wreg      void 
  8767 ;; Registers used:
  8768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8774 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8777 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8778 ;;Total ram usage:        4 bytes
  8779 ;; Hardware stack levels used: 1
  8780 ;; Hardware stack levels required when called: 5
  8781 ;; This function calls:
  8782 ;;		_ForwardOneBlock
  8783 ;;		_reverseDetect
  8784 ;;		_turnLeft45
  8785 ;; This function is called by:
  8786 ;;		_go_Home
  8787 ;; This function uses a non-reentrant model
  8788 ;;
  8789                           
  8790                           	psect	text39
  8791   004D74                     __ptext39:
  8792                           	callstack 0
  8793   004D74                     _ReversePink:
  8794                           	callstack 24
  8795   004D74                     
  8796                           ;dc_motor.c: 354:     reverseDetect(&motorL, &motorR);
  8797   004D74  0E61               	movlw	low _motorL
  8798   004D76  6E1A               	movwf	reverseDetect@mL^0,c
  8799   004D78  0E01               	movlw	high _motorL
  8800   004D7A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8801   004D7C  0E58               	movlw	low _motorR
  8802   004D7E  6E1C               	movwf	reverseDetect@mR^0,c
  8803   004D80  0E01               	movlw	high _motorR
  8804   004D82  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8805   004D84  EC5E  F02B         	call	_reverseDetect	;wreg free
  8806                           
  8807                           ;dc_motor.c: 355:     turnLeft45(&motorL, &motorR);
  8808   004D88  0E61               	movlw	low _motorL
  8809   004D8A  6E1A               	movwf	turnLeft45@mL^0,c
  8810   004D8C  0E01               	movlw	high _motorL
  8811   004D8E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8812   004D90  0E58               	movlw	low _motorR
  8813   004D92  6E1C               	movwf	turnLeft45@mR^0,c
  8814   004D94  0E01               	movlw	high _motorR
  8815   004D96  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8816   004D98  EC20  F02E         	call	_turnLeft45	;wreg free
  8817                           
  8818                           ;dc_motor.c: 356:     turnLeft45(&motorL, &motorR);
  8819   004D9C  0E61               	movlw	low _motorL
  8820   004D9E  6E1A               	movwf	turnLeft45@mL^0,c
  8821   004DA0  0E01               	movlw	high _motorL
  8822   004DA2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8823   004DA4  0E58               	movlw	low _motorR
  8824   004DA6  6E1C               	movwf	turnLeft45@mR^0,c
  8825   004DA8  0E01               	movlw	high _motorR
  8826   004DAA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8827   004DAC  EC20  F02E         	call	_turnLeft45	;wreg free
  8828                           
  8829                           ;dc_motor.c: 357:     ForwardOneBlock(&motorL, &motorR);
  8830   004DB0  0E61               	movlw	low _motorL
  8831   004DB2  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8832   004DB4  0E01               	movlw	high _motorL
  8833   004DB6  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8834   004DB8  0E58               	movlw	low _motorR
  8835   004DBA  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8836   004DBC  0E01               	movlw	high _motorR
  8837   004DBE  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8838   004DC0  ECB8  F02B         	call	_ForwardOneBlock	;wreg free
  8839                           
  8840                           ;dc_motor.c: 358:     reverseDetect(&motorL, &motorR);
  8841   004DC4  0E61               	movlw	low _motorL
  8842   004DC6  6E1A               	movwf	reverseDetect@mL^0,c
  8843   004DC8  0E01               	movlw	high _motorL
  8844   004DCA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8845   004DCC  0E58               	movlw	low _motorR
  8846   004DCE  6E1C               	movwf	reverseDetect@mR^0,c
  8847   004DD0  0E01               	movlw	high _motorR
  8848   004DD2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8849   004DD4  EC5E  F02B         	call	_reverseDetect	;wreg free
  8850                           
  8851                           ;dc_motor.c: 359:     turnLeft45(&motorL, &motorR);
  8852   004DD8  0E61               	movlw	low _motorL
  8853   004DDA  6E1A               	movwf	turnLeft45@mL^0,c
  8854   004DDC  0E01               	movlw	high _motorL
  8855   004DDE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8856   004DE0  0E58               	movlw	low _motorR
  8857   004DE2  6E1C               	movwf	turnLeft45@mR^0,c
  8858   004DE4  0E01               	movlw	high _motorR
  8859   004DE6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8860   004DE8  EC20  F02E         	call	_turnLeft45	;wreg free
  8861                           
  8862                           ;dc_motor.c: 360:     turnLeft45(&motorL, &motorR);
  8863   004DEC  0E61               	movlw	low _motorL
  8864   004DEE  6E1A               	movwf	turnLeft45@mL^0,c
  8865   004DF0  0E01               	movlw	high _motorL
  8866   004DF2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8867   004DF4  0E58               	movlw	low _motorR
  8868   004DF6  6E1C               	movwf	turnLeft45@mR^0,c
  8869   004DF8  0E01               	movlw	high _motorR
  8870   004DFA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8871   004DFC  EC20  F02E         	call	_turnLeft45	;wreg free
  8872                           
  8873                           ;dc_motor.c: 361:     turnLeft45(&motorL, &motorR);
  8874   004E00  0E61               	movlw	low _motorL
  8875   004E02  6E1A               	movwf	turnLeft45@mL^0,c
  8876   004E04  0E01               	movlw	high _motorL
  8877   004E06  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8878   004E08  0E58               	movlw	low _motorR
  8879   004E0A  6E1C               	movwf	turnLeft45@mR^0,c
  8880   004E0C  0E01               	movlw	high _motorR
  8881   004E0E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8882   004E10  EC20  F02E         	call	_turnLeft45	;wreg free
  8883                           
  8884                           ;dc_motor.c: 362:     turnLeft45(&motorL, &motorR);
  8885   004E14  0E61               	movlw	low _motorL
  8886   004E16  6E1A               	movwf	turnLeft45@mL^0,c
  8887   004E18  0E01               	movlw	high _motorL
  8888   004E1A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8889   004E1C  0E58               	movlw	low _motorR
  8890   004E1E  6E1C               	movwf	turnLeft45@mR^0,c
  8891   004E20  0E01               	movlw	high _motorR
  8892   004E22  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8893   004E24  EC20  F02E         	call	_turnLeft45	;wreg free
  8894   004E28  0012               	return		;funcret
  8895   004E2A                     __end_of_ReversePink:
  8896                           	callstack 0
  8897                           
  8898 ;; *************** function _ForwardOneBlock *****************
  8899 ;; Defined at:
  8900 ;;		line 245 in file "dc_motor.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8903 ;;		 -> motorL(9), 
  8904 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8905 ;;		 -> motorR(9), 
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;		None
  8908 ;; Return value:  Size  Location     Type
  8909 ;;                  1    wreg      void 
  8910 ;; Registers used:
  8911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8912 ;; Tracked objects:
  8913 ;;		On entry : 0/0
  8914 ;;		On exit  : 0/0
  8915 ;;		Unchanged: 0/0
  8916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8917 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8919 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8920 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8921 ;;Total ram usage:        6 bytes
  8922 ;; Hardware stack levels used: 1
  8923 ;; Hardware stack levels required when called: 4
  8924 ;; This function calls:
  8925 ;;		_fullSpeedAhead
  8926 ;;		_stop
  8927 ;; This function is called by:
  8928 ;;		_ReverseYellow
  8929 ;;		_ReversePink
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           	psect	text40
  8934   005770                     __ptext40:
  8935                           	callstack 0
  8936   005770                     _ForwardOneBlock:
  8937                           	callstack 24
  8938   005770                     
  8939                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
  8940   005770  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  8941   005774  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  8942   005778  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  8943   00577C  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  8944   005780  ECAC  F028         	call	_fullSpeedAhead	;wreg free
  8945   005784                     
  8946                           ;dc_motor.c: 247:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  8947   005784  0E56               	movlw	86
  8948   005786  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8949   005788  0E3A               	movlw	58
  8950   00578A  6E1E               	movwf	??_ForwardOneBlock^0,c
  8951   00578C  0EF4               	movlw	244
  8952   00578E                     u5947:
  8953   00578E  2EE8               	decfsz	wreg,f,c
  8954   005790  D7FE               	bra	u5947
  8955   005792  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8956   005794  D7FC               	bra	u5947
  8957   005796  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8958   005798  D7FA               	bra	u5947
  8959   00579A                     
  8960                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
  8961   00579A  0E61               	movlw	low _motorL
  8962   00579C  6E14               	movwf	stop@mL^0,c
  8963   00579E  0E01               	movlw	high _motorL
  8964   0057A0  6E15               	movwf	(stop@mL+1)^0,c
  8965   0057A2  0E58               	movlw	low _motorR
  8966   0057A4  6E16               	movwf	stop@mR^0,c
  8967   0057A6  0E01               	movlw	high _motorR
  8968   0057A8  6E17               	movwf	(stop@mR+1)^0,c
  8969   0057AA  EC3F  F029         	call	_stop	;wreg free
  8970                           
  8971                           ;dc_motor.c: 249:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8972   0057AE  0E05               	movlw	5
  8973   0057B0  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8974   0057B2  0E0F               	movlw	15
  8975   0057B4  6E1E               	movwf	??_ForwardOneBlock^0,c
  8976   0057B6  0EF1               	movlw	241
  8977   0057B8                     u5957:
  8978   0057B8  2EE8               	decfsz	wreg,f,c
  8979   0057BA  D7FE               	bra	u5957
  8980   0057BC  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8981   0057BE  D7FC               	bra	u5957
  8982   0057C0  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8983   0057C2  D7FA               	bra	u5957
  8984   0057C4  F000               	nop	
  8985   0057C6  0012               	return		;funcret
  8986   0057C8                     __end_of_ForwardOneBlock:
  8987                           	callstack 0
  8988                           
  8989 ;; *************** function _RedMove *****************
  8990 ;; Defined at:
  8991 ;;		line 269 in file "dc_motor.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8994 ;;		 -> motorL(9), 
  8995 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8996 ;;		 -> motorR(9), 
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;		None
  8999 ;; Return value:  Size  Location     Type
  9000 ;;                  1    wreg      void 
  9001 ;; Registers used:
  9002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9003 ;; Tracked objects:
  9004 ;;		On entry : 0/0
  9005 ;;		On exit  : 0/0
  9006 ;;		Unchanged: 0/0
  9007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9008 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9011 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9012 ;;Total ram usage:        4 bytes
  9013 ;; Hardware stack levels used: 1
  9014 ;; Hardware stack levels required when called: 5
  9015 ;; This function calls:
  9016 ;;		_reverseDetect
  9017 ;;		_turnRight45
  9018 ;; This function is called by:
  9019 ;;		_go_Home
  9020 ;;		_colour_move
  9021 ;; This function uses a non-reentrant model
  9022 ;;
  9023                           
  9024                           	psect	text41
  9025   005DDE                     __ptext41:
  9026                           	callstack 0
  9027   005DDE                     _RedMove:
  9028                           	callstack 24
  9029   005DDE                     
  9030                           ;dc_motor.c: 270:     reverseDetect(&motorL, &motorR);
  9031   005DDE  0E61               	movlw	low _motorL
  9032   005DE0  6E1A               	movwf	reverseDetect@mL^0,c
  9033   005DE2  0E01               	movlw	high _motorL
  9034   005DE4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9035   005DE6  0E58               	movlw	low _motorR
  9036   005DE8  6E1C               	movwf	reverseDetect@mR^0,c
  9037   005DEA  0E01               	movlw	high _motorR
  9038   005DEC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9039   005DEE  EC5E  F02B         	call	_reverseDetect	;wreg free
  9040                           
  9041                           ;dc_motor.c: 272:     turnRight45(&motorL, &motorR);
  9042   005DF2  0E61               	movlw	low _motorL
  9043   005DF4  6E1A               	movwf	turnRight45@mL^0,c
  9044   005DF6  0E01               	movlw	high _motorL
  9045   005DF8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9046   005DFA  0E58               	movlw	low _motorR
  9047   005DFC  6E1C               	movwf	turnRight45@mR^0,c
  9048   005DFE  0E01               	movlw	high _motorR
  9049   005E00  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9050   005E02  ECF9  F02D         	call	_turnRight45	;wreg free
  9051                           
  9052                           ;dc_motor.c: 273:     turnRight45(&motorL, &motorR);
  9053   005E06  0E61               	movlw	low _motorL
  9054   005E08  6E1A               	movwf	turnRight45@mL^0,c
  9055   005E0A  0E01               	movlw	high _motorL
  9056   005E0C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9057   005E0E  0E58               	movlw	low _motorR
  9058   005E10  6E1C               	movwf	turnRight45@mR^0,c
  9059   005E12  0E01               	movlw	high _motorR
  9060   005E14  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9061   005E16  ECF9  F02D         	call	_turnRight45	;wreg free
  9062   005E1A  0012               	return		;funcret
  9063   005E1C                     __end_of_RedMove:
  9064                           	callstack 0
  9065                           
  9066 ;; *************** function _OrangeMove *****************
  9067 ;; Defined at:
  9068 ;;		line 317 in file "dc_motor.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9071 ;;		 -> motorL(9), 
  9072 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9073 ;;		 -> motorR(9), 
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;		None
  9076 ;; Return value:  Size  Location     Type
  9077 ;;                  1    wreg      void 
  9078 ;; Registers used:
  9079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9088 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9089 ;;Total ram usage:        4 bytes
  9090 ;; Hardware stack levels used: 1
  9091 ;; Hardware stack levels required when called: 5
  9092 ;; This function calls:
  9093 ;;		_reverseDetect
  9094 ;;		_turnRight45
  9095 ;; This function is called by:
  9096 ;;		_go_Home
  9097 ;;		_colour_move
  9098 ;; This function uses a non-reentrant model
  9099 ;;
  9100                           
  9101                           	psect	text42
  9102   0058C8                     __ptext42:
  9103                           	callstack 0
  9104   0058C8                     _OrangeMove:
  9105                           	callstack 24
  9106   0058C8                     
  9107                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  9108   0058C8  0E61               	movlw	low _motorL
  9109   0058CA  6E1A               	movwf	reverseDetect@mL^0,c
  9110   0058CC  0E01               	movlw	high _motorL
  9111   0058CE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9112   0058D0  0E58               	movlw	low _motorR
  9113   0058D2  6E1C               	movwf	reverseDetect@mR^0,c
  9114   0058D4  0E01               	movlw	high _motorR
  9115   0058D6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9116   0058D8  EC5E  F02B         	call	_reverseDetect	;wreg free
  9117                           
  9118                           ;dc_motor.c: 320:     turnRight45(&motorL, &motorR);
  9119   0058DC  0E61               	movlw	low _motorL
  9120   0058DE  6E1A               	movwf	turnRight45@mL^0,c
  9121   0058E0  0E01               	movlw	high _motorL
  9122   0058E2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9123   0058E4  0E58               	movlw	low _motorR
  9124   0058E6  6E1C               	movwf	turnRight45@mR^0,c
  9125   0058E8  0E01               	movlw	high _motorR
  9126   0058EA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9127   0058EC  ECF9  F02D         	call	_turnRight45	;wreg free
  9128                           
  9129                           ;dc_motor.c: 321:     turnRight45(&motorL, &motorR);
  9130   0058F0  0E61               	movlw	low _motorL
  9131   0058F2  6E1A               	movwf	turnRight45@mL^0,c
  9132   0058F4  0E01               	movlw	high _motorL
  9133   0058F6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9134   0058F8  0E58               	movlw	low _motorR
  9135   0058FA  6E1C               	movwf	turnRight45@mR^0,c
  9136   0058FC  0E01               	movlw	high _motorR
  9137   0058FE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9138   005900  ECF9  F02D         	call	_turnRight45	;wreg free
  9139                           
  9140                           ;dc_motor.c: 322:     turnRight45(&motorL, &motorR);
  9141   005904  0E61               	movlw	low _motorL
  9142   005906  6E1A               	movwf	turnRight45@mL^0,c
  9143   005908  0E01               	movlw	high _motorL
  9144   00590A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9145   00590C  0E58               	movlw	low _motorR
  9146   00590E  6E1C               	movwf	turnRight45@mR^0,c
  9147   005910  0E01               	movlw	high _motorR
  9148   005912  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9149   005914  ECF9  F02D         	call	_turnRight45	;wreg free
  9150   005918  0012               	return		;funcret
  9151   00591A                     __end_of_OrangeMove:
  9152                           	callstack 0
  9153                           
  9154 ;; *************** function _LightBlueMove *****************
  9155 ;; Defined at:
  9156 ;;		line 326 in file "dc_motor.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9159 ;;		 -> motorL(9), 
  9160 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9161 ;;		 -> motorR(9), 
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;		None
  9164 ;; Return value:  Size  Location     Type
  9165 ;;                  1    wreg      void 
  9166 ;; Registers used:
  9167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9173 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9176 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9177 ;;Total ram usage:        4 bytes
  9178 ;; Hardware stack levels used: 1
  9179 ;; Hardware stack levels required when called: 5
  9180 ;; This function calls:
  9181 ;;		_reverseDetect
  9182 ;;		_turnLeft45
  9183 ;; This function is called by:
  9184 ;;		_go_Home
  9185 ;;		_colour_move
  9186 ;; This function uses a non-reentrant model
  9187 ;;
  9188                           
  9189                           	psect	text43
  9190   00591A                     __ptext43:
  9191                           	callstack 0
  9192   00591A                     _LightBlueMove:
  9193                           	callstack 24
  9194   00591A                     
  9195                           ;dc_motor.c: 327:     reverseDetect(&motorL, &motorR);
  9196   00591A  0E61               	movlw	low _motorL
  9197   00591C  6E1A               	movwf	reverseDetect@mL^0,c
  9198   00591E  0E01               	movlw	high _motorL
  9199   005920  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9200   005922  0E58               	movlw	low _motorR
  9201   005924  6E1C               	movwf	reverseDetect@mR^0,c
  9202   005926  0E01               	movlw	high _motorR
  9203   005928  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9204   00592A  EC5E  F02B         	call	_reverseDetect	;wreg free
  9205                           
  9206                           ;dc_motor.c: 329:     turnLeft45(&motorL, &motorR);
  9207   00592E  0E61               	movlw	low _motorL
  9208   005930  6E1A               	movwf	turnLeft45@mL^0,c
  9209   005932  0E01               	movlw	high _motorL
  9210   005934  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9211   005936  0E58               	movlw	low _motorR
  9212   005938  6E1C               	movwf	turnLeft45@mR^0,c
  9213   00593A  0E01               	movlw	high _motorR
  9214   00593C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9215   00593E  EC20  F02E         	call	_turnLeft45	;wreg free
  9216                           
  9217                           ;dc_motor.c: 330:     turnLeft45(&motorL, &motorR);
  9218   005942  0E61               	movlw	low _motorL
  9219   005944  6E1A               	movwf	turnLeft45@mL^0,c
  9220   005946  0E01               	movlw	high _motorL
  9221   005948  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9222   00594A  0E58               	movlw	low _motorR
  9223   00594C  6E1C               	movwf	turnLeft45@mR^0,c
  9224   00594E  0E01               	movlw	high _motorR
  9225   005950  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9226   005952  EC20  F02E         	call	_turnLeft45	;wreg free
  9227                           
  9228                           ;dc_motor.c: 331:     turnLeft45(&motorL, &motorR);
  9229   005956  0E61               	movlw	low _motorL
  9230   005958  6E1A               	movwf	turnLeft45@mL^0,c
  9231   00595A  0E01               	movlw	high _motorL
  9232   00595C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9233   00595E  0E58               	movlw	low _motorR
  9234   005960  6E1C               	movwf	turnLeft45@mR^0,c
  9235   005962  0E01               	movlw	high _motorR
  9236   005964  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9237   005966  EC20  F02E         	call	_turnLeft45	;wreg free
  9238   00596A  0012               	return		;funcret
  9239   00596C                     __end_of_LightBlueMove:
  9240                           	callstack 0
  9241                           
  9242 ;; *************** function _GreenMove *****************
  9243 ;; Defined at:
  9244 ;;		line 277 in file "dc_motor.c"
  9245 ;; Parameters:    Size  Location     Type
  9246 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9247 ;;		 -> motorL(9), 
  9248 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9249 ;;		 -> motorR(9), 
  9250 ;; Auto vars:     Size  Location     Type
  9251 ;;		None
  9252 ;; Return value:  Size  Location     Type
  9253 ;;                  1    wreg      void 
  9254 ;; Registers used:
  9255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9256 ;; Tracked objects:
  9257 ;;		On entry : 0/0
  9258 ;;		On exit  : 0/0
  9259 ;;		Unchanged: 0/0
  9260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9261 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9264 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9265 ;;Total ram usage:        4 bytes
  9266 ;; Hardware stack levels used: 1
  9267 ;; Hardware stack levels required when called: 5
  9268 ;; This function calls:
  9269 ;;		_reverseDetect
  9270 ;;		_turnLeft45
  9271 ;; This function is called by:
  9272 ;;		_go_Home
  9273 ;;		_colour_move
  9274 ;; This function uses a non-reentrant model
  9275 ;;
  9276                           
  9277                           	psect	text44
  9278   005E1C                     __ptext44:
  9279                           	callstack 0
  9280   005E1C                     _GreenMove:
  9281                           	callstack 24
  9282   005E1C                     
  9283                           ;dc_motor.c: 278:     reverseDetect(&motorL, &motorR);
  9284   005E1C  0E61               	movlw	low _motorL
  9285   005E1E  6E1A               	movwf	reverseDetect@mL^0,c
  9286   005E20  0E01               	movlw	high _motorL
  9287   005E22  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9288   005E24  0E58               	movlw	low _motorR
  9289   005E26  6E1C               	movwf	reverseDetect@mR^0,c
  9290   005E28  0E01               	movlw	high _motorR
  9291   005E2A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9292   005E2C  EC5E  F02B         	call	_reverseDetect	;wreg free
  9293                           
  9294                           ;dc_motor.c: 280:     turnLeft45(&motorL, &motorR);
  9295   005E30  0E61               	movlw	low _motorL
  9296   005E32  6E1A               	movwf	turnLeft45@mL^0,c
  9297   005E34  0E01               	movlw	high _motorL
  9298   005E36  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9299   005E38  0E58               	movlw	low _motorR
  9300   005E3A  6E1C               	movwf	turnLeft45@mR^0,c
  9301   005E3C  0E01               	movlw	high _motorR
  9302   005E3E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9303   005E40  EC20  F02E         	call	_turnLeft45	;wreg free
  9304                           
  9305                           ;dc_motor.c: 281:     turnLeft45(&motorL, &motorR);
  9306   005E44  0E61               	movlw	low _motorL
  9307   005E46  6E1A               	movwf	turnLeft45@mL^0,c
  9308   005E48  0E01               	movlw	high _motorL
  9309   005E4A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9310   005E4C  0E58               	movlw	low _motorR
  9311   005E4E  6E1C               	movwf	turnLeft45@mR^0,c
  9312   005E50  0E01               	movlw	high _motorR
  9313   005E52  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9314   005E54  EC20  F02E         	call	_turnLeft45	;wreg free
  9315   005E58  0012               	return		;funcret
  9316   005E5A                     __end_of_GreenMove:
  9317                           	callstack 0
  9318                           
  9319 ;; *************** function _BlueMove *****************
  9320 ;; Defined at:
  9321 ;;		line 285 in file "dc_motor.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9324 ;;		 -> motorL(9), 
  9325 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9326 ;;		 -> motorR(9), 
  9327 ;; Auto vars:     Size  Location     Type
  9328 ;;		None
  9329 ;; Return value:  Size  Location     Type
  9330 ;;                  1    wreg      void 
  9331 ;; Registers used:
  9332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9333 ;; Tracked objects:
  9334 ;;		On entry : 0/0
  9335 ;;		On exit  : 0/0
  9336 ;;		Unchanged: 0/0
  9337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9338 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9341 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9342 ;;Total ram usage:        4 bytes
  9343 ;; Hardware stack levels used: 1
  9344 ;; Hardware stack levels required when called: 5
  9345 ;; This function calls:
  9346 ;;		_Backhalfblock
  9347 ;;		_reverseDetect
  9348 ;;		_turnRight45
  9349 ;; This function is called by:
  9350 ;;		_go_Home
  9351 ;;		_colour_move
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           	psect	text45
  9356   005376                     __ptext45:
  9357                           	callstack 0
  9358   005376                     _BlueMove:
  9359                           	callstack 24
  9360   005376                     
  9361                           ;dc_motor.c: 286:     reverseDetect(&motorL, &motorR);
  9362   005376  0E61               	movlw	low _motorL
  9363   005378  6E1A               	movwf	reverseDetect@mL^0,c
  9364   00537A  0E01               	movlw	high _motorL
  9365   00537C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9366   00537E  0E58               	movlw	low _motorR
  9367   005380  6E1C               	movwf	reverseDetect@mR^0,c
  9368   005382  0E01               	movlw	high _motorR
  9369   005384  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9370   005386  EC5E  F02B         	call	_reverseDetect	;wreg free
  9371                           
  9372                           ;dc_motor.c: 288:     turnRight45(&motorL, &motorR);
  9373   00538A  0E61               	movlw	low _motorL
  9374   00538C  6E1A               	movwf	turnRight45@mL^0,c
  9375   00538E  0E01               	movlw	high _motorL
  9376   005390  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9377   005392  0E58               	movlw	low _motorR
  9378   005394  6E1C               	movwf	turnRight45@mR^0,c
  9379   005396  0E01               	movlw	high _motorR
  9380   005398  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9381   00539A  ECF9  F02D         	call	_turnRight45	;wreg free
  9382                           
  9383                           ;dc_motor.c: 289:     turnRight45(&motorL, &motorR);
  9384   00539E  0E61               	movlw	low _motorL
  9385   0053A0  6E1A               	movwf	turnRight45@mL^0,c
  9386   0053A2  0E01               	movlw	high _motorL
  9387   0053A4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9388   0053A6  0E58               	movlw	low _motorR
  9389   0053A8  6E1C               	movwf	turnRight45@mR^0,c
  9390   0053AA  0E01               	movlw	high _motorR
  9391   0053AC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9392   0053AE  ECF9  F02D         	call	_turnRight45	;wreg free
  9393                           
  9394                           ;dc_motor.c: 290:     turnRight45(&motorL, &motorR);
  9395   0053B2  0E61               	movlw	low _motorL
  9396   0053B4  6E1A               	movwf	turnRight45@mL^0,c
  9397   0053B6  0E01               	movlw	high _motorL
  9398   0053B8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9399   0053BA  0E58               	movlw	low _motorR
  9400   0053BC  6E1C               	movwf	turnRight45@mR^0,c
  9401   0053BE  0E01               	movlw	high _motorR
  9402   0053C0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9403   0053C2  ECF9  F02D         	call	_turnRight45	;wreg free
  9404                           
  9405                           ;dc_motor.c: 291:     turnRight45(&motorL, &motorR);
  9406   0053C6  0E61               	movlw	low _motorL
  9407   0053C8  6E1A               	movwf	turnRight45@mL^0,c
  9408   0053CA  0E01               	movlw	high _motorL
  9409   0053CC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9410   0053CE  0E58               	movlw	low _motorR
  9411   0053D0  6E1C               	movwf	turnRight45@mR^0,c
  9412   0053D2  0E01               	movlw	high _motorR
  9413   0053D4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9414   0053D6  ECF9  F02D         	call	_turnRight45	;wreg free
  9415                           
  9416                           ;dc_motor.c: 293:     Backhalfblock(&motorL, &motorR);
  9417   0053DA  0E61               	movlw	low _motorL
  9418   0053DC  6E1A               	movwf	Backhalfblock@mL^0,c
  9419   0053DE  0E01               	movlw	high _motorL
  9420   0053E0  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  9421   0053E2  0E58               	movlw	low _motorR
  9422   0053E4  6E1C               	movwf	Backhalfblock@mR^0,c
  9423   0053E6  0E01               	movlw	high _motorR
  9424   0053E8  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  9425   0053EA  EC31  F02B         	call	_Backhalfblock	;wreg free
  9426   0053EE  0012               	return		;funcret
  9427   0053F0                     __end_of_BlueMove:
  9428                           	callstack 0
  9429                           
  9430 ;; *************** function _Backhalfblock *****************
  9431 ;; Defined at:
  9432 ;;		line 258 in file "dc_motor.c"
  9433 ;; Parameters:    Size  Location     Type
  9434 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9435 ;;		 -> motorL(9), 
  9436 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9437 ;;		 -> motorR(9), 
  9438 ;; Auto vars:     Size  Location     Type
  9439 ;;		None
  9440 ;; Return value:  Size  Location     Type
  9441 ;;                  1    wreg      void 
  9442 ;; Registers used:
  9443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9444 ;; Tracked objects:
  9445 ;;		On entry : 0/0
  9446 ;;		On exit  : 0/0
  9447 ;;		Unchanged: 0/0
  9448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9451 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9452 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9453 ;;Total ram usage:        6 bytes
  9454 ;; Hardware stack levels used: 1
  9455 ;; Hardware stack levels required when called: 4
  9456 ;; This function calls:
  9457 ;;		_fullSpeedBack
  9458 ;;		_stop
  9459 ;; This function is called by:
  9460 ;;		_BlueMove
  9461 ;; This function uses a non-reentrant model
  9462 ;;
  9463                           
  9464                           	psect	text46
  9465   005662                     __ptext46:
  9466                           	callstack 0
  9467   005662                     _Backhalfblock:
  9468                           	callstack 24
  9469   005662                     
  9470                           ;dc_motor.c: 259:     fullSpeedBack(mL,mR);
  9471   005662  C01A  F014         	movff	Backhalfblock@mL,fullSpeedBack@mL
  9472   005666  C01B  F015         	movff	Backhalfblock@mL+1,fullSpeedBack@mL+1
  9473   00566A  C01C  F016         	movff	Backhalfblock@mR,fullSpeedBack@mR
  9474   00566E  C01D  F017         	movff	Backhalfblock@mR+1,fullSpeedBack@mR+1
  9475   005672  EC5D  F028         	call	_fullSpeedBack	;wreg free
  9476   005676                     
  9477                           ;dc_motor.c: 260:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
  9478   005676  0E2B               	movlw	43
  9479   005678  6E1F               	movwf	(??_Backhalfblock+1)^0,c
  9480   00567A  0E9D               	movlw	157
  9481   00567C  6E1E               	movwf	??_Backhalfblock^0,c
  9482   00567E  0EF9               	movlw	249
  9483   005680                     u5967:
  9484   005680  2EE8               	decfsz	wreg,f,c
  9485   005682  D7FE               	bra	u5967
  9486   005684  2E1E               	decfsz	??_Backhalfblock^0,f,c
  9487   005686  D7FC               	bra	u5967
  9488   005688  2E1F               	decfsz	(??_Backhalfblock+1)^0,f,c
  9489   00568A  D7FA               	bra	u5967
  9490   00568C  F000               	nop	
  9491   00568E                     
  9492                           ;dc_motor.c: 261:     stop(&motorL, &motorR);
  9493   00568E  0E61               	movlw	low _motorL
  9494   005690  6E14               	movwf	stop@mL^0,c
  9495   005692  0E01               	movlw	high _motorL
  9496   005694  6E15               	movwf	(stop@mL+1)^0,c
  9497   005696  0E58               	movlw	low _motorR
  9498   005698  6E16               	movwf	stop@mR^0,c
  9499   00569A  0E01               	movlw	high _motorR
  9500   00569C  6E17               	movwf	(stop@mR+1)^0,c
  9501   00569E  EC3F  F029         	call	_stop	;wreg free
  9502                           
  9503                           ;dc_motor.c: 262:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9504   0056A2  0E05               	movlw	5
  9505   0056A4  6E1F               	movwf	(??_Backhalfblock+1)^0,c
  9506   0056A6  0E0F               	movlw	15
  9507   0056A8  6E1E               	movwf	??_Backhalfblock^0,c
  9508   0056AA  0EF1               	movlw	241
  9509   0056AC                     u5977:
  9510   0056AC  2EE8               	decfsz	wreg,f,c
  9511   0056AE  D7FE               	bra	u5977
  9512   0056B0  2E1E               	decfsz	??_Backhalfblock^0,f,c
  9513   0056B2  D7FC               	bra	u5977
  9514   0056B4  2E1F               	decfsz	(??_Backhalfblock+1)^0,f,c
  9515   0056B6  D7FA               	bra	u5977
  9516   0056B8  F000               	nop	
  9517   0056BA  0012               	return		;funcret
  9518   0056BC                     __end_of_Backhalfblock:
  9519                           	callstack 0
  9520                           
  9521 ;; *************** function _YellowMove *****************
  9522 ;; Defined at:
  9523 ;;		line 297 in file "dc_motor.c"
  9524 ;; Parameters:    Size  Location     Type
  9525 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9526 ;;		 -> motorL(9), 
  9527 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9528 ;;		 -> motorR(9), 
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;		None
  9531 ;; Return value:  Size  Location     Type
  9532 ;;                  1    wreg      void 
  9533 ;; Registers used:
  9534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9535 ;; Tracked objects:
  9536 ;;		On entry : 0/0
  9537 ;;		On exit  : 0/0
  9538 ;;		Unchanged: 0/0
  9539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9543 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9544 ;;Total ram usage:        4 bytes
  9545 ;; Hardware stack levels used: 1
  9546 ;; Hardware stack levels required when called: 5
  9547 ;; This function calls:
  9548 ;;		_reverseDetect
  9549 ;;		_reverseOneBlock
  9550 ;;		_turnRight45
  9551 ;; This function is called by:
  9552 ;;		_colour_move
  9553 ;; This function uses a non-reentrant model
  9554 ;;
  9555                           
  9556                           	psect	text47
  9557   00596C                     __ptext47:
  9558                           	callstack 0
  9559   00596C                     _YellowMove:
  9560                           	callstack 24
  9561   00596C                     
  9562                           ;dc_motor.c: 298:     reverseDetect(&motorL, &motorR);
  9563   00596C  0E61               	movlw	low _motorL
  9564   00596E  6E1A               	movwf	reverseDetect@mL^0,c
  9565   005970  0E01               	movlw	high _motorL
  9566   005972  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9567   005974  0E58               	movlw	low _motorR
  9568   005976  6E1C               	movwf	reverseDetect@mR^0,c
  9569   005978  0E01               	movlw	high _motorR
  9570   00597A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9571   00597C  EC5E  F02B         	call	_reverseDetect	;wreg free
  9572                           
  9573                           ;dc_motor.c: 300:     reverseOneBlock(&motorL, &motorR);
  9574   005980  0E61               	movlw	low _motorL
  9575   005982  6E1A               	movwf	reverseOneBlock@mL^0,c
  9576   005984  0E01               	movlw	high _motorL
  9577   005986  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9578   005988  0E58               	movlw	low _motorR
  9579   00598A  6E1C               	movwf	reverseOneBlock@mR^0,c
  9580   00598C  0E01               	movlw	high _motorR
  9581   00598E  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9582   005990  ECE4  F02B         	call	_reverseOneBlock	;wreg free
  9583                           
  9584                           ;dc_motor.c: 302:     turnRight45(&motorL, &motorR);
  9585   005994  0E61               	movlw	low _motorL
  9586   005996  6E1A               	movwf	turnRight45@mL^0,c
  9587   005998  0E01               	movlw	high _motorL
  9588   00599A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9589   00599C  0E58               	movlw	low _motorR
  9590   00599E  6E1C               	movwf	turnRight45@mR^0,c
  9591   0059A0  0E01               	movlw	high _motorR
  9592   0059A2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9593   0059A4  ECF9  F02D         	call	_turnRight45	;wreg free
  9594                           
  9595                           ;dc_motor.c: 303:     turnRight45(&motorL, &motorR);
  9596   0059A8  0E61               	movlw	low _motorL
  9597   0059AA  6E1A               	movwf	turnRight45@mL^0,c
  9598   0059AC  0E01               	movlw	high _motorL
  9599   0059AE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9600   0059B0  0E58               	movlw	low _motorR
  9601   0059B2  6E1C               	movwf	turnRight45@mR^0,c
  9602   0059B4  0E01               	movlw	high _motorR
  9603   0059B6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9604   0059B8  ECF9  F02D         	call	_turnRight45	;wreg free
  9605   0059BC  0012               	return		;funcret
  9606   0059BE                     __end_of_YellowMove:
  9607                           	callstack 0
  9608                           
  9609 ;; *************** function _turnRight45 *****************
  9610 ;; Defined at:
  9611 ;;		line 212 in file "dc_motor.c"
  9612 ;; Parameters:    Size  Location     Type
  9613 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9614 ;;		 -> motorL(9), 
  9615 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9616 ;;		 -> motorR(9), 
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;		None
  9619 ;; Return value:  Size  Location     Type
  9620 ;;                  1    wreg      void 
  9621 ;; Registers used:
  9622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9623 ;; Tracked objects:
  9624 ;;		On entry : 0/0
  9625 ;;		On exit  : 0/0
  9626 ;;		Unchanged: 0/0
  9627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9631 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9632 ;;Total ram usage:        6 bytes
  9633 ;; Hardware stack levels used: 1
  9634 ;; Hardware stack levels required when called: 4
  9635 ;; This function calls:
  9636 ;;		_TurnDelay
  9637 ;;		_stop
  9638 ;;		_turnRight
  9639 ;; This function is called by:
  9640 ;;		_RedMove
  9641 ;;		_BlueMove
  9642 ;;		_YellowMove
  9643 ;;		_OrangeMove
  9644 ;;		_ReverseYellow
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648                           	psect	text48
  9649   005BF2                     __ptext48:
  9650                           	callstack 0
  9651   005BF2                     _turnRight45:
  9652                           	callstack 24
  9653   005BF2                     
  9654                           ;dc_motor.c: 213:     turnRight(mL,mR);
  9655   005BF2  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  9656   005BF6  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  9657   005BFA  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  9658   005BFE  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  9659   005C02  ECBF  F027         	call	_turnRight	;wreg free
  9660   005C06                     
  9661                           ;dc_motor.c: 214:     TurnDelay(Turn45Delay);
  9662   005C06  C0F4  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
  9663   005C0A  C0F5  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
  9664   005C0E  EC65  F02F         	call	_TurnDelay	;wreg free
  9665   005C12                     
  9666                           ;dc_motor.c: 215:     stop(&motorL, &motorR);
  9667   005C12  0E61               	movlw	low _motorL
  9668   005C14  6E14               	movwf	stop@mL^0,c
  9669   005C16  0E01               	movlw	high _motorL
  9670   005C18  6E15               	movwf	(stop@mL+1)^0,c
  9671   005C1A  0E58               	movlw	low _motorR
  9672   005C1C  6E16               	movwf	stop@mR^0,c
  9673   005C1E  0E01               	movlw	high _motorR
  9674   005C20  6E17               	movwf	(stop@mR+1)^0,c
  9675   005C22  EC3F  F029         	call	_stop	;wreg free
  9676   005C26                     
  9677                           ;dc_motor.c: 216:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9678   005C26  0E05               	movlw	5
  9679   005C28  6E1F               	movwf	(??_turnRight45+1)^0,c
  9680   005C2A  0E0F               	movlw	15
  9681   005C2C  6E1E               	movwf	??_turnRight45^0,c
  9682   005C2E  0EF1               	movlw	241
  9683   005C30                     u5987:
  9684   005C30  2EE8               	decfsz	wreg,f,c
  9685   005C32  D7FE               	bra	u5987
  9686   005C34  2E1E               	decfsz	??_turnRight45^0,f,c
  9687   005C36  D7FC               	bra	u5987
  9688   005C38  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  9689   005C3A  D7FA               	bra	u5987
  9690   005C3C  F000               	nop	
  9691   005C3E  0012               	return		;funcret
  9692   005C40                     __end_of_turnRight45:
  9693                           	callstack 0
  9694                           
  9695 ;; *************** function _turnRight *****************
  9696 ;; Defined at:
  9697 ;;		line 130 in file "dc_motor.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9700 ;;		 -> motorL(9), 
  9701 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9702 ;;		 -> motorR(9), 
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;		None
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  1    wreg      void 
  9707 ;; Registers used:
  9708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9716 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9717 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9718 ;;Total ram usage:        6 bytes
  9719 ;; Hardware stack levels used: 1
  9720 ;; Hardware stack levels required when called: 3
  9721 ;; This function calls:
  9722 ;;		_setMotorPWM
  9723 ;; This function is called by:
  9724 ;;		_turnRight45
  9725 ;; This function uses a non-reentrant model
  9726 ;;
  9727                           
  9728                           	psect	text49
  9729   004F7E                     __ptext49:
  9730                           	callstack 0
  9731   004F7E                     _turnRight:
  9732                           	callstack 24
  9733   004F7E                     
  9734                           ;dc_motor.c: 130: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          1: {;dc_motor.c: 132:     mL->direction =1;
  9735   004F7E  EE20 F001          	lfsr	2,1
  9736   004F82  5014               	movf	turnRight@mL^0,w,c
  9737   004F84  26D9               	addwf	fsr2l,f,c
  9738   004F86  5015               	movf	(turnRight@mL+1)^0,w,c
  9739   004F88  22DA               	addwfc	fsr2h,f,c
  9740   004F8A  0E01               	movlw	1
  9741   004F8C  6EDF               	movwf	indf2,c
  9742                           
  9743                           ;dc_motor.c: 133:     mR->direction =0;
  9744   004F8E  EE20 F001          	lfsr	2,1
  9745   004F92  5016               	movf	turnRight@mR^0,w,c
  9746   004F94  26D9               	addwf	fsr2l,f,c
  9747   004F96  5017               	movf	(turnRight@mR+1)^0,w,c
  9748   004F98  22DA               	addwfc	fsr2h,f,c
  9749   004F9A  0E00               	movlw	0
  9750   004F9C  6EDF               	movwf	indf2,c
  9751                           
  9752                           ;dc_motor.c: 135:     while(mL->power<power && mR->power<power){
  9753   004F9E  EFF5  F027         	goto	l4157
  9754   004FA2                     l4149:
  9755                           
  9756                           ;dc_motor.c: 137:         mL->power+=10;
  9757   004FA2  C014  FFD9         	movff	turnRight@mL,fsr2l
  9758   004FA6  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9759   004FAA  0E0A               	movlw	10
  9760   004FAC  26DF               	addwf	indf2,f,c
  9761                           
  9762                           ;dc_motor.c: 138:         mR->power+=10;
  9763   004FAE  C016  FFD9         	movff	turnRight@mR,fsr2l
  9764   004FB2  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9765   004FB6  0E0A               	movlw	10
  9766   004FB8  26DF               	addwf	indf2,f,c
  9767   004FBA                     
  9768                           ;dc_motor.c: 140:         setMotorPWM(mL);
  9769   004FBA  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  9770   004FBE  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  9771   004FC2  EC0E  F023         	call	_setMotorPWM	;wreg free
  9772   004FC6                     
  9773                           ;dc_motor.c: 141:         setMotorPWM(mR);
  9774   004FC6  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  9775   004FCA  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  9776   004FCE  EC0E  F023         	call	_setMotorPWM	;wreg free
  9777   004FD2                     
  9778                           ;dc_motor.c: 143:         _delay((unsigned long)((20)*(64000000/4000.0)));
  9779   004FD2  0E02               	movlw	2
  9780   004FD4  6E19               	movwf	(??_turnRight+1)^0,c
  9781   004FD6  0EA0               	movlw	160
  9782   004FD8  6E18               	movwf	??_turnRight^0,c
  9783   004FDA  0E92               	movlw	146
  9784   004FDC                     u5997:
  9785   004FDC  2EE8               	decfsz	wreg,f,c
  9786   004FDE  D7FE               	bra	u5997
  9787   004FE0  2E18               	decfsz	??_turnRight^0,f,c
  9788   004FE2  D7FC               	bra	u5997
  9789   004FE4  2E19               	decfsz	(??_turnRight+1)^0,f,c
  9790   004FE6  D7FA               	bra	u5997
  9791   004FE8  D000               	nop2	
  9792   004FEA                     l4157:
  9793   004FEA  C014  FFD9         	movff	turnRight@mL,fsr2l
  9794   004FEE  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9795   004FF2  0E32               	movlw	50
  9796   004FF4  60DF               	cpfslt	indf2,c
  9797   004FF6  EFFF  F027         	goto	u3471
  9798   004FFA  EF01  F028         	goto	u3470
  9799   004FFE                     u3471:
  9800   004FFE  EF0D  F028         	goto	l446
  9801   005002                     u3470:
  9802   005002  C016  FFD9         	movff	turnRight@mR,fsr2l
  9803   005006  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9804   00500A  0E31               	movlw	49
  9805   00500C  64DF               	cpfsgt	indf2,c
  9806   00500E  EF0B  F028         	goto	u3481
  9807   005012  EF0D  F028         	goto	u3480
  9808   005016                     u3481:
  9809   005016  EFD1  F027         	goto	l4149
  9810   00501A                     u3480:
  9811   00501A                     l446:
  9812   00501A  0012               	return		;funcret
  9813   00501C                     __end_of_turnRight:
  9814                           	callstack 0
  9815                           
  9816 ;; *************** function _RetryMove *****************
  9817 ;; Defined at:
  9818 ;;		line 334 in file "dc_motor.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9821 ;;		 -> motorL(9), 
  9822 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9823 ;;		 -> motorR(9), 
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;		None
  9826 ;; Return value:  Size  Location     Type
  9827 ;;                  1    wreg      void 
  9828 ;; Registers used:
  9829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9830 ;; Tracked objects:
  9831 ;;		On entry : 0/0
  9832 ;;		On exit  : 0/0
  9833 ;;		Unchanged: 0/0
  9834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9837 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9838 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9839 ;;Total ram usage:        6 bytes
  9840 ;; Hardware stack levels used: 1
  9841 ;; Hardware stack levels required when called: 5
  9842 ;; This function calls:
  9843 ;;		_fullSpeedAhead
  9844 ;;		_reverseDetect
  9845 ;;		_stop
  9846 ;; This function is called by:
  9847 ;;		_colour_move
  9848 ;; This function uses a non-reentrant model
  9849 ;;
  9850                           
  9851                           	psect	text50
  9852   0054D2                     __ptext50:
  9853                           	callstack 0
  9854   0054D2                     _RetryMove:
  9855                           	callstack 24
  9856   0054D2                     
  9857                           ;dc_motor.c: 335:     reverseDetect(&motorL, &motorR);
  9858   0054D2  0E61               	movlw	low _motorL
  9859   0054D4  6E1A               	movwf	reverseDetect@mL^0,c
  9860   0054D6  0E01               	movlw	high _motorL
  9861   0054D8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9862   0054DA  0E58               	movlw	low _motorR
  9863   0054DC  6E1C               	movwf	reverseDetect@mR^0,c
  9864   0054DE  0E01               	movlw	high _motorR
  9865   0054E0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9866   0054E2  EC5E  F02B         	call	_reverseDetect	;wreg free
  9867                           
  9868                           ;dc_motor.c: 336:     stop(&motorL, &motorR);
  9869   0054E6  0E61               	movlw	low _motorL
  9870   0054E8  6E14               	movwf	stop@mL^0,c
  9871   0054EA  0E01               	movlw	high _motorL
  9872   0054EC  6E15               	movwf	(stop@mL+1)^0,c
  9873   0054EE  0E58               	movlw	low _motorR
  9874   0054F0  6E16               	movwf	stop@mR^0,c
  9875   0054F2  0E01               	movlw	high _motorR
  9876   0054F4  6E17               	movwf	(stop@mR+1)^0,c
  9877   0054F6  EC3F  F029         	call	_stop	;wreg free
  9878                           
  9879                           ;dc_motor.c: 337:     fullSpeedAhead(mL,mR);
  9880   0054FA  C020  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  9881   0054FE  C021  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  9882   005502  C022  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  9883   005506  C023  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  9884   00550A  ECAC  F028         	call	_fullSpeedAhead	;wreg free
  9885   00550E                     
  9886                           ;dc_motor.c: 338:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9887   00550E  0E29               	movlw	41
  9888   005510  6E25               	movwf	(??_RetryMove+1)^0,c
  9889   005512  0E96               	movlw	150
  9890   005514  6E24               	movwf	??_RetryMove^0,c
  9891   005516  0E7F               	movlw	127
  9892   005518                     u6007:
  9893   005518  2EE8               	decfsz	wreg,f,c
  9894   00551A  D7FE               	bra	u6007
  9895   00551C  2E24               	decfsz	??_RetryMove^0,f,c
  9896   00551E  D7FC               	bra	u6007
  9897   005520  2E25               	decfsz	(??_RetryMove+1)^0,f,c
  9898   005522  D7FA               	bra	u6007
  9899   005524  F000               	nop	
  9900   005526                     
  9901                           ;dc_motor.c: 339:     stop(&motorL, &motorR);
  9902   005526  0E61               	movlw	low _motorL
  9903   005528  6E14               	movwf	stop@mL^0,c
  9904   00552A  0E01               	movlw	high _motorL
  9905   00552C  6E15               	movwf	(stop@mL+1)^0,c
  9906   00552E  0E58               	movlw	low _motorR
  9907   005530  6E16               	movwf	stop@mR^0,c
  9908   005532  0E01               	movlw	high _motorR
  9909   005534  6E17               	movwf	(stop@mR+1)^0,c
  9910   005536  EC3F  F029         	call	_stop	;wreg free
  9911   00553A  0012               	return		;funcret
  9912   00553C                     __end_of_RetryMove:
  9913                           	callstack 0
  9914                           
  9915 ;; *************** function _PinkMove *****************
  9916 ;; Defined at:
  9917 ;;		line 307 in file "dc_motor.c"
  9918 ;; Parameters:    Size  Location     Type
  9919 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9920 ;;		 -> motorL(9), 
  9921 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9922 ;;		 -> motorR(9), 
  9923 ;; Auto vars:     Size  Location     Type
  9924 ;;		None
  9925 ;; Return value:  Size  Location     Type
  9926 ;;                  1    wreg      void 
  9927 ;; Registers used:
  9928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9929 ;; Tracked objects:
  9930 ;;		On entry : 0/0
  9931 ;;		On exit  : 0/0
  9932 ;;		Unchanged: 0/0
  9933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9937 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9938 ;;Total ram usage:        4 bytes
  9939 ;; Hardware stack levels used: 1
  9940 ;; Hardware stack levels required when called: 5
  9941 ;; This function calls:
  9942 ;;		_reverseDetect
  9943 ;;		_reverseOneBlock
  9944 ;;		_turnLeft45
  9945 ;; This function is called by:
  9946 ;;		_colour_move
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           
  9950                           	psect	text51
  9951   0059BE                     __ptext51:
  9952                           	callstack 0
  9953   0059BE                     _PinkMove:
  9954                           	callstack 24
  9955   0059BE                     
  9956                           ;dc_motor.c: 308:     reverseDetect(&motorL, &motorR);
  9957   0059BE  0E61               	movlw	low _motorL
  9958   0059C0  6E1A               	movwf	reverseDetect@mL^0,c
  9959   0059C2  0E01               	movlw	high _motorL
  9960   0059C4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9961   0059C6  0E58               	movlw	low _motorR
  9962   0059C8  6E1C               	movwf	reverseDetect@mR^0,c
  9963   0059CA  0E01               	movlw	high _motorR
  9964   0059CC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9965   0059CE  EC5E  F02B         	call	_reverseDetect	;wreg free
  9966                           
  9967                           ;dc_motor.c: 310:     reverseOneBlock(&motorL, &motorR);
  9968   0059D2  0E61               	movlw	low _motorL
  9969   0059D4  6E1A               	movwf	reverseOneBlock@mL^0,c
  9970   0059D6  0E01               	movlw	high _motorL
  9971   0059D8  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9972   0059DA  0E58               	movlw	low _motorR
  9973   0059DC  6E1C               	movwf	reverseOneBlock@mR^0,c
  9974   0059DE  0E01               	movlw	high _motorR
  9975   0059E0  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9976   0059E2  ECE4  F02B         	call	_reverseOneBlock	;wreg free
  9977                           
  9978                           ;dc_motor.c: 312:     turnLeft45(&motorL, &motorR);
  9979   0059E6  0E61               	movlw	low _motorL
  9980   0059E8  6E1A               	movwf	turnLeft45@mL^0,c
  9981   0059EA  0E01               	movlw	high _motorL
  9982   0059EC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9983   0059EE  0E58               	movlw	low _motorR
  9984   0059F0  6E1C               	movwf	turnLeft45@mR^0,c
  9985   0059F2  0E01               	movlw	high _motorR
  9986   0059F4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9987   0059F6  EC20  F02E         	call	_turnLeft45	;wreg free
  9988                           
  9989                           ;dc_motor.c: 313:     turnLeft45(&motorL, &motorR);
  9990   0059FA  0E61               	movlw	low _motorL
  9991   0059FC  6E1A               	movwf	turnLeft45@mL^0,c
  9992   0059FE  0E01               	movlw	high _motorL
  9993   005A00  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9994   005A02  0E58               	movlw	low _motorR
  9995   005A04  6E1C               	movwf	turnLeft45@mR^0,c
  9996   005A06  0E01               	movlw	high _motorR
  9997   005A08  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9998   005A0A  EC20  F02E         	call	_turnLeft45	;wreg free
  9999   005A0E  0012               	return		;funcret
 10000   005A10                     __end_of_PinkMove:
 10001                           	callstack 0
 10002                           
 10003 ;; *************** function _turnLeft45 *****************
 10004 ;; Defined at:
 10005 ;;		line 219 in file "dc_motor.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10008 ;;		 -> motorL(9), 
 10009 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10010 ;;		 -> motorR(9), 
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;		None
 10013 ;; Return value:  Size  Location     Type
 10014 ;;                  1    wreg      void 
 10015 ;; Registers used:
 10016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10017 ;; Tracked objects:
 10018 ;;		On entry : 0/0
 10019 ;;		On exit  : 0/0
 10020 ;;		Unchanged: 0/0
 10021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10022 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10024 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10025 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10026 ;;Total ram usage:        6 bytes
 10027 ;; Hardware stack levels used: 1
 10028 ;; Hardware stack levels required when called: 4
 10029 ;; This function calls:
 10030 ;;		_TurnDelay
 10031 ;;		_stop
 10032 ;;		_turnLeft
 10033 ;; This function is called by:
 10034 ;;		_GreenMove
 10035 ;;		_PinkMove
 10036 ;;		_LightBlueMove
 10037 ;;		_ReversePink
 10038 ;;		_turnCalibration
 10039 ;; This function uses a non-reentrant model
 10040 ;;
 10041                           
 10042                           	psect	text52
 10043   005C40                     __ptext52:
 10044                           	callstack 0
 10045   005C40                     _turnLeft45:
 10046                           	callstack 25
 10047   005C40                     
 10048                           ;dc_motor.c: 220:     turnLeft(mL,mR);
 10049   005C40  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10050   005C44  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10051   005C48  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10052   005C4C  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10053   005C50  EC0E  F028         	call	_turnLeft	;wreg free
 10054   005C54                     
 10055                           ;dc_motor.c: 221:     TurnDelay(Turn45Delay);
 10056   005C54  C0F4  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10057   005C58  C0F5  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10058   005C5C  EC65  F02F         	call	_TurnDelay	;wreg free
 10059   005C60                     
 10060                           ;dc_motor.c: 222:     stop(&motorL, &motorR);
 10061   005C60  0E61               	movlw	low _motorL
 10062   005C62  6E14               	movwf	stop@mL^0,c
 10063   005C64  0E01               	movlw	high _motorL
 10064   005C66  6E15               	movwf	(stop@mL+1)^0,c
 10065   005C68  0E58               	movlw	low _motorR
 10066   005C6A  6E16               	movwf	stop@mR^0,c
 10067   005C6C  0E01               	movlw	high _motorR
 10068   005C6E  6E17               	movwf	(stop@mR+1)^0,c
 10069   005C70  EC3F  F029         	call	_stop	;wreg free
 10070   005C74                     
 10071                           ;dc_motor.c: 223:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10072   005C74  0E05               	movlw	5
 10073   005C76  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10074   005C78  0E0F               	movlw	15
 10075   005C7A  6E1E               	movwf	??_turnLeft45^0,c
 10076   005C7C  0EF1               	movlw	241
 10077   005C7E                     u6017:
 10078   005C7E  2EE8               	decfsz	wreg,f,c
 10079   005C80  D7FE               	bra	u6017
 10080   005C82  2E1E               	decfsz	??_turnLeft45^0,f,c
 10081   005C84  D7FC               	bra	u6017
 10082   005C86  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10083   005C88  D7FA               	bra	u6017
 10084   005C8A  F000               	nop	
 10085   005C8C  0012               	return		;funcret
 10086   005C8E                     __end_of_turnLeft45:
 10087                           	callstack 0
 10088                           
 10089 ;; *************** function _turnLeft *****************
 10090 ;; Defined at:
 10091 ;;		line 112 in file "dc_motor.c"
 10092 ;; Parameters:    Size  Location     Type
 10093 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10094 ;;		 -> motorL(9), 
 10095 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10096 ;;		 -> motorR(9), 
 10097 ;; Auto vars:     Size  Location     Type
 10098 ;;		None
 10099 ;; Return value:  Size  Location     Type
 10100 ;;                  1    wreg      void 
 10101 ;; Registers used:
 10102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10103 ;; Tracked objects:
 10104 ;;		On entry : 0/0
 10105 ;;		On exit  : 0/0
 10106 ;;		Unchanged: 0/0
 10107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10108 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10110 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10111 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10112 ;;Total ram usage:        6 bytes
 10113 ;; Hardware stack levels used: 1
 10114 ;; Hardware stack levels required when called: 3
 10115 ;; This function calls:
 10116 ;;		_setMotorPWM
 10117 ;; This function is called by:
 10118 ;;		_turnLeft45
 10119 ;; This function uses a non-reentrant model
 10120 ;;
 10121                           
 10122                           	psect	text53
 10123   00501C                     __ptext53:
 10124                           	callstack 0
 10125   00501C                     _turnLeft:
 10126                           	callstack 25
 10127   00501C                     
 10128                           ;dc_motor.c: 112: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 113
      +                          : {;dc_motor.c: 114:     mL->direction =0;
 10129   00501C  EE20 F001          	lfsr	2,1
 10130   005020  5014               	movf	turnLeft@mL^0,w,c
 10131   005022  26D9               	addwf	fsr2l,f,c
 10132   005024  5015               	movf	(turnLeft@mL+1)^0,w,c
 10133   005026  22DA               	addwfc	fsr2h,f,c
 10134   005028  0E00               	movlw	0
 10135   00502A  6EDF               	movwf	indf2,c
 10136                           
 10137                           ;dc_motor.c: 115:     mR->direction =1;
 10138   00502C  EE20 F001          	lfsr	2,1
 10139   005030  5016               	movf	turnLeft@mR^0,w,c
 10140   005032  26D9               	addwf	fsr2l,f,c
 10141   005034  5017               	movf	(turnLeft@mR+1)^0,w,c
 10142   005036  22DA               	addwfc	fsr2h,f,c
 10143   005038  0E01               	movlw	1
 10144   00503A  6EDF               	movwf	indf2,c
 10145                           
 10146                           ;dc_motor.c: 117:     while(mL->power<power && mR->power<power){
 10147   00503C  EF44  F028         	goto	l4143
 10148   005040                     l4135:
 10149                           
 10150                           ;dc_motor.c: 119:         mL->power+=10;
 10151   005040  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10152   005044  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10153   005048  0E0A               	movlw	10
 10154   00504A  26DF               	addwf	indf2,f,c
 10155                           
 10156                           ;dc_motor.c: 120:         mR->power+=10;
 10157   00504C  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10158   005050  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10159   005054  0E0A               	movlw	10
 10160   005056  26DF               	addwf	indf2,f,c
 10161   005058                     
 10162                           ;dc_motor.c: 122:         setMotorPWM(mL);
 10163   005058  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10164   00505C  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10165   005060  EC0E  F023         	call	_setMotorPWM	;wreg free
 10166   005064                     
 10167                           ;dc_motor.c: 123:         setMotorPWM(mR);
 10168   005064  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10169   005068  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10170   00506C  EC0E  F023         	call	_setMotorPWM	;wreg free
 10171   005070                     
 10172                           ;dc_motor.c: 125:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10173   005070  0E02               	movlw	2
 10174   005072  6E19               	movwf	(??_turnLeft+1)^0,c
 10175   005074  0EA0               	movlw	160
 10176   005076  6E18               	movwf	??_turnLeft^0,c
 10177   005078  0E92               	movlw	146
 10178   00507A                     u6027:
 10179   00507A  2EE8               	decfsz	wreg,f,c
 10180   00507C  D7FE               	bra	u6027
 10181   00507E  2E18               	decfsz	??_turnLeft^0,f,c
 10182   005080  D7FC               	bra	u6027
 10183   005082  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10184   005084  D7FA               	bra	u6027
 10185   005086  D000               	nop2	
 10186   005088                     l4143:
 10187   005088  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10188   00508C  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10189   005090  0E32               	movlw	50
 10190   005092  60DF               	cpfslt	indf2,c
 10191   005094  EF4E  F028         	goto	u3451
 10192   005098  EF50  F028         	goto	u3450
 10193   00509C                     u3451:
 10194   00509C  EF5C  F028         	goto	l438
 10195   0050A0                     u3450:
 10196   0050A0  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10197   0050A4  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10198   0050A8  0E31               	movlw	49
 10199   0050AA  64DF               	cpfsgt	indf2,c
 10200   0050AC  EF5A  F028         	goto	u3461
 10201   0050B0  EF5C  F028         	goto	u3460
 10202   0050B4                     u3461:
 10203   0050B4  EF20  F028         	goto	l4135
 10204   0050B8                     u3460:
 10205   0050B8                     l438:
 10206   0050B8  0012               	return		;funcret
 10207   0050BA                     __end_of_turnLeft:
 10208                           	callstack 0
 10209                           
 10210 ;; *************** function _TurnDelay *****************
 10211 ;; Defined at:
 10212 ;;		line 205 in file "dc_motor.c"
 10213 ;; Parameters:    Size  Location     Type
 10214 ;;  Turn45Delay     2    0[COMRAM] int 
 10215 ;; Auto vars:     Size  Location     Type
 10216 ;;		None
 10217 ;; Return value:  Size  Location     Type
 10218 ;;                  1    wreg      void 
 10219 ;; Registers used:
 10220 ;;		wreg, status,2, status,0
 10221 ;; Tracked objects:
 10222 ;;		On entry : 0/0
 10223 ;;		On exit  : 0/0
 10224 ;;		Unchanged: 0/0
 10225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10228 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10229 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10230 ;;Total ram usage:        3 bytes
 10231 ;; Hardware stack levels used: 1
 10232 ;; Hardware stack levels required when called: 1
 10233 ;; This function calls:
 10234 ;;		Nothing
 10235 ;; This function is called by:
 10236 ;;		_turnRight45
 10237 ;;		_turnLeft45
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241                           	psect	text54
 10242   005ECA                     __ptext54:
 10243                           	callstack 0
 10244   005ECA                     _TurnDelay:
 10245                           	callstack 27
 10246   005ECA                     
 10247                           ;dc_motor.c: 206:     while (Turn45Delay>0){
 10248   005ECA  EF72  F02F         	goto	l473
 10249   005ECE                     l4177:
 10250                           
 10251                           ;dc_motor.c: 207:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10252   005ECE  0E15               	movlw	21
 10253   005ED0  6E03               	movwf	??_TurnDelay^0,c
 10254   005ED2  0EC6               	movlw	198
 10255   005ED4                     u6037:
 10256   005ED4  2EE8               	decfsz	wreg,f,c
 10257   005ED6  D7FE               	bra	u6037
 10258   005ED8  2E03               	decfsz	??_TurnDelay^0,f,c
 10259   005EDA  D7FC               	bra	u6037
 10260   005EDC  D000               	nop2	
 10261   005EDE                     
 10262                           ;dc_motor.c: 208:         Turn45Delay--;
 10263   005EDE  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10264   005EE0  A0D8               	btfss	status,0,c
 10265   005EE2  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10266   005EE4                     l473:
 10267                           
 10268                           ;dc_motor.c: 206:     while (Turn45Delay>0){
 10269   005EE4  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10270   005EE6  EF7F  F02F         	goto	u3510
 10271   005EEA  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10272   005EEC  E106               	bnz	u3511
 10273   005EEE  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10274   005EF0  B0D8               	btfsc	status,0,c
 10275   005EF2  EF7D  F02F         	goto	u3511
 10276   005EF6  EF7F  F02F         	goto	u3510
 10277   005EFA                     u3511:
 10278   005EFA  EF67  F02F         	goto	l4177
 10279   005EFE                     u3510:
 10280   005EFE  0012               	return		;funcret
 10281   005F00                     __end_of_TurnDelay:
 10282                           	callstack 0
 10283                           
 10284 ;; *************** function _reverseOneBlock *****************
 10285 ;; Defined at:
 10286 ;;		line 239 in file "dc_motor.c"
 10287 ;; Parameters:    Size  Location     Type
 10288 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10289 ;;		 -> motorL(9), 
 10290 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10291 ;;		 -> motorR(9), 
 10292 ;; Auto vars:     Size  Location     Type
 10293 ;;		None
 10294 ;; Return value:  Size  Location     Type
 10295 ;;                  1    wreg      void 
 10296 ;; Registers used:
 10297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10298 ;; Tracked objects:
 10299 ;;		On entry : 0/0
 10300 ;;		On exit  : 0/0
 10301 ;;		Unchanged: 0/0
 10302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10305 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10306 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10307 ;;Total ram usage:        6 bytes
 10308 ;; Hardware stack levels used: 1
 10309 ;; Hardware stack levels required when called: 4
 10310 ;; This function calls:
 10311 ;;		_fullSpeedBack
 10312 ;;		_stop
 10313 ;; This function is called by:
 10314 ;;		_YellowMove
 10315 ;;		_PinkMove
 10316 ;; This function uses a non-reentrant model
 10317 ;;
 10318                           
 10319                           	psect	text55
 10320   0057C8                     __ptext55:
 10321                           	callstack 0
 10322   0057C8                     _reverseOneBlock:
 10323                           	callstack 24
 10324   0057C8                     
 10325                           ;dc_motor.c: 240:     fullSpeedBack(mL,mR);
 10326   0057C8  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10327   0057CC  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10328   0057D0  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10329   0057D4  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10330   0057D8  EC5D  F028         	call	_fullSpeedBack	;wreg free
 10331   0057DC                     
 10332                           ;dc_motor.c: 241:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10333   0057DC  0E56               	movlw	86
 10334   0057DE  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10335   0057E0  0E3A               	movlw	58
 10336   0057E2  6E1E               	movwf	??_reverseOneBlock^0,c
 10337   0057E4  0EF4               	movlw	244
 10338   0057E6                     u6047:
 10339   0057E6  2EE8               	decfsz	wreg,f,c
 10340   0057E8  D7FE               	bra	u6047
 10341   0057EA  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10342   0057EC  D7FC               	bra	u6047
 10343   0057EE  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10344   0057F0  D7FA               	bra	u6047
 10345   0057F2                     
 10346                           ;dc_motor.c: 242:     stop(&motorL, &motorR);
 10347   0057F2  0E61               	movlw	low _motorL
 10348   0057F4  6E14               	movwf	stop@mL^0,c
 10349   0057F6  0E01               	movlw	high _motorL
 10350   0057F8  6E15               	movwf	(stop@mL+1)^0,c
 10351   0057FA  0E58               	movlw	low _motorR
 10352   0057FC  6E16               	movwf	stop@mR^0,c
 10353   0057FE  0E01               	movlw	high _motorR
 10354   005800  6E17               	movwf	(stop@mR+1)^0,c
 10355   005802  EC3F  F029         	call	_stop	;wreg free
 10356                           
 10357                           ;dc_motor.c: 243:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10358   005806  0E05               	movlw	5
 10359   005808  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10360   00580A  0E0F               	movlw	15
 10361   00580C  6E1E               	movwf	??_reverseOneBlock^0,c
 10362   00580E  0EF1               	movlw	241
 10363   005810                     u6057:
 10364   005810  2EE8               	decfsz	wreg,f,c
 10365   005812  D7FE               	bra	u6057
 10366   005814  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10367   005816  D7FC               	bra	u6057
 10368   005818  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10369   00581A  D7FA               	bra	u6057
 10370   00581C  F000               	nop	
 10371   00581E  0012               	return		;funcret
 10372   005820                     __end_of_reverseOneBlock:
 10373                           	callstack 0
 10374                           
 10375 ;; *************** function _reverseDetect *****************
 10376 ;; Defined at:
 10377 ;;		line 226 in file "dc_motor.c"
 10378 ;; Parameters:    Size  Location     Type
 10379 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10380 ;;		 -> motorL(9), 
 10381 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10382 ;;		 -> motorR(9), 
 10383 ;; Auto vars:     Size  Location     Type
 10384 ;;		None
 10385 ;; Return value:  Size  Location     Type
 10386 ;;                  1    wreg      void 
 10387 ;; Registers used:
 10388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10389 ;; Tracked objects:
 10390 ;;		On entry : 0/0
 10391 ;;		On exit  : 0/0
 10392 ;;		Unchanged: 0/0
 10393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10396 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10397 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10398 ;;Total ram usage:        6 bytes
 10399 ;; Hardware stack levels used: 1
 10400 ;; Hardware stack levels required when called: 4
 10401 ;; This function calls:
 10402 ;;		_fullSpeedBack
 10403 ;;		_stop
 10404 ;; This function is called by:
 10405 ;;		_RedMove
 10406 ;;		_GreenMove
 10407 ;;		_BlueMove
 10408 ;;		_YellowMove
 10409 ;;		_PinkMove
 10410 ;;		_OrangeMove
 10411 ;;		_LightBlueMove
 10412 ;;		_RetryMove
 10413 ;;		_ReverseYellow
 10414 ;;		_ReversePink
 10415 ;; This function uses a non-reentrant model
 10416 ;;
 10417                           
 10418                           	psect	text56
 10419   0056BC                     __ptext56:
 10420                           	callstack 0
 10421   0056BC                     _reverseDetect:
 10422                           	callstack 24
 10423   0056BC                     
 10424                           ;dc_motor.c: 227:     fullSpeedBack(mL,mR);
 10425   0056BC  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10426   0056C0  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10427   0056C4  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10428   0056C8  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10429   0056CC  EC5D  F028         	call	_fullSpeedBack	;wreg free
 10430   0056D0                     
 10431                           ;dc_motor.c: 228:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10432   0056D0  0E11               	movlw	17
 10433   0056D2  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10434   0056D4  0E3C               	movlw	60
 10435   0056D6  6E1E               	movwf	??_reverseDetect^0,c
 10436   0056D8  0ECB               	movlw	203
 10437   0056DA                     u6067:
 10438   0056DA  2EE8               	decfsz	wreg,f,c
 10439   0056DC  D7FE               	bra	u6067
 10440   0056DE  2E1E               	decfsz	??_reverseDetect^0,f,c
 10441   0056E0  D7FC               	bra	u6067
 10442   0056E2  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10443   0056E4  D7FA               	bra	u6067
 10444   0056E6  F000               	nop	
 10445   0056E8                     
 10446                           ;dc_motor.c: 229:     stop(&motorL, &motorR);
 10447   0056E8  0E61               	movlw	low _motorL
 10448   0056EA  6E14               	movwf	stop@mL^0,c
 10449   0056EC  0E01               	movlw	high _motorL
 10450   0056EE  6E15               	movwf	(stop@mL+1)^0,c
 10451   0056F0  0E58               	movlw	low _motorR
 10452   0056F2  6E16               	movwf	stop@mR^0,c
 10453   0056F4  0E01               	movlw	high _motorR
 10454   0056F6  6E17               	movwf	(stop@mR+1)^0,c
 10455   0056F8  EC3F  F029         	call	_stop	;wreg free
 10456                           
 10457                           ;dc_motor.c: 230:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10458   0056FC  0E05               	movlw	5
 10459   0056FE  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10460   005700  0E0F               	movlw	15
 10461   005702  6E1E               	movwf	??_reverseDetect^0,c
 10462   005704  0EF1               	movlw	241
 10463   005706                     u6077:
 10464   005706  2EE8               	decfsz	wreg,f,c
 10465   005708  D7FE               	bra	u6077
 10466   00570A  2E1E               	decfsz	??_reverseDetect^0,f,c
 10467   00570C  D7FC               	bra	u6077
 10468   00570E  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10469   005710  D7FA               	bra	u6077
 10470   005712  F000               	nop	
 10471   005714  0012               	return		;funcret
 10472   005716                     __end_of_reverseDetect:
 10473                           	callstack 0
 10474                           
 10475 ;; *************** function _fullSpeedBack *****************
 10476 ;; Defined at:
 10477 ;;		line 186 in file "dc_motor.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10480 ;;		 -> motorL(9), 
 10481 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10482 ;;		 -> motorR(9), 
 10483 ;; Auto vars:     Size  Location     Type
 10484 ;;		None
 10485 ;; Return value:  Size  Location     Type
 10486 ;;                  1    wreg      void 
 10487 ;; Registers used:
 10488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10489 ;; Tracked objects:
 10490 ;;		On entry : 0/0
 10491 ;;		On exit  : 0/0
 10492 ;;		Unchanged: 0/0
 10493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10496 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10497 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10498 ;;Total ram usage:        6 bytes
 10499 ;; Hardware stack levels used: 1
 10500 ;; Hardware stack levels required when called: 3
 10501 ;; This function calls:
 10502 ;;		_setMotorPWM
 10503 ;; This function is called by:
 10504 ;;		_reverseDetect
 10505 ;;		_reverseOneBlock
 10506 ;;		_Backhalfblock
 10507 ;;		_homeReverse
 10508 ;; This function uses a non-reentrant model
 10509 ;;
 10510                           
 10511                           	psect	text57
 10512   0050BA                     __ptext57:
 10513                           	callstack 0
 10514   0050BA                     _fullSpeedBack:
 10515                           	callstack 24
 10516   0050BA                     
 10517                           ;dc_motor.c: 186: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 187: {;dc_motor.c: 189:     mL->direction =0;
 10518   0050BA  EE20 F001          	lfsr	2,1
 10519   0050BE  5014               	movf	fullSpeedBack@mL^0,w,c
 10520   0050C0  26D9               	addwf	fsr2l,f,c
 10521   0050C2  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 10522   0050C4  22DA               	addwfc	fsr2h,f,c
 10523   0050C6  0E00               	movlw	0
 10524   0050C8  6EDF               	movwf	indf2,c
 10525                           
 10526                           ;dc_motor.c: 190:     mR->direction =0;
 10527   0050CA  EE20 F001          	lfsr	2,1
 10528   0050CE  5016               	movf	fullSpeedBack@mR^0,w,c
 10529   0050D0  26D9               	addwf	fsr2l,f,c
 10530   0050D2  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 10531   0050D4  22DA               	addwfc	fsr2h,f,c
 10532   0050D6  0E00               	movlw	0
 10533   0050D8  6EDF               	movwf	indf2,c
 10534                           
 10535                           ;dc_motor.c: 191:     while (mL->power < power && mR->power < power){
 10536   0050DA  EF93  F028         	goto	l4171
 10537   0050DE                     l4163:
 10538                           
 10539                           ;dc_motor.c: 193:         mL->power+=10;
 10540   0050DE  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10541   0050E2  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10542   0050E6  0E0A               	movlw	10
 10543   0050E8  26DF               	addwf	indf2,f,c
 10544                           
 10545                           ;dc_motor.c: 194:         mR->power+=10;
 10546   0050EA  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10547   0050EE  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10548   0050F2  0E0A               	movlw	10
 10549   0050F4  26DF               	addwf	indf2,f,c
 10550   0050F6                     
 10551                           ;dc_motor.c: 196:         setMotorPWM(mL);
 10552   0050F6  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 10553   0050FA  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 10554   0050FE  EC0E  F023         	call	_setMotorPWM	;wreg free
 10555   005102                     
 10556                           ;dc_motor.c: 197:         setMotorPWM(mR);
 10557   005102  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 10558   005106  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 10559   00510A  EC0E  F023         	call	_setMotorPWM	;wreg free
 10560   00510E                     
 10561                           ;dc_motor.c: 199:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10562   00510E  0E02               	movlw	2
 10563   005110  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 10564   005112  0EA0               	movlw	160
 10565   005114  6E18               	movwf	??_fullSpeedBack^0,c
 10566   005116  0E92               	movlw	146
 10567   005118                     u6087:
 10568   005118  2EE8               	decfsz	wreg,f,c
 10569   00511A  D7FE               	bra	u6087
 10570   00511C  2E18               	decfsz	??_fullSpeedBack^0,f,c
 10571   00511E  D7FC               	bra	u6087
 10572   005120  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 10573   005122  D7FA               	bra	u6087
 10574   005124  D000               	nop2	
 10575   005126                     l4171:
 10576   005126  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10577   00512A  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10578   00512E  0E32               	movlw	50
 10579   005130  60DF               	cpfslt	indf2,c
 10580   005132  EF9D  F028         	goto	u3491
 10581   005136  EF9F  F028         	goto	u3490
 10582   00513A                     u3491:
 10583   00513A  EFAB  F028         	goto	l470
 10584   00513E                     u3490:
 10585   00513E  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10586   005142  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10587   005146  0E31               	movlw	49
 10588   005148  64DF               	cpfsgt	indf2,c
 10589   00514A  EFA9  F028         	goto	u3501
 10590   00514E  EFAB  F028         	goto	u3500
 10591   005152                     u3501:
 10592   005152  EF6F  F028         	goto	l4163
 10593   005156                     u3500:
 10594   005156                     l470:
 10595   005156  0012               	return		;funcret
 10596   005158                     __end_of_fullSpeedBack:
 10597                           	callstack 0
 10598                           
 10599 ;; *************** function _color_click_init *****************
 10600 ;; Defined at:
 10601 ;;		line 8 in file "color.c"
 10602 ;; Parameters:    Size  Location     Type
 10603 ;;		None
 10604 ;; Auto vars:     Size  Location     Type
 10605 ;;		None
 10606 ;; Return value:  Size  Location     Type
 10607 ;;                  1    wreg      void 
 10608 ;; Registers used:
 10609 ;;		wreg, status,2, status,0, cstack
 10610 ;; Tracked objects:
 10611 ;;		On entry : 0/0
 10612 ;;		On exit  : 0/0
 10613 ;;		Unchanged: 0/0
 10614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10617 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10619 ;;Total ram usage:        1 bytes
 10620 ;; Hardware stack levels used: 1
 10621 ;; Hardware stack levels required when called: 4
 10622 ;; This function calls:
 10623 ;;		_I2C_2_Master_Init
 10624 ;;		_color_writetoaddr
 10625 ;; This function is called by:
 10626 ;;		_main
 10627 ;; This function uses a non-reentrant model
 10628 ;;
 10629                           
 10630                           	psect	text58
 10631   005A10                     __ptext58:
 10632                           	callstack 0
 10633   005A10                     _color_click_init:
 10634                           	callstack 26
 10635   005A10                     
 10636                           ;color.c: 11:     I2C_2_Master_Init();
 10637   005A10  EC98  F02F         	call	_I2C_2_Master_Init	;wreg free
 10638   005A14                     
 10639                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
 10640   005A14  0E01               	movlw	1
 10641   005A16  6E03               	movwf	color_writetoaddr@value^0,c
 10642   005A18  0E00               	movlw	0
 10643   005A1A  ECE7  F02F         	call	_color_writetoaddr
 10644   005A1E                     
 10645                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
 10646   005A1E  0E3F               	movlw	63
 10647   005A20  6E05               	movwf	??_color_click_init^0,c
 10648   005A22  0E55               	movlw	85
 10649   005A24                     u6097:
 10650   005A24  2EE8               	decfsz	wreg,f,c
 10651   005A26  D7FE               	bra	u6097
 10652   005A28  2E05               	decfsz	??_color_click_init^0,f,c
 10653   005A2A  D7FC               	bra	u6097
 10654   005A2C  F000               	nop	
 10655   005A2E                     
 10656                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
 10657   005A2E  0E03               	movlw	3
 10658   005A30  6E03               	movwf	color_writetoaddr@value^0,c
 10659   005A32  0E00               	movlw	0
 10660   005A34  ECE7  F02F         	call	_color_writetoaddr
 10661   005A38                     
 10662                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
 10663   005A38  0ED5               	movlw	213
 10664   005A3A  6E03               	movwf	color_writetoaddr@value^0,c
 10665   005A3C  0E01               	movlw	1
 10666   005A3E  ECE7  F02F         	call	_color_writetoaddr
 10667   005A42                     
 10668                           ;color.c: 20:     color_writetoaddr(0x0F, 0x00);
 10669   005A42  0E00               	movlw	0
 10670   005A44  6E03               	movwf	color_writetoaddr@value^0,c
 10671   005A46  0E0F               	movlw	15
 10672   005A48  ECE7  F02F         	call	_color_writetoaddr
 10673   005A4C                     
 10674                           ;color.c: 22:     TRISGbits.TRISG1 = 0;
 10675   005A4C  9287               	bcf	135,1,c	;volatile
 10676   005A4E                     
 10677                           ;color.c: 23:     TRISAbits.TRISA4 = 0;
 10678   005A4E  9881               	bcf	129,4,c	;volatile
 10679   005A50                     
 10680                           ;color.c: 24:     TRISFbits.TRISF7 = 0;
 10681   005A50  9E86               	bcf	134,7,c	;volatile
 10682   005A52                     
 10683                           ;color.c: 26:     TRISDbits.TRISD3 = 0;
 10684   005A52  9684               	bcf	132,3,c	;volatile
 10685   005A54                     
 10686                           ;color.c: 27:     TRISDbits.TRISD4 = 0;
 10687   005A54  9884               	bcf	132,4,c	;volatile
 10688   005A56                     
 10689                           ;color.c: 29:     LATGbits.LATG1=0;
 10690   005A56  927F               	bcf	127,1,c	;volatile
 10691   005A58                     
 10692                           ;color.c: 30:     LATFbits.LATF7=0;
 10693   005A58  9E7E               	bcf	126,7,c	;volatile
 10694   005A5A                     
 10695                           ;color.c: 31:     LATAbits.LATA4=0;
 10696   005A5A  9879               	bcf	121,4,c	;volatile
 10697   005A5C                     
 10698                           ;color.c: 33:     LATDbits.LATD3=0;
 10699   005A5C  967C               	bcf	124,3,c	;volatile
 10700   005A5E                     
 10701                           ;color.c: 34:     LATDbits.LATD4=0;
 10702   005A5E  987C               	bcf	124,4,c	;volatile
 10703   005A60  0012               	return		;funcret
 10704   005A62                     __end_of_color_click_init:
 10705                           	callstack 0
 10706                           
 10707 ;; *************** function _color_writetoaddr *****************
 10708 ;; Defined at:
 10709 ;;		line 42 in file "color.c"
 10710 ;; Parameters:    Size  Location     Type
 10711 ;;  address         1    wreg     unsigned char 
 10712 ;;  value           1    2[COMRAM] unsigned char 
 10713 ;; Auto vars:     Size  Location     Type
 10714 ;;  address         1    3[COMRAM] unsigned char 
 10715 ;; Return value:  Size  Location     Type
 10716 ;;                  1    wreg      void 
 10717 ;; Registers used:
 10718 ;;		wreg, status,2, status,0, cstack
 10719 ;; Tracked objects:
 10720 ;;		On entry : 0/0
 10721 ;;		On exit  : 0/0
 10722 ;;		Unchanged: 0/0
 10723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10724 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10727 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10728 ;;Total ram usage:        2 bytes
 10729 ;; Hardware stack levels used: 1
 10730 ;; Hardware stack levels required when called: 3
 10731 ;; This function calls:
 10732 ;;		_I2C_2_Master_Start
 10733 ;;		_I2C_2_Master_Stop
 10734 ;;		_I2C_2_Master_Write
 10735 ;; This function is called by:
 10736 ;;		_color_click_init
 10737 ;; This function uses a non-reentrant model
 10738 ;;
 10739                           
 10740                           	psect	text59
 10741   005FCE                     __ptext59:
 10742                           	callstack 0
 10743   005FCE                     _color_writetoaddr:
 10744                           	callstack 26
 10745                           
 10746                           ;incstack = 0
 10747                           ;color_writetoaddr@address stored from wreg
 10748   005FCE  6E04               	movwf	color_writetoaddr@address^0,c
 10749   005FD0                     
 10750                           ;color.c: 43:     I2C_2_Master_Start();
 10751   005FD0  EC3E  F030         	call	_I2C_2_Master_Start	;wreg free
 10752                           
 10753                           ;color.c: 44:     I2C_2_Master_Write(0x52 | 0x00);
 10754   005FD4  0E52               	movlw	82
 10755   005FD6  EC22  F030         	call	_I2C_2_Master_Write
 10756                           
 10757                           ;color.c: 45:     I2C_2_Master_Write(0x80 | address);
 10758   005FDA  5004               	movf	color_writetoaddr@address^0,w,c
 10759   005FDC  0980               	iorlw	128
 10760   005FDE  EC22  F030         	call	_I2C_2_Master_Write
 10761                           
 10762                           ;color.c: 46:     I2C_2_Master_Write(value);
 10763   005FE2  5003               	movf	color_writetoaddr@value^0,w,c
 10764   005FE4  EC22  F030         	call	_I2C_2_Master_Write
 10765                           
 10766                           ;color.c: 47:     I2C_2_Master_Stop();
 10767   005FE8  EC39  F030         	call	_I2C_2_Master_Stop	;wreg free
 10768   005FEC  0012               	return		;funcret
 10769   005FEE                     __end_of_color_writetoaddr:
 10770                           	callstack 0
 10771                           
 10772 ;; *************** function _I2C_2_Master_Write *****************
 10773 ;; Defined at:
 10774 ;;		line 45 in file "i2c.c"
 10775 ;; Parameters:    Size  Location     Type
 10776 ;;  data_byte       1    wreg     unsigned char 
 10777 ;; Auto vars:     Size  Location     Type
 10778 ;;  data_byte       1    1[COMRAM] unsigned char 
 10779 ;; Return value:  Size  Location     Type
 10780 ;;                  1    wreg      void 
 10781 ;; Registers used:
 10782 ;;		wreg, status,2, status,0, cstack
 10783 ;; Tracked objects:
 10784 ;;		On entry : 0/0
 10785 ;;		On exit  : 0/0
 10786 ;;		Unchanged: 0/0
 10787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10792 ;;Total ram usage:        1 bytes
 10793 ;; Hardware stack levels used: 1
 10794 ;; Hardware stack levels required when called: 2
 10795 ;; This function calls:
 10796 ;;		_I2C_2_Master_Idle
 10797 ;; This function is called by:
 10798 ;;		_color_writetoaddr
 10799 ;;		_color_read_lum
 10800 ;;		_color_read_Red
 10801 ;;		_color_read_Green
 10802 ;;		_color_read_Blue
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806                           	psect	text60
 10807   006044                     __ptext60:
 10808                           	callstack 0
 10809   006044                     _I2C_2_Master_Write:
 10810                           	callstack 26
 10811                           
 10812                           ;incstack = 0
 10813                           ;I2C_2_Master_Write@data_byte stored from wreg
 10814   006044  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 10815   006046                     
 10816                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10817   006046  ECAD  F02F         	call	_I2C_2_Master_Idle	;wreg free
 10818   00604A                     
 10819                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10820   00604A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10821   00604E  0012               	return		;funcret
 10822   006050                     __end_of_I2C_2_Master_Write:
 10823                           	callstack 0
 10824                           
 10825 ;; *************** function _I2C_2_Master_Stop *****************
 10826 ;; Defined at:
 10827 ;;		line 39 in file "i2c.c"
 10828 ;; Parameters:    Size  Location     Type
 10829 ;;		None
 10830 ;; Auto vars:     Size  Location     Type
 10831 ;;		None
 10832 ;; Return value:  Size  Location     Type
 10833 ;;                  1    wreg      void 
 10834 ;; Registers used:
 10835 ;;		wreg, status,2, status,0, cstack
 10836 ;; Tracked objects:
 10837 ;;		On entry : 0/0
 10838 ;;		On exit  : 0/0
 10839 ;;		Unchanged: 0/0
 10840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10845 ;;Total ram usage:        0 bytes
 10846 ;; Hardware stack levels used: 1
 10847 ;; Hardware stack levels required when called: 2
 10848 ;; This function calls:
 10849 ;;		_I2C_2_Master_Idle
 10850 ;; This function is called by:
 10851 ;;		_color_writetoaddr
 10852 ;;		_color_read_lum
 10853 ;;		_color_read_Red
 10854 ;;		_color_read_Green
 10855 ;;		_color_read_Blue
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text61
 10860   006072                     __ptext61:
 10861                           	callstack 0
 10862   006072                     _I2C_2_Master_Stop:
 10863                           	callstack 26
 10864   006072                     
 10865                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10866   006072  ECAD  F02F         	call	_I2C_2_Master_Idle	;wreg free
 10867   006076                     
 10868                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10869   006076  010E               	movlb	14	; () banked
 10870   006078  85DA               	bsf	218,2,b	;volatile
 10871   00607A                     
 10872                           ; BSR set to: 14
 10873   00607A  0012               	return		;funcret
 10874   00607C                     __end_of_I2C_2_Master_Stop:
 10875                           	callstack 0
 10876                           
 10877 ;; *************** function _I2C_2_Master_Start *****************
 10878 ;; Defined at:
 10879 ;;		line 27 in file "i2c.c"
 10880 ;; Parameters:    Size  Location     Type
 10881 ;;		None
 10882 ;; Auto vars:     Size  Location     Type
 10883 ;;		None
 10884 ;; Return value:  Size  Location     Type
 10885 ;;                  1    wreg      void 
 10886 ;; Registers used:
 10887 ;;		wreg, status,2, status,0, cstack
 10888 ;; Tracked objects:
 10889 ;;		On entry : 0/0
 10890 ;;		On exit  : 0/0
 10891 ;;		Unchanged: 0/0
 10892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10897 ;;Total ram usage:        0 bytes
 10898 ;; Hardware stack levels used: 1
 10899 ;; Hardware stack levels required when called: 2
 10900 ;; This function calls:
 10901 ;;		_I2C_2_Master_Idle
 10902 ;; This function is called by:
 10903 ;;		_color_writetoaddr
 10904 ;;		_color_read_lum
 10905 ;;		_color_read_Red
 10906 ;;		_color_read_Green
 10907 ;;		_color_read_Blue
 10908 ;; This function uses a non-reentrant model
 10909 ;;
 10910                           
 10911                           	psect	text62
 10912   00607C                     __ptext62:
 10913                           	callstack 0
 10914   00607C                     _I2C_2_Master_Start:
 10915                           	callstack 26
 10916   00607C                     
 10917                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10918   00607C  ECAD  F02F         	call	_I2C_2_Master_Idle	;wreg free
 10919   006080                     
 10920                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10921   006080  010E               	movlb	14	; () banked
 10922   006082  81DA               	bsf	218,0,b	;volatile
 10923   006084                     
 10924                           ; BSR set to: 14
 10925   006084  0012               	return		;funcret
 10926   006086                     __end_of_I2C_2_Master_Start:
 10927                           	callstack 0
 10928                           
 10929 ;; *************** function _I2C_2_Master_Idle *****************
 10930 ;; Defined at:
 10931 ;;		line 22 in file "i2c.c"
 10932 ;; Parameters:    Size  Location     Type
 10933 ;;		None
 10934 ;; Auto vars:     Size  Location     Type
 10935 ;;		None
 10936 ;; Return value:  Size  Location     Type
 10937 ;;                  1    wreg      void 
 10938 ;; Registers used:
 10939 ;;		wreg, status,2, status,0
 10940 ;; Tracked objects:
 10941 ;;		On entry : 0/0
 10942 ;;		On exit  : 0/0
 10943 ;;		Unchanged: 0/0
 10944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10947 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10948 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10949 ;;Total ram usage:        1 bytes
 10950 ;; Hardware stack levels used: 1
 10951 ;; Hardware stack levels required when called: 1
 10952 ;; This function calls:
 10953 ;;		Nothing
 10954 ;; This function is called by:
 10955 ;;		_I2C_2_Master_Start
 10956 ;;		_I2C_2_Master_RepStart
 10957 ;;		_I2C_2_Master_Stop
 10958 ;;		_I2C_2_Master_Write
 10959 ;;		_I2C_2_Master_Read
 10960 ;; This function uses a non-reentrant model
 10961 ;;
 10962                           
 10963                           	psect	text63
 10964   005F5A                     __ptext63:
 10965                           	callstack 0
 10966   005F5A                     _I2C_2_Master_Idle:
 10967                           	callstack 26
 10968   005F5A                     l135:
 10969   005F5A  010E               	movlb	14	; () banked
 10970   005F5C  B5D8               	btfsc	216,2,b	;volatile
 10971   005F5E  EFB3  F02F         	goto	u4461
 10972   005F62  EFB5  F02F         	goto	u4460
 10973   005F66                     u4461:
 10974   005F66  EFAD  F02F         	goto	l135
 10975   005F6A                     u4460:
 10976   005F6A                     
 10977                           ; BSR set to: 14
 10978   005F6A  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 10979   005F6E  0E1F               	movlw	31
 10980   005F70  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 10981   005F72  A4D8               	btfss	status,2,c
 10982   005F74  EFBE  F02F         	goto	u4471
 10983   005F78  EFC0  F02F         	goto	u4470
 10984   005F7C                     u4471:
 10985   005F7C  EFAD  F02F         	goto	l135
 10986   005F80                     u4470:
 10987   005F80                     
 10988                           ; BSR set to: 14
 10989   005F80  0012               	return		;funcret
 10990   005F82                     __end_of_I2C_2_Master_Idle:
 10991                           	callstack 0
 10992                           
 10993 ;; *************** function _I2C_2_Master_Init *****************
 10994 ;; Defined at:
 10995 ;;		line 4 in file "i2c.c"
 10996 ;; Parameters:    Size  Location     Type
 10997 ;;		None
 10998 ;; Auto vars:     Size  Location     Type
 10999 ;;		None
 11000 ;; Return value:  Size  Location     Type
 11001 ;;                  1    wreg      void 
 11002 ;; Registers used:
 11003 ;;		wreg, status,2
 11004 ;; Tracked objects:
 11005 ;;		On entry : 0/0
 11006 ;;		On exit  : 0/0
 11007 ;;		Unchanged: 0/0
 11008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11013 ;;Total ram usage:        0 bytes
 11014 ;; Hardware stack levels used: 1
 11015 ;; Hardware stack levels required when called: 1
 11016 ;; This function calls:
 11017 ;;		Nothing
 11018 ;; This function is called by:
 11019 ;;		_color_click_init
 11020 ;;		_main
 11021 ;; This function uses a non-reentrant model
 11022 ;;
 11023                           
 11024                           	psect	text64
 11025   005F30                     __ptext64:
 11026                           	callstack 0
 11027   005F30                     _I2C_2_Master_Init:
 11028                           	callstack 28
 11029   005F30                     
 11030                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 11031   005F30  010E               	movlb	14	; () banked
 11032   005F32  51D9               	movf	217,w,b	;volatile
 11033   005F34  0BF0               	andlw	-16
 11034   005F36  0908               	iorlw	8
 11035   005F38  6FD9               	movwf	217,b	;volatile
 11036   005F3A                     
 11037                           ; BSR set to: 14
 11038                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 11039   005F3A  8BD9               	bsf	217,5,b	;volatile
 11040                           
 11041                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 11042   005F3C  0E9F               	movlw	159
 11043   005F3E  6FD6               	movwf	214,b	;volatile
 11044   005F40                     
 11045                           ; BSR set to: 14
 11046                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 11047   005F40  8A84               	bsf	132,5,c	;volatile
 11048   005F42                     
 11049                           ; BSR set to: 14
 11050                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 11051   005F42  8C84               	bsf	132,6,c	;volatile
 11052   005F44                     
 11053                           ; BSR set to: 14
 11054                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 11055   005F44  9BA7               	bcf	167,5,b	;volatile
 11056   005F46                     
 11057                           ; BSR set to: 14
 11058                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 11059   005F46  9DA7               	bcf	167,6,b	;volatile
 11060                           
 11061                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 11062   005F48  0E1D               	movlw	29
 11063   005F4A  6F1D               	movwf	29,b	;volatile
 11064                           
 11065                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 11066   005F4C  0E1E               	movlw	30
 11067   005F4E  6F1C               	movwf	28,b	;volatile
 11068                           
 11069                           ;i2c.c: 18:   RD5PPS=0x1C;
 11070   005F50  0E1C               	movlw	28
 11071   005F52  6F6F               	movwf	111,b	;volatile
 11072                           
 11073                           ;i2c.c: 19:   RD6PPS=0x1B;
 11074   005F54  0E1B               	movlw	27
 11075   005F56  6F70               	movwf	112,b	;volatile
 11076   005F58                     
 11077                           ; BSR set to: 14
 11078   005F58  0012               	return		;funcret
 11079   005F5A                     __end_of_I2C_2_Master_Init:
 11080                           	callstack 0
 11081                           
 11082 ;; *************** function _Timer0_init *****************
 11083 ;; Defined at:
 11084 ;;		line 8 in file "timers.c"
 11085 ;; Parameters:    Size  Location     Type
 11086 ;;		None
 11087 ;; Auto vars:     Size  Location     Type
 11088 ;;		None
 11089 ;; Return value:  Size  Location     Type
 11090 ;;                  1    wreg      void 
 11091 ;; Registers used:
 11092 ;;		wreg, status,2
 11093 ;; Tracked objects:
 11094 ;;		On entry : 0/0
 11095 ;;		On exit  : 0/0
 11096 ;;		Unchanged: 0/0
 11097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11102 ;;Total ram usage:        0 bytes
 11103 ;; Hardware stack levels used: 1
 11104 ;; Hardware stack levels required when called: 1
 11105 ;; This function calls:
 11106 ;;		Nothing
 11107 ;; This function is called by:
 11108 ;;		_main
 11109 ;; This function uses a non-reentrant model
 11110 ;;
 11111                           
 11112                           	psect	text65
 11113   005FEE                     __ptext65:
 11114                           	callstack 0
 11115   005FEE                     _Timer0_init:
 11116                           	callstack 29
 11117   005FEE                     
 11118                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 11119   005FEE  50D6               	movf	214,w,c	;volatile
 11120   005FF0  0B1F               	andlw	-225
 11121   005FF2  0940               	iorlw	64
 11122   005FF4  6ED6               	movwf	214,c	;volatile
 11123   005FF6                     
 11124                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 11125   005FF6  88D6               	bsf	214,4,c	;volatile
 11126                           
 11127                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1101;
 11128   005FF8  50D6               	movf	214,w,c	;volatile
 11129   005FFA  0BF0               	andlw	-16
 11130   005FFC  090D               	iorlw	13
 11131   005FFE  6ED6               	movwf	214,c	;volatile
 11132   006000                     
 11133                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 11134   006000  88D5               	bsf	213,4,c	;volatile
 11135                           
 11136                           ;timers.c: 16:     TMR0H=0;
 11137   006002  0E00               	movlw	0
 11138   006004  6ED4               	movwf	212,c	;volatile
 11139                           
 11140                           ;timers.c: 17:     TMR0L=0;
 11141   006006  0E00               	movlw	0
 11142   006008  6ED3               	movwf	211,c	;volatile
 11143   00600A                     
 11144                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 11145   00600A  9ED5               	bcf	213,7,c	;volatile
 11146   00600C  0012               	return		;funcret
 11147   00600E                     __end_of_Timer0_init:
 11148                           	callstack 0
 11149                           
 11150 ;; *************** function _LED_init *****************
 11151 ;; Defined at:
 11152 ;;		line 6 in file "LED_buttons.c"
 11153 ;; Parameters:    Size  Location     Type
 11154 ;;		None
 11155 ;; Auto vars:     Size  Location     Type
 11156 ;;		None
 11157 ;; Return value:  Size  Location     Type
 11158 ;;                  1    wreg      void 
 11159 ;; Registers used:
 11160 ;;		None
 11161 ;; Tracked objects:
 11162 ;;		On entry : 0/0
 11163 ;;		On exit  : 0/0
 11164 ;;		Unchanged: 0/0
 11165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11170 ;;Total ram usage:        0 bytes
 11171 ;; Hardware stack levels used: 1
 11172 ;; Hardware stack levels required when called: 1
 11173 ;; This function calls:
 11174 ;;		Nothing
 11175 ;; This function is called by:
 11176 ;;		_main
 11177 ;; This function uses a non-reentrant model
 11178 ;;
 11179                           
 11180                           	psect	text66
 11181   005F82                     __ptext66:
 11182                           	callstack 0
 11183   005F82                     _LED_init:
 11184                           	callstack 29
 11185   005F82                     
 11186                           ;LED_buttons.c: 10:     TRISGbits.TRISG1 = 0;
 11187   005F82  9287               	bcf	135,1,c	;volatile
 11188                           
 11189                           ;LED_buttons.c: 11:     TRISAbits.TRISA4 = 0;
 11190   005F84  9881               	bcf	129,4,c	;volatile
 11191                           
 11192                           ;LED_buttons.c: 12:     TRISFbits.TRISF7 = 0;
 11193   005F86  9E86               	bcf	134,7,c	;volatile
 11194                           
 11195                           ;LED_buttons.c: 14:     LATGbits.LATG1=1;
 11196   005F88  827F               	bsf	127,1,c	;volatile
 11197                           
 11198                           ;LED_buttons.c: 15:     LATAbits.LATA4=1;
 11199   005F8A  8879               	bsf	121,4,c	;volatile
 11200                           
 11201                           ;LED_buttons.c: 16:     LATFbits.LATF7=1;
 11202   005F8C  8E7E               	bsf	126,7,c	;volatile
 11203                           
 11204                           ;LED_buttons.c: 20:     LATDbits.LATD7=0;
 11205   005F8E  9E7C               	bcf	124,7,c	;volatile
 11206                           
 11207                           ;LED_buttons.c: 21:     TRISDbits.TRISD7=0;
 11208   005F90  9E84               	bcf	132,7,c	;volatile
 11209                           
 11210                           ;LED_buttons.c: 22:     LATHbits.LATH3=0;
 11211   005F92  9680               	bcf	128,3,c	;volatile
 11212                           
 11213                           ;LED_buttons.c: 23:     TRISHbits.TRISH3=0;
 11214   005F94  9688               	bcf	136,3,c	;volatile
 11215                           
 11216                           ;LED_buttons.c: 28:     LATHbits.LATH0=0;
 11217   005F96  9080               	bcf	128,0,c	;volatile
 11218                           
 11219                           ;LED_buttons.c: 29:     TRISHbits.TRISH0=0;
 11220   005F98  9088               	bcf	136,0,c	;volatile
 11221                           
 11222                           ;LED_buttons.c: 31:     LATFbits.LATF0=0;
 11223   005F9A  907E               	bcf	126,0,c	;volatile
 11224                           
 11225                           ;LED_buttons.c: 32:     TRISFbits.TRISF0=0;
 11226   005F9C  9086               	bcf	134,0,c	;volatile
 11227                           
 11228                           ;LED_buttons.c: 34:     LATDbits.LATD4=0;
 11229   005F9E  987C               	bcf	124,4,c	;volatile
 11230                           
 11231                           ;LED_buttons.c: 35:     TRISDbits.TRISD4=0;
 11232   005FA0  9884               	bcf	132,4,c	;volatile
 11233                           
 11234                           ;LED_buttons.c: 38:     LATDbits.LATD3=0;
 11235   005FA2  967C               	bcf	124,3,c	;volatile
 11236                           
 11237                           ;LED_buttons.c: 39:     TRISDbits.TRISD3=0;
 11238   005FA4  9684               	bcf	132,3,c	;volatile
 11239   005FA6  0012               	return		;funcret
 11240   005FA8                     __end_of_LED_init:
 11241                           	callstack 0
 11242                           
 11243 ;; *************** function _Interrupts_init *****************
 11244 ;; Defined at:
 11245 ;;		line 9 in file "interrupts.c"
 11246 ;; Parameters:    Size  Location     Type
 11247 ;;		None
 11248 ;; Auto vars:     Size  Location     Type
 11249 ;;		None
 11250 ;; Return value:  Size  Location     Type
 11251 ;;                  1    wreg      void 
 11252 ;; Registers used:
 11253 ;;		None
 11254 ;; Tracked objects:
 11255 ;;		On entry : 0/0
 11256 ;;		On exit  : 0/0
 11257 ;;		Unchanged: 0/0
 11258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11263 ;;Total ram usage:        0 bytes
 11264 ;; Hardware stack levels used: 1
 11265 ;; Hardware stack levels required when called: 1
 11266 ;; This function calls:
 11267 ;;		Nothing
 11268 ;; This function is called by:
 11269 ;;		_main
 11270 ;; This function uses a non-reentrant model
 11271 ;;
 11272                           
 11273                           	psect	text67
 11274   006050                     __ptext67:
 11275                           	callstack 0
 11276   006050                     _Interrupts_init:
 11277                           	callstack 29
 11278   006050                     
 11279                           ;interrupts.c: 11:     INTCONbits.IPEN=0;
 11280   006050  9AF2               	bcf	242,5,c	;volatile
 11281                           
 11282                           ;interrupts.c: 12:     INTCONbits.PEIE=0;
 11283   006052  9CF2               	bcf	242,6,c	;volatile
 11284                           
 11285                           ;interrupts.c: 13:     INTCONbits.GIE=1;
 11286   006054  8EF2               	bsf	242,7,c	;volatile
 11287                           
 11288                           ;interrupts.c: 14:     PIE0bits.TMR0IE=1;
 11289   006056  010E               	movlb	14	; () banked
 11290   006058  8B29               	bsf	41,5,b	;volatile
 11291   00605A                     
 11292                           ; BSR set to: 14
 11293   00605A  0012               	return		;funcret
 11294   00605C                     __end_of_Interrupts_init:
 11295                           	callstack 0
 11296                           
 11297 ;; *************** function _Forwardhalfblock *****************
 11298 ;; Defined at:
 11299 ;;		line 252 in file "dc_motor.c"
 11300 ;; Parameters:    Size  Location     Type
 11301 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11302 ;;		 -> motorL(9), 
 11303 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11304 ;;		 -> motorR(9), 
 11305 ;; Auto vars:     Size  Location     Type
 11306 ;;		None
 11307 ;; Return value:  Size  Location     Type
 11308 ;;                  1    wreg      void 
 11309 ;; Registers used:
 11310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11311 ;; Tracked objects:
 11312 ;;		On entry : 0/0
 11313 ;;		On exit  : 0/0
 11314 ;;		Unchanged: 0/0
 11315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11316 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11318 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11319 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11320 ;;Total ram usage:        6 bytes
 11321 ;; Hardware stack levels used: 1
 11322 ;; Hardware stack levels required when called: 4
 11323 ;; This function calls:
 11324 ;;		_fullSpeedAhead
 11325 ;;		_stop
 11326 ;; This function is called by:
 11327 ;;		_main
 11328 ;; This function uses a non-reentrant model
 11329 ;;
 11330                           
 11331                           	psect	text68
 11332   005716                     __ptext68:
 11333                           	callstack 0
 11334   005716                     _Forwardhalfblock:
 11335                           	callstack 26
 11336   005716                     
 11337                           ;dc_motor.c: 253:     fullSpeedAhead(mL,mR);
 11338   005716  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11339   00571A  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11340   00571E  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11341   005722  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11342   005726  ECAC  F028         	call	_fullSpeedAhead	;wreg free
 11343   00572A                     
 11344                           ;dc_motor.c: 254:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11345   00572A  0E2B               	movlw	43
 11346   00572C  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11347   00572E  0E9D               	movlw	157
 11348   005730  6E1E               	movwf	??_Forwardhalfblock^0,c
 11349   005732  0EF9               	movlw	249
 11350   005734                     u6107:
 11351   005734  2EE8               	decfsz	wreg,f,c
 11352   005736  D7FE               	bra	u6107
 11353   005738  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11354   00573A  D7FC               	bra	u6107
 11355   00573C  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11356   00573E  D7FA               	bra	u6107
 11357   005740  F000               	nop	
 11358   005742                     
 11359                           ;dc_motor.c: 255:     stop(&motorL, &motorR);
 11360   005742  0E61               	movlw	low _motorL
 11361   005744  6E14               	movwf	stop@mL^0,c
 11362   005746  0E01               	movlw	high _motorL
 11363   005748  6E15               	movwf	(stop@mL+1)^0,c
 11364   00574A  0E58               	movlw	low _motorR
 11365   00574C  6E16               	movwf	stop@mR^0,c
 11366   00574E  0E01               	movlw	high _motorR
 11367   005750  6E17               	movwf	(stop@mR+1)^0,c
 11368   005752  EC3F  F029         	call	_stop	;wreg free
 11369                           
 11370                           ;dc_motor.c: 256:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11371   005756  0E05               	movlw	5
 11372   005758  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11373   00575A  0E0F               	movlw	15
 11374   00575C  6E1E               	movwf	??_Forwardhalfblock^0,c
 11375   00575E  0EF1               	movlw	241
 11376   005760                     u6117:
 11377   005760  2EE8               	decfsz	wreg,f,c
 11378   005762  D7FE               	bra	u6117
 11379   005764  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11380   005766  D7FC               	bra	u6117
 11381   005768  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11382   00576A  D7FA               	bra	u6117
 11383   00576C  F000               	nop	
 11384   00576E  0012               	return		;funcret
 11385   005770                     __end_of_Forwardhalfblock:
 11386                           	callstack 0
 11387                           
 11388 ;; *************** function _stop *****************
 11389 ;; Defined at:
 11390 ;;		line 94 in file "dc_motor.c"
 11391 ;; Parameters:    Size  Location     Type
 11392 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11393 ;;		 -> motorL(9), 
 11394 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11395 ;;		 -> motorR(9), 
 11396 ;; Auto vars:     Size  Location     Type
 11397 ;;		None
 11398 ;; Return value:  Size  Location     Type
 11399 ;;                  1    wreg      void 
 11400 ;; Registers used:
 11401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11402 ;; Tracked objects:
 11403 ;;		On entry : 0/0
 11404 ;;		On exit  : 0/0
 11405 ;;		Unchanged: 0/0
 11406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11407 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11409 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11410 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11411 ;;Total ram usage:        6 bytes
 11412 ;; Hardware stack levels used: 1
 11413 ;; Hardware stack levels required when called: 3
 11414 ;; This function calls:
 11415 ;;		_setMotorPWM
 11416 ;; This function is called by:
 11417 ;;		_main
 11418 ;;		_turnRight45
 11419 ;;		_turnLeft45
 11420 ;;		_reverseDetect
 11421 ;;		_reverseOneBlock
 11422 ;;		_ForwardOneBlock
 11423 ;;		_Forwardhalfblock
 11424 ;;		_Backhalfblock
 11425 ;;		_RetryMove
 11426 ;;		_go_Home
 11427 ;;		_homeReverse
 11428 ;; This function uses a non-reentrant model
 11429 ;;
 11430                           
 11431                           	psect	text69
 11432   00527E                     __ptext69:
 11433                           	callstack 0
 11434   00527E                     _stop:
 11435                           	callstack 25
 11436   00527E                     
 11437                           ;dc_motor.c: 94: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 95: {;dc
      +                          _motor.c: 96:     while (mL->power >0 || mR->power >0){
 11438   00527E  EF65  F029         	goto	l4129
 11439   005282                     l4121:
 11440                           
 11441                           ;dc_motor.c: 98:         mL->power-=10;
 11442   005282  C014  FFD9         	movff	stop@mL,fsr2l
 11443   005286  C015  FFDA         	movff	stop@mL+1,fsr2h
 11444   00528A  0E0A               	movlw	10
 11445   00528C  5EDF               	subwf	indf2,f,c
 11446                           
 11447                           ;dc_motor.c: 99:         mR->power-=10;
 11448   00528E  C016  FFD9         	movff	stop@mR,fsr2l
 11449   005292  C017  FFDA         	movff	stop@mR+1,fsr2h
 11450   005296  0E0A               	movlw	10
 11451   005298  5EDF               	subwf	indf2,f,c
 11452   00529A                     
 11453                           ;dc_motor.c: 104:         setMotorPWM(mL);
 11454   00529A  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11455   00529E  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11456   0052A2  EC0E  F023         	call	_setMotorPWM	;wreg free
 11457   0052A6                     
 11458                           ;dc_motor.c: 105:         setMotorPWM(mR);
 11459   0052A6  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11460   0052AA  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11461   0052AE  EC0E  F023         	call	_setMotorPWM	;wreg free
 11462   0052B2                     
 11463                           ;dc_motor.c: 107:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11464   0052B2  0E02               	movlw	2
 11465   0052B4  6E19               	movwf	(??_stop+1)^0,c
 11466   0052B6  0EA0               	movlw	160
 11467   0052B8  6E18               	movwf	??_stop^0,c
 11468   0052BA  0E92               	movlw	146
 11469   0052BC                     u6127:
 11470   0052BC  2EE8               	decfsz	wreg,f,c
 11471   0052BE  D7FE               	bra	u6127
 11472   0052C0  2E18               	decfsz	??_stop^0,f,c
 11473   0052C2  D7FC               	bra	u6127
 11474   0052C4  2E19               	decfsz	(??_stop+1)^0,f,c
 11475   0052C6  D7FA               	bra	u6127
 11476   0052C8  D000               	nop2	
 11477   0052CA                     l4129:
 11478                           
 11479                           ;dc_motor.c: 96:     while (mL->power >0 || mR->power >0){
 11480   0052CA  C014  FFD9         	movff	stop@mL,fsr2l
 11481   0052CE  C015  FFDA         	movff	stop@mL+1,fsr2h
 11482   0052D2  50DF               	movf	indf2,w,c
 11483   0052D4  A4D8               	btfss	status,2,c
 11484   0052D6  EF6F  F029         	goto	u3431
 11485   0052DA  EF71  F029         	goto	u3430
 11486   0052DE                     u3431:
 11487   0052DE  EF41  F029         	goto	l4121
 11488   0052E2                     u3430:
 11489   0052E2  C016  FFD9         	movff	stop@mR,fsr2l
 11490   0052E6  C017  FFDA         	movff	stop@mR+1,fsr2h
 11491   0052EA  50DF               	movf	indf2,w,c
 11492   0052EC  A4D8               	btfss	status,2,c
 11493   0052EE  EF7B  F029         	goto	u3441
 11494   0052F2  EF7D  F029         	goto	u3440
 11495   0052F6                     u3441:
 11496   0052F6  EF41  F029         	goto	l4121
 11497   0052FA                     u3440:
 11498   0052FA  0012               	return		;funcret
 11499   0052FC                     __end_of_stop:
 11500                           	callstack 0
 11501                           
 11502 ;; *************** function _fullSpeedAhead *****************
 11503 ;; Defined at:
 11504 ;;		line 148 in file "dc_motor.c"
 11505 ;; Parameters:    Size  Location     Type
 11506 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11507 ;;		 -> motorL(9), 
 11508 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11509 ;;		 -> motorR(9), 
 11510 ;; Auto vars:     Size  Location     Type
 11511 ;;		None
 11512 ;; Return value:  Size  Location     Type
 11513 ;;                  1    wreg      void 
 11514 ;; Registers used:
 11515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11516 ;; Tracked objects:
 11517 ;;		On entry : 0/0
 11518 ;;		On exit  : 0/0
 11519 ;;		Unchanged: 0/0
 11520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11524 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11525 ;;Total ram usage:        6 bytes
 11526 ;; Hardware stack levels used: 1
 11527 ;; Hardware stack levels required when called: 3
 11528 ;; This function calls:
 11529 ;;		_setMotorPWM
 11530 ;; This function is called by:
 11531 ;;		_main
 11532 ;;		_ForwardOneBlock
 11533 ;;		_Forwardhalfblock
 11534 ;;		_RetryMove
 11535 ;; This function uses a non-reentrant model
 11536 ;;
 11537                           
 11538                           	psect	text70
 11539   005158                     __ptext70:
 11540                           	callstack 0
 11541   005158                     _fullSpeedAhead:
 11542                           	callstack 24
 11543   005158                     
 11544                           ;dc_motor.c: 148: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 149: {;dc_motor.c: 151:     mL->direction =1;
 11545   005158  EE20 F001          	lfsr	2,1
 11546   00515C  5014               	movf	fullSpeedAhead@mL^0,w,c
 11547   00515E  26D9               	addwf	fsr2l,f,c
 11548   005160  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11549   005162  22DA               	addwfc	fsr2h,f,c
 11550   005164  0E01               	movlw	1
 11551   005166  6EDF               	movwf	indf2,c
 11552                           
 11553                           ;dc_motor.c: 152:     mR->direction =1;
 11554   005168  EE20 F001          	lfsr	2,1
 11555   00516C  5016               	movf	fullSpeedAhead@mR^0,w,c
 11556   00516E  26D9               	addwf	fsr2l,f,c
 11557   005170  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11558   005172  22DA               	addwfc	fsr2h,f,c
 11559   005174  0E01               	movlw	1
 11560   005176  6EDF               	movwf	indf2,c
 11561                           
 11562                           ;dc_motor.c: 153:     while (mL->power < power && mR->power < power){
 11563   005178  EFE2  F028         	goto	l4115
 11564   00517C                     l4107:
 11565                           
 11566                           ;dc_motor.c: 155:         mL->power+=10;
 11567   00517C  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11568   005180  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11569   005184  0E0A               	movlw	10
 11570   005186  26DF               	addwf	indf2,f,c
 11571                           
 11572                           ;dc_motor.c: 156:         mR->power+=10;
 11573   005188  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11574   00518C  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11575   005190  0E0A               	movlw	10
 11576   005192  26DF               	addwf	indf2,f,c
 11577   005194                     
 11578                           ;dc_motor.c: 158:         setMotorPWM(mL);
 11579   005194  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11580   005198  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11581   00519C  EC0E  F023         	call	_setMotorPWM	;wreg free
 11582   0051A0                     
 11583                           ;dc_motor.c: 159:         setMotorPWM(mR);
 11584   0051A0  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11585   0051A4  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11586   0051A8  EC0E  F023         	call	_setMotorPWM	;wreg free
 11587   0051AC                     
 11588                           ;dc_motor.c: 162:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11589   0051AC  0E02               	movlw	2
 11590   0051AE  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11591   0051B0  0EA0               	movlw	160
 11592   0051B2  6E18               	movwf	??_fullSpeedAhead^0,c
 11593   0051B4  0E92               	movlw	146
 11594   0051B6                     u6137:
 11595   0051B6  2EE8               	decfsz	wreg,f,c
 11596   0051B8  D7FE               	bra	u6137
 11597   0051BA  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11598   0051BC  D7FC               	bra	u6137
 11599   0051BE  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11600   0051C0  D7FA               	bra	u6137
 11601   0051C2  D000               	nop2	
 11602   0051C4                     l4115:
 11603   0051C4  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11604   0051C8  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11605   0051CC  0E32               	movlw	50
 11606   0051CE  60DF               	cpfslt	indf2,c
 11607   0051D0  EFEC  F028         	goto	u3411
 11608   0051D4  EFEE  F028         	goto	u3410
 11609   0051D8                     u3411:
 11610   0051D8  EFFA  F028         	goto	l454
 11611   0051DC                     u3410:
 11612   0051DC  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11613   0051E0  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11614   0051E4  0E31               	movlw	49
 11615   0051E6  64DF               	cpfsgt	indf2,c
 11616   0051E8  EFF8  F028         	goto	u3421
 11617   0051EC  EFFA  F028         	goto	u3420
 11618   0051F0                     u3421:
 11619   0051F0  EFBE  F028         	goto	l4107
 11620   0051F4                     u3420:
 11621   0051F4                     l454:
 11622   0051F4  0012               	return		;funcret
 11623   0051F6                     __end_of_fullSpeedAhead:
 11624                           	callstack 0
 11625                           
 11626 ;; *************** function _setMotorPWM *****************
 11627 ;; Defined at:
 11628 ;;		line 69 in file "dc_motor.c"
 11629 ;; Parameters:    Size  Location     Type
 11630 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11631 ;;		 -> motorR(9), motorL(9), 
 11632 ;; Auto vars:     Size  Location     Type
 11633 ;;  negDuty         1   18[COMRAM] unsigned char 
 11634 ;;  posDuty         1   17[COMRAM] unsigned char 
 11635 ;; Return value:  Size  Location     Type
 11636 ;;                  1    wreg      void 
 11637 ;; Registers used:
 11638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11639 ;; Tracked objects:
 11640 ;;		On entry : 0/0
 11641 ;;		On exit  : 0/0
 11642 ;;		Unchanged: 0/0
 11643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11645 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11646 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11647 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11648 ;;Total ram usage:        6 bytes
 11649 ;; Hardware stack levels used: 1
 11650 ;; Hardware stack levels required when called: 2
 11651 ;; This function calls:
 11652 ;;		___lwdiv
 11653 ;;		___wmul
 11654 ;; This function is called by:
 11655 ;;		_stop
 11656 ;;		_turnLeft
 11657 ;;		_turnRight
 11658 ;;		_fullSpeedAhead
 11659 ;;		_timed_forward
 11660 ;;		_fullSpeedBack
 11661 ;; This function uses a non-reentrant model
 11662 ;;
 11663                           
 11664                           	psect	text71
 11665   00461C                     __ptext71:
 11666                           	callstack 0
 11667   00461C                     _setMotorPWM:
 11668                           	callstack 25
 11669   00461C                     
 11670                           ;dc_motor.c: 69: void setMotorPWM(struct DC_motor *m);dc_motor.c: 70: {;dc_motor.c: 71: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 73:     if(m->brakemode) {
 11671   00461C  EE20 F002          	lfsr	2,2
 11672   004620  500E               	movf	setMotorPWM@m^0,w,c
 11673   004622  26D9               	addwf	fsr2l,f,c
 11674   004624  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11675   004626  22DA               	addwfc	fsr2h,f,c
 11676   004628  50DF               	movf	indf2,w,c
 11677   00462A  B4D8               	btfsc	status,2,c
 11678   00462C  EF1A  F023         	goto	u2991
 11679   004630  EF1C  F023         	goto	u2990
 11680   004634                     u2991:
 11681   004634  EF50  F023         	goto	l3885
 11682   004638                     u2990:
 11683   004638                     
 11684                           ;dc_motor.c: 74:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11685   004638  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11686   00463C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11687   004640  50DF               	movf	indf2,w,c
 11688   004642  6E10               	movwf	??_setMotorPWM^0,c
 11689   004644  5010               	movf	??_setMotorPWM^0,w,c
 11690   004646  6E01               	movwf	___wmul@multiplier^0,c
 11691   004648  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11692   00464A  EE20 F003          	lfsr	2,3
 11693   00464E  500E               	movf	setMotorPWM@m^0,w,c
 11694   004650  26D9               	addwf	fsr2l,f,c
 11695   004652  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11696   004654  22DA               	addwfc	fsr2h,f,c
 11697   004656  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11698   00465A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11699   00465E  ECD4  F02F         	call	___wmul	;wreg free
 11700   004662  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11701   004666  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11702   00466A  0E00               	movlw	0
 11703   00466C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11704   00466E  0E64               	movlw	100
 11705   004670  6E09               	movwf	___lwdiv@divisor^0,c
 11706   004672  ECF8  F029         	call	___lwdiv	;wreg free
 11707   004676  EE20 F003          	lfsr	2,3
 11708   00467A  500E               	movf	setMotorPWM@m^0,w,c
 11709   00467C  26D9               	addwf	fsr2l,f,c
 11710   00467E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11711   004680  22DA               	addwfc	fsr2h,f,c
 11712   004682  50DF               	movf	indf2,w,c
 11713   004684  6E11               	movwf	(??_setMotorPWM+1)^0,c
 11714   004686  5007               	movf	?___lwdiv^0,w,c
 11715   004688  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 11716   00468A  6E12               	movwf	setMotorPWM@posDuty^0,c
 11717   00468C                     
 11718                           ;dc_motor.c: 75:         negDuty=m->PWMperiod;
 11719   00468C  EE20 F003          	lfsr	2,3
 11720   004690  500E               	movf	setMotorPWM@m^0,w,c
 11721   004692  26D9               	addwf	fsr2l,f,c
 11722   004694  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11723   004696  22DA               	addwfc	fsr2h,f,c
 11724   004698  50DF               	movf	indf2,w,c
 11725   00469A  6E13               	movwf	setMotorPWM@negDuty^0,c
 11726                           
 11727                           ;dc_motor.c: 76:     }
 11728   00469C  EF73  F023         	goto	l3889
 11729   0046A0                     l3885:
 11730                           
 11731                           ;dc_motor.c: 78:         posDuty=0;
 11732   0046A0  0E00               	movlw	0
 11733   0046A2  6E12               	movwf	setMotorPWM@posDuty^0,c
 11734   0046A4                     
 11735                           ;dc_motor.c: 79:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11736   0046A4  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11737   0046A8  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11738   0046AC  50DF               	movf	indf2,w,c
 11739   0046AE  6E10               	movwf	??_setMotorPWM^0,c
 11740   0046B0  5010               	movf	??_setMotorPWM^0,w,c
 11741   0046B2  6E01               	movwf	___wmul@multiplier^0,c
 11742   0046B4  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11743   0046B6  EE20 F003          	lfsr	2,3
 11744   0046BA  500E               	movf	setMotorPWM@m^0,w,c
 11745   0046BC  26D9               	addwf	fsr2l,f,c
 11746   0046BE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11747   0046C0  22DA               	addwfc	fsr2h,f,c
 11748   0046C2  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11749   0046C6  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11750   0046CA  ECD4  F02F         	call	___wmul	;wreg free
 11751   0046CE  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11752   0046D2  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11753   0046D6  0E00               	movlw	0
 11754   0046D8  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11755   0046DA  0E64               	movlw	100
 11756   0046DC  6E09               	movwf	___lwdiv@divisor^0,c
 11757   0046DE  ECF8  F029         	call	___lwdiv	;wreg free
 11758   0046E2  5007               	movf	?___lwdiv^0,w,c
 11759   0046E4  6E13               	movwf	setMotorPWM@negDuty^0,c
 11760   0046E6                     l3889:
 11761                           
 11762                           ;dc_motor.c: 82:     if (m->direction) {
 11763   0046E6  EE20 F001          	lfsr	2,1
 11764   0046EA  500E               	movf	setMotorPWM@m^0,w,c
 11765   0046EC  26D9               	addwf	fsr2l,f,c
 11766   0046EE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11767   0046F0  22DA               	addwfc	fsr2h,f,c
 11768   0046F2  50DF               	movf	indf2,w,c
 11769   0046F4  B4D8               	btfsc	status,2,c
 11770   0046F6  EF7F  F023         	goto	u3001
 11771   0046FA  EF81  F023         	goto	u3000
 11772   0046FE                     u3001:
 11773   0046FE  EFA3  F023         	goto	l3893
 11774   004702                     u3000:
 11775   004702                     
 11776                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
 11777   004702  EE20 F005          	lfsr	2,5
 11778   004706  500E               	movf	setMotorPWM@m^0,w,c
 11779   004708  26D9               	addwf	fsr2l,f,c
 11780   00470A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11781   00470C  22DA               	addwfc	fsr2h,f,c
 11782   00470E  CFDE F010          	movff	postinc2,??_setMotorPWM
 11783   004712  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11784   004716  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11785   00471A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11786   00471E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11787                           
 11788                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
 11789   004722  EE20 F007          	lfsr	2,7
 11790   004726  500E               	movf	setMotorPWM@m^0,w,c
 11791   004728  26D9               	addwf	fsr2l,f,c
 11792   00472A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11793   00472C  22DA               	addwfc	fsr2h,f,c
 11794   00472E  CFDE F010          	movff	postinc2,??_setMotorPWM
 11795   004732  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11796   004736  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11797   00473A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11798   00473E  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11799                           
 11800                           ;dc_motor.c: 87:     } else {
 11801   004742  EFC3  F023         	goto	l424
 11802   004746                     l3893:
 11803                           
 11804                           ;dc_motor.c: 88:         *(m->posDutyHighByte)=negDuty;
 11805   004746  EE20 F005          	lfsr	2,5
 11806   00474A  500E               	movf	setMotorPWM@m^0,w,c
 11807   00474C  26D9               	addwf	fsr2l,f,c
 11808   00474E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11809   004750  22DA               	addwfc	fsr2h,f,c
 11810   004752  CFDE F010          	movff	postinc2,??_setMotorPWM
 11811   004756  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11812   00475A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11813   00475E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11814   004762  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11815                           
 11816                           ;dc_motor.c: 89:         *(m->negDutyHighByte)=posDuty;
 11817   004766  EE20 F007          	lfsr	2,7
 11818   00476A  500E               	movf	setMotorPWM@m^0,w,c
 11819   00476C  26D9               	addwf	fsr2l,f,c
 11820   00476E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11821   004770  22DA               	addwfc	fsr2h,f,c
 11822   004772  CFDE F010          	movff	postinc2,??_setMotorPWM
 11823   004776  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11824   00477A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11825   00477E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11826   004782  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11827   004786                     l424:
 11828   004786  0012               	return		;funcret
 11829   004788                     __end_of_setMotorPWM:
 11830                           	callstack 0
 11831                           
 11832 ;; *************** function ___wmul *****************
 11833 ;; Defined at:
 11834 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 11835 ;; Parameters:    Size  Location     Type
 11836 ;;  multiplier      2    0[COMRAM] unsigned int 
 11837 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11838 ;; Auto vars:     Size  Location     Type
 11839 ;;  product         2    4[COMRAM] unsigned int 
 11840 ;; Return value:  Size  Location     Type
 11841 ;;                  2    0[COMRAM] unsigned int 
 11842 ;; Registers used:
 11843 ;;		wreg, status,2, status,0, prodl, prodh
 11844 ;; Tracked objects:
 11845 ;;		On entry : 0/0
 11846 ;;		On exit  : 0/0
 11847 ;;		Unchanged: 0/0
 11848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11852 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11853 ;;Total ram usage:        6 bytes
 11854 ;; Hardware stack levels used: 1
 11855 ;; Hardware stack levels required when called: 1
 11856 ;; This function calls:
 11857 ;;		Nothing
 11858 ;; This function is called by:
 11859 ;;		_setMotorPWM
 11860 ;; This function uses a non-reentrant model
 11861 ;;
 11862                           
 11863                           	psect	text72
 11864   005FA8                     __ptext72:
 11865                           	callstack 0
 11866   005FA8                     ___wmul:
 11867                           	callstack 25
 11868   005FA8  5001               	movf	___wmul@multiplier^0,w,c
 11869   005FAA  0203               	mulwf	___wmul@multiplicand^0,c
 11870   005FAC  CFF3 F005          	movff	prodl,___wmul@product
 11871   005FB0  CFF4 F006          	movff	prodh,___wmul@product+1
 11872   005FB4  5001               	movf	___wmul@multiplier^0,w,c
 11873   005FB6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11874   005FB8  50F3               	movf	243,w,c
 11875   005FBA  2606               	addwf	(___wmul@product+1)^0,f,c
 11876   005FBC  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11877   005FBE  0203               	mulwf	___wmul@multiplicand^0,c
 11878   005FC0  50F3               	movf	243,w,c
 11879   005FC2  2606               	addwf	(___wmul@product+1)^0,f,c
 11880   005FC4  C005  F001         	movff	___wmul@product,?___wmul
 11881   005FC8  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11882   005FCC  0012               	return		;funcret
 11883   005FCE                     __end_of___wmul:
 11884                           	callstack 0
 11885                           
 11886 ;; *************** function ___lwdiv *****************
 11887 ;; Defined at:
 11888 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 11889 ;; Parameters:    Size  Location     Type
 11890 ;;  dividend        2    6[COMRAM] unsigned int 
 11891 ;;  divisor         2    8[COMRAM] unsigned int 
 11892 ;; Auto vars:     Size  Location     Type
 11893 ;;  quotient        2   10[COMRAM] unsigned int 
 11894 ;;  counter         1   12[COMRAM] unsigned char 
 11895 ;; Return value:  Size  Location     Type
 11896 ;;                  2    6[COMRAM] unsigned int 
 11897 ;; Registers used:
 11898 ;;		wreg, status,2, status,0
 11899 ;; Tracked objects:
 11900 ;;		On entry : 0/0
 11901 ;;		On exit  : 0/0
 11902 ;;		Unchanged: 0/0
 11903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11904 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11905 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11907 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11908 ;;Total ram usage:        7 bytes
 11909 ;; Hardware stack levels used: 1
 11910 ;; Hardware stack levels required when called: 1
 11911 ;; This function calls:
 11912 ;;		Nothing
 11913 ;; This function is called by:
 11914 ;;		_setMotorPWM
 11915 ;; This function uses a non-reentrant model
 11916 ;;
 11917                           
 11918                           	psect	text73
 11919   0053F0                     __ptext73:
 11920                           	callstack 0
 11921   0053F0                     ___lwdiv:
 11922                           	callstack 25
 11923   0053F0  0E00               	movlw	0
 11924   0053F2  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11925   0053F4  0E00               	movlw	0
 11926   0053F6  6E0B               	movwf	___lwdiv@quotient^0,c
 11927   0053F8  5009               	movf	___lwdiv@divisor^0,w,c
 11928   0053FA  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11929   0053FC  B4D8               	btfsc	status,2,c
 11930   0053FE  EF03  F02A         	goto	u2921
 11931   005402  EF05  F02A         	goto	u2920
 11932   005406                     u2921:
 11933   005406  EF2D  F02A         	goto	l1239
 11934   00540A                     u2920:
 11935   00540A  0E01               	movlw	1
 11936   00540C  6E0D               	movwf	___lwdiv@counter^0,c
 11937   00540E  EF0D  F02A         	goto	l3851
 11938   005412                     l3849:
 11939   005412  90D8               	bcf	status,0,c
 11940   005414  3609               	rlcf	___lwdiv@divisor^0,f,c
 11941   005416  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11942   005418  2A0D               	incf	___lwdiv@counter^0,f,c
 11943   00541A                     l3851:
 11944   00541A  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 11945   00541C  EF12  F02A         	goto	u2931
 11946   005420  EF14  F02A         	goto	u2930
 11947   005424                     u2931:
 11948   005424  EF09  F02A         	goto	l3849
 11949   005428                     u2930:
 11950   005428                     l3853:
 11951   005428  90D8               	bcf	status,0,c
 11952   00542A  360B               	rlcf	___lwdiv@quotient^0,f,c
 11953   00542C  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11954   00542E  5009               	movf	___lwdiv@divisor^0,w,c
 11955   005430  5C07               	subwf	___lwdiv@dividend^0,w,c
 11956   005432  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11957   005434  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11958   005436  A0D8               	btfss	status,0,c
 11959   005438  EF20  F02A         	goto	u2941
 11960   00543C  EF22  F02A         	goto	u2940
 11961   005440                     u2941:
 11962   005440  EF27  F02A         	goto	l3861
 11963   005444                     u2940:
 11964   005444  5009               	movf	___lwdiv@divisor^0,w,c
 11965   005446  5E07               	subwf	___lwdiv@dividend^0,f,c
 11966   005448  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11967   00544A  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11968   00544C  800B               	bsf	___lwdiv@quotient^0,0,c
 11969   00544E                     l3861:
 11970   00544E  90D8               	bcf	status,0,c
 11971   005450  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11972   005452  3209               	rrcf	___lwdiv@divisor^0,f,c
 11973   005454  2E0D               	decfsz	___lwdiv@counter^0,f,c
 11974   005456  EF14  F02A         	goto	l3853
 11975   00545A                     l1239:
 11976   00545A  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 11977   00545E  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11978   005462  0012               	return		;funcret
 11979   005464                     __end_of___lwdiv:
 11980                           	callstack 0
 11981                           
 11982 ;; *************** function _Colour_decider *****************
 11983 ;; Defined at:
 11984 ;;		line 126 in file "color.c"
 11985 ;; Parameters:    Size  Location     Type
 11986 ;;  vals            2   74[COMRAM] PTR struct RGB
 11987 ;;		 -> vals(8), 
 11988 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 11989 ;;		 -> rel(12), 
 11990 ;; Auto vars:     Size  Location     Type
 11991 ;;  RGB_col        12    6[BANK0 ] float [3]
 11992 ;;  Hue             4   28[BANK0 ] float 
 11993 ;;  Cmin            4   22[BANK0 ] float 
 11994 ;;  Cmax            4   18[BANK0 ] float 
 11995 ;;  i               2   26[BANK0 ] int 
 11996 ;;  Cmax_i          2    4[BANK0 ] int 
 11997 ;; Return value:  Size  Location     Type
 11998 ;;                  2   74[COMRAM] int 
 11999 ;; Registers used:
 12000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12001 ;; Tracked objects:
 12002 ;;		On entry : 0/0
 12003 ;;		On exit  : 0/0
 12004 ;;		Unchanged: 0/0
 12005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12006 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12007 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12008 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12009 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12010 ;;Total ram usage:       38 bytes
 12011 ;; Hardware stack levels used: 1
 12012 ;; Hardware stack levels required when called: 3
 12013 ;; This function calls:
 12014 ;;		___fladd
 12015 ;;		___fldiv
 12016 ;;		___fleq
 12017 ;;		___flge
 12018 ;;		___flmul
 12019 ;;		___flsub
 12020 ;;		___xxtofl
 12021 ;; This function is called by:
 12022 ;;		_main
 12023 ;; This function uses a non-reentrant model
 12024 ;;
 12025                           
 12026                           	psect	text74
 12027   001838                     __ptext74:
 12028                           	callstack 0
 12029   001838                     _Colour_decider:
 12030                           	callstack 27
 12031   001838                     
 12032                           ;color.c: 127:     float Cmax = 0;
 12033   001838  0E00               	movlw	0
 12034   00183A  0100               	movlb	0	; () banked
 12035   00183C  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 12036   00183E  0E00               	movlw	0
 12037   001840  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 12038   001842  0E00               	movlw	0
 12039   001844  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 12040   001846  0E00               	movlw	0
 12041   001848  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 12042                           
 12043                           ;color.c: 128:     float Cmin= 100000;
 12044   00184A  0E00               	movlw	0
 12045   00184C  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 12046   00184E  0E50               	movlw	80
 12047   001850  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 12048   001852  0EC3               	movlw	195
 12049   001854  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 12050   001856  0E47               	movlw	71
 12051   001858  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 12052                           
 12053                           ;color.c: 129:     int Cmax_i =4;
 12054   00185A  0E00               	movlw	0
 12055   00185C  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 12056   00185E  0E04               	movlw	4
 12057   001860  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 12058   001862                     
 12059                           ; BSR set to: 0
 12060                           ;color.c: 131:     int i;;color.c: 132:     float RGB_col[3]={vals->R,vals->G,vals->B};
 12061   001862  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 12062   001866  0E0B               	movlw	11
 12063   001868                     u5191:
 12064   001868  6ADE               	clrf	postinc2,c
 12065   00186A  06E8               	decf	wreg,f,c
 12066   00186C  E2FD               	bc	u5191
 12067   00186E                     
 12068                           ; BSR set to: 0
 12069   00186E  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 12070   001872  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 12071   001876  CFDE F001          	movff	postinc2,___xxtofl@val
 12072   00187A  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12073   00187E  0E00               	movlw	0
 12074   001880  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12075   001882  0EFF               	movlw	-1
 12076   001884  6E03               	movwf	(___xxtofl@val+2)^0,c
 12077   001886  6E04               	movwf	(___xxtofl@val+3)^0,c
 12078   001888  0E01               	movlw	1
 12079   00188A  EC9A  F020         	call	___xxtofl
 12080   00188E  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 12081   001892  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 12082   001896  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 12083   00189A  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 12084   00189E  EE20 F002          	lfsr	2,2
 12085   0018A2  504B               	movf	Colour_decider@vals^0,w,c
 12086   0018A4  26D9               	addwf	fsr2l,f,c
 12087   0018A6  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12088   0018A8  22DA               	addwfc	fsr2h,f,c
 12089   0018AA  CFDE F001          	movff	postinc2,___xxtofl@val
 12090   0018AE  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12091   0018B2  0E00               	movlw	0
 12092   0018B4  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12093   0018B6  0EFF               	movlw	-1
 12094   0018B8  6E03               	movwf	(___xxtofl@val+2)^0,c
 12095   0018BA  6E04               	movwf	(___xxtofl@val+3)^0,c
 12096   0018BC  0E01               	movlw	1
 12097   0018BE  EC9A  F020         	call	___xxtofl
 12098   0018C2  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 12099   0018C6  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 12100   0018CA  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 12101   0018CE  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 12102   0018D2  EE20 F004          	lfsr	2,4
 12103   0018D6  504B               	movf	Colour_decider@vals^0,w,c
 12104   0018D8  26D9               	addwf	fsr2l,f,c
 12105   0018DA  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12106   0018DC  22DA               	addwfc	fsr2h,f,c
 12107   0018DE  CFDE F001          	movff	postinc2,___xxtofl@val
 12108   0018E2  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12109   0018E6  0E00               	movlw	0
 12110   0018E8  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12111   0018EA  0EFF               	movlw	-1
 12112   0018EC  6E03               	movwf	(___xxtofl@val+2)^0,c
 12113   0018EE  6E04               	movwf	(___xxtofl@val+3)^0,c
 12114   0018F0  0E01               	movlw	1
 12115   0018F2  EC9A  F020         	call	___xxtofl
 12116   0018F6  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 12117   0018FA  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 12118   0018FE  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 12119   001902  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 12120   001906                     
 12121                           ;color.c: 133:     float Hue;;color.c: 136:     for (i=0; i<3 ;i++){
 12122   001906  0E00               	movlw	0
 12123   001908  0100               	movlb	0	; () banked
 12124   00190A  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 12125   00190C  0E00               	movlw	0
 12126   00190E  6F7A               	movwf	Colour_decider@i& (0+255),b
 12127   001910                     l5397:
 12128                           
 12129                           ; BSR set to: 0
 12130                           ;color.c: 137:         if (RGB_col[i]>Cmax){
 12131   001910  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 12132   001914  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12133   001918  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12134   00191C  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12135   001920  0E66               	movlw	low Colour_decider@RGB_col
 12136   001922  6E4F               	movwf	??_Colour_decider^0,c
 12137   001924  0E00               	movlw	high Colour_decider@RGB_col
 12138   001926  6E50               	movwf	(??_Colour_decider+1)^0,c
 12139   001928  90D8               	bcf	status,0,c
 12140   00192A  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12141   00192C  6ED9               	movwf	fsr2l,c
 12142   00192E  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12143   001930  6EDA               	movwf	fsr2h,c
 12144   001932  90D8               	bcf	status,0,c
 12145   001934  36D9               	rlcf	fsr2l,f,c
 12146   001936  36DA               	rlcf	fsr2h,f,c
 12147   001938  504F               	movf	??_Colour_decider^0,w,c
 12148   00193A  26D9               	addwf	fsr2l,f,c
 12149   00193C  5050               	movf	(??_Colour_decider+1)^0,w,c
 12150   00193E  22DA               	addwfc	fsr2h,f,c
 12151   001940  CFDE F02E          	movff	postinc2,___flge@ff2
 12152   001944  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12153   001948  CFDE F030          	movff	postinc2,___flge@ff2+2
 12154   00194C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12155   001950  ECF9  F024         	call	___flge	;wreg free
 12156   001954  B0D8               	btfsc	status,0,c
 12157   001956  EFAF  F00C         	goto	u5201
 12158   00195A  EFB1  F00C         	goto	u5200
 12159   00195E                     u5201:
 12160   00195E  EFCE  F00C         	goto	l5403
 12161   001962                     u5200:
 12162   001962                     
 12163                           ;color.c: 138:             Cmax=RGB_col[i];
 12164   001962  0E66               	movlw	low Colour_decider@RGB_col
 12165   001964  6E4F               	movwf	??_Colour_decider^0,c
 12166   001966  0E00               	movlw	high Colour_decider@RGB_col
 12167   001968  6E50               	movwf	(??_Colour_decider+1)^0,c
 12168   00196A  90D8               	bcf	status,0,c
 12169   00196C  0100               	movlb	0	; () banked
 12170   00196E  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12171   001970  6ED9               	movwf	fsr2l,c
 12172   001972  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12173   001974  6EDA               	movwf	fsr2h,c
 12174   001976  90D8               	bcf	status,0,c
 12175   001978  36D9               	rlcf	fsr2l,f,c
 12176   00197A  36DA               	rlcf	fsr2h,f,c
 12177   00197C  504F               	movf	??_Colour_decider^0,w,c
 12178   00197E  26D9               	addwf	fsr2l,f,c
 12179   001980  5050               	movf	(??_Colour_decider+1)^0,w,c
 12180   001982  22DA               	addwfc	fsr2h,f,c
 12181   001984  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12182   001988  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12183   00198C  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12184   001990  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12185   001994                     
 12186                           ; BSR set to: 0
 12187                           ;color.c: 139:             Cmax_i=i;
 12188   001994  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12189   001998  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12190   00199C                     l5403:
 12191                           
 12192                           ;color.c: 141:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12193   00199C  0E66               	movlw	low Colour_decider@RGB_col
 12194   00199E  6E4F               	movwf	??_Colour_decider^0,c
 12195   0019A0  0E00               	movlw	high Colour_decider@RGB_col
 12196   0019A2  6E50               	movwf	(??_Colour_decider+1)^0,c
 12197   0019A4  90D8               	bcf	status,0,c
 12198   0019A6  0100               	movlb	0	; () banked
 12199   0019A8  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12200   0019AA  6ED9               	movwf	fsr2l,c
 12201   0019AC  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12202   0019AE  6EDA               	movwf	fsr2h,c
 12203   0019B0  90D8               	bcf	status,0,c
 12204   0019B2  36D9               	rlcf	fsr2l,f,c
 12205   0019B4  36DA               	rlcf	fsr2h,f,c
 12206   0019B6  504F               	movf	??_Colour_decider^0,w,c
 12207   0019B8  26D9               	addwf	fsr2l,f,c
 12208   0019BA  5050               	movf	(??_Colour_decider+1)^0,w,c
 12209   0019BC  22DA               	addwfc	fsr2h,f,c
 12210   0019BE  CFDE F02A          	movff	postinc2,___flge@ff1
 12211   0019C2  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12212   0019C6  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12213   0019CA  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12214   0019CE  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12215   0019D2  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12216   0019D6  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12217   0019DA  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12218   0019DE  ECF9  F024         	call	___flge	;wreg free
 12219   0019E2  B0D8               	btfsc	status,0,c
 12220   0019E4  EFF6  F00C         	goto	u5211
 12221   0019E8  EFF8  F00C         	goto	u5210
 12222   0019EC                     u5211:
 12223   0019EC  EF11  F00D         	goto	l5407
 12224   0019F0                     u5210:
 12225   0019F0  0E66               	movlw	low Colour_decider@RGB_col
 12226   0019F2  6E4F               	movwf	??_Colour_decider^0,c
 12227   0019F4  0E00               	movlw	high Colour_decider@RGB_col
 12228   0019F6  6E50               	movwf	(??_Colour_decider+1)^0,c
 12229   0019F8  90D8               	bcf	status,0,c
 12230   0019FA  0100               	movlb	0	; () banked
 12231   0019FC  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12232   0019FE  6ED9               	movwf	fsr2l,c
 12233   001A00  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12234   001A02  6EDA               	movwf	fsr2h,c
 12235   001A04  90D8               	bcf	status,0,c
 12236   001A06  36D9               	rlcf	fsr2l,f,c
 12237   001A08  36DA               	rlcf	fsr2h,f,c
 12238   001A0A  504F               	movf	??_Colour_decider^0,w,c
 12239   001A0C  26D9               	addwf	fsr2l,f,c
 12240   001A0E  5050               	movf	(??_Colour_decider+1)^0,w,c
 12241   001A10  22DA               	addwfc	fsr2h,f,c
 12242   001A12  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12243   001A16  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12244   001A1A  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12245   001A1E  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12246   001A22                     l5407:
 12247                           
 12248                           ;color.c: 142:     }
 12249   001A22  0100               	movlb	0	; () banked
 12250   001A24  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12251   001A26  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12252   001A28                     
 12253                           ; BSR set to: 0
 12254   001A28  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12255   001A2A  EF20  F00D         	goto	u5221
 12256   001A2E  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12257   001A30  E109               	bnz	u5220
 12258   001A32  0E03               	movlw	3
 12259   001A34  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12260   001A36  A0D8               	btfss	status,0,c
 12261   001A38  EF20  F00D         	goto	u5221
 12262   001A3C  EF22  F00D         	goto	u5220
 12263   001A40                     u5221:
 12264   001A40  EF88  F00C         	goto	l5397
 12265   001A44                     u5220:
 12266   001A44                     
 12267                           ; BSR set to: 0
 12268                           ;color.c: 144:     if (Cmax-Cmin==0){return 0;}
 12269   001A44  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12270   001A48  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12271   001A4C  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12272   001A50  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12273   001A54  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12274   001A58  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12275   001A5C  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12276   001A60  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12277   001A64  EC47  F02E         	call	___flsub	;wreg free
 12278   001A68  C02A  F032         	movff	?___flsub,___fleq@ff1
 12279   001A6C  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12280   001A70  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12281   001A74  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12282   001A78  0E00               	movlw	0
 12283   001A7A  6E36               	movwf	___fleq@ff2^0,c
 12284   001A7C  0E00               	movlw	0
 12285   001A7E  6E37               	movwf	(___fleq@ff2+1)^0,c
 12286   001A80  0E00               	movlw	0
 12287   001A82  6E38               	movwf	(___fleq@ff2+2)^0,c
 12288   001A84  0E00               	movlw	0
 12289   001A86  6E39               	movwf	(___fleq@ff2+3)^0,c
 12290   001A88  EC6A  F027         	call	___fleq	;wreg free
 12291   001A8C  A0D8               	btfss	status,0,c
 12292   001A8E  EF4B  F00D         	goto	u5231
 12293   001A92  EF4D  F00D         	goto	u5230
 12294   001A96                     u5231:
 12295   001A96  EF53  F00D         	goto	l5417
 12296   001A9A                     u5230:
 12297   001A9A                     l5413:
 12298   001A9A  0E00               	movlw	0
 12299   001A9C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12300   001A9E  0E00               	movlw	0
 12301   001AA0  6E4B               	movwf	?_Colour_decider^0,c
 12302   001AA2  EF15  F011         	goto	l80
 12303   001AA6                     l5417:
 12304                           
 12305                           ;color.c: 147:     if (Cmax_i==0){
 12306   001AA6  0100               	movlb	0	; () banked
 12307   001AA8  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12308   001AAA  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12309   001AAC  A4D8               	btfss	status,2,c
 12310   001AAE  EF5B  F00D         	goto	u5241
 12311   001AB2  EF5D  F00D         	goto	u5240
 12312   001AB6                     u5241:
 12313   001AB6  EFD1  F00D         	goto	l5425
 12314   001ABA                     u5240:
 12315   001ABA                     
 12316                           ; BSR set to: 0
 12317                           ;color.c: 148:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12318   001ABA  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12319   001ABE  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12320   001AC2  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12321   001AC6  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12322   001ACA  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12323   001ACE  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12324   001AD2  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12325   001AD6  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12326   001ADA  EC47  F02E         	call	___flsub	;wreg free
 12327   001ADE  C02A  F036         	movff	?___flsub,___fldiv@a
 12328   001AE2  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12329   001AE6  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12330   001AEA  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12331   001AEE  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12332   001AF2  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12333   001AF6  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12334   001AFA  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12335   001AFE  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12336   001B02  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12337   001B06  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12338   001B0A  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12339   001B0E  EC47  F02E         	call	___flsub	;wreg free
 12340   001B12  C02A  F032         	movff	?___flsub,___fldiv@b
 12341   001B16  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12342   001B1A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12343   001B1E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12344   001B22  EC8B  F015         	call	___fldiv	;wreg free
 12345   001B26  C032  F011         	movff	?___fldiv,___flmul@b
 12346   001B2A  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12347   001B2E  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12348   001B32  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12349   001B36  0E00               	movlw	0
 12350   001B38  6E15               	movwf	___flmul@a^0,c
 12351   001B3A  0E00               	movlw	0
 12352   001B3C  6E16               	movwf	(___flmul@a+1)^0,c
 12353   001B3E  0E70               	movlw	112
 12354   001B40  6E17               	movwf	(___flmul@a+2)^0,c
 12355   001B42  0E42               	movlw	66
 12356   001B44  6E18               	movwf	(___flmul@a+3)^0,c
 12357   001B46  EC76  F013         	call	___flmul	;wreg free
 12358   001B4A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12359   001B4E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12360   001B52  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12361   001B56  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12362   001B5A                     
 12363                           ;color.c: 150:         if (Hue < 0) {Hue += 360;}
 12364   001B5A  0100               	movlb	0	; () banked
 12365   001B5C  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12366   001B5E  EFB5  F00D         	goto	u5250
 12367   001B62  EFB3  F00D         	goto	u5251
 12368   001B66                     u5251:
 12369   001B66  EFB0  F00E         	goto	l5435
 12370   001B6A                     u5250:
 12371   001B6A                     
 12372                           ; BSR set to: 0
 12373   001B6A  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12374   001B6E  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12375   001B72  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12376   001B76  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12377   001B7A  0E00               	movlw	0
 12378   001B7C  6E05               	movwf	___fladd@a^0,c
 12379   001B7E  0E00               	movlw	0
 12380   001B80  6E06               	movwf	(___fladd@a+1)^0,c
 12381   001B82  0EB4               	movlw	180
 12382   001B84  6E07               	movwf	(___fladd@a+2)^0,c
 12383   001B86  0E43               	movlw	67
 12384   001B88  6E08               	movwf	(___fladd@a+3)^0,c
 12385   001B8A  EC16  F011         	call	___fladd	;wreg free
 12386   001B8E  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12387   001B92  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12388   001B96  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12389   001B9A  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12390   001B9E  EFB0  F00E         	goto	l5435
 12391   001BA2                     l5425:
 12392                           
 12393                           ; BSR set to: 0
 12394   001BA2  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12395   001BA4  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12396   001BA6  A4D8               	btfss	status,2,c
 12397   001BA8  EFD8  F00D         	goto	u5261
 12398   001BAC  EFDA  F00D         	goto	u5260
 12399   001BB0                     u5261:
 12400   001BB0  EF46  F00E         	goto	l5431
 12401   001BB4                     u5260:
 12402   001BB4                     
 12403                           ; BSR set to: 0
 12404                           ;color.c: 154:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12405   001BB4  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12406   001BB8  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12407   001BBC  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12408   001BC0  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12409   001BC4  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12410   001BC8  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12411   001BCC  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12412   001BD0  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12413   001BD4  EC47  F02E         	call	___flsub	;wreg free
 12414   001BD8  C02A  F036         	movff	?___flsub,___fldiv@a
 12415   001BDC  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12416   001BE0  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12417   001BE4  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12418   001BE8  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12419   001BEC  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12420   001BF0  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12421   001BF4  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12422   001BF8  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12423   001BFC  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12424   001C00  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12425   001C04  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12426   001C08  EC47  F02E         	call	___flsub	;wreg free
 12427   001C0C  C02A  F032         	movff	?___flsub,___fldiv@b
 12428   001C10  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12429   001C14  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12430   001C18  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12431   001C1C  EC8B  F015         	call	___fldiv	;wreg free
 12432   001C20  C032  F060         	movff	?___fldiv,_Colour_decider$3265
 12433   001C24  C033  F061         	movff	?___fldiv+1,_Colour_decider$3265+1
 12434   001C28  C034  F062         	movff	?___fldiv+2,_Colour_decider$3265+2
 12435   001C2C  C035  F063         	movff	?___fldiv+3,_Colour_decider$3265+3
 12436   001C30                     
 12437                           ;color.c: 154:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12438   001C30  0E00               	movlw	0
 12439   001C32  6E05               	movwf	___fladd@a^0,c
 12440   001C34  0E00               	movlw	0
 12441   001C36  6E06               	movwf	(___fladd@a+1)^0,c
 12442   001C38  0E00               	movlw	0
 12443   001C3A  6E07               	movwf	(___fladd@a+2)^0,c
 12444   001C3C  0E40               	movlw	64
 12445   001C3E  6E08               	movwf	(___fladd@a+3)^0,c
 12446   001C40  C060  F001         	movff	_Colour_decider$3265,___fladd@b
 12447   001C44  C061  F002         	movff	_Colour_decider$3265+1,___fladd@b+1
 12448   001C48  C062  F003         	movff	_Colour_decider$3265+2,___fladd@b+2
 12449   001C4C  C063  F004         	movff	_Colour_decider$3265+3,___fladd@b+3
 12450   001C50  EC16  F011         	call	___fladd	;wreg free
 12451   001C54  C001  F011         	movff	?___fladd,___flmul@b
 12452   001C58  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12453   001C5C  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12454   001C60  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12455   001C64  0E00               	movlw	0
 12456   001C66  6E15               	movwf	___flmul@a^0,c
 12457   001C68  0E00               	movlw	0
 12458   001C6A  6E16               	movwf	(___flmul@a+1)^0,c
 12459   001C6C  0E70               	movlw	112
 12460   001C6E  6E17               	movwf	(___flmul@a+2)^0,c
 12461   001C70  0E42               	movlw	66
 12462   001C72  6E18               	movwf	(___flmul@a+3)^0,c
 12463   001C74  EC76  F013         	call	___flmul	;wreg free
 12464   001C78  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12465   001C7C  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12466   001C80  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12467   001C84  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12468                           
 12469                           ;color.c: 156:     }
 12470   001C88  EFB0  F00E         	goto	l5435
 12471   001C8C                     l5431:
 12472                           
 12473                           ; BSR set to: 0
 12474                           ;color.c: 159:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12475   001C8C  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12476   001C90  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12477   001C94  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12478   001C98  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12479   001C9C  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12480   001CA0  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12481   001CA4  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12482   001CA8  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12483   001CAC  EC47  F02E         	call	___flsub	;wreg free
 12484   001CB0  C02A  F036         	movff	?___flsub,___fldiv@a
 12485   001CB4  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12486   001CB8  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12487   001CBC  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12488   001CC0  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12489   001CC4  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12490   001CC8  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12491   001CCC  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12492   001CD0  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12493   001CD4  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12494   001CD8  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12495   001CDC  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12496   001CE0  EC47  F02E         	call	___flsub	;wreg free
 12497   001CE4  C02A  F032         	movff	?___flsub,___fldiv@b
 12498   001CE8  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12499   001CEC  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12500   001CF0  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12501   001CF4  EC8B  F015         	call	___fldiv	;wreg free
 12502   001CF8  C032  F060         	movff	?___fldiv,_Colour_decider$3265
 12503   001CFC  C033  F061         	movff	?___fldiv+1,_Colour_decider$3265+1
 12504   001D00  C034  F062         	movff	?___fldiv+2,_Colour_decider$3265+2
 12505   001D04  C035  F063         	movff	?___fldiv+3,_Colour_decider$3265+3
 12506   001D08                     
 12507                           ;color.c: 159:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12508   001D08  0E00               	movlw	0
 12509   001D0A  6E05               	movwf	___fladd@a^0,c
 12510   001D0C  0E00               	movlw	0
 12511   001D0E  6E06               	movwf	(___fladd@a+1)^0,c
 12512   001D10  0E80               	movlw	128
 12513   001D12  6E07               	movwf	(___fladd@a+2)^0,c
 12514   001D14  0E40               	movlw	64
 12515   001D16  6E08               	movwf	(___fladd@a+3)^0,c
 12516   001D18  C060  F001         	movff	_Colour_decider$3265,___fladd@b
 12517   001D1C  C061  F002         	movff	_Colour_decider$3265+1,___fladd@b+1
 12518   001D20  C062  F003         	movff	_Colour_decider$3265+2,___fladd@b+2
 12519   001D24  C063  F004         	movff	_Colour_decider$3265+3,___fladd@b+3
 12520   001D28  EC16  F011         	call	___fladd	;wreg free
 12521   001D2C  C001  F011         	movff	?___fladd,___flmul@b
 12522   001D30  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12523   001D34  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12524   001D38  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12525   001D3C  0E00               	movlw	0
 12526   001D3E  6E15               	movwf	___flmul@a^0,c
 12527   001D40  0E00               	movlw	0
 12528   001D42  6E16               	movwf	(___flmul@a+1)^0,c
 12529   001D44  0E70               	movlw	112
 12530   001D46  6E17               	movwf	(___flmul@a+2)^0,c
 12531   001D48  0E42               	movlw	66
 12532   001D4A  6E18               	movwf	(___flmul@a+3)^0,c
 12533   001D4C  EC76  F013         	call	___flmul	;wreg free
 12534   001D50  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12535   001D54  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12536   001D58  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12537   001D5C  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12538   001D60                     l5435:
 12539                           
 12540                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 12541   001D60  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12542   001D64  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12543   001D68  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12544   001D6C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12545   001D70  0E00               	movlw	0
 12546   001D72  6E2E               	movwf	___flge@ff2^0,c
 12547   001D74  0E00               	movlw	0
 12548   001D76  6E2F               	movwf	(___flge@ff2+1)^0,c
 12549   001D78  0EA5               	movlw	165
 12550   001D7A  6E30               	movwf	(___flge@ff2+2)^0,c
 12551   001D7C  0E43               	movlw	67
 12552   001D7E  6E31               	movwf	(___flge@ff2+3)^0,c
 12553   001D80  ECF9  F024         	call	___flge	;wreg free
 12554   001D84  A0D8               	btfss	status,0,c
 12555   001D86  EFC7  F00E         	goto	u5271
 12556   001D8A  EFC9  F00E         	goto	u5270
 12557   001D8E                     u5271:
 12558   001D8E  EFE8  F00E         	goto	l5445
 12559   001D92                     u5270:
 12560   001D92  0E00               	movlw	0
 12561   001D94  6E2A               	movwf	___flge@ff1^0,c
 12562   001D96  0E00               	movlw	0
 12563   001D98  6E2B               	movwf	(___flge@ff1+1)^0,c
 12564   001D9A  0EB4               	movlw	180
 12565   001D9C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12566   001D9E  0E43               	movlw	67
 12567   001DA0  6E2D               	movwf	(___flge@ff1+3)^0,c
 12568   001DA2  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12569   001DA6  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12570   001DAA  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12571   001DAE  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12572   001DB2  ECF9  F024         	call	___flge	;wreg free
 12573   001DB6  A0D8               	btfss	status,0,c
 12574   001DB8  EFE0  F00E         	goto	u5281
 12575   001DBC  EFE2  F00E         	goto	u5280
 12576   001DC0                     u5281:
 12577   001DC0  EFE8  F00E         	goto	l5445
 12578   001DC4                     u5280:
 12579   001DC4                     
 12580                           ;color.c: 164:         return 1;
 12581   001DC4  0E00               	movlw	0
 12582   001DC6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12583   001DC8  0E01               	movlw	1
 12584   001DCA  6E4B               	movwf	?_Colour_decider^0,c
 12585   001DCC  EF15  F011         	goto	l80
 12586   001DD0                     l5445:
 12587   001DD0  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12588   001DD4  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12589   001DD8  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12590   001DDC  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12591   001DE0  0E00               	movlw	0
 12592   001DE2  6E2E               	movwf	___flge@ff2^0,c
 12593   001DE4  0E00               	movlw	0
 12594   001DE6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12595   001DE8  0EA0               	movlw	160
 12596   001DEA  6E30               	movwf	(___flge@ff2+2)^0,c
 12597   001DEC  0E40               	movlw	64
 12598   001DEE  6E31               	movwf	(___flge@ff2+3)^0,c
 12599   001DF0  ECF9  F024         	call	___flge	;wreg free
 12600   001DF4  A0D8               	btfss	status,0,c
 12601   001DF6  EFFF  F00E         	goto	u5291
 12602   001DFA  EF01  F00F         	goto	u5290
 12603   001DFE                     u5291:
 12604   001DFE  EF20  F00F         	goto	l5455
 12605   001E02                     u5290:
 12606   001E02  0E00               	movlw	0
 12607   001E04  6E2A               	movwf	___flge@ff1^0,c
 12608   001E06  0E00               	movlw	0
 12609   001E08  6E2B               	movwf	(___flge@ff1+1)^0,c
 12610   001E0A  0E30               	movlw	48
 12611   001E0C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12612   001E0E  0E41               	movlw	65
 12613   001E10  6E2D               	movwf	(___flge@ff1+3)^0,c
 12614   001E12  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12615   001E16  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12616   001E1A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12617   001E1E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12618   001E22  ECF9  F024         	call	___flge	;wreg free
 12619   001E26  A0D8               	btfss	status,0,c
 12620   001E28  EF18  F00F         	goto	u5301
 12621   001E2C  EF1A  F00F         	goto	u5300
 12622   001E30                     u5301:
 12623   001E30  EF20  F00F         	goto	l5455
 12624   001E34                     u5300:
 12625   001E34                     
 12626                           ;color.c: 168:         return 2;
 12627   001E34  0E00               	movlw	0
 12628   001E36  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12629   001E38  0E02               	movlw	2
 12630   001E3A  6E4B               	movwf	?_Colour_decider^0,c
 12631   001E3C  EF15  F011         	goto	l80
 12632   001E40                     l5455:
 12633   001E40  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12634   001E44  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12635   001E48  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12636   001E4C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12637   001E50  0E00               	movlw	0
 12638   001E52  6E2E               	movwf	___flge@ff2^0,c
 12639   001E54  0E00               	movlw	0
 12640   001E56  6E2F               	movwf	(___flge@ff2+1)^0,c
 12641   001E58  0E90               	movlw	144
 12642   001E5A  6E30               	movwf	(___flge@ff2+2)^0,c
 12643   001E5C  0E41               	movlw	65
 12644   001E5E  6E31               	movwf	(___flge@ff2+3)^0,c
 12645   001E60  ECF9  F024         	call	___flge	;wreg free
 12646   001E64  A0D8               	btfss	status,0,c
 12647   001E66  EF37  F00F         	goto	u5311
 12648   001E6A  EF39  F00F         	goto	u5310
 12649   001E6E                     u5311:
 12650   001E6E  EFED  F00F         	goto	l5485
 12651   001E72                     u5310:
 12652   001E72  0E00               	movlw	0
 12653   001E74  6E2A               	movwf	___flge@ff1^0,c
 12654   001E76  0E00               	movlw	0
 12655   001E78  6E2B               	movwf	(___flge@ff1+1)^0,c
 12656   001E7A  0EC8               	movlw	200
 12657   001E7C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12658   001E7E  0E41               	movlw	65
 12659   001E80  6E2D               	movwf	(___flge@ff1+3)^0,c
 12660   001E82  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12661   001E86  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12662   001E8A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12663   001E8E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12664   001E92  ECF9  F024         	call	___flge	;wreg free
 12665   001E96  A0D8               	btfss	status,0,c
 12666   001E98  EF50  F00F         	goto	u5321
 12667   001E9C  EF52  F00F         	goto	u5320
 12668   001EA0                     u5321:
 12669   001EA0  EFED  F00F         	goto	l5485
 12670   001EA4                     u5320:
 12671   001EA4                     
 12672                           ;color.c: 173:         if ((rel->R<=0.26)&&(rel->B>0.10)&&(vals->L>1000)){
 12673   001EA4  0EB8               	movlw	184
 12674   001EA6  6E2A               	movwf	___flge@ff1^0,c
 12675   001EA8  0E1E               	movlw	30
 12676   001EAA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12677   001EAC  0E85               	movlw	133
 12678   001EAE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12679   001EB0  0E3E               	movlw	62
 12680   001EB2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12681   001EB4  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12682   001EB8  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12683   001EBC  CFDE F02E          	movff	postinc2,___flge@ff2
 12684   001EC0  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12685   001EC4  CFDE F030          	movff	postinc2,___flge@ff2+2
 12686   001EC8  CFDE F031          	movff	postinc2,___flge@ff2+3
 12687   001ECC  ECF9  F024         	call	___flge	;wreg free
 12688   001ED0  A0D8               	btfss	status,0,c
 12689   001ED2  EF6D  F00F         	goto	u5331
 12690   001ED6  EF6F  F00F         	goto	u5330
 12691   001EDA                     u5331:
 12692   001EDA  EFA5  F00F         	goto	l5471
 12693   001EDE                     u5330:
 12694   001EDE  0ECD               	movlw	205
 12695   001EE0  6E2A               	movwf	___flge@ff1^0,c
 12696   001EE2  0ECC               	movlw	204
 12697   001EE4  6E2B               	movwf	(___flge@ff1+1)^0,c
 12698   001EE6  0ECC               	movlw	204
 12699   001EE8  6E2C               	movwf	(___flge@ff1+2)^0,c
 12700   001EEA  0E3D               	movlw	61
 12701   001EEC  6E2D               	movwf	(___flge@ff1+3)^0,c
 12702   001EEE  EE20 F008          	lfsr	2,8
 12703   001EF2  504D               	movf	Colour_decider@rel^0,w,c
 12704   001EF4  26D9               	addwf	fsr2l,f,c
 12705   001EF6  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12706   001EF8  22DA               	addwfc	fsr2h,f,c
 12707   001EFA  CFDE F02E          	movff	postinc2,___flge@ff2
 12708   001EFE  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12709   001F02  CFDE F030          	movff	postinc2,___flge@ff2+2
 12710   001F06  CFDE F031          	movff	postinc2,___flge@ff2+3
 12711   001F0A  ECF9  F024         	call	___flge	;wreg free
 12712   001F0E  B0D8               	btfsc	status,0,c
 12713   001F10  EF8C  F00F         	goto	u5341
 12714   001F14  EF8E  F00F         	goto	u5340
 12715   001F18                     u5341:
 12716   001F18  EFA5  F00F         	goto	l5471
 12717   001F1C                     u5340:
 12718   001F1C  EE20 F006          	lfsr	2,6
 12719   001F20  504B               	movf	Colour_decider@vals^0,w,c
 12720   001F22  26D9               	addwf	fsr2l,f,c
 12721   001F24  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12722   001F26  22DA               	addwfc	fsr2h,f,c
 12723   001F28  0E01               	movlw	1
 12724   001F2A  BEDB               	btfsc	plusw2,7,c
 12725   001F2C  EFA1  F00F         	goto	u5351
 12726   001F30  0EE9               	movlw	233
 12727   001F32  5CDE               	subwf	postinc2,w,c
 12728   001F34  0E03               	movlw	3
 12729   001F36  58DE               	subwfb	postinc2,w,c
 12730   001F38  A0D8               	btfss	status,0,c
 12731   001F3A  EFA1  F00F         	goto	u5351
 12732   001F3E  EFA3  F00F         	goto	u5350
 12733   001F42                     u5351:
 12734   001F42  EFA5  F00F         	goto	l5471
 12735   001F46                     u5350:
 12736   001F46  EF4D  F00D         	goto	l5413
 12737   001F4A                     l5471:
 12738   001F4A  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12739   001F4E  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12740   001F52  CFDE F02A          	movff	postinc2,___flge@ff1
 12741   001F56  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12742   001F5A  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12743   001F5E  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12744   001F62  0EB8               	movlw	184
 12745   001F64  6E2E               	movwf	___flge@ff2^0,c
 12746   001F66  0E1E               	movlw	30
 12747   001F68  6E2F               	movwf	(___flge@ff2+1)^0,c
 12748   001F6A  0E85               	movlw	133
 12749   001F6C  6E30               	movwf	(___flge@ff2+2)^0,c
 12750   001F6E  0E3E               	movlw	62
 12751   001F70  6E31               	movwf	(___flge@ff2+3)^0,c
 12752   001F72  ECF9  F024         	call	___flge	;wreg free
 12753   001F76  A0D8               	btfss	status,0,c
 12754   001F78  EFC0  F00F         	goto	u5361
 12755   001F7C  EFC2  F00F         	goto	u5360
 12756   001F80                     u5361:
 12757   001F80  EFE7  F00F         	goto	l5481
 12758   001F84                     u5360:
 12759   001F84  EE20 F008          	lfsr	2,8
 12760   001F88  504D               	movf	Colour_decider@rel^0,w,c
 12761   001F8A  26D9               	addwf	fsr2l,f,c
 12762   001F8C  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12763   001F8E  22DA               	addwfc	fsr2h,f,c
 12764   001F90  CFDE F02A          	movff	postinc2,___flge@ff1
 12765   001F94  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12766   001F98  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12767   001F9C  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12768   001FA0  0ECD               	movlw	205
 12769   001FA2  6E2E               	movwf	___flge@ff2^0,c
 12770   001FA4  0ECC               	movlw	204
 12771   001FA6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12772   001FA8  0ECC               	movlw	204
 12773   001FAA  6E30               	movwf	(___flge@ff2+2)^0,c
 12774   001FAC  0E3D               	movlw	61
 12775   001FAE  6E31               	movwf	(___flge@ff2+3)^0,c
 12776   001FB0  ECF9  F024         	call	___flge	;wreg free
 12777   001FB4  B0D8               	btfsc	status,0,c
 12778   001FB6  EFDF  F00F         	goto	u5371
 12779   001FBA  EFE1  F00F         	goto	u5370
 12780   001FBE                     u5371:
 12781   001FBE  EFE7  F00F         	goto	l5481
 12782   001FC2                     u5370:
 12783   001FC2                     
 12784                           ;color.c: 177:             return 3;
 12785   001FC2  0E00               	movlw	0
 12786   001FC4  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12787   001FC6  0E03               	movlw	3
 12788   001FC8  6E4B               	movwf	?_Colour_decider^0,c
 12789   001FCA  EF15  F011         	goto	l80
 12790   001FCE                     l5481:
 12791                           
 12792                           ;color.c: 180:             return 10;
 12793   001FCE  0E00               	movlw	0
 12794   001FD0  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12795   001FD2  0E0A               	movlw	10
 12796   001FD4  6E4B               	movwf	?_Colour_decider^0,c
 12797   001FD6  EF15  F011         	goto	l80
 12798   001FDA                     l5485:
 12799   001FDA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12800   001FDE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12801   001FE2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12802   001FE6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12803   001FEA  0E00               	movlw	0
 12804   001FEC  6E2E               	movwf	___flge@ff2^0,c
 12805   001FEE  0E00               	movlw	0
 12806   001FF0  6E2F               	movwf	(___flge@ff2+1)^0,c
 12807   001FF2  0EAA               	movlw	170
 12808   001FF4  6E30               	movwf	(___flge@ff2+2)^0,c
 12809   001FF6  0E42               	movlw	66
 12810   001FF8  6E31               	movwf	(___flge@ff2+3)^0,c
 12811   001FFA  ECF9  F024         	call	___flge	;wreg free
 12812   001FFE  A0D8               	btfss	status,0,c
 12813   002000  EF04  F010         	goto	u5381
 12814   002004  EF06  F010         	goto	u5380
 12815   002008                     u5381:
 12816   002008  EF25  F010         	goto	l5495
 12817   00200C                     u5380:
 12818   00200C  0E00               	movlw	0
 12819   00200E  6E2A               	movwf	___flge@ff1^0,c
 12820   002010  0E00               	movlw	0
 12821   002012  6E2B               	movwf	(___flge@ff1+1)^0,c
 12822   002014  0E20               	movlw	32
 12823   002016  6E2C               	movwf	(___flge@ff1+2)^0,c
 12824   002018  0E43               	movlw	67
 12825   00201A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12826   00201C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12827   002020  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12828   002024  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12829   002028  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12830   00202C  ECF9  F024         	call	___flge	;wreg free
 12831   002030  A0D8               	btfss	status,0,c
 12832   002032  EF1D  F010         	goto	u5391
 12833   002036  EF1F  F010         	goto	u5390
 12834   00203A                     u5391:
 12835   00203A  EF25  F010         	goto	l5495
 12836   00203E                     u5390:
 12837   00203E                     
 12838                           ;color.c: 186:         return 4;
 12839   00203E  0E00               	movlw	0
 12840   002040  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12841   002042  0E04               	movlw	4
 12842   002044  6E4B               	movwf	?_Colour_decider^0,c
 12843   002046  EF15  F011         	goto	l80
 12844   00204A                     l5495:
 12845   00204A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12846   00204E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12847   002052  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12848   002056  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12849   00205A  0E00               	movlw	0
 12850   00205C  6E2E               	movwf	___flge@ff2^0,c
 12851   00205E  0E00               	movlw	0
 12852   002060  6E2F               	movwf	(___flge@ff2+1)^0,c
 12853   002062  0E70               	movlw	112
 12854   002064  6E30               	movwf	(___flge@ff2+2)^0,c
 12855   002066  0E42               	movlw	66
 12856   002068  6E31               	movwf	(___flge@ff2+3)^0,c
 12857   00206A  ECF9  F024         	call	___flge	;wreg free
 12858   00206E  A0D8               	btfss	status,0,c
 12859   002070  EF3C  F010         	goto	u5401
 12860   002074  EF3E  F010         	goto	u5400
 12861   002078                     u5401:
 12862   002078  EFDF  F010         	goto	l5523
 12863   00207C                     u5400:
 12864   00207C  0E00               	movlw	0
 12865   00207E  6E2A               	movwf	___flge@ff1^0,c
 12866   002080  0E00               	movlw	0
 12867   002082  6E2B               	movwf	(___flge@ff1+1)^0,c
 12868   002084  0E9A               	movlw	154
 12869   002086  6E2C               	movwf	(___flge@ff1+2)^0,c
 12870   002088  0E42               	movlw	66
 12871   00208A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12872   00208C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12873   002090  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12874   002094  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12875   002098  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12876   00209C  ECF9  F024         	call	___flge	;wreg free
 12877   0020A0  A0D8               	btfss	status,0,c
 12878   0020A2  EF55  F010         	goto	u5411
 12879   0020A6  EF57  F010         	goto	u5410
 12880   0020AA                     u5411:
 12881   0020AA  EFDF  F010         	goto	l5523
 12882   0020AE                     u5410:
 12883   0020AE                     
 12884                           ;color.c: 191:         if ((0.12<=rel->B)&(0.21>rel->G)){
 12885   0020AE  EE20 F008          	lfsr	2,8
 12886   0020B2  504D               	movf	Colour_decider@rel^0,w,c
 12887   0020B4  26D9               	addwf	fsr2l,f,c
 12888   0020B6  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12889   0020B8  22DA               	addwfc	fsr2h,f,c
 12890   0020BA  CFDE F02A          	movff	postinc2,___flge@ff1
 12891   0020BE  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12892   0020C2  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12893   0020C6  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12894   0020CA  0E8F               	movlw	143
 12895   0020CC  6E2E               	movwf	___flge@ff2^0,c
 12896   0020CE  0EC2               	movlw	194
 12897   0020D0  6E2F               	movwf	(___flge@ff2+1)^0,c
 12898   0020D2  0EF5               	movlw	245
 12899   0020D4  6E30               	movwf	(___flge@ff2+2)^0,c
 12900   0020D6  0E3D               	movlw	61
 12901   0020D8  6E31               	movwf	(___flge@ff2+3)^0,c
 12902   0020DA  ECF9  F024         	call	___flge	;wreg free
 12903   0020DE  A0D8               	btfss	status,0,c
 12904   0020E0  EF74  F010         	goto	u5421
 12905   0020E4  EF76  F010         	goto	u5420
 12906   0020E8                     u5421:
 12907   0020E8  EF9B  F010         	goto	l5509
 12908   0020EC                     u5420:
 12909   0020EC  EE20 F004          	lfsr	2,4
 12910   0020F0  504D               	movf	Colour_decider@rel^0,w,c
 12911   0020F2  26D9               	addwf	fsr2l,f,c
 12912   0020F4  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12913   0020F6  22DA               	addwfc	fsr2h,f,c
 12914   0020F8  CFDE F02A          	movff	postinc2,___flge@ff1
 12915   0020FC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12916   002100  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12917   002104  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12918   002108  0E3D               	movlw	61
 12919   00210A  6E2E               	movwf	___flge@ff2^0,c
 12920   00210C  0E0A               	movlw	10
 12921   00210E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12922   002110  0E57               	movlw	87
 12923   002112  6E30               	movwf	(___flge@ff2+2)^0,c
 12924   002114  0E3E               	movlw	62
 12925   002116  6E31               	movwf	(___flge@ff2+3)^0,c
 12926   002118  ECF9  F024         	call	___flge	;wreg free
 12927   00211C  B0D8               	btfsc	status,0,c
 12928   00211E  EF93  F010         	goto	u5431
 12929   002122  EF95  F010         	goto	u5430
 12930   002126                     u5431:
 12931   002126  EF9B  F010         	goto	l5509
 12932   00212A                     u5430:
 12933   00212A                     
 12934                           ;color.c: 192:             return 6;
 12935   00212A  0E00               	movlw	0
 12936   00212C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12937   00212E  0E06               	movlw	6
 12938   002130  6E4B               	movwf	?_Colour_decider^0,c
 12939   002132  EF15  F011         	goto	l80
 12940   002136                     l5509:
 12941   002136  EE20 F008          	lfsr	2,8
 12942   00213A  504D               	movf	Colour_decider@rel^0,w,c
 12943   00213C  26D9               	addwf	fsr2l,f,c
 12944   00213E  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12945   002140  22DA               	addwfc	fsr2h,f,c
 12946   002142  CFDE F02A          	movff	postinc2,___flge@ff1
 12947   002146  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12948   00214A  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12949   00214E  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12950   002152  0E8F               	movlw	143
 12951   002154  6E2E               	movwf	___flge@ff2^0,c
 12952   002156  0EC2               	movlw	194
 12953   002158  6E2F               	movwf	(___flge@ff2+1)^0,c
 12954   00215A  0EF5               	movlw	245
 12955   00215C  6E30               	movwf	(___flge@ff2+2)^0,c
 12956   00215E  0E3D               	movlw	61
 12957   002160  6E31               	movwf	(___flge@ff2+3)^0,c
 12958   002162  ECF9  F024         	call	___flge	;wreg free
 12959   002166  B0D8               	btfsc	status,0,c
 12960   002168  EFB8  F010         	goto	u5441
 12961   00216C  EFBA  F010         	goto	u5440
 12962   002170                     u5441:
 12963   002170  EFE7  F00F         	goto	l5481
 12964   002174                     u5440:
 12965   002174  0E3D               	movlw	61
 12966   002176  6E2A               	movwf	___flge@ff1^0,c
 12967   002178  0E0A               	movlw	10
 12968   00217A  6E2B               	movwf	(___flge@ff1+1)^0,c
 12969   00217C  0E57               	movlw	87
 12970   00217E  6E2C               	movwf	(___flge@ff1+2)^0,c
 12971   002180  0E3E               	movlw	62
 12972   002182  6E2D               	movwf	(___flge@ff1+3)^0,c
 12973   002184  EE20 F004          	lfsr	2,4
 12974   002188  504D               	movf	Colour_decider@rel^0,w,c
 12975   00218A  26D9               	addwf	fsr2l,f,c
 12976   00218C  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12977   00218E  22DA               	addwfc	fsr2h,f,c
 12978   002190  CFDE F02E          	movff	postinc2,___flge@ff2
 12979   002194  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12980   002198  CFDE F030          	movff	postinc2,___flge@ff2+2
 12981   00219C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12982   0021A0  ECF9  F024         	call	___flge	;wreg free
 12983   0021A4  B0D8               	btfsc	status,0,c
 12984   0021A6  EFD7  F010         	goto	u5451
 12985   0021AA  EFD9  F010         	goto	u5450
 12986   0021AE                     u5451:
 12987   0021AE  EFE7  F00F         	goto	l5481
 12988   0021B2                     u5450:
 12989   0021B2                     
 12990                           ;color.c: 195:             return 5;
 12991   0021B2  0E00               	movlw	0
 12992   0021B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12993   0021B6  0E05               	movlw	5
 12994   0021B8  6E4B               	movwf	?_Colour_decider^0,c
 12995   0021BA  EF15  F011         	goto	l80
 12996   0021BE                     l5523:
 12997   0021BE  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12998   0021C2  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12999   0021C6  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13000   0021CA  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13001   0021CE  0E00               	movlw	0
 13002   0021D0  6E2E               	movwf	___flge@ff2^0,c
 13003   0021D2  0E00               	movlw	0
 13004   0021D4  6E2F               	movwf	(___flge@ff2+1)^0,c
 13005   0021D6  0E40               	movlw	64
 13006   0021D8  6E30               	movwf	(___flge@ff2+2)^0,c
 13007   0021DA  0E41               	movlw	65
 13008   0021DC  6E31               	movwf	(___flge@ff2+3)^0,c
 13009   0021DE  ECF9  F024         	call	___flge	;wreg free
 13010   0021E2  A0D8               	btfss	status,0,c
 13011   0021E4  EFF6  F010         	goto	u5461
 13012   0021E8  EFF8  F010         	goto	u5460
 13013   0021EC                     u5461:
 13014   0021EC  EFE7  F00F         	goto	l5481
 13015   0021F0                     u5460:
 13016   0021F0  0E00               	movlw	0
 13017   0021F2  6E2A               	movwf	___flge@ff1^0,c
 13018   0021F4  0E00               	movlw	0
 13019   0021F6  6E2B               	movwf	(___flge@ff1+1)^0,c
 13020   0021F8  0E88               	movlw	136
 13021   0021FA  6E2C               	movwf	(___flge@ff1+2)^0,c
 13022   0021FC  0E41               	movlw	65
 13023   0021FE  6E2D               	movwf	(___flge@ff1+3)^0,c
 13024   002200  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13025   002204  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13026   002208  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13027   00220C  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13028   002210  ECF9  F024         	call	___flge	;wreg free
 13029   002214  A0D8               	btfss	status,0,c
 13030   002216  EF0F  F011         	goto	u5471
 13031   00221A  EF11  F011         	goto	u5470
 13032   00221E                     u5471:
 13033   00221E  EFE7  F00F         	goto	l5481
 13034   002222                     u5470:
 13035   002222                     
 13036                           ;color.c: 204:             return 7;
 13037   002222  0E00               	movlw	0
 13038   002224  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13039   002226  0E07               	movlw	7
 13040   002228  6E4B               	movwf	?_Colour_decider^0,c
 13041   00222A                     l80:
 13042   00222A  0012               	return		;funcret
 13043   00222C                     __end_of_Colour_decider:
 13044                           	callstack 0
 13045                           
 13046 ;; *************** function ___xxtofl *****************
 13047 ;; Defined at:
 13048 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 13049 ;; Parameters:    Size  Location     Type
 13050 ;;  sign            1    wreg     unsigned char 
 13051 ;;  val             4    0[COMRAM] long 
 13052 ;; Auto vars:     Size  Location     Type
 13053 ;;  sign            1    8[COMRAM] unsigned char 
 13054 ;;  arg             4   10[COMRAM] unsigned long 
 13055 ;;  exp             1    9[COMRAM] unsigned char 
 13056 ;; Return value:  Size  Location     Type
 13057 ;;                  4    0[COMRAM] unsigned char 
 13058 ;; Registers used:
 13059 ;;		wreg, status,2, status,0
 13060 ;; Tracked objects:
 13061 ;;		On entry : 0/0
 13062 ;;		On exit  : 0/0
 13063 ;;		Unchanged: 0/0
 13064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13066 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13067 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13068 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13069 ;;Total ram usage:       14 bytes
 13070 ;; Hardware stack levels used: 1
 13071 ;; Hardware stack levels required when called: 1
 13072 ;; This function calls:
 13073 ;;		Nothing
 13074 ;; This function is called by:
 13075 ;;		_colour_rel
 13076 ;;		_Colour_decider
 13077 ;;		_reverseOneBlock
 13078 ;;		_ForwardOneBlock
 13079 ;;		_Forwardhalfblock
 13080 ;;		_Backhalfblock
 13081 ;; This function uses a non-reentrant model
 13082 ;;
 13083                           
 13084                           	psect	text75
 13085   004134                     __ptext75:
 13086                           	callstack 0
 13087   004134                     ___xxtofl:
 13088                           	callstack 28
 13089                           
 13090                           ;incstack = 0
 13091                           ;___xxtofl@sign stored from wreg
 13092   004134  6E09               	movwf	___xxtofl@sign^0,c
 13093   004136  5009               	movf	___xxtofl@sign^0,w,c
 13094   004138  B4D8               	btfsc	status,2,c
 13095   00413A  EFA1  F020         	goto	u5081
 13096   00413E  EFA3  F020         	goto	u5080
 13097   004142                     u5081:
 13098   004142  EFC5  F020         	goto	l1403
 13099   004146                     u5080:
 13100   004146  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13101   004148  EFAA  F020         	goto	u5090
 13102   00414C  EFA8  F020         	goto	u5091
 13103   004150                     u5091:
 13104   004150  EFC5  F020         	goto	l1403
 13105   004154                     u5090:
 13106   004154  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13107   004158  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13108   00415C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13109   004160  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13110   004164  1E05               	comf	??___xxtofl^0,f,c
 13111   004166  1E06               	comf	(??___xxtofl+1)^0,f,c
 13112   004168  1E07               	comf	(??___xxtofl+2)^0,f,c
 13113   00416A  1E08               	comf	(??___xxtofl+3)^0,f,c
 13114   00416C  2A05               	incf	??___xxtofl^0,f,c
 13115   00416E  0E00               	movlw	0
 13116   004170  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13117   004172  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13118   004174  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13119   004176  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13120   00417A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13121   00417E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13122   004182  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13123   004186  EFCD  F020         	goto	l5283
 13124   00418A                     l1403:
 13125   00418A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13126   00418E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13127   004192  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13128   004196  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13129   00419A                     l5283:
 13130   00419A  5001               	movf	___xxtofl@val^0,w,c
 13131   00419C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13132   00419E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13133   0041A0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13134   0041A2  A4D8               	btfss	status,2,c
 13135   0041A4  EFD6  F020         	goto	u5101
 13136   0041A8  EFD8  F020         	goto	u5100
 13137   0041AC                     u5101:
 13138   0041AC  EFE2  F020         	goto	l5289
 13139   0041B0                     u5100:
 13140   0041B0  0E00               	movlw	0
 13141   0041B2  6E01               	movwf	?___xxtofl^0,c
 13142   0041B4  0E00               	movlw	0
 13143   0041B6  6E02               	movwf	(?___xxtofl+1)^0,c
 13144   0041B8  0E00               	movlw	0
 13145   0041BA  6E03               	movwf	(?___xxtofl+2)^0,c
 13146   0041BC  0E00               	movlw	0
 13147   0041BE  6E04               	movwf	(?___xxtofl+3)^0,c
 13148   0041C0  EF73  F021         	goto	l1406
 13149   0041C4                     l5289:
 13150   0041C4  0E96               	movlw	150
 13151   0041C6  6E0A               	movwf	___xxtofl@exp^0,c
 13152   0041C8  EFEC  F020         	goto	l5293
 13153   0041CC                     l5291:
 13154   0041CC  2A0A               	incf	___xxtofl@exp^0,f,c
 13155   0041CE  90D8               	bcf	status,0,c
 13156   0041D0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13157   0041D2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13158   0041D4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13159   0041D6  320B               	rrcf	___xxtofl@arg^0,f,c
 13160   0041D8                     l5293:
 13161   0041D8  0E00               	movlw	0
 13162   0041DA  140B               	andwf	___xxtofl@arg^0,w,c
 13163   0041DC  6E05               	movwf	??___xxtofl^0,c
 13164   0041DE  0E00               	movlw	0
 13165   0041E0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13166   0041E2  6E06               	movwf	(??___xxtofl+1)^0,c
 13167   0041E4  0E00               	movlw	0
 13168   0041E6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13169   0041E8  6E07               	movwf	(??___xxtofl+2)^0,c
 13170   0041EA  0EFE               	movlw	254
 13171   0041EC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13172   0041EE  6E08               	movwf	(??___xxtofl+3)^0,c
 13173   0041F0  5005               	movf	??___xxtofl^0,w,c
 13174   0041F2  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13175   0041F4  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13176   0041F6  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13177   0041F8  A4D8               	btfss	status,2,c
 13178   0041FA  EF01  F021         	goto	u5111
 13179   0041FE  EF03  F021         	goto	u5110
 13180   004202                     u5111:
 13181   004202  EFE6  F020         	goto	l5291
 13182   004206                     u5110:
 13183   004206  EF11  F021         	goto	l1410
 13184   00420A                     l5295:
 13185   00420A  2A0A               	incf	___xxtofl@exp^0,f,c
 13186   00420C  0E01               	movlw	1
 13187   00420E  260B               	addwf	___xxtofl@arg^0,f,c
 13188   004210  0E00               	movlw	0
 13189   004212  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13190   004214  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13191   004216  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13192   004218  90D8               	bcf	status,0,c
 13193   00421A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13194   00421C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13195   00421E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13196   004220  320B               	rrcf	___xxtofl@arg^0,f,c
 13197   004222                     l1410:
 13198   004222  0E00               	movlw	0
 13199   004224  140B               	andwf	___xxtofl@arg^0,w,c
 13200   004226  6E05               	movwf	??___xxtofl^0,c
 13201   004228  0E00               	movlw	0
 13202   00422A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13203   00422C  6E06               	movwf	(??___xxtofl+1)^0,c
 13204   00422E  0E00               	movlw	0
 13205   004230  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13206   004232  6E07               	movwf	(??___xxtofl+2)^0,c
 13207   004234  0EFF               	movlw	255
 13208   004236  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13209   004238  6E08               	movwf	(??___xxtofl+3)^0,c
 13210   00423A  5005               	movf	??___xxtofl^0,w,c
 13211   00423C  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13212   00423E  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13213   004240  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13214   004242  A4D8               	btfss	status,2,c
 13215   004244  EF26  F021         	goto	u5121
 13216   004248  EF28  F021         	goto	u5120
 13217   00424C                     u5121:
 13218   00424C  EF05  F021         	goto	l5295
 13219   004250                     u5120:
 13220   004250  EF30  F021         	goto	l5303
 13221   004254                     l5301:
 13222   004254  060A               	decf	___xxtofl@exp^0,f,c
 13223   004256  90D8               	bcf	status,0,c
 13224   004258  360B               	rlcf	___xxtofl@arg^0,f,c
 13225   00425A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13226   00425C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13227   00425E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13228   004260                     l5303:
 13229   004260  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13230   004262  EF35  F021         	goto	u5131
 13231   004266  EF37  F021         	goto	u5130
 13232   00426A                     u5131:
 13233   00426A  EF3F  F021         	goto	l1417
 13234   00426E                     u5130:
 13235   00426E  0E02               	movlw	2
 13236   004270  600A               	cpfslt	___xxtofl@exp^0,c
 13237   004272  EF3D  F021         	goto	u5141
 13238   004276  EF3F  F021         	goto	u5140
 13239   00427A                     u5141:
 13240   00427A  EF2A  F021         	goto	l5301
 13241   00427E                     u5140:
 13242   00427E                     l1417:
 13243   00427E  B00A               	btfsc	___xxtofl@exp^0,0,c
 13244   004280  EF44  F021         	goto	u5151
 13245   004284  EF46  F021         	goto	u5150
 13246   004288                     u5151:
 13247   004288  EF47  F021         	goto	l5309
 13248   00428C                     u5150:
 13249   00428C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13250   00428E                     l5309:
 13251   00428E  90D8               	bcf	status,0,c
 13252   004290  320A               	rrcf	___xxtofl@exp^0,f,c
 13253   004292  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13254   004296  6A06               	clrf	(??___xxtofl+1)^0,c
 13255   004298  6A07               	clrf	(??___xxtofl+2)^0,c
 13256   00429A  6A08               	clrf	(??___xxtofl+3)^0,c
 13257   00429C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13258   0042A0  6A07               	clrf	(??___xxtofl+2)^0,c
 13259   0042A2  6A06               	clrf	(??___xxtofl+1)^0,c
 13260   0042A4  6A05               	clrf	??___xxtofl^0,c
 13261   0042A6  5005               	movf	??___xxtofl^0,w,c
 13262   0042A8  120B               	iorwf	___xxtofl@arg^0,f,c
 13263   0042AA  5006               	movf	(??___xxtofl+1)^0,w,c
 13264   0042AC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13265   0042AE  5007               	movf	(??___xxtofl+2)^0,w,c
 13266   0042B0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13267   0042B2  5008               	movf	(??___xxtofl+3)^0,w,c
 13268   0042B4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13269   0042B6  5009               	movf	___xxtofl@sign^0,w,c
 13270   0042B8  B4D8               	btfsc	status,2,c
 13271   0042BA  EF61  F021         	goto	u5161
 13272   0042BE  EF63  F021         	goto	u5160
 13273   0042C2                     u5161:
 13274   0042C2  EF6B  F021         	goto	l5319
 13275   0042C6                     u5160:
 13276   0042C6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13277   0042C8  EF6A  F021         	goto	u5170
 13278   0042CC  EF68  F021         	goto	u5171
 13279   0042D0                     u5171:
 13280   0042D0  EF6B  F021         	goto	l5319
 13281   0042D4                     u5170:
 13282   0042D4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13283   0042D6                     l5319:
 13284   0042D6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13285   0042DA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13286   0042DE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13287   0042E2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13288   0042E6                     l1406:
 13289   0042E6  0012               	return		;funcret
 13290   0042E8                     __end_of___xxtofl:
 13291                           	callstack 0
 13292                           
 13293 ;; *************** function ___flsub *****************
 13294 ;; Defined at:
 13295 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13296 ;; Parameters:    Size  Location     Type
 13297 ;;  b               4   41[COMRAM] unsigned char 
 13298 ;;  a               4   45[COMRAM] unsigned char 
 13299 ;; Auto vars:     Size  Location     Type
 13300 ;;		None
 13301 ;; Return value:  Size  Location     Type
 13302 ;;                  4   41[COMRAM] unsigned char 
 13303 ;; Registers used:
 13304 ;;		wreg, status,2, status,0, cstack
 13305 ;; Tracked objects:
 13306 ;;		On entry : 0/0
 13307 ;;		On exit  : 0/0
 13308 ;;		Unchanged: 0/0
 13309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13310 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13313 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13314 ;;Total ram usage:        8 bytes
 13315 ;; Hardware stack levels used: 1
 13316 ;; Hardware stack levels required when called: 2
 13317 ;; This function calls:
 13318 ;;		___fladd
 13319 ;; This function is called by:
 13320 ;;		_Colour_decider
 13321 ;;		_efgtoa
 13322 ;; This function uses a non-reentrant model
 13323 ;;
 13324                           
 13325                           	psect	text76
 13326   005C8E                     __ptext76:
 13327                           	callstack 0
 13328   005C8E                     ___flsub:
 13329                           	callstack 24
 13330   005C8E  0E00               	movlw	0
 13331   005C90  1A2E               	xorwf	___flsub@a^0,f,c
 13332   005C92  0E00               	movlw	0
 13333   005C94  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13334   005C96  0E00               	movlw	0
 13335   005C98  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13336   005C9A  0E80               	movlw	128
 13337   005C9C  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13338   005C9E  C02A  F001         	movff	___flsub@b,___fladd@b
 13339   005CA2  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13340   005CA6  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13341   005CAA  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13342   005CAE  C02E  F005         	movff	___flsub@a,___fladd@a
 13343   005CB2  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13344   005CB6  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13345   005CBA  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13346   005CBE  EC16  F011         	call	___fladd	;wreg free
 13347   005CC2  C001  F02A         	movff	?___fladd,?___flsub
 13348   005CC6  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13349   005CCA  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13350   005CCE  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13351   005CD2  0012               	return		;funcret
 13352   005CD4                     __end_of___flsub:
 13353                           	callstack 0
 13354                           
 13355 ;; *************** function ___fladd *****************
 13356 ;; Defined at:
 13357 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13358 ;; Parameters:    Size  Location     Type
 13359 ;;  b               4    0[COMRAM] unsigned char 
 13360 ;;  a               4    4[COMRAM] unsigned char 
 13361 ;; Auto vars:     Size  Location     Type
 13362 ;;  grs             1   15[COMRAM] unsigned char 
 13363 ;;  bexp            1   14[COMRAM] unsigned char 
 13364 ;;  aexp            1   13[COMRAM] unsigned char 
 13365 ;;  signs           1   12[COMRAM] unsigned char 
 13366 ;; Return value:  Size  Location     Type
 13367 ;;                  4    0[COMRAM] unsigned char 
 13368 ;; Registers used:
 13369 ;;		wreg, status,2, status,0
 13370 ;; Tracked objects:
 13371 ;;		On entry : 0/0
 13372 ;;		On exit  : 0/0
 13373 ;;		Unchanged: 0/0
 13374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13375 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13376 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13377 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13378 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13379 ;;Total ram usage:       16 bytes
 13380 ;; Hardware stack levels used: 1
 13381 ;; Hardware stack levels required when called: 1
 13382 ;; This function calls:
 13383 ;;		Nothing
 13384 ;; This function is called by:
 13385 ;;		_colour_rel
 13386 ;;		_Colour_decider
 13387 ;;		___flsub
 13388 ;;		_efgtoa
 13389 ;; This function uses a non-reentrant model
 13390 ;;
 13391                           
 13392                           	psect	text77
 13393   00222C                     __ptext77:
 13394                           	callstack 0
 13395   00222C                     ___fladd:
 13396                           	callstack 24
 13397   00222C  5004               	movf	(___fladd@b+3)^0,w,c
 13398   00222E  0B80               	andlw	128
 13399   002230  6E0D               	movwf	___fladd@signs^0,c
 13400   002232  5004               	movf	(___fladd@b+3)^0,w,c
 13401   002234  2404               	addwf	(___fladd@b+3)^0,w,c
 13402   002236  6E0F               	movwf	___fladd@bexp^0,c
 13403   002238  AE03               	btfss	(___fladd@b+2)^0,7,c
 13404   00223A  EF21  F011         	goto	u3011
 13405   00223E  EF23  F011         	goto	u3010
 13406   002242                     u3011:
 13407   002242  EF24  F011         	goto	l3901
 13408   002246                     u3010:
 13409   002246  800F               	bsf	___fladd@bexp^0,0,c
 13410   002248                     l3901:
 13411   002248  500F               	movf	___fladd@bexp^0,w,c
 13412   00224A  B4D8               	btfsc	status,2,c
 13413   00224C  EF2A  F011         	goto	u3021
 13414   002250  EF2C  F011         	goto	u3020
 13415   002254                     u3021:
 13416   002254  EF41  F011         	goto	l3911
 13417   002258                     u3020:
 13418   002258  280F               	incf	___fladd@bexp^0,w,c
 13419   00225A  A4D8               	btfss	status,2,c
 13420   00225C  EF32  F011         	goto	u3031
 13421   002260  EF34  F011         	goto	u3030
 13422   002264                     u3031:
 13423   002264  EF3C  F011         	goto	l3907
 13424   002268                     u3030:
 13425   002268  0E00               	movlw	0
 13426   00226A  6E01               	movwf	___fladd@b^0,c
 13427   00226C  0E00               	movlw	0
 13428   00226E  6E02               	movwf	(___fladd@b+1)^0,c
 13429   002270  0E00               	movlw	0
 13430   002272  6E03               	movwf	(___fladd@b+2)^0,c
 13431   002274  0E00               	movlw	0
 13432   002276  6E04               	movwf	(___fladd@b+3)^0,c
 13433   002278                     l3907:
 13434   002278  8E03               	bsf	(___fladd@b+2)^0,7,c
 13435   00227A  0E00               	movlw	0
 13436   00227C  6E04               	movwf	(___fladd@b+3)^0,c
 13437   00227E  EF49  F011         	goto	l3913
 13438   002282                     l3911:
 13439   002282  0E00               	movlw	0
 13440   002284  6E01               	movwf	___fladd@b^0,c
 13441   002286  0E00               	movlw	0
 13442   002288  6E02               	movwf	(___fladd@b+1)^0,c
 13443   00228A  0E00               	movlw	0
 13444   00228C  6E03               	movwf	(___fladd@b+2)^0,c
 13445   00228E  0E00               	movlw	0
 13446   002290  6E04               	movwf	(___fladd@b+3)^0,c
 13447   002292                     l3913:
 13448   002292  5008               	movf	(___fladd@a+3)^0,w,c
 13449   002294  0B80               	andlw	128
 13450   002296  6E0E               	movwf	___fladd@aexp^0,c
 13451   002298  500D               	movf	___fladd@signs^0,w,c
 13452   00229A  180E               	xorwf	___fladd@aexp^0,w,c
 13453   00229C  B4D8               	btfsc	status,2,c
 13454   00229E  EF53  F011         	goto	u3041
 13455   0022A2  EF55  F011         	goto	u3040
 13456   0022A6                     u3041:
 13457   0022A6  EF56  F011         	goto	l3919
 13458   0022AA                     u3040:
 13459   0022AA  8C0D               	bsf	___fladd@signs^0,6,c
 13460   0022AC                     l3919:
 13461   0022AC  5008               	movf	(___fladd@a+3)^0,w,c
 13462   0022AE  2408               	addwf	(___fladd@a+3)^0,w,c
 13463   0022B0  6E0E               	movwf	___fladd@aexp^0,c
 13464   0022B2  AE07               	btfss	(___fladd@a+2)^0,7,c
 13465   0022B4  EF5E  F011         	goto	u3051
 13466   0022B8  EF60  F011         	goto	u3050
 13467   0022BC                     u3051:
 13468   0022BC  EF61  F011         	goto	l3925
 13469   0022C0                     u3050:
 13470   0022C0  800E               	bsf	___fladd@aexp^0,0,c
 13471   0022C2                     l3925:
 13472   0022C2  500E               	movf	___fladd@aexp^0,w,c
 13473   0022C4  B4D8               	btfsc	status,2,c
 13474   0022C6  EF67  F011         	goto	u3061
 13475   0022CA  EF69  F011         	goto	u3060
 13476   0022CE                     u3061:
 13477   0022CE  EF7E  F011         	goto	l3935
 13478   0022D2                     u3060:
 13479   0022D2  280E               	incf	___fladd@aexp^0,w,c
 13480   0022D4  A4D8               	btfss	status,2,c
 13481   0022D6  EF6F  F011         	goto	u3071
 13482   0022DA  EF71  F011         	goto	u3070
 13483   0022DE                     u3071:
 13484   0022DE  EF79  F011         	goto	l3931
 13485   0022E2                     u3070:
 13486   0022E2  0E00               	movlw	0
 13487   0022E4  6E05               	movwf	___fladd@a^0,c
 13488   0022E6  0E00               	movlw	0
 13489   0022E8  6E06               	movwf	(___fladd@a+1)^0,c
 13490   0022EA  0E00               	movlw	0
 13491   0022EC  6E07               	movwf	(___fladd@a+2)^0,c
 13492   0022EE  0E00               	movlw	0
 13493   0022F0  6E08               	movwf	(___fladd@a+3)^0,c
 13494   0022F2                     l3931:
 13495   0022F2  8E07               	bsf	(___fladd@a+2)^0,7,c
 13496   0022F4  0E00               	movlw	0
 13497   0022F6  6E08               	movwf	(___fladd@a+3)^0,c
 13498   0022F8  EF86  F011         	goto	l3937
 13499   0022FC                     l3935:
 13500   0022FC  0E00               	movlw	0
 13501   0022FE  6E05               	movwf	___fladd@a^0,c
 13502   002300  0E00               	movlw	0
 13503   002302  6E06               	movwf	(___fladd@a+1)^0,c
 13504   002304  0E00               	movlw	0
 13505   002306  6E07               	movwf	(___fladd@a+2)^0,c
 13506   002308  0E00               	movlw	0
 13507   00230A  6E08               	movwf	(___fladd@a+3)^0,c
 13508   00230C                     l3937:
 13509   00230C  500F               	movf	___fladd@bexp^0,w,c
 13510   00230E  5C0E               	subwf	___fladd@aexp^0,w,c
 13511   002310  B0D8               	btfsc	status,0,c
 13512   002312  EF8D  F011         	goto	u3081
 13513   002316  EF8F  F011         	goto	u3080
 13514   00231A                     u3081:
 13515   00231A  EFB6  F011         	goto	l3973
 13516   00231E                     u3080:
 13517   00231E  AC0D               	btfss	___fladd@signs^0,6,c
 13518   002320  EF94  F011         	goto	u3091
 13519   002324  EF96  F011         	goto	u3090
 13520   002328                     u3091:
 13521   002328  EF98  F011         	goto	l3943
 13522   00232C                     u3090:
 13523   00232C  0E80               	movlw	128
 13524   00232E  1A0D               	xorwf	___fladd@signs^0,f,c
 13525   002330                     l3943:
 13526   002330  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13527   002334  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13528   002338  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13529   00233C  C001  F010         	movff	___fladd@b,___fladd@grs
 13530   002340  C005  F001         	movff	___fladd@a,___fladd@b
 13531   002344  C010  F005         	movff	___fladd@grs,___fladd@a
 13532   002348  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13533   00234C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13534   002350  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13535   002354  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13536   002358  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13537   00235C  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13538   002360  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13539   002364  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13540   002368  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13541   00236C                     l3973:
 13542   00236C  0E00               	movlw	0
 13543   00236E  6E10               	movwf	___fladd@grs^0,c
 13544   002370  500F               	movf	___fladd@bexp^0,w,c
 13545   002372  C00E  F009         	movff	___fladd@aexp,??___fladd
 13546   002376  6A0A               	clrf	(??___fladd+1)^0,c
 13547   002378  5E09               	subwf	??___fladd^0,f,c
 13548   00237A  0E00               	movlw	0
 13549   00237C  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13550   00237E  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13551   002380  EFCB  F011         	goto	u3101
 13552   002384  500A               	movf	(??___fladd+1)^0,w,c
 13553   002386  E109               	bnz	u3100
 13554   002388  0E1A               	movlw	26
 13555   00238A  5C09               	subwf	??___fladd^0,w,c
 13556   00238C  A0D8               	btfss	status,0,c
 13557   00238E  EFCB  F011         	goto	u3101
 13558   002392  EFCD  F011         	goto	u3100
 13559   002396                     u3101:
 13560   002396  EF04  F012         	goto	l1277
 13561   00239A                     u3100:
 13562   00239A  5001               	movf	___fladd@b^0,w,c
 13563   00239C  1002               	iorwf	(___fladd@b+1)^0,w,c
 13564   00239E  1003               	iorwf	(___fladd@b+2)^0,w,c
 13565   0023A0  1004               	iorwf	(___fladd@b+3)^0,w,c
 13566   0023A2  A4D8               	btfss	status,2,c
 13567   0023A4  EFD6  F011         	goto	u3111
 13568   0023A8  EFD9  F011         	goto	u3110
 13569   0023AC                     u3111:
 13570   0023AC  0E01               	movlw	1
 13571   0023AE  EFDA  F011         	goto	u3120
 13572   0023B2                     u3110:
 13573   0023B2  0E00               	movlw	0
 13574   0023B4                     u3120:
 13575   0023B4  6E10               	movwf	___fladd@grs^0,c
 13576   0023B6  0E00               	movlw	0
 13577   0023B8  6E01               	movwf	___fladd@b^0,c
 13578   0023BA  0E00               	movlw	0
 13579   0023BC  6E02               	movwf	(___fladd@b+1)^0,c
 13580   0023BE  0E00               	movlw	0
 13581   0023C0  6E03               	movwf	(___fladd@b+2)^0,c
 13582   0023C2  0E00               	movlw	0
 13583   0023C4  6E04               	movwf	(___fladd@b+3)^0,c
 13584   0023C6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13585   0023CA  EF0D  F012         	goto	l1276
 13586   0023CE                     l1278:
 13587   0023CE  A010               	btfss	___fladd@grs^0,0,c
 13588   0023D0  EFEC  F011         	goto	u3131
 13589   0023D4  EFEE  F011         	goto	u3130
 13590   0023D8                     u3131:
 13591   0023D8  EFF4  F011         	goto	l3985
 13592   0023DC                     u3130:
 13593   0023DC  90D8               	bcf	status,0,c
 13594   0023DE  3010               	rrcf	___fladd@grs^0,w,c
 13595   0023E0  0901               	iorlw	1
 13596   0023E2  6E10               	movwf	___fladd@grs^0,c
 13597   0023E4  EFF6  F011         	goto	l3987
 13598   0023E8                     l3985:
 13599   0023E8  90D8               	bcf	status,0,c
 13600   0023EA  3210               	rrcf	___fladd@grs^0,f,c
 13601   0023EC                     l3987:
 13602   0023EC  A001               	btfss	___fladd@b^0,0,c
 13603   0023EE  EFFB  F011         	goto	u3141
 13604   0023F2  EFFD  F011         	goto	u3140
 13605   0023F6                     u3141:
 13606   0023F6  EFFE  F011         	goto	l3991
 13607   0023FA                     u3140:
 13608   0023FA  8E10               	bsf	___fladd@grs^0,7,c
 13609   0023FC                     l3991:
 13610   0023FC  3404               	rlcf	(___fladd@b+3)^0,w,c
 13611   0023FE  3204               	rrcf	(___fladd@b+3)^0,f,c
 13612   002400  3203               	rrcf	(___fladd@b+2)^0,f,c
 13613   002402  3202               	rrcf	(___fladd@b+1)^0,f,c
 13614   002404  3201               	rrcf	___fladd@b^0,f,c
 13615   002406  2A0F               	incf	___fladd@bexp^0,f,c
 13616   002408                     l1277:
 13617   002408  500E               	movf	___fladd@aexp^0,w,c
 13618   00240A  5C0F               	subwf	___fladd@bexp^0,w,c
 13619   00240C  A0D8               	btfss	status,0,c
 13620   00240E  EF0B  F012         	goto	u3151
 13621   002412  EF0D  F012         	goto	u3150
 13622   002416                     u3151:
 13623   002416  EFE7  F011         	goto	l1278
 13624   00241A                     u3150:
 13625   00241A                     l1276:
 13626   00241A  BC0D               	btfsc	___fladd@signs^0,6,c
 13627   00241C  EF12  F012         	goto	u3161
 13628   002420  EF14  F012         	goto	u3160
 13629   002424                     u3161:
 13630   002424  EF54  F012         	goto	l4019
 13631   002428                     u3160:
 13632   002428  500F               	movf	___fladd@bexp^0,w,c
 13633   00242A  A4D8               	btfss	status,2,c
 13634   00242C  EF1A  F012         	goto	u3171
 13635   002430  EF1C  F012         	goto	u3170
 13636   002434                     u3171:
 13637   002434  EF26  F012         	goto	l4001
 13638   002438                     u3170:
 13639   002438  0E00               	movlw	0
 13640   00243A  6E01               	movwf	?___fladd^0,c
 13641   00243C  0E00               	movlw	0
 13642   00243E  6E02               	movwf	(?___fladd+1)^0,c
 13643   002440  0E00               	movlw	0
 13644   002442  6E03               	movwf	(?___fladd+2)^0,c
 13645   002444  0E00               	movlw	0
 13646   002446  6E04               	movwf	(?___fladd+3)^0,c
 13647   002448  EF75  F013         	goto	l1285
 13648   00244C                     l4001:
 13649   00244C  5005               	movf	___fladd@a^0,w,c
 13650   00244E  2601               	addwf	___fladd@b^0,f,c
 13651   002450  5006               	movf	(___fladd@a+1)^0,w,c
 13652   002452  2202               	addwfc	(___fladd@b+1)^0,f,c
 13653   002454  5007               	movf	(___fladd@a+2)^0,w,c
 13654   002456  2203               	addwfc	(___fladd@b+2)^0,f,c
 13655   002458  5008               	movf	(___fladd@a+3)^0,w,c
 13656   00245A  2204               	addwfc	(___fladd@b+3)^0,f,c
 13657   00245C  A004               	btfss	(___fladd@b+3)^0,0,c
 13658   00245E  EF33  F012         	goto	u3181
 13659   002462  EF35  F012         	goto	u3180
 13660   002466                     u3181:
 13661   002466  EFE1  F012         	goto	l4055
 13662   00246A                     u3180:
 13663   00246A  A010               	btfss	___fladd@grs^0,0,c
 13664   00246C  EF3A  F012         	goto	u3191
 13665   002470  EF3C  F012         	goto	u3190
 13666   002474                     u3191:
 13667   002474  EF42  F012         	goto	l4009
 13668   002478                     u3190:
 13669   002478  90D8               	bcf	status,0,c
 13670   00247A  3010               	rrcf	___fladd@grs^0,w,c
 13671   00247C  0901               	iorlw	1
 13672   00247E  6E10               	movwf	___fladd@grs^0,c
 13673   002480  EF44  F012         	goto	l4011
 13674   002484                     l4009:
 13675   002484  90D8               	bcf	status,0,c
 13676   002486  3210               	rrcf	___fladd@grs^0,f,c
 13677   002488                     l4011:
 13678   002488  A001               	btfss	___fladd@b^0,0,c
 13679   00248A  EF49  F012         	goto	u3201
 13680   00248E  EF4B  F012         	goto	u3200
 13681   002492                     u3201:
 13682   002492  EF4C  F012         	goto	l4015
 13683   002496                     u3200:
 13684   002496  8E10               	bsf	___fladd@grs^0,7,c
 13685   002498                     l4015:
 13686   002498  3404               	rlcf	(___fladd@b+3)^0,w,c
 13687   00249A  3204               	rrcf	(___fladd@b+3)^0,f,c
 13688   00249C  3203               	rrcf	(___fladd@b+2)^0,f,c
 13689   00249E  3202               	rrcf	(___fladd@b+1)^0,f,c
 13690   0024A0  3201               	rrcf	___fladd@b^0,f,c
 13691   0024A2  2A0F               	incf	___fladd@bexp^0,f,c
 13692   0024A4  EFE1  F012         	goto	l4055
 13693   0024A8                     l4019:
 13694   0024A8  5005               	movf	___fladd@a^0,w,c
 13695   0024AA  5C01               	subwf	___fladd@b^0,w,c
 13696   0024AC  5006               	movf	(___fladd@a+1)^0,w,c
 13697   0024AE  5802               	subwfb	(___fladd@b+1)^0,w,c
 13698   0024B0  5007               	movf	(___fladd@a+2)^0,w,c
 13699   0024B2  5803               	subwfb	(___fladd@b+2)^0,w,c
 13700   0024B4  5004               	movf	(___fladd@b+3)^0,w,c
 13701   0024B6  0A80               	xorlw	128
 13702   0024B8  6E09               	movwf	??___fladd^0,c
 13703   0024BA  5008               	movf	(___fladd@a+3)^0,w,c
 13704   0024BC  0A80               	xorlw	128
 13705   0024BE  5809               	subwfb	??___fladd^0,w,c
 13706   0024C0  B0D8               	btfsc	status,0,c
 13707   0024C2  EF65  F012         	goto	u3211
 13708   0024C6  EF67  F012         	goto	u3210
 13709   0024CA                     u3211:
 13710   0024CA  EF92  F012         	goto	l4029
 13711   0024CE                     u3210:
 13712   0024CE  5001               	movf	___fladd@b^0,w,c
 13713   0024D0  5C05               	subwf	___fladd@a^0,w,c
 13714   0024D2  6E09               	movwf	??___fladd^0,c
 13715   0024D4  5002               	movf	(___fladd@b+1)^0,w,c
 13716   0024D6  5806               	subwfb	(___fladd@a+1)^0,w,c
 13717   0024D8  6E0A               	movwf	(??___fladd+1)^0,c
 13718   0024DA  5003               	movf	(___fladd@b+2)^0,w,c
 13719   0024DC  5807               	subwfb	(___fladd@a+2)^0,w,c
 13720   0024DE  6E0B               	movwf	(??___fladd+2)^0,c
 13721   0024E0  5004               	movf	(___fladd@b+3)^0,w,c
 13722   0024E2  5808               	subwfb	(___fladd@a+3)^0,w,c
 13723   0024E4  6E0C               	movwf	(??___fladd+3)^0,c
 13724   0024E6  0EFF               	movlw	255
 13725   0024E8  2409               	addwf	??___fladd^0,w,c
 13726   0024EA  6E01               	movwf	___fladd@b^0,c
 13727   0024EC  0EFF               	movlw	255
 13728   0024EE  200A               	addwfc	(??___fladd+1)^0,w,c
 13729   0024F0  6E02               	movwf	(___fladd@b+1)^0,c
 13730   0024F2  0EFF               	movlw	255
 13731   0024F4  200B               	addwfc	(??___fladd+2)^0,w,c
 13732   0024F6  6E03               	movwf	(___fladd@b+2)^0,c
 13733   0024F8  0EFF               	movlw	255
 13734   0024FA  200C               	addwfc	(??___fladd+3)^0,w,c
 13735   0024FC  6E04               	movwf	(___fladd@b+3)^0,c
 13736   0024FE  0E80               	movlw	128
 13737   002500  1A0D               	xorwf	___fladd@signs^0,f,c
 13738   002502  6C10               	negf	___fladd@grs^0,c
 13739   002504  5010               	movf	___fladd@grs^0,w,c
 13740   002506  A4D8               	btfss	status,2,c
 13741   002508  EF88  F012         	goto	u3221
 13742   00250C  EF8A  F012         	goto	u3220
 13743   002510                     u3221:
 13744   002510  EF9A  F012         	goto	l1293
 13745   002514                     u3220:
 13746   002514  0E01               	movlw	1
 13747   002516  2601               	addwf	___fladd@b^0,f,c
 13748   002518  0E00               	movlw	0
 13749   00251A  2202               	addwfc	(___fladd@b+1)^0,f,c
 13750   00251C  2203               	addwfc	(___fladd@b+2)^0,f,c
 13751   00251E  2204               	addwfc	(___fladd@b+3)^0,f,c
 13752   002520  EF9A  F012         	goto	l1293
 13753   002524                     l4029:
 13754   002524  5005               	movf	___fladd@a^0,w,c
 13755   002526  5E01               	subwf	___fladd@b^0,f,c
 13756   002528  5006               	movf	(___fladd@a+1)^0,w,c
 13757   00252A  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13758   00252C  5007               	movf	(___fladd@a+2)^0,w,c
 13759   00252E  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13760   002530  5008               	movf	(___fladd@a+3)^0,w,c
 13761   002532  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13762   002534                     l1293:
 13763   002534  5001               	movf	___fladd@b^0,w,c
 13764   002536  1002               	iorwf	(___fladd@b+1)^0,w,c
 13765   002538  1003               	iorwf	(___fladd@b+2)^0,w,c
 13766   00253A  1004               	iorwf	(___fladd@b+3)^0,w,c
 13767   00253C  A4D8               	btfss	status,2,c
 13768   00253E  EFA3  F012         	goto	u3231
 13769   002542  EFA5  F012         	goto	u3230
 13770   002546                     u3231:
 13771   002546  EFDA  F012         	goto	l4053
 13772   00254A                     u3230:
 13773   00254A  5010               	movf	___fladd@grs^0,w,c
 13774   00254C  A4D8               	btfss	status,2,c
 13775   00254E  EFAB  F012         	goto	u3241
 13776   002552  EFAD  F012         	goto	u3240
 13777   002556                     u3241:
 13778   002556  EFDA  F012         	goto	l4053
 13779   00255A                     u3240:
 13780   00255A  0E00               	movlw	0
 13781   00255C  6E01               	movwf	?___fladd^0,c
 13782   00255E  0E00               	movlw	0
 13783   002560  6E02               	movwf	(?___fladd+1)^0,c
 13784   002562  0E00               	movlw	0
 13785   002564  6E03               	movwf	(?___fladd+2)^0,c
 13786   002566  0E00               	movlw	0
 13787   002568  6E04               	movwf	(?___fladd+3)^0,c
 13788   00256A  EF75  F013         	goto	l1285
 13789   00256E                     l4037:
 13790   00256E  90D8               	bcf	status,0,c
 13791   002570  3601               	rlcf	___fladd@b^0,f,c
 13792   002572  3602               	rlcf	(___fladd@b+1)^0,f,c
 13793   002574  3603               	rlcf	(___fladd@b+2)^0,f,c
 13794   002576  3604               	rlcf	(___fladd@b+3)^0,f,c
 13795   002578  AE10               	btfss	___fladd@grs^0,7,c
 13796   00257A  EFC1  F012         	goto	u3251
 13797   00257E  EFC3  F012         	goto	u3250
 13798   002582                     u3251:
 13799   002582  EFC4  F012         	goto	l4043
 13800   002586                     u3250:
 13801   002586  8001               	bsf	___fladd@b^0,0,c
 13802   002588                     l4043:
 13803   002588  A010               	btfss	___fladd@grs^0,0,c
 13804   00258A  EFC9  F012         	goto	u3261
 13805   00258E  EFCB  F012         	goto	u3260
 13806   002592                     u3261:
 13807   002592  EFCF  F012         	goto	l4047
 13808   002596                     u3260:
 13809   002596  80D8               	bsf	status,0,c
 13810   002598  3610               	rlcf	___fladd@grs^0,f,c
 13811   00259A  EFD1  F012         	goto	l4049
 13812   00259E                     l4047:
 13813   00259E  90D8               	bcf	status,0,c
 13814   0025A0  3610               	rlcf	___fladd@grs^0,f,c
 13815   0025A2                     l4049:
 13816   0025A2  500F               	movf	___fladd@bexp^0,w,c
 13817   0025A4  B4D8               	btfsc	status,2,c
 13818   0025A6  EFD7  F012         	goto	u3271
 13819   0025AA  EFD9  F012         	goto	u3270
 13820   0025AE                     u3271:
 13821   0025AE  EFDA  F012         	goto	l4053
 13822   0025B2                     u3270:
 13823   0025B2  060F               	decf	___fladd@bexp^0,f,c
 13824   0025B4                     l4053:
 13825   0025B4  AE03               	btfss	(___fladd@b+2)^0,7,c
 13826   0025B6  EFDF  F012         	goto	u3281
 13827   0025BA  EFE1  F012         	goto	u3280
 13828   0025BE                     u3281:
 13829   0025BE  EFB7  F012         	goto	l4037
 13830   0025C2                     u3280:
 13831   0025C2                     l4055:
 13832   0025C2  0E00               	movlw	0
 13833   0025C4  6E0E               	movwf	___fladd@aexp^0,c
 13834   0025C6  AE10               	btfss	___fladd@grs^0,7,c
 13835   0025C8  EFE8  F012         	goto	u3291
 13836   0025CC  EFEA  F012         	goto	u3290
 13837   0025D0                     u3291:
 13838   0025D0  EF02  F013         	goto	l1302
 13839   0025D4                     u3290:
 13840   0025D4  C010  F009         	movff	___fladd@grs,??___fladd
 13841   0025D8  0E7F               	movlw	127
 13842   0025DA  1609               	andwf	??___fladd^0,f,c
 13843   0025DC  B4D8               	btfsc	status,2,c
 13844   0025DE  EFF3  F012         	goto	u3301
 13845   0025E2  EFF5  F012         	goto	u3300
 13846   0025E6                     u3301:
 13847   0025E6  EFF9  F012         	goto	l1303
 13848   0025EA                     u3300:
 13849   0025EA                     l4061:
 13850   0025EA  0E01               	movlw	1
 13851   0025EC  6E0E               	movwf	___fladd@aexp^0,c
 13852   0025EE  EF02  F013         	goto	l1302
 13853   0025F2                     l1303:
 13854   0025F2  A001               	btfss	___fladd@b^0,0,c
 13855   0025F4  EFFE  F012         	goto	u3311
 13856   0025F8  EF00  F013         	goto	u3310
 13857   0025FC                     u3311:
 13858   0025FC  EF02  F013         	goto	l1302
 13859   002600                     u3310:
 13860   002600  EFF5  F012         	goto	l4061
 13861   002604                     l1302:
 13862   002604  500E               	movf	___fladd@aexp^0,w,c
 13863   002606  B4D8               	btfsc	status,2,c
 13864   002608  EF08  F013         	goto	u3321
 13865   00260C  EF0A  F013         	goto	u3320
 13866   002610                     u3321:
 13867   002610  EF35  F013         	goto	l4073
 13868   002614                     u3320:
 13869   002614  0E01               	movlw	1
 13870   002616  2601               	addwf	___fladd@b^0,f,c
 13871   002618  0E00               	movlw	0
 13872   00261A  2202               	addwfc	(___fladd@b+1)^0,f,c
 13873   00261C  2203               	addwfc	(___fladd@b+2)^0,f,c
 13874   00261E  2204               	addwfc	(___fladd@b+3)^0,f,c
 13875   002620  A004               	btfss	(___fladd@b+3)^0,0,c
 13876   002622  EF15  F013         	goto	u3331
 13877   002626  EF17  F013         	goto	u3330
 13878   00262A                     u3331:
 13879   00262A  EF35  F013         	goto	l4073
 13880   00262E                     u3330:
 13881   00262E  C001  F009         	movff	___fladd@b,??___fladd
 13882   002632  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 13883   002636  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 13884   00263A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 13885   00263E  340C               	rlcf	(??___fladd+3)^0,w,c
 13886   002640  320C               	rrcf	(??___fladd+3)^0,f,c
 13887   002642  320B               	rrcf	(??___fladd+2)^0,f,c
 13888   002644  320A               	rrcf	(??___fladd+1)^0,f,c
 13889   002646  3209               	rrcf	??___fladd^0,f,c
 13890   002648  C009  F001         	movff	??___fladd,___fladd@b
 13891   00264C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 13892   002650  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 13893   002654  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 13894   002658  280F               	incf	___fladd@bexp^0,w,c
 13895   00265A  B4D8               	btfsc	status,2,c
 13896   00265C  EF32  F013         	goto	u3341
 13897   002660  EF34  F013         	goto	u3340
 13898   002664                     u3341:
 13899   002664  EF35  F013         	goto	l4073
 13900   002668                     u3340:
 13901   002668  2A0F               	incf	___fladd@bexp^0,f,c
 13902   00266A                     l4073:
 13903   00266A  280F               	incf	___fladd@bexp^0,w,c
 13904   00266C  B4D8               	btfsc	status,2,c
 13905   00266E  EF3B  F013         	goto	u3351
 13906   002672  EF3D  F013         	goto	u3350
 13907   002676                     u3351:
 13908   002676  EF45  F013         	goto	l4077
 13909   00267A                     u3350:
 13910   00267A  500F               	movf	___fladd@bexp^0,w,c
 13911   00267C  A4D8               	btfss	status,2,c
 13912   00267E  EF43  F013         	goto	u3361
 13913   002682  EF45  F013         	goto	u3360
 13914   002686                     u3361:
 13915   002686  EF57  F013         	goto	l4081
 13916   00268A                     u3360:
 13917   00268A                     l4077:
 13918   00268A  0E00               	movlw	0
 13919   00268C  6E01               	movwf	___fladd@b^0,c
 13920   00268E  0E00               	movlw	0
 13921   002690  6E02               	movwf	(___fladd@b+1)^0,c
 13922   002692  0E00               	movlw	0
 13923   002694  6E03               	movwf	(___fladd@b+2)^0,c
 13924   002696  0E00               	movlw	0
 13925   002698  6E04               	movwf	(___fladd@b+3)^0,c
 13926   00269A  500F               	movf	___fladd@bexp^0,w,c
 13927   00269C  A4D8               	btfss	status,2,c
 13928   00269E  EF53  F013         	goto	u3371
 13929   0026A2  EF55  F013         	goto	u3370
 13930   0026A6                     u3371:
 13931   0026A6  EF57  F013         	goto	l4081
 13932   0026AA                     u3370:
 13933   0026AA  0E00               	movlw	0
 13934   0026AC  6E0D               	movwf	___fladd@signs^0,c
 13935   0026AE                     l4081:
 13936   0026AE  A00F               	btfss	___fladd@bexp^0,0,c
 13937   0026B0  EF5C  F013         	goto	u3381
 13938   0026B4  EF5E  F013         	goto	u3380
 13939   0026B8                     u3381:
 13940   0026B8  EF61  F013         	goto	l4085
 13941   0026BC                     u3380:
 13942   0026BC  8E03               	bsf	(___fladd@b+2)^0,7,c
 13943   0026BE  EF62  F013         	goto	l4087
 13944   0026C2                     l4085:
 13945   0026C2  9E03               	bcf	(___fladd@b+2)^0,7,c
 13946   0026C4                     l4087:
 13947   0026C4  90D8               	bcf	status,0,c
 13948   0026C6  300F               	rrcf	___fladd@bexp^0,w,c
 13949   0026C8  6E04               	movwf	(___fladd@b+3)^0,c
 13950   0026CA  AE0D               	btfss	___fladd@signs^0,7,c
 13951   0026CC  EF6A  F013         	goto	u3391
 13952   0026D0  EF6C  F013         	goto	u3390
 13953   0026D4                     u3391:
 13954   0026D4  EF6D  F013         	goto	l4093
 13955   0026D8                     u3390:
 13956   0026D8  8E04               	bsf	(___fladd@b+3)^0,7,c
 13957   0026DA                     l4093:
 13958   0026DA  C001  F001         	movff	___fladd@b,?___fladd
 13959   0026DE  C002  F002         	movff	___fladd@b+1,?___fladd+1
 13960   0026E2  C003  F003         	movff	___fladd@b+2,?___fladd+2
 13961   0026E6  C004  F004         	movff	___fladd@b+3,?___fladd+3
 13962   0026EA                     l1285:
 13963   0026EA  0012               	return		;funcret
 13964   0026EC                     __end_of___fladd:
 13965                           	callstack 0
 13966                           
 13967 ;; *************** function ___flmul *****************
 13968 ;; Defined at:
 13969 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 13970 ;; Parameters:    Size  Location     Type
 13971 ;;  b               4   16[COMRAM] unsigned char 
 13972 ;;  a               4   20[COMRAM] unsigned char 
 13973 ;; Auto vars:     Size  Location     Type
 13974 ;;  prod            4   35[COMRAM] struct .
 13975 ;;  grs             4   29[COMRAM] unsigned long 
 13976 ;;  temp            2   39[COMRAM] struct .
 13977 ;;  bexp            1   34[COMRAM] unsigned char 
 13978 ;;  aexp            1   33[COMRAM] unsigned char 
 13979 ;;  sign            1   28[COMRAM] unsigned char 
 13980 ;; Return value:  Size  Location     Type
 13981 ;;                  4   16[COMRAM] unsigned char 
 13982 ;; Registers used:
 13983 ;;		wreg, status,2, status,0, prodl, prodh
 13984 ;; Tracked objects:
 13985 ;;		On entry : 0/0
 13986 ;;		On exit  : 0/0
 13987 ;;		Unchanged: 0/0
 13988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13989 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13990 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13991 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13992 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13993 ;;Total ram usage:       25 bytes
 13994 ;; Hardware stack levels used: 1
 13995 ;; Hardware stack levels required when called: 1
 13996 ;; This function calls:
 13997 ;;		Nothing
 13998 ;; This function is called by:
 13999 ;;		_Colour_decider
 14000 ;;		_reverseOneBlock
 14001 ;;		_ForwardOneBlock
 14002 ;;		_Forwardhalfblock
 14003 ;;		_Backhalfblock
 14004 ;;		_efgtoa
 14005 ;; This function uses a non-reentrant model
 14006 ;;
 14007                           
 14008                           	psect	text78
 14009   0026EC                     __ptext78:
 14010                           	callstack 0
 14011   0026EC                     ___flmul:
 14012                           	callstack 25
 14013   0026EC  5014               	movf	(___flmul@b+3)^0,w,c
 14014   0026EE  0B80               	andlw	128
 14015   0026F0  6E1D               	movwf	___flmul@sign^0,c
 14016   0026F2  5014               	movf	(___flmul@b+3)^0,w,c
 14017   0026F4  2414               	addwf	(___flmul@b+3)^0,w,c
 14018   0026F6  6E23               	movwf	___flmul@bexp^0,c
 14019   0026F8  AE13               	btfss	(___flmul@b+2)^0,7,c
 14020   0026FA  EF81  F013         	goto	u3881
 14021   0026FE  EF83  F013         	goto	u3880
 14022   002702                     u3881:
 14023   002702  EF84  F013         	goto	l4405
 14024   002706                     u3880:
 14025   002706  8023               	bsf	___flmul@bexp^0,0,c
 14026   002708                     l4405:
 14027   002708  5023               	movf	___flmul@bexp^0,w,c
 14028   00270A  B4D8               	btfsc	status,2,c
 14029   00270C  EF8A  F013         	goto	u3891
 14030   002710  EF8C  F013         	goto	u3890
 14031   002714                     u3891:
 14032   002714  EF9F  F013         	goto	l4413
 14033   002718                     u3890:
 14034   002718  2823               	incf	___flmul@bexp^0,w,c
 14035   00271A  A4D8               	btfss	status,2,c
 14036   00271C  EF92  F013         	goto	u3901
 14037   002720  EF94  F013         	goto	u3900
 14038   002724                     u3901:
 14039   002724  EF9C  F013         	goto	l4411
 14040   002728                     u3900:
 14041   002728  0E00               	movlw	0
 14042   00272A  6E11               	movwf	___flmul@b^0,c
 14043   00272C  0E00               	movlw	0
 14044   00272E  6E12               	movwf	(___flmul@b+1)^0,c
 14045   002730  0E00               	movlw	0
 14046   002732  6E13               	movwf	(___flmul@b+2)^0,c
 14047   002734  0E00               	movlw	0
 14048   002736  6E14               	movwf	(___flmul@b+3)^0,c
 14049   002738                     l4411:
 14050   002738  8E13               	bsf	(___flmul@b+2)^0,7,c
 14051   00273A  EFA7  F013         	goto	l4415
 14052   00273E                     l4413:
 14053   00273E  0E00               	movlw	0
 14054   002740  6E11               	movwf	___flmul@b^0,c
 14055   002742  0E00               	movlw	0
 14056   002744  6E12               	movwf	(___flmul@b+1)^0,c
 14057   002746  0E00               	movlw	0
 14058   002748  6E13               	movwf	(___flmul@b+2)^0,c
 14059   00274A  0E00               	movlw	0
 14060   00274C  6E14               	movwf	(___flmul@b+3)^0,c
 14061   00274E                     l4415:
 14062   00274E  5018               	movf	(___flmul@a+3)^0,w,c
 14063   002750  0B80               	andlw	128
 14064   002752  1A1D               	xorwf	___flmul@sign^0,f,c
 14065   002754  5018               	movf	(___flmul@a+3)^0,w,c
 14066   002756  2418               	addwf	(___flmul@a+3)^0,w,c
 14067   002758  6E22               	movwf	___flmul@aexp^0,c
 14068   00275A  AE17               	btfss	(___flmul@a+2)^0,7,c
 14069   00275C  EFB2  F013         	goto	u3911
 14070   002760  EFB4  F013         	goto	u3910
 14071   002764                     u3911:
 14072   002764  EFB5  F013         	goto	l4423
 14073   002768                     u3910:
 14074   002768  8022               	bsf	___flmul@aexp^0,0,c
 14075   00276A                     l4423:
 14076   00276A  5022               	movf	___flmul@aexp^0,w,c
 14077   00276C  B4D8               	btfsc	status,2,c
 14078   00276E  EFBB  F013         	goto	u3921
 14079   002772  EFBD  F013         	goto	u3920
 14080   002776                     u3921:
 14081   002776  EFD0  F013         	goto	l4431
 14082   00277A                     u3920:
 14083   00277A  2822               	incf	___flmul@aexp^0,w,c
 14084   00277C  A4D8               	btfss	status,2,c
 14085   00277E  EFC3  F013         	goto	u3931
 14086   002782  EFC5  F013         	goto	u3930
 14087   002786                     u3931:
 14088   002786  EFCD  F013         	goto	l4429
 14089   00278A                     u3930:
 14090   00278A  0E00               	movlw	0
 14091   00278C  6E15               	movwf	___flmul@a^0,c
 14092   00278E  0E00               	movlw	0
 14093   002790  6E16               	movwf	(___flmul@a+1)^0,c
 14094   002792  0E00               	movlw	0
 14095   002794  6E17               	movwf	(___flmul@a+2)^0,c
 14096   002796  0E00               	movlw	0
 14097   002798  6E18               	movwf	(___flmul@a+3)^0,c
 14098   00279A                     l4429:
 14099   00279A  8E17               	bsf	(___flmul@a+2)^0,7,c
 14100   00279C  EFD8  F013         	goto	l1362
 14101   0027A0                     l4431:
 14102   0027A0  0E00               	movlw	0
 14103   0027A2  6E15               	movwf	___flmul@a^0,c
 14104   0027A4  0E00               	movlw	0
 14105   0027A6  6E16               	movwf	(___flmul@a+1)^0,c
 14106   0027A8  0E00               	movlw	0
 14107   0027AA  6E17               	movwf	(___flmul@a+2)^0,c
 14108   0027AC  0E00               	movlw	0
 14109   0027AE  6E18               	movwf	(___flmul@a+3)^0,c
 14110   0027B0                     l1362:
 14111   0027B0  5022               	movf	___flmul@aexp^0,w,c
 14112   0027B2  B4D8               	btfsc	status,2,c
 14113   0027B4  EFDE  F013         	goto	u3941
 14114   0027B8  EFE0  F013         	goto	u3940
 14115   0027BC                     u3941:
 14116   0027BC  EFE8  F013         	goto	l4435
 14117   0027C0                     u3940:
 14118   0027C0  5023               	movf	___flmul@bexp^0,w,c
 14119   0027C2  A4D8               	btfss	status,2,c
 14120   0027C4  EFE6  F013         	goto	u3951
 14121   0027C8  EFE8  F013         	goto	u3950
 14122   0027CC                     u3951:
 14123   0027CC  EFF2  F013         	goto	l4439
 14124   0027D0                     u3950:
 14125   0027D0                     l4435:
 14126   0027D0  0E00               	movlw	0
 14127   0027D2  6E11               	movwf	?___flmul^0,c
 14128   0027D4  0E00               	movlw	0
 14129   0027D6  6E12               	movwf	(?___flmul+1)^0,c
 14130   0027D8  0E00               	movlw	0
 14131   0027DA  6E13               	movwf	(?___flmul+2)^0,c
 14132   0027DC  0E00               	movlw	0
 14133   0027DE  6E14               	movwf	(?___flmul+3)^0,c
 14134   0027E0  EF8A  F015         	goto	l1366
 14135   0027E4                     l4439:
 14136   0027E4  5017               	movf	(___flmul@a+2)^0,w,c
 14137   0027E6  0211               	mulwf	___flmul@b^0,c
 14138   0027E8  CFF3 F028          	movff	prodl,___flmul@temp
 14139   0027EC  CFF4 F029          	movff	prodh,___flmul@temp+1
 14140   0027F0  5028               	movf	___flmul@temp^0,w,c
 14141   0027F2  6E1E               	movwf	___flmul@grs^0,c
 14142   0027F4  6A1F               	clrf	(___flmul@grs+1)^0,c
 14143   0027F6  6A20               	clrf	(___flmul@grs+2)^0,c
 14144   0027F8  6A21               	clrf	(___flmul@grs+3)^0,c
 14145   0027FA  5029               	movf	(___flmul@temp+1)^0,w,c
 14146   0027FC  6E24               	movwf	___flmul@prod^0,c
 14147   0027FE  6A25               	clrf	(___flmul@prod+1)^0,c
 14148   002800  6A26               	clrf	(___flmul@prod+2)^0,c
 14149   002802  6A27               	clrf	(___flmul@prod+3)^0,c
 14150   002804  5016               	movf	(___flmul@a+1)^0,w,c
 14151   002806  0212               	mulwf	(___flmul@b+1)^0,c
 14152   002808  CFF3 F028          	movff	prodl,___flmul@temp
 14153   00280C  CFF4 F029          	movff	prodh,___flmul@temp+1
 14154   002810  5028               	movf	___flmul@temp^0,w,c
 14155   002812  261E               	addwf	___flmul@grs^0,f,c
 14156   002814  0E00               	movlw	0
 14157   002816  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14158   002818  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14159   00281A  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14160   00281C  5029               	movf	(___flmul@temp+1)^0,w,c
 14161   00281E  2624               	addwf	___flmul@prod^0,f,c
 14162   002820  0E00               	movlw	0
 14163   002822  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14164   002824  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14165   002826  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14166   002828  5015               	movf	___flmul@a^0,w,c
 14167   00282A  0213               	mulwf	(___flmul@b+2)^0,c
 14168   00282C  CFF3 F028          	movff	prodl,___flmul@temp
 14169   002830  CFF4 F029          	movff	prodh,___flmul@temp+1
 14170   002834  5028               	movf	___flmul@temp^0,w,c
 14171   002836  261E               	addwf	___flmul@grs^0,f,c
 14172   002838  0E00               	movlw	0
 14173   00283A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14174   00283C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14175   00283E  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14176   002840  5029               	movf	(___flmul@temp+1)^0,w,c
 14177   002842  2624               	addwf	___flmul@prod^0,f,c
 14178   002844  0E00               	movlw	0
 14179   002846  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14180   002848  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14181   00284A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14182   00284C  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14183   002850  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14184   002854  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14185   002858  6A1E               	clrf	___flmul@grs^0,c
 14186   00285A  5015               	movf	___flmul@a^0,w,c
 14187   00285C  0212               	mulwf	(___flmul@b+1)^0,c
 14188   00285E  CFF3 F028          	movff	prodl,___flmul@temp
 14189   002862  CFF4 F029          	movff	prodh,___flmul@temp+1
 14190   002866  5028               	movf	___flmul@temp^0,w,c
 14191   002868  261E               	addwf	___flmul@grs^0,f,c
 14192   00286A  5029               	movf	(___flmul@temp+1)^0,w,c
 14193   00286C  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14194   00286E  0E00               	movlw	0
 14195   002870  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14196   002872  0E00               	movlw	0
 14197   002874  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14198   002876  5016               	movf	(___flmul@a+1)^0,w,c
 14199   002878  0211               	mulwf	___flmul@b^0,c
 14200   00287A  CFF3 F028          	movff	prodl,___flmul@temp
 14201   00287E  CFF4 F029          	movff	prodh,___flmul@temp+1
 14202   002882  5028               	movf	___flmul@temp^0,w,c
 14203   002884  261E               	addwf	___flmul@grs^0,f,c
 14204   002886  5029               	movf	(___flmul@temp+1)^0,w,c
 14205   002888  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14206   00288A  0E00               	movlw	0
 14207   00288C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14208   00288E  0E00               	movlw	0
 14209   002890  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14210   002892  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14211   002896  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14212   00289A  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14213   00289E  6A1E               	clrf	___flmul@grs^0,c
 14214   0028A0  5015               	movf	___flmul@a^0,w,c
 14215   0028A2  0211               	mulwf	___flmul@b^0,c
 14216   0028A4  CFF3 F028          	movff	prodl,___flmul@temp
 14217   0028A8  CFF4 F029          	movff	prodh,___flmul@temp+1
 14218   0028AC  5028               	movf	___flmul@temp^0,w,c
 14219   0028AE  261E               	addwf	___flmul@grs^0,f,c
 14220   0028B0  5029               	movf	(___flmul@temp+1)^0,w,c
 14221   0028B2  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14222   0028B4  0E00               	movlw	0
 14223   0028B6  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14224   0028B8  0E00               	movlw	0
 14225   0028BA  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14226   0028BC  5017               	movf	(___flmul@a+2)^0,w,c
 14227   0028BE  0212               	mulwf	(___flmul@b+1)^0,c
 14228   0028C0  CFF3 F028          	movff	prodl,___flmul@temp
 14229   0028C4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14230   0028C8  5028               	movf	___flmul@temp^0,w,c
 14231   0028CA  2624               	addwf	___flmul@prod^0,f,c
 14232   0028CC  5029               	movf	(___flmul@temp+1)^0,w,c
 14233   0028CE  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14234   0028D0  0E00               	movlw	0
 14235   0028D2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14236   0028D4  0E00               	movlw	0
 14237   0028D6  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14238   0028D8  5016               	movf	(___flmul@a+1)^0,w,c
 14239   0028DA  0213               	mulwf	(___flmul@b+2)^0,c
 14240   0028DC  CFF3 F028          	movff	prodl,___flmul@temp
 14241   0028E0  CFF4 F029          	movff	prodh,___flmul@temp+1
 14242   0028E4  5028               	movf	___flmul@temp^0,w,c
 14243   0028E6  2624               	addwf	___flmul@prod^0,f,c
 14244   0028E8  5029               	movf	(___flmul@temp+1)^0,w,c
 14245   0028EA  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14246   0028EC  0E00               	movlw	0
 14247   0028EE  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14248   0028F0  0E00               	movlw	0
 14249   0028F2  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14250   0028F4  5017               	movf	(___flmul@a+2)^0,w,c
 14251   0028F6  0213               	mulwf	(___flmul@b+2)^0,c
 14252   0028F8  CFF3 F028          	movff	prodl,___flmul@temp
 14253   0028FC  CFF4 F029          	movff	prodh,___flmul@temp+1
 14254   002900  5028               	movf	___flmul@temp^0,w,c
 14255   002902  6E19               	movwf	??___flmul^0,c
 14256   002904  5029               	movf	(___flmul@temp+1)^0,w,c
 14257   002906  6E1A               	movwf	(??___flmul+1)^0,c
 14258   002908  6A1B               	clrf	(??___flmul+2)^0,c
 14259   00290A  6A1C               	clrf	(??___flmul+3)^0,c
 14260   00290C  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14261   002910  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14262   002914  C019  F01A         	movff	??___flmul,??___flmul+1
 14263   002918  6A19               	clrf	??___flmul^0,c
 14264   00291A  5019               	movf	??___flmul^0,w,c
 14265   00291C  2624               	addwf	___flmul@prod^0,f,c
 14266   00291E  501A               	movf	(??___flmul+1)^0,w,c
 14267   002920  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14268   002922  501B               	movf	(??___flmul+2)^0,w,c
 14269   002924  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14270   002926  501C               	movf	(??___flmul+3)^0,w,c
 14271   002928  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14272   00292A  C01E  F019         	movff	___flmul@grs,??___flmul
 14273   00292E  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14274   002932  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14275   002936  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14276   00293A  0E19               	movlw	25
 14277   00293C  EFA5  F014         	goto	u3960
 14278   002940                     u3965:
 14279   002940  90D8               	bcf	status,0,c
 14280   002942  321C               	rrcf	(??___flmul+3)^0,f,c
 14281   002944  321B               	rrcf	(??___flmul+2)^0,f,c
 14282   002946  321A               	rrcf	(??___flmul+1)^0,f,c
 14283   002948  3219               	rrcf	??___flmul^0,f,c
 14284   00294A                     u3960:
 14285   00294A  2EE8               	decfsz	wreg,f,c
 14286   00294C  EFA0  F014         	goto	u3965
 14287   002950  5019               	movf	??___flmul^0,w,c
 14288   002952  2624               	addwf	___flmul@prod^0,f,c
 14289   002954  501A               	movf	(??___flmul+1)^0,w,c
 14290   002956  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14291   002958  501B               	movf	(??___flmul+2)^0,w,c
 14292   00295A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14293   00295C  501C               	movf	(??___flmul+3)^0,w,c
 14294   00295E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14295   002960  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14296   002964  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14297   002968  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14298   00296C  6A1E               	clrf	___flmul@grs^0,c
 14299   00296E  5022               	movf	___flmul@aexp^0,w,c
 14300   002970  C023  F019         	movff	___flmul@bexp,??___flmul
 14301   002974  6A1A               	clrf	(??___flmul+1)^0,c
 14302   002976  2619               	addwf	??___flmul^0,f,c
 14303   002978  0E00               	movlw	0
 14304   00297A  221A               	addwfc	(??___flmul+1)^0,f,c
 14305   00297C  0E82               	movlw	130
 14306   00297E  2419               	addwf	??___flmul^0,w,c
 14307   002980  6E28               	movwf	___flmul@temp^0,c
 14308   002982  0EFF               	movlw	255
 14309   002984  201A               	addwfc	(??___flmul+1)^0,w,c
 14310   002986  6E29               	movwf	(___flmul@temp+1)^0,c
 14311   002988  EFDB  F014         	goto	l4487
 14312   00298C                     l4481:
 14313   00298C  90D8               	bcf	status,0,c
 14314   00298E  3624               	rlcf	___flmul@prod^0,f,c
 14315   002990  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14316   002992  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14317   002994  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14318   002996  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14319   002998  EFD0  F014         	goto	u3971
 14320   00299C  EFD2  F014         	goto	u3970
 14321   0029A0                     u3971:
 14322   0029A0  EFD3  F014         	goto	l1369
 14323   0029A4                     u3970:
 14324   0029A4  8024               	bsf	___flmul@prod^0,0,c
 14325   0029A6                     l1369:
 14326   0029A6  90D8               	bcf	status,0,c
 14327   0029A8  361E               	rlcf	___flmul@grs^0,f,c
 14328   0029AA  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14329   0029AC  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14330   0029AE  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14331   0029B0  0628               	decf	___flmul@temp^0,f,c
 14332   0029B2  A0D8               	btfss	status,0,c
 14333   0029B4  0629               	decf	(___flmul@temp+1)^0,f,c
 14334   0029B6                     l4487:
 14335   0029B6  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14336   0029B8  EFE0  F014         	goto	u3981
 14337   0029BC  EFE2  F014         	goto	u3980
 14338   0029C0                     u3981:
 14339   0029C0  EFC6  F014         	goto	l4481
 14340   0029C4                     u3980:
 14341   0029C4  0E00               	movlw	0
 14342   0029C6  6E22               	movwf	___flmul@aexp^0,c
 14343   0029C8  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14344   0029CA  EFE9  F014         	goto	u3991
 14345   0029CE  EFEB  F014         	goto	u3990
 14346   0029D2                     u3991:
 14347   0029D2  EF0F  F015         	goto	l1371
 14348   0029D6                     u3990:
 14349   0029D6  0EFF               	movlw	255
 14350   0029D8  141E               	andwf	___flmul@grs^0,w,c
 14351   0029DA  6E19               	movwf	??___flmul^0,c
 14352   0029DC  0EFF               	movlw	255
 14353   0029DE  141F               	andwf	(___flmul@grs+1)^0,w,c
 14354   0029E0  6E1A               	movwf	(??___flmul+1)^0,c
 14355   0029E2  0EFF               	movlw	255
 14356   0029E4  1420               	andwf	(___flmul@grs+2)^0,w,c
 14357   0029E6  6E1B               	movwf	(??___flmul+2)^0,c
 14358   0029E8  0E7F               	movlw	127
 14359   0029EA  1421               	andwf	(___flmul@grs+3)^0,w,c
 14360   0029EC  6E1C               	movwf	(??___flmul+3)^0,c
 14361   0029EE  5019               	movf	??___flmul^0,w,c
 14362   0029F0  101A               	iorwf	(??___flmul+1)^0,w,c
 14363   0029F2  101B               	iorwf	(??___flmul+2)^0,w,c
 14364   0029F4  101C               	iorwf	(??___flmul+3)^0,w,c
 14365   0029F6  B4D8               	btfsc	status,2,c
 14366   0029F8  EF00  F015         	goto	u4001
 14367   0029FC  EF02  F015         	goto	u4000
 14368   002A00                     u4001:
 14369   002A00  EF06  F015         	goto	l1372
 14370   002A04                     u4000:
 14371   002A04                     l4495:
 14372   002A04  0E01               	movlw	1
 14373   002A06  6E22               	movwf	___flmul@aexp^0,c
 14374   002A08  EF0F  F015         	goto	l1371
 14375   002A0C                     l1372:
 14376   002A0C  A024               	btfss	___flmul@prod^0,0,c
 14377   002A0E  EF0B  F015         	goto	u4011
 14378   002A12  EF0D  F015         	goto	u4010
 14379   002A16                     u4011:
 14380   002A16  EF0F  F015         	goto	l1371
 14381   002A1A                     u4010:
 14382   002A1A  EF02  F015         	goto	l4495
 14383   002A1E                     l1371:
 14384   002A1E  5022               	movf	___flmul@aexp^0,w,c
 14385   002A20  B4D8               	btfsc	status,2,c
 14386   002A22  EF15  F015         	goto	u4021
 14387   002A26  EF17  F015         	goto	u4020
 14388   002A2A                     u4021:
 14389   002A2A  EF3B  F015         	goto	l4507
 14390   002A2E                     u4020:
 14391   002A2E  0E01               	movlw	1
 14392   002A30  2624               	addwf	___flmul@prod^0,f,c
 14393   002A32  0E00               	movlw	0
 14394   002A34  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14395   002A36  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14396   002A38  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14397   002A3A  A027               	btfss	(___flmul@prod+3)^0,0,c
 14398   002A3C  EF22  F015         	goto	u4031
 14399   002A40  EF24  F015         	goto	u4030
 14400   002A44                     u4031:
 14401   002A44  EF3B  F015         	goto	l4507
 14402   002A48                     u4030:
 14403   002A48  C024  F019         	movff	___flmul@prod,??___flmul
 14404   002A4C  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14405   002A50  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14406   002A54  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14407   002A58  341C               	rlcf	(??___flmul+3)^0,w,c
 14408   002A5A  321C               	rrcf	(??___flmul+3)^0,f,c
 14409   002A5C  321B               	rrcf	(??___flmul+2)^0,f,c
 14410   002A5E  321A               	rrcf	(??___flmul+1)^0,f,c
 14411   002A60  3219               	rrcf	??___flmul^0,f,c
 14412   002A62  C019  F024         	movff	??___flmul,___flmul@prod
 14413   002A66  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14414   002A6A  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14415   002A6E  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14416   002A72  4A28               	infsnz	___flmul@temp^0,f,c
 14417   002A74  2A29               	incf	(___flmul@temp+1)^0,f,c
 14418   002A76                     l4507:
 14419   002A76  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14420   002A78  EF46  F015         	goto	u4041
 14421   002A7C  5029               	movf	(___flmul@temp+1)^0,w,c
 14422   002A7E  E108               	bnz	u4040
 14423   002A80  2828               	incf	___flmul@temp^0,w,c
 14424   002A82  A0D8               	btfss	status,0,c
 14425   002A84  EF46  F015         	goto	u4041
 14426   002A88  EF48  F015         	goto	u4040
 14427   002A8C                     u4041:
 14428   002A8C  EF52  F015         	goto	l4511
 14429   002A90                     u4040:
 14430   002A90  0E00               	movlw	0
 14431   002A92  6E24               	movwf	___flmul@prod^0,c
 14432   002A94  0E00               	movlw	0
 14433   002A96  6E25               	movwf	(___flmul@prod+1)^0,c
 14434   002A98  0E80               	movlw	128
 14435   002A9A  6E26               	movwf	(___flmul@prod+2)^0,c
 14436   002A9C  0E7F               	movlw	127
 14437   002A9E  6E27               	movwf	(___flmul@prod+3)^0,c
 14438   002AA0  EF80  F015         	goto	l4523
 14439   002AA4                     l4511:
 14440   002AA4  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14441   002AA6  EF5F  F015         	goto	u4050
 14442   002AAA  5029               	movf	(___flmul@temp+1)^0,w,c
 14443   002AAC  E106               	bnz	u4051
 14444   002AAE  0428               	decf	___flmul@temp^0,w,c
 14445   002AB0  B0D8               	btfsc	status,0,c
 14446   002AB2  EF5D  F015         	goto	u4051
 14447   002AB6  EF5F  F015         	goto	u4050
 14448   002ABA                     u4051:
 14449   002ABA  EF6B  F015         	goto	l1379
 14450   002ABE                     u4050:
 14451   002ABE  0E00               	movlw	0
 14452   002AC0  6E24               	movwf	___flmul@prod^0,c
 14453   002AC2  0E00               	movlw	0
 14454   002AC4  6E25               	movwf	(___flmul@prod+1)^0,c
 14455   002AC6  0E00               	movlw	0
 14456   002AC8  6E26               	movwf	(___flmul@prod+2)^0,c
 14457   002ACA  0E00               	movlw	0
 14458   002ACC  6E27               	movwf	(___flmul@prod+3)^0,c
 14459   002ACE  0E00               	movlw	0
 14460   002AD0  6E1D               	movwf	___flmul@sign^0,c
 14461   002AD2  EF80  F015         	goto	l4523
 14462   002AD6                     l1379:
 14463   002AD6  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14464   002ADA  0EFF               	movlw	255
 14465   002ADC  1624               	andwf	___flmul@prod^0,f,c
 14466   002ADE  0EFF               	movlw	255
 14467   002AE0  1625               	andwf	(___flmul@prod+1)^0,f,c
 14468   002AE2  0E7F               	movlw	127
 14469   002AE4  1626               	andwf	(___flmul@prod+2)^0,f,c
 14470   002AE6  0E00               	movlw	0
 14471   002AE8  1627               	andwf	(___flmul@prod+3)^0,f,c
 14472   002AEA  A023               	btfss	___flmul@bexp^0,0,c
 14473   002AEC  EF7A  F015         	goto	u4061
 14474   002AF0  EF7C  F015         	goto	u4060
 14475   002AF4                     u4061:
 14476   002AF4  EF7D  F015         	goto	l4521
 14477   002AF8                     u4060:
 14478   002AF8  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14479   002AFA                     l4521:
 14480   002AFA  90D8               	bcf	status,0,c
 14481   002AFC  3023               	rrcf	___flmul@bexp^0,w,c
 14482   002AFE  6E27               	movwf	(___flmul@prod+3)^0,c
 14483   002B00                     l4523:
 14484   002B00  501D               	movf	___flmul@sign^0,w,c
 14485   002B02  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14486   002B04  C024  F011         	movff	___flmul@prod,?___flmul
 14487   002B08  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14488   002B0C  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14489   002B10  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14490   002B14                     l1366:
 14491   002B14  0012               	return		;funcret
 14492   002B16                     __end_of___flmul:
 14493                           	callstack 0
 14494                           
 14495 ;; *************** function ___flge *****************
 14496 ;; Defined at:
 14497 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14498 ;; Parameters:    Size  Location     Type
 14499 ;;  ff1             4   41[COMRAM] unsigned char 
 14500 ;;  ff2             4   45[COMRAM] unsigned char 
 14501 ;; Auto vars:     Size  Location     Type
 14502 ;;		None
 14503 ;; Return value:  Size  Location     Type
 14504 ;;		None               void
 14505 ;; Registers used:
 14506 ;;		wreg, status,2, status,0
 14507 ;; Tracked objects:
 14508 ;;		On entry : 0/0
 14509 ;;		On exit  : 0/0
 14510 ;;		Unchanged: 0/0
 14511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14512 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14514 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14515 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14516 ;;Total ram usage:       12 bytes
 14517 ;; Hardware stack levels used: 1
 14518 ;; Hardware stack levels required when called: 1
 14519 ;; This function calls:
 14520 ;;		Nothing
 14521 ;; This function is called by:
 14522 ;;		_Colour_decider
 14523 ;;		_efgtoa
 14524 ;; This function uses a non-reentrant model
 14525 ;;
 14526                           
 14527                           	psect	text79
 14528   0049F2                     __ptext79:
 14529                           	callstack 0
 14530   0049F2                     ___flge:
 14531                           	callstack 25
 14532   0049F2  0E00               	movlw	0
 14533   0049F4  142A               	andwf	___flge@ff1^0,w,c
 14534   0049F6  6E32               	movwf	??___flge^0,c
 14535   0049F8  0E00               	movlw	0
 14536   0049FA  142B               	andwf	(___flge@ff1+1)^0,w,c
 14537   0049FC  6E33               	movwf	(??___flge+1)^0,c
 14538   0049FE  0E80               	movlw	128
 14539   004A00  142C               	andwf	(___flge@ff1+2)^0,w,c
 14540   004A02  6E34               	movwf	(??___flge+2)^0,c
 14541   004A04  0E7F               	movlw	127
 14542   004A06  142D               	andwf	(___flge@ff1+3)^0,w,c
 14543   004A08  6E35               	movwf	(??___flge+3)^0,c
 14544   004A0A  5032               	movf	??___flge^0,w,c
 14545   004A0C  1033               	iorwf	(??___flge+1)^0,w,c
 14546   004A0E  1034               	iorwf	(??___flge+2)^0,w,c
 14547   004A10  1035               	iorwf	(??___flge+3)^0,w,c
 14548   004A12  A4D8               	btfss	status,2,c
 14549   004A14  EF0E  F025         	goto	u4101
 14550   004A18  EF10  F025         	goto	u4100
 14551   004A1C                     u4101:
 14552   004A1C  EF18  F025         	goto	l4555
 14553   004A20                     u4100:
 14554   004A20  0E00               	movlw	0
 14555   004A22  6E2A               	movwf	___flge@ff1^0,c
 14556   004A24  0E00               	movlw	0
 14557   004A26  6E2B               	movwf	(___flge@ff1+1)^0,c
 14558   004A28  0E00               	movlw	0
 14559   004A2A  6E2C               	movwf	(___flge@ff1+2)^0,c
 14560   004A2C  0E00               	movlw	0
 14561   004A2E  6E2D               	movwf	(___flge@ff1+3)^0,c
 14562   004A30                     l4555:
 14563   004A30  0E00               	movlw	0
 14564   004A32  142E               	andwf	___flge@ff2^0,w,c
 14565   004A34  6E32               	movwf	??___flge^0,c
 14566   004A36  0E00               	movlw	0
 14567   004A38  142F               	andwf	(___flge@ff2+1)^0,w,c
 14568   004A3A  6E33               	movwf	(??___flge+1)^0,c
 14569   004A3C  0E80               	movlw	128
 14570   004A3E  1430               	andwf	(___flge@ff2+2)^0,w,c
 14571   004A40  6E34               	movwf	(??___flge+2)^0,c
 14572   004A42  0E7F               	movlw	127
 14573   004A44  1431               	andwf	(___flge@ff2+3)^0,w,c
 14574   004A46  6E35               	movwf	(??___flge+3)^0,c
 14575   004A48  5032               	movf	??___flge^0,w,c
 14576   004A4A  1033               	iorwf	(??___flge+1)^0,w,c
 14577   004A4C  1034               	iorwf	(??___flge+2)^0,w,c
 14578   004A4E  1035               	iorwf	(??___flge+3)^0,w,c
 14579   004A50  A4D8               	btfss	status,2,c
 14580   004A52  EF2D  F025         	goto	u4111
 14581   004A56  EF2F  F025         	goto	u4110
 14582   004A5A                     u4111:
 14583   004A5A  EF37  F025         	goto	l4559
 14584   004A5E                     u4110:
 14585   004A5E  0E00               	movlw	0
 14586   004A60  6E2E               	movwf	___flge@ff2^0,c
 14587   004A62  0E00               	movlw	0
 14588   004A64  6E2F               	movwf	(___flge@ff2+1)^0,c
 14589   004A66  0E00               	movlw	0
 14590   004A68  6E30               	movwf	(___flge@ff2+2)^0,c
 14591   004A6A  0E00               	movlw	0
 14592   004A6C  6E31               	movwf	(___flge@ff2+3)^0,c
 14593   004A6E                     l4559:
 14594   004A6E  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14595   004A70  EF3C  F025         	goto	u4121
 14596   004A74  EF3E  F025         	goto	u4120
 14597   004A78                     u4121:
 14598   004A78  EF47  F025         	goto	l4563
 14599   004A7C                     u4120:
 14600   004A7C  6C2A               	negf	___flge@ff1^0,c
 14601   004A7E  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14602   004A80  B0D8               	btfsc	status,0,c
 14603   004A82  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14604   004A84  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14605   004A86  B0D8               	btfsc	status,0,c
 14606   004A88  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14607   004A8A  0E80               	movlw	128
 14608   004A8C  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14609   004A8E                     l4563:
 14610   004A8E  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14611   004A90  EF4C  F025         	goto	u4131
 14612   004A94  EF4E  F025         	goto	u4130
 14613   004A98                     u4131:
 14614   004A98  EF57  F025         	goto	l1013
 14615   004A9C                     u4130:
 14616   004A9C  6C2E               	negf	___flge@ff2^0,c
 14617   004A9E  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14618   004AA0  B0D8               	btfsc	status,0,c
 14619   004AA2  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14620   004AA4  1E30               	comf	(___flge@ff2+2)^0,f,c
 14621   004AA6  B0D8               	btfsc	status,0,c
 14622   004AA8  2A30               	incf	(___flge@ff2+2)^0,f,c
 14623   004AAA  0E80               	movlw	128
 14624   004AAC  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14625   004AAE                     l1013:
 14626   004AAE  0E00               	movlw	0
 14627   004AB0  1A2A               	xorwf	___flge@ff1^0,f,c
 14628   004AB2  0E00               	movlw	0
 14629   004AB4  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14630   004AB6  0E00               	movlw	0
 14631   004AB8  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14632   004ABA  0E80               	movlw	128
 14633   004ABC  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14634   004ABE  0E00               	movlw	0
 14635   004AC0  1A2E               	xorwf	___flge@ff2^0,f,c
 14636   004AC2  0E00               	movlw	0
 14637   004AC4  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14638   004AC6  0E00               	movlw	0
 14639   004AC8  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14640   004ACA  0E80               	movlw	128
 14641   004ACC  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14642   004ACE  502E               	movf	___flge@ff2^0,w,c
 14643   004AD0  5C2A               	subwf	___flge@ff1^0,w,c
 14644   004AD2  502F               	movf	(___flge@ff2+1)^0,w,c
 14645   004AD4  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14646   004AD6  5030               	movf	(___flge@ff2+2)^0,w,c
 14647   004AD8  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14648   004ADA  5031               	movf	(___flge@ff2+3)^0,w,c
 14649   004ADC  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14650   004ADE  B0D8               	btfsc	status,0,c
 14651   004AE0  EF74  F025         	goto	u4141
 14652   004AE4  EF76  F025         	goto	u4140
 14653   004AE8                     u4141:
 14654   004AE8  EF79  F025         	goto	l4569
 14655   004AEC                     u4140:
 14656   004AEC  90D8               	bcf	status,0,c
 14657   004AEE  EF7A  F025         	goto	l1018
 14658   004AF2                     l4569:
 14659   004AF2  80D8               	bsf	status,0,c
 14660   004AF4                     l1018:
 14661   004AF4  0012               	return		;funcret
 14662   004AF6                     __end_of___flge:
 14663                           	callstack 0
 14664                           
 14665 ;; *************** function ___fleq *****************
 14666 ;; Defined at:
 14667 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14668 ;; Parameters:    Size  Location     Type
 14669 ;;  ff1             4   49[COMRAM] unsigned char 
 14670 ;;  ff2             4   53[COMRAM] unsigned char 
 14671 ;; Auto vars:     Size  Location     Type
 14672 ;;		None
 14673 ;; Return value:  Size  Location     Type
 14674 ;;		None               void
 14675 ;; Registers used:
 14676 ;;		wreg, status,2, status,0
 14677 ;; Tracked objects:
 14678 ;;		On entry : 0/0
 14679 ;;		On exit  : 0/0
 14680 ;;		Unchanged: 0/0
 14681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14682 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14684 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14685 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14686 ;;Total ram usage:       12 bytes
 14687 ;; Hardware stack levels used: 1
 14688 ;; Hardware stack levels required when called: 1
 14689 ;; This function calls:
 14690 ;;		Nothing
 14691 ;; This function is called by:
 14692 ;;		_Colour_decider
 14693 ;;		_efgtoa
 14694 ;; This function uses a non-reentrant model
 14695 ;;
 14696                           
 14697                           	psect	text80
 14698   004ED4                     __ptext80:
 14699                           	callstack 0
 14700   004ED4                     ___fleq:
 14701                           	callstack 25
 14702   004ED4  0E00               	movlw	0
 14703   004ED6  1432               	andwf	___fleq@ff1^0,w,c
 14704   004ED8  6E3A               	movwf	??___fleq^0,c
 14705   004EDA  0E00               	movlw	0
 14706   004EDC  1433               	andwf	(___fleq@ff1+1)^0,w,c
 14707   004EDE  6E3B               	movwf	(??___fleq+1)^0,c
 14708   004EE0  0E80               	movlw	128
 14709   004EE2  1434               	andwf	(___fleq@ff1+2)^0,w,c
 14710   004EE4  6E3C               	movwf	(??___fleq+2)^0,c
 14711   004EE6  0E7F               	movlw	127
 14712   004EE8  1435               	andwf	(___fleq@ff1+3)^0,w,c
 14713   004EEA  6E3D               	movwf	(??___fleq+3)^0,c
 14714   004EEC  503A               	movf	??___fleq^0,w,c
 14715   004EEE  103B               	iorwf	(??___fleq+1)^0,w,c
 14716   004EF0  103C               	iorwf	(??___fleq+2)^0,w,c
 14717   004EF2  103D               	iorwf	(??___fleq+3)^0,w,c
 14718   004EF4  A4D8               	btfss	status,2,c
 14719   004EF6  EF7F  F027         	goto	u4071
 14720   004EFA  EF81  F027         	goto	u4070
 14721   004EFE                     u4071:
 14722   004EFE  EF89  F027         	goto	l4539
 14723   004F02                     u4070:
 14724   004F02  0E00               	movlw	0
 14725   004F04  6E32               	movwf	___fleq@ff1^0,c
 14726   004F06  0E00               	movlw	0
 14727   004F08  6E33               	movwf	(___fleq@ff1+1)^0,c
 14728   004F0A  0E00               	movlw	0
 14729   004F0C  6E34               	movwf	(___fleq@ff1+2)^0,c
 14730   004F0E  0E00               	movlw	0
 14731   004F10  6E35               	movwf	(___fleq@ff1+3)^0,c
 14732   004F12                     l4539:
 14733   004F12  0E00               	movlw	0
 14734   004F14  1436               	andwf	___fleq@ff2^0,w,c
 14735   004F16  6E3A               	movwf	??___fleq^0,c
 14736   004F18  0E00               	movlw	0
 14737   004F1A  1437               	andwf	(___fleq@ff2+1)^0,w,c
 14738   004F1C  6E3B               	movwf	(??___fleq+1)^0,c
 14739   004F1E  0E80               	movlw	128
 14740   004F20  1438               	andwf	(___fleq@ff2+2)^0,w,c
 14741   004F22  6E3C               	movwf	(??___fleq+2)^0,c
 14742   004F24  0E7F               	movlw	127
 14743   004F26  1439               	andwf	(___fleq@ff2+3)^0,w,c
 14744   004F28  6E3D               	movwf	(??___fleq+3)^0,c
 14745   004F2A  503A               	movf	??___fleq^0,w,c
 14746   004F2C  103B               	iorwf	(??___fleq+1)^0,w,c
 14747   004F2E  103C               	iorwf	(??___fleq+2)^0,w,c
 14748   004F30  103D               	iorwf	(??___fleq+3)^0,w,c
 14749   004F32  A4D8               	btfss	status,2,c
 14750   004F34  EF9E  F027         	goto	u4081
 14751   004F38  EFA0  F027         	goto	u4080
 14752   004F3C                     u4081:
 14753   004F3C  EFA8  F027         	goto	l4543
 14754   004F40                     u4080:
 14755   004F40  0E00               	movlw	0
 14756   004F42  6E36               	movwf	___fleq@ff2^0,c
 14757   004F44  0E00               	movlw	0
 14758   004F46  6E37               	movwf	(___fleq@ff2+1)^0,c
 14759   004F48  0E00               	movlw	0
 14760   004F4A  6E38               	movwf	(___fleq@ff2+2)^0,c
 14761   004F4C  0E00               	movlw	0
 14762   004F4E  6E39               	movwf	(___fleq@ff2+3)^0,c
 14763   004F50                     l4543:
 14764   004F50  5036               	movf	___fleq@ff2^0,w,c
 14765   004F52  1832               	xorwf	___fleq@ff1^0,w,c
 14766   004F54  E10F               	bnz	u4090
 14767   004F56  5037               	movf	(___fleq@ff2+1)^0,w,c
 14768   004F58  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 14769   004F5A  E10C               	bnz	u4090
 14770   004F5C  5038               	movf	(___fleq@ff2+2)^0,w,c
 14771   004F5E  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 14772   004F60  E109               	bnz	u4090
 14773   004F62  5039               	movf	(___fleq@ff2+3)^0,w,c
 14774   004F64  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 14775   004F66  B4D8               	btfsc	status,2,c
 14776   004F68  EFB8  F027         	goto	u4091
 14777   004F6C  EFBA  F027         	goto	u4090
 14778   004F70                     u4091:
 14779   004F70  EFBD  F027         	goto	l4547
 14780   004F74                     u4090:
 14781   004F74  90D8               	bcf	status,0,c
 14782   004F76  EFBE  F027         	goto	l1007
 14783   004F7A                     l4547:
 14784   004F7A  80D8               	bsf	status,0,c
 14785   004F7C                     l1007:
 14786   004F7C  0012               	return		;funcret
 14787   004F7E                     __end_of___fleq:
 14788                           	callstack 0
 14789                           
 14790 ;; *************** function ___fldiv *****************
 14791 ;; Defined at:
 14792 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14793 ;; Parameters:    Size  Location     Type
 14794 ;;  b               4   49[COMRAM] unsigned char 
 14795 ;;  a               4   53[COMRAM] unsigned char 
 14796 ;; Auto vars:     Size  Location     Type
 14797 ;;  grs             4   68[COMRAM] unsigned long 
 14798 ;;  rem             4   61[COMRAM] unsigned long 
 14799 ;;  new_exp         2   66[COMRAM] short 
 14800 ;;  aexp            1   73[COMRAM] unsigned char 
 14801 ;;  bexp            1   72[COMRAM] unsigned char 
 14802 ;;  sign            1   65[COMRAM] unsigned char 
 14803 ;; Return value:  Size  Location     Type
 14804 ;;                  4   49[COMRAM] unsigned char 
 14805 ;; Registers used:
 14806 ;;		wreg, status,2, status,0
 14807 ;; Tracked objects:
 14808 ;;		On entry : 0/0
 14809 ;;		On exit  : 0/0
 14810 ;;		Unchanged: 0/0
 14811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14812 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14813 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14814 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14815 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14816 ;;Total ram usage:       25 bytes
 14817 ;; Hardware stack levels used: 1
 14818 ;; Hardware stack levels required when called: 1
 14819 ;; This function calls:
 14820 ;;		Nothing
 14821 ;; This function is called by:
 14822 ;;		_colour_rel
 14823 ;;		_Colour_decider
 14824 ;;		_efgtoa
 14825 ;; This function uses a non-reentrant model
 14826 ;;
 14827                           
 14828                           	psect	text81
 14829   002B16                     __ptext81:
 14830                           	callstack 0
 14831   002B16                     ___fldiv:
 14832                           	callstack 25
 14833   002B16  5035               	movf	(___fldiv@b+3)^0,w,c
 14834   002B18  0B80               	andlw	128
 14835   002B1A  6E42               	movwf	___fldiv@sign^0,c
 14836   002B1C  5035               	movf	(___fldiv@b+3)^0,w,c
 14837   002B1E  2435               	addwf	(___fldiv@b+3)^0,w,c
 14838   002B20  6E49               	movwf	___fldiv@bexp^0,c
 14839   002B22  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14840   002B24  EF96  F015         	goto	u3651
 14841   002B28  EF98  F015         	goto	u3650
 14842   002B2C                     u3651:
 14843   002B2C  EF99  F015         	goto	l4267
 14844   002B30                     u3650:
 14845   002B30  8049               	bsf	___fldiv@bexp^0,0,c
 14846   002B32                     l4267:
 14847   002B32  5049               	movf	___fldiv@bexp^0,w,c
 14848   002B34  B4D8               	btfsc	status,2,c
 14849   002B36  EF9F  F015         	goto	u3661
 14850   002B3A  EFA1  F015         	goto	u3660
 14851   002B3E                     u3661:
 14852   002B3E  EFB6  F015         	goto	l4277
 14853   002B42                     u3660:
 14854   002B42  2849               	incf	___fldiv@bexp^0,w,c
 14855   002B44  A4D8               	btfss	status,2,c
 14856   002B46  EFA7  F015         	goto	u3671
 14857   002B4A  EFA9  F015         	goto	u3670
 14858   002B4E                     u3671:
 14859   002B4E  EFB1  F015         	goto	l4273
 14860   002B52                     u3670:
 14861   002B52  0E00               	movlw	0
 14862   002B54  6E32               	movwf	___fldiv@b^0,c
 14863   002B56  0E00               	movlw	0
 14864   002B58  6E33               	movwf	(___fldiv@b+1)^0,c
 14865   002B5A  0E00               	movlw	0
 14866   002B5C  6E34               	movwf	(___fldiv@b+2)^0,c
 14867   002B5E  0E00               	movlw	0
 14868   002B60  6E35               	movwf	(___fldiv@b+3)^0,c
 14869   002B62                     l4273:
 14870   002B62  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14871   002B64  0E00               	movlw	0
 14872   002B66  6E35               	movwf	(___fldiv@b+3)^0,c
 14873   002B68  EFBE  F015         	goto	l4279
 14874   002B6C                     l4277:
 14875   002B6C  0E00               	movlw	0
 14876   002B6E  6E32               	movwf	___fldiv@b^0,c
 14877   002B70  0E00               	movlw	0
 14878   002B72  6E33               	movwf	(___fldiv@b+1)^0,c
 14879   002B74  0E00               	movlw	0
 14880   002B76  6E34               	movwf	(___fldiv@b+2)^0,c
 14881   002B78  0E00               	movlw	0
 14882   002B7A  6E35               	movwf	(___fldiv@b+3)^0,c
 14883   002B7C                     l4279:
 14884   002B7C  5039               	movf	(___fldiv@a+3)^0,w,c
 14885   002B7E  0B80               	andlw	128
 14886   002B80  1A42               	xorwf	___fldiv@sign^0,f,c
 14887   002B82  5039               	movf	(___fldiv@a+3)^0,w,c
 14888   002B84  2439               	addwf	(___fldiv@a+3)^0,w,c
 14889   002B86  6E4A               	movwf	___fldiv@aexp^0,c
 14890   002B88  AE38               	btfss	(___fldiv@a+2)^0,7,c
 14891   002B8A  EFC9  F015         	goto	u3681
 14892   002B8E  EFCB  F015         	goto	u3680
 14893   002B92                     u3681:
 14894   002B92  EFCC  F015         	goto	l4287
 14895   002B96                     u3680:
 14896   002B96  804A               	bsf	___fldiv@aexp^0,0,c
 14897   002B98                     l4287:
 14898   002B98  504A               	movf	___fldiv@aexp^0,w,c
 14899   002B9A  B4D8               	btfsc	status,2,c
 14900   002B9C  EFD2  F015         	goto	u3691
 14901   002BA0  EFD4  F015         	goto	u3690
 14902   002BA4                     u3691:
 14903   002BA4  EFE9  F015         	goto	l4297
 14904   002BA8                     u3690:
 14905   002BA8  284A               	incf	___fldiv@aexp^0,w,c
 14906   002BAA  A4D8               	btfss	status,2,c
 14907   002BAC  EFDA  F015         	goto	u3701
 14908   002BB0  EFDC  F015         	goto	u3700
 14909   002BB4                     u3701:
 14910   002BB4  EFE4  F015         	goto	l4293
 14911   002BB8                     u3700:
 14912   002BB8  0E00               	movlw	0
 14913   002BBA  6E36               	movwf	___fldiv@a^0,c
 14914   002BBC  0E00               	movlw	0
 14915   002BBE  6E37               	movwf	(___fldiv@a+1)^0,c
 14916   002BC0  0E00               	movlw	0
 14917   002BC2  6E38               	movwf	(___fldiv@a+2)^0,c
 14918   002BC4  0E00               	movlw	0
 14919   002BC6  6E39               	movwf	(___fldiv@a+3)^0,c
 14920   002BC8                     l4293:
 14921   002BC8  8E38               	bsf	(___fldiv@a+2)^0,7,c
 14922   002BCA  0E00               	movlw	0
 14923   002BCC  6E39               	movwf	(___fldiv@a+3)^0,c
 14924   002BCE  EFF1  F015         	goto	l4299
 14925   002BD2                     l4297:
 14926   002BD2  0E00               	movlw	0
 14927   002BD4  6E36               	movwf	___fldiv@a^0,c
 14928   002BD6  0E00               	movlw	0
 14929   002BD8  6E37               	movwf	(___fldiv@a+1)^0,c
 14930   002BDA  0E00               	movlw	0
 14931   002BDC  6E38               	movwf	(___fldiv@a+2)^0,c
 14932   002BDE  0E00               	movlw	0
 14933   002BE0  6E39               	movwf	(___fldiv@a+3)^0,c
 14934   002BE2                     l4299:
 14935   002BE2  5036               	movf	___fldiv@a^0,w,c
 14936   002BE4  1037               	iorwf	(___fldiv@a+1)^0,w,c
 14937   002BE6  1038               	iorwf	(___fldiv@a+2)^0,w,c
 14938   002BE8  1039               	iorwf	(___fldiv@a+3)^0,w,c
 14939   002BEA  A4D8               	btfss	status,2,c
 14940   002BEC  EFFA  F015         	goto	u3711
 14941   002BF0  EFFC  F015         	goto	u3710
 14942   002BF4                     u3711:
 14943   002BF4  EF14  F016         	goto	l4311
 14944   002BF8                     u3710:
 14945   002BF8  0E00               	movlw	0
 14946   002BFA  6E32               	movwf	___fldiv@b^0,c
 14947   002BFC  0E00               	movlw	0
 14948   002BFE  6E33               	movwf	(___fldiv@b+1)^0,c
 14949   002C00  0E00               	movlw	0
 14950   002C02  6E34               	movwf	(___fldiv@b+2)^0,c
 14951   002C04  0E00               	movlw	0
 14952   002C06  6E35               	movwf	(___fldiv@b+3)^0,c
 14953   002C08  0E80               	movlw	128
 14954   002C0A  1234               	iorwf	(___fldiv@b+2)^0,f,c
 14955   002C0C  0E7F               	movlw	127
 14956   002C0E  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14957   002C10                     l4305:
 14958   002C10  5042               	movf	___fldiv@sign^0,w,c
 14959   002C12  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14960   002C14  C032  F032         	movff	___fldiv@b,?___fldiv
 14961   002C18  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 14962   002C1C  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 14963   002C20  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 14964   002C24  EF57  F017         	goto	l1330
 14965   002C28                     l4311:
 14966   002C28  5049               	movf	___fldiv@bexp^0,w,c
 14967   002C2A  A4D8               	btfss	status,2,c
 14968   002C2C  EF1A  F016         	goto	u3721
 14969   002C30  EF1C  F016         	goto	u3720
 14970   002C34                     u3721:
 14971   002C34  EF26  F016         	goto	l4319
 14972   002C38                     u3720:
 14973   002C38  0E00               	movlw	0
 14974   002C3A  6E32               	movwf	?___fldiv^0,c
 14975   002C3C  0E00               	movlw	0
 14976   002C3E  6E33               	movwf	(?___fldiv+1)^0,c
 14977   002C40  0E00               	movlw	0
 14978   002C42  6E34               	movwf	(?___fldiv+2)^0,c
 14979   002C44  0E00               	movlw	0
 14980   002C46  6E35               	movwf	(?___fldiv+3)^0,c
 14981   002C48  EF57  F017         	goto	l1330
 14982   002C4C                     l4319:
 14983   002C4C  504A               	movf	___fldiv@aexp^0,w,c
 14984   002C4E  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 14985   002C52  6A3B               	clrf	(??___fldiv+1)^0,c
 14986   002C54  5E3A               	subwf	??___fldiv^0,f,c
 14987   002C56  0E00               	movlw	0
 14988   002C58  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 14989   002C5A  0E7F               	movlw	127
 14990   002C5C  243A               	addwf	??___fldiv^0,w,c
 14991   002C5E  6E43               	movwf	___fldiv@new_exp^0,c
 14992   002C60  0E00               	movlw	0
 14993   002C62  203B               	addwfc	(??___fldiv+1)^0,w,c
 14994   002C64  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14995   002C66  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 14996   002C6A  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 14997   002C6E  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 14998   002C72  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 14999   002C76  0E00               	movlw	0
 15000   002C78  6E32               	movwf	___fldiv@b^0,c
 15001   002C7A  0E00               	movlw	0
 15002   002C7C  6E33               	movwf	(___fldiv@b+1)^0,c
 15003   002C7E  0E00               	movlw	0
 15004   002C80  6E34               	movwf	(___fldiv@b+2)^0,c
 15005   002C82  0E00               	movlw	0
 15006   002C84  6E35               	movwf	(___fldiv@b+3)^0,c
 15007   002C86  0E00               	movlw	0
 15008   002C88  6E45               	movwf	___fldiv@grs^0,c
 15009   002C8A  0E00               	movlw	0
 15010   002C8C  6E46               	movwf	(___fldiv@grs+1)^0,c
 15011   002C8E  0E00               	movlw	0
 15012   002C90  6E47               	movwf	(___fldiv@grs+2)^0,c
 15013   002C92  0E00               	movlw	0
 15014   002C94  6E48               	movwf	(___fldiv@grs+3)^0,c
 15015   002C96  0E00               	movlw	0
 15016   002C98  6E4A               	movwf	___fldiv@aexp^0,c
 15017   002C9A  EF87  F016         	goto	l1332
 15018   002C9E                     l4329:
 15019   002C9E  504A               	movf	___fldiv@aexp^0,w,c
 15020   002CA0  B4D8               	btfsc	status,2,c
 15021   002CA2  EF55  F016         	goto	u3731
 15022   002CA6  EF57  F016         	goto	u3730
 15023   002CAA                     u3731:
 15024   002CAA  EF6E  F016         	goto	l4337
 15025   002CAE                     u3730:
 15026   002CAE  90D8               	bcf	status,0,c
 15027   002CB0  363E               	rlcf	___fldiv@rem^0,f,c
 15028   002CB2  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 15029   002CB4  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 15030   002CB6  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 15031   002CB8  90D8               	bcf	status,0,c
 15032   002CBA  3632               	rlcf	___fldiv@b^0,f,c
 15033   002CBC  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15034   002CBE  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15035   002CC0  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15036   002CC2  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15037   002CC4  EF66  F016         	goto	u3741
 15038   002CC8  EF68  F016         	goto	u3740
 15039   002CCC                     u3741:
 15040   002CCC  EF69  F016         	goto	l1335
 15041   002CD0                     u3740:
 15042   002CD0  8032               	bsf	___fldiv@b^0,0,c
 15043   002CD2                     l1335:
 15044   002CD2  90D8               	bcf	status,0,c
 15045   002CD4  3645               	rlcf	___fldiv@grs^0,f,c
 15046   002CD6  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15047   002CD8  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15048   002CDA  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15049   002CDC                     l4337:
 15050   002CDC  5036               	movf	___fldiv@a^0,w,c
 15051   002CDE  5C3E               	subwf	___fldiv@rem^0,w,c
 15052   002CE0  5037               	movf	(___fldiv@a+1)^0,w,c
 15053   002CE2  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 15054   002CE4  5038               	movf	(___fldiv@a+2)^0,w,c
 15055   002CE6  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 15056   002CE8  5039               	movf	(___fldiv@a+3)^0,w,c
 15057   002CEA  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 15058   002CEC  A0D8               	btfss	status,0,c
 15059   002CEE  EF7B  F016         	goto	u3751
 15060   002CF2  EF7D  F016         	goto	u3750
 15061   002CF6                     u3751:
 15062   002CF6  EF86  F016         	goto	l4343
 15063   002CFA                     u3750:
 15064   002CFA  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 15065   002CFC  5036               	movf	___fldiv@a^0,w,c
 15066   002CFE  5E3E               	subwf	___fldiv@rem^0,f,c
 15067   002D00  5037               	movf	(___fldiv@a+1)^0,w,c
 15068   002D02  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 15069   002D04  5038               	movf	(___fldiv@a+2)^0,w,c
 15070   002D06  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15071   002D08  5039               	movf	(___fldiv@a+3)^0,w,c
 15072   002D0A  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15073   002D0C                     l4343:
 15074   002D0C  2A4A               	incf	___fldiv@aexp^0,f,c
 15075   002D0E                     l1332:
 15076   002D0E  0E19               	movlw	25
 15077   002D10  644A               	cpfsgt	___fldiv@aexp^0,c
 15078   002D12  EF8D  F016         	goto	u3761
 15079   002D16  EF8F  F016         	goto	u3760
 15080   002D1A                     u3761:
 15081   002D1A  EF4F  F016         	goto	l4329
 15082   002D1E                     u3760:
 15083   002D1E  503E               	movf	___fldiv@rem^0,w,c
 15084   002D20  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15085   002D22  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15086   002D24  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15087   002D26  B4D8               	btfsc	status,2,c
 15088   002D28  EF98  F016         	goto	u3771
 15089   002D2C  EF9A  F016         	goto	u3770
 15090   002D30                     u3771:
 15091   002D30  EFB2  F016         	goto	l4355
 15092   002D34                     u3770:
 15093   002D34  8045               	bsf	___fldiv@grs^0,0,c
 15094   002D36  EFB2  F016         	goto	l4355
 15095   002D3A                     l4349:
 15096   002D3A  90D8               	bcf	status,0,c
 15097   002D3C  3632               	rlcf	___fldiv@b^0,f,c
 15098   002D3E  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15099   002D40  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15100   002D42  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15101   002D44  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15102   002D46  EFA7  F016         	goto	u3781
 15103   002D4A  EFA9  F016         	goto	u3780
 15104   002D4E                     u3781:
 15105   002D4E  EFAA  F016         	goto	l1341
 15106   002D52                     u3780:
 15107   002D52  8032               	bsf	___fldiv@b^0,0,c
 15108   002D54                     l1341:
 15109   002D54  90D8               	bcf	status,0,c
 15110   002D56  3645               	rlcf	___fldiv@grs^0,f,c
 15111   002D58  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15112   002D5A  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15113   002D5C  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15114   002D5E  0643               	decf	___fldiv@new_exp^0,f,c
 15115   002D60  A0D8               	btfss	status,0,c
 15116   002D62  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15117   002D64                     l4355:
 15118   002D64  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15119   002D66  EFB7  F016         	goto	u3791
 15120   002D6A  EFB9  F016         	goto	u3790
 15121   002D6E                     u3791:
 15122   002D6E  EF9D  F016         	goto	l4349
 15123   002D72                     u3790:
 15124   002D72  0E00               	movlw	0
 15125   002D74  6E4A               	movwf	___fldiv@aexp^0,c
 15126   002D76  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15127   002D78  EFC0  F016         	goto	u3801
 15128   002D7C  EFC2  F016         	goto	u3800
 15129   002D80                     u3801:
 15130   002D80  EFE6  F016         	goto	l1343
 15131   002D84                     u3800:
 15132   002D84  0EFF               	movlw	255
 15133   002D86  1445               	andwf	___fldiv@grs^0,w,c
 15134   002D88  6E3A               	movwf	??___fldiv^0,c
 15135   002D8A  0EFF               	movlw	255
 15136   002D8C  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15137   002D8E  6E3B               	movwf	(??___fldiv+1)^0,c
 15138   002D90  0EFF               	movlw	255
 15139   002D92  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15140   002D94  6E3C               	movwf	(??___fldiv+2)^0,c
 15141   002D96  0E7F               	movlw	127
 15142   002D98  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15143   002D9A  6E3D               	movwf	(??___fldiv+3)^0,c
 15144   002D9C  503A               	movf	??___fldiv^0,w,c
 15145   002D9E  103B               	iorwf	(??___fldiv+1)^0,w,c
 15146   002DA0  103C               	iorwf	(??___fldiv+2)^0,w,c
 15147   002DA2  103D               	iorwf	(??___fldiv+3)^0,w,c
 15148   002DA4  B4D8               	btfsc	status,2,c
 15149   002DA6  EFD7  F016         	goto	u3811
 15150   002DAA  EFD9  F016         	goto	u3810
 15151   002DAE                     u3811:
 15152   002DAE  EFDD  F016         	goto	l1344
 15153   002DB2                     u3810:
 15154   002DB2                     l4363:
 15155   002DB2  0E01               	movlw	1
 15156   002DB4  6E4A               	movwf	___fldiv@aexp^0,c
 15157   002DB6  EFE6  F016         	goto	l1343
 15158   002DBA                     l1344:
 15159   002DBA  A032               	btfss	___fldiv@b^0,0,c
 15160   002DBC  EFE2  F016         	goto	u3821
 15161   002DC0  EFE4  F016         	goto	u3820
 15162   002DC4                     u3821:
 15163   002DC4  EFE6  F016         	goto	l1343
 15164   002DC8                     u3820:
 15165   002DC8  EFD9  F016         	goto	l4363
 15166   002DCC                     l1343:
 15167   002DCC  504A               	movf	___fldiv@aexp^0,w,c
 15168   002DCE  B4D8               	btfsc	status,2,c
 15169   002DD0  EFEC  F016         	goto	u3831
 15170   002DD4  EFEE  F016         	goto	u3830
 15171   002DD8                     u3831:
 15172   002DD8  EF12  F017         	goto	l4375
 15173   002DDC                     u3830:
 15174   002DDC  0E01               	movlw	1
 15175   002DDE  2632               	addwf	___fldiv@b^0,f,c
 15176   002DE0  0E00               	movlw	0
 15177   002DE2  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15178   002DE4  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15179   002DE6  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15180   002DE8  A035               	btfss	(___fldiv@b+3)^0,0,c
 15181   002DEA  EFF9  F016         	goto	u3841
 15182   002DEE  EFFB  F016         	goto	u3840
 15183   002DF2                     u3841:
 15184   002DF2  EF12  F017         	goto	l4375
 15185   002DF6                     u3840:
 15186   002DF6  C032  F03A         	movff	___fldiv@b,??___fldiv
 15187   002DFA  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15188   002DFE  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15189   002E02  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15190   002E06  343D               	rlcf	(??___fldiv+3)^0,w,c
 15191   002E08  323D               	rrcf	(??___fldiv+3)^0,f,c
 15192   002E0A  323C               	rrcf	(??___fldiv+2)^0,f,c
 15193   002E0C  323B               	rrcf	(??___fldiv+1)^0,f,c
 15194   002E0E  323A               	rrcf	??___fldiv^0,f,c
 15195   002E10  C03A  F032         	movff	??___fldiv,___fldiv@b
 15196   002E14  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15197   002E18  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15198   002E1C  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15199   002E20  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15200   002E22  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15201   002E24                     l4375:
 15202   002E24  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15203   002E26  EF1D  F017         	goto	u3851
 15204   002E2A  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15205   002E2C  E108               	bnz	u3850
 15206   002E2E  2843               	incf	___fldiv@new_exp^0,w,c
 15207   002E30  A0D8               	btfss	status,0,c
 15208   002E32  EF1D  F017         	goto	u3851
 15209   002E36  EF1F  F017         	goto	u3850
 15210   002E3A                     u3851:
 15211   002E3A  EF2A  F017         	goto	l4379
 15212   002E3E                     u3850:
 15213   002E3E  0E00               	movlw	0
 15214   002E40  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15215   002E42  6843               	setf	___fldiv@new_exp^0,c
 15216   002E44  0E00               	movlw	0
 15217   002E46  6E32               	movwf	___fldiv@b^0,c
 15218   002E48  0E00               	movlw	0
 15219   002E4A  6E33               	movwf	(___fldiv@b+1)^0,c
 15220   002E4C  0E00               	movlw	0
 15221   002E4E  6E34               	movwf	(___fldiv@b+2)^0,c
 15222   002E50  0E00               	movlw	0
 15223   002E52  6E35               	movwf	(___fldiv@b+3)^0,c
 15224   002E54                     l4379:
 15225   002E54  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15226   002E56  EF37  F017         	goto	u3860
 15227   002E5A  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15228   002E5C  E106               	bnz	u3861
 15229   002E5E  0443               	decf	___fldiv@new_exp^0,w,c
 15230   002E60  B0D8               	btfsc	status,0,c
 15231   002E62  EF35  F017         	goto	u3861
 15232   002E66  EF37  F017         	goto	u3860
 15233   002E6A                     u3861:
 15234   002E6A  EF45  F017         	goto	l4383
 15235   002E6E                     u3860:
 15236   002E6E  0E00               	movlw	0
 15237   002E70  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15238   002E72  0E00               	movlw	0
 15239   002E74  6E43               	movwf	___fldiv@new_exp^0,c
 15240   002E76  0E00               	movlw	0
 15241   002E78  6E32               	movwf	___fldiv@b^0,c
 15242   002E7A  0E00               	movlw	0
 15243   002E7C  6E33               	movwf	(___fldiv@b+1)^0,c
 15244   002E7E  0E00               	movlw	0
 15245   002E80  6E34               	movwf	(___fldiv@b+2)^0,c
 15246   002E82  0E00               	movlw	0
 15247   002E84  6E35               	movwf	(___fldiv@b+3)^0,c
 15248   002E86  0E00               	movlw	0
 15249   002E88  6E42               	movwf	___fldiv@sign^0,c
 15250   002E8A                     l4383:
 15251   002E8A  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15252   002E8E  A049               	btfss	___fldiv@bexp^0,0,c
 15253   002E90  EF4C  F017         	goto	u3871
 15254   002E94  EF4E  F017         	goto	u3870
 15255   002E98                     u3871:
 15256   002E98  EF51  F017         	goto	l4389
 15257   002E9C                     u3870:
 15258   002E9C  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15259   002E9E  EF52  F017         	goto	l4391
 15260   002EA2                     l4389:
 15261   002EA2  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15262   002EA4                     l4391:
 15263   002EA4  90D8               	bcf	status,0,c
 15264   002EA6  3049               	rrcf	___fldiv@bexp^0,w,c
 15265   002EA8  6E35               	movwf	(___fldiv@b+3)^0,c
 15266   002EAA  EF08  F016         	goto	l4305
 15267   002EAE                     l1330:
 15268   002EAE  0012               	return		;funcret
 15269   002EB0                     __end_of___fldiv:
 15270                           	callstack 0
 15271                           
 15272 ;; *************** function _Buttons_init *****************
 15273 ;; Defined at:
 15274 ;;		line 43 in file "LED_buttons.c"
 15275 ;; Parameters:    Size  Location     Type
 15276 ;;		None
 15277 ;; Auto vars:     Size  Location     Type
 15278 ;;		None
 15279 ;; Return value:  Size  Location     Type
 15280 ;;                  1    wreg      void 
 15281 ;; Registers used:
 15282 ;;		None
 15283 ;; Tracked objects:
 15284 ;;		On entry : 0/0
 15285 ;;		On exit  : 0/0
 15286 ;;		Unchanged: 0/0
 15287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15292 ;;Total ram usage:        0 bytes
 15293 ;; Hardware stack levels used: 1
 15294 ;; Hardware stack levels required when called: 1
 15295 ;; This function calls:
 15296 ;;		Nothing
 15297 ;; This function is called by:
 15298 ;;		_main
 15299 ;; This function uses a non-reentrant model
 15300 ;;
 15301                           
 15302                           	psect	text82
 15303   00605C                     __ptext82:
 15304                           	callstack 0
 15305   00605C                     _Buttons_init:
 15306                           	callstack 29
 15307   00605C                     
 15308                           ;LED_buttons.c: 45:     TRISFbits.TRISF2 = 1;
 15309   00605C  8486               	bsf	134,2,c	;volatile
 15310                           
 15311                           ;LED_buttons.c: 46:     ANSELFbits.ANSELF2=0;
 15312   00605E  010E               	movlb	14	; () banked
 15313   006060  95B4               	bcf	180,2,b	;volatile
 15314                           
 15315                           ;LED_buttons.c: 47:     TRISFbits.TRISF3 = 1;
 15316   006062  8686               	bsf	134,3,c	;volatile
 15317                           
 15318                           ;LED_buttons.c: 48:     ANSELFbits.ANSELF3=0;
 15319   006064  97B4               	bcf	180,3,b	;volatile
 15320   006066                     
 15321                           ; BSR set to: 14
 15322   006066  0012               	return		;funcret
 15323   006068                     __end_of_Buttons_init:
 15324                           	callstack 0
 15325                           
 15326 ;; *************** function _HighISR *****************
 15327 ;; Defined at:
 15328 ;;		line 23 in file "interrupts.c"
 15329 ;; Parameters:    Size  Location     Type
 15330 ;;		None
 15331 ;; Auto vars:     Size  Location     Type
 15332 ;;		None
 15333 ;; Return value:  Size  Location     Type
 15334 ;;                  1    wreg      void 
 15335 ;; Registers used:
 15336 ;;		wreg, status,2
 15337 ;; Tracked objects:
 15338 ;;		On entry : 0/0
 15339 ;;		On exit  : 0/0
 15340 ;;		Unchanged: 0/0
 15341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15346 ;;Total ram usage:        0 bytes
 15347 ;; Hardware stack levels used: 1
 15348 ;; This function calls:
 15349 ;;		Nothing
 15350 ;; This function is called by:
 15351 ;;		Interrupt level 2
 15352 ;; This function uses a non-reentrant model
 15353 ;;
 15354                           
 15355                           	psect	intcode
 15356   000008                     __pintcode:
 15357                           	callstack 0
 15358   000008                     _HighISR:
 15359                           	callstack 22
 15360                           
 15361                           ; BSR set to: 14
 15362                           ;incstack = 0
 15363   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15364   00000A                     
 15365                           ;interrupts.c: 25:     if (PIR0bits.TMR0IF){
 15366   00000A  010E               	movlb	14	; () banked
 15367   00000C  AB33               	btfss	51,5,b	;volatile
 15368   00000E  EF0B  F000         	goto	i2u568_41
 15369   000012  EF0D  F000         	goto	i2u568_40
 15370   000016                     i2u568_41:
 15371   000016  EF18  F000         	goto	i2l227
 15372   00001A                     i2u568_40:
 15373   00001A                     
 15374                           ; BSR set to: 14
 15375                           ;interrupts.c: 26:         TMR0H=0;
 15376   00001A  0E00               	movlw	0
 15377   00001C  6ED4               	movwf	212,c	;volatile
 15378                           
 15379                           ;interrupts.c: 27:         TMR0L=0;
 15380   00001E  0E00               	movlw	0
 15381   000020  6ED3               	movwf	211,c	;volatile
 15382                           
 15383                           ;interrupts.c: 28:         lost_flag=1;
 15384   000022  0E00               	movlw	0
 15385   000024  0101               	movlb	1	; () banked
 15386   000026  6F15               	movwf	(_lost_flag+1)& (0+255),b
 15387   000028  0E01               	movlw	1
 15388   00002A  6F14               	movwf	_lost_flag& (0+255),b
 15389   00002C                     
 15390                           ; BSR set to: 1
 15391                           ;interrupts.c: 29:         PIR0bits.TMR0IF=0;
 15392   00002C  010E               	movlb	14	; () banked
 15393   00002E  9B33               	bcf	51,5,b	;volatile
 15394   000030                     i2l227:
 15395                           
 15396                           ; BSR set to: 14
 15397   000030  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15398   000032  0011               	retfie		f
 15399   000034                     __end_of_HighISR:
 15400                           	callstack 0
 15401                           
 15402                           	psect	rparam
 15403   000000                     
 15404                           	psect	temp
 15405   00005F                     btemp:
 15406                           	callstack 0
 15407   00005F                     	ds	1
 15408   000000                     int$flags	set	btemp
 15409   000000                     wtemp8	set	btemp+1
 15410   000000                     ttemp5	set	btemp+1
 15411   000000                     ttemp6	set	btemp+4
 15412   000000                     ttemp7	set	btemp+8
 15413                           
 15414                           	psect	idloc
 15415                           
 15416                           ;Config register IDLOC0 @ 0x200000
 15417                           ;	unspecified, using default values
 15418   200000                     	org	2097152
 15419   200000  0FFF               	dw	4095
 15420                           
 15421                           ;Config register IDLOC1 @ 0x200002
 15422                           ;	unspecified, using default values
 15423   200002                     	org	2097154
 15424   200002  0FFF               	dw	4095
 15425                           
 15426                           ;Config register IDLOC2 @ 0x200004
 15427                           ;	unspecified, using default values
 15428   200004                     	org	2097156
 15429   200004  0FFF               	dw	4095
 15430                           
 15431                           ;Config register IDLOC3 @ 0x200006
 15432                           ;	unspecified, using default values
 15433   200006                     	org	2097158
 15434   200006  0FFF               	dw	4095
 15435                           
 15436                           ;Config register IDLOC4 @ 0x200008
 15437                           ;	unspecified, using default values
 15438   200008                     	org	2097160
 15439   200008  0FFF               	dw	4095
 15440                           
 15441                           ;Config register IDLOC5 @ 0x20000A
 15442                           ;	unspecified, using default values
 15443   20000A                     	org	2097162
 15444   20000A  0FFF               	dw	4095
 15445                           
 15446                           ;Config register IDLOC6 @ 0x20000C
 15447                           ;	unspecified, using default values
 15448   20000C                     	org	2097164
 15449   20000C  0FFF               	dw	4095
 15450                           
 15451                           ;Config register IDLOC7 @ 0x20000E
 15452                           ;	unspecified, using default values
 15453   20000E                     	org	2097166
 15454   20000E  0FFF               	dw	4095
 15455                           
 15456                           	psect	config
 15457                           
 15458                           ;Config register CONFIG1L @ 0x300000
 15459                           ;	External Oscillator mode Selection bits
 15460                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15461                           ;	Power-up default value for COSC bits
 15462                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15463   300000                     	org	3145728
 15464   300000  AA                 	db	170
 15465                           
 15466                           ;Config register CONFIG1H @ 0x300001
 15467                           ;	unspecified, using default values
 15468                           ;	Clock Out Enable bit
 15469                           ;	CLKOUTEN = 0x1, unprogrammed default
 15470                           ;	Clock Switch Enable bit
 15471                           ;	CSWEN = 0x1, unprogrammed default
 15472                           ;	Fail-Safe Clock Monitor Enable bit
 15473                           ;	FCMEN = 0x1, unprogrammed default
 15474   300001                     	org	3145729
 15475   300001  FF                 	db	255
 15476                           
 15477                           ;Config register CONFIG2L @ 0x300002
 15478                           ;	unspecified, using default values
 15479                           ;	Master Clear Enable bit
 15480                           ;	MCLRE = 0x1, unprogrammed default
 15481                           ;	Power-up Timer Enable bit
 15482                           ;	PWRTE = 0x1, unprogrammed default
 15483                           ;	Low-power BOR enable bit
 15484                           ;	LPBOREN = 0x1, unprogrammed default
 15485                           ;	Brown-out Reset Enable bits
 15486                           ;	BOREN = 0x3, unprogrammed default
 15487   300002                     	org	3145730
 15488   300002  FF                 	db	255
 15489                           
 15490                           ;Config register CONFIG2H @ 0x300003
 15491                           ;	unspecified, using default values
 15492                           ;	Brown Out Reset Voltage selection bits
 15493                           ;	BORV = 0x3, unprogrammed default
 15494                           ;	ZCD Disable bit
 15495                           ;	ZCD = 0x1, unprogrammed default
 15496                           ;	PPSLOCK bit One-Way Set Enable bit
 15497                           ;	PPS1WAY = 0x1, unprogrammed default
 15498                           ;	Stack Full/Underflow Reset Enable bit
 15499                           ;	STVREN = 0x1, unprogrammed default
 15500                           ;	Debugger Enable bit
 15501                           ;	DEBUG = 0x1, unprogrammed default
 15502                           ;	Extended Instruction Set Enable bit
 15503                           ;	XINST = 0x1, unprogrammed default
 15504   300003                     	org	3145731
 15505   300003  FF                 	db	255
 15506                           
 15507                           ;Config register CONFIG3L @ 0x300004
 15508                           ;	WDT Period Select bits
 15509                           ;	WDTCPS = 0x1F, unprogrammed default
 15510                           ;	WDT operating mode
 15511                           ;	WDTE = OFF, WDT Disabled
 15512   300004                     	org	3145732
 15513   300004  9F                 	db	159
 15514                           
 15515                           ;Config register CONFIG3H @ 0x300005
 15516                           ;	unspecified, using default values
 15517                           ;	WDT Window Select bits
 15518                           ;	WDTCWS = 0x7, unprogrammed default
 15519                           ;	WDT input clock selector
 15520                           ;	WDTCCS = 0x7, unprogrammed default
 15521   300005                     	org	3145733
 15522   300005  FF                 	db	255
 15523                           
 15524                           ;Config register CONFIG4L @ 0x300006
 15525                           ;	unspecified, using default values
 15526                           ;	Write Protection Block 0
 15527                           ;	WRT0 = 0x1, unprogrammed default
 15528                           ;	Write Protection Block 1
 15529                           ;	WRT1 = 0x1, unprogrammed default
 15530                           ;	Write Protection Block 2
 15531                           ;	WRT2 = 0x1, unprogrammed default
 15532                           ;	Write Protection Block 3
 15533                           ;	WRT3 = 0x1, unprogrammed default
 15534                           ;	Write Protection Block 3
 15535                           ;	WRT4 = 0x1, unprogrammed default
 15536                           ;	Write Protection Block 3
 15537                           ;	WRT5 = 0x1, unprogrammed default
 15538                           ;	Write Protection Block 3
 15539                           ;	WRT6 = 0x1, unprogrammed default
 15540                           ;	Write Protection Block 3
 15541                           ;	WRT7 = 0x1, unprogrammed default
 15542   300006                     	org	3145734
 15543   300006  FF                 	db	255
 15544                           
 15545                           ;Config register CONFIG4H @ 0x300007
 15546                           ;	unspecified, using default values
 15547                           ;	Configuration Register Write Protection bit
 15548                           ;	WRTC = 0x1, unprogrammed default
 15549                           ;	Boot Block Write Protection bit
 15550                           ;	WRTB = 0x1, unprogrammed default
 15551                           ;	Data EEPROM Write Protection bit
 15552                           ;	WRTD = 0x1, unprogrammed default
 15553                           ;	Scanner Enable bit
 15554                           ;	SCANE = 0x1, unprogrammed default
 15555                           ;	Low Voltage Programming Enable bit
 15556                           ;	LVP = 0x1, unprogrammed default
 15557   300007                     	org	3145735
 15558   300007  FF                 	db	255
 15559                           
 15560                           ;Config register CONFIG5L @ 0x300008
 15561                           ;	unspecified, using default values
 15562                           ;	UserNVM Program Memory Code Protection bit
 15563                           ;	CP = 0x1, unprogrammed default
 15564                           ;	DataNVM Memory Code Protection bit
 15565                           ;	CPD = 0x1, unprogrammed default
 15566   300008                     	org	3145736
 15567   300008  FF                 	db	255
 15568                           
 15569                           ;Config register CONFIG5H @ 0x300009
 15570                           ;	unspecified, using default values
 15571   300009                     	org	3145737
 15572   300009  FF                 	db	255
 15573                           
 15574                           ;Config register CONFIG6L @ 0x30000A
 15575                           ;	unspecified, using default values
 15576                           ;	Table Read Protection Block 0
 15577                           ;	EBTR0 = 0x1, unprogrammed default
 15578                           ;	Table Read Protection Block 1
 15579                           ;	EBTR1 = 0x1, unprogrammed default
 15580                           ;	Table Read Protection Block 2
 15581                           ;	EBTR2 = 0x1, unprogrammed default
 15582                           ;	Table Read Protection Block 3
 15583                           ;	EBTR3 = 0x1, unprogrammed default
 15584                           ;	Table Read Protection Block 4
 15585                           ;	EBTR4 = 0x1, unprogrammed default
 15586                           ;	Table Read Protection Block 5
 15587                           ;	EBTR5 = 0x1, unprogrammed default
 15588                           ;	Table Read Protection Block 6
 15589                           ;	EBTR6 = 0x1, unprogrammed default
 15590                           ;	Table Read Protection Block 7
 15591                           ;	EBTR7 = 0x1, unprogrammed default
 15592   30000A                     	org	3145738
 15593   30000A  FF                 	db	255
 15594                           
 15595                           ;Config register CONFIG6H @ 0x30000B
 15596                           ;	unspecified, using default values
 15597                           ;	Boot Block Table Read Protection bit
 15598                           ;	EBTRB = 0x1, unprogrammed default
 15599   30000B                     	org	3145739
 15600   30000B  FF                 	db	255
 15601                           tosu	equ	0xFFF
 15602                           tosh	equ	0xFFE
 15603                           tosl	equ	0xFFD
 15604                           stkptr	equ	0xFFC
 15605                           pclatu	equ	0xFFB
 15606                           pclath	equ	0xFFA
 15607                           pcl	equ	0xFF9
 15608                           tblptru	equ	0xFF8
 15609                           tblptrh	equ	0xFF7
 15610                           tblptrl	equ	0xFF6
 15611                           tablat	equ	0xFF5
 15612                           prodh	equ	0xFF4
 15613                           prodl	equ	0xFF3
 15614                           indf0	equ	0xFEF
 15615                           postinc0	equ	0xFEE
 15616                           postdec0	equ	0xFED
 15617                           preinc0	equ	0xFEC
 15618                           plusw0	equ	0xFEB
 15619                           fsr0h	equ	0xFEA
 15620                           fsr0l	equ	0xFE9
 15621                           wreg	equ	0xFE8
 15622                           indf1	equ	0xFE7
 15623                           postinc1	equ	0xFE6
 15624                           postdec1	equ	0xFE5
 15625                           preinc1	equ	0xFE4
 15626                           plusw1	equ	0xFE3
 15627                           fsr1h	equ	0xFE2
 15628                           fsr1l	equ	0xFE1
 15629                           bsr	equ	0xFE0
 15630                           indf2	equ	0xFDF
 15631                           postinc2	equ	0xFDE
 15632                           postdec2	equ	0xFDD
 15633                           preinc2	equ	0xFDC
 15634                           plusw2	equ	0xFDB
 15635                           fsr2h	equ	0xFDA
 15636                           fsr2l	equ	0xFD9
 15637                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        10
    BSS         385
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     152
    BANK1           256    102     220
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2835$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2751$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2751$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Backhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Backhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    _colour_move->_go_Home
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_Backhalfblock
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _Backhalfblock->_fullSpeedBack
    _Backhalfblock->_stop
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_reverseDetect
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               104   104      0  561597
                                            113 BANK0      2     2      0
                                              0 BANK1    102   102      0
                       _Buttons_init
                     _Colour_decider
                   _Forwardhalfblock
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                        _Timer0_init
                   _color_click_init
                        _colour_move
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9201
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35323
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34968
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34615
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   28769
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     692
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           6     6      0      91
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    9024
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _colour_move                                          2     0      2  315828
                                             44 COMRAM     2     0      2
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                         _YellowMove
                            _go_Home
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  153779
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                               _stop
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   24821
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   24821
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    7050
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   17923
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   17923
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   17923
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   17923
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   24973
                                             31 COMRAM     4     0      4
                      _Backhalfblock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _Backhalfblock                                        6     2      4    6898
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _YellowMove                                           4     0      4   24821
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    9049
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _RetryMove                                            6     2      4   15468
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                      _reverseDetect
                               _stop
 ---------------------------------------------------------------------------------
 (2) _PinkMove                                             4     0      4   24821
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    9049
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _reverseOneBlock                                      6     2      4    7050
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    8570
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBack                                        6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3937
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23353
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    3702
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _Buttons_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buttons_init
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _stop
       _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_move
     _BlueMove
       _Backhalfblock
         _fullSpeedBack
           _setMotorPWM
         _stop
       _reverseDetect
         _fullSpeedBack
         _stop
       _turnRight45
         _TurnDelay
         _stop
         _turnRight
           _setMotorPWM
     _GreenMove
       _reverseDetect
       _turnLeft45
         _TurnDelay
         _stop
         _turnLeft
           _setMotorPWM
     _LightBlueMove
       _reverseDetect
       _turnLeft45
     _OrangeMove
       _reverseDetect
       _turnRight45
     _PinkMove
       _reverseDetect
       _reverseOneBlock
         _fullSpeedBack
         _stop
       _turnLeft45
     _RedMove
       _reverseDetect
       _turnRight45
     _RetryMove
       _fullSpeedAhead
       _reverseDetect
       _stop
     _YellowMove
       _reverseDetect
       _reverseOneBlock
       _turnRight45
     _go_Home
       _BlueMove
       _GreenMove
       _LightBlueMove
       _OrangeMove
       _RedMove
       _ReversePink
         _ForwardOneBlock
           _fullSpeedAhead
           _stop
         _reverseDetect
         _turnLeft45
       _ReverseYellow
         _ForwardOneBlock
         _reverseDetect
         _turnRight45
       _stop
       _timed_forward
         _delayed_ms
         _setMotorPWM
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     66      DC       7       85.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllllh     17      0       0      38        0.0%
BITBIGSFRhllhh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRhllhlh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      B      0       0      59        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlllll      5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlllh       2      0       0      37        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllhll      1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C2      62        0.0%
DATA                 0      0     2C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 15 18:58:56 2023

               _color_read_Red 5B02                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5AB2                   ___fldiv@sign 0042                _color_read_Blue 5BA2  
                           l52 5FEC                             l61 5BA0                             l70 31DC  
                           l55 5B00                             l80 222A                             l64 5BF0  
                           l49 5A60                             l58 5B50                             l67 5660  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 42E8  
             _color_read_Green 5B52                readColours@vals 000C              ??_Interrupts_init 0001  
                          l200 6042                            l132 5F58                            l221 605A  
                          l141 6084                            l150 604E                            l206 5F2E  
                          l135 5F5A                            l144 6070                            l153 5D9C  
                          l138 5F80                            l147 607A                            l500 56BA  
                          l332 3586                            l430 52FA                            l503 5E1A  
                          l424 4786                            l512 59BC                            l521 596A  
                          l417 527C                            l506 5E58                            l530 4E28  
                          l515 5A0E                            l524 553A                            l604 3F20  
                          l188 602A                            l348 37D4                            l509 53EE  
                          l197 602E                            l454 51F4                            l470 5156  
                          l438 50B8                            l446 501A                            l518 5918  
                          l462 4ED2                            l534 4306                            l527 4D72  
                          l631 5602                            l544 4442                            l536 435C  
                          l473 5EE4                            l545 4478                            l537 43B6  
                          l482 5C8C                            l634 5EB2                            l546 4492  
                          l538 4426                            l627 600C                            l491 581E  
                          l539 43EE                            l476 5EFE                            l485 5714  
                          l637 5EC8                            l662 5FA6                            l494 57C6  
                          l479 5C3E                            l592 3EF8                            l665 6066  
                          l497 576E                            l737 3CCC                            l745 3CCC  
                          l748 5FCC                            l598 3EF8                            l862 461A  
                          l875 48EA                            _abs 5D9E                            _pad 52FC  
                          _rel 014C                   ?_colour_move 002D                            wreg 000FE8  
                 ___flmul@aexp 0022                   ___flmul@bexp 0023                   ___flmul@sign 001D  
                 ___flmul@temp 0028                   ___flmul@prod 0024                   ___fltol@exp1 000A  
              Colour_decider@i 007A                           l1013 4AAE                           l1022 5E90  
                         l1007 4F7C                           l1018 4AF4                           ?_abs 0013  
                         l1045 49F0                           l1302 2604                           l1303 25F2  
                         l1330 2EAE                           l1410 4222                           l1403 418A  
                         l1332 2D0E                           l1341 2D54                           l1318 5CD2  
                         l1406 42E6                           l1246 5462                           l1343 2DCC  
                         l1335 2CD2                           l1239 545A                           l1344 2DBA  
                         l1600 55A0                           l4001 244C                           l1417 427E  
                         l1362 27B0                           l1426 58C6                           l1371 2A1E  
                         l4011 2488                           l4003 245C                           l1372 2A0C  
                         l1276 241A                           l1540 34E2                           l1293 2534  
                         l4021 24CE                           l4013 2496                           l4005 246A  
                         l1285 26EA                           l1277 2408                           l4101 5D36  
                         l1525 1618                           l1366 2B14                           l1278 23CE  
                         l1462 5374                           l1470 38B2                           l1606 5AB0  
                         l4031 254A                           l4023 2502                           l4015 2498  
                         l4007 2478                           l4111 51A0                           l4103 5D3A  
                         l1369 29A6                           l4041 2586                           l4033 255A  
                         l4025 2504                           l4017 24A2                           l4009 2484  
                         l4113 51AC                           l4105 5158                           l4121 5282  
                         l4201 452E                           l1481 3A54                           l5001 1700  
                         l1618 4CBC                           l1626 5D5A                           l1458 531E  
                         l1562 5874                           l1379 2AD6                           l4051 25B2  
                         l4043 2588                           l4027 2514                           l4019 24A8  
                         l4107 517C                           l4115 51C4                           l4131 52E2  
                         l4123 529A                           l4211 45B0                           l4203 4542  
                         l1467 3864                           l1635 5D16                           l5011 177A  
                         l5003 1734                           l1580 5DDC                           l1572 4BF2  
                         l1492 1836                           l4301 2BF8                           l4061 25EA  
                         l4045 2596                           l4037 256E                           l4053 25B4  
                         l4029 2524                           l4117 51DC                           l4109 5194  
                         l4125 52A6                           l4141 5070                           l4133 501C  
                         l4221 45FA                           l4213 45B2                           l4205 4550  
                         l1629 6090                           l1469 386C                           l5021 17E8  
                         l5013 1782                           l5005 173C                           l5101 3214  
                         l4303 2C08                           l4311 2C28                           l4071 2668  
                         l4047 259E                           l4039 2578                           l4055 25C2  
                         l4127 52B2                           l4119 527E                           l5031 607C  
                         l4135 5040                           l4143 5088                           l4151 4FBA  
                         l4215 45C4                           l4207 4562                           l4231 47BA  
                         l5023 17F8                           l5015 1792                           l5007 1740  
                         l1495 11D0                           l5111 3276                           l5103 3222  
                         l4321 2C66                           l4313 2C38                           l4305 2C10  
                         l4401 26F8                           l4081 26AE                           l4065 2614  
                         l4073 266A                           l4057 25C6                           l4049 25A2  
                         l4129 52CA                           l5033 6080                           l5041 6076  
                         l4161 50BA                           l4145 50A0                           l4137 5058  
                         l4153 4FC6                           l5201 5B48                           l4209 4590  
                         l4217 45CA                           l4241 4812                           l4233 47BE  
                         l4225 4788                           l1577 5DD4                           l5025 180E  
                         l5017 17C2                           l5009 175E                           l1497 1016  
                         l5121 3322                           l5113 32CC                           l5105 3226  
                         l1586 4132                           l4331 2CAE                           l4323 2C76  
                         l4315 2C38                           l4307 2C14                           l4411 2738  
                         l4403 2706                           l4091 26D8                           l4083 26BC  
                         l4075 267A                           l4067 2620                           l4059 25D4  
                         l5035 6046                           l4163 50DE                           l4171 5126  
                         l4139 5064                           l4155 4FD2                           l4147 4F7E  
                         l5051 5D6A                           l5043 6068                           l5211 5BA2  
                         l4219 45DA                           l4251 4894                           l4243 4826  
                         l4235 47CC                           l4227 478C                           l5027 1816  
                         l5019 17D0                           l5123 332A                           l5131 336C  
                         l5107 3236                           l4341 2CFC                           l4333 2CC2  
                         l4325 2C86                           l4261 2B16                           l4501 2A3A  
                         l4421 2768                           l4413 273E                           l4405 2708  
                         l4093 26DA                           l4085 26C2                           l4077 268A  
                         l4069 262E                           l5301 4254                           l5037 604A  
                         l4173 513E                           l4165 50F6                           l4149 4FA2  
                         l4157 4FEA                           l5061 4E2A                           l5221 3CCE  
                         l5053 5D72                           l5045 606C                           l5213 5BE8  
                         l5205 5B52                           l4181 4494                           l4245 4834  
                         l4253 489A                           l4237 47EC                           l4229 479A  
                         l1589 4076                           l1597 5590                           l5141 3422  
                         l5133 3390                           l5125 3332                           l5117 32FC  
                         l5109 3256                           l4351 2D44                           l4343 2D0C  
                         l4335 2CD0                           l4327 2C96                           l4319 2C4C  
                         l4271 2B52                           l4263 2B22                           l4511 2AA4  
                         l4503 2A48                           l4431 27A0                           l4423 276A  
                         l4415 274E                           l4407 2718                           l4087 26C4  
                         l4079 26AA                           l5311 4292                           l5303 4260  
                         l5039 6072                           l4167 5102                           l4175 5ECA  
                         l4159 5002                           l5063 4E4E                           l5071 4E96  
                         l5231 3CFE                           l5223 3CE2                           l5055 5D98  
                         l5047 5D5E                           l5207 5B98                           l4191 44D8  
                         l4183 4498                           l4255 48AA                           l4247 4862  
                         l4239 480A                           l5143 3442                           l5135 33C4  
                         l5151 34A4                           l6031 334E                           l5119 330C  
                         l4361 2D84                           l4353 2D52                           l4345 2D1E  
                         l4337 2CDC                           l4329 2C9E                           l4281 2B82  
                         l4273 2B62                           l4265 2B30                           l4521 2AFA  
                         l4513 2ABE                           l4505 2A72                           l4441 27F0  
                         l4433 27C0                           l4425 277A                           l4417 2754  
                         l4409 2728                           l4089 26CA                           l5313 42B6  
                         l5305 426E                           l5401 1994                           l4169 510E  
                         l5081 57F2                           l4177 5ECE                           l5073 4EAE  
                         l5065 4E66                           l5241 3DAE                           l5233 3D2C  
                         l5225 3CE4                           l5057 5D9A                           l5049 5D62  
                         l5217 602E                           l4193 44F8                           l4185 44A6  
                         l4257 48CA                           l4249 4882                           l4097 5D18  
                         l6033 340C                           l5129 333A                           l4371 2DF6  
                         l4363 2DB2                           l4347 2D34                           l4355 2D64  
                         l4339 2CFA                           l4291 2BB8                           l4283 2B88  
                         l4275 2B64                           l4267 2B32                           l4515 2ADA  
                         l4523 2B00                           l4507 2A76                           l4451 2840  
                         l4443 27FA                           l4435 27D0                           l4427 278A  
                         l4419 275A                           l4531 5C9E                           l5315 42C6  
                         l5307 428C                           l5411 1A44                           l5403 199C  
                         l4179 5EDE                           l5091 591A                           l5083 5DDE  
                         l5075 4EC6                           l5067 4E72                           l5251 3E5C  
                         l5243 3DD8                           l5235 3D54                           l5227 3CEC  
                         l5219 603E                           l4195 44FC                           l4187 44C6  
                         l4099 5D24                           l4603 497C                           l6035 3496  
                         l5139 33F8                           l5155 34B6                           l5323 5820  
                         l4381 2E6E                           l4373 2E20                           l4357 2D72  
                         l4349 2D3A                           l4293 2BC8                           l4285 2B96  
                         l4269 2B42                           l4277 2B6C                           l4541 4F40  
                         l4525 2B04                           l4517 2AEA                           l4509 2A90  
                         l4461 2882                           l4453 284C                           l4445 2810  
                         l4429 279A                           l3901 2248                           l5317 42D4  
                         l5309 428E                           l5501 20EC                           l5421 1B5A  
                         l5413 1A9A                           l5405 19F0                           l5181 5F3A  
                         l5341 5A38                           l5333 5A10                           l5077 57C8  
                         l5085 5E1C                           l5093 4CBE                           l5069 4E7E  
                         l5261 3F0C                           l5253 3E74                           l5245 3DF0  
                         l5237 3D6C                           l4197 4508                           l4189 44CA  
                         l4621 49E0                           l4613 49A4                           l4605 4986  
                         l4701 5A62                           l5149 3474                           l5325 582C  
                         ?_pad 0011                           l4391 2EA4                           l4383 2E8A  
                         l4367 2DDC                           l4375 2E24                           l4359 2D76  
                         l4295 2BCA                           l4287 2B98                           l4279 2B7C  
                         l4543 4F50                           l4535 4ED4                           l4551 49F2  
                         l4519 2AF8                           l4471 28E4                           l4463 2892  
                         l4455 285A                           l4447 281C                           l4439 27E4  
                         l3903 2258                           l3911 2282                           l5319 42D6  
                         l5511 2174                           l5503 212A                           l5431 1C8C  
                         l5423 1B6A                           l5407 1A22                           l5183 5F40  
                         l5191 5FD0                           l5351 5A52                           l5343 5A42  
                         l5335 5A14                           l5079 57DC                           l5271 54D2  
                         l5087 5376                           l5095 4D74                           l5263 3F16  
                         l5255 3E9E                           l5247 3E1A                           l5239 3D96  
                         l4199 4526                           l4631 532A                           l4615 49B0  
                         l4607 4990                           l4703 5A76                           l4711 5A96  
                         l5327 584A                           l4385 2E8E                           l4377 2E3E  
                         l4369 2DE8                           l4289 2BA8                           l4297 2BD2  
                         l4545 4F74                           l4537 4F02                           l4561 4A7C  
                         l4553 4A20                           l4481 298C                           l4473 2900  
                         l4465 28AC                           l4457 2866                           l4449 2834  
                         l3921 22B2                           l3913 2292                           l3905 2268  
                         l4529 5C8E                           l5281 4154                           l5513 21B2  
                         l5433 1D08                           l5425 1BA2                           l5417 1AA6  
                         l5409 1A28                           l5185 5F42                           l4713 5F5A  
                         l5361 5A5C                           l5353 5A54                           l5345 5A4C  
                         l5337 5A1E                           l5273 550E                           l5089 58C8  
                         l4721 5EAE                           l5257 3EB6                           l5249 3E32  
                         l5193 5AB2                           l4641 5DB8                           l4633 533E  
                         l4625 52FC                           l4801 3A1E                           l4617 49C0  
                         l4705 5A82                           l5097 31DE                           l5329 586A  
                         l5601 42E8                           l4387 2E9C                           l4379 2E54  
                         l4299 2BE2                           l4547 4F7A                           l4539 4F12  
                         l4563 4A8E                           l4555 4A30                           l4491 29C8  
                         l4483 2996                           l4475 292A                           l4467 28BC  
                         l4459 2876                           l3931 22F2                           l3923 22C0  
                         l3915 2298                           l3907 2278                           l5291 41CC  
                         l5283 419A                           l5523 21BE                           l5427 1BB4  
                         l5435 1D60                           l5419 1ABA                           l3851 541A  
                         l3843 53F0                           l5187 5F44                           l5179 5F30  
                         l4715 5F6A                           l5363 5A5E                           l5355 5A56  
                         l5347 5A4E                           l5339 5A2E                           l4731 5C40  
                         l5275 5526                           l4723 5BF2                           l5267 596C  
                         l5259 3EE0                           l5371 2FB0                           l5195 5AF8  
                         l4635 5342                           l4627 530A                           l4803 3A24  
                         l4619 49D0                           l4651 4B88                           l4643 4AF6  
                         l4707 5A86                           l4811 0E44                           l5099 3206  
                         l5611 4384                           l5603 42EA                           l4389 2EA2  
                         l4565 4A9C                           l4557 4A5E                           l4493 29D6  
                         l4485 29A4                           l4477 2960                           l4469 28D8  
                         l3941 232C                           l3933 22F4                           l3925 22C2  
                         l3917 22AA                           l3909 227A                           l5293 41D8  
                         l5285 41B0                           l5277 4136                           l5525 21F0  
                         l5509 2136                           l5461 1EDE                           l5437 1D92  
                         l5445 1DD0                           l5429 1C30                           l5381 1838  
                         l3861 544E                           l3853 5428                           l3845 53F8  
                         l3837 5FA8                           l5189 5F46                           l5357 5A58  
                         l5349 5A50                           l4741 56D0                           l4733 5C54  
                         l5269 59BE                           l4725 5C06                           l4717 5E92  
                         l5701 3AFE                           l5373 3044                           l5541 601A  
                         l5365 5604                           l4637 5360                           l4629 5316  
                         l4805 3A34                           l4573 5E5A                           l4581 48EC  
                         l4661 4BEA                           l4645 4B16                           l4709 5A92  
                         l4901 11F4                           l4821 0E94                           l4813 0E54  
                         l5621 43C4                           l5613 4392                           l5605 4308  
                         l4567 4AEC                           l4559 4A6E                           l4495 2A04  
                         l4487 29B6                           l4479 296E                           l4399 26EC  
                         l3951 2340                           l3943 2330                           l3927 22D2  
                         l3935 22FC                           l3919 22AC                           l5295 420A  
                         l5279 4146                           l5527 2222                           l5463 1F1C  
                         l5471 1F4A                           l5447 1E02                           l5455 1E40  
                         l5439 1DC4                           l5391 1906                           l5383 1862  
                         l3863 5454                           l3855 542E                           l3847 540A  
                         l3839 5FC4                           l5359 5A5A                           l4743 56E8  
                         l4735 5C60                           l4727 5C12                           l4751 5662  
                         l4719 5E9E                           l5703 3B12                           l5711 3B30  
                         l5375 3078                           l5367 2EB0                           l5543 6024  
                         l5199 5B02                           l5551 5F04                           l4639 5D9E  
                         l3871 4C22                           l4575 5E70                           l4591 4942  
                         l4583 4902                           l4647 4B54                           l4655 4B94  
                         l4671 555A                           l4911 1228                           l4903 11FC  
                         l4831 0ED0                           l4823 0E9C                           l4815 0E62  
                         l5631 4406                           l5623 43CE                           l5615 4396  
                         l5607 435E                           l5561 605C                           l4569 4AF2  
                         l4489 29C4                           l3961 2354                           l3953 2344  
                         l3945 2334                           l3937 230C                           l3929 22E2  
                         l5297 420C                           l5289 41C4                           l5473 1F84  
                         l5481 1FCE                           l5457 1E72                           l5449 1E34  
                         l5385 186E                           l3857 5444                           l3849 5412  
                         l3881 4638                           l4737 5C74                           l4729 5C26  
                         l4753 5676                           l4745 5770                           l5713 3B44  
                         l5705 3B16                           l5377 3110                           l5369 2F7C  
                         l5545 6026                           l5537 600E                           l5553 5F12  
                         l3873 4C40                           l3865 4BF4                           l4761 380C  
                         l4577 5E80                           l4593 4952                           l4657 4BA6  
                         l4649 4B7C                           l4681 3FBA                           l4673 3F22  
                         l4665 5CD4                           l4921 1272                           l4913 1240  
                         l4905 1204                           l4841 0F16                           l4825 0EAC  
                         l4833 0ED4                           l4817 0E66                           l4809 0E3E  
                         l5641 4444                           l5633 4408                           l5625 43D0  
                         l5617 43AE                           l5609 4376                           l5801 3512  
                         l4499 2A2E                           l3971 2368                           l3963 2358  
                         l3955 2348                           l3947 2338                           l3939 231E  
                         l5299 4218                           l5475 1FC2                           l5459 1EA4  
                         l5387 189E                           l3859 544C                           l3891 4702  
                         l3883 468C                           l4739 56BC                           l4755 568E  
                         l4747 5784                           l5731 3BA6                           l5715 3B58  
                         l5723 3B76                           l5707 3B1A                           l5379 3144  
                         l5651 55A8                           l5571 520E                           l5563 51F6  
                         l5547 6028                           l5539 6018                           l5555 5F16  
                         l3875 4C76                           l3867 4C06                           l4771 3884  
                         l4763 381C                           l4595 4956                           l4587 4916  
                         l4691 40D6                           l4675 3F42                           l4667 5CE4  
                         l4923 1286                           l4931 137C                           l4915 1252  
                         l4907 1208                           l4843 0F1E                           l4835 0EFA  
                         l4851 0F60                           l4827 0EBC                           l4819 0E8A  
                         l5635 4420                           l5627 43E8                           l5619 43B0  
                         l5643 445C                           l5811 3532                           l5803 3516  
                         l3981 23C6                           l3965 235C                           l3957 234C  
                         l3949 233C                           l3973 236C                           l5485 1FDA  
                         l5397 1910                           l5389 18D2                           l3893 4746  
                         l3885 46A0                           l5661 5742                           l5557 6050  
                         l4749 579A                           l5741 3BE8                           l5725 3B8A  
                         l5717 3B5C                           l5653 55DA                           l5581 5258  
                         l5573 5224                           l5565 5208                           l5549 5F00  
                         l3869 4C18                           l4781 38BA                           l4773 388A  
                         l4765 383C                           l4757 37D8                           l4597 4964  
                         l4589 4940                           l4693 40EA                           l4685 402A  
                         l4677 3F98                           l4669 553C                           l4941 1448  
                         l4933 139A                           l4925 12EA                           l4909 121A  
                         l4917 125A                           l4861 0FAA                           l4853 0F86  
                         l4845 0F36                           l4837 0F0C                           l4829 0EC8  
                         l5645 446A                           l5629 43FC                           l5637 4426  
                         l5821 354E                           l5813 3536                           l5805 351A  
                         l3991 23FC                           l3983 23DC                           l3975 2370  
                         l3967 2360                           l3959 2350                           l3895 222C  
                         l5487 200C                           l5495 204A                           l5399 1962  
                         l3887 46A4                           l3879 461C                           l5559 5F82  
                         l5751 3C2A                           l5743 3BEC                           l5727 3B9E  
                         l5735 3BBC                           l5719 3B60                           l5655 55E6  
                         l5591 527A                           l5583 5262                           l5575 5228  
                         l5567 520A                           l4791 3958                           l4783 38C4  
                         l4775 389A                           l4767 3858                           l4759 37F8  
                         l4695 4112                           l4687 4066                           l4679 3FAC  
                         l4951 14F8                           l4943 1458                           l4935 13CE  
                         l4927 1342                           l4919 1262                           l4871 0FE0  
                         l4855 0F98                           l4847 0F40                           l4839 0F10  
                         l5671 58B4                           l5663 5876                           l5647 447A  
                         l5639 4434                           l5831 35AE                           l5823 3556  
                         l5815 353A                           l5807 3522                           l3993 2406  
                         l3985 23E8                           l3977 239A                           l3969 2364  
                         l3897 2238                           l5497 207C                           l5489 203E  
                         l3889 46E6                           l5657 5716                           l5593 5FEE  
                         l5761 3C5C                           l5753 3C2E                           l5737 3BD0  
                         l5729 3BA2                           l5681 3A80                           l5649 55A2  
                         l5585 5264                           l5577 524C                           l5569 520C  
                         l4785 38CA                           l4793 39BC                           l4777 38A6  
                         l4769 3874                           l4697 4122                           l4689 409A  
                         l4961 155C                           l4953 152C                           l4945 1468  
                         l4937 1400                           l4929 1376                           l4881 109E  
                         l4857 0F9C                           l5665 5888                           l5841 35F0  
                         l5833 35B4                           l5825 356A                           l5817 353E  
                         l5809 352A                           l3995 2428                           l3987 23EC  
                         l3979 23B6                           l3899 2246                           l5499 20AE  
                         l5659 572A                           l5595 5FF6                           l5771 3CAE  
                         l5763 3C62                           l5755 3C32                           l5739 3BE4  
                         l5747 3C02                           l5691 3ACC                           l5683 3A84  
                         l5675 3A56                           l5587 526E                           l5579 5256  
                         l4795 39D6                           l4787 394C                           l4779 38AE  
                         l4971 160E                           l4963 1562                           l4955 1540  
                         l4947 149C                           l4939 1416                           l4891 115E  
                         l4883 10D0                           l4875 1026                           l4859 0FA2  
                         l5667 5890                           l5851 3644                           l5843 360E  
                         l5835 35BC                           l5827 356C                           l5819 3546  
                         l3997 2438                           l3989 23FA                           l5597 6000  
                         l5765 3C7E                           l5773 3CB6                           l5749 3C16  
                         l5693 3AD0                           l5685 3A96                           l5677 3A68  
                         l5589 5270                           l4797 39F4                           l4789 3952  
                         l4981 1652                           l4973 162A                           l4965 156A  
                         l4949 14F2                           l4957 1544                           l4885 110E  
                         l4877 102C                           l4869 0FC6                           l5669 5898  
                         l5861 369A                           l5853 3648                           l5845 3612  
                         l5837 35D0                           l5829 3594                           l5599 600A  
                         l5767 3C96                           l5759 3C48                           l5695 3AD4  
                         l5679 3A7C                           l5687 3AA4                           l4799 3A0E  
                         l4983 165A                           l4975 1638                           l4991 167A  
                         l4967 1576                           l4959 1554                           l4887 1122  
                         l4895 119E                           l4879 1060                           l5871 36F4  
                         l5863 36AE                           l5855 365C                           l5847 3628  
                         l5839 35DC                           l5791 34F4                           l5783 34E4  
                         l5769 3CAA                           l5689 3AB8                           l4993 168C  
                         l4985 166A                           l4977 1648                           l4969 15EE  
                         l4897 11D8                           l4889 1156                           l5865 36CA  
                         l5857 3674                           l5873 36FC                           l5849 362C  
                         l5881 378C                           l5793 34F8                           l5785 34E8  
                         l5699 3AEA                           l4995 169E                           l4987 166E  
                         l4979 164C                           l4899 11E8                           l5883 379E  
                         l5875 371A                           l5867 36E4                           l5859 368E  
                         l5795 34FC                           l5787 34EC                           l4997 16A2  
                         l4989 1674                           l5885 37A2                           l5877 3770  
                         l5869 36EC                           l5797 3508                           l5789 34F0  
                         l4999 16A8                           l5879 377C                           l5799 350C  
                         l5889 37C0                    GreenMove@mL 0020                    GreenMove@mR 0022  
                         STR_1 0E01                           STR_2 0E34                           STR_5 0E38  
                         u3000 4702                           u3001 46FE                           u3010 2246  
                         u3011 2242                           u3100 239A                           u3020 2258  
                         u3101 2396                           u3021 2254                           u3110 23B2  
                         u3030 2268                           u3111 23AC                           u3031 2264  
                         u4000 2A04                           u3200 2496                           u3120 23B4  
                         u3040 22AA                   _BAUD4CONbits 000EE9                           u4001 2A00  
                         u3201 2492                           u3041 22A6                           u4010 2A1A  
                         u3210 24CE                           u3130 23DC                           u3050 22C0  
                         u4011 2A16                           u3211 24CA                           u3131 23D8  
                         u3051 22BC                           u4100 4A20                           u4020 2A2E  
                         u3300 25EA                           u3220 2514                           u3140 23FA  
                         u3060 22D2                           u4101 4A1C                           u4021 2A2A  
                         u3301 25E6                           u3221 2510                           u3141 23F6  
                         u3061 22CE                           u4110 4A5E                           u4030 2A48  
                         u3310 2600                           u3230 254A                           u3150 241A  
                         u3070 22E2                           u4111 4A5A                           u4031 2A44  
                         u3311 25FC                           u3231 2546                           u3151 2416  
                         u3071 22DE                           u4120 4A7C                           u4040 2A90  
                         u3320 2614                           u3240 255A                           u3160 2428  
                         u3080 231E                           u5000 3CFA                           u3400 5D5A  
                         u4200 49A0                           u4121 4A78                           u4041 2A8C  
                         u3321 2610                           u3241 2556                           u3161 2424  
                         u3081 231A                           u5001 3CF6                           u3401 5D56  
                         u4201 499C                           u4130 4A9C                           u4050 2ABE  
                         u3330 262E                           u3250 2586                           u3170 2438  
                         u3090 232C                           u3410 51DC                           u5010 3D54  
                         u4210 49C0                           _T2PR 000FBC                           u4131 4A98  
                         u4051 2ABA                           u3331 262A                           u3251 2582  
                         u3171 2434                           u3091 2328                           u3411 51D8  
                         u5011 3D50                           u4211 49BC                           u4140 4AEC  
                         u4060 2AF8                           u3340 2668                           u3260 2596  
                         u3180 246A                           u5100 41B0                           u3420 51F4  
                         u3500 5156                           u5020 3D96                           u4220 49D0  
                         u4141 4AE8                           u4061 2AF4                           u3341 2664  
                         u3261 2592                           u3181 2466                           u5101 41AC  
                         u3421 51F0                           u3501 5152                           u5021 3D92  
                         u4221 49CC                           u4070 4F02                           u3350 267A  
                         u3270 25B2                           u3190 2478                           u5110 4206  
                         u3430 52E2                           u3510 5EFE                           u5030 3DD8  
                         u4230 530A                           u4150 5E70                           u4310 4BE0  
                         u4071 4EFE                           u3351 2676                           u3271 25AE  
                         u3191 2474                           u5111 4202                           u3431 52DE  
                         u3511 5EFA                           u5031 3DD4                           u4231 5306  
                         u4151 5E6C                           u4311 4BDA                           u4080 4F40  
                         u3360 268A                           u3280 25C2                           u5120 4250  
                         u5200 1962                           u3440 52FA                           u5040 3E1A  
                         u3520 44A6                           u3600 47CC                           u4240 5360  
                         u4160 4902                           u4320 4BE2                           u4400 404A  
                         u4081 4F3C                           u3361 2686                           u3281 25BE  
                         u5121 424C                           u5201 195E                           u3441 52F6  
                         u5041 3E16                           u3521 44A2                           u3601 47C8  
                         u4241 535C                           u4161 48FE                           u4305 4BB8  
                         u4090 4F74                           u3370 26AA                           u3290 25D4  
                         u5130 426E                           u5210 19F0                           u3450 50A0  
                         u5050 3E5C                           u3530 44D8                           u3610 480A  
                         u4250 5DB8                           u4170 4936                           u4410 4066  
                         u4330 5D16                           u4091 4F70                           u3371 26A6  
                         u3291 25D0                           u5131 426A                           u5211 19EC  
                         u3451 509C                           u5051 3E58                           u3531 44D4  
                         u3611 4806                           u4251 5DB4                           u4411 4062  
                         u4331 5D12                           u3700 2BB8                           u3380 26BC  
                         u5140 427E                           u5300 1E34                           u5220 1A44  
                         u3460 50B8                           u5060 3E9E                           u3620 4834  
                         u4500 380A                           u4180 4964                           u4260 4B36  
                         u4420 40BA                           u4340 555A                           u3701 2BB4  
                         u3381 26B8                           u5141 427A                           u5301 1E30  
                         u5221 1A40                           u3461 50B4                           u5061 3E9A  
                         u3541 4502                           u3621 4830                           u4181 4960  
                         u4405 4040                           u4341 5556                           u3710 2BF8  
                         u3390 26D8                           u5150 428C                           u5310 1E72  
                         u5230 1A9A                           u3470 5002                           u5070 3EE0  
                         u3550 4526                           u3630 4862                           u4510 381C  
                         u4190 4978                           u4270 4B54                           u4430 40D6  
                         u4350 3F6A                           u3711 2BF4                           u3391 26D4  
                         u5151 4288                           u5311 1E6E                           u5231 1A96  
                         u6007 5518                           u3471 4FFE                           u5071 3EDC  
                         u3551 4522                           u3631 485E                           u4511 3818  
                         u4191 4974                           u4175 492C                           u4271 4B50  
                         u4431 40D2                           u3800 2D84                           u3720 2C38  
                         u5160 42C6                           u5080 4146                           u5400 207C  
                         u5320 1EA4                           u5240 1ABA                           u2920 540A  
                         u3480 501A                           u3560 4550                           u3640 48AA  
                         u4520 3858                           u4280 4B7C                           u4440 4112  
                         u4360 3F98                           u4600 0EAC                           u3801 2D80  
                         u3721 2C34                           u5161 42C2                           u5081 4142  
                         u5401 2078                           u5321 1EA0                           u5241 1AB6  
                         u2921 5406                           u6017 5C7E                           u3481 5016  
                         u3561 454C                           u3641 48A6                           u4521 3854  
                         u4281 4B78                           u4265 4B2C                           u4441 410E  
                         u4425 40B0                           u4361 3F94                           u4601 0EA8  
                         u3810 2DB2                           u3730 2CAE                           u3650 2B30  
                         u5170 42D4                           u5090 4154                           u5410 20AE  
                         u5330 1EDE                           u5250 1B6A                           u2930 5428  
                         u3490 513E                           u3570 4590                           u4530 3884  
                         u4290 4BA6                           u4370 3FBA                           u4450 5AB0  
                         u4610 0EBC                           u3811 2DAE                           u3731 2CAA  
                         u3651 2B2C                           u5171 42D0                           u5091 4150  
                         u5411 20AA                           u5331 1EDA                           u5251 1B66  
                         u2931 5424                           u6107 5734                           u3491 513A  
                         u6027 507A                           u3571 458C                           u4531 3880  
                         u4291 4BA2                           u4371 3FB6                           u4355 3F60  
                         u4451 5AAC                           u4611 0EB8                           u3820 2DC8  
                         u3740 2CD0                           u3660 2B42                           u3900 2728  
                         u5420 20EC                           u5340 1F1C                           u5260 1BB4  
                         u2940 5444                           u4460 5F6A                           u3580 45DA  
                         u4540 389A                           u4700 119A                           u4620 0EFA  
                         u5180 586A                           u5500 4392                           u3821 2DC4  
                         u3741 2CCC                           u3661 2B3E                           u3901 2724  
                         u5421 20E8                           u5341 1F18                           u5261 1BB0  
                         u2941 5440                           u6117 5760                           u4461 5F66  
                         u6037 5ED4                           u3581 45D6                           u4541 3896  
                         u4701 1196                           u4621 0EF6                           u5181 5866  
                         u5501 438E                           u3830 2DDC                           u3750 2CFA  
                         u3670 2B52                           u3910 2768                           u5430 212A  
                         u5350 1F46                           u5270 1D92                           u4470 5F80  
                         u3590 479A                           u2950 4C06                           u4550 39D6  
                         u4390 4026                           u4710 11D0                           u4630 0F0C  
                         u5510 43C4                           u3831 2DD8                           u3751 2CF6  
                         u3671 2B4E                           u3911 2764                           u5431 2126  
                         u5351 1F42                           u5271 1D8E                           u5191 1868  
                         u6127 52BC                           u4471 5F7C                           u6047 57E6  
                         u3591 4796                           u2951 4C02                           u4551 39D2  
                         u4391 4022                           u4711 11CC                           u4631 0F08  
                         u5511 43C0                           u3840 2DF6                           u3760 2D1E  
                         u3680 2B96                           u3920 277A                           u5440 2174  
                         u5360 1F84                           u5280 1DC4                           u4480 5EC8  
                         u5600 3AFE                           u2960 4C18                           u4560 39F4  
                         u4800 14F2                           u4720 11E8                           u4640 0F86  
                         u5520 43FC                           u3841 2DF2                           u3761 2D1A  
                         u3681 2B92                           u3921 2776                           u5441 2170  
                         u5361 1F80                           u5281 1DC0                           u6137 51B6  
                         u6057 5810                           u4481 5EC4                           u5601 3AFA  
                         u2961 4C14                           u4561 39F0                           u4385 3FCE  
                         u4801 14EE                           u4721 11E4                           u4641 0F82  
                         u5521 43F8                           u3850 2E3E                           u3770 2D34  
                         u3690 2BA8                           u3930 278A                           u5450 21B2  
                         u5370 1FC2                           u5290 1E02                           u5610 3B44  
                         u2970 4C40                           u4570 3A0E                           u4490 3808  
                         u4386 3FD8                           u4810 1540                           u4730 121A  
                         u4650 0F98                           u5530 4434                           u3851 2E3A  
                         u3771 2D30                           u3691 2BA4                           u3931 2786  
                         u5451 21AE                           u5371 1FBE                           u5291 1DFE  
                         u6067 56DA                           u5611 3B40                           u2971 4C3C  
                         u4571 3A0A                           u4491 3802                           u4387 3FE8  
                         u4811 153C                           u4731 1216                           u4651 0F94  
                         u5531 4430                           u3860 2E6E                           u3780 2D52  
                         u3940 27C0                           u5460 21F0                           u5380 200C  
                         u5620 3B8A                           u2980 4C76                           u4580 3A1E  
                         u4900 17F8                           u4820 15EE                           u4740 1228  
                         u4660 1012                           u5540 4442                           u5700 360E  
                         u3861 2E6A                           u3781 2D4E                           u3941 27BC  
                         u5461 21EC                           u5381 2008                           u6077 5706  
                         u5621 3B86                           u2981 4C72                           u4581 3A1A  
                         u4901 17F4                           u4821 15EA                           u4741 1224  
                         u4661 100E                           u5541 443E                           u5701 360A  
                         u3870 2E9C                           u3790 2D72                           u3950 27D0  
                         u5470 2222                           u5390 203E                           u2990 4638  
                         u5630 3BD0                           u4910 5D86                           u4830 162A  
                         u4750 1252                           u4670 109E                           u4590 0E62  
                         u5550 446A                           u5710 3628                           u3871 2E98  
                         u3791 2D6E                           u3951 27CC                           u5471 221E  
                         u5391 203A                           u2991 4634                           u6087 5118  
                         u5631 3BCC                           u4911 5D7E                           u4831 1626  
                         u4751 124E                           u4671 109A                           u4591 0E5E  
                         u5551 4466                           u5711 3624                           u3960 294A  
                         u3880 2706                           u5640 3C16                           u5480 5F2E  
                         u4840 1638                           u4760 139A                           u4680 10D0  
                         u5560 4478                           u5720 36E4                           u3881 2702  
                         u6097 5A24                           u5641 3C12                           u5481 5F2A  
                         u4841 1634                           u4761 1396                           u4681 10CC  
                         u5561 4474                           u5721 36E0                           u3970 29A4  
                         u3890 2718                           u4930 4EAE                           u5650 3C5C  
                         u5570 55DA                           u4850 168C                           u4770 1400  
                         u4690 110E                           u5490 4384                           u5730 371A  
                         u3971 29A0                           u3891 2714                           u4931 4EAA  
                         u5651 3C58                           u5571 55D6                           u4851 1688  
                         u4771 13FC                           u4691 110A                           u5491 4380  
                         u5731 3716                           u3980 29C4                           u4940 4EC6  
                         u5660 3C7E                           u5580 3A68                           u4860 175E  
                         u4780 1448                           u5740 379E                           u3981 29C0  
                         u3965 2940                           u4941 4EC2                           u5661 3C7A  
                         u5581 3A64                           u4861 175A                           u4781 1444  
                         u5741 379A                           u3990 29D6                           u5670 3CC8  
                         u5590 3AB8                           u4870 177A                           u4790 1458  
                         u4950 3206                           u5750 37D4                           u3991 29D2  
                         u5671 3CC4                           u5591 3AB4                           u4871 1776  
                         u4791 1454                           u4951 3202                           u5751 37D0  
                         u4928 5D88                           u4880 17E2                           u4960 3256  
                         u4881 17DC                           u4961 3252                           u4890 17E4  
                         u4970 3276                           u5690 3594                           u4971 3272  
                         u5907 444E                           u5691 3590                           u5827 3578  
                         u4980 338C                           u4981 3388                           u5917 4484  
                         u5837 35A0                           u4990 603E                           u5927 4E88  
                         u4991 603A                           u5847 3680                           u5937 5EA4  
                         u5857 42F4                           u5947 578E                           u5867 4368  
                         u5957 57B8                           u5877 43A0                           u5967 5680  
                         u5887 43DA                           u5977 56AC                           u5897 4412  
                         u5987 5C30                           u5997 4FDC                  _LightBlueMove 591A  
                         abs@a 0013                           _dbuf 02A0                           _labs 553C  
                         _main 34E4                           _dtoa 37D8                           _prec 00E9  
                         _vals 016A                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                         btemp 005F                           _stop 527E                  ___fpclassifyf 4AF6  
                         prodh 000FF4                           prodl 000FF3                           start 0034  
              ___fldiv@new_exp 0043         __end_of_color_read_Red 5B52                __end_of_HighISR 0034  
       __end_of_color_read_lum 5B02                  _Backhalfblock 5662                   ___param_bank 000000  
              ReverseYellow@mL 0020                ReverseYellow@mR 0022                __end_of_RedMove 5E1C  
                        ??_abs 0015                          ??_pad 0017                   ?_readColours 000C  
                  _turnRight45 5BF2                _RunOneBlockTime 00F2               __end_of_LED_init 5FA8  
                ___fltol@sign1 0009                __end_of___aodiv 461C                          ?_labs 0001  
              __end_of___fladd 26EC                          ?_main 0001                          ?_dtoa 001C  
              __end_of___aomod 48EC                __end_of___fldiv 2EB0                __end_of___flneg 5E92  
              __end_of___flmul 2B16                __end_of___flsub 5CD4                __end_of___fltol 49F2  
                  colour_rel@B 0074                    colour_rel@G 0070                          ?_stop 0014  
                  colour_rel@L 0060                    colour_rel@R 006C                __end_of___lwdiv 5464  
                        i2l227 0030                   vfpfcnvrt@fmt 0097                          _TMR0H 000FD4  
                        _TMR0L 000FD3                __end_of_go_Home 3F22        __end_of_sendCharSerial4 6044  
   __end_of_I2C_2_Master_Start 6086     __end_of_I2C_2_Master_Write 6050                   YellowMove@mL 0020  
                        _flags 00ED                   YellowMove@mR 0022                          _fputc 4BF4  
                        _fputs 5D18                 delayed_ms@time 0001                          labs@a 0001  
                        pad@fp 0011                          _power 00F6                          _width 00E7  
                        _putch 6090                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 0020                          tablat 000FF5  
                ?_Buttons_init 0001                          plusw2 000FDB               ??_Colour_decider 004F  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 58C8  
               ?___fpclassifyf 0001        __end_of_color_read_Blue 5BF2          _I2C_2_Master_RepStart 6068  
             __end_of_BlueMove 53F0                 ?_Backhalfblock 001A                     PinkMove@mL 0020  
                   PinkMove@mR 0022                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 5464        __end_of_turnCalibration 4494                _reverseOneBlock 57C8  
                 __end_of_labs 55A2                   __end_of_main 37D8                   __end_of_dtoa 3A56  
                 __end_of_stop 52FC                _colour_rel$3263 0064                _colour_rel$3264 0068  
                       ??_labs 0005                         ??_main 00D1                         ??_dtoa 0026  
        __end_of_ReverseYellow 4D74               __end_of_PinkMove 5A10                         ??_stop 0018  
                __activetblptr 000003              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
               ??_Buttons_init 0001                         _RG6PPS 000E88                         i2l5781 002C  
                       i2l5777 000A                         i2l5779 001A                      ??_HighISR 0001  
     __end_of_color_click_init 5A62                         _RX4PPS 000E15                         _TX4REG 000EE4  
                   _OrangeMove 58C8               __end_of___xxtofl 42E8                      ??_RedMove 0024  
                ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE  
                ??_ReversePink 0024                         ___flge 49F2                         ___fleq 4ED4  
                    ??___aodiv 0011                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 5FA8              ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C  
                    ??___fldiv 003A                      ??___flneg 0005                      ??___flmul 0019  
                    ??___flsub 0032                      ??___fltol 0005                         _efgtoa 0E3E  
                    ??___lwdiv 000B                         _floorf 3F22                         _memcpy 5A62  
                       clear_0 54AA                         clear_1 54B6                         clear_2 54C2  
                       _motorL 0161                         _motorR 0158                         isa$std 000001  
                    ??_go_Home 0028                         pad@buf 0013                         dtoa@fp 001C  
                       _strcpy 5CD4                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                ___fpclassifyf@e 0009  
              ___fpclassifyf@u 000B                ___fpclassifyf@x 0001                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C  
                       putch@c 0001                ??_LightBlueMove 0024               __end_of_vfprintf 5876  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 005F               __end_of_turnLeft 50BA                     ___flge@ff1 002A  
                   _YellowMove 596C                     ___flge@ff2 002E                ??___fpclassifyf 0005  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
                   ___fleq@ff1 0032                     ___fleq@ff2 0036                fullSpeedBack@mL 0014  
              fullSpeedBack@mR 0016                     __accesstop 0060        __end_of__initialization 54C8  
      __end_of_reverseOneBlock 5820                     ___flneg@f1 0001       __end_of_color_read_Green 5BA2  
       ?_I2C_2_Master_RepStart 0001                ??_Backhalfblock 001E                  ___rparam_used 000001  
                    ?_LED_init 0001                     ___fltol@f1 0001               ?_color_read_Blue 0005  
              _Interrupts_init 6050                 __pcstackCOMRAM 0001               ?_turnCalibration 0020  
                _fullSpeedBack 50BA                   __pidataBANK0 6086                   __pidataBANK1 608C  
                __end_of_fputc 4CBE                  __end_of_fputs 5D5C                  __end_of_putch 6092  
            __end_of_GreenMove 5E5A            __end_of_Timer0_init 600E            __end_of_ReversePink 4E2A  
                    ?_BlueMove 0020                        ??_fputc 0005                        ??_fputs 000E  
         Colour_decider@F14367 00D3          __end_of_reverseDetect 5716                        ??_putch 0001  
                   __pbssBANK0 00D3                     __pbssBANK1 0100                     __pbssBANK2 0200  
              reverseDetect@mL 001A                reverseDetect@mR 001C                    ?_OrangeMove 0020  
             _Forwardhalfblock 5716                     ??_LED_init 0001                     _getTMR0val 55A2  
            __end_of_RetryMove 553C                      ?_PinkMove 0020              _color_writetoaddr 5FCE  
                   _delayed_ms 5E92                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 002A                        ?___fleq 0032             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                        ?_efgtoa 0060  
                      ?_floorf 004B                   ?_turnRight45 001A                        ?_memcpy 0001  
         __end_of_Buttons_init 6068              __end_of_TurnDelay 5F00          __end_of_timed_forward 4ED4  
          ??_color_writetoaddr 0004                        ?_strcpy 0001                  colour_rel@rel 004D  
               go_Home@WayBack 0024                      ?___xxtofl 0001                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5              ??_ForwardOneBlock 001E                     ??_BlueMove 0024  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5                    ?_YellowMove 0020  
                   _colour_rel 2EB0        __end_of_Interrupts_init 605C         color_writetoaddr@value 0003  
             ??_color_read_Red 0007                        _HighISR 0008               ??_color_read_lum 0007  
             ?_reverseOneBlock 001A      __end_of_color_writetoaddr 5FEE                        _RedMove 5DDE  
           _I2C_2_Master_Start 607C                     ??_PinkMove 0024                     _initUSART4 600E  
           _I2C_2_Master_Write 6044                        __Hparam 0000                        _WayBack 011A  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 5FEE  
                  RetryMove@mL 0020                    RetryMove@mR 0022        sendStringSerial4@string 0002  
            reverseOneBlock@mL 001A              reverseOneBlock@mR 001C                    _ReversePink 4D74  
                      ___aodiv 4494                        ___fladd 222C                        ___aomod 4788  
                      ___fldiv 2B16                        ___flneg 5E5A                        ___flmul 26EC  
                      ___flsub 5C8E                        ___fltol 48EC            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 53F0            ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8  
                 __psmallconst 0E00                   turnLeft45@mL 001A                   turnLeft45@mR 001C  
                      __pcinit 5464                        __ramtop 0E00                      ?_turnLeft 0014  
                      _go_Home 3CCE                        __ptext0 34E4                        __ptext1 42E8  
                      __ptext2 5876                        __ptext3 5820                        __ptext4 31DE  
                      __ptext5 0E3E                        __ptext6 5CD4                        __ptext7 5A62  
                      __ptext8 553C                        __ptext9 3F22                      _T2CONbits 000FBD  
                   ??___xxtofl 0005                      _T2HLTbits 000FBE                        efgtoa@c 0066  
                      efgtoa@d 0074                        efgtoa@e 0078                        efgtoa@f 0062  
                      efgtoa@g 008D                        efgtoa@h 0082                        efgtoa@i 0080  
                      efgtoa@l 0086                        efgtoa@m 0076                        efgtoa@n 008B  
                      efgtoa@p 006B                        efgtoa@t 006D                        efgtoa@u 0091  
                      efgtoa@w 007A                  _RxBufWriteCnt 00F1              color_read_lum@tmp 000A  
                      main@buf 0172                        _sprintf 5876           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 54C8                        floorf@e 0059  
                      floorf@m 0055                        floorf@u 005B                        floorf@x 004B  
                      memcpy@d 0007                        memcpy@n 0005                        memcpy@s 0009  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
                  ?_getTMR0val 0001                LightBlueMove@mL 0020                LightBlueMove@mR 0022  
              ??_fullSpeedBack 0018             ??_color_click_init 0005                     _move_count 01DA  
                  ?_delayed_ms 0001              turnCalibration@mL 0020              turnCalibration@mR 0022  
                   _lost_count 00EB              __end_of_vfpfcnvrt 34E4                     efgtoa@mode 0072  
                   efgtoa@sign 008A                        postdec1 000FE5                        postdec2 000FDD  
                  _Turn45Delay 00F4                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 009D                     ??_vfprintf 005F  
                      strcpy@d 0007                        strcpy@s 0005                _initDCmotorsPWM 51F6  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 501C                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                      _TRISHbits 000F88                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E               fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016  
                ReversePink@mL 0020                  ReversePink@mR 0022       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B               ?_Interrupts_init 0001  
                  ___flmul@grs 001E                   _consecuitive 0116                    _CCP1CONbits 000FAB  
                   main@colour 01D6                   _EUSART4RXbuf 0100                   _EUSART4TXbuf 0200  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001  
                    RedMove@mL 0020                      RedMove@mR 0022             ??_color_read_Green 0007  
                   _turnLeft45 5C40                 __end_of___flge 4AF6                 __end_of___fleq 4F7E  
               _fullSpeedAhead 5158                    vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6  
                  vfpfcnvrt@fp 0095                 __end_of___wmul 5FCE                 __end_of_efgtoa 1838  
               __end_of_floorf 4134                 __end_of_memcpy 5AB2                     floorf@F526 00DF  
     __end_of_Forwardhalfblock 5770                  ??_colour_move 002F                      _GreenMove 5E1C  
               __end_of_strcpy 5D18            start_initialization 5464                    __end_of_abs 5DDE  
                  __end_of_pad 5376                  _TxBufWriteCnt 00EF          __end_of_LightBlueMove 596C  
                 ??_OrangeMove 0024                   _Buttons_init 605C          __end_of___fpclassifyf 4BF4  
          color_read_Green@tmp 000A   colour_move@recognized_colour 002D          __end_of_Backhalfblock 56BC  
      __end_of_initDCmotorsPWM 527E                    vfprintf@fmt 00AA         __end_of_fullSpeedAhead 51F6  
                     ??___flge 0032                       ??___fleq 003A                      _RetryMove 54D2  
                     ??___wmul 0005            go_Home@Time_forward 0026                  ??_readColours 000E  
                     ??_efgtoa 0067                    __pdataBANK0 00F2                    __pdataBANK1 01D8  
              _ForwardOneBlock 5770                       ??_floorf 004F                       ??_memcpy 0007  
              Backhalfblock@mL 001A                Backhalfblock@mR 001C                       ??_strcpy 0005  
                    ___fladd@a 0005                      ___fladd@b 0001                  _ReverseYellow 4CBE  
                    ___fldiv@a 0036                      ___fldiv@b 0032                     ?_GreenMove 0020  
                 OrangeMove@mL 0020                   OrangeMove@mR 0022             __end_of_OrangeMove 591A  
                    ___flmul@a 0015                      ___flmul@b 0011                      ___flsub@a 002E  
                    ___flsub@b 002A                      _TurnDelay 5ECA                  __pcstackBANK0 0060  
                __pcstackBANK1 0172               ___aodiv@dividend 0001            __end_of_colour_move 3CCE  
                 ??_YellowMove 0024                       ?_HighISR 0001          Colour_decider@RGB_col 0066  
                     ?_RedMove 0020                    _efgtoa$2894 006F               ___lwdiv@dividend 0007  
                    _dtoa$2863 002E                   ?_Timer0_init 0001                    ?_turnLeft45 001A  
              ?_fullSpeedAhead 0014                      __pintcode 0008                   ?_ReversePink 0020  
                   ?_RetryMove 0020                timed_forward@mL 0014                       ?___aodiv 0001  
              timed_forward@mR 0016                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0032               ___aodiv@quotient 0013                       ?___flneg 0001  
                     ?___flmul 0011                       ?___flsub 002A                       ?___fltol 0001  
          _Colour_decider$3265 0060                       ?___lwdiv 0007                       ?_go_Home 0024  
         I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020             __end_of_YellowMove 59BE  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              timed_forward@time 0018  
          __end_of_readColours 5662              _I2C_2_Master_Idle 5F5A              _I2C_2_Master_Init 5F30  
            _I2C_2_Master_Read 5D5C              _I2C_2_Master_Stop 6072                     ?_TurnDelay 0001  
                 _RxBufReadCnt 00F0             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0  
             getTMR0val@moving 0005                 colour_rel@vals 004B              _sendStringSerial4 5F00  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _LATHbits 000F80                   ??_getTMR0val 0001                       _PIE0bits 000E29  
                     _LED_init 5F82             ?_sendStringSerial4 0002        __end_of_ForwardOneBlock 57C8  
                 ??_delayed_ms 0003                    turnRight@mL 0014                    turnRight@mR 0016  
                    _lost_flag 0114                       _PIR0bits 000E33                       _PIR4bits 000E37  
                     i2u568_40 001A                       i2u568_41 0016               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 000EDA                 _Colour_decider 1838  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 31DE  
    __end_of_I2C_2_Master_Idle 5F82      __end_of_I2C_2_Master_Init 5F5A      __end_of_I2C_2_Master_Read 5D9E  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 607C                   setMotorPWM@m 000E  
  I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024                    _colour_move 3A56  
            ??_color_read_Blue 0007             __end_of_getTMR0val 5604                   _TxBufReadCnt 00EE  
                     _BlueMove 5376                      _turnRight 4F7E             __end_of_delayed_ms 5ECA  
                   vfpfcnvrt@c 00A5              ??_turnCalibration 0024                      copy_data0 5478  
                    copy_data1 5498      __end_of_sendStringSerial4 5F30                   ??_colour_rel 004F  
                _reverseDetect 56BC  __end_of_I2C_2_Master_RepStart 6072             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 4788                   ??_initUSART4 0001                       _PinkMove 59BE  
                     __Hrparam 0000         __end_of_Colour_decider 222C                      memcpy@tmp 000B  
                   vfprintf@ap 00AC                       __Lrparam 0000                     vfprintf@fp 00A8  
        __end_of_fullSpeedBack 5158                    ??_RetryMove 0024           TurnDelay@Turn45Delay 0001  
                  _readColours 5604                ??_ReverseYellow 0024                     ?_vfpfcnvrt 0095  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 31DE  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00E3                     _ANSELFbits 000EB4  
                _timed_forward 4E2A                     sprintf@fmt 00B2              ?_Forwardhalfblock 001A  
                     ___xxtofl 4134                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                  ??_TurnDelay 0003                   _Time_forward 023C                ___lwdiv@divisor 0009  
           __end_of_initUSART4 602C                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 4AF6                       __ptext11 48EC  
                     __ptext20 4494                       __ptext12 5E5A                       __ptext21 5F00  
                     __ptext13 37D8                       __ptext30 600E                       __ptext22 602C  
                     __ptext14 52FC                       __ptext31 51F6                       __ptext23 5604  
                     __ptext15 5D18                       __ptext40 5770                       __ptext32 55A2  
                     __ptext24 5AB2                       __ptext16 4BF4                       __ptext41 5DDE  
                     __ptext33 2EB0                       __ptext25 5B02                       __ptext17 6090  
                     __ptext50 54D2                       __ptext42 58C8                       __ptext34 3A56  
                     __ptext26 5B52                       __ptext18 5D9E                       __ptext51 59BE  
                     __ptext43 591A                       __ptext35 3CCE                       __ptext27 5BA2  
                     __ptext19 4788                       __ptext60 6044                       __ptext52 5C40  
                     __ptext44 5E1C                       __ptext36 4E2A                       __ptext28 6068  
                     __ptext61 6072                       __ptext53 501C                       __ptext45 5376  
                     __ptext37 5E92                       __ptext29 5D5C                       __ptext70 5158  
                     __ptext62 607C                       __ptext54 5ECA                       __ptext46 5662  
                     __ptext38 4CBE                       __ptext71 461C                       __ptext63 5F5A  
                     __ptext55 57C8                       __ptext47 596C                       __ptext39 4D74  
                     __ptext80 4ED4                       __ptext72 5FA8                       __ptext64 5F30  
                     __ptext56 56BC                       __ptext48 5BF2                       __ptext81 2B16  
                     __ptext73 53F0                       __ptext65 5FEE                       __ptext57 50BA  
                     __ptext49 4F7E                       __ptext82 605C                       __ptext74 1838  
                     __ptext66 5F82                       __ptext58 5A10                       __ptext75 4134  
                     __ptext67 6050                       __ptext59 5FCE                       __ptext76 5C8E  
                     __ptext68 5716                       __ptext77 222C                       __ptext69 527E  
                     __ptext78 26EC                       __ptext79 49F2                 ?_reverseDetect 001A  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     strcpy@dest 0001  
                   turnLeft@mL 0014                     turnLeft@mR 0016               ?_ForwardOneBlock 001A  
                     go_Home@i 002B                ?_Colour_decider 004B                       efgtoa@fp 0060  
                     efgtoa@ne 0069                       efgtoa@pp 0071                       efgtoa@ou 007C  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005F  
                     _vfprintf 5820                       _run_flag 01D8                  ??_turnRight45 001E  
                     _turnLeft 501C               ___aomod@dividend 0001                 ?_timed_forward 0014  
                  delayed_ms@i 0004              ??_reverseOneBlock 001E                     _INTCONbits 000FF2  
                     memcpy@d1 0001                       memcpy@s1 0003                    _setMotorPWM 461C  
                turnRight45@mL 001A                  turnRight45@mR 001C                       intlevel2 0000  
                    sprintf@ap 00C4               ??_fullSpeedAhead 0018                      strcpy@src 0003  
               getTMR0val@temp 0003                   ??_turnLeft45 001E                     BlueMove@mL 0020  
                   BlueMove@mR 0022                    efgtoa@nmode 0073                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 009B                ___aomod@counter 0011               _color_click_init 5A10  
                     sprintf@f 00C6                       sprintf@s 00B0                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C            __end_of_turnRight45 5C40                    _prev_colour 0118  
              ??_reverseDetect 001E                    ??_turnRight 0018                  ___fladd@signs 000D  
           __end_of_turnLeft45 5C8E                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
              _sendCharSerial4 602C                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ___aomod@sign 0012  
