

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 18:58:25 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    87                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    88                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    89   000000                     
    90                           ; Generated 06/04/2022 GMT
    91                           ; 
    92                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution. Publication is not required when
   106                           ;        this file is used in an embedded application.
   107                           ; 
   108                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   109                           ;        software without specific prior written permission.
   110                           ; 
   111                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   112                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   113                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   114                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   115                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   116                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   117                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   118                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   119                           ; 
   120                           ; 
   121                           ; Code-generator required, PIC18F67K40 Definitions
   122                           ; 
   123                           ; SFR Addresses
   124   000000                     
   125                           	psect	idataBANK0
   126   004BAC                     __pidataBANK0:
   127                           	callstack 0
   128                           
   129                           ;initializer for _DataFlag
   130   004BAC  01                 	db	1
   131                           
   132                           	psect	idataBANK1
   133   004BA2                     __pidataBANK1:
   134                           	callstack 0
   135                           
   136                           ;initializer for _high_threshold
   137   004BA2  03E8               	dw	1000
   138                           
   139                           ;initializer for _Turn45Delay
   140   004BA4  00DC               	dw	220
   141                           
   142                           ;initializer for _power
   143   004BA6  0032               	dw	50
   144   000000                     _TRISEbits	set	3973
   145   000000                     _TX4REG	set	3812
   146   000000                     _RC4STAbits	set	3815
   147   000000                     _SP4BRGH	set	3814
   148   000000                     _SSP2CON2bits	set	3802
   149   000000                     _RX4PPS	set	3605
   150   000000                     _SSP2CLKPPS	set	3612
   151   000000                     _SSP2DATPPS	set	3613
   152   000000                     _ANSELDbits	set	3751
   153   000000                     _SSP2ADD	set	3798
   154   000000                     _SSP2CON1bits	set	3801
   155   000000                     _LATAbits	set	3961
   156   000000                     _LATFbits	set	3966
   157   000000                     _LATGbits	set	3967
   158   000000                     _TRISAbits	set	3969
   159   000000                     _TRISGbits	set	3975
   160   000000                     _PORTFbits	set	3982
   161   000000                     _CCPR2H	set	4006
   162   000000                     _CCPR1H	set	4010
   163   000000                     _TRISCbits	set	3971
   164   000000                     _TRISDbits	set	3972
   165   000000                     _TRISFbits	set	3974
   166   000000                     _LATDbits	set	3964
   167   000000                     _RC4REG	set	3811
   168   000000                     _SP4BRGL	set	3813
   169   000000                     _TX4STAbits	set	3816
   170   000000                     _BAUD4CONbits	set	3817
   171   000000                     _SSP2CON2	set	3802
   172   000000                     _SSP2STAT	set	3800
   173   000000                     _ANSELFbits	set	3764
   174   000000                     _SSP2BUF	set	3797
   175   000000                     _PIE4bits	set	3629
   176   000000                     _PIR4bits	set	3639
   177   000000                     _RC0PPS	set	3682
   178   000000                     _RD5PPS	set	3695
   179   000000                     _RE2PPS	set	3700
   180   000000                     _RD6PPS	set	3696
   181   000000                     _RC7PPS	set	3689
   182   000000                     _CCPR4H	set	3873
   183   000000                     _CCPR3H	set	3877
   184   000000                     _CCP1CONbits	set	4011
   185   000000                     _CCPTMRS0bits	set	4013
   186   000000                     _T2PR	set	4028
   187   000000                     _T2CONbits	set	4029
   188   000000                     _TMR0L	set	4051
   189   000000                     _TMR0H	set	4052
   190   000000                     _CCP2CONbits	set	4007
   191   000000                     _CCP3CONbits	set	3878
   192   000000                     _CCP4CONbits	set	3874
   193   000000                     _T0CON1bits	set	4054
   194   000000                     _T0CON0bits	set	4053
   195   000000                     _RE4PPS	set	3702
   196   000000                     _RG6PPS	set	3720
   197   000000                     _T2CLKCONbits	set	4031
   198   000000                     _T2HLTbits	set	4030
   199                           
   200                           	psect	smallconst
   201   000E00                     __psmallconst:
   202                           	callstack 0
   203   000E00  00                 	db	0
   204   000E01                     STR_1:
   205   000E01  72                 	db	114	;'r'
   206   000E02  65                 	db	101	;'e'
   207   000E03  64                 	db	100	;'d'
   208   000E04  3D                 	db	61	;'='
   209   000E05  25                 	db	37
   210   000E06  64                 	db	100	;'d'
   211   000E07  20                 	db	32
   212   000E08  67                 	db	103	;'g'
   213   000E09  72                 	db	114	;'r'
   214   000E0A  65                 	db	101	;'e'
   215   000E0B  65                 	db	101	;'e'
   216   000E0C  6E                 	db	110	;'n'
   217   000E0D  3D                 	db	61	;'='
   218   000E0E  25                 	db	37
   219   000E0F  64                 	db	100	;'d'
   220   000E10  20                 	db	32
   221   000E11  62                 	db	98	;'b'
   222   000E12  6C                 	db	108	;'l'
   223   000E13  75                 	db	117	;'u'
   224   000E14  65                 	db	101	;'e'
   225   000E15  3D                 	db	61	;'='
   226   000E16  25                 	db	37
   227   000E17  64                 	db	100	;'d'
   228   000E18  20                 	db	32
   229   000E19  74                 	db	116	;'t'
   230   000E1A  69                 	db	105	;'i'
   231   000E1B  6D                 	db	109	;'m'
   232   000E1C  65                 	db	101	;'e'
   233   000E1D  72                 	db	114	;'r'
   234   000E1E  3D                 	db	61	;'='
   235   000E1F  25                 	db	37
   236   000E20  64                 	db	100	;'d'
   237   000E21  20                 	db	32
   238   000E22  0D                 	db	13
   239   000E23  0A                 	db	10
   240   000E24  00                 	db	0
   241   000E25  00                 	db	0	; dummy byte at the end
   242   000000                     
   243                           ; #config settings
   244                           
   245                           	psect	cinit
   246   004190                     __pcinit:
   247                           	callstack 0
   248   004190                     start_initialization:
   249                           	callstack 0
   250   004190                     __initialization:
   251                           	callstack 0
   252                           
   253                           ; Initialize objects allocated to BANK1 (6 bytes)
   254                           ; load TBLPTR registers with __pidataBANK1
   255   004190  0EA2               	movlw	low __pidataBANK1
   256   004192  6EF6               	movwf	tblptrl,c
   257   004194  0E4B               	movlw	high __pidataBANK1
   258   004196  6EF7               	movwf	tblptrh,c
   259   004198  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   260   00419A  6EF8               	movwf	tblptru,c
   261   00419C  EE01  F0CF         	lfsr	0,__pdataBANK1
   262   0041A0  EE10 F006          	lfsr	1,6
   263   0041A4                     copy_data0:
   264   0041A4  0009               	tblrd		*+
   265   0041A6  CFF5 FFEE          	movff	tablat,postinc0
   266   0041AA  50E5               	movf	postdec1,w,c
   267   0041AC  50E1               	movf	fsr1l,w,c
   268   0041AE  E1FA               	bnz	copy_data0
   269                           
   270                           ; Initialize objects allocated to BANK0 (1 bytes)
   271                           ; load TBLPTR registers with __pidataBANK0
   272   0041B0  0EAC               	movlw	low __pidataBANK0
   273   0041B2  6EF6               	movwf	tblptrl,c
   274   0041B4  0E4B               	movlw	high __pidataBANK0
   275   0041B6  6EF7               	movwf	tblptrh,c
   276   0041B8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   277   0041BA  6EF8               	movwf	tblptru,c
   278   0041BC  0009               	tblrd		*+	;fetch initializer
   279   0041BE  CFF5 F0FE          	movff	tablat,__pdataBANK0
   280                           
   281                           ; Clear objects allocated to BANK2 (100 bytes)
   282   0041C2  EE02  F000         	lfsr	0,__pbssBANK2
   283   0041C6  0E64               	movlw	100
   284   0041C8                     clear_0:
   285   0041C8  6AEE               	clrf	postinc0,c
   286   0041CA  06E8               	decf	wreg,f,c
   287   0041CC  E1FD               	bnz	clear_0
   288                           
   289                           ; Clear objects allocated to BANK1 (207 bytes)
   290   0041CE  EE01  F000         	lfsr	0,__pbssBANK1
   291   0041D2  0ECF               	movlw	207
   292   0041D4                     clear_1:
   293   0041D4  6AEE               	clrf	postinc0,c
   294   0041D6  06E8               	decf	wreg,f,c
   295   0041D8  E1FD               	bnz	clear_1
   296                           
   297                           ; Clear objects allocated to BANK0 (14 bytes)
   298   0041DA  EE00  F0F0         	lfsr	0,__pbssBANK0
   299   0041DE  0E0E               	movlw	14
   300   0041E0                     clear_2:
   301   0041E0  6AEE               	clrf	postinc0,c
   302   0041E2  06E8               	decf	wreg,f,c
   303   0041E4  E1FD               	bnz	clear_2
   304                           
   305                           ; Clear objects allocated to COMRAM (4 bytes)
   306   0041E6  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   307   0041E8  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   308   0041EA  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   309   0041EC  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   310   0041EE                     end_of_initialization:
   311                           	callstack 0
   312   0041EE                     __end_of__initialization:
   313                           	callstack 0
   314   0041EE  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   315   0041F0  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   316   0041F2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   317   0041F4  6EF8               	movwf	tblptru,c
   318   0041F6  0E0E               	movlw	high __Lsmallconst
   319   0041F8  6EF7               	movwf	tblptrh,c
   320   0041FA  0100               	movlb	0
   321   0041FC  EF81  F00C         	goto	_main	;jump to C main() function
   322                           
   323                           	psect	bssCOMRAM
   324   00005B                     __pbssCOMRAM:
   325                           	callstack 0
   326   00005B                     _TxBufReadCnt:
   327                           	callstack 0
   328   00005B                     	ds	1
   329   00005C                     _TxBufWriteCnt:
   330                           	callstack 0
   331   00005C                     	ds	1
   332   00005D                     _RxBufReadCnt:
   333                           	callstack 0
   334   00005D                     	ds	1
   335   00005E                     _RxBufWriteCnt:
   336                           	callstack 0
   337   00005E                     	ds	1
   338                           
   339                           	psect	bssBANK0
   340   0000F0                     __pbssBANK0:
   341                           	callstack 0
   342   0000F0                     _prec:
   343                           	callstack 0
   344   0000F0                     	ds	2
   345   0000F2                     _move_count:
   346                           	callstack 0
   347   0000F2                     	ds	2
   348   0000F4                     _flags:
   349                           	callstack 0
   350   0000F4                     	ds	1
   351   0000F5                     _motorL:
   352                           	callstack 0
   353   0000F5                     	ds	9
   354                           
   355                           	psect	dataBANK0
   356   0000FE                     __pdataBANK0:
   357                           	callstack 0
   358   0000FE                     _DataFlag:
   359                           	callstack 0
   360   0000FE                     	ds	1
   361                           
   362                           	psect	bssBANK1
   363   000100                     __pbssBANK1:
   364                           	callstack 0
   365   000100                     _EUSART4TXbuf:
   366                           	callstack 0
   367   000100                     	ds	60
   368   00013C                     _EUSART4RXbuf:
   369                           	callstack 0
   370   00013C                     	ds	20
   371   000150                     	ds	12
   372   00015C                     _width:
   373                           	callstack 0
   374   00015C                     	ds	2
   375   00015E                     _low_threshold:
   376                           	callstack 0
   377   00015E                     	ds	2
   378   000160                     _WayBack:
   379                           	callstack 0
   380   000160                     	ds	50
   381   000192                     _dbuf:
   382                           	callstack 0
   383   000192                     	ds	32
   384   0001B2                     _rel:
   385                           	callstack 0
   386   0001B2                     	ds	12
   387   0001BE                     _motorR:
   388                           	callstack 0
   389   0001BE                     	ds	9
   390   0001C7                     _vals:
   391                           	callstack 0
   392   0001C7                     	ds	8
   393                           
   394                           	psect	dataBANK1
   395   0001CF                     __pdataBANK1:
   396                           	callstack 0
   397   0001CF                     _high_threshold:
   398                           	callstack 0
   399   0001CF                     	ds	2
   400   0001D1                     _Turn45Delay:
   401                           	callstack 0
   402   0001D1                     	ds	2
   403   0001D3                     _power:
   404                           	callstack 0
   405   0001D3                     	ds	2
   406                           
   407                           	psect	bssBANK2
   408   000200                     __pbssBANK2:
   409                           	callstack 0
   410   000200                     _Time_forward:
   411                           	callstack 0
   412   000200                     	ds	100
   413                           
   414                           	psect	cstackBANK0
   415   000060                     __pcstackBANK0:
   416                           	callstack 0
   417   000060                     ?_sprintf:
   418                           	callstack 0
   419   000060                     sprintf@s:
   420                           	callstack 0
   421   000060                     _Colour_decider$2807:
   422                           	callstack 0
   423                           
   424                           ; 4 bytes @ 0x0
   425   000060                     	ds	2
   426   000062                     sprintf@fmt:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x2
   430   000062                     	ds	2
   431   000064                     Colour_decider@Cmax_i:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x4
   435   000064                     	ds	2
   436   000066                     Colour_decider@RGB_col:
   437                           	callstack 0
   438                           
   439                           ; 12 bytes @ 0x6
   440   000066                     	ds	6
   441   00006C                     sprintf@ap:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0xC
   445   00006C                     	ds	2
   446   00006E                     sprintf@f:
   447                           	callstack 0
   448                           
   449                           ; 11 bytes @ 0xE
   450   00006E                     	ds	4
   451   000072                     Colour_decider@Cmax:
   452                           	callstack 0
   453                           
   454                           ; 4 bytes @ 0x12
   455   000072                     	ds	4
   456   000076                     Colour_decider@Cmin:
   457                           	callstack 0
   458                           
   459                           ; 4 bytes @ 0x16
   460   000076                     	ds	4
   461   00007A                     Colour_decider@i:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x1A
   465   00007A                     	ds	2
   466   00007C                     Colour_decider@Hue:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x1C
   470   00007C                     	ds	4
   471   000080                     main@buf:
   472                           	callstack 0
   473                           
   474                           ; 100 bytes @ 0x20
   475   000080                     	ds	100
   476   0000E4                     main@temp:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x84
   480   0000E4                     	ds	2
   481   0000E6                     main@run_flag:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x86
   485   0000E6                     	ds	2
   486   0000E8                     main@consecuitive:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x88
   490   0000E8                     	ds	2
   491   0000EA                     main@colour:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x8A
   495   0000EA                     	ds	2
   496   0000EC                     main@fakeTimer:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x8C
   500   0000EC                     	ds	2
   501   0000EE                     main@prev_colour:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x8E
   505   0000EE                     	ds	2
   506                           
   507                           	psect	cstackCOMRAM
   508   000001                     __pcstackCOMRAM:
   509                           	callstack 0
   510   000001                     ??_I2C_2_Master_Idle:
   511   000001                     ?___wmul:
   512                           	callstack 0
   513   000001                     ?___fladd:
   514                           	callstack 0
   515   000001                     ?___xxtofl:
   516                           	callstack 0
   517   000001                     ?___aodiv:
   518                           	callstack 0
   519   000001                     ?___aomod:
   520                           	callstack 0
   521   000001                     sendCharSerial4@charToSend:
   522                           	callstack 0
   523   000001                     initDCmotorsPWM@PWMperiod:
   524                           	callstack 0
   525   000001                     ___wmul@multiplier:
   526                           	callstack 0
   527   000001                     fputc@c:
   528                           	callstack 0
   529   000001                     ___flge@ff1:
   530                           	callstack 0
   531   000001                     ___fladd@b:
   532                           	callstack 0
   533   000001                     ___xxtofl@val:
   534                           	callstack 0
   535   000001                     ___aodiv@dividend:
   536                           	callstack 0
   537   000001                     ___aomod@dividend:
   538                           	callstack 0
   539                           
   540                           ; 8 bytes @ 0x0
   541   000001                     	ds	1
   542   000002                     ??_I2C_2_Master_Read:
   543   000002                     I2C_2_Master_Write@data_byte:
   544                           	callstack 0
   545   000002                     sendStringSerial4@string:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x1
   549   000002                     	ds	1
   550   000003                     color_writetoaddr@value:
   551                           	callstack 0
   552   000003                     I2C_2_Master_Read@ack:
   553                           	callstack 0
   554   000003                     ___wmul@multiplicand:
   555                           	callstack 0
   556   000003                     fputc@fp:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x2
   560   000003                     	ds	1
   561   000004                     color_writetoaddr@address:
   562                           	callstack 0
   563   000004                     I2C_2_Master_Read@tmp:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x3
   567   000004                     	ds	1
   568   000005                     ??_fputc:
   569   000005                     ??_color_click_init:
   570   000005                     ??___xxtofl:
   571   000005                     ?_color_read_lum:
   572                           	callstack 0
   573   000005                     ?_color_read_Red:
   574                           	callstack 0
   575   000005                     ?_color_read_Green:
   576                           	callstack 0
   577   000005                     ?_color_read_Blue:
   578                           	callstack 0
   579   000005                     ___wmul@product:
   580                           	callstack 0
   581   000005                     ___flge@ff2:
   582                           	callstack 0
   583   000005                     ___fladd@a:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x4
   587   000005                     	ds	2
   588   000007                     ??_color_read_lum:
   589   000007                     ??_color_read_Red:
   590   000007                     ??_color_read_Green:
   591   000007                     ??_color_read_Blue:
   592   000007                     ?___lwdiv:
   593                           	callstack 0
   594   000007                     ___lwdiv@dividend:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x6
   598   000007                     	ds	2
   599   000009                     ??___fladd:
   600   000009                     ??___flge:
   601   000009                     ___xxtofl@sign:
   602                           	callstack 0
   603   000009                     ___lwdiv@divisor:
   604                           	callstack 0
   605   000009                     ___aodiv@divisor:
   606                           	callstack 0
   607   000009                     ___aomod@divisor:
   608                           	callstack 0
   609                           
   610                           ; 8 bytes @ 0x8
   611   000009                     	ds	1
   612   00000A                     ___xxtofl@exp:
   613                           	callstack 0
   614   00000A                     color_read_lum@tmp:
   615                           	callstack 0
   616   00000A                     color_read_Red@tmp:
   617                           	callstack 0
   618   00000A                     color_read_Green@tmp:
   619                           	callstack 0
   620   00000A                     color_read_Blue@tmp:
   621                           	callstack 0
   622   00000A                     fputs@s:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x9
   626   00000A                     	ds	1
   627   00000B                     ___lwdiv@quotient:
   628                           	callstack 0
   629   00000B                     ___xxtofl@arg:
   630                           	callstack 0
   631                           
   632                           ; 4 bytes @ 0xA
   633   00000B                     	ds	1
   634   00000C                     readColours@vals:
   635                           	callstack 0
   636   00000C                     fputs@fp:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0xB
   640   00000C                     	ds	1
   641   00000D                     ___lwdiv@counter:
   642                           	callstack 0
   643   00000D                     ___fladd@signs:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0xC
   647   00000D                     	ds	1
   648   00000E                     ___fladd@aexp:
   649                           	callstack 0
   650   00000E                     fputs@c:
   651                           	callstack 0
   652   00000E                     setMotorPWM@m:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0xD
   656   00000E                     	ds	1
   657   00000F                     ___fladd@bexp:
   658                           	callstack 0
   659   00000F                     fputs@i:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0xE
   663   00000F                     	ds	1
   664   000010                     ??_setMotorPWM:
   665   000010                     ___fladd@grs:
   666                           	callstack 0
   667                           
   668                           ; 1 bytes @ 0xF
   669   000010                     	ds	1
   670   000011                     ?___flsub:
   671                           	callstack 0
   672   000011                     ___aodiv@counter:
   673                           	callstack 0
   674   000011                     ___aomod@counter:
   675                           	callstack 0
   676   000011                     pad@fp:
   677                           	callstack 0
   678   000011                     ___flsub@b:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x10
   682   000011                     	ds	1
   683   000012                     setMotorPWM@posDuty:
   684                           	callstack 0
   685   000012                     ___aodiv@sign:
   686                           	callstack 0
   687   000012                     ___aomod@sign:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x11
   691   000012                     	ds	1
   692   000013                     ?_abs:
   693                           	callstack 0
   694   000013                     setMotorPWM@negDuty:
   695                           	callstack 0
   696   000013                     pad@buf:
   697                           	callstack 0
   698   000013                     abs@a:
   699                           	callstack 0
   700   000013                     ___aodiv@quotient:
   701                           	callstack 0
   702                           
   703                           ; 8 bytes @ 0x12
   704   000013                     	ds	1
   705   000014                     stop@mL:
   706                           	callstack 0
   707   000014                     turnLeft@mL:
   708                           	callstack 0
   709   000014                     turnRight@mL:
   710                           	callstack 0
   711   000014                     fullSpeedAhead@mL:
   712                           	callstack 0
   713   000014                     fullSpeedBack@mL:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x13
   717   000014                     	ds	1
   718   000015                     ??_abs:
   719   000015                     pad@p:
   720                           	callstack 0
   721   000015                     ___flsub@a:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0x14
   725   000015                     	ds	1
   726   000016                     stop@mR:
   727                           	callstack 0
   728   000016                     turnLeft@mR:
   729                           	callstack 0
   730   000016                     turnRight@mR:
   731                           	callstack 0
   732   000016                     fullSpeedAhead@mR:
   733                           	callstack 0
   734   000016                     fullSpeedBack@mR:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x15
   738   000016                     	ds	1
   739   000017                     ??_pad:
   740                           
   741                           ; 1 bytes @ 0x16
   742   000017                     	ds	1
   743   000018                     ??_fullSpeedAhead:
   744   000018                     ??_stop:
   745   000018                     ??_turnLeft:
   746   000018                     ??_turnRight:
   747   000018                     ??_fullSpeedBack:
   748   000018                     pad@i:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x17
   752   000018                     	ds	1
   753   000019                     ?___fldiv:
   754                           	callstack 0
   755   000019                     ___fleq@ff1:
   756                           	callstack 0
   757   000019                     ___fldiv@b:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x18
   761   000019                     	ds	1
   762   00001A                     turnRight45@mL:
   763                           	callstack 0
   764   00001A                     turnLeft45@mL:
   765                           	callstack 0
   766   00001A                     reverseDetect@mL:
   767                           	callstack 0
   768   00001A                     reverseOneBlock@mL:
   769                           	callstack 0
   770   00001A                     ForwardOneBlock@mL:
   771                           	callstack 0
   772   00001A                     Forwardhalfblock@mL:
   773                           	callstack 0
   774   00001A                     RetryMove@mL:
   775                           	callstack 0
   776   00001A                     pad@w:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x19
   780   00001A                     	ds	2
   781   00001C                     turnRight45@mR:
   782                           	callstack 0
   783   00001C                     turnLeft45@mR:
   784                           	callstack 0
   785   00001C                     reverseDetect@mR:
   786                           	callstack 0
   787   00001C                     reverseOneBlock@mR:
   788                           	callstack 0
   789   00001C                     ForwardOneBlock@mR:
   790                           	callstack 0
   791   00001C                     Forwardhalfblock@mR:
   792                           	callstack 0
   793   00001C                     RetryMove@mR:
   794                           	callstack 0
   795   00001C                     dtoa@fp:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x1B
   799   00001C                     	ds	1
   800   00001D                     ___fleq@ff2:
   801                           	callstack 0
   802   00001D                     ___fldiv@a:
   803                           	callstack 0
   804                           
   805                           ; 4 bytes @ 0x1C
   806   00001D                     	ds	1
   807   00001E                     ??_Forwardhalfblock:
   808   00001E                     ??_RetryMove:
   809   00001E                     ??_turnRight45:
   810   00001E                     ??_turnLeft45:
   811   00001E                     ??_reverseDetect:
   812   00001E                     ??_reverseOneBlock:
   813   00001E                     ??_ForwardOneBlock:
   814   00001E                     dtoa@d:
   815                           	callstack 0
   816                           
   817                           ; 8 bytes @ 0x1D
   818   00001E                     	ds	2
   819   000020                     RedMove@mL:
   820                           	callstack 0
   821   000020                     GreenMove@mL:
   822                           	callstack 0
   823   000020                     BlueMove@mL:
   824                           	callstack 0
   825   000020                     YellowMove@mL:
   826                           	callstack 0
   827   000020                     PinkMove@mL:
   828                           	callstack 0
   829   000020                     OrangeMove@mL:
   830                           	callstack 0
   831   000020                     LightBlueMove@mL:
   832                           	callstack 0
   833   000020                     ReverseYellow@mL:
   834                           	callstack 0
   835   000020                     ReversePink@mL:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x1F
   839   000020                     	ds	1
   840   000021                     ??___fldiv:
   841   000021                     ??___fleq:
   842                           
   843                           ; 1 bytes @ 0x20
   844   000021                     	ds	1
   845   000022                     RedMove@mR:
   846                           	callstack 0
   847   000022                     GreenMove@mR:
   848                           	callstack 0
   849   000022                     BlueMove@mR:
   850                           	callstack 0
   851   000022                     YellowMove@mR:
   852                           	callstack 0
   853   000022                     PinkMove@mR:
   854                           	callstack 0
   855   000022                     OrangeMove@mR:
   856                           	callstack 0
   857   000022                     LightBlueMove@mR:
   858                           	callstack 0
   859   000022                     ReverseYellow@mR:
   860                           	callstack 0
   861   000022                     ReversePink@mR:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x21
   865   000022                     	ds	2
   866   000024                     go_Home@WayBack:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x23
   870   000024                     	ds	1
   871   000025                     ___fldiv@rem:
   872                           	callstack 0
   873                           
   874                           ; 4 bytes @ 0x24
   875   000025                     	ds	1
   876   000026                     ??_dtoa:
   877   000026                     go_Home@Time_forward:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x25
   881   000026                     	ds	2
   882   000028                     ??_go_Home:
   883                           
   884                           ; 1 bytes @ 0x27
   885   000028                     	ds	1
   886   000029                     ___fldiv@sign:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x28
   890   000029                     	ds	1
   891   00002A                     ___fldiv@new_exp:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x29
   895   00002A                     	ds	2
   896   00002C                     ___fldiv@grs:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0x2B
   900   00002C                     	ds	1
   901   00002D                     go_Home@i:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x2C
   905   00002D                     	ds	1
   906   00002E                     _dtoa$2482:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x2D
   910   00002E                     	ds	2
   911   000030                     ___fldiv@bexp:
   912                           	callstack 0
   913   000030                     dtoa@p:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x2F
   917   000030                     	ds	1
   918   000031                     ___fldiv@aexp:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x30
   922   000031                     	ds	1
   923   000032                     ?___flmul:
   924                           	callstack 0
   925   000032                     colour_rel@vals:
   926                           	callstack 0
   927   000032                     dtoa@w:
   928                           	callstack 0
   929   000032                     ___flmul@b:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x31
   933   000032                     	ds	2
   934   000034                     colour_rel@rel:
   935                           	callstack 0
   936   000034                     dtoa@n:
   937                           	callstack 0
   938                           
   939                           ; 8 bytes @ 0x33
   940   000034                     	ds	2
   941   000036                     colour_rel@L:
   942                           	callstack 0
   943   000036                     ___flmul@a:
   944                           	callstack 0
   945                           
   946                           ; 4 bytes @ 0x35
   947   000036                     	ds	4
   948   00003A                     ??___flmul:
   949   00003A                     _colour_rel$2805:
   950                           	callstack 0
   951                           
   952                           ; 4 bytes @ 0x39
   953   00003A                     	ds	2
   954   00003C                     dtoa@i:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x3B
   958   00003C                     	ds	2
   959   00003E                     ___flmul@sign:
   960                           	callstack 0
   961   00003E                     dtoa@s:
   962                           	callstack 0
   963   00003E                     _colour_rel$2806:
   964                           	callstack 0
   965                           
   966                           ; 4 bytes @ 0x3D
   967   00003E                     	ds	1
   968   00003F                     vfpfcnvrt@fp:
   969                           	callstack 0
   970   00003F                     ___flmul@grs:
   971                           	callstack 0
   972                           
   973                           ; 4 bytes @ 0x3E
   974   00003F                     	ds	2
   975   000041                     vfpfcnvrt@fmt:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x40
   979   000041                     	ds	1
   980   000042                     colour_rel@R:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x41
   984   000042                     	ds	1
   985   000043                     ___flmul@aexp:
   986                           	callstack 0
   987   000043                     vfpfcnvrt@ap:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x42
   991   000043                     	ds	1
   992   000044                     ___flmul@bexp:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x43
   996   000044                     	ds	1
   997   000045                     ??_vfpfcnvrt:
   998   000045                     ___flmul@prod:
   999                           	callstack 0
  1000                           
  1001                           ; 4 bytes @ 0x44
  1002   000045                     	ds	1
  1003   000046                     colour_rel@G:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x45
  1007   000046                     	ds	1
  1008   000047                     vfpfcnvrt@convarg:
  1009                           	callstack 0
  1010                           
  1011                           ; 8 bytes @ 0x46
  1012   000047                     	ds	2
  1013   000049                     ___flmul@temp:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x48
  1017   000049                     	ds	1
  1018   00004A                     colour_rel@B:
  1019                           	callstack 0
  1020                           
  1021                           ; 4 bytes @ 0x49
  1022   00004A                     	ds	1
  1023   00004B                     ?_Colour_decider:
  1024                           	callstack 0
  1025   00004B                     Colour_decider@vals:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x4A
  1029   00004B                     	ds	2
  1030   00004D                     Colour_decider@rel:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x4C
  1034   00004D                     	ds	2
  1035   00004F                     ??_Colour_decider:
  1036   00004F                     vfpfcnvrt@cp:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x4E
  1040   00004F                     	ds	2
  1041   000051                     ?_vfprintf:
  1042                           	callstack 0
  1043   000051                     vfprintf@fp:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x50
  1047   000051                     	ds	2
  1048   000053                     vfprintf@fmt:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x52
  1052   000053                     	ds	2
  1053   000055                     vfprintf@ap:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x54
  1057   000055                     	ds	2
  1058   000057                     vfprintf@cfmt:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x56
  1062   000057                     	ds	2
  1063   000059                     ??_main:
  1064                           
  1065                           ; 1 bytes @ 0x58
  1066   000059                     	ds	2
  1067                           
  1068 ;;
  1069 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1070 ;;
  1071 ;; *************** function _main *****************
  1072 ;; Defined at:
  1073 ;;		line 30 in file "main.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  colour          2  138[BANK0 ] int 
  1078 ;;  temp            2  132[BANK0 ] int 
  1079 ;;  fakeTimer       2  140[BANK0 ] int 
  1080 ;;  buf           100   32[BANK0 ] unsigned char [100]
  1081 ;;  prev_colour     2  142[BANK0 ] int 
  1082 ;;  consecuitive    2  136[BANK0 ] int 
  1083 ;;  run_flag        2  134[BANK0 ] int 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1094 ;;      Locals:         0     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1095 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1096 ;;      Totals:         2     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1097 ;;Total ram usage:      114 bytes
  1098 ;; Hardware stack levels required when called: 9
  1099 ;; This function calls:
  1100 ;;		_BlueMove
  1101 ;;		_Colour_decider
  1102 ;;		_Forwardhalfblock
  1103 ;;		_GreenMove
  1104 ;;		_I2C_2_Master_Init
  1105 ;;		_Interrupts_init
  1106 ;;		_LightBlueMove
  1107 ;;		_OrangeMove
  1108 ;;		_PinkMove
  1109 ;;		_RedMove
  1110 ;;		_RetryMove
  1111 ;;		_Timer0_init
  1112 ;;		_YellowMove
  1113 ;;		_color_click_init
  1114 ;;		_colour_rel
  1115 ;;		_fullSpeedAhead
  1116 ;;		_go_Home
  1117 ;;		_initDCmotorsPWM
  1118 ;;		_initUSART4
  1119 ;;		_readColours
  1120 ;;		_sendStringSerial4
  1121 ;;		_sprintf
  1122 ;;		_stop
  1123 ;; This function is called by:
  1124 ;;		Startup code after reset
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text0
  1129   001902                     __ptext0:
  1130                           	callstack 0
  1131   001902                     _main:
  1132                           	callstack 22
  1133   001902                     
  1134                           ;main.c: 31:     initUSART4();
  1135   001902  ECA1  F025         	call	_initUSART4	;wreg free
  1136   001906                     
  1137                           ;main.c: 32:     Interrupts_init();
  1138   001906  ECD5  F025         	call	_Interrupts_init	;wreg free
  1139   00190A                     
  1140                           ;main.c: 33:     color_click_init();
  1141   00190A  ECE9  F022         	call	_color_click_init	;wreg free
  1142   00190E                     
  1143                           ;main.c: 34:     I2C_2_Master_Init();
  1144   00190E  EC45  F025         	call	_I2C_2_Master_Init	;wreg free
  1145   001912                     
  1146                           ;main.c: 35:     Timer0_init();
  1147   001912  EC91  F025         	call	_Timer0_init	;wreg free
  1148   001916                     
  1149                           ;main.c: 36:     initDCmotorsPWM(200);
  1150   001916  0E00               	movlw	0
  1151   001918  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1152   00191A  0EC8               	movlw	200
  1153   00191C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1154   00191E  EC8D  F01F         	call	_initDCmotorsPWM	;wreg free
  1155   001922                     
  1156                           ;main.c: 37:     char buf[100];;main.c: 38:     TRISGbits.TRISG1 = 0;
  1157   001922  9287               	bcf	135,1,c	;volatile
  1158   001924                     
  1159                           ;main.c: 39:     TRISAbits.TRISA4 = 0;
  1160   001924  9881               	bcf	129,4,c	;volatile
  1161   001926                     
  1162                           ;main.c: 40:     TRISFbits.TRISF7 = 0;
  1163   001926  9E86               	bcf	134,7,c	;volatile
  1164   001928                     
  1165                           ;main.c: 41:     TRISFbits.TRISF2 = 1;
  1166   001928  8486               	bsf	134,2,c	;volatile
  1167   00192A                     
  1168                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1169   00192A  010E               	movlb	14	; () banked
  1170   00192C  95B4               	bcf	180,2,b	;volatile
  1171   00192E                     
  1172                           ; BSR set to: 14
  1173                           ;main.c: 43:     LATGbits.LATG1=1;
  1174   00192E  827F               	bsf	127,1,c	;volatile
  1175   001930                     
  1176                           ; BSR set to: 14
  1177                           ;main.c: 44:     LATAbits.LATA4=1;
  1178   001930  8879               	bsf	121,4,c	;volatile
  1179   001932                     
  1180                           ; BSR set to: 14
  1181                           ;main.c: 45:     LATFbits.LATF7=1;
  1182   001932  8E7E               	bsf	126,7,c	;volatile
  1183   001934                     
  1184                           ; BSR set to: 14
  1185                           ;main.c: 49:     motorL.power=0;
  1186   001934  0E00               	movlw	0
  1187   001936  0100               	movlb	0	; () banked
  1188   001938  6FF5               	movwf	_motorL& (0+255),b
  1189   00193A                     
  1190                           ; BSR set to: 0
  1191                           ;main.c: 50:     motorL.direction=1;
  1192   00193A  0E01               	movlw	1
  1193   00193C  6FF6               	movwf	(_motorL+1)& (0+255),b
  1194   00193E                     
  1195                           ; BSR set to: 0
  1196                           ;main.c: 51:     motorL.brakemode=1;
  1197   00193E  0E01               	movlw	1
  1198   001940  6FF7               	movwf	(_motorL+2)& (0+255),b
  1199   001942                     
  1200                           ; BSR set to: 0
  1201                           ;main.c: 52:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1202   001942  0EAA               	movlw	170
  1203   001944  6FFA               	movwf	(_motorL+5)& (0+255),b
  1204   001946  0E0F               	movlw	15
  1205   001948  6FFB               	movwf	(_motorL+6)& (0+255),b
  1206   00194A                     
  1207                           ; BSR set to: 0
  1208                           ;main.c: 53:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1209   00194A  0EA6               	movlw	166
  1210   00194C  6FFC               	movwf	(_motorL+7)& (0+255),b
  1211   00194E  0E0F               	movlw	15
  1212   001950  6FFD               	movwf	(_motorL+8)& (0+255),b
  1213   001952                     
  1214                           ; BSR set to: 0
  1215                           ;main.c: 54:     motorL.PWMperiod=200;
  1216   001952  0E00               	movlw	0
  1217   001954  6FF9               	movwf	(_motorL+4)& (0+255),b
  1218   001956  0EC8               	movlw	200
  1219   001958  6FF8               	movwf	(_motorL+3)& (0+255),b
  1220   00195A                     
  1221                           ; BSR set to: 0
  1222                           ;main.c: 55:     motorR.power=0;
  1223   00195A  0E00               	movlw	0
  1224   00195C  0101               	movlb	1	; () banked
  1225   00195E  6FBE               	movwf	_motorR& (0+255),b
  1226   001960                     
  1227                           ; BSR set to: 1
  1228                           ;main.c: 56:     motorR.direction=1;
  1229   001960  0E01               	movlw	1
  1230   001962  6FBF               	movwf	(_motorR+1)& (0+255),b
  1231   001964                     
  1232                           ; BSR set to: 1
  1233                           ;main.c: 57:     motorR.brakemode=1;
  1234   001964  0E01               	movlw	1
  1235   001966  6FC0               	movwf	(_motorR+2)& (0+255),b
  1236   001968                     
  1237                           ; BSR set to: 1
  1238                           ;main.c: 58:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1239   001968  0E25               	movlw	37
  1240   00196A  6FC3               	movwf	(_motorR+5)& (0+255),b
  1241   00196C  0E0F               	movlw	15
  1242   00196E  6FC4               	movwf	(_motorR+6)& (0+255),b
  1243   001970                     
  1244                           ; BSR set to: 1
  1245                           ;main.c: 59:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1246   001970  0E21               	movlw	33
  1247   001972  6FC5               	movwf	(_motorR+7)& (0+255),b
  1248   001974  0E0F               	movlw	15
  1249   001976  6FC6               	movwf	(_motorR+8)& (0+255),b
  1250   001978                     
  1251                           ; BSR set to: 1
  1252                           ;main.c: 60:     motorR.PWMperiod=200;
  1253   001978  0E00               	movlw	0
  1254   00197A  6FC2               	movwf	(_motorR+4)& (0+255),b
  1255   00197C  0EC8               	movlw	200
  1256   00197E  6FC1               	movwf	(_motorR+3)& (0+255),b
  1257   001980                     
  1258                           ; BSR set to: 1
  1259                           ;main.c: 62:     int consecuitive=0;
  1260   001980  0E00               	movlw	0
  1261   001982  0100               	movlb	0	; () banked
  1262   001984  6FE9               	movwf	(main@consecuitive+1)& (0+255),b
  1263   001986  0E00               	movlw	0
  1264   001988  6FE8               	movwf	main@consecuitive& (0+255),b
  1265   00198A                     
  1266                           ; BSR set to: 0
  1267                           ;main.c: 63:     int prev_colour =0;
  1268   00198A  0E00               	movlw	0
  1269   00198C  6FEF               	movwf	(main@prev_colour+1)& (0+255),b
  1270   00198E  0E00               	movlw	0
  1271   001990  6FEE               	movwf	main@prev_colour& (0+255),b
  1272   001992                     
  1273                           ; BSR set to: 0
  1274                           ;main.c: 64:     int run_flag=1;
  1275   001992  0E00               	movlw	0
  1276   001994  6FE7               	movwf	(main@run_flag+1)& (0+255),b
  1277   001996  0E01               	movlw	1
  1278   001998  6FE6               	movwf	main@run_flag& (0+255),b
  1279   00199A                     
  1280                           ; BSR set to: 0
  1281                           ;main.c: 65:     move_count=-1;
  1282   00199A  69F2               	setf	_move_count& (0+255),b	;volatile
  1283   00199C  69F3               	setf	(_move_count+1)& (0+255),b	;volatile
  1284   00199E                     l394:
  1285   00199E  B48E               	btfsc	142,2,c	;volatile
  1286   0019A0  EFD4  F00C         	goto	u4361
  1287   0019A4  EFD6  F00C         	goto	u4360
  1288   0019A8                     u4361:
  1289   0019A8  EFCF  F00C         	goto	l394
  1290   0019AC                     u4360:
  1291   0019AC                     
  1292                           ;main.c: 69:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1293   0019AC  0E52               	movlw	82
  1294   0019AE  6E5A               	movwf	(??_main+1)^0,c
  1295   0019B0  0E2B               	movlw	43
  1296   0019B2  6E59               	movwf	??_main^0,c
  1297   0019B4  0E00               	movlw	0
  1298   0019B6                     u4587:
  1299   0019B6  2EE8               	decfsz	wreg,f,c
  1300   0019B8  D7FE               	bra	u4587
  1301   0019BA  2E59               	decfsz	??_main^0,f,c
  1302   0019BC  D7FC               	bra	u4587
  1303   0019BE  2E5A               	decfsz	(??_main+1)^0,f,c
  1304   0019C0  D7FA               	bra	u4587
  1305   0019C2  D000               	nop2	
  1306   0019C4                     
  1307                           ;main.c: 70:     TMR0H=0;
  1308   0019C4  0E00               	movlw	0
  1309   0019C6  6ED4               	movwf	212,c	;volatile
  1310   0019C8                     
  1311                           ;main.c: 71:     TMR0L=0;
  1312   0019C8  0E00               	movlw	0
  1313   0019CA  6ED3               	movwf	211,c	;volatile
  1314                           
  1315                           ;main.c: 74:     while (run_flag)
  1316   0019CC  EF2C  F00F         	goto	l4760
  1317   0019D0                     l4630:
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;main.c: 75:     {;main.c: 76:         move_count++;
  1321   0019D0  4BF2               	infsnz	_move_count& (0+255),f,b	;volatile
  1322   0019D2  2BF3               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1323   0019D4                     
  1324                           ; BSR set to: 0
  1325                           ;main.c: 77:         int fakeTimer = 0;
  1326   0019D4  0E00               	movlw	0
  1327   0019D6  6FED               	movwf	(main@fakeTimer+1)& (0+255),b
  1328   0019D8  0E00               	movlw	0
  1329   0019DA  6FEC               	movwf	main@fakeTimer& (0+255),b
  1330                           
  1331                           ;main.c: 79:         while (vals.L<=500){
  1332   0019DC  EF09  F00D         	goto	l4640
  1333   0019E0                     l4634:
  1334                           
  1335                           ; BSR set to: 1
  1336                           ;main.c: 81:             fullSpeedAhead(&motorL,&motorR);
  1337   0019E0  0EF5               	movlw	low _motorL
  1338   0019E2  6E14               	movwf	fullSpeedAhead@mL^0,c
  1339   0019E4  0E00               	movlw	high _motorL
  1340   0019E6  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1341   0019E8  0EBE               	movlw	low _motorR
  1342   0019EA  6E16               	movwf	fullSpeedAhead@mR^0,c
  1343   0019EC  0E01               	movlw	high _motorR
  1344   0019EE  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1345   0019F0  ECA0  F01E         	call	_fullSpeedAhead	;wreg free
  1346   0019F4                     
  1347                           ;main.c: 82:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1348   0019F4  0E09               	movlw	9
  1349   0019F6  6E5A               	movwf	(??_main+1)^0,c
  1350   0019F8  0E1E               	movlw	30
  1351   0019FA  6E59               	movwf	??_main^0,c
  1352   0019FC  0EE4               	movlw	228
  1353   0019FE                     u4597:
  1354   0019FE  2EE8               	decfsz	wreg,f,c
  1355   001A00  D7FE               	bra	u4597
  1356   001A02  2E59               	decfsz	??_main^0,f,c
  1357   001A04  D7FC               	bra	u4597
  1358   001A06  2E5A               	decfsz	(??_main+1)^0,f,c
  1359   001A08  D7FA               	bra	u4597
  1360   001A0A  D000               	nop2	
  1361   001A0C                     
  1362                           ;main.c: 83:             fakeTimer+=1;
  1363   001A0C  0100               	movlb	0	; () banked
  1364   001A0E  4BEC               	infsnz	main@fakeTimer& (0+255),f,b
  1365   001A10  2BED               	incf	(main@fakeTimer+1)& (0+255),f,b
  1366   001A12                     l4640:
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;main.c: 79:         while (vals.L<=500){
  1370   001A12  0101               	movlb	1	; () banked
  1371   001A14  BFCE               	btfsc	(_vals+7)& (0+255),7,b
  1372   001A16  EF16  F00D         	goto	u4371
  1373   001A1A  0EF5               	movlw	245
  1374   001A1C  5DCD               	subwf	(_vals+6)& (0+255),w,b
  1375   001A1E  0E01               	movlw	1
  1376   001A20  59CE               	subwfb	(_vals+7)& (0+255),w,b
  1377   001A22  A0D8               	btfss	status,0,c
  1378   001A24  EF16  F00D         	goto	u4371
  1379   001A28  EF18  F00D         	goto	u4370
  1380   001A2C                     u4371:
  1381   001A2C  EFF0  F00C         	goto	l4634
  1382   001A30                     u4370:
  1383   001A30                     
  1384                           ; BSR set to: 1
  1385                           ;main.c: 86:         Time_forward[move_count]=fakeTimer;
  1386   001A30  90D8               	bcf	status,0,c
  1387   001A32  0100               	movlb	0	; () banked
  1388   001A34  35F2               	rlcf	_move_count& (0+255),w,b	;volatile
  1389   001A36  6ED9               	movwf	fsr2l,c
  1390   001A38  35F3               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  1391   001A3A  6EDA               	movwf	fsr2h,c
  1392   001A3C  0E00               	movlw	low _Time_forward
  1393   001A3E  26D9               	addwf	fsr2l,f,c
  1394   001A40  0E02               	movlw	high _Time_forward
  1395   001A42  22DA               	addwfc	fsr2h,f,c
  1396   001A44  C0EC  FFDE         	movff	main@fakeTimer,postinc2
  1397   001A48  C0ED  FFDD         	movff	main@fakeTimer+1,postdec2
  1398   001A4C                     
  1399                           ; BSR set to: 0
  1400                           ;main.c: 90:         readColours(&vals);
  1401   001A4C  0EC7               	movlw	low _vals
  1402   001A4E  6E0C               	movwf	readColours@vals^0,c
  1403   001A50  0E01               	movlw	high _vals
  1404   001A52  6E0D               	movwf	(readColours@vals+1)^0,c
  1405   001A54  EC33  F021         	call	_readColours	;wreg free
  1406   001A58                     
  1407                           ;main.c: 93:         colour_rel(&vals, &rel);
  1408   001A58  0EC7               	movlw	low _vals
  1409   001A5A  6E32               	movwf	colour_rel@vals^0,c
  1410   001A5C  0E01               	movlw	high _vals
  1411   001A5E  6E33               	movwf	(colour_rel@vals+1)^0,c
  1412   001A60  0EB2               	movlw	low _rel
  1413   001A62  6E34               	movwf	colour_rel@rel^0,c
  1414   001A64  0E01               	movlw	high _rel
  1415   001A66  6E35               	movwf	(colour_rel@rel+1)^0,c
  1416   001A68  EC7A  F015         	call	_colour_rel	;wreg free
  1417   001A6C                     
  1418                           ;main.c: 96:         if (vals.L>=500){
  1419   001A6C  0101               	movlb	1	; () banked
  1420   001A6E  BFCE               	btfsc	(_vals+7)& (0+255),7,b
  1421   001A70  EF43  F00D         	goto	u4381
  1422   001A74  0EF4               	movlw	244
  1423   001A76  5DCD               	subwf	(_vals+6)& (0+255),w,b
  1424   001A78  0E01               	movlw	1
  1425   001A7A  59CE               	subwfb	(_vals+7)& (0+255),w,b
  1426   001A7C  A0D8               	btfss	status,0,c
  1427   001A7E  EF43  F00D         	goto	u4381
  1428   001A82  EF45  F00D         	goto	u4380
  1429   001A86                     u4381:
  1430   001A86  EF09  F00F         	goto	l402
  1431   001A8A                     u4380:
  1432   001A8A                     
  1433                           ; BSR set to: 1
  1434                           ;main.c: 97:             Forwardhalfblock(&motorL,&motorR);
  1435   001A8A  0EF5               	movlw	low _motorL
  1436   001A8C  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1437   001A8E  0E00               	movlw	high _motorL
  1438   001A90  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1439   001A92  0EBE               	movlw	low _motorR
  1440   001A94  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1441   001A96  0E01               	movlw	high _motorR
  1442   001A98  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1443   001A9A  EC8F  F021         	call	_Forwardhalfblock	;wreg free
  1444                           
  1445                           ;main.c: 99:             stop(&motorL, &motorR);
  1446   001A9E  0EF5               	movlw	low _motorL
  1447   001AA0  6E14               	movwf	stop@mL^0,c
  1448   001AA2  0E00               	movlw	high _motorL
  1449   001AA4  6E15               	movwf	(stop@mL+1)^0,c
  1450   001AA6  0EBE               	movlw	low _motorR
  1451   001AA8  6E16               	movwf	stop@mR^0,c
  1452   001AAA  0E01               	movlw	high _motorR
  1453   001AAC  6E17               	movwf	(stop@mR+1)^0,c
  1454   001AAE  EC12  F020         	call	_stop	;wreg free
  1455   001AB2                     
  1456                           ;main.c: 100:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1457   001AB2  0E11               	movlw	17
  1458   001AB4  6E5A               	movwf	(??_main+1)^0,c
  1459   001AB6  0E3C               	movlw	60
  1460   001AB8  6E59               	movwf	??_main^0,c
  1461   001ABA  0ECB               	movlw	203
  1462   001ABC                     u4607:
  1463   001ABC  2EE8               	decfsz	wreg,f,c
  1464   001ABE  D7FE               	bra	u4607
  1465   001AC0  2E59               	decfsz	??_main^0,f,c
  1466   001AC2  D7FC               	bra	u4607
  1467   001AC4  2E5A               	decfsz	(??_main+1)^0,f,c
  1468   001AC6  D7FA               	bra	u4607
  1469   001AC8  F000               	nop	
  1470                           
  1471                           ;main.c: 108:             while (consecuitive<20){
  1472   001ACA  EF9A  F00D         	goto	l4666
  1473   001ACE                     l4654:
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;main.c: 109:                 int colour = Colour_decider(&vals, &rel);
  1477   001ACE  0EC7               	movlw	low _vals
  1478   001AD0  6E4B               	movwf	Colour_decider@vals^0,c
  1479   001AD2  0E01               	movlw	high _vals
  1480   001AD4  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1481   001AD6  0EB2               	movlw	low _rel
  1482   001AD8  6E4D               	movwf	Colour_decider@rel^0,c
  1483   001ADA  0E01               	movlw	high _rel
  1484   001ADC  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1485   001ADE  EC13  F007         	call	_Colour_decider	;wreg free
  1486   001AE2  C04B  F0EA         	movff	?_Colour_decider,main@colour
  1487   001AE6  C04C  F0EB         	movff	?_Colour_decider+1,main@colour+1
  1488   001AEA                     
  1489                           ;main.c: 110:                 if (colour==prev_colour){
  1490   001AEA  0100               	movlb	0	; () banked
  1491   001AEC  51EE               	movf	main@prev_colour& (0+255),w,b
  1492   001AEE  19EA               	xorwf	main@colour& (0+255),w,b
  1493   001AF0  E107               	bnz	u4391
  1494   001AF2  51EF               	movf	(main@prev_colour+1)& (0+255),w,b
  1495   001AF4  19EB               	xorwf	(main@colour+1)& (0+255),w,b
  1496   001AF6  A4D8               	btfss	status,2,c
  1497   001AF8  EF80  F00D         	goto	u4391
  1498   001AFC  EF82  F00D         	goto	u4390
  1499   001B00                     u4391:
  1500   001B00  EF86  F00D         	goto	l4660
  1501   001B04                     u4390:
  1502   001B04                     
  1503                           ; BSR set to: 0
  1504                           ;main.c: 111:                     consecuitive++;
  1505   001B04  4BE8               	infsnz	main@consecuitive& (0+255),f,b
  1506   001B06  2BE9               	incf	(main@consecuitive+1)& (0+255),f,b
  1507                           
  1508                           ;main.c: 112:                 }
  1509   001B08  EF8A  F00D         	goto	l4662
  1510   001B0C                     l4660:
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;main.c: 114:                     consecuitive=0;
  1514   001B0C  0E00               	movlw	0
  1515   001B0E  6FE9               	movwf	(main@consecuitive+1)& (0+255),b
  1516   001B10  0E00               	movlw	0
  1517   001B12  6FE8               	movwf	main@consecuitive& (0+255),b
  1518   001B14                     l4662:
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;main.c: 116:                 prev_colour=colour;
  1522   001B14  C0EA  F0EE         	movff	main@colour,main@prev_colour
  1523   001B18  C0EB  F0EF         	movff	main@colour+1,main@prev_colour+1
  1524   001B1C                     
  1525                           ; BSR set to: 0
  1526                           ;main.c: 117:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1527   001B1C  0E05               	movlw	5
  1528   001B1E  6E5A               	movwf	(??_main+1)^0,c
  1529   001B20  0E0F               	movlw	15
  1530   001B22  6E59               	movwf	??_main^0,c
  1531   001B24  0EF1               	movlw	241
  1532   001B26                     u4617:
  1533   001B26  2EE8               	decfsz	wreg,f,c
  1534   001B28  D7FE               	bra	u4617
  1535   001B2A  2E59               	decfsz	??_main^0,f,c
  1536   001B2C  D7FC               	bra	u4617
  1537   001B2E  2E5A               	decfsz	(??_main+1)^0,f,c
  1538   001B30  D7FA               	bra	u4617
  1539   001B32  F000               	nop	
  1540   001B34                     l4666:
  1541                           
  1542                           ;main.c: 108:             while (consecuitive<20){
  1543   001B34  0100               	movlb	0	; () banked
  1544   001B36  BFE9               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1545   001B38  EFA7  F00D         	goto	u4401
  1546   001B3C  51E9               	movf	(main@consecuitive+1)& (0+255),w,b
  1547   001B3E  E109               	bnz	u4400
  1548   001B40  0E14               	movlw	20
  1549   001B42  5DE8               	subwf	main@consecuitive& (0+255),w,b
  1550   001B44  A0D8               	btfss	status,0,c
  1551   001B46  EFA7  F00D         	goto	u4401
  1552   001B4A  EFA9  F00D         	goto	u4400
  1553   001B4E                     u4401:
  1554   001B4E  EF67  F00D         	goto	l4654
  1555   001B52                     u4400:
  1556   001B52                     
  1557                           ; BSR set to: 0
  1558                           ;main.c: 119:             consecuitive=0;
  1559   001B52  0E00               	movlw	0
  1560   001B54  6FE9               	movwf	(main@consecuitive+1)& (0+255),b
  1561   001B56  0E00               	movlw	0
  1562   001B58  6FE8               	movwf	main@consecuitive& (0+255),b
  1563   001B5A                     
  1564                           ; BSR set to: 0
  1565                           ;main.c: 122:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,fakeTimer);
  1566   001B5A  0E80               	movlw	low main@buf
  1567   001B5C  6F60               	movwf	sprintf@s& (0+255),b
  1568   001B5E  0E00               	movlw	high main@buf
  1569   001B60  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1570   001B62  0E01               	movlw	low STR_1
  1571   001B64  6F62               	movwf	sprintf@fmt& (0+255),b
  1572   001B66  0E0E               	movlw	high STR_1
  1573   001B68  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1574   001B6A  C1C7  F064         	movff	_vals,?_sprintf+4
  1575   001B6E  C1C8  F065         	movff	_vals+1,?_sprintf+5
  1576   001B72  C1C9  F066         	movff	_vals+2,?_sprintf+6
  1577   001B76  C1CA  F067         	movff	_vals+3,?_sprintf+7
  1578   001B7A  C1CB  F068         	movff	_vals+4,?_sprintf+8
  1579   001B7E  C1CC  F069         	movff	_vals+5,?_sprintf+9
  1580   001B82  C0EC  F06A         	movff	main@fakeTimer,?_sprintf+10
  1581   001B86  C0ED  F06B         	movff	main@fakeTimer+1,?_sprintf+11
  1582   001B8A  EC6E  F022         	call	_sprintf	;wreg free
  1583   001B8E                     
  1584                           ;main.c: 125:             sendStringSerial4(buf);
  1585   001B8E  0E80               	movlw	low main@buf
  1586   001B90  6E02               	movwf	sendStringSerial4@string^0,c
  1587   001B92  0E00               	movlw	high main@buf
  1588   001B94  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1589   001B96  EC2D  F025         	call	_sendStringSerial4	;wreg free
  1590   001B9A                     
  1591                           ;main.c: 127:             if (prev_colour==1){
  1592   001B9A  0100               	movlb	0	; () banked
  1593   001B9C  05EE               	decf	main@prev_colour& (0+255),w,b
  1594   001B9E  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1595   001BA0  A4D8               	btfss	status,2,c
  1596   001BA2  EFD5  F00D         	goto	u4411
  1597   001BA6  EFD7  F00D         	goto	u4410
  1598   001BAA                     u4411:
  1599   001BAA  EFF0  F00D         	goto	l4684
  1600   001BAE                     u4410:
  1601   001BAE                     
  1602                           ; BSR set to: 0
  1603                           ;main.c: 128:                 RedMove(&motorL, &motorR);
  1604   001BAE  0EF5               	movlw	low _motorL
  1605   001BB0  6E20               	movwf	RedMove@mL^0,c
  1606   001BB2  0E00               	movlw	high _motorL
  1607   001BB4  6E21               	movwf	(RedMove@mL+1)^0,c
  1608   001BB6  0EBE               	movlw	low _motorR
  1609   001BB8  6E22               	movwf	RedMove@mR^0,c
  1610   001BBA  0E01               	movlw	high _motorR
  1611   001BBC  6E23               	movwf	(RedMove@mR+1)^0,c
  1612   001BBE  ECEF  F024         	call	_RedMove	;wreg free
  1613   001BC2                     
  1614                           ;main.c: 129:                 TMR0H=0;
  1615   001BC2  0E00               	movlw	0
  1616   001BC4  6ED4               	movwf	212,c	;volatile
  1617   001BC6                     
  1618                           ;main.c: 130:                 TMR0L=0;
  1619   001BC6  0E00               	movlw	0
  1620   001BC8  6ED3               	movwf	211,c	;volatile
  1621   001BCA                     
  1622                           ;main.c: 131:                 WayBack[move_count]=1;
  1623   001BCA  0E60               	movlw	low _WayBack
  1624   001BCC  0100               	movlb	0	; () banked
  1625   001BCE  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1626   001BD0  6ED9               	movwf	fsr2l,c
  1627   001BD2  0E01               	movlw	high _WayBack
  1628   001BD4  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1629   001BD6  6EDA               	movwf	fsr2h,c
  1630   001BD8  0E01               	movlw	1
  1631   001BDA  6EDF               	movwf	indf2,c
  1632                           
  1633                           ;main.c: 132:             }
  1634   001BDC  EF2C  F00F         	goto	l4760
  1635   001BE0                     l4684:
  1636                           
  1637                           ; BSR set to: 0
  1638   001BE0  0E02               	movlw	2
  1639   001BE2  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1640   001BE4  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1641   001BE6  A4D8               	btfss	status,2,c
  1642   001BE8  EFF8  F00D         	goto	u4421
  1643   001BEC  EFFA  F00D         	goto	u4420
  1644   001BF0                     u4421:
  1645   001BF0  EF13  F00E         	goto	l4694
  1646   001BF4                     u4420:
  1647   001BF4                     
  1648                           ; BSR set to: 0
  1649                           ;main.c: 134:                 OrangeMove(&motorL, &motorR);
  1650   001BF4  0EF5               	movlw	low _motorL
  1651   001BF6  6E20               	movwf	OrangeMove@mL^0,c
  1652   001BF8  0E00               	movlw	high _motorL
  1653   001BFA  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1654   001BFC  0EBE               	movlw	low _motorR
  1655   001BFE  6E22               	movwf	OrangeMove@mR^0,c
  1656   001C00  0E01               	movlw	high _motorR
  1657   001C02  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1658   001C04  EC97  F022         	call	_OrangeMove	;wreg free
  1659   001C08                     
  1660                           ;main.c: 135:                 TMR0H=0;
  1661   001C08  0E00               	movlw	0
  1662   001C0A  6ED4               	movwf	212,c	;volatile
  1663   001C0C                     
  1664                           ;main.c: 136:                 TMR0L=0;
  1665   001C0C  0E00               	movlw	0
  1666   001C0E  6ED3               	movwf	211,c	;volatile
  1667   001C10                     
  1668                           ;main.c: 137:                 WayBack[move_count]=2;
  1669   001C10  0E60               	movlw	low _WayBack
  1670   001C12  0100               	movlb	0	; () banked
  1671   001C14  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1672   001C16  6ED9               	movwf	fsr2l,c
  1673   001C18  0E01               	movlw	high _WayBack
  1674   001C1A  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1675   001C1C  6EDA               	movwf	fsr2h,c
  1676   001C1E  0E02               	movlw	2
  1677   001C20  6EDF               	movwf	indf2,c
  1678                           
  1679                           ;main.c: 138:             }
  1680   001C22  EF2C  F00F         	goto	l4760
  1681   001C26                     l4694:
  1682                           
  1683                           ; BSR set to: 0
  1684   001C26  0E03               	movlw	3
  1685   001C28  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1686   001C2A  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1687   001C2C  A4D8               	btfss	status,2,c
  1688   001C2E  EF1B  F00E         	goto	u4431
  1689   001C32  EF1D  F00E         	goto	u4430
  1690   001C36                     u4431:
  1691   001C36  EF36  F00E         	goto	l4704
  1692   001C3A                     u4430:
  1693   001C3A                     
  1694                           ; BSR set to: 0
  1695                           ;main.c: 140:                 YellowMove(&motorL, &motorR);
  1696   001C3A  0EF5               	movlw	low _motorL
  1697   001C3C  6E20               	movwf	YellowMove@mL^0,c
  1698   001C3E  0E00               	movlw	high _motorL
  1699   001C40  6E21               	movwf	(YellowMove@mL+1)^0,c
  1700   001C42  0EBE               	movlw	low _motorR
  1701   001C44  6E22               	movwf	YellowMove@mR^0,c
  1702   001C46  0E01               	movlw	high _motorR
  1703   001C48  6E23               	movwf	(YellowMove@mR+1)^0,c
  1704   001C4A  EC12  F023         	call	_YellowMove	;wreg free
  1705   001C4E                     
  1706                           ;main.c: 141:                 TMR0H=0;
  1707   001C4E  0E00               	movlw	0
  1708   001C50  6ED4               	movwf	212,c	;volatile
  1709   001C52                     
  1710                           ;main.c: 142:                 TMR0L=0;
  1711   001C52  0E00               	movlw	0
  1712   001C54  6ED3               	movwf	211,c	;volatile
  1713   001C56                     
  1714                           ;main.c: 143:                 WayBack[move_count]=3;
  1715   001C56  0E60               	movlw	low _WayBack
  1716   001C58  0100               	movlb	0	; () banked
  1717   001C5A  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1718   001C5C  6ED9               	movwf	fsr2l,c
  1719   001C5E  0E01               	movlw	high _WayBack
  1720   001C60  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1721   001C62  6EDA               	movwf	fsr2h,c
  1722   001C64  0E03               	movlw	3
  1723   001C66  6EDF               	movwf	indf2,c
  1724                           
  1725                           ;main.c: 144:             }
  1726   001C68  EF2C  F00F         	goto	l4760
  1727   001C6C                     l4704:
  1728                           
  1729                           ; BSR set to: 0
  1730   001C6C  0E04               	movlw	4
  1731   001C6E  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1732   001C70  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1733   001C72  A4D8               	btfss	status,2,c
  1734   001C74  EF3E  F00E         	goto	u4441
  1735   001C78  EF40  F00E         	goto	u4440
  1736   001C7C                     u4441:
  1737   001C7C  EF59  F00E         	goto	l4714
  1738   001C80                     u4440:
  1739   001C80                     
  1740                           ; BSR set to: 0
  1741                           ;main.c: 146:                 BlueMove(&motorL, &motorR);
  1742   001C80  0EF5               	movlw	low _motorL
  1743   001C82  6E20               	movwf	BlueMove@mL^0,c
  1744   001C84  0E00               	movlw	high _motorL
  1745   001C86  6E21               	movwf	(BlueMove@mL+1)^0,c
  1746   001C88  0EBE               	movlw	low _motorR
  1747   001C8A  6E22               	movwf	BlueMove@mR^0,c
  1748   001C8C  0E01               	movlw	high _motorR
  1749   001C8E  6E23               	movwf	(BlueMove@mR+1)^0,c
  1750   001C90  EC00  F021         	call	_BlueMove	;wreg free
  1751   001C94                     
  1752                           ;main.c: 147:                 TMR0H=0;
  1753   001C94  0E00               	movlw	0
  1754   001C96  6ED4               	movwf	212,c	;volatile
  1755   001C98                     
  1756                           ;main.c: 148:                 TMR0L=0;
  1757   001C98  0E00               	movlw	0
  1758   001C9A  6ED3               	movwf	211,c	;volatile
  1759   001C9C                     
  1760                           ;main.c: 149:                 WayBack[move_count]=4;
  1761   001C9C  0E60               	movlw	low _WayBack
  1762   001C9E  0100               	movlb	0	; () banked
  1763   001CA0  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1764   001CA2  6ED9               	movwf	fsr2l,c
  1765   001CA4  0E01               	movlw	high _WayBack
  1766   001CA6  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1767   001CA8  6EDA               	movwf	fsr2h,c
  1768   001CAA  0E04               	movlw	4
  1769   001CAC  6EDF               	movwf	indf2,c
  1770                           
  1771                           ;main.c: 150:             }
  1772   001CAE  EF2C  F00F         	goto	l4760
  1773   001CB2                     l4714:
  1774                           
  1775                           ; BSR set to: 0
  1776   001CB2  0E05               	movlw	5
  1777   001CB4  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1778   001CB6  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1779   001CB8  A4D8               	btfss	status,2,c
  1780   001CBA  EF61  F00E         	goto	u4451
  1781   001CBE  EF63  F00E         	goto	u4450
  1782   001CC2                     u4451:
  1783   001CC2  EF7C  F00E         	goto	l4724
  1784   001CC6                     u4450:
  1785   001CC6                     
  1786                           ; BSR set to: 0
  1787                           ;main.c: 152:                 GreenMove(&motorL, &motorR);
  1788   001CC6  0EF5               	movlw	low _motorL
  1789   001CC8  6E20               	movwf	GreenMove@mL^0,c
  1790   001CCA  0E00               	movlw	high _motorL
  1791   001CCC  6E21               	movwf	(GreenMove@mL+1)^0,c
  1792   001CCE  0EBE               	movlw	low _motorR
  1793   001CD0  6E22               	movwf	GreenMove@mR^0,c
  1794   001CD2  0E01               	movlw	high _motorR
  1795   001CD4  6E23               	movwf	(GreenMove@mR+1)^0,c
  1796   001CD6  EC0E  F025         	call	_GreenMove	;wreg free
  1797   001CDA                     
  1798                           ;main.c: 153:                 TMR0H=0;
  1799   001CDA  0E00               	movlw	0
  1800   001CDC  6ED4               	movwf	212,c	;volatile
  1801   001CDE                     
  1802                           ;main.c: 154:                 TMR0L=0;
  1803   001CDE  0E00               	movlw	0
  1804   001CE0  6ED3               	movwf	211,c	;volatile
  1805   001CE2                     
  1806                           ;main.c: 155:                 WayBack[move_count]=5;
  1807   001CE2  0E60               	movlw	low _WayBack
  1808   001CE4  0100               	movlb	0	; () banked
  1809   001CE6  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1810   001CE8  6ED9               	movwf	fsr2l,c
  1811   001CEA  0E01               	movlw	high _WayBack
  1812   001CEC  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1813   001CEE  6EDA               	movwf	fsr2h,c
  1814   001CF0  0E05               	movlw	5
  1815   001CF2  6EDF               	movwf	indf2,c
  1816                           
  1817                           ;main.c: 156:             }
  1818   001CF4  EF2C  F00F         	goto	l4760
  1819   001CF8                     l4724:
  1820                           
  1821                           ; BSR set to: 0
  1822   001CF8  0E06               	movlw	6
  1823   001CFA  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1824   001CFC  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1825   001CFE  A4D8               	btfss	status,2,c
  1826   001D00  EF84  F00E         	goto	u4461
  1827   001D04  EF86  F00E         	goto	u4460
  1828   001D08                     u4461:
  1829   001D08  EF9F  F00E         	goto	l4734
  1830   001D0C                     u4460:
  1831   001D0C                     
  1832                           ; BSR set to: 0
  1833                           ;main.c: 158:                 LightBlueMove(&motorL, &motorR);
  1834   001D0C  0EF5               	movlw	low _motorL
  1835   001D0E  6E20               	movwf	LightBlueMove@mL^0,c
  1836   001D10  0E00               	movlw	high _motorL
  1837   001D12  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  1838   001D14  0EBE               	movlw	low _motorR
  1839   001D16  6E22               	movwf	LightBlueMove@mR^0,c
  1840   001D18  0E01               	movlw	high _motorR
  1841   001D1A  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  1842   001D1C  ECC0  F022         	call	_LightBlueMove	;wreg free
  1843   001D20                     
  1844                           ;main.c: 159:                 TMR0H=0;
  1845   001D20  0E00               	movlw	0
  1846   001D22  6ED4               	movwf	212,c	;volatile
  1847   001D24                     
  1848                           ;main.c: 160:                 TMR0L=0;
  1849   001D24  0E00               	movlw	0
  1850   001D26  6ED3               	movwf	211,c	;volatile
  1851   001D28                     
  1852                           ;main.c: 161:                 WayBack[move_count]=6;
  1853   001D28  0E60               	movlw	low _WayBack
  1854   001D2A  0100               	movlb	0	; () banked
  1855   001D2C  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1856   001D2E  6ED9               	movwf	fsr2l,c
  1857   001D30  0E01               	movlw	high _WayBack
  1858   001D32  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1859   001D34  6EDA               	movwf	fsr2h,c
  1860   001D36  0E06               	movlw	6
  1861   001D38  6EDF               	movwf	indf2,c
  1862                           
  1863                           ;main.c: 162:             }
  1864   001D3A  EF2C  F00F         	goto	l4760
  1865   001D3E                     l4734:
  1866                           
  1867                           ; BSR set to: 0
  1868   001D3E  0E07               	movlw	7
  1869   001D40  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1870   001D42  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1871   001D44  A4D8               	btfss	status,2,c
  1872   001D46  EFA7  F00E         	goto	u4471
  1873   001D4A  EFA9  F00E         	goto	u4470
  1874   001D4E                     u4471:
  1875   001D4E  EFC2  F00E         	goto	l4744
  1876   001D52                     u4470:
  1877   001D52                     
  1878                           ; BSR set to: 0
  1879                           ;main.c: 164:                 PinkMove(&motorL, &motorR);
  1880   001D52  0EF5               	movlw	low _motorL
  1881   001D54  6E20               	movwf	PinkMove@mL^0,c
  1882   001D56  0E00               	movlw	high _motorL
  1883   001D58  6E21               	movwf	(PinkMove@mL+1)^0,c
  1884   001D5A  0EBE               	movlw	low _motorR
  1885   001D5C  6E22               	movwf	PinkMove@mR^0,c
  1886   001D5E  0E01               	movlw	high _motorR
  1887   001D60  6E23               	movwf	(PinkMove@mR+1)^0,c
  1888   001D62  EC3B  F023         	call	_PinkMove	;wreg free
  1889   001D66                     
  1890                           ;main.c: 165:                 TMR0H=0;
  1891   001D66  0E00               	movlw	0
  1892   001D68  6ED4               	movwf	212,c	;volatile
  1893   001D6A                     
  1894                           ;main.c: 166:                 TMR0L=0;
  1895   001D6A  0E00               	movlw	0
  1896   001D6C  6ED3               	movwf	211,c	;volatile
  1897   001D6E                     
  1898                           ;main.c: 167:                 WayBack[move_count]=7;
  1899   001D6E  0E60               	movlw	low _WayBack
  1900   001D70  0100               	movlb	0	; () banked
  1901   001D72  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1902   001D74  6ED9               	movwf	fsr2l,c
  1903   001D76  0E01               	movlw	high _WayBack
  1904   001D78  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1905   001D7A  6EDA               	movwf	fsr2h,c
  1906   001D7C  0E07               	movlw	7
  1907   001D7E  6EDF               	movwf	indf2,c
  1908                           
  1909                           ;main.c: 168:             }
  1910   001D80  EF2C  F00F         	goto	l4760
  1911   001D84                     l4744:
  1912                           
  1913                           ; BSR set to: 0
  1914   001D84  0E0A               	movlw	10
  1915   001D86  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1916   001D88  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1917   001D8A  A4D8               	btfss	status,2,c
  1918   001D8C  EFCA  F00E         	goto	u4481
  1919   001D90  EFCC  F00E         	goto	u4480
  1920   001D94                     u4481:
  1921   001D94  EFD8  F00E         	goto	l4748
  1922   001D98                     u4480:
  1923   001D98                     
  1924                           ; BSR set to: 0
  1925                           ;main.c: 170:                 RetryMove(&motorL, &motorR);
  1926   001D98  0EF5               	movlw	low _motorL
  1927   001D9A  6E1A               	movwf	RetryMove@mL^0,c
  1928   001D9C  0E00               	movlw	high _motorL
  1929   001D9E  6E1B               	movwf	(RetryMove@mL+1)^0,c
  1930   001DA0  0EBE               	movlw	low _motorR
  1931   001DA2  6E1C               	movwf	RetryMove@mR^0,c
  1932   001DA4  0E01               	movlw	high _motorR
  1933   001DA6  6E1D               	movwf	(RetryMove@mR+1)^0,c
  1934   001DA8  ECD1  F01F         	call	_RetryMove	;wreg free
  1935                           
  1936                           ;main.c: 171:             }
  1937   001DAC  EF2C  F00F         	goto	l4760
  1938   001DB0                     l4748:
  1939                           
  1940                           ; BSR set to: 0
  1941   001DB0  51EE               	movf	main@prev_colour& (0+255),w,b
  1942   001DB2  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1943   001DB4  A4D8               	btfss	status,2,c
  1944   001DB6  EFDF  F00E         	goto	u4491
  1945   001DBA  EFE1  F00E         	goto	u4490
  1946   001DBE                     u4491:
  1947   001DBE  EF07  F00F         	goto	l419
  1948   001DC2                     u4490:
  1949   001DC2                     
  1950                           ; BSR set to: 0
  1951                           ;main.c: 173:                 BlueMove(&motorL, &motorR);
  1952   001DC2  0EF5               	movlw	low _motorL
  1953   001DC4  6E20               	movwf	BlueMove@mL^0,c
  1954   001DC6  0E00               	movlw	high _motorL
  1955   001DC8  6E21               	movwf	(BlueMove@mL+1)^0,c
  1956   001DCA  0EBE               	movlw	low _motorR
  1957   001DCC  6E22               	movwf	BlueMove@mR^0,c
  1958   001DCE  0E01               	movlw	high _motorR
  1959   001DD0  6E23               	movwf	(BlueMove@mR+1)^0,c
  1960   001DD2  EC00  F021         	call	_BlueMove	;wreg free
  1961   001DD6                     
  1962                           ;main.c: 174:                 T0CON0bits.T0EN=0;
  1963   001DD6  9ED5               	bcf	213,7,c	;volatile
  1964                           
  1965                           ;main.c: 175:                 go_Home(WayBack, Time_forward);
  1966   001DD8  0E60               	movlw	low _WayBack
  1967   001DDA  6E24               	movwf	go_Home@WayBack^0,c
  1968   001DDC  0E01               	movlw	high _WayBack
  1969   001DDE  6E25               	movwf	(go_Home@WayBack+1)^0,c
  1970   001DE0  0E00               	movlw	low _Time_forward
  1971   001DE2  6E26               	movwf	go_Home@Time_forward^0,c
  1972   001DE4  0E02               	movlw	high _Time_forward
  1973   001DE6  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  1974   001DE8  EC50  F018         	call	_go_Home	;wreg free
  1975                           
  1976                           ;main.c: 176:                 stop(&motorL, &motorR);
  1977   001DEC  0EF5               	movlw	low _motorL
  1978   001DEE  6E14               	movwf	stop@mL^0,c
  1979   001DF0  0E00               	movlw	high _motorL
  1980   001DF2  6E15               	movwf	(stop@mL+1)^0,c
  1981   001DF4  0EBE               	movlw	low _motorR
  1982   001DF6  6E16               	movwf	stop@mR^0,c
  1983   001DF8  0E01               	movlw	high _motorR
  1984   001DFA  6E17               	movwf	(stop@mR+1)^0,c
  1985   001DFC  EC12  F020         	call	_stop	;wreg free
  1986   001E00                     
  1987                           ;main.c: 177:                 run_flag=0;
  1988   001E00  0E00               	movlw	0
  1989   001E02  0100               	movlb	0	; () banked
  1990   001E04  6FE7               	movwf	(main@run_flag+1)& (0+255),b
  1991   001E06  0E00               	movlw	0
  1992   001E08  6FE6               	movwf	main@run_flag& (0+255),b
  1993   001E0A  EF2C  F00F         	goto	l4760
  1994   001E0E                     l419:
  1995                           
  1996                           ; BSR set to: 0
  1997   001E0E  EF2C  F00F         	goto	l4760
  1998   001E12                     l402:
  1999                           
  2000                           ; BSR set to: 1
  2001                           ;main.c: 183:             int temp=TMR0L;
  2002   001E12  CFD3 F0E4          	movff	4051,main@temp	;volatile
  2003   001E16  0100               	movlb	0	; () banked
  2004   001E18  6BE5               	clrf	(main@temp+1)& (0+255),b
  2005   001E1A                     
  2006                           ; BSR set to: 0
  2007                           ;main.c: 184:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  2008   001E1A  0E80               	movlw	low main@buf
  2009   001E1C  6F60               	movwf	sprintf@s& (0+255),b
  2010   001E1E  0E00               	movlw	high main@buf
  2011   001E20  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2012   001E22  0E01               	movlw	low STR_1
  2013   001E24  6F62               	movwf	sprintf@fmt& (0+255),b
  2014   001E26  0E0E               	movlw	high STR_1
  2015   001E28  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2016   001E2A  C1C7  F064         	movff	_vals,?_sprintf+4
  2017   001E2E  C1C8  F065         	movff	_vals+1,?_sprintf+5
  2018   001E32  C1C9  F066         	movff	_vals+2,?_sprintf+6
  2019   001E36  C1CA  F067         	movff	_vals+3,?_sprintf+7
  2020   001E3A  C1CB  F068         	movff	_vals+4,?_sprintf+8
  2021   001E3E  C1CC  F069         	movff	_vals+5,?_sprintf+9
  2022   001E42  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  2023   001E46  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  2024   001E48  EC6E  F022         	call	_sprintf	;wreg free
  2025   001E4C                     
  2026                           ;main.c: 185:             sendStringSerial4(buf);
  2027   001E4C  0E80               	movlw	low main@buf
  2028   001E4E  6E02               	movwf	sendStringSerial4@string^0,c
  2029   001E50  0E00               	movlw	high main@buf
  2030   001E52  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2031   001E54  EC2D  F025         	call	_sendStringSerial4	;wreg free
  2032   001E58                     l4760:
  2033                           
  2034                           ;main.c: 74:     while (run_flag)
  2035   001E58  0100               	movlb	0	; () banked
  2036   001E5A  51E6               	movf	main@run_flag& (0+255),w,b
  2037   001E5C  11E7               	iorwf	(main@run_flag+1)& (0+255),w,b
  2038   001E5E  A4D8               	btfss	status,2,c
  2039   001E60  EF34  F00F         	goto	u4501
  2040   001E64  EF36  F00F         	goto	u4500
  2041   001E68                     u4501:
  2042   001E68  EFE8  F00C         	goto	l4630
  2043   001E6C                     u4500:
  2044   001E6C                     
  2045                           ; BSR set to: 0
  2046   001E6C  EF07  F000         	goto	start
  2047   001E70                     __end_of_main:
  2048                           	callstack 0
  2049                           
  2050 ;; *************** function _sprintf *****************
  2051 ;; Defined at:
  2052 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2055 ;;		 -> main@buf(100), 
  2056 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2057 ;;		 -> STR_2(36), STR_1(36), 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  f              11   14[BANK0 ] struct _IO_FILE
  2060 ;;  ap              2   12[BANK0 ] PTR void [1]
  2061 ;;		 -> ?_sprintf(2), 
  2062 ;;  ret             2    0        int 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  2    0[BANK0 ] int 
  2065 ;; Registers used:
  2066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2072 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2073 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2075 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2076 ;;Total ram usage:       25 bytes
  2077 ;; Hardware stack levels used: 1
  2078 ;; Hardware stack levels required when called: 8
  2079 ;; This function calls:
  2080 ;;		_vfprintf
  2081 ;; This function is called by:
  2082 ;;		_main
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text1
  2087   0044DC                     __ptext1:
  2088                           	callstack 0
  2089   0044DC                     _sprintf:
  2090                           	callstack 22
  2091   0044DC  0E64               	movlw	low (?_sprintf+4)
  2092   0044DE  0100               	movlb	0	; () banked
  2093   0044E0  6F6C               	movwf	sprintf@ap& (0+255),b
  2094   0044E2  0E00               	movlw	high (?_sprintf+4)
  2095   0044E4  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  2096   0044E6  C060  F06E         	movff	sprintf@s,sprintf@f
  2097   0044EA  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2098   0044EE                     
  2099                           ; BSR set to: 0
  2100   0044EE  0E00               	movlw	0
  2101   0044F0  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2102   0044F2  0E00               	movlw	0
  2103   0044F4  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2104   0044F6                     
  2105                           ; BSR set to: 0
  2106   0044F6  0E00               	movlw	0
  2107   0044F8  6F78               	movwf	(sprintf@f+10)& (0+255),b
  2108   0044FA  0E00               	movlw	0
  2109   0044FC  6F77               	movwf	(sprintf@f+9)& (0+255),b
  2110   0044FE                     
  2111                           ; BSR set to: 0
  2112   0044FE  0E6E               	movlw	low sprintf@f
  2113   004500  6E51               	movwf	vfprintf@fp^0,c
  2114   004502  0E00               	movlw	high sprintf@f
  2115   004504  6E52               	movwf	(vfprintf@fp+1)^0,c
  2116   004506  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  2117   00450A  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2118   00450E  0E6C               	movlw	low sprintf@ap
  2119   004510  6E55               	movwf	vfprintf@ap^0,c
  2120   004512  0E00               	movlw	high sprintf@ap
  2121   004514  6E56               	movwf	(vfprintf@ap+1)^0,c
  2122   004516  EC04  F024         	call	_vfprintf	;wreg free
  2123   00451A  0100               	movlb	0	; () banked
  2124   00451C  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2125   00451E  2560               	addwf	sprintf@s& (0+255),w,b
  2126   004520  6ED9               	movwf	fsr2l,c
  2127   004522  5172               	movf	(sprintf@f+4)& (0+255),w,b
  2128   004524  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2129   004526  6EDA               	movwf	fsr2h,c
  2130   004528  0E00               	movlw	0
  2131   00452A  6EDF               	movwf	indf2,c
  2132   00452C                     
  2133                           ; BSR set to: 0
  2134   00452C  0012               	return		;funcret
  2135   00452E                     __end_of_sprintf:
  2136                           	callstack 0
  2137                           
  2138 ;; *************** function _vfprintf *****************
  2139 ;; Defined at:
  2140 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2143 ;;		 -> sprintf@f(11), 
  2144 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2145 ;;		 -> STR_2(36), STR_1(36), 
  2146 ;;  ap              2   84[COMRAM] PTR PTR void 
  2147 ;;		 -> sprintf@ap(2), 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2150 ;;		 -> STR_2(36), STR_1(36), 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  2   80[COMRAM] int 
  2153 ;; Registers used:
  2154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2160 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2163 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2164 ;;Total ram usage:        8 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 7
  2167 ;; This function calls:
  2168 ;;		_vfpfcnvrt
  2169 ;; This function is called by:
  2170 ;;		_sprintf
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text2
  2175   004808                     __ptext2:
  2176                           	callstack 0
  2177   004808                     _vfprintf:
  2178                           	callstack 22
  2179   004808                     
  2180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2181   004808  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2182   00480C  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2185   004810  EF18  F024         	goto	l4134
  2186   004814                     l4132:
  2187                           
  2188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2189   004814  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2190   004818  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2191   00481C  0E57               	movlw	low vfprintf@cfmt
  2192   00481E  6E41               	movwf	vfpfcnvrt@fmt^0,c
  2193   004820  0E00               	movlw	high vfprintf@cfmt
  2194   004822  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2195   004824  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2196   004828  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2197   00482C  EC6D  F01C         	call	_vfpfcnvrt	;wreg free
  2198   004830                     l4134:
  2199                           
  2200                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2201   004830  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2202   004834  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2203   004838                     	if	0	;tblptru may be non-zero
  2204   004838                     	endif
  2205   004838                     	if	0	;tblptru may be non-zero
  2206   004838                     	endif
  2207   004838  0008               	tblrd		*
  2208   00483A  50F5               	movf	tablat,w,c
  2209   00483C  0900               	iorlw	0
  2210   00483E  A4D8               	btfss	status,2,c
  2211   004840  EF24  F024         	goto	u3831
  2212   004844  EF26  F024         	goto	u3830
  2213   004848                     u3831:
  2214   004848  EF0A  F024         	goto	l4132
  2215   00484C                     u3830:
  2216   00484C                     
  2217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2218   00484C  0E00               	movlw	0
  2219   00484E  6E52               	movwf	(?_vfprintf+1)^0,c
  2220   004850  0E00               	movlw	0
  2221   004852  6E51               	movwf	?_vfprintf^0,c
  2222   004854  0012               	return		;funcret
  2223   004856                     __end_of_vfprintf:
  2224                           	callstack 0
  2225                           
  2226 ;; *************** function _vfpfcnvrt *****************
  2227 ;; Defined at:
  2228 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2231 ;;		 -> sprintf@f(11), 
  2232 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2233 ;;		 -> vfprintf@cfmt(2), 
  2234 ;;  ap              2   66[COMRAM] PTR PTR void 
  2235 ;;		 -> sprintf@ap(2), 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  convarg         8   70[COMRAM] struct .
  2238 ;;  cp              2   78[COMRAM] PTR unsigned char 
  2239 ;;		 -> STR_2(36), STR_1(36), 
  2240 ;;  i               2    0        int 
  2241 ;;  done            2    0        int 
  2242 ;;  c               1    0        unsigned char 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2252 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2253 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2255 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2256 ;;Total ram usage:       18 bytes
  2257 ;; Hardware stack levels used: 1
  2258 ;; Hardware stack levels required when called: 6
  2259 ;; This function calls:
  2260 ;;		_dtoa
  2261 ;;		_fputc
  2262 ;; This function is called by:
  2263 ;;		_vfprintf
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           	psect	text3
  2268   0038DA                     __ptext3:
  2269                           	callstack 0
  2270   0038DA                     _vfpfcnvrt:
  2271                           	callstack 22
  2272   0038DA                     
  2273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2274   0038DA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2275   0038DE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2276   0038E2  CFDE FFF6          	movff	postinc2,tblptrl
  2277   0038E6  CFDD FFF7          	movff	postdec2,tblptrh
  2278   0038EA                     	if	0	;tblptru may be non-zero
  2279   0038EA                     	endif
  2280   0038EA                     	if	0	;tblptru may be non-zero
  2281   0038EA                     	endif
  2282   0038EA  0008               	tblrd		*
  2283   0038EC  50F5               	movf	tablat,w,c
  2284   0038EE  0A25               	xorlw	37
  2285   0038F0  A4D8               	btfss	status,2,c
  2286   0038F2  EF7D  F01C         	goto	u3191
  2287   0038F6  EF7F  F01C         	goto	u3190
  2288   0038FA                     u3191:
  2289   0038FA  EF00  F01D         	goto	l3698
  2290   0038FE                     u3190:
  2291   0038FE                     
  2292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2293   0038FE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2294   003902  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2295   003906  2ADE               	incf	postinc2,f,c
  2296   003908  0E00               	movlw	0
  2297   00390A  22DD               	addwfc	postdec2,f,c
  2298   00390C                     
  2299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2300   00390C  0E00               	movlw	0
  2301   00390E  0101               	movlb	1	; () banked
  2302   003910  6F5D               	movwf	(_width+1)& (0+255),b
  2303   003912  0E00               	movlw	0
  2304   003914  6F5C               	movwf	_width& (0+255),b
  2305   003916  C15C  F0F4         	movff	_width,_flags
  2306   00391A                     
  2307                           ; BSR set to: 1
  2308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2309   00391A  0100               	movlb	0	; () banked
  2310   00391C  69F0               	setf	_prec& (0+255),b
  2311   00391E  69F1               	setf	(_prec+1)& (0+255),b
  2312   003920                     
  2313                           ; BSR set to: 0
  2314                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2315   003920  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2316   003924  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2317   003928  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  2318   00392C  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  2319   003930                     
  2320                           ; BSR set to: 0
  2321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2322   003930  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2323   003934  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2324   003938                     	if	0	;tblptru may be non-zero
  2325   003938                     	endif
  2326   003938                     	if	0	;tblptru may be non-zero
  2327   003938                     	endif
  2328   003938  0008               	tblrd		*
  2329   00393A  50F5               	movf	tablat,w,c
  2330   00393C  0A64               	xorlw	100
  2331   00393E  B4D8               	btfsc	status,2,c
  2332   003940  EFA4  F01C         	goto	u3201
  2333   003944  EFA6  F01C         	goto	u3200
  2334   003948                     u3201:
  2335   003948  EFB4  F01C         	goto	l3688
  2336   00394C                     u3200:
  2337   00394C                     
  2338                           ; BSR set to: 0
  2339   00394C  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2340   003950  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2341   003954                     	if	0	;tblptru may be non-zero
  2342   003954                     	endif
  2343   003954                     	if	0	;tblptru may be non-zero
  2344   003954                     	endif
  2345   003954  0008               	tblrd		*
  2346   003956  50F5               	movf	tablat,w,c
  2347   003958  0A69               	xorlw	105
  2348   00395A  A4D8               	btfss	status,2,c
  2349   00395C  EFB2  F01C         	goto	u3211
  2350   003960  EFB4  F01C         	goto	u3210
  2351   003964                     u3211:
  2352   003964  EFF7  F01C         	goto	l3694
  2353   003968                     u3210:
  2354   003968                     l3688:
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2358   003968  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2359   00396C  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2360   003970  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2361   003974  0E02               	movlw	2
  2362   003976  26DE               	addwf	postinc2,f,c
  2363   003978  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2364   00397C  0E00               	movlw	0
  2365   00397E  22DD               	addwfc	postdec2,f,c
  2366   003980  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2367   003984  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2368   003988  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  2369   00398C  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  2370   003990  0E00               	movlw	0
  2371   003992  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2372   003994  0EFF               	movlw	-1
  2373   003996  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2374   003998  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2375   00399A  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2376   00399C  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2377   00399E  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2378   0039A0  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2381   0039A2  0E01               	movlw	1
  2382   0039A4  244F               	addwf	vfpfcnvrt@cp^0,w,c
  2383   0039A6  6E45               	movwf	??_vfpfcnvrt^0,c
  2384   0039A8  0E00               	movlw	0
  2385   0039AA  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2386   0039AC  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2387   0039AE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2388   0039B2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2389   0039B6  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2390   0039BA  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2391   0039BE                     
  2392                           ; BSR set to: 0
  2393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2394   0039BE  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2395   0039C2  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2396   0039C6  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2397   0039CA  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2398   0039CE  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2399   0039D2  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2400   0039D6  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2401   0039DA  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2402   0039DE  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2403   0039E2  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2404   0039E6  EC11  F017         	call	_dtoa	;wreg free
  2405   0039EA  EF14  F01D         	goto	l1392
  2406   0039EE                     l3694:
  2407                           
  2408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2409   0039EE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2410   0039F2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2411   0039F6  2ADE               	incf	postinc2,f,c
  2412   0039F8  0E00               	movlw	0
  2413   0039FA  22DD               	addwfc	postdec2,f,c
  2414   0039FC  EF14  F01D         	goto	l1392
  2415   003A00                     l3698:
  2416                           
  2417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2418   003A00  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2419   003A04  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2420   003A08  CFDE FFF6          	movff	postinc2,tblptrl
  2421   003A0C  CFDD FFF7          	movff	postdec2,tblptrh
  2422   003A10                     	if	0	;tblptru may be non-zero
  2423   003A10                     	endif
  2424   003A10                     	if	0	;tblptru may be non-zero
  2425   003A10                     	endif
  2426   003A10  0008               	tblrd		*
  2427   003A12  50F5               	movf	tablat,w,c
  2428   003A14  6E01               	movwf	fputc@c^0,c
  2429   003A16  6A02               	clrf	(fputc@c+1)^0,c
  2430   003A18  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2431   003A1C  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2432   003A20  EC97  F01D         	call	_fputc	;wreg free
  2433   003A24  EFF7  F01C         	goto	l3694
  2434   003A28                     l1392:
  2435   003A28  0012               	return		;funcret
  2436   003A2A                     __end_of_vfpfcnvrt:
  2437                           	callstack 0
  2438                           
  2439 ;; *************** function _dtoa *****************
  2440 ;; Defined at:
  2441 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2444 ;;		 -> sprintf@f(11), 
  2445 ;;  d               8   29[COMRAM] long long 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  n               8   51[COMRAM] long long 
  2448 ;;  i               2   59[COMRAM] int 
  2449 ;;  w               2   49[COMRAM] int 
  2450 ;;  p               2   47[COMRAM] int 
  2451 ;;  s               1   61[COMRAM] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2461 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2462 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2463 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2465 ;;Total ram usage:       35 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 5
  2468 ;; This function calls:
  2469 ;;		___aodiv
  2470 ;;		___aomod
  2471 ;;		_abs
  2472 ;;		_pad
  2473 ;; This function is called by:
  2474 ;;		_vfpfcnvrt
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text4
  2479   002E22                     __ptext4:
  2480                           	callstack 0
  2481   002E22                     _dtoa:
  2482                           	callstack 22
  2483   002E22                     
  2484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2485   002E22  C01E  F034         	movff	dtoa@d,dtoa@n
  2486   002E26  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2487   002E2A  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2488   002E2E  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2489   002E32  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2490   002E36  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2491   002E3A  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2492   002E3E  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2493   002E42                     
  2494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2495   002E42  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2496   002E44  EF26  F017         	goto	u2681
  2497   002E48  EF29  F017         	goto	u2680
  2498   002E4C                     u2681:
  2499   002E4C  0E01               	movlw	1
  2500   002E4E  EF2A  F017         	goto	u2690
  2501   002E52                     u2680:
  2502   002E52  0E00               	movlw	0
  2503   002E54                     u2690:
  2504   002E54  6E3E               	movwf	dtoa@s^0,c
  2505   002E56                     
  2506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2507   002E56  503E               	movf	dtoa@s^0,w,c
  2508   002E58  B4D8               	btfsc	status,2,c
  2509   002E5A  EF31  F017         	goto	u2701
  2510   002E5E  EF33  F017         	goto	u2700
  2511   002E62                     u2701:
  2512   002E62  EF43  F017         	goto	l3374
  2513   002E66                     u2700:
  2514   002E66                     
  2515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2516   002E66  1E3B               	comf	(dtoa@n+7)^0,f,c
  2517   002E68  1E3A               	comf	(dtoa@n+6)^0,f,c
  2518   002E6A  1E39               	comf	(dtoa@n+5)^0,f,c
  2519   002E6C  1E38               	comf	(dtoa@n+4)^0,f,c
  2520   002E6E  1E37               	comf	(dtoa@n+3)^0,f,c
  2521   002E70  1E36               	comf	(dtoa@n+2)^0,f,c
  2522   002E72  1E35               	comf	(dtoa@n+1)^0,f,c
  2523   002E74  6C34               	negf	dtoa@n^0,c
  2524   002E76  0E00               	movlw	0
  2525   002E78  2235               	addwfc	(dtoa@n+1)^0,f,c
  2526   002E7A  2236               	addwfc	(dtoa@n+2)^0,f,c
  2527   002E7C  2237               	addwfc	(dtoa@n+3)^0,f,c
  2528   002E7E  2238               	addwfc	(dtoa@n+4)^0,f,c
  2529   002E80  2239               	addwfc	(dtoa@n+5)^0,f,c
  2530   002E82  223A               	addwfc	(dtoa@n+6)^0,f,c
  2531   002E84  223B               	addwfc	(dtoa@n+7)^0,f,c
  2532   002E86                     l3374:
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2535   002E86  0100               	movlb	0	; () banked
  2536   002E88  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  2537   002E8A  EF51  F017         	goto	u2710
  2538   002E8E  51F1               	movf	(_prec+1)& (0+255),w,b
  2539   002E90  E106               	bnz	u2711
  2540   002E92  05F0               	decf	_prec& (0+255),w,b
  2541   002E94  B0D8               	btfsc	status,0,c
  2542   002E96  EF4F  F017         	goto	u2711
  2543   002E9A  EF51  F017         	goto	u2710
  2544   002E9E                     u2711:
  2545   002E9E  EF57  F017         	goto	l1371
  2546   002EA2                     u2710:
  2547   002EA2                     
  2548                           ; BSR set to: 0
  2549   002EA2  0E00               	movlw	0
  2550   002EA4  6E31               	movwf	(dtoa@p+1)^0,c
  2551   002EA6  0E01               	movlw	1
  2552   002EA8  6E30               	movwf	dtoa@p^0,c
  2553   002EAA  EF5B  F017         	goto	l1373
  2554   002EAE                     l1371:
  2555                           
  2556                           ; BSR set to: 0
  2557   002EAE  C0F0  F030         	movff	_prec,dtoa@p
  2558   002EB2  C0F1  F031         	movff	_prec+1,dtoa@p+1
  2559   002EB6                     l1373:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2563   002EB6  C15C  F032         	movff	_width,dtoa@w
  2564   002EBA  C15D  F033         	movff	_width+1,dtoa@w+1
  2565   002EBE                     
  2566                           ; BSR set to: 0
  2567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2568   002EBE  503E               	movf	dtoa@s^0,w,c
  2569   002EC0  B4D8               	btfsc	status,2,c
  2570   002EC2  EF65  F017         	goto	u2721
  2571   002EC6  EF67  F017         	goto	u2720
  2572   002ECA                     u2721:
  2573   002ECA  EF7E  F017         	goto	l1374
  2574   002ECE                     u2720:
  2575   002ECE                     
  2576                           ; BSR set to: 0
  2577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2578   002ECE  0632               	decf	dtoa@w^0,f,c
  2579   002ED0  A0D8               	btfss	status,0,c
  2580   002ED2  0633               	decf	(dtoa@w+1)^0,f,c
  2581   002ED4                     
  2582                           ; BSR set to: 0
  2583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2584   002ED4  503E               	movf	dtoa@s^0,w,c
  2585   002ED6  A4D8               	btfss	status,2,c
  2586   002ED8  EF70  F017         	goto	u2731
  2587   002EDC  EF72  F017         	goto	u2730
  2588   002EE0                     u2731:
  2589   002EE0  EF78  F017         	goto	l3386
  2590   002EE4                     u2730:
  2591   002EE4                     
  2592                           ; BSR set to: 0
  2593   002EE4  0E00               	movlw	0
  2594   002EE6  6E2F               	movwf	(_dtoa$2482+1)^0,c
  2595   002EE8  0E2B               	movlw	43
  2596   002EEA  6E2E               	movwf	_dtoa$2482^0,c
  2597   002EEC  EF7C  F017         	goto	l3388
  2598   002EF0                     l3386:
  2599                           
  2600                           ; BSR set to: 0
  2601   002EF0  0E00               	movlw	0
  2602   002EF2  6E2F               	movwf	(_dtoa$2482+1)^0,c
  2603   002EF4  0E2D               	movlw	45
  2604   002EF6  6E2E               	movwf	_dtoa$2482^0,c
  2605   002EF8                     l3388:
  2606                           
  2607                           ; BSR set to: 0
  2608   002EF8  C02E  F03E         	movff	_dtoa$2482,dtoa@s
  2609   002EFC                     l1374:
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2613   002EFC  0E00               	movlw	0
  2614   002EFE  6E3D               	movwf	(dtoa@i+1)^0,c
  2615   002F00  0E1F               	movlw	31
  2616   002F02  6E3C               	movwf	dtoa@i^0,c
  2617   002F04                     
  2618                           ; BSR set to: 0
  2619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2620   002F04  0E00               	movlw	0
  2621   002F06  0101               	movlb	1	; () banked
  2622   002F08  6FB1               	movwf	(_dbuf+31)& (0+255),b
  2623                           
  2624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2625   002F0A  EF03  F018         	goto	l3402
  2626   002F0E                     l3392:
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2629   002F0E  063C               	decf	dtoa@i^0,f,c
  2630   002F10  A0D8               	btfss	status,0,c
  2631   002F12  063D               	decf	(dtoa@i+1)^0,f,c
  2632   002F14                     
  2633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2634   002F14  0E92               	movlw	low _dbuf
  2635   002F16  243C               	addwf	dtoa@i^0,w,c
  2636   002F18  6ED9               	movwf	fsr2l,c
  2637   002F1A  0E01               	movlw	high _dbuf
  2638   002F1C  203D               	addwfc	(dtoa@i+1)^0,w,c
  2639   002F1E  6EDA               	movwf	fsr2h,c
  2640   002F20  C034  F001         	movff	dtoa@n,___aomod@dividend
  2641   002F24  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2642   002F28  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2643   002F2C  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2644   002F30  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2645   002F34  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2646   002F38  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2647   002F3C  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2648   002F40  0E0A               	movlw	10
  2649   002F42  6E09               	movwf	___aomod@divisor^0,c
  2650   002F44  0E00               	movlw	0
  2651   002F46  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2652   002F48  0E00               	movlw	0
  2653   002F4A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2654   002F4C  0E00               	movlw	0
  2655   002F4E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2656   002F50  0E00               	movlw	0
  2657   002F52  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2658   002F54  0E00               	movlw	0
  2659   002F56  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2660   002F58  0E00               	movlw	0
  2661   002F5A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2662   002F5C  0E00               	movlw	0
  2663   002F5E  6E10               	movwf	(___aomod@divisor+7)^0,c
  2664   002F60  ECBB  F01B         	call	___aomod	;wreg free
  2665   002F64  C001  F026         	movff	?___aomod,??_dtoa
  2666   002F68  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2667   002F6C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2668   002F70  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2669   002F74  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2670   002F78  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2671   002F7C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2672   002F80  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2673   002F84  C026  F013         	movff	??_dtoa,abs@a
  2674   002F88  C027  F014         	movff	??_dtoa+1,abs@a+1
  2675   002F8C  EC91  F024         	call	_abs	;wreg free
  2676   002F90  5013               	movf	?_abs^0,w,c
  2677   002F92  0F30               	addlw	48
  2678   002F94  6EDF               	movwf	indf2,c
  2679   002F96                     
  2680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2681   002F96  0630               	decf	dtoa@p^0,f,c
  2682   002F98  A0D8               	btfss	status,0,c
  2683   002F9A  0631               	decf	(dtoa@p+1)^0,f,c
  2684   002F9C                     
  2685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2686   002F9C  0632               	decf	dtoa@w^0,f,c
  2687   002F9E  A0D8               	btfss	status,0,c
  2688   002FA0  0633               	decf	(dtoa@w+1)^0,f,c
  2689   002FA2                     
  2690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2691   002FA2  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2692   002FA6  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2693   002FAA  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2694   002FAE  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2695   002FB2  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2696   002FB6  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2697   002FBA  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2698   002FBE  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2699   002FC2  0E0A               	movlw	10
  2700   002FC4  6E09               	movwf	___aodiv@divisor^0,c
  2701   002FC6  0E00               	movlw	0
  2702   002FC8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2703   002FCA  0E00               	movlw	0
  2704   002FCC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2705   002FCE  0E00               	movlw	0
  2706   002FD0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2707   002FD2  0E00               	movlw	0
  2708   002FD4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2709   002FD6  0E00               	movlw	0
  2710   002FD8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2711   002FDA  0E00               	movlw	0
  2712   002FDC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2713   002FDE  0E00               	movlw	0
  2714   002FE0  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2715   002FE2  EC41  F01A         	call	___aodiv	;wreg free
  2716   002FE6  C001  F034         	movff	?___aodiv,dtoa@n
  2717   002FEA  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2718   002FEE  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2719   002FF2  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2720   002FF6  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2721   002FFA  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2722   002FFE  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2723   003002  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2724   003006                     l3402:
  2725                           
  2726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2727   003006  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2728   003008  EF0E  F018         	goto	u2741
  2729   00300C  503D               	movf	(dtoa@i+1)^0,w,c
  2730   00300E  E108               	bnz	u2740
  2731   003010  043C               	decf	dtoa@i^0,w,c
  2732   003012  A0D8               	btfss	status,0,c
  2733   003014  EF0E  F018         	goto	u2741
  2734   003018  EF10  F018         	goto	u2740
  2735   00301C                     u2741:
  2736   00301C  EF2C  F018         	goto	l3408
  2737   003020                     u2740:
  2738   003020  5034               	movf	dtoa@n^0,w,c
  2739   003022  1035               	iorwf	(dtoa@n+1)^0,w,c
  2740   003024  1036               	iorwf	(dtoa@n+2)^0,w,c
  2741   003026  1037               	iorwf	(dtoa@n+3)^0,w,c
  2742   003028  1038               	iorwf	(dtoa@n+4)^0,w,c
  2743   00302A  1039               	iorwf	(dtoa@n+5)^0,w,c
  2744   00302C  103A               	iorwf	(dtoa@n+6)^0,w,c
  2745   00302E  103B               	iorwf	(dtoa@n+7)^0,w,c
  2746   003030  A4D8               	btfss	status,2,c
  2747   003032  EF1D  F018         	goto	u2751
  2748   003036  EF1F  F018         	goto	u2750
  2749   00303A                     u2751:
  2750   00303A  EF87  F017         	goto	l3392
  2751   00303E                     u2750:
  2752   00303E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2753   003040  EF2C  F018         	goto	u2760
  2754   003044  5031               	movf	(dtoa@p+1)^0,w,c
  2755   003046  E106               	bnz	u2761
  2756   003048  0430               	decf	dtoa@p^0,w,c
  2757   00304A  B0D8               	btfsc	status,0,c
  2758   00304C  EF2A  F018         	goto	u2761
  2759   003050  EF2C  F018         	goto	u2760
  2760   003054                     u2761:
  2761   003054  EF87  F017         	goto	l3392
  2762   003058                     u2760:
  2763   003058                     l3408:
  2764                           
  2765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2766   003058  503E               	movf	dtoa@s^0,w,c
  2767   00305A  B4D8               	btfsc	status,2,c
  2768   00305C  EF32  F018         	goto	u2771
  2769   003060  EF34  F018         	goto	u2770
  2770   003064                     u2771:
  2771   003064  EF3F  F018         	goto	l3414
  2772   003068                     u2770:
  2773   003068                     
  2774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2775   003068  063C               	decf	dtoa@i^0,f,c
  2776   00306A  A0D8               	btfss	status,0,c
  2777   00306C  063D               	decf	(dtoa@i+1)^0,f,c
  2778   00306E                     
  2779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2780   00306E  0E92               	movlw	low _dbuf
  2781   003070  243C               	addwf	dtoa@i^0,w,c
  2782   003072  6ED9               	movwf	fsr2l,c
  2783   003074  0E01               	movlw	high _dbuf
  2784   003076  203D               	addwfc	(dtoa@i+1)^0,w,c
  2785   003078  6EDA               	movwf	fsr2h,c
  2786   00307A  C03E  FFDF         	movff	dtoa@s,indf2
  2787   00307E                     l3414:
  2788                           
  2789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2790   00307E  C01C  F011         	movff	dtoa@fp,pad@fp
  2791   003082  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2792   003086  0E92               	movlw	low _dbuf
  2793   003088  243C               	addwf	dtoa@i^0,w,c
  2794   00308A  6E13               	movwf	pad@buf^0,c
  2795   00308C  0E01               	movlw	high _dbuf
  2796   00308E  203D               	addwfc	(dtoa@i+1)^0,w,c
  2797   003090  6E14               	movwf	(pad@buf+1)^0,c
  2798   003092  C032  F015         	movff	dtoa@w,pad@p
  2799   003096  C033  F016         	movff	dtoa@w+1,pad@p+1
  2800   00309A  EC51  F020         	call	_pad	;wreg free
  2801   00309E  0012               	return		;funcret
  2802   0030A0                     __end_of_dtoa:
  2803                           	callstack 0
  2804                           
  2805 ;; *************** function _pad *****************
  2806 ;; Defined at:
  2807 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2810 ;;		 -> sprintf@f(11), 
  2811 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2812 ;;		 -> dbuf(32), 
  2813 ;;  p               2   20[COMRAM] int 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  w               2   25[COMRAM] int 
  2816 ;;  i               2   23[COMRAM] int 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      void 
  2819 ;; Registers used:
  2820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2826 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2827 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2829 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2830 ;;Total ram usage:       11 bytes
  2831 ;; Hardware stack levels used: 1
  2832 ;; Hardware stack levels required when called: 4
  2833 ;; This function calls:
  2834 ;;		_fputc
  2835 ;;		_fputs
  2836 ;; This function is called by:
  2837 ;;		_dtoa
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text5
  2842   0040A2                     __ptext5:
  2843                           	callstack 0
  2844   0040A2                     _pad:
  2845                           	callstack 22
  2846   0040A2                     
  2847                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2848   0040A2  BE16               	btfsc	(pad@p+1)^0,7,c
  2849   0040A4  EF56  F020         	goto	u2531
  2850   0040A8  EF58  F020         	goto	u2530
  2851   0040AC                     u2531:
  2852   0040AC  EF5E  F020         	goto	l3278
  2853   0040B0                     u2530:
  2854   0040B0  C015  F01A         	movff	pad@p,pad@w
  2855   0040B4  C016  F01B         	movff	pad@p+1,pad@w+1
  2856   0040B8  EF62  F020         	goto	l1362
  2857   0040BC                     l3278:
  2858   0040BC  0E00               	movlw	0
  2859   0040BE  6E1B               	movwf	(pad@w+1)^0,c
  2860   0040C0  0E00               	movlw	0
  2861   0040C2  6E1A               	movwf	pad@w^0,c
  2862   0040C4                     l1362:
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2865   0040C4  0E00               	movlw	0
  2866   0040C6  6E19               	movwf	(pad@i+1)^0,c
  2867   0040C8  0E00               	movlw	0
  2868   0040CA  6E18               	movwf	pad@i^0,c
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2871   0040CC  EF74  F020         	goto	l3284
  2872   0040D0                     l3280:
  2873                           
  2874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2875   0040D0  0E00               	movlw	0
  2876   0040D2  6E02               	movwf	(fputc@c+1)^0,c
  2877   0040D4  0E20               	movlw	32
  2878   0040D6  6E01               	movwf	fputc@c^0,c
  2879   0040D8  C011  F003         	movff	pad@fp,fputc@fp
  2880   0040DC  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2881   0040E0  EC97  F01D         	call	_fputc	;wreg free
  2882   0040E4                     
  2883                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2884   0040E4  4A18               	infsnz	pad@i^0,f,c
  2885   0040E6  2A19               	incf	(pad@i+1)^0,f,c
  2886   0040E8                     l3284:
  2887                           
  2888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2889   0040E8  501A               	movf	pad@w^0,w,c
  2890   0040EA  5C18               	subwf	pad@i^0,w,c
  2891   0040EC  5019               	movf	(pad@i+1)^0,w,c
  2892   0040EE  0A80               	xorlw	128
  2893   0040F0  6E17               	movwf	??_pad^0,c
  2894   0040F2  501B               	movf	(pad@w+1)^0,w,c
  2895   0040F4  0A80               	xorlw	128
  2896   0040F6  5817               	subwfb	??_pad^0,w,c
  2897   0040F8  A0D8               	btfss	status,0,c
  2898   0040FA  EF81  F020         	goto	u2541
  2899   0040FE  EF83  F020         	goto	u2540
  2900   004102                     u2541:
  2901   004102  EF68  F020         	goto	l3280
  2902   004106                     u2540:
  2903   004106                     
  2904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2905   004106  C013  F00A         	movff	pad@buf,fputs@s
  2906   00410A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2907   00410E  C011  F00C         	movff	pad@fp,fputs@fp
  2908   004112  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2909   004116  EC4E  F024         	call	_fputs	;wreg free
  2910   00411A  0012               	return		;funcret
  2911   00411C                     __end_of_pad:
  2912                           	callstack 0
  2913                           
  2914 ;; *************** function _fputs *****************
  2915 ;; Defined at:
  2916 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2919 ;;		 -> dbuf(32), 
  2920 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2921 ;;		 -> sprintf@f(11), 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  i               2   14[COMRAM] int 
  2924 ;;  c               1   13[COMRAM] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  2    9[COMRAM] int 
  2927 ;; Registers used:
  2928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2935 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2937 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2938 ;;Total ram usage:        7 bytes
  2939 ;; Hardware stack levels used: 1
  2940 ;; Hardware stack levels required when called: 3
  2941 ;; This function calls:
  2942 ;;		_fputc
  2943 ;; This function is called by:
  2944 ;;		_pad
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text6
  2949   00489C                     __ptext6:
  2950                           	callstack 0
  2951   00489C                     _fputs:
  2952                           	callstack 22
  2953   00489C  0E00               	movlw	0
  2954   00489E  6E10               	movwf	(fputs@i+1)^0,c
  2955   0048A0  0E00               	movlw	0
  2956   0048A2  6E0F               	movwf	fputs@i^0,c
  2957   0048A4  EF5F  F024         	goto	l3176
  2958   0048A8                     l3172:
  2959   0048A8  C00E  F001         	movff	fputs@c,fputc@c
  2960   0048AC  6A02               	clrf	(fputc@c+1)^0,c
  2961   0048AE  C00C  F003         	movff	fputs@fp,fputc@fp
  2962   0048B2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2963   0048B6  EC97  F01D         	call	_fputc	;wreg free
  2964   0048BA  4A0F               	infsnz	fputs@i^0,f,c
  2965   0048BC  2A10               	incf	(fputs@i+1)^0,f,c
  2966   0048BE                     l3176:
  2967   0048BE  500F               	movf	fputs@i^0,w,c
  2968   0048C0  240A               	addwf	fputs@s^0,w,c
  2969   0048C2  6ED9               	movwf	fsr2l,c
  2970   0048C4  5010               	movf	(fputs@i+1)^0,w,c
  2971   0048C6  200B               	addwfc	(fputs@s+1)^0,w,c
  2972   0048C8  6EDA               	movwf	fsr2h,c
  2973   0048CA  50DF               	movf	indf2,w,c
  2974   0048CC  6E0E               	movwf	fputs@c^0,c
  2975   0048CE  500E               	movf	fputs@c^0,w,c
  2976   0048D0  A4D8               	btfss	status,2,c
  2977   0048D2  EF6D  F024         	goto	u2371
  2978   0048D6  EF6F  F024         	goto	u2370
  2979   0048DA                     u2371:
  2980   0048DA  EF54  F024         	goto	l3172
  2981   0048DE                     u2370:
  2982   0048DE  0012               	return		;funcret
  2983   0048E0                     __end_of_fputs:
  2984                           	callstack 0
  2985                           
  2986 ;; *************** function _fputc *****************
  2987 ;; Defined at:
  2988 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  c               2    0[COMRAM] int 
  2991 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2992 ;;		 -> sprintf@f(11), 
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  2    0[COMRAM] int 
  2997 ;; Registers used:
  2998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3006 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3007 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3008 ;;Total ram usage:        9 bytes
  3009 ;; Hardware stack levels used: 1
  3010 ;; Hardware stack levels required when called: 2
  3011 ;; This function calls:
  3012 ;;		_putch
  3013 ;; This function is called by:
  3014 ;;		_pad
  3015 ;;		_vfpfcnvrt
  3016 ;;		_fputs
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           	psect	text7
  3021   003B2E                     __ptext7:
  3022                           	callstack 0
  3023   003B2E                     _fputc:
  3024                           	callstack 25
  3025   003B2E  5003               	movf	fputc@fp^0,w,c
  3026   003B30  1004               	iorwf	(fputc@fp+1)^0,w,c
  3027   003B32  B4D8               	btfsc	status,2,c
  3028   003B34  EF9E  F01D         	goto	u2301
  3029   003B38  EFA0  F01D         	goto	u2300
  3030   003B3C                     u2301:
  3031   003B3C  EFA9  F01D         	goto	l3132
  3032   003B40                     u2300:
  3033   003B40  5003               	movf	fputc@fp^0,w,c
  3034   003B42  1004               	iorwf	(fputc@fp+1)^0,w,c
  3035   003B44  A4D8               	btfss	status,2,c
  3036   003B46  EFA7  F01D         	goto	u2311
  3037   003B4A  EFA9  F01D         	goto	u2310
  3038   003B4E                     u2311:
  3039   003B4E  EFAE  F01D         	goto	l3134
  3040   003B52                     u2310:
  3041   003B52                     l3132:
  3042   003B52  5001               	movf	fputc@c^0,w,c
  3043   003B54  ECD4  F025         	call	_putch
  3044   003B58  EFFB  F01D         	goto	l1417
  3045   003B5C                     l3134:
  3046   003B5C  EE20 F009          	lfsr	2,9
  3047   003B60  5003               	movf	fputc@fp^0,w,c
  3048   003B62  26D9               	addwf	fsr2l,f,c
  3049   003B64  5004               	movf	(fputc@fp+1)^0,w,c
  3050   003B66  22DA               	addwfc	fsr2h,f,c
  3051   003B68  50DE               	movf	postinc2,w,c
  3052   003B6A  10DE               	iorwf	postinc2,w,c
  3053   003B6C  B4D8               	btfsc	status,2,c
  3054   003B6E  EFBB  F01D         	goto	u2321
  3055   003B72  EFBD  F01D         	goto	u2320
  3056   003B76                     u2321:
  3057   003B76  EFD8  F01D         	goto	l3138
  3058   003B7A                     u2320:
  3059   003B7A  EE20 F009          	lfsr	2,9
  3060   003B7E  5003               	movf	fputc@fp^0,w,c
  3061   003B80  26D9               	addwf	fsr2l,f,c
  3062   003B82  5004               	movf	(fputc@fp+1)^0,w,c
  3063   003B84  22DA               	addwfc	fsr2h,f,c
  3064   003B86  EE10 F003          	lfsr	1,3
  3065   003B8A  5003               	movf	fputc@fp^0,w,c
  3066   003B8C  26E1               	addwf	fsr1l,f,c
  3067   003B8E  5004               	movf	(fputc@fp+1)^0,w,c
  3068   003B90  22E2               	addwfc	fsr1h,f,c
  3069   003B92  50DE               	movf	postinc2,w,c
  3070   003B94  5CE6               	subwf	postinc1,w,c
  3071   003B96  50E6               	movf	postinc1,w,c
  3072   003B98  0A80               	xorlw	128
  3073   003B9A  6E09               	movwf	(??_fputc+4)^0,c
  3074   003B9C  50DE               	movf	postinc2,w,c
  3075   003B9E  0A80               	xorlw	128
  3076   003BA0  5809               	subwfb	(??_fputc+4)^0,w,c
  3077   003BA2  B0D8               	btfsc	status,0,c
  3078   003BA4  EFD6  F01D         	goto	u2331
  3079   003BA8  EFD8  F01D         	goto	u2330
  3080   003BAC                     u2331:
  3081   003BAC  EFFB  F01D         	goto	l1417
  3082   003BB0                     u2330:
  3083   003BB0                     l3138:
  3084   003BB0  EE20 F003          	lfsr	2,3
  3085   003BB4  5003               	movf	fputc@fp^0,w,c
  3086   003BB6  26D9               	addwf	fsr2l,f,c
  3087   003BB8  5004               	movf	(fputc@fp+1)^0,w,c
  3088   003BBA  22DA               	addwfc	fsr2h,f,c
  3089   003BBC  CFDE F005          	movff	postinc2,??_fputc
  3090   003BC0  CFDD F006          	movff	postdec2,??_fputc+1
  3091   003BC4  C003  FFD9         	movff	fputc@fp,fsr2l
  3092   003BC8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3093   003BCC  CFDE F007          	movff	postinc2,??_fputc+2
  3094   003BD0  CFDD F008          	movff	postdec2,??_fputc+3
  3095   003BD4  5005               	movf	??_fputc^0,w,c
  3096   003BD6  2407               	addwf	(??_fputc+2)^0,w,c
  3097   003BD8  6ED9               	movwf	fsr2l,c
  3098   003BDA  5006               	movf	(??_fputc+1)^0,w,c
  3099   003BDC  2008               	addwfc	(??_fputc+3)^0,w,c
  3100   003BDE  6EDA               	movwf	fsr2h,c
  3101   003BE0  C001  FFDF         	movff	fputc@c,indf2
  3102   003BE4  EE20 F003          	lfsr	2,3
  3103   003BE8  5003               	movf	fputc@fp^0,w,c
  3104   003BEA  26D9               	addwf	fsr2l,f,c
  3105   003BEC  5004               	movf	(fputc@fp+1)^0,w,c
  3106   003BEE  22DA               	addwfc	fsr2h,f,c
  3107   003BF0  2ADE               	incf	postinc2,f,c
  3108   003BF2  0E00               	movlw	0
  3109   003BF4  22DD               	addwfc	postdec2,f,c
  3110   003BF6                     l1417:
  3111   003BF6  0012               	return		;funcret
  3112   003BF8                     __end_of_fputc:
  3113                           	callstack 0
  3114                           
  3115 ;; *************** function _putch *****************
  3116 ;; Defined at:
  3117 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  c               1    wreg     unsigned char 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  c               1    0[COMRAM] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3135 ;;Total ram usage:        0 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; Hardware stack levels required when called: 1
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_fputc
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text8
  3146   004BA8                     __ptext8:
  3147                           	callstack 0
  3148   004BA8                     _putch:
  3149                           	callstack 25
  3150   004BA8  0012               	return		;funcret
  3151   004BAA                     __end_of_putch:
  3152                           	callstack 0
  3153                           
  3154 ;; *************** function _abs *****************
  3155 ;; Defined at:
  3156 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  a               2   18[COMRAM] int 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  2   18[COMRAM] int 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3173 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3174 ;;Total ram usage:        4 bytes
  3175 ;; Hardware stack levels used: 1
  3176 ;; Hardware stack levels required when called: 1
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_dtoa
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text9
  3185   004922                     __ptext9:
  3186                           	callstack 0
  3187   004922                     _abs:
  3188                           	callstack 25
  3189   004922  BE14               	btfsc	(abs@a+1)^0,7,c
  3190   004924  EF9E  F024         	goto	u2550
  3191   004928  5014               	movf	(abs@a+1)^0,w,c
  3192   00492A  E106               	bnz	u2551
  3193   00492C  0413               	decf	abs@a^0,w,c
  3194   00492E  B0D8               	btfsc	status,0,c
  3195   004930  EF9C  F024         	goto	u2551
  3196   004934  EF9E  F024         	goto	u2550
  3197   004938                     u2551:
  3198   004938  EFAC  F024         	goto	l1402
  3199   00493C                     u2550:
  3200   00493C  C013  F015         	movff	abs@a,??_abs
  3201   004940  C014  F016         	movff	abs@a+1,??_abs+1
  3202   004944  1E15               	comf	??_abs^0,f,c
  3203   004946  1E16               	comf	(??_abs+1)^0,f,c
  3204   004948  4A15               	infsnz	??_abs^0,f,c
  3205   00494A  2A16               	incf	(??_abs+1)^0,f,c
  3206   00494C  C015  F013         	movff	??_abs,?_abs
  3207   004950  C016  F014         	movff	??_abs+1,?_abs+1
  3208   004954  EFB0  F024         	goto	l1405
  3209   004958                     l1402:
  3210   004958  C013  F013         	movff	abs@a,?_abs
  3211   00495C  C014  F014         	movff	abs@a+1,?_abs+1
  3212   004960                     l1405:
  3213   004960  0012               	return		;funcret
  3214   004962                     __end_of_abs:
  3215                           	callstack 0
  3216                           
  3217 ;; *************** function ___aomod *****************
  3218 ;; Defined at:
  3219 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  dividend        8    0[COMRAM] long long 
  3222 ;;  divisor         8    8[COMRAM] long long 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  sign            1   17[COMRAM] unsigned char 
  3225 ;;  counter         1   16[COMRAM] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  8    0[COMRAM] long long 
  3228 ;; Registers used:
  3229 ;;		wreg, status,2, status,0
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3235 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3236 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3238 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3239 ;;Total ram usage:       18 bytes
  3240 ;; Hardware stack levels used: 1
  3241 ;; Hardware stack levels required when called: 1
  3242 ;; This function calls:
  3243 ;;		Nothing
  3244 ;; This function is called by:
  3245 ;;		_dtoa
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           	psect	text10
  3250   003776                     __ptext10:
  3251                           	callstack 0
  3252   003776                     ___aomod:
  3253                           	callstack 25
  3254   003776  0E00               	movlw	0
  3255   003778  6E12               	movwf	___aomod@sign^0,c
  3256   00377A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3257   00377C  EFC4  F01B         	goto	u2470
  3258   003780  EFC2  F01B         	goto	u2471
  3259   003784                     u2471:
  3260   003784  EFD6  F01B         	goto	l3246
  3261   003788                     u2470:
  3262   003788  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3263   00378A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3264   00378C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3265   00378E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3266   003790  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3267   003792  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3268   003794  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3269   003796  6C01               	negf	___aomod@dividend^0,c
  3270   003798  0E00               	movlw	0
  3271   00379A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3272   00379C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3273   00379E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3274   0037A0  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3275   0037A2  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3276   0037A4  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3277   0037A6  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3278   0037A8  0E01               	movlw	1
  3279   0037AA  6E12               	movwf	___aomod@sign^0,c
  3280   0037AC                     l3246:
  3281   0037AC  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3282   0037AE  EFDD  F01B         	goto	u2480
  3283   0037B2  EFDB  F01B         	goto	u2481
  3284   0037B6                     u2481:
  3285   0037B6  EFED  F01B         	goto	l3250
  3286   0037BA                     u2480:
  3287   0037BA  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3288   0037BC  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3289   0037BE  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3290   0037C0  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3291   0037C2  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3292   0037C4  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3293   0037C6  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3294   0037C8  6C09               	negf	___aomod@divisor^0,c
  3295   0037CA  0E00               	movlw	0
  3296   0037CC  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3297   0037CE  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3298   0037D0  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3299   0037D2  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3300   0037D4  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3301   0037D6  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3302   0037D8  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3303   0037DA                     l3250:
  3304   0037DA  5009               	movf	___aomod@divisor^0,w,c
  3305   0037DC  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3306   0037DE  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3307   0037E0  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3308   0037E2  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3309   0037E4  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3310   0037E6  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3311   0037E8  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3312   0037EA  B4D8               	btfsc	status,2,c
  3313   0037EC  EFFA  F01B         	goto	u2491
  3314   0037F0  EFFC  F01B         	goto	u2490
  3315   0037F4                     u2491:
  3316   0037F4  EF44  F01C         	goto	l3266
  3317   0037F8                     u2490:
  3318   0037F8  0E01               	movlw	1
  3319   0037FA  6E11               	movwf	___aomod@counter^0,c
  3320   0037FC  EF0A  F01C         	goto	l3256
  3321   003800                     l3254:
  3322   003800  90D8               	bcf	status,0,c
  3323   003802  3609               	rlcf	___aomod@divisor^0,f,c
  3324   003804  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3325   003806  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3326   003808  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3327   00380A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3328   00380C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3329   00380E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3330   003810  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3331   003812  2A11               	incf	___aomod@counter^0,f,c
  3332   003814                     l3256:
  3333   003814  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3334   003816  EF0F  F01C         	goto	u2501
  3335   00381A  EF11  F01C         	goto	u2500
  3336   00381E                     u2501:
  3337   00381E  EF00  F01C         	goto	l3254
  3338   003822                     u2500:
  3339   003822                     l3258:
  3340   003822  5009               	movf	___aomod@divisor^0,w,c
  3341   003824  5C01               	subwf	___aomod@dividend^0,w,c
  3342   003826  500A               	movf	(___aomod@divisor+1)^0,w,c
  3343   003828  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3344   00382A  500B               	movf	(___aomod@divisor+2)^0,w,c
  3345   00382C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3346   00382E  500C               	movf	(___aomod@divisor+3)^0,w,c
  3347   003830  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3348   003832  500D               	movf	(___aomod@divisor+4)^0,w,c
  3349   003834  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3350   003836  500E               	movf	(___aomod@divisor+5)^0,w,c
  3351   003838  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3352   00383A  500F               	movf	(___aomod@divisor+6)^0,w,c
  3353   00383C  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3354   00383E  5010               	movf	(___aomod@divisor+7)^0,w,c
  3355   003840  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3356   003842  A0D8               	btfss	status,0,c
  3357   003844  EF26  F01C         	goto	u2511
  3358   003848  EF28  F01C         	goto	u2510
  3359   00384C                     u2511:
  3360   00384C  EF38  F01C         	goto	l3262
  3361   003850                     u2510:
  3362   003850  5009               	movf	___aomod@divisor^0,w,c
  3363   003852  5E01               	subwf	___aomod@dividend^0,f,c
  3364   003854  500A               	movf	(___aomod@divisor+1)^0,w,c
  3365   003856  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3366   003858  500B               	movf	(___aomod@divisor+2)^0,w,c
  3367   00385A  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3368   00385C  500C               	movf	(___aomod@divisor+3)^0,w,c
  3369   00385E  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3370   003860  500D               	movf	(___aomod@divisor+4)^0,w,c
  3371   003862  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3372   003864  500E               	movf	(___aomod@divisor+5)^0,w,c
  3373   003866  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3374   003868  500F               	movf	(___aomod@divisor+6)^0,w,c
  3375   00386A  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3376   00386C  5010               	movf	(___aomod@divisor+7)^0,w,c
  3377   00386E  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3378   003870                     l3262:
  3379   003870  90D8               	bcf	status,0,c
  3380   003872  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3381   003874  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3382   003876  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3383   003878  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3384   00387A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3385   00387C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3386   00387E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3387   003880  3209               	rrcf	___aomod@divisor^0,f,c
  3388   003882  2E11               	decfsz	___aomod@counter^0,f,c
  3389   003884  EF11  F01C         	goto	l3258
  3390   003888                     l3266:
  3391   003888  5012               	movf	___aomod@sign^0,w,c
  3392   00388A  B4D8               	btfsc	status,2,c
  3393   00388C  EF4A  F01C         	goto	u2521
  3394   003890  EF4C  F01C         	goto	u2520
  3395   003894                     u2521:
  3396   003894  EF5C  F01C         	goto	l3270
  3397   003898                     u2520:
  3398   003898  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3399   00389A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3400   00389C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3401   00389E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3402   0038A0  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3403   0038A2  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3404   0038A4  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3405   0038A6  6C01               	negf	___aomod@dividend^0,c
  3406   0038A8  0E00               	movlw	0
  3407   0038AA  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3408   0038AC  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3409   0038AE  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3410   0038B0  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3411   0038B2  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3412   0038B4  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3413   0038B6  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3414   0038B8                     l3270:
  3415   0038B8  C001  F001         	movff	___aomod@dividend,?___aomod
  3416   0038BC  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3417   0038C0  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3418   0038C4  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3419   0038C8  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3420   0038CC  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3421   0038D0  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3422   0038D4  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3423   0038D8  0012               	return		;funcret
  3424   0038DA                     __end_of___aomod:
  3425                           	callstack 0
  3426                           
  3427 ;; *************** function ___aodiv *****************
  3428 ;; Defined at:
  3429 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  dividend        8    0[COMRAM] long long 
  3432 ;;  divisor         8    8[COMRAM] long long 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;  quotient        8   18[COMRAM] long long 
  3435 ;;  sign            1   17[COMRAM] unsigned char 
  3436 ;;  counter         1   16[COMRAM] unsigned char 
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  8    0[COMRAM] long long 
  3439 ;; Registers used:
  3440 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3446 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3447 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3449 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3450 ;;Total ram usage:       26 bytes
  3451 ;; Hardware stack levels used: 1
  3452 ;; Hardware stack levels required when called: 1
  3453 ;; This function calls:
  3454 ;;		Nothing
  3455 ;; This function is called by:
  3456 ;;		_dtoa
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           	psect	text11
  3461   003482                     __ptext11:
  3462                           	callstack 0
  3463   003482                     ___aodiv:
  3464                           	callstack 25
  3465   003482  0E00               	movlw	0
  3466   003484  6E12               	movwf	___aodiv@sign^0,c
  3467   003486  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3468   003488  EF4A  F01A         	goto	u2400
  3469   00348C  EF48  F01A         	goto	u2401
  3470   003490                     u2401:
  3471   003490  EF5C  F01A         	goto	l3202
  3472   003494                     u2400:
  3473   003494  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3474   003496  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3475   003498  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3476   00349A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3477   00349C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3478   00349E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3479   0034A0  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3480   0034A2  6C09               	negf	___aodiv@divisor^0,c
  3481   0034A4  0E00               	movlw	0
  3482   0034A6  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3483   0034A8  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3484   0034AA  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3485   0034AC  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3486   0034AE  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3487   0034B0  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3488   0034B2  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3489   0034B4  0E01               	movlw	1
  3490   0034B6  6E12               	movwf	___aodiv@sign^0,c
  3491   0034B8                     l3202:
  3492   0034B8  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3493   0034BA  EF63  F01A         	goto	u2410
  3494   0034BE  EF61  F01A         	goto	u2411
  3495   0034C2                     u2411:
  3496   0034C2  EF75  F01A         	goto	l3208
  3497   0034C6                     u2410:
  3498   0034C6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3499   0034C8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3500   0034CA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3501   0034CC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3502   0034CE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3503   0034D0  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3504   0034D2  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3505   0034D4  6C01               	negf	___aodiv@dividend^0,c
  3506   0034D6  0E00               	movlw	0
  3507   0034D8  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3508   0034DA  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3509   0034DC  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3510   0034DE  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3511   0034E0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3512   0034E2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3513   0034E4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3514   0034E6  0E01               	movlw	1
  3515   0034E8  1A12               	xorwf	___aodiv@sign^0,f,c
  3516   0034EA                     l3208:
  3517   0034EA  EE20  F013         	lfsr	2,___aodiv@quotient
  3518   0034EE  0E07               	movlw	7
  3519   0034F0                     u2421:
  3520   0034F0  6ADE               	clrf	postinc2,c
  3521   0034F2  06E8               	decf	wreg,f,c
  3522   0034F4  E2FD               	bc	u2421
  3523   0034F6  5009               	movf	___aodiv@divisor^0,w,c
  3524   0034F8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3525   0034FA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3526   0034FC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3527   0034FE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3528   003500  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3529   003502  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3530   003504  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3531   003506  B4D8               	btfsc	status,2,c
  3532   003508  EF88  F01A         	goto	u2431
  3533   00350C  EF8A  F01A         	goto	u2430
  3534   003510                     u2431:
  3535   003510  EFDC  F01A         	goto	l3230
  3536   003514                     u2430:
  3537   003514  0E01               	movlw	1
  3538   003516  6E11               	movwf	___aodiv@counter^0,c
  3539   003518  EF98  F01A         	goto	l3216
  3540   00351C                     l3214:
  3541   00351C  90D8               	bcf	status,0,c
  3542   00351E  3609               	rlcf	___aodiv@divisor^0,f,c
  3543   003520  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3544   003522  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3545   003524  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3546   003526  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3547   003528  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3548   00352A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3549   00352C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3550   00352E  2A11               	incf	___aodiv@counter^0,f,c
  3551   003530                     l3216:
  3552   003530  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3553   003532  EF9D  F01A         	goto	u2441
  3554   003536  EF9F  F01A         	goto	u2440
  3555   00353A                     u2441:
  3556   00353A  EF8E  F01A         	goto	l3214
  3557   00353E                     u2440:
  3558   00353E                     l3218:
  3559   00353E  90D8               	bcf	status,0,c
  3560   003540  3613               	rlcf	___aodiv@quotient^0,f,c
  3561   003542  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3562   003544  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3563   003546  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3564   003548  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3565   00354A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3566   00354C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3567   00354E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3568   003550  5009               	movf	___aodiv@divisor^0,w,c
  3569   003552  5C01               	subwf	___aodiv@dividend^0,w,c
  3570   003554  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3571   003556  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3572   003558  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3573   00355A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3574   00355C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3575   00355E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3576   003560  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3577   003562  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3578   003564  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3579   003566  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3580   003568  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3581   00356A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3582   00356C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3583   00356E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3584   003570  A0D8               	btfss	status,0,c
  3585   003572  EFBD  F01A         	goto	u2451
  3586   003576  EFBF  F01A         	goto	u2450
  3587   00357A                     u2451:
  3588   00357A  EFD0  F01A         	goto	l3226
  3589   00357E                     u2450:
  3590   00357E  5009               	movf	___aodiv@divisor^0,w,c
  3591   003580  5E01               	subwf	___aodiv@dividend^0,f,c
  3592   003582  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3593   003584  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3594   003586  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3595   003588  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3596   00358A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3597   00358C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3598   00358E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3599   003590  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3600   003592  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3601   003594  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3602   003596  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3603   003598  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3604   00359A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3605   00359C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3606   00359E  8013               	bsf	___aodiv@quotient^0,0,c
  3607   0035A0                     l3226:
  3608   0035A0  90D8               	bcf	status,0,c
  3609   0035A2  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3610   0035A4  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3611   0035A6  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3612   0035A8  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3613   0035AA  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3614   0035AC  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3615   0035AE  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3616   0035B0  3209               	rrcf	___aodiv@divisor^0,f,c
  3617   0035B2  2E11               	decfsz	___aodiv@counter^0,f,c
  3618   0035B4  EF9F  F01A         	goto	l3218
  3619   0035B8                     l3230:
  3620   0035B8  5012               	movf	___aodiv@sign^0,w,c
  3621   0035BA  B4D8               	btfsc	status,2,c
  3622   0035BC  EFE2  F01A         	goto	u2461
  3623   0035C0  EFE4  F01A         	goto	u2460
  3624   0035C4                     u2461:
  3625   0035C4  EFF4  F01A         	goto	l3234
  3626   0035C8                     u2460:
  3627   0035C8  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3628   0035CA  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3629   0035CC  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3630   0035CE  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3631   0035D0  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3632   0035D2  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3633   0035D4  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3634   0035D6  6C13               	negf	___aodiv@quotient^0,c
  3635   0035D8  0E00               	movlw	0
  3636   0035DA  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3637   0035DC  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3638   0035DE  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3639   0035E0  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3640   0035E2  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3641   0035E4  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3642   0035E6  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3643   0035E8                     l3234:
  3644   0035E8  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3645   0035EC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3646   0035F0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3647   0035F4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3648   0035F8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3649   0035FC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3650   003600  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3651   003604  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3652   003608  0012               	return		;funcret
  3653   00360A                     __end_of___aodiv:
  3654                           	callstack 0
  3655                           
  3656 ;; *************** function _sendStringSerial4 *****************
  3657 ;; Defined at:
  3658 ;;		line 33 in file "serial.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  string          2    1[COMRAM] PTR unsigned char 
  3661 ;;		 -> main@buf(100), 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      void 
  3666 ;; Registers used:
  3667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3673 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3676 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3677 ;;Total ram usage:        2 bytes
  3678 ;; Hardware stack levels used: 1
  3679 ;; Hardware stack levels required when called: 2
  3680 ;; This function calls:
  3681 ;;		_sendCharSerial4
  3682 ;; This function is called by:
  3683 ;;		_main
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           	psect	text12
  3688   004A5A                     __ptext12:
  3689                           	callstack 0
  3690   004A5A                     _sendStringSerial4:
  3691                           	callstack 28
  3692   004A5A                     
  3693                           ;serial.c: 34:     while (*string!=0){
  3694   004A5A  EF38  F025         	goto	l4390
  3695   004A5E                     l4386:
  3696                           
  3697                           ;serial.c: 35:         sendCharSerial4(*string++);
  3698   004A5E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3699   004A62  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3700   004A66  50DF               	movf	indf2,w,c
  3701   004A68  ECB0  F025         	call	_sendCharSerial4
  3702   004A6C  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3703   004A6E  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3704   004A70                     l4390:
  3705                           
  3706                           ;serial.c: 34:     while (*string!=0){
  3707   004A70  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3708   004A74  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3709   004A78  50DF               	movf	indf2,w,c
  3710   004A7A  A4D8               	btfss	status,2,c
  3711   004A7C  EF42  F025         	goto	u4171
  3712   004A80  EF44  F025         	goto	u4170
  3713   004A84                     u4171:
  3714   004A84  EF2F  F025         	goto	l4386
  3715   004A88                     u4170:
  3716   004A88  0012               	return		;funcret
  3717   004A8A                     __end_of_sendStringSerial4:
  3718                           	callstack 0
  3719                           
  3720 ;; *************** function _sendCharSerial4 *****************
  3721 ;; Defined at:
  3722 ;;		line 26 in file "serial.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  charToSend      1    wreg     unsigned char 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  charToSend      1    0[COMRAM] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;Total ram usage:        1 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; Hardware stack levels required when called: 1
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_sendStringSerial4
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text13
  3751   004B60                     __ptext13:
  3752                           	callstack 0
  3753   004B60                     _sendCharSerial4:
  3754                           	callstack 28
  3755                           
  3756                           ;incstack = 0
  3757                           ;sendCharSerial4@charToSend stored from wreg
  3758   004B60  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3759   004B62                     l207:
  3760   004B62  010E               	movlb	14	; () banked
  3761   004B64  A537               	btfss	55,2,b	;volatile
  3762   004B66  EFB7  F025         	goto	u3221
  3763   004B6A  EFB9  F025         	goto	u3220
  3764   004B6E                     u3221:
  3765   004B6E  EFB1  F025         	goto	l207
  3766   004B72                     u3220:
  3767   004B72                     
  3768                           ; BSR set to: 14
  3769                           ;serial.c: 28:     TX4REG = charToSend;
  3770   004B72  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3771   004B76                     
  3772                           ; BSR set to: 14
  3773   004B76  0012               	return		;funcret
  3774   004B78                     __end_of_sendCharSerial4:
  3775                           	callstack 0
  3776                           
  3777 ;; *************** function _readColours *****************
  3778 ;; Defined at:
  3779 ;;		line 105 in file "color.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  vals            2   11[COMRAM] PTR struct RGB
  3782 ;;		 -> vals(8), 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  1    wreg      void 
  3787 ;; Registers used:
  3788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3797 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3798 ;;Total ram usage:        2 bytes
  3799 ;; Hardware stack levels used: 1
  3800 ;; Hardware stack levels required when called: 4
  3801 ;; This function calls:
  3802 ;;		_color_read_Blue
  3803 ;;		_color_read_Green
  3804 ;;		_color_read_Red
  3805 ;;		_color_read_lum
  3806 ;; This function is called by:
  3807 ;;		_main
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text14
  3812   004266                     __ptext14:
  3813                           	callstack 0
  3814   004266                     _readColours:
  3815                           	callstack 26
  3816   004266                     
  3817                           ;color.c: 107:     vals ->R = color_read_Red();
  3818   004266  EC8C  F023         	call	_color_read_Red	;wreg free
  3819   00426A  C00C  FFD9         	movff	readColours@vals,fsr2l
  3820   00426E  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  3821   004272  C005  FFDE         	movff	?_color_read_Red,postinc2
  3822   004276  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3823                           
  3824                           ;color.c: 108:     vals ->B = color_read_Blue();
  3825   00427A  ECDC  F023         	call	_color_read_Blue	;wreg free
  3826   00427E  EE20 F004          	lfsr	2,4
  3827   004282  500C               	movf	readColours@vals^0,w,c
  3828   004284  26D9               	addwf	fsr2l,f,c
  3829   004286  500D               	movf	(readColours@vals+1)^0,w,c
  3830   004288  22DA               	addwfc	fsr2h,f,c
  3831   00428A  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3832   00428E  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3833                           
  3834                           ;color.c: 109:     vals ->G = color_read_Green();
  3835   004292  ECB4  F023         	call	_color_read_Green	;wreg free
  3836   004296  EE20 F002          	lfsr	2,2
  3837   00429A  500C               	movf	readColours@vals^0,w,c
  3838   00429C  26D9               	addwf	fsr2l,f,c
  3839   00429E  500D               	movf	(readColours@vals+1)^0,w,c
  3840   0042A0  22DA               	addwfc	fsr2h,f,c
  3841   0042A2  C005  FFDE         	movff	?_color_read_Green,postinc2
  3842   0042A6  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3843                           
  3844                           ;color.c: 110:     vals ->L = color_read_lum();
  3845   0042AA  EC64  F023         	call	_color_read_lum	;wreg free
  3846   0042AE  EE20 F006          	lfsr	2,6
  3847   0042B2  500C               	movf	readColours@vals^0,w,c
  3848   0042B4  26D9               	addwf	fsr2l,f,c
  3849   0042B6  500D               	movf	(readColours@vals+1)^0,w,c
  3850   0042B8  22DA               	addwfc	fsr2h,f,c
  3851   0042BA  C005  FFDE         	movff	?_color_read_lum,postinc2
  3852   0042BE  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  3853   0042C2  0012               	return		;funcret
  3854   0042C4                     __end_of_readColours:
  3855                           	callstack 0
  3856                           
  3857 ;; *************** function _color_read_lum *****************
  3858 ;; Defined at:
  3859 ;;		line 49 in file "color.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;  tmp             2    9[COMRAM] unsigned int 
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  2    4[COMRAM] unsigned int 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3874 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3875 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3876 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3877 ;;Total ram usage:        7 bytes
  3878 ;; Hardware stack levels used: 1
  3879 ;; Hardware stack levels required when called: 3
  3880 ;; This function calls:
  3881 ;;		_I2C_2_Master_Read
  3882 ;;		_I2C_2_Master_RepStart
  3883 ;;		_I2C_2_Master_Start
  3884 ;;		_I2C_2_Master_Stop
  3885 ;;		_I2C_2_Master_Write
  3886 ;; This function is called by:
  3887 ;;		_readColours
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text15
  3892   0046C8                     __ptext15:
  3893                           	callstack 0
  3894   0046C8                     _color_read_lum:
  3895                           	callstack 26
  3896   0046C8                     
  3897                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  3898   0046C8  ECCC  F025         	call	_I2C_2_Master_Start	;wreg free
  3899                           
  3900                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  3901   0046CC  0E52               	movlw	82
  3902   0046CE  ECBC  F025         	call	_I2C_2_Master_Write
  3903                           
  3904                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  3905   0046D2  0EB4               	movlw	180
  3906   0046D4  ECBC  F025         	call	_I2C_2_Master_Write
  3907                           
  3908                           ;color.c: 55:  I2C_2_Master_RepStart();
  3909   0046D8  ECC2  F025         	call	_I2C_2_Master_RepStart	;wreg free
  3910                           
  3911                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  3912   0046DC  0E53               	movlw	83
  3913   0046DE  ECBC  F025         	call	_I2C_2_Master_Write
  3914                           
  3915                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  3916   0046E2  0E01               	movlw	1
  3917   0046E4  EC70  F024         	call	_I2C_2_Master_Read
  3918   0046E8  6E07               	movwf	??_color_read_lum^0,c
  3919   0046EA  5007               	movf	??_color_read_lum^0,w,c
  3920   0046EC  6E0A               	movwf	color_read_lum@tmp^0,c
  3921   0046EE  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  3922                           
  3923                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3924   0046F0  0E00               	movlw	0
  3925   0046F2  EC70  F024         	call	_I2C_2_Master_Read
  3926   0046F6  6E07               	movwf	??_color_read_lum^0,c
  3927   0046F8  5007               	movf	??_color_read_lum^0,w,c
  3928   0046FA  6E09               	movwf	(??_color_read_lum+2)^0,c
  3929   0046FC  6A08               	clrf	(??_color_read_lum+1)^0,c
  3930   0046FE  500A               	movf	color_read_lum@tmp^0,w,c
  3931   004700  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  3932   004702  6E0A               	movwf	color_read_lum@tmp^0,c
  3933   004704  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  3934   004706  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  3935   004708  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  3936                           
  3937                           ;color.c: 59:  I2C_2_Master_Stop();
  3938   00470A  ECC7  F025         	call	_I2C_2_Master_Stop	;wreg free
  3939   00470E                     
  3940                           ;color.c: 60:  return tmp;
  3941   00470E  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  3942   004712  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  3943   004716  0012               	return		;funcret
  3944   004718                     __end_of_color_read_lum:
  3945                           	callstack 0
  3946                           
  3947 ;; *************** function _color_read_Red *****************
  3948 ;; Defined at:
  3949 ;;		line 63 in file "color.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;		None
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  tmp             2    9[COMRAM] unsigned int 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  2    4[COMRAM] unsigned int 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2, status,0, cstack
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3964 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3965 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3966 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3967 ;;Total ram usage:        7 bytes
  3968 ;; Hardware stack levels used: 1
  3969 ;; Hardware stack levels required when called: 3
  3970 ;; This function calls:
  3971 ;;		_I2C_2_Master_Read
  3972 ;;		_I2C_2_Master_RepStart
  3973 ;;		_I2C_2_Master_Start
  3974 ;;		_I2C_2_Master_Stop
  3975 ;;		_I2C_2_Master_Write
  3976 ;; This function is called by:
  3977 ;;		_readColours
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text16
  3982   004718                     __ptext16:
  3983                           	callstack 0
  3984   004718                     _color_read_Red:
  3985                           	callstack 26
  3986   004718                     
  3987                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  3988   004718  ECCC  F025         	call	_I2C_2_Master_Start	;wreg free
  3989                           
  3990                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  3991   00471C  0E52               	movlw	82
  3992   00471E  ECBC  F025         	call	_I2C_2_Master_Write
  3993                           
  3994                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  3995   004722  0EB6               	movlw	182
  3996   004724  ECBC  F025         	call	_I2C_2_Master_Write
  3997                           
  3998                           ;color.c: 69:  I2C_2_Master_RepStart();
  3999   004728  ECC2  F025         	call	_I2C_2_Master_RepStart	;wreg free
  4000                           
  4001                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  4002   00472C  0E53               	movlw	83
  4003   00472E  ECBC  F025         	call	_I2C_2_Master_Write
  4004                           
  4005                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  4006   004732  0E01               	movlw	1
  4007   004734  EC70  F024         	call	_I2C_2_Master_Read
  4008   004738  6E07               	movwf	??_color_read_Red^0,c
  4009   00473A  5007               	movf	??_color_read_Red^0,w,c
  4010   00473C  6E0A               	movwf	color_read_Red@tmp^0,c
  4011   00473E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4012                           
  4013                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4014   004740  0E00               	movlw	0
  4015   004742  EC70  F024         	call	_I2C_2_Master_Read
  4016   004746  6E07               	movwf	??_color_read_Red^0,c
  4017   004748  5007               	movf	??_color_read_Red^0,w,c
  4018   00474A  6E09               	movwf	(??_color_read_Red+2)^0,c
  4019   00474C  6A08               	clrf	(??_color_read_Red+1)^0,c
  4020   00474E  500A               	movf	color_read_Red@tmp^0,w,c
  4021   004750  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4022   004752  6E0A               	movwf	color_read_Red@tmp^0,c
  4023   004754  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4024   004756  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4025   004758  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4026                           
  4027                           ;color.c: 73:  I2C_2_Master_Stop();
  4028   00475A  ECC7  F025         	call	_I2C_2_Master_Stop	;wreg free
  4029   00475E                     
  4030                           ;color.c: 74:  return tmp;
  4031   00475E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4032   004762  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4033   004766  0012               	return		;funcret
  4034   004768                     __end_of_color_read_Red:
  4035                           	callstack 0
  4036                           
  4037 ;; *************** function _color_read_Green *****************
  4038 ;; Defined at:
  4039 ;;		line 76 in file "color.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;		None
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  tmp             2    9[COMRAM] unsigned int 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  2    4[COMRAM] unsigned int 
  4046 ;; Registers used:
  4047 ;;		wreg, status,2, status,0, cstack
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4054 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4055 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4056 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4057 ;;Total ram usage:        7 bytes
  4058 ;; Hardware stack levels used: 1
  4059 ;; Hardware stack levels required when called: 3
  4060 ;; This function calls:
  4061 ;;		_I2C_2_Master_Read
  4062 ;;		_I2C_2_Master_RepStart
  4063 ;;		_I2C_2_Master_Start
  4064 ;;		_I2C_2_Master_Stop
  4065 ;;		_I2C_2_Master_Write
  4066 ;; This function is called by:
  4067 ;;		_readColours
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           	psect	text17
  4072   004768                     __ptext17:
  4073                           	callstack 0
  4074   004768                     _color_read_Green:
  4075                           	callstack 26
  4076   004768                     
  4077                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  4078   004768  ECCC  F025         	call	_I2C_2_Master_Start	;wreg free
  4079                           
  4080                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  4081   00476C  0E52               	movlw	82
  4082   00476E  ECBC  F025         	call	_I2C_2_Master_Write
  4083                           
  4084                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  4085   004772  0EB8               	movlw	184
  4086   004774  ECBC  F025         	call	_I2C_2_Master_Write
  4087                           
  4088                           ;color.c: 82:  I2C_2_Master_RepStart();
  4089   004778  ECC2  F025         	call	_I2C_2_Master_RepStart	;wreg free
  4090                           
  4091                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  4092   00477C  0E53               	movlw	83
  4093   00477E  ECBC  F025         	call	_I2C_2_Master_Write
  4094                           
  4095                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  4096   004782  0E01               	movlw	1
  4097   004784  EC70  F024         	call	_I2C_2_Master_Read
  4098   004788  6E07               	movwf	??_color_read_Green^0,c
  4099   00478A  5007               	movf	??_color_read_Green^0,w,c
  4100   00478C  6E0A               	movwf	color_read_Green@tmp^0,c
  4101   00478E  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4102                           
  4103                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4104   004790  0E00               	movlw	0
  4105   004792  EC70  F024         	call	_I2C_2_Master_Read
  4106   004796  6E07               	movwf	??_color_read_Green^0,c
  4107   004798  5007               	movf	??_color_read_Green^0,w,c
  4108   00479A  6E09               	movwf	(??_color_read_Green+2)^0,c
  4109   00479C  6A08               	clrf	(??_color_read_Green+1)^0,c
  4110   00479E  500A               	movf	color_read_Green@tmp^0,w,c
  4111   0047A0  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4112   0047A2  6E0A               	movwf	color_read_Green@tmp^0,c
  4113   0047A4  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4114   0047A6  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4115   0047A8  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4116                           
  4117                           ;color.c: 86:  I2C_2_Master_Stop();
  4118   0047AA  ECC7  F025         	call	_I2C_2_Master_Stop	;wreg free
  4119   0047AE                     
  4120                           ;color.c: 87:  return tmp;
  4121   0047AE  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4122   0047B2  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4123   0047B6  0012               	return		;funcret
  4124   0047B8                     __end_of_color_read_Green:
  4125                           	callstack 0
  4126                           
  4127 ;; *************** function _color_read_Blue *****************
  4128 ;; Defined at:
  4129 ;;		line 90 in file "color.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  tmp             2    9[COMRAM] unsigned int 
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  2    4[COMRAM] unsigned int 
  4136 ;; Registers used:
  4137 ;;		wreg, status,2, status,0, cstack
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4144 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4145 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4146 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4147 ;;Total ram usage:        7 bytes
  4148 ;; Hardware stack levels used: 1
  4149 ;; Hardware stack levels required when called: 3
  4150 ;; This function calls:
  4151 ;;		_I2C_2_Master_Read
  4152 ;;		_I2C_2_Master_RepStart
  4153 ;;		_I2C_2_Master_Start
  4154 ;;		_I2C_2_Master_Stop
  4155 ;;		_I2C_2_Master_Write
  4156 ;; This function is called by:
  4157 ;;		_readColours
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           	psect	text18
  4162   0047B8                     __ptext18:
  4163                           	callstack 0
  4164   0047B8                     _color_read_Blue:
  4165                           	callstack 26
  4166   0047B8                     
  4167                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  4168   0047B8  ECCC  F025         	call	_I2C_2_Master_Start	;wreg free
  4169                           
  4170                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  4171   0047BC  0E52               	movlw	82
  4172   0047BE  ECBC  F025         	call	_I2C_2_Master_Write
  4173                           
  4174                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  4175   0047C2  0EBA               	movlw	186
  4176   0047C4  ECBC  F025         	call	_I2C_2_Master_Write
  4177                           
  4178                           ;color.c: 96:  I2C_2_Master_RepStart();
  4179   0047C8  ECC2  F025         	call	_I2C_2_Master_RepStart	;wreg free
  4180                           
  4181                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  4182   0047CC  0E53               	movlw	83
  4183   0047CE  ECBC  F025         	call	_I2C_2_Master_Write
  4184                           
  4185                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  4186   0047D2  0E01               	movlw	1
  4187   0047D4  EC70  F024         	call	_I2C_2_Master_Read
  4188   0047D8  6E07               	movwf	??_color_read_Blue^0,c
  4189   0047DA  5007               	movf	??_color_read_Blue^0,w,c
  4190   0047DC  6E0A               	movwf	color_read_Blue@tmp^0,c
  4191   0047DE  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4192                           
  4193                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4194   0047E0  0E00               	movlw	0
  4195   0047E2  EC70  F024         	call	_I2C_2_Master_Read
  4196   0047E6  6E07               	movwf	??_color_read_Blue^0,c
  4197   0047E8  5007               	movf	??_color_read_Blue^0,w,c
  4198   0047EA  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4199   0047EC  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4200   0047EE  500A               	movf	color_read_Blue@tmp^0,w,c
  4201   0047F0  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4202   0047F2  6E0A               	movwf	color_read_Blue@tmp^0,c
  4203   0047F4  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4204   0047F6  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4205   0047F8  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4206                           
  4207                           ;color.c: 100:  I2C_2_Master_Stop();
  4208   0047FA  ECC7  F025         	call	_I2C_2_Master_Stop	;wreg free
  4209   0047FE                     
  4210                           ;color.c: 101:  return tmp;
  4211   0047FE  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4212   004802  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4213   004806  0012               	return		;funcret
  4214   004808                     __end_of_color_read_Blue:
  4215                           	callstack 0
  4216                           
  4217 ;; *************** function _I2C_2_Master_RepStart *****************
  4218 ;; Defined at:
  4219 ;;		line 33 in file "i2c.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4237 ;;Total ram usage:        0 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; Hardware stack levels required when called: 2
  4240 ;; This function calls:
  4241 ;;		_I2C_2_Master_Idle
  4242 ;; This function is called by:
  4243 ;;		_color_read_lum
  4244 ;;		_color_read_Red
  4245 ;;		_color_read_Green
  4246 ;;		_color_read_Blue
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text19
  4251   004B84                     __ptext19:
  4252                           	callstack 0
  4253   004B84                     _I2C_2_Master_RepStart:
  4254                           	callstack 26
  4255   004B84                     
  4256                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4257   004B84  EC5A  F025         	call	_I2C_2_Master_Idle	;wreg free
  4258   004B88                     
  4259                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4260   004B88  010E               	movlb	14	; () banked
  4261   004B8A  83DA               	bsf	218,1,b	;volatile
  4262   004B8C                     
  4263                           ; BSR set to: 14
  4264   004B8C  0012               	return		;funcret
  4265   004B8E                     __end_of_I2C_2_Master_RepStart:
  4266                           	callstack 0
  4267                           
  4268 ;; *************** function _I2C_2_Master_Read *****************
  4269 ;; Defined at:
  4270 ;;		line 51 in file "i2c.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  ack             1    wreg     unsigned char 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  ack             1    2[COMRAM] unsigned char 
  4275 ;;  tmp             1    3[COMRAM] unsigned char 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      unsigned char 
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4288 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4289 ;;Total ram usage:        3 bytes
  4290 ;; Hardware stack levels used: 1
  4291 ;; Hardware stack levels required when called: 2
  4292 ;; This function calls:
  4293 ;;		_I2C_2_Master_Idle
  4294 ;; This function is called by:
  4295 ;;		_color_read_lum
  4296 ;;		_color_read_Red
  4297 ;;		_color_read_Green
  4298 ;;		_color_read_Blue
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text20
  4303   0048E0                     __ptext20:
  4304                           	callstack 0
  4305   0048E0                     _I2C_2_Master_Read:
  4306                           	callstack 26
  4307                           
  4308                           ; BSR set to: 14
  4309                           ;incstack = 0
  4310                           ;I2C_2_Master_Read@ack stored from wreg
  4311   0048E0  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4312   0048E2                     
  4313                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4314   0048E2  EC5A  F025         	call	_I2C_2_Master_Idle	;wreg free
  4315   0048E6                     
  4316                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4317   0048E6  010E               	movlb	14	; () banked
  4318   0048E8  87DA               	bsf	218,3,b	;volatile
  4319                           
  4320                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4321   0048EA  EC5A  F025         	call	_I2C_2_Master_Idle	;wreg free
  4322   0048EE                     
  4323                           ;i2c.c: 57:   tmp = SSP2BUF;
  4324   0048EE  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4325                           
  4326                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4327   0048F2  EC5A  F025         	call	_I2C_2_Master_Idle	;wreg free
  4328   0048F6                     
  4329                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4330   0048F6  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4331   0048F8  B4D8               	btfsc	status,2,c
  4332   0048FA  EF81  F024         	goto	u2781
  4333   0048FE  EF85  F024         	goto	u2780
  4334   004902                     u2781:
  4335   004902  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4336   004904  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4337   004906  EF86  F024         	goto	u2798
  4338   00490A                     u2780:
  4339   00490A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4340   00490C                     u2798:
  4341   00490C  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4342   00490E  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4343   004910  010E               	movlb	14	; () banked
  4344   004912  51DA               	movf	218,w,b	;volatile
  4345   004914  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4346   004916  0BDF               	andlw	-33
  4347   004918  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4348   00491A  6FDA               	movwf	218,b	;volatile
  4349   00491C                     
  4350                           ; BSR set to: 14
  4351                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4352   00491C  89DA               	bsf	218,4,b	;volatile
  4353   00491E                     
  4354                           ; BSR set to: 14
  4355                           ;i2c.c: 61:   return tmp;
  4356   00491E  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4357   004920                     
  4358                           ; BSR set to: 14
  4359   004920  0012               	return		;funcret
  4360   004922                     __end_of_I2C_2_Master_Read:
  4361                           	callstack 0
  4362                           
  4363 ;; *************** function _initUSART4 *****************
  4364 ;; Defined at:
  4365 ;;		line 4 in file "serial.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4383 ;;Total ram usage:        0 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; Hardware stack levels required when called: 1
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_main
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text21
  4394   004B42                     __ptext21:
  4395                           	callstack 0
  4396   004B42                     _initUSART4:
  4397                           	callstack 29
  4398   004B42                     
  4399                           ;serial.c: 5:     RC0PPS = 0x12;
  4400   004B42  0E12               	movlw	18
  4401   004B44  010E               	movlb	14	; () banked
  4402   004B46  6F62               	movwf	98,b	;volatile
  4403                           
  4404                           ;serial.c: 6:     RX4PPS = 0x11;
  4405   004B48  0E11               	movlw	17
  4406   004B4A  6F15               	movwf	21,b	;volatile
  4407   004B4C                     
  4408                           ; BSR set to: 14
  4409                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  4410   004B4C  97E9               	bcf	233,3,b	;volatile
  4411   004B4E                     
  4412                           ; BSR set to: 14
  4413                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  4414   004B4E  95E8               	bcf	232,2,b	;volatile
  4415                           
  4416                           ;serial.c: 9:     SP4BRGL = 51;
  4417   004B50  0E33               	movlw	51
  4418   004B52  6FE5               	movwf	229,b	;volatile
  4419                           
  4420                           ;serial.c: 10:     SP4BRGH = 0;
  4421   004B54  0E00               	movlw	0
  4422   004B56  6FE6               	movwf	230,b	;volatile
  4423   004B58                     
  4424                           ; BSR set to: 14
  4425                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  4426   004B58  89E7               	bsf	231,4,b	;volatile
  4427   004B5A                     
  4428                           ; BSR set to: 14
  4429                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  4430   004B5A  8BE8               	bsf	232,5,b	;volatile
  4431   004B5C                     
  4432                           ; BSR set to: 14
  4433                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  4434   004B5C  8FE7               	bsf	231,7,b	;volatile
  4435   004B5E                     
  4436                           ; BSR set to: 14
  4437   004B5E  0012               	return		;funcret
  4438   004B60                     __end_of_initUSART4:
  4439                           	callstack 0
  4440                           
  4441 ;; *************** function _initDCmotorsPWM *****************
  4442 ;; Defined at:
  4443 ;;		line 5 in file "dc_motor.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;		None
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  1    wreg      void 
  4450 ;; Registers used:
  4451 ;;		wreg, status,2
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4460 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4461 ;;Total ram usage:        2 bytes
  4462 ;; Hardware stack levels used: 1
  4463 ;; Hardware stack levels required when called: 1
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_main
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text22
  4472   003F1A                     __ptext22:
  4473                           	callstack 0
  4474   003F1A                     _initDCmotorsPWM:
  4475                           	callstack 29
  4476   003F1A                     
  4477                           ;dc_motor.c: 9:     RE2PPS=0x05;
  4478   003F1A  0E05               	movlw	5
  4479   003F1C  010E               	movlb	14	; () banked
  4480   003F1E  6F74               	movwf	116,b	;volatile
  4481                           
  4482                           ;dc_motor.c: 10:     RE4PPS=0x06;
  4483   003F20  0E06               	movlw	6
  4484   003F22  6F76               	movwf	118,b	;volatile
  4485                           
  4486                           ;dc_motor.c: 11:     RC7PPS=0x07;
  4487   003F24  0E07               	movlw	7
  4488   003F26  6F69               	movwf	105,b	;volatile
  4489                           
  4490                           ;dc_motor.c: 12:     RG6PPS=0x08;
  4491   003F28  0E08               	movlw	8
  4492   003F2A  6F88               	movwf	136,b	;volatile
  4493   003F2C                     
  4494                           ; BSR set to: 14
  4495                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  4496   003F2C  9485               	bcf	133,2,c	;volatile
  4497   003F2E                     
  4498                           ; BSR set to: 14
  4499                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  4500   003F2E  9885               	bcf	133,4,c	;volatile
  4501   003F30                     
  4502                           ; BSR set to: 14
  4503                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  4504   003F30  9E83               	bcf	131,7,c	;volatile
  4505   003F32                     
  4506                           ; BSR set to: 14
  4507                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  4508   003F32  9C87               	bcf	135,6,c	;volatile
  4509                           
  4510                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  4511   003F34  50BD               	movf	189,w,c	;volatile
  4512   003F36  0B8F               	andlw	-113
  4513   003F38  0930               	iorlw	48
  4514   003F3A  6EBD               	movwf	189,c	;volatile
  4515                           
  4516                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  4517   003F3C  0EE0               	movlw	-32
  4518   003F3E  16BE               	andwf	190,f,c	;volatile
  4519                           
  4520                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  4521   003F40  50BF               	movf	191,w,c	;volatile
  4522   003F42  0BF0               	andlw	-16
  4523   003F44  0901               	iorlw	1
  4524   003F46  6EBF               	movwf	191,c	;volatile
  4525   003F48                     
  4526                           ; BSR set to: 14
  4527                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  4528   003F48  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4529   003F4C                     
  4530                           ; BSR set to: 14
  4531                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  4532   003F4C  8EBD               	bsf	189,7,c	;volatile
  4533                           
  4534                           ;dc_motor.c: 33:     CCPR1H=0;
  4535   003F4E  0E00               	movlw	0
  4536   003F50  6EAA               	movwf	170,c	;volatile
  4537                           
  4538                           ;dc_motor.c: 34:     CCPR2H=0;
  4539   003F52  0E00               	movlw	0
  4540   003F54  6EA6               	movwf	166,c	;volatile
  4541                           
  4542                           ;dc_motor.c: 35:     CCPR3H=0;
  4543   003F56  0E00               	movlw	0
  4544   003F58  010F               	movlb	15	; () banked
  4545   003F5A  6F25               	movwf	37,b	;volatile
  4546                           
  4547                           ;dc_motor.c: 36:     CCPR4H=0;
  4548   003F5C  0E00               	movlw	0
  4549   003F5E  6F21               	movwf	33,b	;volatile
  4550                           
  4551                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  4552   003F60  0EFC               	movlw	-4
  4553   003F62  16AD               	andwf	173,f,c	;volatile
  4554                           
  4555                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  4556   003F64  0EF3               	movlw	-13
  4557   003F66  16AD               	andwf	173,f,c	;volatile
  4558                           
  4559                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  4560   003F68  0ECF               	movlw	-49
  4561   003F6A  16AD               	andwf	173,f,c	;volatile
  4562                           
  4563                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  4564   003F6C  0E3F               	movlw	-193
  4565   003F6E  16AD               	andwf	173,f,c	;volatile
  4566   003F70                     
  4567                           ; BSR set to: 15
  4568                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  4569   003F70  88AB               	bsf	171,4,c	;volatile
  4570                           
  4571                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  4572   003F72  50AB               	movf	171,w,c	;volatile
  4573   003F74  0BF0               	andlw	-16
  4574   003F76  090C               	iorlw	12
  4575   003F78  6EAB               	movwf	171,c	;volatile
  4576   003F7A                     
  4577                           ; BSR set to: 15
  4578                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  4579   003F7A  8EAB               	bsf	171,7,c	;volatile
  4580   003F7C                     
  4581                           ; BSR set to: 15
  4582                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  4583   003F7C  88A7               	bsf	167,4,c	;volatile
  4584                           
  4585                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  4586   003F7E  50A7               	movf	167,w,c	;volatile
  4587   003F80  0BF0               	andlw	-16
  4588   003F82  090C               	iorlw	12
  4589   003F84  6EA7               	movwf	167,c	;volatile
  4590   003F86                     
  4591                           ; BSR set to: 15
  4592                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  4593   003F86  8EA7               	bsf	167,7,c	;volatile
  4594   003F88                     
  4595                           ; BSR set to: 15
  4596                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  4597   003F88  8926               	bsf	38,4,b	;volatile
  4598                           
  4599                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  4600   003F8A  5126               	movf	38,w,b	;volatile
  4601   003F8C  0BF0               	andlw	-16
  4602   003F8E  090C               	iorlw	12
  4603   003F90  6F26               	movwf	38,b	;volatile
  4604   003F92                     
  4605                           ; BSR set to: 15
  4606                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  4607   003F92  8F26               	bsf	38,7,b	;volatile
  4608   003F94                     
  4609                           ; BSR set to: 15
  4610                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  4611   003F94  8922               	bsf	34,4,b	;volatile
  4612                           
  4613                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  4614   003F96  5122               	movf	34,w,b	;volatile
  4615   003F98  0BF0               	andlw	-16
  4616   003F9A  090C               	iorlw	12
  4617   003F9C  6F22               	movwf	34,b	;volatile
  4618   003F9E                     
  4619                           ; BSR set to: 15
  4620                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  4621   003F9E  8F22               	bsf	34,7,b	;volatile
  4622   003FA0                     
  4623                           ; BSR set to: 15
  4624   003FA0  0012               	return		;funcret
  4625   003FA2                     __end_of_initDCmotorsPWM:
  4626                           	callstack 0
  4627                           
  4628 ;; *************** function _go_Home *****************
  4629 ;; Defined at:
  4630 ;;		line 4 in file "Memory.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  4633 ;;		 -> WayBack(50), 
  4634 ;;  Time_forward    2   37[COMRAM] PTR int 
  4635 ;;		 -> Time_forward(100), 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  time_temp       2    0        unsigned int 
  4638 ;;  i               2   44[COMRAM] int 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4650 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4651 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4652 ;;Total ram usage:       11 bytes
  4653 ;; Hardware stack levels used: 1
  4654 ;; Hardware stack levels required when called: 6
  4655 ;; This function calls:
  4656 ;;		_BlueMove
  4657 ;;		_Forwardhalfblock
  4658 ;;		_GreenMove
  4659 ;;		_LightBlueMove
  4660 ;;		_OrangeMove
  4661 ;;		_RedMove
  4662 ;;		_ReversePink
  4663 ;;		_ReverseYellow
  4664 ;;		_fullSpeedAhead
  4665 ;; This function is called by:
  4666 ;;		_main
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           	psect	text23
  4671   0030A0                     __ptext23:
  4672                           	callstack 0
  4673   0030A0                     _go_Home:
  4674                           	callstack 24
  4675   0030A0                     
  4676                           ;Memory.c: 5:     int i;;Memory.c: 6:     for (i = move_count; i >= 0; i--){
  4677   0030A0  C0F2  F02D         	movff	_move_count,go_Home@i	;volatile
  4678   0030A4  C0F3  F02E         	movff	_move_count+1,go_Home@i+1	;volatile
  4679   0030A8                     l4470:
  4680   0030A8  BE2E               	btfsc	(go_Home@i+1)^0,7,c
  4681   0030AA  EF5B  F018         	goto	u4210
  4682   0030AE  EF59  F018         	goto	u4211
  4683   0030B2                     u4211:
  4684   0030B2  EF5D  F018         	goto	l4474
  4685   0030B6                     u4210:
  4686   0030B6  EF66  F019         	goto	l635
  4687   0030BA                     l4474:
  4688                           
  4689                           ;Memory.c: 7:         TMR0H=0;
  4690   0030BA  0E00               	movlw	0
  4691   0030BC  6ED4               	movwf	212,c	;volatile
  4692                           
  4693                           ;Memory.c: 8:         TMR0L=0;
  4694   0030BE  0E00               	movlw	0
  4695   0030C0  6ED3               	movwf	211,c	;volatile
  4696   0030C2                     l4476:
  4697   0030C2  50D3               	movf	211,w,c	;volatile
  4698                           
  4699                           ;Memory.c: 11:         while (TMR0H<<8<Time_forward[i]){
  4700   0030C4  EF70  F018         	goto	l4482
  4701   0030C8                     l4478:
  4702                           
  4703                           ;Memory.c: 12:             fullSpeedAhead(&motorL,&motorR);
  4704   0030C8  0EF5               	movlw	low _motorL
  4705   0030CA  6E14               	movwf	fullSpeedAhead@mL^0,c
  4706   0030CC  0E00               	movlw	high _motorL
  4707   0030CE  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  4708   0030D0  0EBE               	movlw	low _motorR
  4709   0030D2  6E16               	movwf	fullSpeedAhead@mR^0,c
  4710   0030D4  0E01               	movlw	high _motorR
  4711   0030D6  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  4712   0030D8  ECA0  F01E         	call	_fullSpeedAhead	;wreg free
  4713   0030DC  EF61  F018         	goto	l4476
  4714   0030E0                     l4482:
  4715                           
  4716                           ;Memory.c: 11:         while (TMR0H<<8<Time_forward[i]){
  4717   0030E0  90D8               	bcf	status,0,c
  4718   0030E2  342D               	rlcf	go_Home@i^0,w,c
  4719   0030E4  6ED9               	movwf	fsr2l,c
  4720   0030E6  342E               	rlcf	(go_Home@i+1)^0,w,c
  4721   0030E8  6EDA               	movwf	fsr2h,c
  4722   0030EA  5026               	movf	go_Home@Time_forward^0,w,c
  4723   0030EC  26D9               	addwf	fsr2l,f,c
  4724   0030EE  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  4725   0030F0  22DA               	addwfc	fsr2h,f,c
  4726   0030F2  50D4               	movf	212,w,c	;volatile
  4727   0030F4  6E2B               	movwf	(??_go_Home+3)^0,c
  4728   0030F6  6A2A               	clrf	(??_go_Home+2)^0,c
  4729   0030F8  50DE               	movf	postinc2,w,c
  4730   0030FA  5C2A               	subwf	(??_go_Home+2)^0,w,c
  4731   0030FC  502B               	movf	(??_go_Home+3)^0,w,c
  4732   0030FE  0A80               	xorlw	128
  4733   003100  6E2C               	movwf	(??_go_Home+4)^0,c
  4734   003102  50DE               	movf	postinc2,w,c
  4735   003104  0A80               	xorlw	128
  4736   003106  582C               	subwfb	(??_go_Home+4)^0,w,c
  4737   003108  A0D8               	btfss	status,0,c
  4738   00310A  EF89  F018         	goto	u4221
  4739   00310E  EF8B  F018         	goto	u4220
  4740   003112                     u4221:
  4741   003112  EF64  F018         	goto	l4478
  4742   003116                     u4220:
  4743   003116                     
  4744                           ;Memory.c: 17:         if (WayBack[i]==0){
  4745   003116  502D               	movf	go_Home@i^0,w,c
  4746   003118  2424               	addwf	go_Home@WayBack^0,w,c
  4747   00311A  6ED9               	movwf	fsr2l,c
  4748   00311C  502E               	movf	(go_Home@i+1)^0,w,c
  4749   00311E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4750   003120  6EDA               	movwf	fsr2h,c
  4751   003122  50DF               	movf	indf2,w,c
  4752   003124  A4D8               	btfss	status,2,c
  4753   003126  EF97  F018         	goto	u4231
  4754   00312A  EF99  F018         	goto	u4230
  4755   00312E                     u4231:
  4756   00312E  EFA5  F018         	goto	l4488
  4757   003132                     u4230:
  4758   003132                     
  4759                           ;Memory.c: 18:             Forwardhalfblock(&motorL,&motorR);
  4760   003132  0EF5               	movlw	low _motorL
  4761   003134  6E1A               	movwf	Forwardhalfblock@mL^0,c
  4762   003136  0E00               	movlw	high _motorL
  4763   003138  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  4764   00313A  0EBE               	movlw	low _motorR
  4765   00313C  6E1C               	movwf	Forwardhalfblock@mR^0,c
  4766   00313E  0E01               	movlw	high _motorR
  4767   003140  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  4768   003142  EC8F  F021         	call	_Forwardhalfblock	;wreg free
  4769                           
  4770                           ;Memory.c: 19:         }
  4771   003146  EF61  F019         	goto	l4516
  4772   00314A                     l4488:
  4773   00314A  502D               	movf	go_Home@i^0,w,c
  4774   00314C  2424               	addwf	go_Home@WayBack^0,w,c
  4775   00314E  6ED9               	movwf	fsr2l,c
  4776   003150  502E               	movf	(go_Home@i+1)^0,w,c
  4777   003152  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4778   003154  6EDA               	movwf	fsr2h,c
  4779   003156  04DE               	decf	postinc2,w,c
  4780   003158  A4D8               	btfss	status,2,c
  4781   00315A  EFB1  F018         	goto	u4241
  4782   00315E  EFB3  F018         	goto	u4240
  4783   003162                     u4241:
  4784   003162  EFBF  F018         	goto	l4492
  4785   003166                     u4240:
  4786   003166                     
  4787                           ;Memory.c: 21:             GreenMove(&motorL, &motorR);
  4788   003166  0EF5               	movlw	low _motorL
  4789   003168  6E20               	movwf	GreenMove@mL^0,c
  4790   00316A  0E00               	movlw	high _motorL
  4791   00316C  6E21               	movwf	(GreenMove@mL+1)^0,c
  4792   00316E  0EBE               	movlw	low _motorR
  4793   003170  6E22               	movwf	GreenMove@mR^0,c
  4794   003172  0E01               	movlw	high _motorR
  4795   003174  6E23               	movwf	(GreenMove@mR+1)^0,c
  4796   003176  EC0E  F025         	call	_GreenMove	;wreg free
  4797                           
  4798                           ;Memory.c: 22:         }
  4799   00317A  EF61  F019         	goto	l4516
  4800   00317E                     l4492:
  4801   00317E  502D               	movf	go_Home@i^0,w,c
  4802   003180  2424               	addwf	go_Home@WayBack^0,w,c
  4803   003182  6ED9               	movwf	fsr2l,c
  4804   003184  502E               	movf	(go_Home@i+1)^0,w,c
  4805   003186  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4806   003188  6EDA               	movwf	fsr2h,c
  4807   00318A  0E02               	movlw	2
  4808   00318C  18DE               	xorwf	postinc2,w,c
  4809   00318E  A4D8               	btfss	status,2,c
  4810   003190  EFCC  F018         	goto	u4251
  4811   003194  EFCE  F018         	goto	u4250
  4812   003198                     u4251:
  4813   003198  EFDA  F018         	goto	l4496
  4814   00319C                     u4250:
  4815   00319C                     
  4816                           ;Memory.c: 24:             LightBlueMove(&motorL, &motorR);
  4817   00319C  0EF5               	movlw	low _motorL
  4818   00319E  6E20               	movwf	LightBlueMove@mL^0,c
  4819   0031A0  0E00               	movlw	high _motorL
  4820   0031A2  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  4821   0031A4  0EBE               	movlw	low _motorR
  4822   0031A6  6E22               	movwf	LightBlueMove@mR^0,c
  4823   0031A8  0E01               	movlw	high _motorR
  4824   0031AA  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  4825   0031AC  ECC0  F022         	call	_LightBlueMove	;wreg free
  4826                           
  4827                           ;Memory.c: 25:         }
  4828   0031B0  EF61  F019         	goto	l4516
  4829   0031B4                     l4496:
  4830   0031B4  502D               	movf	go_Home@i^0,w,c
  4831   0031B6  2424               	addwf	go_Home@WayBack^0,w,c
  4832   0031B8  6ED9               	movwf	fsr2l,c
  4833   0031BA  502E               	movf	(go_Home@i+1)^0,w,c
  4834   0031BC  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4835   0031BE  6EDA               	movwf	fsr2h,c
  4836   0031C0  0E03               	movlw	3
  4837   0031C2  18DE               	xorwf	postinc2,w,c
  4838   0031C4  A4D8               	btfss	status,2,c
  4839   0031C6  EFE7  F018         	goto	u4261
  4840   0031CA  EFE9  F018         	goto	u4260
  4841   0031CE                     u4261:
  4842   0031CE  EFF5  F018         	goto	l4500
  4843   0031D2                     u4260:
  4844   0031D2                     
  4845                           ;Memory.c: 27:             ReverseYellow(&motorL, &motorR);
  4846   0031D2  0EF5               	movlw	low _motorL
  4847   0031D4  6E20               	movwf	ReverseYellow@mL^0,c
  4848   0031D6  0E00               	movlw	high _motorL
  4849   0031D8  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  4850   0031DA  0EBE               	movlw	low _motorR
  4851   0031DC  6E22               	movwf	ReverseYellow@mR^0,c
  4852   0031DE  0E01               	movlw	high _motorR
  4853   0031E0  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  4854   0031E2  ECB1  F024         	call	_ReverseYellow	;wreg free
  4855                           
  4856                           ;Memory.c: 28:         }
  4857   0031E6  EF61  F019         	goto	l4516
  4858   0031EA                     l4500:
  4859   0031EA  502D               	movf	go_Home@i^0,w,c
  4860   0031EC  2424               	addwf	go_Home@WayBack^0,w,c
  4861   0031EE  6ED9               	movwf	fsr2l,c
  4862   0031F0  502E               	movf	(go_Home@i+1)^0,w,c
  4863   0031F2  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4864   0031F4  6EDA               	movwf	fsr2h,c
  4865   0031F6  0E04               	movlw	4
  4866   0031F8  18DE               	xorwf	postinc2,w,c
  4867   0031FA  A4D8               	btfss	status,2,c
  4868   0031FC  EF02  F019         	goto	u4271
  4869   003200  EF04  F019         	goto	u4270
  4870   003204                     u4271:
  4871   003204  EF10  F019         	goto	l4504
  4872   003208                     u4270:
  4873   003208                     
  4874                           ;Memory.c: 30:             BlueMove(&motorL, &motorR);
  4875   003208  0EF5               	movlw	low _motorL
  4876   00320A  6E20               	movwf	BlueMove@mL^0,c
  4877   00320C  0E00               	movlw	high _motorL
  4878   00320E  6E21               	movwf	(BlueMove@mL+1)^0,c
  4879   003210  0EBE               	movlw	low _motorR
  4880   003212  6E22               	movwf	BlueMove@mR^0,c
  4881   003214  0E01               	movlw	high _motorR
  4882   003216  6E23               	movwf	(BlueMove@mR+1)^0,c
  4883   003218  EC00  F021         	call	_BlueMove	;wreg free
  4884                           
  4885                           ;Memory.c: 31:         }
  4886   00321C  EF61  F019         	goto	l4516
  4887   003220                     l4504:
  4888   003220  502D               	movf	go_Home@i^0,w,c
  4889   003222  2424               	addwf	go_Home@WayBack^0,w,c
  4890   003224  6ED9               	movwf	fsr2l,c
  4891   003226  502E               	movf	(go_Home@i+1)^0,w,c
  4892   003228  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4893   00322A  6EDA               	movwf	fsr2h,c
  4894   00322C  0E05               	movlw	5
  4895   00322E  18DE               	xorwf	postinc2,w,c
  4896   003230  A4D8               	btfss	status,2,c
  4897   003232  EF1D  F019         	goto	u4281
  4898   003236  EF1F  F019         	goto	u4280
  4899   00323A                     u4281:
  4900   00323A  EF2B  F019         	goto	l4508
  4901   00323E                     u4280:
  4902   00323E                     
  4903                           ;Memory.c: 33:             RedMove(&motorL, &motorR);
  4904   00323E  0EF5               	movlw	low _motorL
  4905   003240  6E20               	movwf	RedMove@mL^0,c
  4906   003242  0E00               	movlw	high _motorL
  4907   003244  6E21               	movwf	(RedMove@mL+1)^0,c
  4908   003246  0EBE               	movlw	low _motorR
  4909   003248  6E22               	movwf	RedMove@mR^0,c
  4910   00324A  0E01               	movlw	high _motorR
  4911   00324C  6E23               	movwf	(RedMove@mR+1)^0,c
  4912   00324E  ECEF  F024         	call	_RedMove	;wreg free
  4913                           
  4914                           ;Memory.c: 34:         }
  4915   003252  EF61  F019         	goto	l4516
  4916   003256                     l4508:
  4917   003256  502D               	movf	go_Home@i^0,w,c
  4918   003258  2424               	addwf	go_Home@WayBack^0,w,c
  4919   00325A  6ED9               	movwf	fsr2l,c
  4920   00325C  502E               	movf	(go_Home@i+1)^0,w,c
  4921   00325E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4922   003260  6EDA               	movwf	fsr2h,c
  4923   003262  0E06               	movlw	6
  4924   003264  18DE               	xorwf	postinc2,w,c
  4925   003266  A4D8               	btfss	status,2,c
  4926   003268  EF38  F019         	goto	u4291
  4927   00326C  EF3A  F019         	goto	u4290
  4928   003270                     u4291:
  4929   003270  EF46  F019         	goto	l4512
  4930   003274                     u4290:
  4931   003274                     
  4932                           ;Memory.c: 36:             OrangeMove(&motorL, &motorR);
  4933   003274  0EF5               	movlw	low _motorL
  4934   003276  6E20               	movwf	OrangeMove@mL^0,c
  4935   003278  0E00               	movlw	high _motorL
  4936   00327A  6E21               	movwf	(OrangeMove@mL+1)^0,c
  4937   00327C  0EBE               	movlw	low _motorR
  4938   00327E  6E22               	movwf	OrangeMove@mR^0,c
  4939   003280  0E01               	movlw	high _motorR
  4940   003282  6E23               	movwf	(OrangeMove@mR+1)^0,c
  4941   003284  EC97  F022         	call	_OrangeMove	;wreg free
  4942                           
  4943                           ;Memory.c: 37:         }
  4944   003288  EF61  F019         	goto	l4516
  4945   00328C                     l4512:
  4946   00328C  502D               	movf	go_Home@i^0,w,c
  4947   00328E  2424               	addwf	go_Home@WayBack^0,w,c
  4948   003290  6ED9               	movwf	fsr2l,c
  4949   003292  502E               	movf	(go_Home@i+1)^0,w,c
  4950   003294  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4951   003296  6EDA               	movwf	fsr2h,c
  4952   003298  0E07               	movlw	7
  4953   00329A  18DE               	xorwf	postinc2,w,c
  4954   00329C  A4D8               	btfss	status,2,c
  4955   00329E  EF53  F019         	goto	u4301
  4956   0032A2  EF55  F019         	goto	u4300
  4957   0032A6                     u4301:
  4958   0032A6  EF61  F019         	goto	l629
  4959   0032AA                     u4300:
  4960   0032AA                     
  4961                           ;Memory.c: 39:             ReversePink(&motorL, &motorR);
  4962   0032AA  0EF5               	movlw	low _motorL
  4963   0032AC  6E20               	movwf	ReversePink@mL^0,c
  4964   0032AE  0E00               	movlw	high _motorL
  4965   0032B0  6E21               	movwf	(ReversePink@mL+1)^0,c
  4966   0032B2  0EBE               	movlw	low _motorR
  4967   0032B4  6E22               	movwf	ReversePink@mR^0,c
  4968   0032B6  0E01               	movlw	high _motorR
  4969   0032B8  6E23               	movwf	(ReversePink@mR+1)^0,c
  4970   0032BA  ECD0  F024         	call	_ReversePink	;wreg free
  4971   0032BE  EF61  F019         	goto	l4516
  4972   0032C2                     l629:
  4973   0032C2                     l4516:
  4974                           
  4975                           ;Memory.c: 43:   }
  4976   0032C2  062D               	decf	go_Home@i^0,f,c
  4977   0032C4  A0D8               	btfss	status,0,c
  4978   0032C6  062E               	decf	(go_Home@i+1)^0,f,c
  4979   0032C8  EF54  F018         	goto	l4470
  4980   0032CC                     l635:
  4981   0032CC  0012               	return		;funcret
  4982   0032CE                     __end_of_go_Home:
  4983                           	callstack 0
  4984                           
  4985 ;; *************** function _ReverseYellow *****************
  4986 ;; Defined at:
  4987 ;;		line 304 in file "dc_motor.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  4990 ;;		 -> motorL(9), 
  4991 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  4992 ;;		 -> motorR(9), 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;		None
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  1    wreg      void 
  4997 ;; Registers used:
  4998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5007 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5008 ;;Total ram usage:        4 bytes
  5009 ;; Hardware stack levels used: 1
  5010 ;; Hardware stack levels required when called: 5
  5011 ;; This function calls:
  5012 ;;		_ForwardOneBlock
  5013 ;;		_turnLeft45
  5014 ;; This function is called by:
  5015 ;;		_go_Home
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           	psect	text24
  5020   004962                     __ptext24:
  5021                           	callstack 0
  5022   004962                     _ReverseYellow:
  5023                           	callstack 24
  5024   004962                     
  5025                           ;dc_motor.c: 305:     turnLeft45(&motorL, &motorR);
  5026   004962  0EF5               	movlw	low _motorL
  5027   004964  6E1A               	movwf	turnLeft45@mL^0,c
  5028   004966  0E00               	movlw	high _motorL
  5029   004968  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5030   00496A  0EBE               	movlw	low _motorR
  5031   00496C  6E1C               	movwf	turnLeft45@mR^0,c
  5032   00496E  0E01               	movlw	high _motorR
  5033   004970  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5034   004972  EC42  F022         	call	_turnLeft45	;wreg free
  5035                           
  5036                           ;dc_motor.c: 306:     turnLeft45(&motorL, &motorR);
  5037   004976  0EF5               	movlw	low _motorL
  5038   004978  6E1A               	movwf	turnLeft45@mL^0,c
  5039   00497A  0E00               	movlw	high _motorL
  5040   00497C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5041   00497E  0EBE               	movlw	low _motorR
  5042   004980  6E1C               	movwf	turnLeft45@mR^0,c
  5043   004982  0E01               	movlw	high _motorR
  5044   004984  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5045   004986  EC42  F022         	call	_turnLeft45	;wreg free
  5046                           
  5047                           ;dc_motor.c: 307:     ForwardOneBlock(&motorL, &motorR);
  5048   00498A  0EF5               	movlw	low _motorL
  5049   00498C  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5050   00498E  0E00               	movlw	high _motorL
  5051   004990  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5052   004992  0EBE               	movlw	low _motorR
  5053   004994  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5054   004996  0E01               	movlw	high _motorR
  5055   004998  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5056   00499A  EC62  F021         	call	_ForwardOneBlock	;wreg free
  5057   00499E  0012               	return		;funcret
  5058   0049A0                     __end_of_ReverseYellow:
  5059                           	callstack 0
  5060                           
  5061 ;; *************** function _ReversePink *****************
  5062 ;; Defined at:
  5063 ;;		line 309 in file "dc_motor.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5066 ;;		 -> motorL(9), 
  5067 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5068 ;;		 -> motorR(9), 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;		None
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      void 
  5073 ;; Registers used:
  5074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5083 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5084 ;;Total ram usage:        4 bytes
  5085 ;; Hardware stack levels used: 1
  5086 ;; Hardware stack levels required when called: 5
  5087 ;; This function calls:
  5088 ;;		_ForwardOneBlock
  5089 ;;		_turnRight45
  5090 ;; This function is called by:
  5091 ;;		_go_Home
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text25
  5096   0049A0                     __ptext25:
  5097                           	callstack 0
  5098   0049A0                     _ReversePink:
  5099                           	callstack 24
  5100   0049A0                     
  5101                           ;dc_motor.c: 310:     turnRight45(&motorL, &motorR);
  5102   0049A0  0EF5               	movlw	low _motorL
  5103   0049A2  6E1A               	movwf	turnRight45@mL^0,c
  5104   0049A4  0E00               	movlw	high _motorL
  5105   0049A6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5106   0049A8  0EBE               	movlw	low _motorR
  5107   0049AA  6E1C               	movwf	turnRight45@mR^0,c
  5108   0049AC  0E01               	movlw	high _motorR
  5109   0049AE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5110   0049B0  EC16  F022         	call	_turnRight45	;wreg free
  5111                           
  5112                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  5113   0049B4  0EF5               	movlw	low _motorL
  5114   0049B6  6E1A               	movwf	turnRight45@mL^0,c
  5115   0049B8  0E00               	movlw	high _motorL
  5116   0049BA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5117   0049BC  0EBE               	movlw	low _motorR
  5118   0049BE  6E1C               	movwf	turnRight45@mR^0,c
  5119   0049C0  0E01               	movlw	high _motorR
  5120   0049C2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5121   0049C4  EC16  F022         	call	_turnRight45	;wreg free
  5122                           
  5123                           ;dc_motor.c: 312:     ForwardOneBlock(&motorL, &motorR);
  5124   0049C8  0EF5               	movlw	low _motorL
  5125   0049CA  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5126   0049CC  0E00               	movlw	high _motorL
  5127   0049CE  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5128   0049D0  0EBE               	movlw	low _motorR
  5129   0049D2  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5130   0049D4  0E01               	movlw	high _motorR
  5131   0049D6  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5132   0049D8  EC62  F021         	call	_ForwardOneBlock	;wreg free
  5133   0049DC  0012               	return		;funcret
  5134   0049DE                     __end_of_ReversePink:
  5135                           	callstack 0
  5136                           
  5137 ;; *************** function _ForwardOneBlock *****************
  5138 ;; Defined at:
  5139 ;;		line 208 in file "dc_motor.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5142 ;;		 -> motorL(9), 
  5143 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5144 ;;		 -> motorR(9), 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;		None
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5156 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5158 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5159 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5160 ;;Total ram usage:        6 bytes
  5161 ;; Hardware stack levels used: 1
  5162 ;; Hardware stack levels required when called: 4
  5163 ;; This function calls:
  5164 ;;		_fullSpeedAhead
  5165 ;;		_stop
  5166 ;; This function is called by:
  5167 ;;		_ReverseYellow
  5168 ;;		_ReversePink
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text26
  5173   0042C4                     __ptext26:
  5174                           	callstack 0
  5175   0042C4                     _ForwardOneBlock:
  5176                           	callstack 24
  5177   0042C4                     
  5178                           ;dc_motor.c: 209:     fullSpeedAhead(mL,mR);
  5179   0042C4  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  5180   0042C8  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  5181   0042CC  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  5182   0042D0  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  5183   0042D4  ECA0  F01E         	call	_fullSpeedAhead	;wreg free
  5184   0042D8                     
  5185                           ;dc_motor.c: 210:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5186   0042D8  0E52               	movlw	82
  5187   0042DA  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5188   0042DC  0E2B               	movlw	43
  5189   0042DE  6E1E               	movwf	??_ForwardOneBlock^0,c
  5190   0042E0  0E00               	movlw	0
  5191   0042E2                     u4627:
  5192   0042E2  2EE8               	decfsz	wreg,f,c
  5193   0042E4  D7FE               	bra	u4627
  5194   0042E6  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5195   0042E8  D7FC               	bra	u4627
  5196   0042EA  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5197   0042EC  D7FA               	bra	u4627
  5198   0042EE  D000               	nop2	
  5199   0042F0                     
  5200                           ;dc_motor.c: 211:     stop(&motorL, &motorR);
  5201   0042F0  0EF5               	movlw	low _motorL
  5202   0042F2  6E14               	movwf	stop@mL^0,c
  5203   0042F4  0E00               	movlw	high _motorL
  5204   0042F6  6E15               	movwf	(stop@mL+1)^0,c
  5205   0042F8  0EBE               	movlw	low _motorR
  5206   0042FA  6E16               	movwf	stop@mR^0,c
  5207   0042FC  0E01               	movlw	high _motorR
  5208   0042FE  6E17               	movwf	(stop@mR+1)^0,c
  5209   004300  EC12  F020         	call	_stop	;wreg free
  5210                           
  5211                           ;dc_motor.c: 212:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5212   004304  0E52               	movlw	82
  5213   004306  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5214   004308  0E2B               	movlw	43
  5215   00430A  6E1E               	movwf	??_ForwardOneBlock^0,c
  5216   00430C  0E00               	movlw	0
  5217   00430E                     u4637:
  5218   00430E  2EE8               	decfsz	wreg,f,c
  5219   004310  D7FE               	bra	u4637
  5220   004312  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5221   004314  D7FC               	bra	u4637
  5222   004316  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5223   004318  D7FA               	bra	u4637
  5224   00431A  D000               	nop2	
  5225   00431C  0012               	return		;funcret
  5226   00431E                     __end_of_ForwardOneBlock:
  5227                           	callstack 0
  5228                           
  5229 ;; *************** function _RedMove *****************
  5230 ;; Defined at:
  5231 ;;		line 232 in file "dc_motor.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5234 ;;		 -> motorL(9), 
  5235 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5236 ;;		 -> motorR(9), 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;		None
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      void 
  5241 ;; Registers used:
  5242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5251 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5252 ;;Total ram usage:        4 bytes
  5253 ;; Hardware stack levels used: 1
  5254 ;; Hardware stack levels required when called: 5
  5255 ;; This function calls:
  5256 ;;		_reverseDetect
  5257 ;;		_turnRight45
  5258 ;; This function is called by:
  5259 ;;		_main
  5260 ;;		_go_Home
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           	psect	text27
  5265   0049DE                     __ptext27:
  5266                           	callstack 0
  5267   0049DE                     _RedMove:
  5268                           	callstack 24
  5269   0049DE                     
  5270                           ;dc_motor.c: 233:     reverseDetect(&motorL, &motorR);
  5271   0049DE  0EF5               	movlw	low _motorL
  5272   0049E0  6E1A               	movwf	reverseDetect@mL^0,c
  5273   0049E2  0E00               	movlw	high _motorL
  5274   0049E4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5275   0049E6  0EBE               	movlw	low _motorR
  5276   0049E8  6E1C               	movwf	reverseDetect@mR^0,c
  5277   0049EA  0E01               	movlw	high _motorR
  5278   0049EC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5279   0049EE  ECE9  F021         	call	_reverseDetect	;wreg free
  5280                           
  5281                           ;dc_motor.c: 235:     turnRight45(&motorL, &motorR);
  5282   0049F2  0EF5               	movlw	low _motorL
  5283   0049F4  6E1A               	movwf	turnRight45@mL^0,c
  5284   0049F6  0E00               	movlw	high _motorL
  5285   0049F8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5286   0049FA  0EBE               	movlw	low _motorR
  5287   0049FC  6E1C               	movwf	turnRight45@mR^0,c
  5288   0049FE  0E01               	movlw	high _motorR
  5289   004A00  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5290   004A02  EC16  F022         	call	_turnRight45	;wreg free
  5291                           
  5292                           ;dc_motor.c: 236:     turnRight45(&motorL, &motorR);
  5293   004A06  0EF5               	movlw	low _motorL
  5294   004A08  6E1A               	movwf	turnRight45@mL^0,c
  5295   004A0A  0E00               	movlw	high _motorL
  5296   004A0C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5297   004A0E  0EBE               	movlw	low _motorR
  5298   004A10  6E1C               	movwf	turnRight45@mR^0,c
  5299   004A12  0E01               	movlw	high _motorR
  5300   004A14  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5301   004A16  EC16  F022         	call	_turnRight45	;wreg free
  5302   004A1A  0012               	return		;funcret
  5303   004A1C                     __end_of_RedMove:
  5304                           	callstack 0
  5305                           
  5306 ;; *************** function _OrangeMove *****************
  5307 ;; Defined at:
  5308 ;;		line 278 in file "dc_motor.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5311 ;;		 -> motorL(9), 
  5312 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5313 ;;		 -> motorR(9), 
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;		None
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  1    wreg      void 
  5318 ;; Registers used:
  5319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5328 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5329 ;;Total ram usage:        4 bytes
  5330 ;; Hardware stack levels used: 1
  5331 ;; Hardware stack levels required when called: 5
  5332 ;; This function calls:
  5333 ;;		_reverseDetect
  5334 ;;		_turnRight45
  5335 ;; This function is called by:
  5336 ;;		_main
  5337 ;;		_go_Home
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           	psect	text28
  5342   00452E                     __ptext28:
  5343                           	callstack 0
  5344   00452E                     _OrangeMove:
  5345                           	callstack 24
  5346   00452E                     
  5347                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  5348   00452E  0EF5               	movlw	low _motorL
  5349   004530  6E1A               	movwf	reverseDetect@mL^0,c
  5350   004532  0E00               	movlw	high _motorL
  5351   004534  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5352   004536  0EBE               	movlw	low _motorR
  5353   004538  6E1C               	movwf	reverseDetect@mR^0,c
  5354   00453A  0E01               	movlw	high _motorR
  5355   00453C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5356   00453E  ECE9  F021         	call	_reverseDetect	;wreg free
  5357                           
  5358                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  5359   004542  0EF5               	movlw	low _motorL
  5360   004544  6E1A               	movwf	turnRight45@mL^0,c
  5361   004546  0E00               	movlw	high _motorL
  5362   004548  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5363   00454A  0EBE               	movlw	low _motorR
  5364   00454C  6E1C               	movwf	turnRight45@mR^0,c
  5365   00454E  0E01               	movlw	high _motorR
  5366   004550  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5367   004552  EC16  F022         	call	_turnRight45	;wreg free
  5368                           
  5369                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  5370   004556  0EF5               	movlw	low _motorL
  5371   004558  6E1A               	movwf	turnRight45@mL^0,c
  5372   00455A  0E00               	movlw	high _motorL
  5373   00455C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5374   00455E  0EBE               	movlw	low _motorR
  5375   004560  6E1C               	movwf	turnRight45@mR^0,c
  5376   004562  0E01               	movlw	high _motorR
  5377   004564  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5378   004566  EC16  F022         	call	_turnRight45	;wreg free
  5379                           
  5380                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  5381   00456A  0EF5               	movlw	low _motorL
  5382   00456C  6E1A               	movwf	turnRight45@mL^0,c
  5383   00456E  0E00               	movlw	high _motorL
  5384   004570  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5385   004572  0EBE               	movlw	low _motorR
  5386   004574  6E1C               	movwf	turnRight45@mR^0,c
  5387   004576  0E01               	movlw	high _motorR
  5388   004578  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5389   00457A  EC16  F022         	call	_turnRight45	;wreg free
  5390   00457E  0012               	return		;funcret
  5391   004580                     __end_of_OrangeMove:
  5392                           	callstack 0
  5393                           
  5394 ;; *************** function _LightBlueMove *****************
  5395 ;; Defined at:
  5396 ;;		line 287 in file "dc_motor.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5399 ;;		 -> motorL(9), 
  5400 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5401 ;;		 -> motorR(9), 
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;		None
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      void 
  5406 ;; Registers used:
  5407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5413 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5416 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5417 ;;Total ram usage:        4 bytes
  5418 ;; Hardware stack levels used: 1
  5419 ;; Hardware stack levels required when called: 5
  5420 ;; This function calls:
  5421 ;;		_reverseDetect
  5422 ;;		_turnLeft45
  5423 ;; This function is called by:
  5424 ;;		_main
  5425 ;;		_go_Home
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text29
  5430   004580                     __ptext29:
  5431                           	callstack 0
  5432   004580                     _LightBlueMove:
  5433                           	callstack 24
  5434   004580                     
  5435                           ;dc_motor.c: 288:     reverseDetect(&motorL, &motorR);
  5436   004580  0EF5               	movlw	low _motorL
  5437   004582  6E1A               	movwf	reverseDetect@mL^0,c
  5438   004584  0E00               	movlw	high _motorL
  5439   004586  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5440   004588  0EBE               	movlw	low _motorR
  5441   00458A  6E1C               	movwf	reverseDetect@mR^0,c
  5442   00458C  0E01               	movlw	high _motorR
  5443   00458E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5444   004590  ECE9  F021         	call	_reverseDetect	;wreg free
  5445                           
  5446                           ;dc_motor.c: 290:     turnLeft45(&motorL, &motorR);
  5447   004594  0EF5               	movlw	low _motorL
  5448   004596  6E1A               	movwf	turnLeft45@mL^0,c
  5449   004598  0E00               	movlw	high _motorL
  5450   00459A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5451   00459C  0EBE               	movlw	low _motorR
  5452   00459E  6E1C               	movwf	turnLeft45@mR^0,c
  5453   0045A0  0E01               	movlw	high _motorR
  5454   0045A2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5455   0045A4  EC42  F022         	call	_turnLeft45	;wreg free
  5456                           
  5457                           ;dc_motor.c: 291:     turnLeft45(&motorL, &motorR);
  5458   0045A8  0EF5               	movlw	low _motorL
  5459   0045AA  6E1A               	movwf	turnLeft45@mL^0,c
  5460   0045AC  0E00               	movlw	high _motorL
  5461   0045AE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5462   0045B0  0EBE               	movlw	low _motorR
  5463   0045B2  6E1C               	movwf	turnLeft45@mR^0,c
  5464   0045B4  0E01               	movlw	high _motorR
  5465   0045B6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5466   0045B8  EC42  F022         	call	_turnLeft45	;wreg free
  5467                           
  5468                           ;dc_motor.c: 292:     turnLeft45(&motorL, &motorR);
  5469   0045BC  0EF5               	movlw	low _motorL
  5470   0045BE  6E1A               	movwf	turnLeft45@mL^0,c
  5471   0045C0  0E00               	movlw	high _motorL
  5472   0045C2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5473   0045C4  0EBE               	movlw	low _motorR
  5474   0045C6  6E1C               	movwf	turnLeft45@mR^0,c
  5475   0045C8  0E01               	movlw	high _motorR
  5476   0045CA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5477   0045CC  EC42  F022         	call	_turnLeft45	;wreg free
  5478   0045D0  0012               	return		;funcret
  5479   0045D2                     __end_of_LightBlueMove:
  5480                           	callstack 0
  5481                           
  5482 ;; *************** function _GreenMove *****************
  5483 ;; Defined at:
  5484 ;;		line 240 in file "dc_motor.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5487 ;;		 -> motorL(9), 
  5488 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5489 ;;		 -> motorR(9), 
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;		None
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  1    wreg      void 
  5494 ;; Registers used:
  5495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5504 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5505 ;;Total ram usage:        4 bytes
  5506 ;; Hardware stack levels used: 1
  5507 ;; Hardware stack levels required when called: 5
  5508 ;; This function calls:
  5509 ;;		_reverseDetect
  5510 ;;		_turnLeft45
  5511 ;; This function is called by:
  5512 ;;		_main
  5513 ;;		_go_Home
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           	psect	text30
  5518   004A1C                     __ptext30:
  5519                           	callstack 0
  5520   004A1C                     _GreenMove:
  5521                           	callstack 24
  5522   004A1C                     
  5523                           ;dc_motor.c: 241:     reverseDetect(&motorL, &motorR);
  5524   004A1C  0EF5               	movlw	low _motorL
  5525   004A1E  6E1A               	movwf	reverseDetect@mL^0,c
  5526   004A20  0E00               	movlw	high _motorL
  5527   004A22  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5528   004A24  0EBE               	movlw	low _motorR
  5529   004A26  6E1C               	movwf	reverseDetect@mR^0,c
  5530   004A28  0E01               	movlw	high _motorR
  5531   004A2A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5532   004A2C  ECE9  F021         	call	_reverseDetect	;wreg free
  5533                           
  5534                           ;dc_motor.c: 243:     turnLeft45(&motorL, &motorR);
  5535   004A30  0EF5               	movlw	low _motorL
  5536   004A32  6E1A               	movwf	turnLeft45@mL^0,c
  5537   004A34  0E00               	movlw	high _motorL
  5538   004A36  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5539   004A38  0EBE               	movlw	low _motorR
  5540   004A3A  6E1C               	movwf	turnLeft45@mR^0,c
  5541   004A3C  0E01               	movlw	high _motorR
  5542   004A3E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5543   004A40  EC42  F022         	call	_turnLeft45	;wreg free
  5544                           
  5545                           ;dc_motor.c: 244:     turnLeft45(&motorL, &motorR);
  5546   004A44  0EF5               	movlw	low _motorL
  5547   004A46  6E1A               	movwf	turnLeft45@mL^0,c
  5548   004A48  0E00               	movlw	high _motorL
  5549   004A4A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5550   004A4C  0EBE               	movlw	low _motorR
  5551   004A4E  6E1C               	movwf	turnLeft45@mR^0,c
  5552   004A50  0E01               	movlw	high _motorR
  5553   004A52  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5554   004A54  EC42  F022         	call	_turnLeft45	;wreg free
  5555   004A58  0012               	return		;funcret
  5556   004A5A                     __end_of_GreenMove:
  5557                           	callstack 0
  5558                           
  5559 ;; *************** function _Forwardhalfblock *****************
  5560 ;; Defined at:
  5561 ;;		line 215 in file "dc_motor.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5564 ;;		 -> motorL(9), 
  5565 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5566 ;;		 -> motorR(9), 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;		None
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  1    wreg      void 
  5571 ;; Registers used:
  5572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5578 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5581 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5582 ;;Total ram usage:        6 bytes
  5583 ;; Hardware stack levels used: 1
  5584 ;; Hardware stack levels required when called: 4
  5585 ;; This function calls:
  5586 ;;		_fullSpeedAhead
  5587 ;;		_stop
  5588 ;; This function is called by:
  5589 ;;		_main
  5590 ;;		_go_Home
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           	psect	text31
  5595   00431E                     __ptext31:
  5596                           	callstack 0
  5597   00431E                     _Forwardhalfblock:
  5598                           	callstack 25
  5599   00431E                     
  5600                           ;dc_motor.c: 216:     fullSpeedAhead(mL,mR);
  5601   00431E  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  5602   004322  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  5603   004326  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  5604   00432A  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  5605   00432E  ECA0  F01E         	call	_fullSpeedAhead	;wreg free
  5606   004332                     
  5607                           ;dc_motor.c: 217:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5608   004332  0E29               	movlw	41
  5609   004334  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  5610   004336  0E96               	movlw	150
  5611   004338  6E1E               	movwf	??_Forwardhalfblock^0,c
  5612   00433A  0E7F               	movlw	127
  5613   00433C                     u4647:
  5614   00433C  2EE8               	decfsz	wreg,f,c
  5615   00433E  D7FE               	bra	u4647
  5616   004340  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  5617   004342  D7FC               	bra	u4647
  5618   004344  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  5619   004346  D7FA               	bra	u4647
  5620   004348  F000               	nop	
  5621   00434A                     
  5622                           ;dc_motor.c: 218:     stop(&motorL, &motorR);
  5623   00434A  0EF5               	movlw	low _motorL
  5624   00434C  6E14               	movwf	stop@mL^0,c
  5625   00434E  0E00               	movlw	high _motorL
  5626   004350  6E15               	movwf	(stop@mL+1)^0,c
  5627   004352  0EBE               	movlw	low _motorR
  5628   004354  6E16               	movwf	stop@mR^0,c
  5629   004356  0E01               	movlw	high _motorR
  5630   004358  6E17               	movwf	(stop@mR+1)^0,c
  5631   00435A  EC12  F020         	call	_stop	;wreg free
  5632                           
  5633                           ;dc_motor.c: 219:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5634   00435E  0E52               	movlw	82
  5635   004360  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  5636   004362  0E2B               	movlw	43
  5637   004364  6E1E               	movwf	??_Forwardhalfblock^0,c
  5638   004366  0E00               	movlw	0
  5639   004368                     u4657:
  5640   004368  2EE8               	decfsz	wreg,f,c
  5641   00436A  D7FE               	bra	u4657
  5642   00436C  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  5643   00436E  D7FC               	bra	u4657
  5644   004370  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  5645   004372  D7FA               	bra	u4657
  5646   004374  D000               	nop2	
  5647   004376  0012               	return		;funcret
  5648   004378                     __end_of_Forwardhalfblock:
  5649                           	callstack 0
  5650                           
  5651 ;; *************** function _BlueMove *****************
  5652 ;; Defined at:
  5653 ;;		line 248 in file "dc_motor.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5656 ;;		 -> motorL(9), 
  5657 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5658 ;;		 -> motorR(9), 
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;		None
  5661 ;; Return value:  Size  Location     Type
  5662 ;;                  1    wreg      void 
  5663 ;; Registers used:
  5664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5673 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5674 ;;Total ram usage:        4 bytes
  5675 ;; Hardware stack levels used: 1
  5676 ;; Hardware stack levels required when called: 5
  5677 ;; This function calls:
  5678 ;;		_reverseDetect
  5679 ;;		_turnRight45
  5680 ;; This function is called by:
  5681 ;;		_main
  5682 ;;		_go_Home
  5683 ;; This function uses a non-reentrant model
  5684 ;;
  5685                           
  5686                           	psect	text32
  5687   004200                     __ptext32:
  5688                           	callstack 0
  5689   004200                     _BlueMove:
  5690                           	callstack 24
  5691   004200                     
  5692                           ;dc_motor.c: 249:     reverseDetect(&motorL, &motorR);
  5693   004200  0EF5               	movlw	low _motorL
  5694   004202  6E1A               	movwf	reverseDetect@mL^0,c
  5695   004204  0E00               	movlw	high _motorL
  5696   004206  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5697   004208  0EBE               	movlw	low _motorR
  5698   00420A  6E1C               	movwf	reverseDetect@mR^0,c
  5699   00420C  0E01               	movlw	high _motorR
  5700   00420E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5701   004210  ECE9  F021         	call	_reverseDetect	;wreg free
  5702                           
  5703                           ;dc_motor.c: 251:     turnRight45(&motorL, &motorR);
  5704   004214  0EF5               	movlw	low _motorL
  5705   004216  6E1A               	movwf	turnRight45@mL^0,c
  5706   004218  0E00               	movlw	high _motorL
  5707   00421A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5708   00421C  0EBE               	movlw	low _motorR
  5709   00421E  6E1C               	movwf	turnRight45@mR^0,c
  5710   004220  0E01               	movlw	high _motorR
  5711   004222  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5712   004224  EC16  F022         	call	_turnRight45	;wreg free
  5713                           
  5714                           ;dc_motor.c: 252:     turnRight45(&motorL, &motorR);
  5715   004228  0EF5               	movlw	low _motorL
  5716   00422A  6E1A               	movwf	turnRight45@mL^0,c
  5717   00422C  0E00               	movlw	high _motorL
  5718   00422E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5719   004230  0EBE               	movlw	low _motorR
  5720   004232  6E1C               	movwf	turnRight45@mR^0,c
  5721   004234  0E01               	movlw	high _motorR
  5722   004236  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5723   004238  EC16  F022         	call	_turnRight45	;wreg free
  5724                           
  5725                           ;dc_motor.c: 253:     turnRight45(&motorL, &motorR);
  5726   00423C  0EF5               	movlw	low _motorL
  5727   00423E  6E1A               	movwf	turnRight45@mL^0,c
  5728   004240  0E00               	movlw	high _motorL
  5729   004242  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5730   004244  0EBE               	movlw	low _motorR
  5731   004246  6E1C               	movwf	turnRight45@mR^0,c
  5732   004248  0E01               	movlw	high _motorR
  5733   00424A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5734   00424C  EC16  F022         	call	_turnRight45	;wreg free
  5735                           
  5736                           ;dc_motor.c: 254:     turnRight45(&motorL, &motorR);
  5737   004250  0EF5               	movlw	low _motorL
  5738   004252  6E1A               	movwf	turnRight45@mL^0,c
  5739   004254  0E00               	movlw	high _motorL
  5740   004256  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5741   004258  0EBE               	movlw	low _motorR
  5742   00425A  6E1C               	movwf	turnRight45@mR^0,c
  5743   00425C  0E01               	movlw	high _motorR
  5744   00425E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5745   004260  EC16  F022         	call	_turnRight45	;wreg free
  5746   004264  0012               	return		;funcret
  5747   004266                     __end_of_BlueMove:
  5748                           	callstack 0
  5749                           
  5750 ;; *************** function _colour_rel *****************
  5751 ;; Defined at:
  5752 ;;		line 114 in file "color.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  vals            2   49[COMRAM] PTR struct RGB
  5755 ;;		 -> vals(8), 
  5756 ;;  rel             2   51[COMRAM] PTR struct RGB_rel
  5757 ;;		 -> rel(12), 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;  B               4   73[COMRAM] float 
  5760 ;;  G               4   69[COMRAM] float 
  5761 ;;  R               4   65[COMRAM] float 
  5762 ;;  L               4   53[COMRAM] float 
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  1    wreg      void 
  5765 ;; Registers used:
  5766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5772 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5773 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5775 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5776 ;;Total ram usage:       28 bytes
  5777 ;; Hardware stack levels used: 1
  5778 ;; Hardware stack levels required when called: 2
  5779 ;; This function calls:
  5780 ;;		___fladd
  5781 ;;		___fldiv
  5782 ;;		___xxtofl
  5783 ;; This function is called by:
  5784 ;;		_main
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           	psect	text33
  5789   002AF4                     __ptext33:
  5790                           	callstack 0
  5791   002AF4                     _colour_rel:
  5792                           	callstack 28
  5793   002AF4                     
  5794                           ;color.c: 115:     float R = vals->R;
  5795   002AF4  C032  FFD9         	movff	colour_rel@vals,fsr2l
  5796   002AF8  C033  FFDA         	movff	colour_rel@vals+1,fsr2h
  5797   002AFC  CFDE F001          	movff	postinc2,___xxtofl@val
  5798   002B00  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5799   002B04  0E00               	movlw	0
  5800   002B06  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5801   002B08  0EFF               	movlw	-1
  5802   002B0A  6E03               	movwf	(___xxtofl@val+2)^0,c
  5803   002B0C  6E04               	movwf	(___xxtofl@val+3)^0,c
  5804   002B0E  0E01               	movlw	1
  5805   002B10  EC67  F019         	call	___xxtofl
  5806   002B14  C001  F042         	movff	?___xxtofl,colour_rel@R
  5807   002B18  C002  F043         	movff	?___xxtofl+1,colour_rel@R+1
  5808   002B1C  C003  F044         	movff	?___xxtofl+2,colour_rel@R+2
  5809   002B20  C004  F045         	movff	?___xxtofl+3,colour_rel@R+3
  5810                           
  5811                           ;color.c: 116:     float G = vals->G;
  5812   002B24  EE20 F002          	lfsr	2,2
  5813   002B28  5032               	movf	colour_rel@vals^0,w,c
  5814   002B2A  26D9               	addwf	fsr2l,f,c
  5815   002B2C  5033               	movf	(colour_rel@vals+1)^0,w,c
  5816   002B2E  22DA               	addwfc	fsr2h,f,c
  5817   002B30  CFDE F001          	movff	postinc2,___xxtofl@val
  5818   002B34  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5819   002B38  0E00               	movlw	0
  5820   002B3A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5821   002B3C  0EFF               	movlw	-1
  5822   002B3E  6E03               	movwf	(___xxtofl@val+2)^0,c
  5823   002B40  6E04               	movwf	(___xxtofl@val+3)^0,c
  5824   002B42  0E01               	movlw	1
  5825   002B44  EC67  F019         	call	___xxtofl
  5826   002B48  C001  F046         	movff	?___xxtofl,colour_rel@G
  5827   002B4C  C002  F047         	movff	?___xxtofl+1,colour_rel@G+1
  5828   002B50  C003  F048         	movff	?___xxtofl+2,colour_rel@G+2
  5829   002B54  C004  F049         	movff	?___xxtofl+3,colour_rel@G+3
  5830                           
  5831                           ;color.c: 117:     float B = vals->B;
  5832   002B58  EE20 F004          	lfsr	2,4
  5833   002B5C  5032               	movf	colour_rel@vals^0,w,c
  5834   002B5E  26D9               	addwf	fsr2l,f,c
  5835   002B60  5033               	movf	(colour_rel@vals+1)^0,w,c
  5836   002B62  22DA               	addwfc	fsr2h,f,c
  5837   002B64  CFDE F001          	movff	postinc2,___xxtofl@val
  5838   002B68  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5839   002B6C  0E00               	movlw	0
  5840   002B6E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5841   002B70  0EFF               	movlw	-1
  5842   002B72  6E03               	movwf	(___xxtofl@val+2)^0,c
  5843   002B74  6E04               	movwf	(___xxtofl@val+3)^0,c
  5844   002B76  0E01               	movlw	1
  5845   002B78  EC67  F019         	call	___xxtofl
  5846   002B7C  C001  F04A         	movff	?___xxtofl,colour_rel@B
  5847   002B80  C002  F04B         	movff	?___xxtofl+1,colour_rel@B+1
  5848   002B84  C003  F04C         	movff	?___xxtofl+2,colour_rel@B+2
  5849   002B88  C004  F04D         	movff	?___xxtofl+3,colour_rel@B+3
  5850                           
  5851                           ;color.c: 118:     float L = vals->L;
  5852   002B8C  EE20 F006          	lfsr	2,6
  5853   002B90  5032               	movf	colour_rel@vals^0,w,c
  5854   002B92  26D9               	addwf	fsr2l,f,c
  5855   002B94  5033               	movf	(colour_rel@vals+1)^0,w,c
  5856   002B96  22DA               	addwfc	fsr2h,f,c
  5857   002B98  CFDE F001          	movff	postinc2,___xxtofl@val
  5858   002B9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5859   002BA0  0E00               	movlw	0
  5860   002BA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5861   002BA4  0EFF               	movlw	-1
  5862   002BA6  6E03               	movwf	(___xxtofl@val+2)^0,c
  5863   002BA8  6E04               	movwf	(___xxtofl@val+3)^0,c
  5864   002BAA  0E01               	movlw	1
  5865   002BAC  EC67  F019         	call	___xxtofl
  5866   002BB0  C001  F036         	movff	?___xxtofl,colour_rel@L
  5867   002BB4  C002  F037         	movff	?___xxtofl+1,colour_rel@L+1
  5868   002BB8  C003  F038         	movff	?___xxtofl+2,colour_rel@L+2
  5869   002BBC  C004  F039         	movff	?___xxtofl+3,colour_rel@L+3
  5870   002BC0                     
  5871                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  5872   002BC0  C046  F005         	movff	colour_rel@G,___fladd@a
  5873   002BC4  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  5874   002BC8  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  5875   002BCC  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  5876   002BD0  C042  F001         	movff	colour_rel@R,___fladd@b
  5877   002BD4  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  5878   002BD8  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  5879   002BDC  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  5880   002BE0  EC38  F00F         	call	___fladd	;wreg free
  5881   002BE4  C001  F03A         	movff	?___fladd,_colour_rel$2805
  5882   002BE8  C002  F03B         	movff	?___fladd+1,_colour_rel$2805+1
  5883   002BEC  C003  F03C         	movff	?___fladd+2,_colour_rel$2805+2
  5884   002BF0  C004  F03D         	movff	?___fladd+3,_colour_rel$2805+3
  5885   002BF4                     
  5886                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  5887   002BF4  C04A  F005         	movff	colour_rel@B,___fladd@a
  5888   002BF8  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  5889   002BFC  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  5890   002C00  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  5891   002C04  C03A  F001         	movff	_colour_rel$2805,___fladd@b
  5892   002C08  C03B  F002         	movff	_colour_rel$2805+1,___fladd@b+1
  5893   002C0C  C03C  F003         	movff	_colour_rel$2805+2,___fladd@b+2
  5894   002C10  C03D  F004         	movff	_colour_rel$2805+3,___fladd@b+3
  5895   002C14  EC38  F00F         	call	___fladd	;wreg free
  5896   002C18  C001  F03E         	movff	?___fladd,_colour_rel$2806
  5897   002C1C  C002  F03F         	movff	?___fladd+1,_colour_rel$2806+1
  5898   002C20  C003  F040         	movff	?___fladd+2,_colour_rel$2806+2
  5899   002C24  C004  F041         	movff	?___fladd+3,_colour_rel$2806+3
  5900                           
  5901                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  5902   002C28  C042  F019         	movff	colour_rel@R,___fldiv@b
  5903   002C2C  C043  F01A         	movff	colour_rel@R+1,___fldiv@b+1
  5904   002C30  C044  F01B         	movff	colour_rel@R+2,___fldiv@b+2
  5905   002C34  C045  F01C         	movff	colour_rel@R+3,___fldiv@b+3
  5906   002C38  C036  F005         	movff	colour_rel@L,___fladd@a
  5907   002C3C  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  5908   002C40  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  5909   002C44  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  5910   002C48  C03E  F001         	movff	_colour_rel$2806,___fladd@b
  5911   002C4C  C03F  F002         	movff	_colour_rel$2806+1,___fladd@b+1
  5912   002C50  C040  F003         	movff	_colour_rel$2806+2,___fladd@b+2
  5913   002C54  C041  F004         	movff	_colour_rel$2806+3,___fladd@b+3
  5914   002C58  EC38  F00F         	call	___fladd	;wreg free
  5915   002C5C  C001  F01D         	movff	?___fladd,___fldiv@a
  5916   002C60  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  5917   002C64  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  5918   002C68  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  5919   002C6C  ECAD  F013         	call	___fldiv	;wreg free
  5920   002C70  C034  FFD9         	movff	colour_rel@rel,fsr2l
  5921   002C74  C035  FFDA         	movff	colour_rel@rel+1,fsr2h
  5922   002C78  C019  FFDE         	movff	?___fldiv,postinc2
  5923   002C7C  C01A  FFDE         	movff	?___fldiv+1,postinc2
  5924   002C80  C01B  FFDE         	movff	?___fldiv+2,postinc2
  5925   002C84  C01C  FFDE         	movff	?___fldiv+3,postinc2
  5926   002C88                     
  5927                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  5928   002C88  C046  F005         	movff	colour_rel@G,___fladd@a
  5929   002C8C  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  5930   002C90  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  5931   002C94  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  5932   002C98  C042  F001         	movff	colour_rel@R,___fladd@b
  5933   002C9C  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  5934   002CA0  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  5935   002CA4  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  5936   002CA8  EC38  F00F         	call	___fladd	;wreg free
  5937   002CAC  C001  F03A         	movff	?___fladd,_colour_rel$2805
  5938   002CB0  C002  F03B         	movff	?___fladd+1,_colour_rel$2805+1
  5939   002CB4  C003  F03C         	movff	?___fladd+2,_colour_rel$2805+2
  5940   002CB8  C004  F03D         	movff	?___fladd+3,_colour_rel$2805+3
  5941   002CBC                     
  5942                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  5943   002CBC  C04A  F005         	movff	colour_rel@B,___fladd@a
  5944   002CC0  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  5945   002CC4  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  5946   002CC8  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  5947   002CCC  C03A  F001         	movff	_colour_rel$2805,___fladd@b
  5948   002CD0  C03B  F002         	movff	_colour_rel$2805+1,___fladd@b+1
  5949   002CD4  C03C  F003         	movff	_colour_rel$2805+2,___fladd@b+2
  5950   002CD8  C03D  F004         	movff	_colour_rel$2805+3,___fladd@b+3
  5951   002CDC  EC38  F00F         	call	___fladd	;wreg free
  5952   002CE0  C001  F03E         	movff	?___fladd,_colour_rel$2806
  5953   002CE4  C002  F03F         	movff	?___fladd+1,_colour_rel$2806+1
  5954   002CE8  C003  F040         	movff	?___fladd+2,_colour_rel$2806+2
  5955   002CEC  C004  F041         	movff	?___fladd+3,_colour_rel$2806+3
  5956                           
  5957                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  5958   002CF0  C04A  F019         	movff	colour_rel@B,___fldiv@b
  5959   002CF4  C04B  F01A         	movff	colour_rel@B+1,___fldiv@b+1
  5960   002CF8  C04C  F01B         	movff	colour_rel@B+2,___fldiv@b+2
  5961   002CFC  C04D  F01C         	movff	colour_rel@B+3,___fldiv@b+3
  5962   002D00  C036  F005         	movff	colour_rel@L,___fladd@a
  5963   002D04  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  5964   002D08  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  5965   002D0C  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  5966   002D10  C03E  F001         	movff	_colour_rel$2806,___fladd@b
  5967   002D14  C03F  F002         	movff	_colour_rel$2806+1,___fladd@b+1
  5968   002D18  C040  F003         	movff	_colour_rel$2806+2,___fladd@b+2
  5969   002D1C  C041  F004         	movff	_colour_rel$2806+3,___fladd@b+3
  5970   002D20  EC38  F00F         	call	___fladd	;wreg free
  5971   002D24  C001  F01D         	movff	?___fladd,___fldiv@a
  5972   002D28  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  5973   002D2C  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  5974   002D30  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  5975   002D34  ECAD  F013         	call	___fldiv	;wreg free
  5976   002D38  EE20 F008          	lfsr	2,8
  5977   002D3C  5034               	movf	colour_rel@rel^0,w,c
  5978   002D3E  26D9               	addwf	fsr2l,f,c
  5979   002D40  5035               	movf	(colour_rel@rel+1)^0,w,c
  5980   002D42  22DA               	addwfc	fsr2h,f,c
  5981   002D44  C019  FFDE         	movff	?___fldiv,postinc2
  5982   002D48  C01A  FFDE         	movff	?___fldiv+1,postinc2
  5983   002D4C  C01B  FFDE         	movff	?___fldiv+2,postinc2
  5984   002D50  C01C  FFDE         	movff	?___fldiv+3,postinc2
  5985   002D54                     
  5986                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  5987   002D54  C046  F005         	movff	colour_rel@G,___fladd@a
  5988   002D58  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  5989   002D5C  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  5990   002D60  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  5991   002D64  C042  F001         	movff	colour_rel@R,___fladd@b
  5992   002D68  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  5993   002D6C  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  5994   002D70  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  5995   002D74  EC38  F00F         	call	___fladd	;wreg free
  5996   002D78  C001  F03A         	movff	?___fladd,_colour_rel$2805
  5997   002D7C  C002  F03B         	movff	?___fladd+1,_colour_rel$2805+1
  5998   002D80  C003  F03C         	movff	?___fladd+2,_colour_rel$2805+2
  5999   002D84  C004  F03D         	movff	?___fladd+3,_colour_rel$2805+3
  6000   002D88                     
  6001                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6002   002D88  C04A  F005         	movff	colour_rel@B,___fladd@a
  6003   002D8C  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6004   002D90  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6005   002D94  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6006   002D98  C03A  F001         	movff	_colour_rel$2805,___fladd@b
  6007   002D9C  C03B  F002         	movff	_colour_rel$2805+1,___fladd@b+1
  6008   002DA0  C03C  F003         	movff	_colour_rel$2805+2,___fladd@b+2
  6009   002DA4  C03D  F004         	movff	_colour_rel$2805+3,___fladd@b+3
  6010   002DA8  EC38  F00F         	call	___fladd	;wreg free
  6011   002DAC  C001  F03E         	movff	?___fladd,_colour_rel$2806
  6012   002DB0  C002  F03F         	movff	?___fladd+1,_colour_rel$2806+1
  6013   002DB4  C003  F040         	movff	?___fladd+2,_colour_rel$2806+2
  6014   002DB8  C004  F041         	movff	?___fladd+3,_colour_rel$2806+3
  6015                           
  6016                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6017   002DBC  C046  F019         	movff	colour_rel@G,___fldiv@b
  6018   002DC0  C047  F01A         	movff	colour_rel@G+1,___fldiv@b+1
  6019   002DC4  C048  F01B         	movff	colour_rel@G+2,___fldiv@b+2
  6020   002DC8  C049  F01C         	movff	colour_rel@G+3,___fldiv@b+3
  6021   002DCC  C036  F005         	movff	colour_rel@L,___fladd@a
  6022   002DD0  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6023   002DD4  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6024   002DD8  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6025   002DDC  C03E  F001         	movff	_colour_rel$2806,___fladd@b
  6026   002DE0  C03F  F002         	movff	_colour_rel$2806+1,___fladd@b+1
  6027   002DE4  C040  F003         	movff	_colour_rel$2806+2,___fladd@b+2
  6028   002DE8  C041  F004         	movff	_colour_rel$2806+3,___fladd@b+3
  6029   002DEC  EC38  F00F         	call	___fladd	;wreg free
  6030   002DF0  C001  F01D         	movff	?___fladd,___fldiv@a
  6031   002DF4  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6032   002DF8  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6033   002DFC  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6034   002E00  ECAD  F013         	call	___fldiv	;wreg free
  6035   002E04  EE20 F004          	lfsr	2,4
  6036   002E08  5034               	movf	colour_rel@rel^0,w,c
  6037   002E0A  26D9               	addwf	fsr2l,f,c
  6038   002E0C  5035               	movf	(colour_rel@rel+1)^0,w,c
  6039   002E0E  22DA               	addwfc	fsr2h,f,c
  6040   002E10  C019  FFDE         	movff	?___fldiv,postinc2
  6041   002E14  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6042   002E18  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6043   002E1C  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6044   002E20  0012               	return		;funcret
  6045   002E22                     __end_of_colour_rel:
  6046                           	callstack 0
  6047                           
  6048 ;; *************** function _color_click_init *****************
  6049 ;; Defined at:
  6050 ;;		line 7 in file "color.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;		None
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;		None
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  1    wreg      void 
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0, cstack
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6067 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6068 ;;Total ram usage:        1 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; Hardware stack levels required when called: 4
  6071 ;; This function calls:
  6072 ;;		_I2C_2_Master_Init
  6073 ;;		_color_writetoaddr
  6074 ;; This function is called by:
  6075 ;;		_main
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text34
  6080   0045D2                     __ptext34:
  6081                           	callstack 0
  6082   0045D2                     _color_click_init:
  6083                           	callstack 26
  6084   0045D2                     
  6085                           ;color.c: 10:     I2C_2_Master_Init();
  6086   0045D2  EC45  F025         	call	_I2C_2_Master_Init	;wreg free
  6087   0045D6                     
  6088                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  6089   0045D6  0E01               	movlw	1
  6090   0045D8  6E03               	movwf	color_writetoaddr@value^0,c
  6091   0045DA  0E00               	movlw	0
  6092   0045DC  EC81  F025         	call	_color_writetoaddr
  6093   0045E0                     
  6094                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6095   0045E0  0E3F               	movlw	63
  6096   0045E2  6E05               	movwf	??_color_click_init^0,c
  6097   0045E4  0E55               	movlw	85
  6098   0045E6                     u4667:
  6099   0045E6  2EE8               	decfsz	wreg,f,c
  6100   0045E8  D7FE               	bra	u4667
  6101   0045EA  2E05               	decfsz	??_color_click_init^0,f,c
  6102   0045EC  D7FC               	bra	u4667
  6103   0045EE  F000               	nop	
  6104   0045F0                     
  6105                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  6106   0045F0  0E03               	movlw	3
  6107   0045F2  6E03               	movwf	color_writetoaddr@value^0,c
  6108   0045F4  0E00               	movlw	0
  6109   0045F6  EC81  F025         	call	_color_writetoaddr
  6110   0045FA                     
  6111                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  6112   0045FA  0ED5               	movlw	213
  6113   0045FC  6E03               	movwf	color_writetoaddr@value^0,c
  6114   0045FE  0E01               	movlw	1
  6115   004600  EC81  F025         	call	_color_writetoaddr
  6116   004604                     
  6117                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  6118   004604  0E00               	movlw	0
  6119   004606  6E03               	movwf	color_writetoaddr@value^0,c
  6120   004608  0E0F               	movlw	15
  6121   00460A  EC81  F025         	call	_color_writetoaddr
  6122   00460E                     
  6123                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  6124   00460E  9287               	bcf	135,1,c	;volatile
  6125   004610                     
  6126                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  6127   004610  9881               	bcf	129,4,c	;volatile
  6128   004612                     
  6129                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  6130   004612  9E86               	bcf	134,7,c	;volatile
  6131   004614                     
  6132                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  6133   004614  9684               	bcf	132,3,c	;volatile
  6134   004616                     
  6135                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  6136   004616  9884               	bcf	132,4,c	;volatile
  6137   004618                     
  6138                           ;color.c: 28:     LATGbits.LATG1=0;
  6139   004618  927F               	bcf	127,1,c	;volatile
  6140   00461A                     
  6141                           ;color.c: 29:     LATFbits.LATF7=0;
  6142   00461A  9E7E               	bcf	126,7,c	;volatile
  6143   00461C                     
  6144                           ;color.c: 30:     LATAbits.LATA4=0;
  6145   00461C  9879               	bcf	121,4,c	;volatile
  6146   00461E                     
  6147                           ;color.c: 32:     LATDbits.LATD3=0;
  6148   00461E  967C               	bcf	124,3,c	;volatile
  6149   004620                     
  6150                           ;color.c: 33:     LATDbits.LATD4=0;
  6151   004620  987C               	bcf	124,4,c	;volatile
  6152   004622  0012               	return		;funcret
  6153   004624                     __end_of_color_click_init:
  6154                           	callstack 0
  6155                           
  6156 ;; *************** function _color_writetoaddr *****************
  6157 ;; Defined at:
  6158 ;;		line 41 in file "color.c"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;  address         1    wreg     unsigned char 
  6161 ;;  value           1    2[COMRAM] unsigned char 
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;  address         1    3[COMRAM] unsigned char 
  6164 ;; Return value:  Size  Location     Type
  6165 ;;                  1    wreg      void 
  6166 ;; Registers used:
  6167 ;;		wreg, status,2, status,0, cstack
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6173 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6176 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6177 ;;Total ram usage:        2 bytes
  6178 ;; Hardware stack levels used: 1
  6179 ;; Hardware stack levels required when called: 3
  6180 ;; This function calls:
  6181 ;;		_I2C_2_Master_Start
  6182 ;;		_I2C_2_Master_Stop
  6183 ;;		_I2C_2_Master_Write
  6184 ;; This function is called by:
  6185 ;;		_color_click_init
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           	psect	text35
  6190   004B02                     __ptext35:
  6191                           	callstack 0
  6192   004B02                     _color_writetoaddr:
  6193                           	callstack 26
  6194                           
  6195                           ;incstack = 0
  6196                           ;color_writetoaddr@address stored from wreg
  6197   004B02  6E04               	movwf	color_writetoaddr@address^0,c
  6198   004B04                     
  6199                           ;color.c: 42:     I2C_2_Master_Start();
  6200   004B04  ECCC  F025         	call	_I2C_2_Master_Start	;wreg free
  6201                           
  6202                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  6203   004B08  0E52               	movlw	82
  6204   004B0A  ECBC  F025         	call	_I2C_2_Master_Write
  6205                           
  6206                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  6207   004B0E  5004               	movf	color_writetoaddr@address^0,w,c
  6208   004B10  0980               	iorlw	128
  6209   004B12  ECBC  F025         	call	_I2C_2_Master_Write
  6210                           
  6211                           ;color.c: 45:     I2C_2_Master_Write(value);
  6212   004B16  5003               	movf	color_writetoaddr@value^0,w,c
  6213   004B18  ECBC  F025         	call	_I2C_2_Master_Write
  6214                           
  6215                           ;color.c: 46:     I2C_2_Master_Stop();
  6216   004B1C  ECC7  F025         	call	_I2C_2_Master_Stop	;wreg free
  6217   004B20  0012               	return		;funcret
  6218   004B22                     __end_of_color_writetoaddr:
  6219                           	callstack 0
  6220                           
  6221 ;; *************** function _I2C_2_Master_Write *****************
  6222 ;; Defined at:
  6223 ;;		line 45 in file "i2c.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  data_byte       1    wreg     unsigned char 
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;  data_byte       1    1[COMRAM] unsigned char 
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  1    wreg      void 
  6230 ;; Registers used:
  6231 ;;		wreg, status,2, status,0, cstack
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6238 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6240 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6241 ;;Total ram usage:        1 bytes
  6242 ;; Hardware stack levels used: 1
  6243 ;; Hardware stack levels required when called: 2
  6244 ;; This function calls:
  6245 ;;		_I2C_2_Master_Idle
  6246 ;; This function is called by:
  6247 ;;		_color_writetoaddr
  6248 ;;		_color_read_lum
  6249 ;;		_color_read_Red
  6250 ;;		_color_read_Green
  6251 ;;		_color_read_Blue
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text36
  6256   004B78                     __ptext36:
  6257                           	callstack 0
  6258   004B78                     _I2C_2_Master_Write:
  6259                           	callstack 26
  6260                           
  6261                           ;incstack = 0
  6262                           ;I2C_2_Master_Write@data_byte stored from wreg
  6263   004B78  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6264   004B7A                     
  6265                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6266   004B7A  EC5A  F025         	call	_I2C_2_Master_Idle	;wreg free
  6267   004B7E                     
  6268                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6269   004B7E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6270   004B82  0012               	return		;funcret
  6271   004B84                     __end_of_I2C_2_Master_Write:
  6272                           	callstack 0
  6273                           
  6274 ;; *************** function _I2C_2_Master_Stop *****************
  6275 ;; Defined at:
  6276 ;;		line 39 in file "i2c.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;		None
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;		None
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  1    wreg      void 
  6283 ;; Registers used:
  6284 ;;		wreg, status,2, status,0, cstack
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6294 ;;Total ram usage:        0 bytes
  6295 ;; Hardware stack levels used: 1
  6296 ;; Hardware stack levels required when called: 2
  6297 ;; This function calls:
  6298 ;;		_I2C_2_Master_Idle
  6299 ;; This function is called by:
  6300 ;;		_color_writetoaddr
  6301 ;;		_color_read_lum
  6302 ;;		_color_read_Red
  6303 ;;		_color_read_Green
  6304 ;;		_color_read_Blue
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           	psect	text37
  6309   004B8E                     __ptext37:
  6310                           	callstack 0
  6311   004B8E                     _I2C_2_Master_Stop:
  6312                           	callstack 26
  6313   004B8E                     
  6314                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6315   004B8E  EC5A  F025         	call	_I2C_2_Master_Idle	;wreg free
  6316   004B92                     
  6317                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6318   004B92  010E               	movlb	14	; () banked
  6319   004B94  85DA               	bsf	218,2,b	;volatile
  6320   004B96                     
  6321                           ; BSR set to: 14
  6322   004B96  0012               	return		;funcret
  6323   004B98                     __end_of_I2C_2_Master_Stop:
  6324                           	callstack 0
  6325                           
  6326 ;; *************** function _I2C_2_Master_Start *****************
  6327 ;; Defined at:
  6328 ;;		line 27 in file "i2c.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;		None
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;		None
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  1    wreg      void 
  6335 ;; Registers used:
  6336 ;;		wreg, status,2, status,0, cstack
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6346 ;;Total ram usage:        0 bytes
  6347 ;; Hardware stack levels used: 1
  6348 ;; Hardware stack levels required when called: 2
  6349 ;; This function calls:
  6350 ;;		_I2C_2_Master_Idle
  6351 ;; This function is called by:
  6352 ;;		_color_writetoaddr
  6353 ;;		_color_read_lum
  6354 ;;		_color_read_Red
  6355 ;;		_color_read_Green
  6356 ;;		_color_read_Blue
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360                           	psect	text38
  6361   004B98                     __ptext38:
  6362                           	callstack 0
  6363   004B98                     _I2C_2_Master_Start:
  6364                           	callstack 26
  6365   004B98                     
  6366                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6367   004B98  EC5A  F025         	call	_I2C_2_Master_Idle	;wreg free
  6368   004B9C                     
  6369                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6370   004B9C  010E               	movlb	14	; () banked
  6371   004B9E  81DA               	bsf	218,0,b	;volatile
  6372   004BA0                     
  6373                           ; BSR set to: 14
  6374   004BA0  0012               	return		;funcret
  6375   004BA2                     __end_of_I2C_2_Master_Start:
  6376                           	callstack 0
  6377                           
  6378 ;; *************** function _I2C_2_Master_Idle *****************
  6379 ;; Defined at:
  6380 ;;		line 22 in file "i2c.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;		None
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;		None
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  1    wreg      void 
  6387 ;; Registers used:
  6388 ;;		wreg, status,2, status,0
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6396 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6397 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6398 ;;Total ram usage:        1 bytes
  6399 ;; Hardware stack levels used: 1
  6400 ;; Hardware stack levels required when called: 1
  6401 ;; This function calls:
  6402 ;;		Nothing
  6403 ;; This function is called by:
  6404 ;;		_I2C_2_Master_Start
  6405 ;;		_I2C_2_Master_RepStart
  6406 ;;		_I2C_2_Master_Stop
  6407 ;;		_I2C_2_Master_Write
  6408 ;;		_I2C_2_Master_Read
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           	psect	text39
  6413   004AB4                     __ptext39:
  6414                           	callstack 0
  6415   004AB4                     _I2C_2_Master_Idle:
  6416                           	callstack 26
  6417   004AB4                     l141:
  6418   004AB4  010E               	movlb	14	; () banked
  6419   004AB6  B5D8               	btfsc	216,2,b	;volatile
  6420   004AB8  EF60  F025         	goto	u2561
  6421   004ABC  EF62  F025         	goto	u2560
  6422   004AC0                     u2561:
  6423   004AC0  EF5A  F025         	goto	l141
  6424   004AC4                     u2560:
  6425   004AC4                     
  6426                           ; BSR set to: 14
  6427   004AC4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6428   004AC8  0E1F               	movlw	31
  6429   004ACA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6430   004ACC  A4D8               	btfss	status,2,c
  6431   004ACE  EF6B  F025         	goto	u2571
  6432   004AD2  EF6D  F025         	goto	u2570
  6433   004AD6                     u2571:
  6434   004AD6  EF5A  F025         	goto	l141
  6435   004ADA                     u2570:
  6436   004ADA                     
  6437                           ; BSR set to: 14
  6438   004ADA  0012               	return		;funcret
  6439   004ADC                     __end_of_I2C_2_Master_Idle:
  6440                           	callstack 0
  6441                           
  6442 ;; *************** function _I2C_2_Master_Init *****************
  6443 ;; Defined at:
  6444 ;;		line 4 in file "i2c.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;		None
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;		None
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  1    wreg      void 
  6451 ;; Registers used:
  6452 ;;		wreg, status,2
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6462 ;;Total ram usage:        0 bytes
  6463 ;; Hardware stack levels used: 1
  6464 ;; Hardware stack levels required when called: 1
  6465 ;; This function calls:
  6466 ;;		Nothing
  6467 ;; This function is called by:
  6468 ;;		_color_click_init
  6469 ;;		_main
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           	psect	text40
  6474   004A8A                     __ptext40:
  6475                           	callstack 0
  6476   004A8A                     _I2C_2_Master_Init:
  6477                           	callstack 28
  6478   004A8A                     
  6479                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6480   004A8A  010E               	movlb	14	; () banked
  6481   004A8C  51D9               	movf	217,w,b	;volatile
  6482   004A8E  0BF0               	andlw	-16
  6483   004A90  0908               	iorlw	8
  6484   004A92  6FD9               	movwf	217,b	;volatile
  6485   004A94                     
  6486                           ; BSR set to: 14
  6487                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6488   004A94  8BD9               	bsf	217,5,b	;volatile
  6489                           
  6490                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6491   004A96  0E9F               	movlw	159
  6492   004A98  6FD6               	movwf	214,b	;volatile
  6493   004A9A                     
  6494                           ; BSR set to: 14
  6495                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6496   004A9A  8A84               	bsf	132,5,c	;volatile
  6497   004A9C                     
  6498                           ; BSR set to: 14
  6499                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6500   004A9C  8C84               	bsf	132,6,c	;volatile
  6501   004A9E                     
  6502                           ; BSR set to: 14
  6503                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6504   004A9E  9BA7               	bcf	167,5,b	;volatile
  6505   004AA0                     
  6506                           ; BSR set to: 14
  6507                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6508   004AA0  9DA7               	bcf	167,6,b	;volatile
  6509                           
  6510                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6511   004AA2  0E1D               	movlw	29
  6512   004AA4  6F1D               	movwf	29,b	;volatile
  6513                           
  6514                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6515   004AA6  0E1E               	movlw	30
  6516   004AA8  6F1C               	movwf	28,b	;volatile
  6517                           
  6518                           ;i2c.c: 18:   RD5PPS=0x1C;
  6519   004AAA  0E1C               	movlw	28
  6520   004AAC  6F6F               	movwf	111,b	;volatile
  6521                           
  6522                           ;i2c.c: 19:   RD6PPS=0x1B;
  6523   004AAE  0E1B               	movlw	27
  6524   004AB0  6F70               	movwf	112,b	;volatile
  6525   004AB2                     
  6526                           ; BSR set to: 14
  6527   004AB2  0012               	return		;funcret
  6528   004AB4                     __end_of_I2C_2_Master_Init:
  6529                           	callstack 0
  6530                           
  6531 ;; *************** function _YellowMove *****************
  6532 ;; Defined at:
  6533 ;;		line 258 in file "dc_motor.c"
  6534 ;; Parameters:    Size  Location     Type
  6535 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6536 ;;		 -> motorL(9), 
  6537 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6538 ;;		 -> motorR(9), 
  6539 ;; Auto vars:     Size  Location     Type
  6540 ;;		None
  6541 ;; Return value:  Size  Location     Type
  6542 ;;                  1    wreg      void 
  6543 ;; Registers used:
  6544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6545 ;; Tracked objects:
  6546 ;;		On entry : 0/0
  6547 ;;		On exit  : 0/0
  6548 ;;		Unchanged: 0/0
  6549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6553 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6554 ;;Total ram usage:        4 bytes
  6555 ;; Hardware stack levels used: 1
  6556 ;; Hardware stack levels required when called: 5
  6557 ;; This function calls:
  6558 ;;		_reverseDetect
  6559 ;;		_reverseOneBlock
  6560 ;;		_turnRight45
  6561 ;; This function is called by:
  6562 ;;		_main
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           	psect	text41
  6567   004624                     __ptext41:
  6568                           	callstack 0
  6569   004624                     _YellowMove:
  6570                           	callstack 25
  6571   004624                     
  6572                           ;dc_motor.c: 259:     reverseDetect(&motorL, &motorR);
  6573   004624  0EF5               	movlw	low _motorL
  6574   004626  6E1A               	movwf	reverseDetect@mL^0,c
  6575   004628  0E00               	movlw	high _motorL
  6576   00462A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6577   00462C  0EBE               	movlw	low _motorR
  6578   00462E  6E1C               	movwf	reverseDetect@mR^0,c
  6579   004630  0E01               	movlw	high _motorR
  6580   004632  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6581   004634  ECE9  F021         	call	_reverseDetect	;wreg free
  6582                           
  6583                           ;dc_motor.c: 261:     reverseOneBlock(&motorL, &motorR);
  6584   004638  0EF5               	movlw	low _motorL
  6585   00463A  6E1A               	movwf	reverseOneBlock@mL^0,c
  6586   00463C  0E00               	movlw	high _motorL
  6587   00463E  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  6588   004640  0EBE               	movlw	low _motorR
  6589   004642  6E1C               	movwf	reverseOneBlock@mR^0,c
  6590   004644  0E01               	movlw	high _motorR
  6591   004646  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  6592   004648  ECBC  F021         	call	_reverseOneBlock	;wreg free
  6593                           
  6594                           ;dc_motor.c: 263:     turnRight45(&motorL, &motorR);
  6595   00464C  0EF5               	movlw	low _motorL
  6596   00464E  6E1A               	movwf	turnRight45@mL^0,c
  6597   004650  0E00               	movlw	high _motorL
  6598   004652  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6599   004654  0EBE               	movlw	low _motorR
  6600   004656  6E1C               	movwf	turnRight45@mR^0,c
  6601   004658  0E01               	movlw	high _motorR
  6602   00465A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6603   00465C  EC16  F022         	call	_turnRight45	;wreg free
  6604                           
  6605                           ;dc_motor.c: 264:     turnRight45(&motorL, &motorR);
  6606   004660  0EF5               	movlw	low _motorL
  6607   004662  6E1A               	movwf	turnRight45@mL^0,c
  6608   004664  0E00               	movlw	high _motorL
  6609   004666  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6610   004668  0EBE               	movlw	low _motorR
  6611   00466A  6E1C               	movwf	turnRight45@mR^0,c
  6612   00466C  0E01               	movlw	high _motorR
  6613   00466E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6614   004670  EC16  F022         	call	_turnRight45	;wreg free
  6615   004674  0012               	return		;funcret
  6616   004676                     __end_of_YellowMove:
  6617                           	callstack 0
  6618                           
  6619 ;; *************** function _turnRight45 *****************
  6620 ;; Defined at:
  6621 ;;		line 181 in file "dc_motor.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  6624 ;;		 -> motorL(9), 
  6625 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  6626 ;;		 -> motorR(9), 
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;		None
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  1    wreg      void 
  6631 ;; Registers used:
  6632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6638 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6641 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6642 ;;Total ram usage:        6 bytes
  6643 ;; Hardware stack levels used: 1
  6644 ;; Hardware stack levels required when called: 4
  6645 ;; This function calls:
  6646 ;;		_stop
  6647 ;;		_turnRight
  6648 ;; This function is called by:
  6649 ;;		_RedMove
  6650 ;;		_BlueMove
  6651 ;;		_YellowMove
  6652 ;;		_OrangeMove
  6653 ;;		_ReversePink
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text42
  6658   00442C                     __ptext42:
  6659                           	callstack 0
  6660   00442C                     _turnRight45:
  6661                           	callstack 24
  6662   00442C                     
  6663                           ;dc_motor.c: 182:     turnRight(mL,mR);
  6664   00442C  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  6665   004430  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  6666   004434  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  6667   004438  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  6668   00443C  EC51  F01E         	call	_turnRight	;wreg free
  6669   004440                     
  6670                           ;dc_motor.c: 183:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  6671   004440  0E12               	movlw	18
  6672   004442  6E1F               	movwf	(??_turnRight45+1)^0,c
  6673   004444  0EDC               	movlw	220
  6674   004446  6E1E               	movwf	??_turnRight45^0,c
  6675   004448  0E60               	movlw	96
  6676   00444A                     u4677:
  6677   00444A  2EE8               	decfsz	wreg,f,c
  6678   00444C  D7FE               	bra	u4677
  6679   00444E  2E1E               	decfsz	??_turnRight45^0,f,c
  6680   004450  D7FC               	bra	u4677
  6681   004452  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  6682   004454  D7FA               	bra	u4677
  6683   004456                     
  6684                           ;dc_motor.c: 184:     stop(&motorL, &motorR);
  6685   004456  0EF5               	movlw	low _motorL
  6686   004458  6E14               	movwf	stop@mL^0,c
  6687   00445A  0E00               	movlw	high _motorL
  6688   00445C  6E15               	movwf	(stop@mL+1)^0,c
  6689   00445E  0EBE               	movlw	low _motorR
  6690   004460  6E16               	movwf	stop@mR^0,c
  6691   004462  0E01               	movlw	high _motorR
  6692   004464  6E17               	movwf	(stop@mR+1)^0,c
  6693   004466  EC12  F020         	call	_stop	;wreg free
  6694                           
  6695                           ;dc_motor.c: 185:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6696   00446A  0E52               	movlw	82
  6697   00446C  6E1F               	movwf	(??_turnRight45+1)^0,c
  6698   00446E  0E2B               	movlw	43
  6699   004470  6E1E               	movwf	??_turnRight45^0,c
  6700   004472  0E00               	movlw	0
  6701   004474                     u4687:
  6702   004474  2EE8               	decfsz	wreg,f,c
  6703   004476  D7FE               	bra	u4687
  6704   004478  2E1E               	decfsz	??_turnRight45^0,f,c
  6705   00447A  D7FC               	bra	u4687
  6706   00447C  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  6707   00447E  D7FA               	bra	u4687
  6708   004480  D000               	nop2	
  6709   004482  0012               	return		;funcret
  6710   004484                     __end_of_turnRight45:
  6711                           	callstack 0
  6712                           
  6713 ;; *************** function _turnRight *****************
  6714 ;; Defined at:
  6715 ;;		line 128 in file "dc_motor.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6718 ;;		 -> motorL(9), 
  6719 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6720 ;;		 -> motorR(9), 
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;		None
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  1    wreg      void 
  6725 ;; Registers used:
  6726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6732 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6734 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6735 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6736 ;;Total ram usage:        6 bytes
  6737 ;; Hardware stack levels used: 1
  6738 ;; Hardware stack levels required when called: 3
  6739 ;; This function calls:
  6740 ;;		_setMotorPWM
  6741 ;; This function is called by:
  6742 ;;		_turnRight45
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text43
  6747   003CA2                     __ptext43:
  6748                           	callstack 0
  6749   003CA2                     _turnRight:
  6750                           	callstack 24
  6751   003CA2                     
  6752                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  6753   003CA2  EE20 F001          	lfsr	2,1
  6754   003CA6  5014               	movf	turnRight@mL^0,w,c
  6755   003CA8  26D9               	addwf	fsr2l,f,c
  6756   003CAA  5015               	movf	(turnRight@mL+1)^0,w,c
  6757   003CAC  22DA               	addwfc	fsr2h,f,c
  6758   003CAE  0E01               	movlw	1
  6759   003CB0  6EDF               	movwf	indf2,c
  6760                           
  6761                           ;dc_motor.c: 131:     mR->direction =0;
  6762   003CB2  EE20 F001          	lfsr	2,1
  6763   003CB6  5016               	movf	turnRight@mR^0,w,c
  6764   003CB8  26D9               	addwf	fsr2l,f,c
  6765   003CBA  5017               	movf	(turnRight@mR+1)^0,w,c
  6766   003CBC  22DA               	addwfc	fsr2h,f,c
  6767   003CBE  0E00               	movlw	0
  6768   003CC0  6EDF               	movwf	indf2,c
  6769                           
  6770                           ;dc_motor.c: 133:     while(mL->power<power && mR->power<power){
  6771   003CC2  EF87  F01E         	goto	l3348
  6772   003CC6                     l3340:
  6773                           
  6774                           ;dc_motor.c: 135:         mL->power+=10;
  6775   003CC6  C014  FFD9         	movff	turnRight@mL,fsr2l
  6776   003CCA  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  6777   003CCE  0E0A               	movlw	10
  6778   003CD0  26DF               	addwf	indf2,f,c
  6779                           
  6780                           ;dc_motor.c: 136:         mR->power+=10;
  6781   003CD2  C016  FFD9         	movff	turnRight@mR,fsr2l
  6782   003CD6  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  6783   003CDA  0E0A               	movlw	10
  6784   003CDC  26DF               	addwf	indf2,f,c
  6785   003CDE                     
  6786                           ;dc_motor.c: 138:         setMotorPWM(mL);
  6787   003CDE  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  6788   003CE2  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  6789   003CE6  EC05  F01B         	call	_setMotorPWM	;wreg free
  6790   003CEA                     
  6791                           ;dc_motor.c: 139:         setMotorPWM(mR);
  6792   003CEA  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  6793   003CEE  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  6794   003CF2  EC05  F01B         	call	_setMotorPWM	;wreg free
  6795   003CF6                     
  6796                           ;dc_motor.c: 141:         _delay((unsigned long)((20)*(64000000/4000.0)));
  6797   003CF6  0E02               	movlw	2
  6798   003CF8  6E19               	movwf	(??_turnRight+1)^0,c
  6799   003CFA  0EA0               	movlw	160
  6800   003CFC  6E18               	movwf	??_turnRight^0,c
  6801   003CFE  0E92               	movlw	146
  6802   003D00                     u4697:
  6803   003D00  2EE8               	decfsz	wreg,f,c
  6804   003D02  D7FE               	bra	u4697
  6805   003D04  2E18               	decfsz	??_turnRight^0,f,c
  6806   003D06  D7FC               	bra	u4697
  6807   003D08  2E19               	decfsz	(??_turnRight+1)^0,f,c
  6808   003D0A  D7FA               	bra	u4697
  6809   003D0C  D000               	nop2	
  6810   003D0E                     l3348:
  6811   003D0E  C014  FFD9         	movff	turnRight@mL,fsr2l
  6812   003D12  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  6813   003D16  0E32               	movlw	50
  6814   003D18  60DF               	cpfslt	indf2,c
  6815   003D1A  EF91  F01E         	goto	u2641
  6816   003D1E  EF93  F01E         	goto	u2640
  6817   003D22                     u2641:
  6818   003D22  EF9F  F01E         	goto	l509
  6819   003D26                     u2640:
  6820   003D26  C016  FFD9         	movff	turnRight@mR,fsr2l
  6821   003D2A  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  6822   003D2E  0E31               	movlw	49
  6823   003D30  64DF               	cpfsgt	indf2,c
  6824   003D32  EF9D  F01E         	goto	u2651
  6825   003D36  EF9F  F01E         	goto	u2650
  6826   003D3A                     u2651:
  6827   003D3A  EF63  F01E         	goto	l3340
  6828   003D3E                     u2650:
  6829   003D3E                     l509:
  6830   003D3E  0012               	return		;funcret
  6831   003D40                     __end_of_turnRight:
  6832                           	callstack 0
  6833                           
  6834 ;; *************** function _Timer0_init *****************
  6835 ;; Defined at:
  6836 ;;		line 8 in file "timers.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;		None
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;		None
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  1    wreg      void 
  6843 ;; Registers used:
  6844 ;;		wreg, status,2
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6854 ;;Total ram usage:        0 bytes
  6855 ;; Hardware stack levels used: 1
  6856 ;; Hardware stack levels required when called: 1
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		_main
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text44
  6865   004B22                     __ptext44:
  6866                           	callstack 0
  6867   004B22                     _Timer0_init:
  6868                           	callstack 29
  6869   004B22                     
  6870                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  6871   004B22  50D6               	movf	214,w,c	;volatile
  6872   004B24  0B1F               	andlw	-225
  6873   004B26  0940               	iorlw	64
  6874   004B28  6ED6               	movwf	214,c	;volatile
  6875   004B2A                     
  6876                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  6877   004B2A  88D6               	bsf	214,4,c	;volatile
  6878                           
  6879                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
  6880   004B2C  50D6               	movf	214,w,c	;volatile
  6881   004B2E  0BF0               	andlw	-16
  6882   004B30  090E               	iorlw	14
  6883   004B32  6ED6               	movwf	214,c	;volatile
  6884   004B34                     
  6885                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  6886   004B34  88D5               	bsf	213,4,c	;volatile
  6887                           
  6888                           ;timers.c: 16:     TMR0H=0;
  6889   004B36  0E00               	movlw	0
  6890   004B38  6ED4               	movwf	212,c	;volatile
  6891                           
  6892                           ;timers.c: 17:     TMR0L=0;
  6893   004B3A  0E00               	movlw	0
  6894   004B3C  6ED3               	movwf	211,c	;volatile
  6895   004B3E                     
  6896                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  6897   004B3E  8ED5               	bsf	213,7,c	;volatile
  6898   004B40  0012               	return		;funcret
  6899   004B42                     __end_of_Timer0_init:
  6900                           	callstack 0
  6901                           
  6902 ;; *************** function _RetryMove *****************
  6903 ;; Defined at:
  6904 ;;		line 295 in file "dc_motor.c"
  6905 ;; Parameters:    Size  Location     Type
  6906 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  6907 ;;		 -> motorL(9), 
  6908 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  6909 ;;		 -> motorR(9), 
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;		None
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  1    wreg      void 
  6914 ;; Registers used:
  6915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6916 ;; Tracked objects:
  6917 ;;		On entry : 0/0
  6918 ;;		On exit  : 0/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6921 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6924 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6925 ;;Total ram usage:        6 bytes
  6926 ;; Hardware stack levels used: 1
  6927 ;; Hardware stack levels required when called: 4
  6928 ;; This function calls:
  6929 ;;		_fullSpeedAhead
  6930 ;;		_fullSpeedBack
  6931 ;;		_stop
  6932 ;; This function is called by:
  6933 ;;		_main
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           	psect	text45
  6938   003FA2                     __ptext45:
  6939                           	callstack 0
  6940   003FA2                     _RetryMove:
  6941                           	callstack 26
  6942   003FA2                     
  6943                           ;dc_motor.c: 296:     fullSpeedBack(mL,mR);
  6944   003FA2  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
  6945   003FA6  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
  6946   003FAA  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
  6947   003FAE  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
  6948   003FB2  EC3E  F01F         	call	_fullSpeedBack	;wreg free
  6949   003FB6                     
  6950                           ;dc_motor.c: 297:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6951   003FB6  0E29               	movlw	41
  6952   003FB8  6E1F               	movwf	(??_RetryMove+1)^0,c
  6953   003FBA  0E96               	movlw	150
  6954   003FBC  6E1E               	movwf	??_RetryMove^0,c
  6955   003FBE  0E7F               	movlw	127
  6956   003FC0                     u4707:
  6957   003FC0  2EE8               	decfsz	wreg,f,c
  6958   003FC2  D7FE               	bra	u4707
  6959   003FC4  2E1E               	decfsz	??_RetryMove^0,f,c
  6960   003FC6  D7FC               	bra	u4707
  6961   003FC8  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  6962   003FCA  D7FA               	bra	u4707
  6963   003FCC  F000               	nop	
  6964   003FCE                     
  6965                           ;dc_motor.c: 298:     stop(&motorL, &motorR);
  6966   003FCE  0EF5               	movlw	low _motorL
  6967   003FD0  6E14               	movwf	stop@mL^0,c
  6968   003FD2  0E00               	movlw	high _motorL
  6969   003FD4  6E15               	movwf	(stop@mL+1)^0,c
  6970   003FD6  0EBE               	movlw	low _motorR
  6971   003FD8  6E16               	movwf	stop@mR^0,c
  6972   003FDA  0E01               	movlw	high _motorR
  6973   003FDC  6E17               	movwf	(stop@mR+1)^0,c
  6974   003FDE  EC12  F020         	call	_stop	;wreg free
  6975   003FE2                     
  6976                           ;dc_motor.c: 299:     fullSpeedAhead(mL,mR);
  6977   003FE2  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  6978   003FE6  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  6979   003FEA  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  6980   003FEE  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  6981   003FF2  ECA0  F01E         	call	_fullSpeedAhead	;wreg free
  6982   003FF6                     
  6983                           ;dc_motor.c: 300:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6984   003FF6  0E29               	movlw	41
  6985   003FF8  6E1F               	movwf	(??_RetryMove+1)^0,c
  6986   003FFA  0E96               	movlw	150
  6987   003FFC  6E1E               	movwf	??_RetryMove^0,c
  6988   003FFE  0E7F               	movlw	127
  6989   004000                     u4717:
  6990   004000  2EE8               	decfsz	wreg,f,c
  6991   004002  D7FE               	bra	u4717
  6992   004004  2E1E               	decfsz	??_RetryMove^0,f,c
  6993   004006  D7FC               	bra	u4717
  6994   004008  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  6995   00400A  D7FA               	bra	u4717
  6996   00400C  F000               	nop	
  6997                           
  6998                           ;dc_motor.c: 301:     stop(&motorL, &motorR);
  6999   00400E  0EF5               	movlw	low _motorL
  7000   004010  6E14               	movwf	stop@mL^0,c
  7001   004012  0E00               	movlw	high _motorL
  7002   004014  6E15               	movwf	(stop@mL+1)^0,c
  7003   004016  0EBE               	movlw	low _motorR
  7004   004018  6E16               	movwf	stop@mR^0,c
  7005   00401A  0E01               	movlw	high _motorR
  7006   00401C  6E17               	movwf	(stop@mR+1)^0,c
  7007   00401E  EC12  F020         	call	_stop	;wreg free
  7008   004022  0012               	return		;funcret
  7009   004024                     __end_of_RetryMove:
  7010                           	callstack 0
  7011                           
  7012 ;; *************** function _fullSpeedAhead *****************
  7013 ;; Defined at:
  7014 ;;		line 146 in file "dc_motor.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7017 ;;		 -> motorL(9), 
  7018 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7019 ;;		 -> motorR(9), 
  7020 ;; Auto vars:     Size  Location     Type
  7021 ;;		None
  7022 ;; Return value:  Size  Location     Type
  7023 ;;                  1    wreg      void 
  7024 ;; Registers used:
  7025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7026 ;; Tracked objects:
  7027 ;;		On entry : 0/0
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: 0/0
  7030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7033 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7034 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7035 ;;Total ram usage:        6 bytes
  7036 ;; Hardware stack levels used: 1
  7037 ;; Hardware stack levels required when called: 3
  7038 ;; This function calls:
  7039 ;;		_setMotorPWM
  7040 ;; This function is called by:
  7041 ;;		_main
  7042 ;;		_ForwardOneBlock
  7043 ;;		_Forwardhalfblock
  7044 ;;		_RetryMove
  7045 ;;		_go_Home
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049                           	psect	text46
  7050   003D40                     __ptext46:
  7051                           	callstack 0
  7052   003D40                     _fullSpeedAhead:
  7053                           	callstack 26
  7054   003D40                     
  7055                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  7056   003D40  EE20 F001          	lfsr	2,1
  7057   003D44  5014               	movf	fullSpeedAhead@mL^0,w,c
  7058   003D46  26D9               	addwf	fsr2l,f,c
  7059   003D48  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7060   003D4A  22DA               	addwfc	fsr2h,f,c
  7061   003D4C  0E01               	movlw	1
  7062   003D4E  6EDF               	movwf	indf2,c
  7063                           
  7064                           ;dc_motor.c: 150:     mR->direction =1;
  7065   003D50  EE20 F001          	lfsr	2,1
  7066   003D54  5016               	movf	fullSpeedAhead@mR^0,w,c
  7067   003D56  26D9               	addwf	fsr2l,f,c
  7068   003D58  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  7069   003D5A  22DA               	addwfc	fsr2h,f,c
  7070   003D5C  0E01               	movlw	1
  7071   003D5E  6EDF               	movwf	indf2,c
  7072                           
  7073                           ;dc_motor.c: 151:     while (mL->power < power && mR->power < power){
  7074   003D60  EFD6  F01E         	goto	l3306
  7075   003D64                     l3298:
  7076                           
  7077                           ;dc_motor.c: 153:         mL->power+=10;
  7078   003D64  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7079   003D68  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7080   003D6C  0E0A               	movlw	10
  7081   003D6E  26DF               	addwf	indf2,f,c
  7082                           
  7083                           ;dc_motor.c: 154:         mR->power+=10;
  7084   003D70  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7085   003D74  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7086   003D78  0E0A               	movlw	10
  7087   003D7A  26DF               	addwf	indf2,f,c
  7088   003D7C                     
  7089                           ;dc_motor.c: 156:         setMotorPWM(mL);
  7090   003D7C  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  7091   003D80  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  7092   003D84  EC05  F01B         	call	_setMotorPWM	;wreg free
  7093   003D88                     
  7094                           ;dc_motor.c: 157:         setMotorPWM(mR);
  7095   003D88  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  7096   003D8C  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  7097   003D90  EC05  F01B         	call	_setMotorPWM	;wreg free
  7098   003D94                     
  7099                           ;dc_motor.c: 159:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7100   003D94  0E02               	movlw	2
  7101   003D96  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
  7102   003D98  0EA0               	movlw	160
  7103   003D9A  6E18               	movwf	??_fullSpeedAhead^0,c
  7104   003D9C  0E92               	movlw	146
  7105   003D9E                     u4727:
  7106   003D9E  2EE8               	decfsz	wreg,f,c
  7107   003DA0  D7FE               	bra	u4727
  7108   003DA2  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  7109   003DA4  D7FC               	bra	u4727
  7110   003DA6  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  7111   003DA8  D7FA               	bra	u4727
  7112   003DAA  D000               	nop2	
  7113   003DAC                     l3306:
  7114   003DAC  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7115   003DB0  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7116   003DB4  0E32               	movlw	50
  7117   003DB6  60DF               	cpfslt	indf2,c
  7118   003DB8  EFE0  F01E         	goto	u2581
  7119   003DBC  EFE2  F01E         	goto	u2580
  7120   003DC0                     u2581:
  7121   003DC0  EFEE  F01E         	goto	l517
  7122   003DC4                     u2580:
  7123   003DC4  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7124   003DC8  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7125   003DCC  0E31               	movlw	49
  7126   003DCE  64DF               	cpfsgt	indf2,c
  7127   003DD0  EFEC  F01E         	goto	u2591
  7128   003DD4  EFEE  F01E         	goto	u2590
  7129   003DD8                     u2591:
  7130   003DD8  EFB2  F01E         	goto	l3298
  7131   003DDC                     u2590:
  7132   003DDC                     l517:
  7133   003DDC  0012               	return		;funcret
  7134   003DDE                     __end_of_fullSpeedAhead:
  7135                           	callstack 0
  7136                           
  7137 ;; *************** function _PinkMove *****************
  7138 ;; Defined at:
  7139 ;;		line 268 in file "dc_motor.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7142 ;;		 -> motorL(9), 
  7143 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7144 ;;		 -> motorR(9), 
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;		None
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  1    wreg      void 
  7149 ;; Registers used:
  7150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7156 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7159 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7160 ;;Total ram usage:        4 bytes
  7161 ;; Hardware stack levels used: 1
  7162 ;; Hardware stack levels required when called: 5
  7163 ;; This function calls:
  7164 ;;		_reverseDetect
  7165 ;;		_reverseOneBlock
  7166 ;;		_turnLeft45
  7167 ;; This function is called by:
  7168 ;;		_main
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172                           	psect	text47
  7173   004676                     __ptext47:
  7174                           	callstack 0
  7175   004676                     _PinkMove:
  7176                           	callstack 25
  7177   004676                     
  7178                           ;dc_motor.c: 269:     reverseDetect(&motorL, &motorR);
  7179   004676  0EF5               	movlw	low _motorL
  7180   004678  6E1A               	movwf	reverseDetect@mL^0,c
  7181   00467A  0E00               	movlw	high _motorL
  7182   00467C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7183   00467E  0EBE               	movlw	low _motorR
  7184   004680  6E1C               	movwf	reverseDetect@mR^0,c
  7185   004682  0E01               	movlw	high _motorR
  7186   004684  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7187   004686  ECE9  F021         	call	_reverseDetect	;wreg free
  7188                           
  7189                           ;dc_motor.c: 271:     reverseOneBlock(&motorL, &motorR);
  7190   00468A  0EF5               	movlw	low _motorL
  7191   00468C  6E1A               	movwf	reverseOneBlock@mL^0,c
  7192   00468E  0E00               	movlw	high _motorL
  7193   004690  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  7194   004692  0EBE               	movlw	low _motorR
  7195   004694  6E1C               	movwf	reverseOneBlock@mR^0,c
  7196   004696  0E01               	movlw	high _motorR
  7197   004698  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  7198   00469A  ECBC  F021         	call	_reverseOneBlock	;wreg free
  7199                           
  7200                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  7201   00469E  0EF5               	movlw	low _motorL
  7202   0046A0  6E1A               	movwf	turnLeft45@mL^0,c
  7203   0046A2  0E00               	movlw	high _motorL
  7204   0046A4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7205   0046A6  0EBE               	movlw	low _motorR
  7206   0046A8  6E1C               	movwf	turnLeft45@mR^0,c
  7207   0046AA  0E01               	movlw	high _motorR
  7208   0046AC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7209   0046AE  EC42  F022         	call	_turnLeft45	;wreg free
  7210                           
  7211                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  7212   0046B2  0EF5               	movlw	low _motorL
  7213   0046B4  6E1A               	movwf	turnLeft45@mL^0,c
  7214   0046B6  0E00               	movlw	high _motorL
  7215   0046B8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7216   0046BA  0EBE               	movlw	low _motorR
  7217   0046BC  6E1C               	movwf	turnLeft45@mR^0,c
  7218   0046BE  0E01               	movlw	high _motorR
  7219   0046C0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7220   0046C2  EC42  F022         	call	_turnLeft45	;wreg free
  7221   0046C6  0012               	return		;funcret
  7222   0046C8                     __end_of_PinkMove:
  7223                           	callstack 0
  7224                           
  7225 ;; *************** function _turnLeft45 *****************
  7226 ;; Defined at:
  7227 ;;		line 188 in file "dc_motor.c"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7230 ;;		 -> motorL(9), 
  7231 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7232 ;;		 -> motorR(9), 
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;		None
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  1    wreg      void 
  7237 ;; Registers used:
  7238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7244 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7246 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7247 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7248 ;;Total ram usage:        6 bytes
  7249 ;; Hardware stack levels used: 1
  7250 ;; Hardware stack levels required when called: 4
  7251 ;; This function calls:
  7252 ;;		_stop
  7253 ;;		_turnLeft
  7254 ;; This function is called by:
  7255 ;;		_GreenMove
  7256 ;;		_PinkMove
  7257 ;;		_LightBlueMove
  7258 ;;		_ReverseYellow
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text48
  7263   004484                     __ptext48:
  7264                           	callstack 0
  7265   004484                     _turnLeft45:
  7266                           	callstack 24
  7267   004484                     
  7268                           ;dc_motor.c: 189:     turnLeft(mL,mR);
  7269   004484  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
  7270   004488  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  7271   00448C  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
  7272   004490  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  7273   004494  ECEF  F01E         	call	_turnLeft	;wreg free
  7274   004498                     
  7275                           ;dc_motor.c: 190:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  7276   004498  0E12               	movlw	18
  7277   00449A  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7278   00449C  0EDC               	movlw	220
  7279   00449E  6E1E               	movwf	??_turnLeft45^0,c
  7280   0044A0  0E60               	movlw	96
  7281   0044A2                     u4737:
  7282   0044A2  2EE8               	decfsz	wreg,f,c
  7283   0044A4  D7FE               	bra	u4737
  7284   0044A6  2E1E               	decfsz	??_turnLeft45^0,f,c
  7285   0044A8  D7FC               	bra	u4737
  7286   0044AA  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7287   0044AC  D7FA               	bra	u4737
  7288   0044AE                     
  7289                           ;dc_motor.c: 191:     stop(&motorL, &motorR);
  7290   0044AE  0EF5               	movlw	low _motorL
  7291   0044B0  6E14               	movwf	stop@mL^0,c
  7292   0044B2  0E00               	movlw	high _motorL
  7293   0044B4  6E15               	movwf	(stop@mL+1)^0,c
  7294   0044B6  0EBE               	movlw	low _motorR
  7295   0044B8  6E16               	movwf	stop@mR^0,c
  7296   0044BA  0E01               	movlw	high _motorR
  7297   0044BC  6E17               	movwf	(stop@mR+1)^0,c
  7298   0044BE  EC12  F020         	call	_stop	;wreg free
  7299                           
  7300                           ;dc_motor.c: 192:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7301   0044C2  0E52               	movlw	82
  7302   0044C4  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7303   0044C6  0E2B               	movlw	43
  7304   0044C8  6E1E               	movwf	??_turnLeft45^0,c
  7305   0044CA  0E00               	movlw	0
  7306   0044CC                     u4747:
  7307   0044CC  2EE8               	decfsz	wreg,f,c
  7308   0044CE  D7FE               	bra	u4747
  7309   0044D0  2E1E               	decfsz	??_turnLeft45^0,f,c
  7310   0044D2  D7FC               	bra	u4747
  7311   0044D4  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7312   0044D6  D7FA               	bra	u4747
  7313   0044D8  D000               	nop2	
  7314   0044DA  0012               	return		;funcret
  7315   0044DC                     __end_of_turnLeft45:
  7316                           	callstack 0
  7317                           
  7318 ;; *************** function _turnLeft *****************
  7319 ;; Defined at:
  7320 ;;		line 110 in file "dc_motor.c"
  7321 ;; Parameters:    Size  Location     Type
  7322 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7323 ;;		 -> motorL(9), 
  7324 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7325 ;;		 -> motorR(9), 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;		None
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  1    wreg      void 
  7330 ;; Registers used:
  7331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7339 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7340 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7341 ;;Total ram usage:        6 bytes
  7342 ;; Hardware stack levels used: 1
  7343 ;; Hardware stack levels required when called: 3
  7344 ;; This function calls:
  7345 ;;		_setMotorPWM
  7346 ;; This function is called by:
  7347 ;;		_turnLeft45
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           	psect	text49
  7352   003DDE                     __ptext49:
  7353                           	callstack 0
  7354   003DDE                     _turnLeft:
  7355                           	callstack 24
  7356   003DDE                     
  7357                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  7358   003DDE  EE20 F001          	lfsr	2,1
  7359   003DE2  5014               	movf	turnLeft@mL^0,w,c
  7360   003DE4  26D9               	addwf	fsr2l,f,c
  7361   003DE6  5015               	movf	(turnLeft@mL+1)^0,w,c
  7362   003DE8  22DA               	addwfc	fsr2h,f,c
  7363   003DEA  0E00               	movlw	0
  7364   003DEC  6EDF               	movwf	indf2,c
  7365                           
  7366                           ;dc_motor.c: 113:     mR->direction =1;
  7367   003DEE  EE20 F001          	lfsr	2,1
  7368   003DF2  5016               	movf	turnLeft@mR^0,w,c
  7369   003DF4  26D9               	addwf	fsr2l,f,c
  7370   003DF6  5017               	movf	(turnLeft@mR+1)^0,w,c
  7371   003DF8  22DA               	addwfc	fsr2h,f,c
  7372   003DFA  0E01               	movlw	1
  7373   003DFC  6EDF               	movwf	indf2,c
  7374                           
  7375                           ;dc_motor.c: 115:     while(mL->power<power && mR->power<power){
  7376   003DFE  EF25  F01F         	goto	l3334
  7377   003E02                     l3326:
  7378                           
  7379                           ;dc_motor.c: 117:         mL->power+=10;
  7380   003E02  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7381   003E06  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7382   003E0A  0E0A               	movlw	10
  7383   003E0C  26DF               	addwf	indf2,f,c
  7384                           
  7385                           ;dc_motor.c: 118:         mR->power+=10;
  7386   003E0E  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7387   003E12  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7388   003E16  0E0A               	movlw	10
  7389   003E18  26DF               	addwf	indf2,f,c
  7390   003E1A                     
  7391                           ;dc_motor.c: 120:         setMotorPWM(mL);
  7392   003E1A  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7393   003E1E  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7394   003E22  EC05  F01B         	call	_setMotorPWM	;wreg free
  7395   003E26                     
  7396                           ;dc_motor.c: 121:         setMotorPWM(mR);
  7397   003E26  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7398   003E2A  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7399   003E2E  EC05  F01B         	call	_setMotorPWM	;wreg free
  7400   003E32                     
  7401                           ;dc_motor.c: 123:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7402   003E32  0E02               	movlw	2
  7403   003E34  6E19               	movwf	(??_turnLeft+1)^0,c
  7404   003E36  0EA0               	movlw	160
  7405   003E38  6E18               	movwf	??_turnLeft^0,c
  7406   003E3A  0E92               	movlw	146
  7407   003E3C                     u4757:
  7408   003E3C  2EE8               	decfsz	wreg,f,c
  7409   003E3E  D7FE               	bra	u4757
  7410   003E40  2E18               	decfsz	??_turnLeft^0,f,c
  7411   003E42  D7FC               	bra	u4757
  7412   003E44  2E19               	decfsz	(??_turnLeft+1)^0,f,c
  7413   003E46  D7FA               	bra	u4757
  7414   003E48  D000               	nop2	
  7415   003E4A                     l3334:
  7416   003E4A  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7417   003E4E  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7418   003E52  0E32               	movlw	50
  7419   003E54  60DF               	cpfslt	indf2,c
  7420   003E56  EF2F  F01F         	goto	u2621
  7421   003E5A  EF31  F01F         	goto	u2620
  7422   003E5E                     u2621:
  7423   003E5E  EF3D  F01F         	goto	l501
  7424   003E62                     u2620:
  7425   003E62  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7426   003E66  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7427   003E6A  0E31               	movlw	49
  7428   003E6C  64DF               	cpfsgt	indf2,c
  7429   003E6E  EF3B  F01F         	goto	u2631
  7430   003E72  EF3D  F01F         	goto	u2630
  7431   003E76                     u2631:
  7432   003E76  EF01  F01F         	goto	l3326
  7433   003E7A                     u2630:
  7434   003E7A                     l501:
  7435   003E7A  0012               	return		;funcret
  7436   003E7C                     __end_of_turnLeft:
  7437                           	callstack 0
  7438                           
  7439 ;; *************** function _reverseOneBlock *****************
  7440 ;; Defined at:
  7441 ;;		line 202 in file "dc_motor.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7444 ;;		 -> motorL(9), 
  7445 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7446 ;;		 -> motorR(9), 
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;		None
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1    wreg      void 
  7451 ;; Registers used:
  7452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7460 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7461 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7462 ;;Total ram usage:        6 bytes
  7463 ;; Hardware stack levels used: 1
  7464 ;; Hardware stack levels required when called: 4
  7465 ;; This function calls:
  7466 ;;		_fullSpeedBack
  7467 ;;		_stop
  7468 ;; This function is called by:
  7469 ;;		_YellowMove
  7470 ;;		_PinkMove
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474                           	psect	text50
  7475   004378                     __ptext50:
  7476                           	callstack 0
  7477   004378                     _reverseOneBlock:
  7478                           	callstack 25
  7479   004378                     
  7480                           ;dc_motor.c: 203:     fullSpeedBack(mL,mR);
  7481   004378  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  7482   00437C  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  7483   004380  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  7484   004384  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  7485   004388  EC3E  F01F         	call	_fullSpeedBack	;wreg free
  7486   00438C                     
  7487                           ;dc_motor.c: 204:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7488   00438C  0E52               	movlw	82
  7489   00438E  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7490   004390  0E2B               	movlw	43
  7491   004392  6E1E               	movwf	??_reverseOneBlock^0,c
  7492   004394  0E00               	movlw	0
  7493   004396                     u4767:
  7494   004396  2EE8               	decfsz	wreg,f,c
  7495   004398  D7FE               	bra	u4767
  7496   00439A  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  7497   00439C  D7FC               	bra	u4767
  7498   00439E  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  7499   0043A0  D7FA               	bra	u4767
  7500   0043A2  D000               	nop2	
  7501   0043A4                     
  7502                           ;dc_motor.c: 205:     stop(&motorL, &motorR);
  7503   0043A4  0EF5               	movlw	low _motorL
  7504   0043A6  6E14               	movwf	stop@mL^0,c
  7505   0043A8  0E00               	movlw	high _motorL
  7506   0043AA  6E15               	movwf	(stop@mL+1)^0,c
  7507   0043AC  0EBE               	movlw	low _motorR
  7508   0043AE  6E16               	movwf	stop@mR^0,c
  7509   0043B0  0E01               	movlw	high _motorR
  7510   0043B2  6E17               	movwf	(stop@mR+1)^0,c
  7511   0043B4  EC12  F020         	call	_stop	;wreg free
  7512                           
  7513                           ;dc_motor.c: 206:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7514   0043B8  0E52               	movlw	82
  7515   0043BA  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7516   0043BC  0E2B               	movlw	43
  7517   0043BE  6E1E               	movwf	??_reverseOneBlock^0,c
  7518   0043C0  0E00               	movlw	0
  7519   0043C2                     u4777:
  7520   0043C2  2EE8               	decfsz	wreg,f,c
  7521   0043C4  D7FE               	bra	u4777
  7522   0043C6  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  7523   0043C8  D7FC               	bra	u4777
  7524   0043CA  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  7525   0043CC  D7FA               	bra	u4777
  7526   0043CE  D000               	nop2	
  7527   0043D0  0012               	return		;funcret
  7528   0043D2                     __end_of_reverseOneBlock:
  7529                           	callstack 0
  7530                           
  7531 ;; *************** function _reverseDetect *****************
  7532 ;; Defined at:
  7533 ;;		line 195 in file "dc_motor.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7536 ;;		 -> motorL(9), 
  7537 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7538 ;;		 -> motorR(9), 
  7539 ;; Auto vars:     Size  Location     Type
  7540 ;;		None
  7541 ;; Return value:  Size  Location     Type
  7542 ;;                  1    wreg      void 
  7543 ;; Registers used:
  7544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7545 ;; Tracked objects:
  7546 ;;		On entry : 0/0
  7547 ;;		On exit  : 0/0
  7548 ;;		Unchanged: 0/0
  7549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7553 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7554 ;;Total ram usage:        6 bytes
  7555 ;; Hardware stack levels used: 1
  7556 ;; Hardware stack levels required when called: 4
  7557 ;; This function calls:
  7558 ;;		_fullSpeedBack
  7559 ;;		_stop
  7560 ;; This function is called by:
  7561 ;;		_RedMove
  7562 ;;		_GreenMove
  7563 ;;		_BlueMove
  7564 ;;		_YellowMove
  7565 ;;		_PinkMove
  7566 ;;		_OrangeMove
  7567 ;;		_LightBlueMove
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571                           	psect	text51
  7572   0043D2                     __ptext51:
  7573                           	callstack 0
  7574   0043D2                     _reverseDetect:
  7575                           	callstack 24
  7576   0043D2                     
  7577                           ;dc_motor.c: 196:     fullSpeedBack(mL,mR);
  7578   0043D2  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
  7579   0043D6  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
  7580   0043DA  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
  7581   0043DE  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
  7582   0043E2  EC3E  F01F         	call	_fullSpeedBack	;wreg free
  7583   0043E6                     
  7584                           ;dc_motor.c: 197:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7585   0043E6  0E11               	movlw	17
  7586   0043E8  6E1F               	movwf	(??_reverseDetect+1)^0,c
  7587   0043EA  0E3C               	movlw	60
  7588   0043EC  6E1E               	movwf	??_reverseDetect^0,c
  7589   0043EE  0ECB               	movlw	203
  7590   0043F0                     u4787:
  7591   0043F0  2EE8               	decfsz	wreg,f,c
  7592   0043F2  D7FE               	bra	u4787
  7593   0043F4  2E1E               	decfsz	??_reverseDetect^0,f,c
  7594   0043F6  D7FC               	bra	u4787
  7595   0043F8  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  7596   0043FA  D7FA               	bra	u4787
  7597   0043FC  F000               	nop	
  7598   0043FE                     
  7599                           ;dc_motor.c: 198:     stop(&motorL, &motorR);
  7600   0043FE  0EF5               	movlw	low _motorL
  7601   004400  6E14               	movwf	stop@mL^0,c
  7602   004402  0E00               	movlw	high _motorL
  7603   004404  6E15               	movwf	(stop@mL+1)^0,c
  7604   004406  0EBE               	movlw	low _motorR
  7605   004408  6E16               	movwf	stop@mR^0,c
  7606   00440A  0E01               	movlw	high _motorR
  7607   00440C  6E17               	movwf	(stop@mR+1)^0,c
  7608   00440E  EC12  F020         	call	_stop	;wreg free
  7609                           
  7610                           ;dc_motor.c: 199:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7611   004412  0E52               	movlw	82
  7612   004414  6E1F               	movwf	(??_reverseDetect+1)^0,c
  7613   004416  0E2B               	movlw	43
  7614   004418  6E1E               	movwf	??_reverseDetect^0,c
  7615   00441A  0E00               	movlw	0
  7616   00441C                     u4797:
  7617   00441C  2EE8               	decfsz	wreg,f,c
  7618   00441E  D7FE               	bra	u4797
  7619   004420  2E1E               	decfsz	??_reverseDetect^0,f,c
  7620   004422  D7FC               	bra	u4797
  7621   004424  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  7622   004426  D7FA               	bra	u4797
  7623   004428  D000               	nop2	
  7624   00442A  0012               	return		;funcret
  7625   00442C                     __end_of_reverseDetect:
  7626                           	callstack 0
  7627                           
  7628 ;; *************** function _stop *****************
  7629 ;; Defined at:
  7630 ;;		line 92 in file "dc_motor.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7633 ;;		 -> motorL(9), 
  7634 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7635 ;;		 -> motorR(9), 
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;		None
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  1    wreg      void 
  7640 ;; Registers used:
  7641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7647 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7649 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7650 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7651 ;;Total ram usage:        6 bytes
  7652 ;; Hardware stack levels used: 1
  7653 ;; Hardware stack levels required when called: 3
  7654 ;; This function calls:
  7655 ;;		_setMotorPWM
  7656 ;; This function is called by:
  7657 ;;		_main
  7658 ;;		_turnRight45
  7659 ;;		_turnLeft45
  7660 ;;		_reverseDetect
  7661 ;;		_reverseOneBlock
  7662 ;;		_ForwardOneBlock
  7663 ;;		_Forwardhalfblock
  7664 ;;		_RetryMove
  7665 ;;		_Backhalfblock
  7666 ;; This function uses a non-reentrant model
  7667 ;;
  7668                           
  7669                           	psect	text52
  7670   004024                     __ptext52:
  7671                           	callstack 0
  7672   004024                     _stop:
  7673                           	callstack 27
  7674   004024                     
  7675                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
  7676   004024  EF38  F020         	goto	l3320
  7677   004028                     l3312:
  7678                           
  7679                           ;dc_motor.c: 96:         mL->power-=10;
  7680   004028  C014  FFD9         	movff	stop@mL,fsr2l
  7681   00402C  C015  FFDA         	movff	stop@mL+1,fsr2h
  7682   004030  0E0A               	movlw	10
  7683   004032  5EDF               	subwf	indf2,f,c
  7684                           
  7685                           ;dc_motor.c: 97:         mR->power-=10;
  7686   004034  C016  FFD9         	movff	stop@mR,fsr2l
  7687   004038  C017  FFDA         	movff	stop@mR+1,fsr2h
  7688   00403C  0E0A               	movlw	10
  7689   00403E  5EDF               	subwf	indf2,f,c
  7690   004040                     
  7691                           ;dc_motor.c: 102:         setMotorPWM(mL);
  7692   004040  C014  F00E         	movff	stop@mL,setMotorPWM@m
  7693   004044  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  7694   004048  EC05  F01B         	call	_setMotorPWM	;wreg free
  7695   00404C                     
  7696                           ;dc_motor.c: 103:         setMotorPWM(mR);
  7697   00404C  C016  F00E         	movff	stop@mR,setMotorPWM@m
  7698   004050  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  7699   004054  EC05  F01B         	call	_setMotorPWM	;wreg free
  7700   004058                     
  7701                           ;dc_motor.c: 105:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7702   004058  0E02               	movlw	2
  7703   00405A  6E19               	movwf	(??_stop+1)^0,c
  7704   00405C  0EA0               	movlw	160
  7705   00405E  6E18               	movwf	??_stop^0,c
  7706   004060  0E92               	movlw	146
  7707   004062                     u4807:
  7708   004062  2EE8               	decfsz	wreg,f,c
  7709   004064  D7FE               	bra	u4807
  7710   004066  2E18               	decfsz	??_stop^0,f,c
  7711   004068  D7FC               	bra	u4807
  7712   00406A  2E19               	decfsz	(??_stop+1)^0,f,c
  7713   00406C  D7FA               	bra	u4807
  7714   00406E  D000               	nop2	
  7715   004070                     l3320:
  7716                           
  7717                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
  7718   004070  C014  FFD9         	movff	stop@mL,fsr2l
  7719   004074  C015  FFDA         	movff	stop@mL+1,fsr2h
  7720   004078  50DF               	movf	indf2,w,c
  7721   00407A  A4D8               	btfss	status,2,c
  7722   00407C  EF42  F020         	goto	u2601
  7723   004080  EF44  F020         	goto	u2600
  7724   004084                     u2601:
  7725   004084  EF14  F020         	goto	l3312
  7726   004088                     u2600:
  7727   004088  C016  FFD9         	movff	stop@mR,fsr2l
  7728   00408C  C017  FFDA         	movff	stop@mR+1,fsr2h
  7729   004090  50DF               	movf	indf2,w,c
  7730   004092  A4D8               	btfss	status,2,c
  7731   004094  EF4E  F020         	goto	u2611
  7732   004098  EF50  F020         	goto	u2610
  7733   00409C                     u2611:
  7734   00409C  EF14  F020         	goto	l3312
  7735   0040A0                     u2610:
  7736   0040A0  0012               	return		;funcret
  7737   0040A2                     __end_of_stop:
  7738                           	callstack 0
  7739                           
  7740 ;; *************** function _fullSpeedBack *****************
  7741 ;; Defined at:
  7742 ;;		line 164 in file "dc_motor.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7745 ;;		 -> motorL(9), 
  7746 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7747 ;;		 -> motorR(9), 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;		None
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  1    wreg      void 
  7752 ;; Registers used:
  7753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7759 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7761 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7762 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7763 ;;Total ram usage:        6 bytes
  7764 ;; Hardware stack levels used: 1
  7765 ;; Hardware stack levels required when called: 3
  7766 ;; This function calls:
  7767 ;;		_setMotorPWM
  7768 ;; This function is called by:
  7769 ;;		_reverseDetect
  7770 ;;		_reverseOneBlock
  7771 ;;		_RetryMove
  7772 ;;		_Backhalfblock
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           	psect	text53
  7777   003E7C                     __ptext53:
  7778                           	callstack 0
  7779   003E7C                     _fullSpeedBack:
  7780                           	callstack 24
  7781   003E7C                     
  7782                           ;dc_motor.c: 164: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 165: {;dc_motor.c: 167:     mL->direction =0;
  7783   003E7C  EE20 F001          	lfsr	2,1
  7784   003E80  5014               	movf	fullSpeedBack@mL^0,w,c
  7785   003E82  26D9               	addwf	fsr2l,f,c
  7786   003E84  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
  7787   003E86  22DA               	addwfc	fsr2h,f,c
  7788   003E88  0E00               	movlw	0
  7789   003E8A  6EDF               	movwf	indf2,c
  7790                           
  7791                           ;dc_motor.c: 168:     mR->direction =0;
  7792   003E8C  EE20 F001          	lfsr	2,1
  7793   003E90  5016               	movf	fullSpeedBack@mR^0,w,c
  7794   003E92  26D9               	addwf	fsr2l,f,c
  7795   003E94  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
  7796   003E96  22DA               	addwfc	fsr2h,f,c
  7797   003E98  0E00               	movlw	0
  7798   003E9A  6EDF               	movwf	indf2,c
  7799                           
  7800                           ;dc_motor.c: 169:     while (mL->power < power && mR->power < power){
  7801   003E9C  EF74  F01F         	goto	l3362
  7802   003EA0                     l3354:
  7803                           
  7804                           ;dc_motor.c: 171:         mL->power+=10;
  7805   003EA0  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  7806   003EA4  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  7807   003EA8  0E0A               	movlw	10
  7808   003EAA  26DF               	addwf	indf2,f,c
  7809                           
  7810                           ;dc_motor.c: 172:         mR->power+=10;
  7811   003EAC  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  7812   003EB0  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  7813   003EB4  0E0A               	movlw	10
  7814   003EB6  26DF               	addwf	indf2,f,c
  7815   003EB8                     
  7816                           ;dc_motor.c: 174:         setMotorPWM(mL);
  7817   003EB8  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
  7818   003EBC  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  7819   003EC0  EC05  F01B         	call	_setMotorPWM	;wreg free
  7820   003EC4                     
  7821                           ;dc_motor.c: 175:         setMotorPWM(mR);
  7822   003EC4  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
  7823   003EC8  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  7824   003ECC  EC05  F01B         	call	_setMotorPWM	;wreg free
  7825   003ED0                     
  7826                           ;dc_motor.c: 177:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7827   003ED0  0E02               	movlw	2
  7828   003ED2  6E19               	movwf	(??_fullSpeedBack+1)^0,c
  7829   003ED4  0EA0               	movlw	160
  7830   003ED6  6E18               	movwf	??_fullSpeedBack^0,c
  7831   003ED8  0E92               	movlw	146
  7832   003EDA                     u4817:
  7833   003EDA  2EE8               	decfsz	wreg,f,c
  7834   003EDC  D7FE               	bra	u4817
  7835   003EDE  2E18               	decfsz	??_fullSpeedBack^0,f,c
  7836   003EE0  D7FC               	bra	u4817
  7837   003EE2  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
  7838   003EE4  D7FA               	bra	u4817
  7839   003EE6  D000               	nop2	
  7840   003EE8                     l3362:
  7841   003EE8  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  7842   003EEC  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  7843   003EF0  0E32               	movlw	50
  7844   003EF2  60DF               	cpfslt	indf2,c
  7845   003EF4  EF7E  F01F         	goto	u2661
  7846   003EF8  EF80  F01F         	goto	u2660
  7847   003EFC                     u2661:
  7848   003EFC  EF8C  F01F         	goto	l525
  7849   003F00                     u2660:
  7850   003F00  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  7851   003F04  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  7852   003F08  0E31               	movlw	49
  7853   003F0A  64DF               	cpfsgt	indf2,c
  7854   003F0C  EF8A  F01F         	goto	u2671
  7855   003F10  EF8C  F01F         	goto	u2670
  7856   003F14                     u2671:
  7857   003F14  EF50  F01F         	goto	l3354
  7858   003F18                     u2670:
  7859   003F18                     l525:
  7860   003F18  0012               	return		;funcret
  7861   003F1A                     __end_of_fullSpeedBack:
  7862                           	callstack 0
  7863                           
  7864 ;; *************** function _setMotorPWM *****************
  7865 ;; Defined at:
  7866 ;;		line 67 in file "dc_motor.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;  m               2   13[COMRAM] PTR struct DC_motor
  7869 ;;		 -> motorR(9), motorL(9), 
  7870 ;; Auto vars:     Size  Location     Type
  7871 ;;  negDuty         1   18[COMRAM] unsigned char 
  7872 ;;  posDuty         1   17[COMRAM] unsigned char 
  7873 ;; Return value:  Size  Location     Type
  7874 ;;                  1    wreg      void 
  7875 ;; Registers used:
  7876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7877 ;; Tracked objects:
  7878 ;;		On entry : 0/0
  7879 ;;		On exit  : 0/0
  7880 ;;		Unchanged: 0/0
  7881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7883 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7885 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7886 ;;Total ram usage:        6 bytes
  7887 ;; Hardware stack levels used: 1
  7888 ;; Hardware stack levels required when called: 2
  7889 ;; This function calls:
  7890 ;;		___lwdiv
  7891 ;;		___wmul
  7892 ;; This function is called by:
  7893 ;;		_stop
  7894 ;;		_turnLeft
  7895 ;;		_turnRight
  7896 ;;		_fullSpeedAhead
  7897 ;;		_fullSpeedBack
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text54
  7902   00360A                     __ptext54:
  7903                           	callstack 0
  7904   00360A                     _setMotorPWM:
  7905                           	callstack 27
  7906   00360A                     
  7907                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
  7908   00360A  EE20 F002          	lfsr	2,2
  7909   00360E  500E               	movf	setMotorPWM@m^0,w,c
  7910   003610  26D9               	addwf	fsr2l,f,c
  7911   003612  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7912   003614  22DA               	addwfc	fsr2h,f,c
  7913   003616  50DF               	movf	indf2,w,c
  7914   003618  B4D8               	btfsc	status,2,c
  7915   00361A  EF11  F01B         	goto	u2381
  7916   00361E  EF13  F01B         	goto	u2380
  7917   003622                     u2381:
  7918   003622  EF47  F01B         	goto	l3184
  7919   003626                     u2380:
  7920   003626                     
  7921                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  7922   003626  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  7923   00362A  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7924   00362E  50DF               	movf	indf2,w,c
  7925   003630  6E10               	movwf	??_setMotorPWM^0,c
  7926   003632  5010               	movf	??_setMotorPWM^0,w,c
  7927   003634  6E01               	movwf	___wmul@multiplier^0,c
  7928   003636  6A02               	clrf	(___wmul@multiplier+1)^0,c
  7929   003638  EE20 F003          	lfsr	2,3
  7930   00363C  500E               	movf	setMotorPWM@m^0,w,c
  7931   00363E  26D9               	addwf	fsr2l,f,c
  7932   003640  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7933   003642  22DA               	addwfc	fsr2h,f,c
  7934   003644  CFDE F003          	movff	postinc2,___wmul@multiplicand
  7935   003648  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  7936   00364C  EC6E  F025         	call	___wmul	;wreg free
  7937   003650  C001  F007         	movff	?___wmul,___lwdiv@dividend
  7938   003654  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  7939   003658  0E00               	movlw	0
  7940   00365A  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  7941   00365C  0E64               	movlw	100
  7942   00365E  6E09               	movwf	___lwdiv@divisor^0,c
  7943   003660  EC8E  F020         	call	___lwdiv	;wreg free
  7944   003664  EE20 F003          	lfsr	2,3
  7945   003668  500E               	movf	setMotorPWM@m^0,w,c
  7946   00366A  26D9               	addwf	fsr2l,f,c
  7947   00366C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7948   00366E  22DA               	addwfc	fsr2h,f,c
  7949   003670  50DF               	movf	indf2,w,c
  7950   003672  6E11               	movwf	(??_setMotorPWM+1)^0,c
  7951   003674  5007               	movf	?___lwdiv^0,w,c
  7952   003676  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  7953   003678  6E12               	movwf	setMotorPWM@posDuty^0,c
  7954   00367A                     
  7955                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
  7956   00367A  EE20 F003          	lfsr	2,3
  7957   00367E  500E               	movf	setMotorPWM@m^0,w,c
  7958   003680  26D9               	addwf	fsr2l,f,c
  7959   003682  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7960   003684  22DA               	addwfc	fsr2h,f,c
  7961   003686  50DF               	movf	indf2,w,c
  7962   003688  6E13               	movwf	setMotorPWM@negDuty^0,c
  7963                           
  7964                           ;dc_motor.c: 74:     }
  7965   00368A  EF6A  F01B         	goto	l3188
  7966   00368E                     l3184:
  7967                           
  7968                           ;dc_motor.c: 76:         posDuty=0;
  7969   00368E  0E00               	movlw	0
  7970   003690  6E12               	movwf	setMotorPWM@posDuty^0,c
  7971   003692                     
  7972                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7973   003692  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  7974   003696  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7975   00369A  50DF               	movf	indf2,w,c
  7976   00369C  6E10               	movwf	??_setMotorPWM^0,c
  7977   00369E  5010               	movf	??_setMotorPWM^0,w,c
  7978   0036A0  6E01               	movwf	___wmul@multiplier^0,c
  7979   0036A2  6A02               	clrf	(___wmul@multiplier+1)^0,c
  7980   0036A4  EE20 F003          	lfsr	2,3
  7981   0036A8  500E               	movf	setMotorPWM@m^0,w,c
  7982   0036AA  26D9               	addwf	fsr2l,f,c
  7983   0036AC  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7984   0036AE  22DA               	addwfc	fsr2h,f,c
  7985   0036B0  CFDE F003          	movff	postinc2,___wmul@multiplicand
  7986   0036B4  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  7987   0036B8  EC6E  F025         	call	___wmul	;wreg free
  7988   0036BC  C001  F007         	movff	?___wmul,___lwdiv@dividend
  7989   0036C0  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  7990   0036C4  0E00               	movlw	0
  7991   0036C6  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  7992   0036C8  0E64               	movlw	100
  7993   0036CA  6E09               	movwf	___lwdiv@divisor^0,c
  7994   0036CC  EC8E  F020         	call	___lwdiv	;wreg free
  7995   0036D0  5007               	movf	?___lwdiv^0,w,c
  7996   0036D2  6E13               	movwf	setMotorPWM@negDuty^0,c
  7997   0036D4                     l3188:
  7998                           
  7999                           ;dc_motor.c: 80:     if (m->direction) {
  8000   0036D4  EE20 F001          	lfsr	2,1
  8001   0036D8  500E               	movf	setMotorPWM@m^0,w,c
  8002   0036DA  26D9               	addwf	fsr2l,f,c
  8003   0036DC  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8004   0036DE  22DA               	addwfc	fsr2h,f,c
  8005   0036E0  50DF               	movf	indf2,w,c
  8006   0036E2  B4D8               	btfsc	status,2,c
  8007   0036E4  EF76  F01B         	goto	u2391
  8008   0036E8  EF78  F01B         	goto	u2390
  8009   0036EC                     u2391:
  8010   0036EC  EF9A  F01B         	goto	l3192
  8011   0036F0                     u2390:
  8012   0036F0                     
  8013                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=negDuty;
  8014   0036F0  EE20 F005          	lfsr	2,5
  8015   0036F4  500E               	movf	setMotorPWM@m^0,w,c
  8016   0036F6  26D9               	addwf	fsr2l,f,c
  8017   0036F8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8018   0036FA  22DA               	addwfc	fsr2h,f,c
  8019   0036FC  CFDE F010          	movff	postinc2,??_setMotorPWM
  8020   003700  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8021   003704  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8022   003708  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8023   00370C  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8024                           
  8025                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=posDuty;
  8026   003710  EE20 F007          	lfsr	2,7
  8027   003714  500E               	movf	setMotorPWM@m^0,w,c
  8028   003716  26D9               	addwf	fsr2l,f,c
  8029   003718  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8030   00371A  22DA               	addwfc	fsr2h,f,c
  8031   00371C  CFDE F010          	movff	postinc2,??_setMotorPWM
  8032   003720  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8033   003724  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8034   003728  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8035   00372C  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8036                           
  8037                           ;dc_motor.c: 85:     } else {
  8038   003730  EFBA  F01B         	goto	l487
  8039   003734                     l3192:
  8040                           
  8041                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=posDuty;
  8042   003734  EE20 F005          	lfsr	2,5
  8043   003738  500E               	movf	setMotorPWM@m^0,w,c
  8044   00373A  26D9               	addwf	fsr2l,f,c
  8045   00373C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8046   00373E  22DA               	addwfc	fsr2h,f,c
  8047   003740  CFDE F010          	movff	postinc2,??_setMotorPWM
  8048   003744  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8049   003748  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8050   00374C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8051   003750  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8052                           
  8053                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=negDuty;
  8054   003754  EE20 F007          	lfsr	2,7
  8055   003758  500E               	movf	setMotorPWM@m^0,w,c
  8056   00375A  26D9               	addwf	fsr2l,f,c
  8057   00375C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8058   00375E  22DA               	addwfc	fsr2h,f,c
  8059   003760  CFDE F010          	movff	postinc2,??_setMotorPWM
  8060   003764  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8061   003768  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8062   00376C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8063   003770  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8064   003774                     l487:
  8065   003774  0012               	return		;funcret
  8066   003776                     __end_of_setMotorPWM:
  8067                           	callstack 0
  8068                           
  8069 ;; *************** function ___wmul *****************
  8070 ;; Defined at:
  8071 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;  multiplier      2    0[COMRAM] unsigned int 
  8074 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;  product         2    4[COMRAM] unsigned int 
  8077 ;; Return value:  Size  Location     Type
  8078 ;;                  2    0[COMRAM] unsigned int 
  8079 ;; Registers used:
  8080 ;;		wreg, status,2, status,0, prodl, prodh
  8081 ;; Tracked objects:
  8082 ;;		On entry : 0/0
  8083 ;;		On exit  : 0/0
  8084 ;;		Unchanged: 0/0
  8085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8086 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8087 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8089 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8090 ;;Total ram usage:        6 bytes
  8091 ;; Hardware stack levels used: 1
  8092 ;; Hardware stack levels required when called: 1
  8093 ;; This function calls:
  8094 ;;		Nothing
  8095 ;; This function is called by:
  8096 ;;		_setMotorPWM
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           	psect	text55
  8101   004ADC                     __ptext55:
  8102                           	callstack 0
  8103   004ADC                     ___wmul:
  8104                           	callstack 27
  8105   004ADC  5001               	movf	___wmul@multiplier^0,w,c
  8106   004ADE  0203               	mulwf	___wmul@multiplicand^0,c
  8107   004AE0  CFF3 F005          	movff	prodl,___wmul@product
  8108   004AE4  CFF4 F006          	movff	prodh,___wmul@product+1
  8109   004AE8  5001               	movf	___wmul@multiplier^0,w,c
  8110   004AEA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8111   004AEC  50F3               	movf	243,w,c
  8112   004AEE  2606               	addwf	(___wmul@product+1)^0,f,c
  8113   004AF0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8114   004AF2  0203               	mulwf	___wmul@multiplicand^0,c
  8115   004AF4  50F3               	movf	243,w,c
  8116   004AF6  2606               	addwf	(___wmul@product+1)^0,f,c
  8117   004AF8  C005  F001         	movff	___wmul@product,?___wmul
  8118   004AFC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8119   004B00  0012               	return		;funcret
  8120   004B02                     __end_of___wmul:
  8121                           	callstack 0
  8122                           
  8123 ;; *************** function ___lwdiv *****************
  8124 ;; Defined at:
  8125 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8126 ;; Parameters:    Size  Location     Type
  8127 ;;  dividend        2    6[COMRAM] unsigned int 
  8128 ;;  divisor         2    8[COMRAM] unsigned int 
  8129 ;; Auto vars:     Size  Location     Type
  8130 ;;  quotient        2   10[COMRAM] unsigned int 
  8131 ;;  counter         1   12[COMRAM] unsigned char 
  8132 ;; Return value:  Size  Location     Type
  8133 ;;                  2    6[COMRAM] unsigned int 
  8134 ;; Registers used:
  8135 ;;		wreg, status,2, status,0
  8136 ;; Tracked objects:
  8137 ;;		On entry : 0/0
  8138 ;;		On exit  : 0/0
  8139 ;;		Unchanged: 0/0
  8140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8142 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8144 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8145 ;;Total ram usage:        7 bytes
  8146 ;; Hardware stack levels used: 1
  8147 ;; Hardware stack levels required when called: 1
  8148 ;; This function calls:
  8149 ;;		Nothing
  8150 ;; This function is called by:
  8151 ;;		_setMotorPWM
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           
  8155                           	psect	text56
  8156   00411C                     __ptext56:
  8157                           	callstack 0
  8158   00411C                     ___lwdiv:
  8159                           	callstack 27
  8160   00411C  0E00               	movlw	0
  8161   00411E  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  8162   004120  0E00               	movlw	0
  8163   004122  6E0B               	movwf	___lwdiv@quotient^0,c
  8164   004124  5009               	movf	___lwdiv@divisor^0,w,c
  8165   004126  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8166   004128  B4D8               	btfsc	status,2,c
  8167   00412A  EF99  F020         	goto	u2341
  8168   00412E  EF9B  F020         	goto	u2340
  8169   004132                     u2341:
  8170   004132  EFC3  F020         	goto	l1153
  8171   004136                     u2340:
  8172   004136  0E01               	movlw	1
  8173   004138  6E0D               	movwf	___lwdiv@counter^0,c
  8174   00413A  EFA3  F020         	goto	l3156
  8175   00413E                     l3154:
  8176   00413E  90D8               	bcf	status,0,c
  8177   004140  3609               	rlcf	___lwdiv@divisor^0,f,c
  8178   004142  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8179   004144  2A0D               	incf	___lwdiv@counter^0,f,c
  8180   004146                     l3156:
  8181   004146  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8182   004148  EFA8  F020         	goto	u2351
  8183   00414C  EFAA  F020         	goto	u2350
  8184   004150                     u2351:
  8185   004150  EF9F  F020         	goto	l3154
  8186   004154                     u2350:
  8187   004154                     l3158:
  8188   004154  90D8               	bcf	status,0,c
  8189   004156  360B               	rlcf	___lwdiv@quotient^0,f,c
  8190   004158  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8191   00415A  5009               	movf	___lwdiv@divisor^0,w,c
  8192   00415C  5C07               	subwf	___lwdiv@dividend^0,w,c
  8193   00415E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8194   004160  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8195   004162  A0D8               	btfss	status,0,c
  8196   004164  EFB6  F020         	goto	u2361
  8197   004168  EFB8  F020         	goto	u2360
  8198   00416C                     u2361:
  8199   00416C  EFBD  F020         	goto	l3166
  8200   004170                     u2360:
  8201   004170  5009               	movf	___lwdiv@divisor^0,w,c
  8202   004172  5E07               	subwf	___lwdiv@dividend^0,f,c
  8203   004174  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8204   004176  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8205   004178  800B               	bsf	___lwdiv@quotient^0,0,c
  8206   00417A                     l3166:
  8207   00417A  90D8               	bcf	status,0,c
  8208   00417C  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8209   00417E  3209               	rrcf	___lwdiv@divisor^0,f,c
  8210   004180  2E0D               	decfsz	___lwdiv@counter^0,f,c
  8211   004182  EFAA  F020         	goto	l3158
  8212   004186                     l1153:
  8213   004186  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8214   00418A  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8215   00418E  0012               	return		;funcret
  8216   004190                     __end_of___lwdiv:
  8217                           	callstack 0
  8218                           
  8219 ;; *************** function _Interrupts_init *****************
  8220 ;; Defined at:
  8221 ;;		line 12 in file "interrupts.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;		None
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;		None
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  1    wreg      void 
  8228 ;; Registers used:
  8229 ;;		None
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8239 ;;Total ram usage:        0 bytes
  8240 ;; Hardware stack levels used: 1
  8241 ;; Hardware stack levels required when called: 1
  8242 ;; This function calls:
  8243 ;;		Nothing
  8244 ;; This function is called by:
  8245 ;;		_main
  8246 ;; This function uses a non-reentrant model
  8247 ;;
  8248                           
  8249                           	psect	text57
  8250   004BAA                     __ptext57:
  8251                           	callstack 0
  8252   004BAA                     _Interrupts_init:
  8253                           	callstack 29
  8254   004BAA  0012               	return		;funcret
  8255   004BAC                     __end_of_Interrupts_init:
  8256                           	callstack 0
  8257                           
  8258 ;; *************** function _Colour_decider *****************
  8259 ;; Defined at:
  8260 ;;		line 125 in file "color.c"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;  vals            2   74[COMRAM] PTR struct RGB
  8263 ;;		 -> vals(8), 
  8264 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8265 ;;		 -> rel(12), 
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;  RGB_col        12    6[BANK0 ] float [3]
  8268 ;;  Hue             4   28[BANK0 ] float 
  8269 ;;  Cmin            4   22[BANK0 ] float 
  8270 ;;  Cmax            4   18[BANK0 ] float 
  8271 ;;  i               2   26[BANK0 ] int 
  8272 ;;  Cmax_i          2    4[BANK0 ] int 
  8273 ;; Return value:  Size  Location     Type
  8274 ;;                  2   74[COMRAM] int 
  8275 ;; Registers used:
  8276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8277 ;; Tracked objects:
  8278 ;;		On entry : 0/0
  8279 ;;		On exit  : 0/0
  8280 ;;		Unchanged: 0/0
  8281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8282 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8283 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8284 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8285 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8286 ;;Total ram usage:       38 bytes
  8287 ;; Hardware stack levels used: 1
  8288 ;; Hardware stack levels required when called: 3
  8289 ;; This function calls:
  8290 ;;		___fladd
  8291 ;;		___fldiv
  8292 ;;		___fleq
  8293 ;;		___flge
  8294 ;;		___flmul
  8295 ;;		___flsub
  8296 ;;		___xxtofl
  8297 ;; This function is called by:
  8298 ;;		_main
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           	psect	text58
  8303   000E26                     __ptext58:
  8304                           	callstack 0
  8305   000E26                     _Colour_decider:
  8306                           	callstack 27
  8307   000E26                     
  8308                           ;color.c: 126:     float Cmax = 0;
  8309   000E26  0E00               	movlw	0
  8310   000E28  0100               	movlb	0	; () banked
  8311   000E2A  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  8312   000E2C  0E00               	movlw	0
  8313   000E2E  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  8314   000E30  0E00               	movlw	0
  8315   000E32  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  8316   000E34  0E00               	movlw	0
  8317   000E36  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  8318                           
  8319                           ;color.c: 127:     float Cmin= 100000;
  8320   000E38  0E00               	movlw	0
  8321   000E3A  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  8322   000E3C  0E50               	movlw	80
  8323   000E3E  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  8324   000E40  0EC3               	movlw	195
  8325   000E42  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  8326   000E44  0E47               	movlw	71
  8327   000E46  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  8328                           
  8329                           ;color.c: 128:     int Cmax_i =4;
  8330   000E48  0E00               	movlw	0
  8331   000E4A  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  8332   000E4C  0E04               	movlw	4
  8333   000E4E  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  8334   000E50                     
  8335                           ; BSR set to: 0
  8336                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  8337   000E50  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  8338   000E54  0E0B               	movlw	11
  8339   000E56                     u3841:
  8340   000E56  6ADE               	clrf	postinc2,c
  8341   000E58  06E8               	decf	wreg,f,c
  8342   000E5A  E2FD               	bc	u3841
  8343   000E5C                     
  8344                           ; BSR set to: 0
  8345   000E5C  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  8346   000E60  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  8347   000E64  CFDE F001          	movff	postinc2,___xxtofl@val
  8348   000E68  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8349   000E6C  0E00               	movlw	0
  8350   000E6E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8351   000E70  0EFF               	movlw	-1
  8352   000E72  6E03               	movwf	(___xxtofl@val+2)^0,c
  8353   000E74  6E04               	movwf	(___xxtofl@val+3)^0,c
  8354   000E76  0E01               	movlw	1
  8355   000E78  EC67  F019         	call	___xxtofl
  8356   000E7C  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  8357   000E80  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  8358   000E84  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  8359   000E88  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  8360   000E8C  EE20 F002          	lfsr	2,2
  8361   000E90  504B               	movf	Colour_decider@vals^0,w,c
  8362   000E92  26D9               	addwf	fsr2l,f,c
  8363   000E94  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8364   000E96  22DA               	addwfc	fsr2h,f,c
  8365   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
  8366   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8367   000EA0  0E00               	movlw	0
  8368   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8369   000EA4  0EFF               	movlw	-1
  8370   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
  8371   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
  8372   000EAA  0E01               	movlw	1
  8373   000EAC  EC67  F019         	call	___xxtofl
  8374   000EB0  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  8375   000EB4  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  8376   000EB8  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  8377   000EBC  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  8378   000EC0  EE20 F004          	lfsr	2,4
  8379   000EC4  504B               	movf	Colour_decider@vals^0,w,c
  8380   000EC6  26D9               	addwf	fsr2l,f,c
  8381   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8382   000ECA  22DA               	addwfc	fsr2h,f,c
  8383   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
  8384   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8385   000ED4  0E00               	movlw	0
  8386   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8387   000ED8  0EFF               	movlw	-1
  8388   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
  8389   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
  8390   000EDE  0E01               	movlw	1
  8391   000EE0  EC67  F019         	call	___xxtofl
  8392   000EE4  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  8393   000EE8  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  8394   000EEC  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  8395   000EF0  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  8396   000EF4                     
  8397                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  8398   000EF4  0E00               	movlw	0
  8399   000EF6  0100               	movlb	0	; () banked
  8400   000EF8  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  8401   000EFA  0E00               	movlw	0
  8402   000EFC  6F7A               	movwf	Colour_decider@i& (0+255),b
  8403   000EFE                     l4204:
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  8407   000EFE  C072  F001         	movff	Colour_decider@Cmax,___flge@ff1
  8408   000F02  C073  F002         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  8409   000F06  C074  F003         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  8410   000F0A  C075  F004         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  8411   000F0E  0E66               	movlw	low Colour_decider@RGB_col
  8412   000F10  6E4F               	movwf	??_Colour_decider^0,c
  8413   000F12  0E00               	movlw	high Colour_decider@RGB_col
  8414   000F14  6E50               	movwf	(??_Colour_decider+1)^0,c
  8415   000F16  90D8               	bcf	status,0,c
  8416   000F18  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8417   000F1A  6ED9               	movwf	fsr2l,c
  8418   000F1C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8419   000F1E  6EDA               	movwf	fsr2h,c
  8420   000F20  90D8               	bcf	status,0,c
  8421   000F22  36D9               	rlcf	fsr2l,f,c
  8422   000F24  36DA               	rlcf	fsr2h,f,c
  8423   000F26  504F               	movf	??_Colour_decider^0,w,c
  8424   000F28  26D9               	addwf	fsr2l,f,c
  8425   000F2A  5050               	movf	(??_Colour_decider+1)^0,w,c
  8426   000F2C  22DA               	addwfc	fsr2h,f,c
  8427   000F2E  CFDE F005          	movff	postinc2,___flge@ff2
  8428   000F32  CFDE F006          	movff	postinc2,___flge@ff2+1
  8429   000F36  CFDE F007          	movff	postinc2,___flge@ff2+2
  8430   000F3A  CFDE F008          	movff	postinc2,___flge@ff2+3
  8431   000F3E  EC15  F01D         	call	___flge	;wreg free
  8432   000F42  B0D8               	btfsc	status,0,c
  8433   000F44  EFA6  F007         	goto	u3851
  8434   000F48  EFA8  F007         	goto	u3850
  8435   000F4C                     u3851:
  8436   000F4C  EFC5  F007         	goto	l4210
  8437   000F50                     u3850:
  8438   000F50                     
  8439                           ;color.c: 137:             Cmax=RGB_col[i];
  8440   000F50  0E66               	movlw	low Colour_decider@RGB_col
  8441   000F52  6E4F               	movwf	??_Colour_decider^0,c
  8442   000F54  0E00               	movlw	high Colour_decider@RGB_col
  8443   000F56  6E50               	movwf	(??_Colour_decider+1)^0,c
  8444   000F58  90D8               	bcf	status,0,c
  8445   000F5A  0100               	movlb	0	; () banked
  8446   000F5C  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8447   000F5E  6ED9               	movwf	fsr2l,c
  8448   000F60  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8449   000F62  6EDA               	movwf	fsr2h,c
  8450   000F64  90D8               	bcf	status,0,c
  8451   000F66  36D9               	rlcf	fsr2l,f,c
  8452   000F68  36DA               	rlcf	fsr2h,f,c
  8453   000F6A  504F               	movf	??_Colour_decider^0,w,c
  8454   000F6C  26D9               	addwf	fsr2l,f,c
  8455   000F6E  5050               	movf	(??_Colour_decider+1)^0,w,c
  8456   000F70  22DA               	addwfc	fsr2h,f,c
  8457   000F72  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  8458   000F76  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  8459   000F7A  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  8460   000F7E  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  8461   000F82                     
  8462                           ; BSR set to: 0
  8463                           ;color.c: 138:             Cmax_i=i;
  8464   000F82  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  8465   000F86  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  8466   000F8A                     l4210:
  8467                           
  8468                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  8469   000F8A  0E66               	movlw	low Colour_decider@RGB_col
  8470   000F8C  6E4F               	movwf	??_Colour_decider^0,c
  8471   000F8E  0E00               	movlw	high Colour_decider@RGB_col
  8472   000F90  6E50               	movwf	(??_Colour_decider+1)^0,c
  8473   000F92  90D8               	bcf	status,0,c
  8474   000F94  0100               	movlb	0	; () banked
  8475   000F96  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8476   000F98  6ED9               	movwf	fsr2l,c
  8477   000F9A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8478   000F9C  6EDA               	movwf	fsr2h,c
  8479   000F9E  90D8               	bcf	status,0,c
  8480   000FA0  36D9               	rlcf	fsr2l,f,c
  8481   000FA2  36DA               	rlcf	fsr2h,f,c
  8482   000FA4  504F               	movf	??_Colour_decider^0,w,c
  8483   000FA6  26D9               	addwf	fsr2l,f,c
  8484   000FA8  5050               	movf	(??_Colour_decider+1)^0,w,c
  8485   000FAA  22DA               	addwfc	fsr2h,f,c
  8486   000FAC  CFDE F001          	movff	postinc2,___flge@ff1
  8487   000FB0  CFDE F002          	movff	postinc2,___flge@ff1+1
  8488   000FB4  CFDE F003          	movff	postinc2,___flge@ff1+2
  8489   000FB8  CFDE F004          	movff	postinc2,___flge@ff1+3
  8490   000FBC  C076  F005         	movff	Colour_decider@Cmin,___flge@ff2
  8491   000FC0  C077  F006         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  8492   000FC4  C078  F007         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  8493   000FC8  C079  F008         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  8494   000FCC  EC15  F01D         	call	___flge	;wreg free
  8495   000FD0  B0D8               	btfsc	status,0,c
  8496   000FD2  EFED  F007         	goto	u3861
  8497   000FD6  EFEF  F007         	goto	u3860
  8498   000FDA                     u3861:
  8499   000FDA  EF08  F008         	goto	l4214
  8500   000FDE                     u3860:
  8501   000FDE  0E66               	movlw	low Colour_decider@RGB_col
  8502   000FE0  6E4F               	movwf	??_Colour_decider^0,c
  8503   000FE2  0E00               	movlw	high Colour_decider@RGB_col
  8504   000FE4  6E50               	movwf	(??_Colour_decider+1)^0,c
  8505   000FE6  90D8               	bcf	status,0,c
  8506   000FE8  0100               	movlb	0	; () banked
  8507   000FEA  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8508   000FEC  6ED9               	movwf	fsr2l,c
  8509   000FEE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8510   000FF0  6EDA               	movwf	fsr2h,c
  8511   000FF2  90D8               	bcf	status,0,c
  8512   000FF4  36D9               	rlcf	fsr2l,f,c
  8513   000FF6  36DA               	rlcf	fsr2h,f,c
  8514   000FF8  504F               	movf	??_Colour_decider^0,w,c
  8515   000FFA  26D9               	addwf	fsr2l,f,c
  8516   000FFC  5050               	movf	(??_Colour_decider+1)^0,w,c
  8517   000FFE  22DA               	addwfc	fsr2h,f,c
  8518   001000  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  8519   001004  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  8520   001008  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  8521   00100C  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  8522   001010                     l4214:
  8523                           
  8524                           ;color.c: 141:     }
  8525   001010  0100               	movlb	0	; () banked
  8526   001012  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  8527   001014  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  8528   001016                     
  8529                           ; BSR set to: 0
  8530   001016  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  8531   001018  EF17  F008         	goto	u3871
  8532   00101C  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  8533   00101E  E109               	bnz	u3870
  8534   001020  0E03               	movlw	3
  8535   001022  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  8536   001024  A0D8               	btfss	status,0,c
  8537   001026  EF17  F008         	goto	u3871
  8538   00102A  EF19  F008         	goto	u3870
  8539   00102E                     u3871:
  8540   00102E  EF7F  F007         	goto	l4204
  8541   001032                     u3870:
  8542   001032                     
  8543                           ; BSR set to: 0
  8544                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  8545   001032  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8546   001036  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8547   00103A  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8548   00103E  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8549   001042  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8550   001046  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8551   00104A  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8552   00104E  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8553   001052  EC2B  F024         	call	___flsub	;wreg free
  8554   001056  C011  F019         	movff	?___flsub,___fleq@ff1
  8555   00105A  C012  F01A         	movff	?___flsub+1,___fleq@ff1+1
  8556   00105E  C013  F01B         	movff	?___flsub+2,___fleq@ff1+2
  8557   001062  C014  F01C         	movff	?___flsub+3,___fleq@ff1+3
  8558   001066  0E00               	movlw	0
  8559   001068  6E1D               	movwf	___fleq@ff2^0,c
  8560   00106A  0E00               	movlw	0
  8561   00106C  6E1E               	movwf	(___fleq@ff2+1)^0,c
  8562   00106E  0E00               	movlw	0
  8563   001070  6E1F               	movwf	(___fleq@ff2+2)^0,c
  8564   001072  0E00               	movlw	0
  8565   001074  6E20               	movwf	(___fleq@ff2+3)^0,c
  8566   001076  ECFC  F01D         	call	___fleq	;wreg free
  8567   00107A  A0D8               	btfss	status,0,c
  8568   00107C  EF42  F008         	goto	u3881
  8569   001080  EF44  F008         	goto	u3880
  8570   001084                     u3881:
  8571   001084  EF4A  F008         	goto	l4224
  8572   001088                     u3880:
  8573   001088                     l4220:
  8574   001088  0E00               	movlw	0
  8575   00108A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8576   00108C  0E00               	movlw	0
  8577   00108E  6E4B               	movwf	?_Colour_decider^0,c
  8578   001090  EF80  F00C         	goto	l74
  8579   001094                     l4224:
  8580                           
  8581                           ;color.c: 146:     if (Cmax_i==0){
  8582   001094  0100               	movlb	0	; () banked
  8583   001096  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  8584   001098  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  8585   00109A  A4D8               	btfss	status,2,c
  8586   00109C  EF52  F008         	goto	u3891
  8587   0010A0  EF54  F008         	goto	u3890
  8588   0010A4                     u3891:
  8589   0010A4  EFC8  F008         	goto	l4232
  8590   0010A8                     u3890:
  8591   0010A8                     
  8592                           ; BSR set to: 0
  8593                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  8594   0010A8  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8595   0010AC  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8596   0010B0  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8597   0010B4  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8598   0010B8  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8599   0010BC  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8600   0010C0  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8601   0010C4  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8602   0010C8  EC2B  F024         	call	___flsub	;wreg free
  8603   0010CC  C011  F01D         	movff	?___flsub,___fldiv@a
  8604   0010D0  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  8605   0010D4  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  8606   0010D8  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  8607   0010DC  C06E  F015         	movff	Colour_decider@RGB_col+8,___flsub@a
  8608   0010E0  C06F  F016         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  8609   0010E4  C070  F017         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  8610   0010E8  C071  F018         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  8611   0010EC  C06A  F011         	movff	Colour_decider@RGB_col+4,___flsub@b
  8612   0010F0  C06B  F012         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  8613   0010F4  C06C  F013         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  8614   0010F8  C06D  F014         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  8615   0010FC  EC2B  F024         	call	___flsub	;wreg free
  8616   001100  C011  F019         	movff	?___flsub,___fldiv@b
  8617   001104  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  8618   001108  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  8619   00110C  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  8620   001110  ECAD  F013         	call	___fldiv	;wreg free
  8621   001114  C019  F032         	movff	?___fldiv,___flmul@b
  8622   001118  C01A  F033         	movff	?___fldiv+1,___flmul@b+1
  8623   00111C  C01B  F034         	movff	?___fldiv+2,___flmul@b+2
  8624   001120  C01C  F035         	movff	?___fldiv+3,___flmul@b+3
  8625   001124  0E00               	movlw	0
  8626   001126  6E36               	movwf	___flmul@a^0,c
  8627   001128  0E00               	movlw	0
  8628   00112A  6E37               	movwf	(___flmul@a+1)^0,c
  8629   00112C  0E70               	movlw	112
  8630   00112E  6E38               	movwf	(___flmul@a+2)^0,c
  8631   001130  0E42               	movlw	66
  8632   001132  6E39               	movwf	(___flmul@a+3)^0,c
  8633   001134  EC98  F011         	call	___flmul	;wreg free
  8634   001138  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  8635   00113C  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8636   001140  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8637   001144  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8638   001148                     
  8639                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  8640   001148  0100               	movlb	0	; () banked
  8641   00114A  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  8642   00114C  EFAC  F008         	goto	u3900
  8643   001150  EFAA  F008         	goto	u3901
  8644   001154                     u3901:
  8645   001154  EFA7  F009         	goto	l4242
  8646   001158                     u3900:
  8647   001158                     
  8648                           ; BSR set to: 0
  8649   001158  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  8650   00115C  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  8651   001160  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  8652   001164  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  8653   001168  0E00               	movlw	0
  8654   00116A  6E05               	movwf	___fladd@a^0,c
  8655   00116C  0E00               	movlw	0
  8656   00116E  6E06               	movwf	(___fladd@a+1)^0,c
  8657   001170  0EB4               	movlw	180
  8658   001172  6E07               	movwf	(___fladd@a+2)^0,c
  8659   001174  0E43               	movlw	67
  8660   001176  6E08               	movwf	(___fladd@a+3)^0,c
  8661   001178  EC38  F00F         	call	___fladd	;wreg free
  8662   00117C  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  8663   001180  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  8664   001184  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  8665   001188  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  8666   00118C  EFA7  F009         	goto	l4242
  8667   001190                     l4232:
  8668                           
  8669                           ; BSR set to: 0
  8670   001190  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  8671   001192  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  8672   001194  A4D8               	btfss	status,2,c
  8673   001196  EFCF  F008         	goto	u3911
  8674   00119A  EFD1  F008         	goto	u3910
  8675   00119E                     u3911:
  8676   00119E  EF3D  F009         	goto	l4238
  8677   0011A2                     u3910:
  8678   0011A2                     
  8679                           ; BSR set to: 0
  8680                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  8681   0011A2  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8682   0011A6  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8683   0011AA  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8684   0011AE  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8685   0011B2  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8686   0011B6  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8687   0011BA  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8688   0011BE  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8689   0011C2  EC2B  F024         	call	___flsub	;wreg free
  8690   0011C6  C011  F01D         	movff	?___flsub,___fldiv@a
  8691   0011CA  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  8692   0011CE  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  8693   0011D2  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  8694   0011D6  C066  F015         	movff	Colour_decider@RGB_col,___flsub@a
  8695   0011DA  C067  F016         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  8696   0011DE  C068  F017         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  8697   0011E2  C069  F018         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  8698   0011E6  C06E  F011         	movff	Colour_decider@RGB_col+8,___flsub@b
  8699   0011EA  C06F  F012         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  8700   0011EE  C070  F013         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  8701   0011F2  C071  F014         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  8702   0011F6  EC2B  F024         	call	___flsub	;wreg free
  8703   0011FA  C011  F019         	movff	?___flsub,___fldiv@b
  8704   0011FE  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  8705   001202  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  8706   001206  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  8707   00120A  ECAD  F013         	call	___fldiv	;wreg free
  8708   00120E  C019  F060         	movff	?___fldiv,_Colour_decider$2807
  8709   001212  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2807+1
  8710   001216  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2807+2
  8711   00121A  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2807+3
  8712   00121E                     
  8713                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  8714   00121E  0E00               	movlw	0
  8715   001220  6E05               	movwf	___fladd@a^0,c
  8716   001222  0E00               	movlw	0
  8717   001224  6E06               	movwf	(___fladd@a+1)^0,c
  8718   001226  0E00               	movlw	0
  8719   001228  6E07               	movwf	(___fladd@a+2)^0,c
  8720   00122A  0E40               	movlw	64
  8721   00122C  6E08               	movwf	(___fladd@a+3)^0,c
  8722   00122E  C060  F001         	movff	_Colour_decider$2807,___fladd@b
  8723   001232  C061  F002         	movff	_Colour_decider$2807+1,___fladd@b+1
  8724   001236  C062  F003         	movff	_Colour_decider$2807+2,___fladd@b+2
  8725   00123A  C063  F004         	movff	_Colour_decider$2807+3,___fladd@b+3
  8726   00123E  EC38  F00F         	call	___fladd	;wreg free
  8727   001242  C001  F032         	movff	?___fladd,___flmul@b
  8728   001246  C002  F033         	movff	?___fladd+1,___flmul@b+1
  8729   00124A  C003  F034         	movff	?___fladd+2,___flmul@b+2
  8730   00124E  C004  F035         	movff	?___fladd+3,___flmul@b+3
  8731   001252  0E00               	movlw	0
  8732   001254  6E36               	movwf	___flmul@a^0,c
  8733   001256  0E00               	movlw	0
  8734   001258  6E37               	movwf	(___flmul@a+1)^0,c
  8735   00125A  0E70               	movlw	112
  8736   00125C  6E38               	movwf	(___flmul@a+2)^0,c
  8737   00125E  0E42               	movlw	66
  8738   001260  6E39               	movwf	(___flmul@a+3)^0,c
  8739   001262  EC98  F011         	call	___flmul	;wreg free
  8740   001266  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  8741   00126A  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8742   00126E  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8743   001272  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8744                           
  8745                           ;color.c: 155:     }
  8746   001276  EFA7  F009         	goto	l4242
  8747   00127A                     l4238:
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  8751   00127A  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8752   00127E  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8753   001282  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8754   001286  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8755   00128A  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8756   00128E  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8757   001292  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8758   001296  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8759   00129A  EC2B  F024         	call	___flsub	;wreg free
  8760   00129E  C011  F01D         	movff	?___flsub,___fldiv@a
  8761   0012A2  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  8762   0012A6  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  8763   0012AA  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  8764   0012AE  C06A  F015         	movff	Colour_decider@RGB_col+4,___flsub@a
  8765   0012B2  C06B  F016         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  8766   0012B6  C06C  F017         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  8767   0012BA  C06D  F018         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  8768   0012BE  C066  F011         	movff	Colour_decider@RGB_col,___flsub@b
  8769   0012C2  C067  F012         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  8770   0012C6  C068  F013         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  8771   0012CA  C069  F014         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  8772   0012CE  EC2B  F024         	call	___flsub	;wreg free
  8773   0012D2  C011  F019         	movff	?___flsub,___fldiv@b
  8774   0012D6  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  8775   0012DA  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  8776   0012DE  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  8777   0012E2  ECAD  F013         	call	___fldiv	;wreg free
  8778   0012E6  C019  F060         	movff	?___fldiv,_Colour_decider$2807
  8779   0012EA  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2807+1
  8780   0012EE  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2807+2
  8781   0012F2  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2807+3
  8782   0012F6                     
  8783                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  8784   0012F6  0E00               	movlw	0
  8785   0012F8  6E05               	movwf	___fladd@a^0,c
  8786   0012FA  0E00               	movlw	0
  8787   0012FC  6E06               	movwf	(___fladd@a+1)^0,c
  8788   0012FE  0E80               	movlw	128
  8789   001300  6E07               	movwf	(___fladd@a+2)^0,c
  8790   001302  0E40               	movlw	64
  8791   001304  6E08               	movwf	(___fladd@a+3)^0,c
  8792   001306  C060  F001         	movff	_Colour_decider$2807,___fladd@b
  8793   00130A  C061  F002         	movff	_Colour_decider$2807+1,___fladd@b+1
  8794   00130E  C062  F003         	movff	_Colour_decider$2807+2,___fladd@b+2
  8795   001312  C063  F004         	movff	_Colour_decider$2807+3,___fladd@b+3
  8796   001316  EC38  F00F         	call	___fladd	;wreg free
  8797   00131A  C001  F032         	movff	?___fladd,___flmul@b
  8798   00131E  C002  F033         	movff	?___fladd+1,___flmul@b+1
  8799   001322  C003  F034         	movff	?___fladd+2,___flmul@b+2
  8800   001326  C004  F035         	movff	?___fladd+3,___flmul@b+3
  8801   00132A  0E00               	movlw	0
  8802   00132C  6E36               	movwf	___flmul@a^0,c
  8803   00132E  0E00               	movlw	0
  8804   001330  6E37               	movwf	(___flmul@a+1)^0,c
  8805   001332  0E70               	movlw	112
  8806   001334  6E38               	movwf	(___flmul@a+2)^0,c
  8807   001336  0E42               	movlw	66
  8808   001338  6E39               	movwf	(___flmul@a+3)^0,c
  8809   00133A  EC98  F011         	call	___flmul	;wreg free
  8810   00133E  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  8811   001342  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8812   001346  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8813   00134A  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8814   00134E                     l4242:
  8815                           
  8816                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  8817   00134E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  8818   001352  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  8819   001356  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  8820   00135A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  8821   00135E  0E00               	movlw	0
  8822   001360  6E05               	movwf	___flge@ff2^0,c
  8823   001362  0E00               	movlw	0
  8824   001364  6E06               	movwf	(___flge@ff2+1)^0,c
  8825   001366  0EA5               	movlw	165
  8826   001368  6E07               	movwf	(___flge@ff2+2)^0,c
  8827   00136A  0E43               	movlw	67
  8828   00136C  6E08               	movwf	(___flge@ff2+3)^0,c
  8829   00136E  EC15  F01D         	call	___flge	;wreg free
  8830   001372  A0D8               	btfss	status,0,c
  8831   001374  EFBE  F009         	goto	u3921
  8832   001378  EFC0  F009         	goto	u3920
  8833   00137C                     u3921:
  8834   00137C  EFDF  F009         	goto	l4252
  8835   001380                     u3920:
  8836   001380  0E00               	movlw	0
  8837   001382  6E01               	movwf	___flge@ff1^0,c
  8838   001384  0E00               	movlw	0
  8839   001386  6E02               	movwf	(___flge@ff1+1)^0,c
  8840   001388  0EB4               	movlw	180
  8841   00138A  6E03               	movwf	(___flge@ff1+2)^0,c
  8842   00138C  0E43               	movlw	67
  8843   00138E  6E04               	movwf	(___flge@ff1+3)^0,c
  8844   001390  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  8845   001394  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  8846   001398  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  8847   00139C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  8848   0013A0  EC15  F01D         	call	___flge	;wreg free
  8849   0013A4  A0D8               	btfss	status,0,c
  8850   0013A6  EFD7  F009         	goto	u3931
  8851   0013AA  EFD9  F009         	goto	u3930
  8852   0013AE                     u3931:
  8853   0013AE  EFDF  F009         	goto	l4252
  8854   0013B2                     u3930:
  8855   0013B2                     
  8856                           ;color.c: 164:         return 1;
  8857   0013B2  0E00               	movlw	0
  8858   0013B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8859   0013B6  0E01               	movlw	1
  8860   0013B8  6E4B               	movwf	?_Colour_decider^0,c
  8861   0013BA  EF80  F00C         	goto	l74
  8862   0013BE                     l4252:
  8863   0013BE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  8864   0013C2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  8865   0013C6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  8866   0013CA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  8867   0013CE  0E00               	movlw	0
  8868   0013D0  6E05               	movwf	___flge@ff2^0,c
  8869   0013D2  0E00               	movlw	0
  8870   0013D4  6E06               	movwf	(___flge@ff2+1)^0,c
  8871   0013D6  0EA0               	movlw	160
  8872   0013D8  6E07               	movwf	(___flge@ff2+2)^0,c
  8873   0013DA  0E40               	movlw	64
  8874   0013DC  6E08               	movwf	(___flge@ff2+3)^0,c
  8875   0013DE  EC15  F01D         	call	___flge	;wreg free
  8876   0013E2  A0D8               	btfss	status,0,c
  8877   0013E4  EFF6  F009         	goto	u3941
  8878   0013E8  EFF8  F009         	goto	u3940
  8879   0013EC                     u3941:
  8880   0013EC  EF17  F00A         	goto	l4262
  8881   0013F0                     u3940:
  8882   0013F0  0E00               	movlw	0
  8883   0013F2  6E01               	movwf	___flge@ff1^0,c
  8884   0013F4  0E00               	movlw	0
  8885   0013F6  6E02               	movwf	(___flge@ff1+1)^0,c
  8886   0013F8  0E40               	movlw	64
  8887   0013FA  6E03               	movwf	(___flge@ff1+2)^0,c
  8888   0013FC  0E41               	movlw	65
  8889   0013FE  6E04               	movwf	(___flge@ff1+3)^0,c
  8890   001400  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  8891   001404  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  8892   001408  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  8893   00140C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  8894   001410  EC15  F01D         	call	___flge	;wreg free
  8895   001414  A0D8               	btfss	status,0,c
  8896   001416  EF0F  F00A         	goto	u3951
  8897   00141A  EF11  F00A         	goto	u3950
  8898   00141E                     u3951:
  8899   00141E  EF17  F00A         	goto	l4262
  8900   001422                     u3950:
  8901   001422                     
  8902                           ;color.c: 168:         return 2;
  8903   001422  0E00               	movlw	0
  8904   001424  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8905   001426  0E02               	movlw	2
  8906   001428  6E4B               	movwf	?_Colour_decider^0,c
  8907   00142A  EF80  F00C         	goto	l74
  8908   00142E                     l4262:
  8909   00142E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  8910   001432  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  8911   001436  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  8912   00143A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  8913   00143E  0E00               	movlw	0
  8914   001440  6E05               	movwf	___flge@ff2^0,c
  8915   001442  0E00               	movlw	0
  8916   001444  6E06               	movwf	(___flge@ff2+1)^0,c
  8917   001446  0EA0               	movlw	160
  8918   001448  6E07               	movwf	(___flge@ff2+2)^0,c
  8919   00144A  0E41               	movlw	65
  8920   00144C  6E08               	movwf	(___flge@ff2+3)^0,c
  8921   00144E  EC15  F01D         	call	___flge	;wreg free
  8922   001452  A0D8               	btfss	status,0,c
  8923   001454  EF2E  F00A         	goto	u3961
  8924   001458  EF30  F00A         	goto	u3960
  8925   00145C                     u3961:
  8926   00145C  EFB0  F00A         	goto	l4288
  8927   001460                     u3960:
  8928   001460  0E00               	movlw	0
  8929   001462  6E01               	movwf	___flge@ff1^0,c
  8930   001464  0E00               	movlw	0
  8931   001466  6E02               	movwf	(___flge@ff1+1)^0,c
  8932   001468  0EE8               	movlw	232
  8933   00146A  6E03               	movwf	(___flge@ff1+2)^0,c
  8934   00146C  0E41               	movlw	65
  8935   00146E  6E04               	movwf	(___flge@ff1+3)^0,c
  8936   001470  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  8937   001474  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  8938   001478  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  8939   00147C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  8940   001480  EC15  F01D         	call	___flge	;wreg free
  8941   001484  A0D8               	btfss	status,0,c
  8942   001486  EF47  F00A         	goto	u3971
  8943   00148A  EF49  F00A         	goto	u3970
  8944   00148E                     u3971:
  8945   00148E  EFB0  F00A         	goto	l4288
  8946   001492                     u3970:
  8947   001492                     
  8948                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
  8949   001492  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  8950   001496  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  8951   00149A  CFDE F001          	movff	postinc2,___flge@ff1
  8952   00149E  CFDE F002          	movff	postinc2,___flge@ff1+1
  8953   0014A2  CFDE F003          	movff	postinc2,___flge@ff1+2
  8954   0014A6  CFDE F004          	movff	postinc2,___flge@ff1+3
  8955   0014AA  0ECD               	movlw	205
  8956   0014AC  6E05               	movwf	___flge@ff2^0,c
  8957   0014AE  0ECC               	movlw	204
  8958   0014B0  6E06               	movwf	(___flge@ff2+1)^0,c
  8959   0014B2  0E4C               	movlw	76
  8960   0014B4  6E07               	movwf	(___flge@ff2+2)^0,c
  8961   0014B6  0E3E               	movlw	62
  8962   0014B8  6E08               	movwf	(___flge@ff2+3)^0,c
  8963   0014BA  EC15  F01D         	call	___flge	;wreg free
  8964   0014BE  A0D8               	btfss	status,0,c
  8965   0014C0  EF64  F00A         	goto	u3981
  8966   0014C4  EF66  F00A         	goto	u3980
  8967   0014C8                     u3981:
  8968   0014C8  EF85  F00A         	goto	l4276
  8969   0014CC                     u3980:
  8970   0014CC  0E00               	movlw	0
  8971   0014CE  6E01               	movwf	___flge@ff1^0,c
  8972   0014D0  0E00               	movlw	0
  8973   0014D2  6E02               	movwf	(___flge@ff1+1)^0,c
  8974   0014D4  0E80               	movlw	128
  8975   0014D6  6E03               	movwf	(___flge@ff1+2)^0,c
  8976   0014D8  0E3E               	movlw	62
  8977   0014DA  6E04               	movwf	(___flge@ff1+3)^0,c
  8978   0014DC  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  8979   0014E0  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  8980   0014E4  CFDE F005          	movff	postinc2,___flge@ff2
  8981   0014E8  CFDE F006          	movff	postinc2,___flge@ff2+1
  8982   0014EC  CFDE F007          	movff	postinc2,___flge@ff2+2
  8983   0014F0  CFDE F008          	movff	postinc2,___flge@ff2+3
  8984   0014F4  EC15  F01D         	call	___flge	;wreg free
  8985   0014F8  A0D8               	btfss	status,0,c
  8986   0014FA  EF81  F00A         	goto	u3991
  8987   0014FE  EF83  F00A         	goto	u3990
  8988   001502                     u3991:
  8989   001502  EF85  F00A         	goto	l4276
  8990   001506                     u3990:
  8991   001506  EF44  F008         	goto	l4220
  8992   00150A                     l4276:
  8993   00150A  EE20 F008          	lfsr	2,8
  8994   00150E  504D               	movf	Colour_decider@rel^0,w,c
  8995   001510  26D9               	addwf	fsr2l,f,c
  8996   001512  504E               	movf	(Colour_decider@rel+1)^0,w,c
  8997   001514  22DA               	addwfc	fsr2h,f,c
  8998   001516  CFDE F001          	movff	postinc2,___flge@ff1
  8999   00151A  CFDE F002          	movff	postinc2,___flge@ff1+1
  9000   00151E  CFDE F003          	movff	postinc2,___flge@ff1+2
  9001   001522  CFDE F004          	movff	postinc2,___flge@ff1+3
  9002   001526  0E29               	movlw	41
  9003   001528  6E05               	movwf	___flge@ff2^0,c
  9004   00152A  0E5C               	movlw	92
  9005   00152C  6E06               	movwf	(___flge@ff2+1)^0,c
  9006   00152E  0E0F               	movlw	15
  9007   001530  6E07               	movwf	(___flge@ff2+2)^0,c
  9008   001532  0E3E               	movlw	62
  9009   001534  6E08               	movwf	(___flge@ff2+3)^0,c
  9010   001536  EC15  F01D         	call	___flge	;wreg free
  9011   00153A  A0D8               	btfss	status,0,c
  9012   00153C  EFA2  F00A         	goto	u4001
  9013   001540  EFA4  F00A         	goto	u4000
  9014   001544                     u4001:
  9015   001544  EFAA  F00A         	goto	l4284
  9016   001548                     u4000:
  9017   001548                     l4278:
  9018                           
  9019                           ;color.c: 179:             return 4;
  9020   001548  0E00               	movlw	0
  9021   00154A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9022   00154C  0E04               	movlw	4
  9023   00154E  6E4B               	movwf	?_Colour_decider^0,c
  9024   001550  EF80  F00C         	goto	l74
  9025   001554                     l4284:
  9026                           
  9027                           ;color.c: 182:             return 3;
  9028   001554  0E00               	movlw	0
  9029   001556  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9030   001558  0E03               	movlw	3
  9031   00155A  6E4B               	movwf	?_Colour_decider^0,c
  9032   00155C  EF80  F00C         	goto	l74
  9033   001560                     l4288:
  9034   001560  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9035   001564  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9036   001568  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9037   00156C  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9038   001570  0E00               	movlw	0
  9039   001572  6E05               	movwf	___flge@ff2^0,c
  9040   001574  0E00               	movlw	0
  9041   001576  6E06               	movwf	(___flge@ff2+1)^0,c
  9042   001578  0E34               	movlw	52
  9043   00157A  6E07               	movwf	(___flge@ff2+2)^0,c
  9044   00157C  0E42               	movlw	66
  9045   00157E  6E08               	movwf	(___flge@ff2+3)^0,c
  9046   001580  EC15  F01D         	call	___flge	;wreg free
  9047   001584  A0D8               	btfss	status,0,c
  9048   001586  EFC7  F00A         	goto	u4011
  9049   00158A  EFC9  F00A         	goto	u4010
  9050   00158E                     u4011:
  9051   00158E  EF2E  F00B         	goto	l4312
  9052   001592                     u4010:
  9053   001592  0E00               	movlw	0
  9054   001594  6E01               	movwf	___flge@ff1^0,c
  9055   001596  0E00               	movlw	0
  9056   001598  6E02               	movwf	(___flge@ff1+1)^0,c
  9057   00159A  0EA0               	movlw	160
  9058   00159C  6E03               	movwf	(___flge@ff1+2)^0,c
  9059   00159E  0E42               	movlw	66
  9060   0015A0  6E04               	movwf	(___flge@ff1+3)^0,c
  9061   0015A2  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9062   0015A6  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9063   0015AA  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9064   0015AE  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9065   0015B2  EC15  F01D         	call	___flge	;wreg free
  9066   0015B6  A0D8               	btfss	status,0,c
  9067   0015B8  EFE0  F00A         	goto	u4021
  9068   0015BC  EFE2  F00A         	goto	u4020
  9069   0015C0                     u4021:
  9070   0015C0  EF2E  F00B         	goto	l4312
  9071   0015C4                     u4020:
  9072   0015C4                     
  9073                           ;color.c: 188:         if(0.15<=rel->B){
  9074   0015C4  EE20 F008          	lfsr	2,8
  9075   0015C8  504D               	movf	Colour_decider@rel^0,w,c
  9076   0015CA  26D9               	addwf	fsr2l,f,c
  9077   0015CC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9078   0015CE  22DA               	addwfc	fsr2h,f,c
  9079   0015D0  CFDE F001          	movff	postinc2,___flge@ff1
  9080   0015D4  CFDE F002          	movff	postinc2,___flge@ff1+1
  9081   0015D8  CFDE F003          	movff	postinc2,___flge@ff1+2
  9082   0015DC  CFDE F004          	movff	postinc2,___flge@ff1+3
  9083   0015E0  0E9A               	movlw	154
  9084   0015E2  6E05               	movwf	___flge@ff2^0,c
  9085   0015E4  0E99               	movlw	153
  9086   0015E6  6E06               	movwf	(___flge@ff2+1)^0,c
  9087   0015E8  0E19               	movlw	25
  9088   0015EA  6E07               	movwf	(___flge@ff2+2)^0,c
  9089   0015EC  0E3E               	movlw	62
  9090   0015EE  6E08               	movwf	(___flge@ff2+3)^0,c
  9091   0015F0  EC15  F01D         	call	___flge	;wreg free
  9092   0015F4  A0D8               	btfss	status,0,c
  9093   0015F6  EFFF  F00A         	goto	u4031
  9094   0015FA  EF01  F00B         	goto	u4030
  9095   0015FE                     u4031:
  9096   0015FE  EF03  F00B         	goto	l4300
  9097   001602                     u4030:
  9098   001602  EFA4  F00A         	goto	l4278
  9099   001606                     l4300:
  9100   001606  EE20 F008          	lfsr	2,8
  9101   00160A  504D               	movf	Colour_decider@rel^0,w,c
  9102   00160C  26D9               	addwf	fsr2l,f,c
  9103   00160E  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9104   001610  22DA               	addwfc	fsr2h,f,c
  9105   001612  CFDE F001          	movff	postinc2,___flge@ff1
  9106   001616  CFDE F002          	movff	postinc2,___flge@ff1+1
  9107   00161A  CFDE F003          	movff	postinc2,___flge@ff1+2
  9108   00161E  CFDE F004          	movff	postinc2,___flge@ff1+3
  9109   001622  0E8F               	movlw	143
  9110   001624  6E05               	movwf	___flge@ff2^0,c
  9111   001626  0EC2               	movlw	194
  9112   001628  6E06               	movwf	(___flge@ff2+1)^0,c
  9113   00162A  0EF5               	movlw	245
  9114   00162C  6E07               	movwf	(___flge@ff2+2)^0,c
  9115   00162E  0E3D               	movlw	61
  9116   001630  6E08               	movwf	(___flge@ff2+3)^0,c
  9117   001632  EC15  F01D         	call	___flge	;wreg free
  9118   001636  A0D8               	btfss	status,0,c
  9119   001638  EF20  F00B         	goto	u4041
  9120   00163C  EF22  F00B         	goto	u4040
  9121   001640                     u4041:
  9122   001640  EF28  F00B         	goto	l4308
  9123   001644                     u4040:
  9124   001644                     l4302:
  9125                           
  9126                           ;color.c: 192:             return 6;
  9127   001644  0E00               	movlw	0
  9128   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9129   001648  0E06               	movlw	6
  9130   00164A  6E4B               	movwf	?_Colour_decider^0,c
  9131   00164C  EF80  F00C         	goto	l74
  9132   001650                     l4308:
  9133                           
  9134                           ;color.c: 195:             return 5;
  9135   001650  0E00               	movlw	0
  9136   001652  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9137   001654  0E05               	movlw	5
  9138   001656  6E4B               	movwf	?_Colour_decider^0,c
  9139   001658  EF80  F00C         	goto	l74
  9140   00165C                     l4312:
  9141   00165C  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9142   001660  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9143   001664  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9144   001668  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9145   00166C  0E00               	movlw	0
  9146   00166E  6E05               	movwf	___flge@ff2^0,c
  9147   001670  0E00               	movlw	0
  9148   001672  6E06               	movwf	(___flge@ff2+1)^0,c
  9149   001674  0EA2               	movlw	162
  9150   001676  6E07               	movwf	(___flge@ff2+2)^0,c
  9151   001678  0E42               	movlw	66
  9152   00167A  6E08               	movwf	(___flge@ff2+3)^0,c
  9153   00167C  EC15  F01D         	call	___flge	;wreg free
  9154   001680  A0D8               	btfss	status,0,c
  9155   001682  EF45  F00B         	goto	u4051
  9156   001686  EF47  F00B         	goto	u4050
  9157   00168A                     u4051:
  9158   00168A  EF81  F00B         	goto	l4328
  9159   00168E                     u4050:
  9160   00168E  0E00               	movlw	0
  9161   001690  6E01               	movwf	___flge@ff1^0,c
  9162   001692  0E00               	movlw	0
  9163   001694  6E02               	movwf	(___flge@ff1+1)^0,c
  9164   001696  0EE6               	movlw	230
  9165   001698  6E03               	movwf	(___flge@ff1+2)^0,c
  9166   00169A  0E42               	movlw	66
  9167   00169C  6E04               	movwf	(___flge@ff1+3)^0,c
  9168   00169E  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9169   0016A2  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9170   0016A6  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9171   0016AA  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9172   0016AE  EC15  F01D         	call	___flge	;wreg free
  9173   0016B2  A0D8               	btfss	status,0,c
  9174   0016B4  EF5E  F00B         	goto	u4061
  9175   0016B8  EF60  F00B         	goto	u4060
  9176   0016BC                     u4061:
  9177   0016BC  EF81  F00B         	goto	l4328
  9178   0016C0                     u4060:
  9179   0016C0                     
  9180                           ;color.c: 201:         if(0.15<=rel->B){
  9181   0016C0  EE20 F008          	lfsr	2,8
  9182   0016C4  504D               	movf	Colour_decider@rel^0,w,c
  9183   0016C6  26D9               	addwf	fsr2l,f,c
  9184   0016C8  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9185   0016CA  22DA               	addwfc	fsr2h,f,c
  9186   0016CC  CFDE F001          	movff	postinc2,___flge@ff1
  9187   0016D0  CFDE F002          	movff	postinc2,___flge@ff1+1
  9188   0016D4  CFDE F003          	movff	postinc2,___flge@ff1+2
  9189   0016D8  CFDE F004          	movff	postinc2,___flge@ff1+3
  9190   0016DC  0E9A               	movlw	154
  9191   0016DE  6E05               	movwf	___flge@ff2^0,c
  9192   0016E0  0E99               	movlw	153
  9193   0016E2  6E06               	movwf	(___flge@ff2+1)^0,c
  9194   0016E4  0E19               	movlw	25
  9195   0016E6  6E07               	movwf	(___flge@ff2+2)^0,c
  9196   0016E8  0E3E               	movlw	62
  9197   0016EA  6E08               	movwf	(___flge@ff2+3)^0,c
  9198   0016EC  EC15  F01D         	call	___flge	;wreg free
  9199   0016F0  A0D8               	btfss	status,0,c
  9200   0016F2  EF7D  F00B         	goto	u4071
  9201   0016F6  EF7F  F00B         	goto	u4070
  9202   0016FA                     u4071:
  9203   0016FA  EF22  F00B         	goto	l4302
  9204   0016FE                     u4070:
  9205   0016FE  EFA4  F00A         	goto	l4278
  9206   001702                     l4328:
  9207   001702  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9208   001706  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9209   00170A  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9210   00170E  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9211   001712  0E00               	movlw	0
  9212   001714  6E05               	movwf	___flge@ff2^0,c
  9213   001716  0E00               	movlw	0
  9214   001718  6E06               	movwf	(___flge@ff2+1)^0,c
  9215   00171A  0EF0               	movlw	240
  9216   00171C  6E07               	movwf	(___flge@ff2+2)^0,c
  9217   00171E  0E41               	movlw	65
  9218   001720  6E08               	movwf	(___flge@ff2+3)^0,c
  9219   001722  EC15  F01D         	call	___flge	;wreg free
  9220   001726  A0D8               	btfss	status,0,c
  9221   001728  EF98  F00B         	goto	u4081
  9222   00172C  EF9A  F00B         	goto	u4080
  9223   001730                     u4081:
  9224   001730  EFB3  F00B         	goto	l4332
  9225   001734                     u4080:
  9226   001734  0E00               	movlw	0
  9227   001736  6E01               	movwf	___flge@ff1^0,c
  9228   001738  0E00               	movlw	0
  9229   00173A  6E02               	movwf	(___flge@ff1+1)^0,c
  9230   00173C  0E68               	movlw	104
  9231   00173E  6E03               	movwf	(___flge@ff1+2)^0,c
  9232   001740  0E42               	movlw	66
  9233   001742  6E04               	movwf	(___flge@ff1+3)^0,c
  9234   001744  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9235   001748  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9236   00174C  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9237   001750  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9238   001754  EC15  F01D         	call	___flge	;wreg free
  9239   001758  B0D8               	btfsc	status,0,c
  9240   00175A  EFB1  F00B         	goto	u4091
  9241   00175E  EFB3  F00B         	goto	u4090
  9242   001762                     u4091:
  9243   001762  EFA4  F00A         	goto	l4278
  9244   001766                     u4090:
  9245   001766                     l4332:
  9246   001766  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9247   00176A  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9248   00176E  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9249   001772  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9250   001776  0E00               	movlw	0
  9251   001778  6E05               	movwf	___flge@ff2^0,c
  9252   00177A  0E00               	movlw	0
  9253   00177C  6E06               	movwf	(___flge@ff2+1)^0,c
  9254   00177E  0EF0               	movlw	240
  9255   001780  6E07               	movwf	(___flge@ff2+2)^0,c
  9256   001782  0E42               	movlw	66
  9257   001784  6E08               	movwf	(___flge@ff2+3)^0,c
  9258   001786  EC15  F01D         	call	___flge	;wreg free
  9259   00178A  A0D8               	btfss	status,0,c
  9260   00178C  EFCA  F00B         	goto	u4101
  9261   001790  EFCC  F00B         	goto	u4100
  9262   001794                     u4101:
  9263   001794  EFE7  F00B         	goto	l4342
  9264   001798                     u4100:
  9265   001798  0E00               	movlw	0
  9266   00179A  6E01               	movwf	___flge@ff1^0,c
  9267   00179C  0E00               	movlw	0
  9268   00179E  6E02               	movwf	(___flge@ff1+1)^0,c
  9269   0017A0  0E5C               	movlw	92
  9270   0017A2  6E03               	movwf	(___flge@ff1+2)^0,c
  9271   0017A4  0E43               	movlw	67
  9272   0017A6  6E04               	movwf	(___flge@ff1+3)^0,c
  9273   0017A8  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9274   0017AC  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9275   0017B0  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9276   0017B4  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9277   0017B8  EC15  F01D         	call	___flge	;wreg free
  9278   0017BC  A0D8               	btfss	status,0,c
  9279   0017BE  EFE3  F00B         	goto	u4111
  9280   0017C2  EFE5  F00B         	goto	u4110
  9281   0017C6                     u4111:
  9282   0017C6  EFE7  F00B         	goto	l4342
  9283   0017CA                     u4110:
  9284   0017CA  EFA4  F00A         	goto	l4278
  9285   0017CE                     l4342:
  9286   0017CE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9287   0017D2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9288   0017D6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9289   0017DA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9290   0017DE  0E00               	movlw	0
  9291   0017E0  6E05               	movwf	___flge@ff2^0,c
  9292   0017E2  0E00               	movlw	0
  9293   0017E4  6E06               	movwf	(___flge@ff2+1)^0,c
  9294   0017E6  0E60               	movlw	96
  9295   0017E8  6E07               	movwf	(___flge@ff2+2)^0,c
  9296   0017EA  0E41               	movlw	65
  9297   0017EC  6E08               	movwf	(___flge@ff2+3)^0,c
  9298   0017EE  EC15  F01D         	call	___flge	;wreg free
  9299   0017F2  A0D8               	btfss	status,0,c
  9300   0017F4  EFFE  F00B         	goto	u4121
  9301   0017F8  EF00  F00C         	goto	u4120
  9302   0017FC                     u4121:
  9303   0017FC  EF7C  F00C         	goto	l4368
  9304   001800                     u4120:
  9305   001800  0E00               	movlw	0
  9306   001802  6E01               	movwf	___flge@ff1^0,c
  9307   001804  0E00               	movlw	0
  9308   001806  6E02               	movwf	(___flge@ff1+1)^0,c
  9309   001808  0E98               	movlw	152
  9310   00180A  6E03               	movwf	(___flge@ff1+2)^0,c
  9311   00180C  0E41               	movlw	65
  9312   00180E  6E04               	movwf	(___flge@ff1+3)^0,c
  9313   001810  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9314   001814  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9315   001818  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9316   00181C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9317   001820  EC15  F01D         	call	___flge	;wreg free
  9318   001824  A0D8               	btfss	status,0,c
  9319   001826  EF17  F00C         	goto	u4131
  9320   00182A  EF19  F00C         	goto	u4130
  9321   00182E                     u4131:
  9322   00182E  EF7C  F00C         	goto	l4368
  9323   001832                     u4130:
  9324   001832                     
  9325                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  9326   001832  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9327   001836  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9328   00183A  CFDE F001          	movff	postinc2,___flge@ff1
  9329   00183E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9330   001842  CFDE F003          	movff	postinc2,___flge@ff1+2
  9331   001846  CFDE F004          	movff	postinc2,___flge@ff1+3
  9332   00184A  0ECD               	movlw	205
  9333   00184C  6E05               	movwf	___flge@ff2^0,c
  9334   00184E  0ECC               	movlw	204
  9335   001850  6E06               	movwf	(___flge@ff2+1)^0,c
  9336   001852  0E4C               	movlw	76
  9337   001854  6E07               	movwf	(___flge@ff2+2)^0,c
  9338   001856  0E3E               	movlw	62
  9339   001858  6E08               	movwf	(___flge@ff2+3)^0,c
  9340   00185A  EC15  F01D         	call	___flge	;wreg free
  9341   00185E  A0D8               	btfss	status,0,c
  9342   001860  EF34  F00C         	goto	u4141
  9343   001864  EF36  F00C         	goto	u4140
  9344   001868                     u4141:
  9345   001868  EF55  F00C         	goto	l4356
  9346   00186C                     u4140:
  9347   00186C  0E1F               	movlw	31
  9348   00186E  6E01               	movwf	___flge@ff1^0,c
  9349   001870  0E85               	movlw	133
  9350   001872  6E02               	movwf	(___flge@ff1+1)^0,c
  9351   001874  0E6B               	movlw	107
  9352   001876  6E03               	movwf	(___flge@ff1+2)^0,c
  9353   001878  0E3E               	movlw	62
  9354   00187A  6E04               	movwf	(___flge@ff1+3)^0,c
  9355   00187C  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9356   001880  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9357   001884  CFDE F005          	movff	postinc2,___flge@ff2
  9358   001888  CFDE F006          	movff	postinc2,___flge@ff2+1
  9359   00188C  CFDE F007          	movff	postinc2,___flge@ff2+2
  9360   001890  CFDE F008          	movff	postinc2,___flge@ff2+3
  9361   001894  EC15  F01D         	call	___flge	;wreg free
  9362   001898  A0D8               	btfss	status,0,c
  9363   00189A  EF51  F00C         	goto	u4151
  9364   00189E  EF53  F00C         	goto	u4150
  9365   0018A2                     u4151:
  9366   0018A2  EF55  F00C         	goto	l4356
  9367   0018A6                     u4150:
  9368   0018A6  EF44  F008         	goto	l4220
  9369   0018AA                     l4356:
  9370   0018AA  EE20 F008          	lfsr	2,8
  9371   0018AE  504D               	movf	Colour_decider@rel^0,w,c
  9372   0018B0  26D9               	addwf	fsr2l,f,c
  9373   0018B2  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9374   0018B4  22DA               	addwfc	fsr2h,f,c
  9375   0018B6  CFDE F001          	movff	postinc2,___flge@ff1
  9376   0018BA  CFDE F002          	movff	postinc2,___flge@ff1+1
  9377   0018BE  CFDE F003          	movff	postinc2,___flge@ff1+2
  9378   0018C2  CFDE F004          	movff	postinc2,___flge@ff1+3
  9379   0018C6  0E9A               	movlw	154
  9380   0018C8  6E05               	movwf	___flge@ff2^0,c
  9381   0018CA  0E99               	movlw	153
  9382   0018CC  6E06               	movwf	(___flge@ff2+1)^0,c
  9383   0018CE  0E19               	movlw	25
  9384   0018D0  6E07               	movwf	(___flge@ff2+2)^0,c
  9385   0018D2  0E3E               	movlw	62
  9386   0018D4  6E08               	movwf	(___flge@ff2+3)^0,c
  9387   0018D6  EC15  F01D         	call	___flge	;wreg free
  9388   0018DA  A0D8               	btfss	status,0,c
  9389   0018DC  EF72  F00C         	goto	u4161
  9390   0018E0  EF74  F00C         	goto	u4160
  9391   0018E4                     u4161:
  9392   0018E4  EF76  F00C         	goto	l4364
  9393   0018E8                     u4160:
  9394   0018E8  EFA4  F00A         	goto	l4278
  9395   0018EC                     l4364:
  9396                           
  9397                           ;color.c: 223:             return 7;
  9398   0018EC  0E00               	movlw	0
  9399   0018EE  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9400   0018F0  0E07               	movlw	7
  9401   0018F2  6E4B               	movwf	?_Colour_decider^0,c
  9402   0018F4  EF80  F00C         	goto	l74
  9403   0018F8                     l4368:
  9404                           
  9405                           ;color.c: 227:         return 10;
  9406   0018F8  0E00               	movlw	0
  9407   0018FA  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9408   0018FC  0E0A               	movlw	10
  9409   0018FE  6E4B               	movwf	?_Colour_decider^0,c
  9410   001900                     l74:
  9411   001900  0012               	return		;funcret
  9412   001902                     __end_of_Colour_decider:
  9413                           	callstack 0
  9414                           
  9415 ;; *************** function ___xxtofl *****************
  9416 ;; Defined at:
  9417 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;  sign            1    wreg     unsigned char 
  9420 ;;  val             4    0[COMRAM] long 
  9421 ;; Auto vars:     Size  Location     Type
  9422 ;;  sign            1    8[COMRAM] unsigned char 
  9423 ;;  arg             4   10[COMRAM] unsigned long 
  9424 ;;  exp             1    9[COMRAM] unsigned char 
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  4    0[COMRAM] unsigned char 
  9427 ;; Registers used:
  9428 ;;		wreg, status,2, status,0
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9435 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9436 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9437 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9438 ;;Total ram usage:       14 bytes
  9439 ;; Hardware stack levels used: 1
  9440 ;; Hardware stack levels required when called: 1
  9441 ;; This function calls:
  9442 ;;		Nothing
  9443 ;; This function is called by:
  9444 ;;		_colour_rel
  9445 ;;		_Colour_decider
  9446 ;;		_turnRight45
  9447 ;;		_turnLeft45
  9448 ;; This function uses a non-reentrant model
  9449 ;;
  9450                           
  9451                           	psect	text59
  9452   0032CE                     __ptext59:
  9453                           	callstack 0
  9454   0032CE                     ___xxtofl:
  9455                           	callstack 28
  9456                           
  9457                           ;incstack = 0
  9458                           ;___xxtofl@sign stored from wreg
  9459   0032CE  6E09               	movwf	___xxtofl@sign^0,c
  9460   0032D0  5009               	movf	___xxtofl@sign^0,w,c
  9461   0032D2  B4D8               	btfsc	status,2,c
  9462   0032D4  EF6E  F019         	goto	u3731
  9463   0032D8  EF70  F019         	goto	u3730
  9464   0032DC                     u3731:
  9465   0032DC  EF92  F019         	goto	l1317
  9466   0032E0                     u3730:
  9467   0032E0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9468   0032E2  EF77  F019         	goto	u3740
  9469   0032E6  EF75  F019         	goto	u3741
  9470   0032EA                     u3741:
  9471   0032EA  EF92  F019         	goto	l1317
  9472   0032EE                     u3740:
  9473   0032EE  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9474   0032F2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9475   0032F6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9476   0032FA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9477   0032FE  1E05               	comf	??___xxtofl^0,f,c
  9478   003300  1E06               	comf	(??___xxtofl+1)^0,f,c
  9479   003302  1E07               	comf	(??___xxtofl+2)^0,f,c
  9480   003304  1E08               	comf	(??___xxtofl+3)^0,f,c
  9481   003306  2A05               	incf	??___xxtofl^0,f,c
  9482   003308  0E00               	movlw	0
  9483   00330A  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9484   00330C  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9485   00330E  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9486   003310  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9487   003314  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9488   003318  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9489   00331C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9490   003320  EF9A  F019         	goto	l4090
  9491   003324                     l1317:
  9492   003324  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9493   003328  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9494   00332C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9495   003330  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9496   003334                     l4090:
  9497   003334  5001               	movf	___xxtofl@val^0,w,c
  9498   003336  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9499   003338  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9500   00333A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9501   00333C  A4D8               	btfss	status,2,c
  9502   00333E  EFA3  F019         	goto	u3751
  9503   003342  EFA5  F019         	goto	u3750
  9504   003346                     u3751:
  9505   003346  EFAF  F019         	goto	l4096
  9506   00334A                     u3750:
  9507   00334A  0E00               	movlw	0
  9508   00334C  6E01               	movwf	?___xxtofl^0,c
  9509   00334E  0E00               	movlw	0
  9510   003350  6E02               	movwf	(?___xxtofl+1)^0,c
  9511   003352  0E00               	movlw	0
  9512   003354  6E03               	movwf	(?___xxtofl+2)^0,c
  9513   003356  0E00               	movlw	0
  9514   003358  6E04               	movwf	(?___xxtofl+3)^0,c
  9515   00335A  EF40  F01A         	goto	l1320
  9516   00335E                     l4096:
  9517   00335E  0E96               	movlw	150
  9518   003360  6E0A               	movwf	___xxtofl@exp^0,c
  9519   003362  EFB9  F019         	goto	l4100
  9520   003366                     l4098:
  9521   003366  2A0A               	incf	___xxtofl@exp^0,f,c
  9522   003368  90D8               	bcf	status,0,c
  9523   00336A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9524   00336C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9525   00336E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9526   003370  320B               	rrcf	___xxtofl@arg^0,f,c
  9527   003372                     l4100:
  9528   003372  0E00               	movlw	0
  9529   003374  140B               	andwf	___xxtofl@arg^0,w,c
  9530   003376  6E05               	movwf	??___xxtofl^0,c
  9531   003378  0E00               	movlw	0
  9532   00337A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9533   00337C  6E06               	movwf	(??___xxtofl+1)^0,c
  9534   00337E  0E00               	movlw	0
  9535   003380  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9536   003382  6E07               	movwf	(??___xxtofl+2)^0,c
  9537   003384  0EFE               	movlw	254
  9538   003386  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9539   003388  6E08               	movwf	(??___xxtofl+3)^0,c
  9540   00338A  5005               	movf	??___xxtofl^0,w,c
  9541   00338C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9542   00338E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9543   003390  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9544   003392  A4D8               	btfss	status,2,c
  9545   003394  EFCE  F019         	goto	u3761
  9546   003398  EFD0  F019         	goto	u3760
  9547   00339C                     u3761:
  9548   00339C  EFB3  F019         	goto	l4098
  9549   0033A0                     u3760:
  9550   0033A0  EFDE  F019         	goto	l1324
  9551   0033A4                     l4102:
  9552   0033A4  2A0A               	incf	___xxtofl@exp^0,f,c
  9553   0033A6  0E01               	movlw	1
  9554   0033A8  260B               	addwf	___xxtofl@arg^0,f,c
  9555   0033AA  0E00               	movlw	0
  9556   0033AC  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9557   0033AE  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9558   0033B0  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9559   0033B2  90D8               	bcf	status,0,c
  9560   0033B4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9561   0033B6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9562   0033B8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9563   0033BA  320B               	rrcf	___xxtofl@arg^0,f,c
  9564   0033BC                     l1324:
  9565   0033BC  0E00               	movlw	0
  9566   0033BE  140B               	andwf	___xxtofl@arg^0,w,c
  9567   0033C0  6E05               	movwf	??___xxtofl^0,c
  9568   0033C2  0E00               	movlw	0
  9569   0033C4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9570   0033C6  6E06               	movwf	(??___xxtofl+1)^0,c
  9571   0033C8  0E00               	movlw	0
  9572   0033CA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9573   0033CC  6E07               	movwf	(??___xxtofl+2)^0,c
  9574   0033CE  0EFF               	movlw	255
  9575   0033D0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9576   0033D2  6E08               	movwf	(??___xxtofl+3)^0,c
  9577   0033D4  5005               	movf	??___xxtofl^0,w,c
  9578   0033D6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9579   0033D8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9580   0033DA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9581   0033DC  A4D8               	btfss	status,2,c
  9582   0033DE  EFF3  F019         	goto	u3771
  9583   0033E2  EFF5  F019         	goto	u3770
  9584   0033E6                     u3771:
  9585   0033E6  EFD2  F019         	goto	l4102
  9586   0033EA                     u3770:
  9587   0033EA  EFFD  F019         	goto	l4110
  9588   0033EE                     l4108:
  9589   0033EE  060A               	decf	___xxtofl@exp^0,f,c
  9590   0033F0  90D8               	bcf	status,0,c
  9591   0033F2  360B               	rlcf	___xxtofl@arg^0,f,c
  9592   0033F4  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9593   0033F6  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9594   0033F8  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9595   0033FA                     l4110:
  9596   0033FA  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9597   0033FC  EF02  F01A         	goto	u3781
  9598   003400  EF04  F01A         	goto	u3780
  9599   003404                     u3781:
  9600   003404  EF0C  F01A         	goto	l1331
  9601   003408                     u3780:
  9602   003408  0E02               	movlw	2
  9603   00340A  600A               	cpfslt	___xxtofl@exp^0,c
  9604   00340C  EF0A  F01A         	goto	u3791
  9605   003410  EF0C  F01A         	goto	u3790
  9606   003414                     u3791:
  9607   003414  EFF7  F019         	goto	l4108
  9608   003418                     u3790:
  9609   003418                     l1331:
  9610   003418  B00A               	btfsc	___xxtofl@exp^0,0,c
  9611   00341A  EF11  F01A         	goto	u3801
  9612   00341E  EF13  F01A         	goto	u3800
  9613   003422                     u3801:
  9614   003422  EF14  F01A         	goto	l4116
  9615   003426                     u3800:
  9616   003426  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9617   003428                     l4116:
  9618   003428  90D8               	bcf	status,0,c
  9619   00342A  320A               	rrcf	___xxtofl@exp^0,f,c
  9620   00342C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9621   003430  6A06               	clrf	(??___xxtofl+1)^0,c
  9622   003432  6A07               	clrf	(??___xxtofl+2)^0,c
  9623   003434  6A08               	clrf	(??___xxtofl+3)^0,c
  9624   003436  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9625   00343A  6A07               	clrf	(??___xxtofl+2)^0,c
  9626   00343C  6A06               	clrf	(??___xxtofl+1)^0,c
  9627   00343E  6A05               	clrf	??___xxtofl^0,c
  9628   003440  5005               	movf	??___xxtofl^0,w,c
  9629   003442  120B               	iorwf	___xxtofl@arg^0,f,c
  9630   003444  5006               	movf	(??___xxtofl+1)^0,w,c
  9631   003446  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9632   003448  5007               	movf	(??___xxtofl+2)^0,w,c
  9633   00344A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9634   00344C  5008               	movf	(??___xxtofl+3)^0,w,c
  9635   00344E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9636   003450  5009               	movf	___xxtofl@sign^0,w,c
  9637   003452  B4D8               	btfsc	status,2,c
  9638   003454  EF2E  F01A         	goto	u3811
  9639   003458  EF30  F01A         	goto	u3810
  9640   00345C                     u3811:
  9641   00345C  EF38  F01A         	goto	l4126
  9642   003460                     u3810:
  9643   003460  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9644   003462  EF37  F01A         	goto	u3820
  9645   003466  EF35  F01A         	goto	u3821
  9646   00346A                     u3821:
  9647   00346A  EF38  F01A         	goto	l4126
  9648   00346E                     u3820:
  9649   00346E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9650   003470                     l4126:
  9651   003470  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9652   003474  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9653   003478  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9654   00347C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9655   003480                     l1320:
  9656   003480  0012               	return		;funcret
  9657   003482                     __end_of___xxtofl:
  9658                           	callstack 0
  9659                           
  9660 ;; *************** function ___flsub *****************
  9661 ;; Defined at:
  9662 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9663 ;; Parameters:    Size  Location     Type
  9664 ;;  b               4   16[COMRAM] unsigned char 
  9665 ;;  a               4   20[COMRAM] unsigned char 
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;		None
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  4   16[COMRAM] unsigned char 
  9670 ;; Registers used:
  9671 ;;		wreg, status,2, status,0, cstack
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9677 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9680 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9681 ;;Total ram usage:        8 bytes
  9682 ;; Hardware stack levels used: 1
  9683 ;; Hardware stack levels required when called: 2
  9684 ;; This function calls:
  9685 ;;		___fladd
  9686 ;; This function is called by:
  9687 ;;		_Colour_decider
  9688 ;; This function uses a non-reentrant model
  9689 ;;
  9690                           
  9691                           	psect	text60
  9692   004856                     __ptext60:
  9693                           	callstack 0
  9694   004856                     ___flsub:
  9695                           	callstack 27
  9696   004856  0E00               	movlw	0
  9697   004858  1A15               	xorwf	___flsub@a^0,f,c
  9698   00485A  0E00               	movlw	0
  9699   00485C  1A16               	xorwf	(___flsub@a+1)^0,f,c
  9700   00485E  0E00               	movlw	0
  9701   004860  1A17               	xorwf	(___flsub@a+2)^0,f,c
  9702   004862  0E80               	movlw	128
  9703   004864  1A18               	xorwf	(___flsub@a+3)^0,f,c
  9704   004866  C011  F001         	movff	___flsub@b,___fladd@b
  9705   00486A  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  9706   00486E  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  9707   004872  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  9708   004876  C015  F005         	movff	___flsub@a,___fladd@a
  9709   00487A  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  9710   00487E  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  9711   004882  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  9712   004886  EC38  F00F         	call	___fladd	;wreg free
  9713   00488A  C001  F011         	movff	?___fladd,?___flsub
  9714   00488E  C002  F012         	movff	?___fladd+1,?___flsub+1
  9715   004892  C003  F013         	movff	?___fladd+2,?___flsub+2
  9716   004896  C004  F014         	movff	?___fladd+3,?___flsub+3
  9717   00489A  0012               	return		;funcret
  9718   00489C                     __end_of___flsub:
  9719                           	callstack 0
  9720                           
  9721 ;; *************** function ___fladd *****************
  9722 ;; Defined at:
  9723 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;  b               4    0[COMRAM] unsigned char 
  9726 ;;  a               4    4[COMRAM] unsigned char 
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;  grs             1   15[COMRAM] unsigned char 
  9729 ;;  bexp            1   14[COMRAM] unsigned char 
  9730 ;;  aexp            1   13[COMRAM] unsigned char 
  9731 ;;  signs           1   12[COMRAM] unsigned char 
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  4    0[COMRAM] unsigned char 
  9734 ;; Registers used:
  9735 ;;		wreg, status,2, status,0
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9741 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9742 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9743 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9744 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9745 ;;Total ram usage:       16 bytes
  9746 ;; Hardware stack levels used: 1
  9747 ;; Hardware stack levels required when called: 1
  9748 ;; This function calls:
  9749 ;;		Nothing
  9750 ;; This function is called by:
  9751 ;;		_colour_rel
  9752 ;;		_Colour_decider
  9753 ;;		___flsub
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           
  9757                           	psect	text61
  9758   001E70                     __ptext61:
  9759                           	callstack 0
  9760   001E70                     ___fladd:
  9761                           	callstack 28
  9762   001E70  5004               	movf	(___fladd@b+3)^0,w,c
  9763   001E72  0B80               	andlw	128
  9764   001E74  6E0D               	movwf	___fladd@signs^0,c
  9765   001E76  5004               	movf	(___fladd@b+3)^0,w,c
  9766   001E78  2404               	addwf	(___fladd@b+3)^0,w,c
  9767   001E7A  6E0F               	movwf	___fladd@bexp^0,c
  9768   001E7C  AE03               	btfss	(___fladd@b+2)^0,7,c
  9769   001E7E  EF43  F00F         	goto	u2801
  9770   001E82  EF45  F00F         	goto	u2800
  9771   001E86                     u2801:
  9772   001E86  EF46  F00F         	goto	l3478
  9773   001E8A                     u2800:
  9774   001E8A  800F               	bsf	___fladd@bexp^0,0,c
  9775   001E8C                     l3478:
  9776   001E8C  500F               	movf	___fladd@bexp^0,w,c
  9777   001E8E  B4D8               	btfsc	status,2,c
  9778   001E90  EF4C  F00F         	goto	u2811
  9779   001E94  EF4E  F00F         	goto	u2810
  9780   001E98                     u2811:
  9781   001E98  EF63  F00F         	goto	l3488
  9782   001E9C                     u2810:
  9783   001E9C  280F               	incf	___fladd@bexp^0,w,c
  9784   001E9E  A4D8               	btfss	status,2,c
  9785   001EA0  EF54  F00F         	goto	u2821
  9786   001EA4  EF56  F00F         	goto	u2820
  9787   001EA8                     u2821:
  9788   001EA8  EF5E  F00F         	goto	l3484
  9789   001EAC                     u2820:
  9790   001EAC  0E00               	movlw	0
  9791   001EAE  6E01               	movwf	___fladd@b^0,c
  9792   001EB0  0E00               	movlw	0
  9793   001EB2  6E02               	movwf	(___fladd@b+1)^0,c
  9794   001EB4  0E00               	movlw	0
  9795   001EB6  6E03               	movwf	(___fladd@b+2)^0,c
  9796   001EB8  0E00               	movlw	0
  9797   001EBA  6E04               	movwf	(___fladd@b+3)^0,c
  9798   001EBC                     l3484:
  9799   001EBC  8E03               	bsf	(___fladd@b+2)^0,7,c
  9800   001EBE  0E00               	movlw	0
  9801   001EC0  6E04               	movwf	(___fladd@b+3)^0,c
  9802   001EC2  EF6B  F00F         	goto	l3490
  9803   001EC6                     l3488:
  9804   001EC6  0E00               	movlw	0
  9805   001EC8  6E01               	movwf	___fladd@b^0,c
  9806   001ECA  0E00               	movlw	0
  9807   001ECC  6E02               	movwf	(___fladd@b+1)^0,c
  9808   001ECE  0E00               	movlw	0
  9809   001ED0  6E03               	movwf	(___fladd@b+2)^0,c
  9810   001ED2  0E00               	movlw	0
  9811   001ED4  6E04               	movwf	(___fladd@b+3)^0,c
  9812   001ED6                     l3490:
  9813   001ED6  5008               	movf	(___fladd@a+3)^0,w,c
  9814   001ED8  0B80               	andlw	128
  9815   001EDA  6E0E               	movwf	___fladd@aexp^0,c
  9816   001EDC  500D               	movf	___fladd@signs^0,w,c
  9817   001EDE  180E               	xorwf	___fladd@aexp^0,w,c
  9818   001EE0  B4D8               	btfsc	status,2,c
  9819   001EE2  EF75  F00F         	goto	u2831
  9820   001EE6  EF77  F00F         	goto	u2830
  9821   001EEA                     u2831:
  9822   001EEA  EF78  F00F         	goto	l3496
  9823   001EEE                     u2830:
  9824   001EEE  8C0D               	bsf	___fladd@signs^0,6,c
  9825   001EF0                     l3496:
  9826   001EF0  5008               	movf	(___fladd@a+3)^0,w,c
  9827   001EF2  2408               	addwf	(___fladd@a+3)^0,w,c
  9828   001EF4  6E0E               	movwf	___fladd@aexp^0,c
  9829   001EF6  AE07               	btfss	(___fladd@a+2)^0,7,c
  9830   001EF8  EF80  F00F         	goto	u2841
  9831   001EFC  EF82  F00F         	goto	u2840
  9832   001F00                     u2841:
  9833   001F00  EF83  F00F         	goto	l3502
  9834   001F04                     u2840:
  9835   001F04  800E               	bsf	___fladd@aexp^0,0,c
  9836   001F06                     l3502:
  9837   001F06  500E               	movf	___fladd@aexp^0,w,c
  9838   001F08  B4D8               	btfsc	status,2,c
  9839   001F0A  EF89  F00F         	goto	u2851
  9840   001F0E  EF8B  F00F         	goto	u2850
  9841   001F12                     u2851:
  9842   001F12  EFA0  F00F         	goto	l3512
  9843   001F16                     u2850:
  9844   001F16  280E               	incf	___fladd@aexp^0,w,c
  9845   001F18  A4D8               	btfss	status,2,c
  9846   001F1A  EF91  F00F         	goto	u2861
  9847   001F1E  EF93  F00F         	goto	u2860
  9848   001F22                     u2861:
  9849   001F22  EF9B  F00F         	goto	l3508
  9850   001F26                     u2860:
  9851   001F26  0E00               	movlw	0
  9852   001F28  6E05               	movwf	___fladd@a^0,c
  9853   001F2A  0E00               	movlw	0
  9854   001F2C  6E06               	movwf	(___fladd@a+1)^0,c
  9855   001F2E  0E00               	movlw	0
  9856   001F30  6E07               	movwf	(___fladd@a+2)^0,c
  9857   001F32  0E00               	movlw	0
  9858   001F34  6E08               	movwf	(___fladd@a+3)^0,c
  9859   001F36                     l3508:
  9860   001F36  8E07               	bsf	(___fladd@a+2)^0,7,c
  9861   001F38  0E00               	movlw	0
  9862   001F3A  6E08               	movwf	(___fladd@a+3)^0,c
  9863   001F3C  EFA8  F00F         	goto	l3514
  9864   001F40                     l3512:
  9865   001F40  0E00               	movlw	0
  9866   001F42  6E05               	movwf	___fladd@a^0,c
  9867   001F44  0E00               	movlw	0
  9868   001F46  6E06               	movwf	(___fladd@a+1)^0,c
  9869   001F48  0E00               	movlw	0
  9870   001F4A  6E07               	movwf	(___fladd@a+2)^0,c
  9871   001F4C  0E00               	movlw	0
  9872   001F4E  6E08               	movwf	(___fladd@a+3)^0,c
  9873   001F50                     l3514:
  9874   001F50  500F               	movf	___fladd@bexp^0,w,c
  9875   001F52  5C0E               	subwf	___fladd@aexp^0,w,c
  9876   001F54  B0D8               	btfsc	status,0,c
  9877   001F56  EFAF  F00F         	goto	u2871
  9878   001F5A  EFB1  F00F         	goto	u2870
  9879   001F5E                     u2871:
  9880   001F5E  EFD8  F00F         	goto	l3550
  9881   001F62                     u2870:
  9882   001F62  AC0D               	btfss	___fladd@signs^0,6,c
  9883   001F64  EFB6  F00F         	goto	u2881
  9884   001F68  EFB8  F00F         	goto	u2880
  9885   001F6C                     u2881:
  9886   001F6C  EFBA  F00F         	goto	l3520
  9887   001F70                     u2880:
  9888   001F70  0E80               	movlw	128
  9889   001F72  1A0D               	xorwf	___fladd@signs^0,f,c
  9890   001F74                     l3520:
  9891   001F74  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  9892   001F78  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9893   001F7C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  9894   001F80  C001  F010         	movff	___fladd@b,___fladd@grs
  9895   001F84  C005  F001         	movff	___fladd@a,___fladd@b
  9896   001F88  C010  F005         	movff	___fladd@grs,___fladd@a
  9897   001F8C  C002  F010         	movff	___fladd@b+1,___fladd@grs
  9898   001F90  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  9899   001F94  C010  F006         	movff	___fladd@grs,___fladd@a+1
  9900   001F98  C003  F010         	movff	___fladd@b+2,___fladd@grs
  9901   001F9C  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  9902   001FA0  C010  F007         	movff	___fladd@grs,___fladd@a+2
  9903   001FA4  C004  F010         	movff	___fladd@b+3,___fladd@grs
  9904   001FA8  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  9905   001FAC  C010  F008         	movff	___fladd@grs,___fladd@a+3
  9906   001FB0                     l3550:
  9907   001FB0  0E00               	movlw	0
  9908   001FB2  6E10               	movwf	___fladd@grs^0,c
  9909   001FB4  500F               	movf	___fladd@bexp^0,w,c
  9910   001FB6  C00E  F009         	movff	___fladd@aexp,??___fladd
  9911   001FBA  6A0A               	clrf	(??___fladd+1)^0,c
  9912   001FBC  5E09               	subwf	??___fladd^0,f,c
  9913   001FBE  0E00               	movlw	0
  9914   001FC0  5A0A               	subwfb	(??___fladd+1)^0,f,c
  9915   001FC2  BE0A               	btfsc	(??___fladd+1)^0,7,c
  9916   001FC4  EFED  F00F         	goto	u2891
  9917   001FC8  500A               	movf	(??___fladd+1)^0,w,c
  9918   001FCA  E109               	bnz	u2890
  9919   001FCC  0E1A               	movlw	26
  9920   001FCE  5C09               	subwf	??___fladd^0,w,c
  9921   001FD0  A0D8               	btfss	status,0,c
  9922   001FD2  EFED  F00F         	goto	u2891
  9923   001FD6  EFEF  F00F         	goto	u2890
  9924   001FDA                     u2891:
  9925   001FDA  EF26  F010         	goto	l1191
  9926   001FDE                     u2890:
  9927   001FDE  5001               	movf	___fladd@b^0,w,c
  9928   001FE0  1002               	iorwf	(___fladd@b+1)^0,w,c
  9929   001FE2  1003               	iorwf	(___fladd@b+2)^0,w,c
  9930   001FE4  1004               	iorwf	(___fladd@b+3)^0,w,c
  9931   001FE6  A4D8               	btfss	status,2,c
  9932   001FE8  EFF8  F00F         	goto	u2901
  9933   001FEC  EFFB  F00F         	goto	u2900
  9934   001FF0                     u2901:
  9935   001FF0  0E01               	movlw	1
  9936   001FF2  EFFC  F00F         	goto	u2910
  9937   001FF6                     u2900:
  9938   001FF6  0E00               	movlw	0
  9939   001FF8                     u2910:
  9940   001FF8  6E10               	movwf	___fladd@grs^0,c
  9941   001FFA  0E00               	movlw	0
  9942   001FFC  6E01               	movwf	___fladd@b^0,c
  9943   001FFE  0E00               	movlw	0
  9944   002000  6E02               	movwf	(___fladd@b+1)^0,c
  9945   002002  0E00               	movlw	0
  9946   002004  6E03               	movwf	(___fladd@b+2)^0,c
  9947   002006  0E00               	movlw	0
  9948   002008  6E04               	movwf	(___fladd@b+3)^0,c
  9949   00200A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9950   00200E  EF2F  F010         	goto	l1190
  9951   002012                     l1192:
  9952   002012  A010               	btfss	___fladd@grs^0,0,c
  9953   002014  EF0E  F010         	goto	u2921
  9954   002018  EF10  F010         	goto	u2920
  9955   00201C                     u2921:
  9956   00201C  EF16  F010         	goto	l3562
  9957   002020                     u2920:
  9958   002020  90D8               	bcf	status,0,c
  9959   002022  3010               	rrcf	___fladd@grs^0,w,c
  9960   002024  0901               	iorlw	1
  9961   002026  6E10               	movwf	___fladd@grs^0,c
  9962   002028  EF18  F010         	goto	l3564
  9963   00202C                     l3562:
  9964   00202C  90D8               	bcf	status,0,c
  9965   00202E  3210               	rrcf	___fladd@grs^0,f,c
  9966   002030                     l3564:
  9967   002030  A001               	btfss	___fladd@b^0,0,c
  9968   002032  EF1D  F010         	goto	u2931
  9969   002036  EF1F  F010         	goto	u2930
  9970   00203A                     u2931:
  9971   00203A  EF20  F010         	goto	l3568
  9972   00203E                     u2930:
  9973   00203E  8E10               	bsf	___fladd@grs^0,7,c
  9974   002040                     l3568:
  9975   002040  3404               	rlcf	(___fladd@b+3)^0,w,c
  9976   002042  3204               	rrcf	(___fladd@b+3)^0,f,c
  9977   002044  3203               	rrcf	(___fladd@b+2)^0,f,c
  9978   002046  3202               	rrcf	(___fladd@b+1)^0,f,c
  9979   002048  3201               	rrcf	___fladd@b^0,f,c
  9980   00204A  2A0F               	incf	___fladd@bexp^0,f,c
  9981   00204C                     l1191:
  9982   00204C  500E               	movf	___fladd@aexp^0,w,c
  9983   00204E  5C0F               	subwf	___fladd@bexp^0,w,c
  9984   002050  A0D8               	btfss	status,0,c
  9985   002052  EF2D  F010         	goto	u2941
  9986   002056  EF2F  F010         	goto	u2940
  9987   00205A                     u2941:
  9988   00205A  EF09  F010         	goto	l1192
  9989   00205E                     u2940:
  9990   00205E                     l1190:
  9991   00205E  BC0D               	btfsc	___fladd@signs^0,6,c
  9992   002060  EF34  F010         	goto	u2951
  9993   002064  EF36  F010         	goto	u2950
  9994   002068                     u2951:
  9995   002068  EF76  F010         	goto	l3596
  9996   00206C                     u2950:
  9997   00206C  500F               	movf	___fladd@bexp^0,w,c
  9998   00206E  A4D8               	btfss	status,2,c
  9999   002070  EF3C  F010         	goto	u2961
 10000   002074  EF3E  F010         	goto	u2960
 10001   002078                     u2961:
 10002   002078  EF48  F010         	goto	l3578
 10003   00207C                     u2960:
 10004   00207C  0E00               	movlw	0
 10005   00207E  6E01               	movwf	?___fladd^0,c
 10006   002080  0E00               	movlw	0
 10007   002082  6E02               	movwf	(?___fladd+1)^0,c
 10008   002084  0E00               	movlw	0
 10009   002086  6E03               	movwf	(?___fladd+2)^0,c
 10010   002088  0E00               	movlw	0
 10011   00208A  6E04               	movwf	(?___fladd+3)^0,c
 10012   00208C  EF97  F011         	goto	l1199
 10013   002090                     l3578:
 10014   002090  5005               	movf	___fladd@a^0,w,c
 10015   002092  2601               	addwf	___fladd@b^0,f,c
 10016   002094  5006               	movf	(___fladd@a+1)^0,w,c
 10017   002096  2202               	addwfc	(___fladd@b+1)^0,f,c
 10018   002098  5007               	movf	(___fladd@a+2)^0,w,c
 10019   00209A  2203               	addwfc	(___fladd@b+2)^0,f,c
 10020   00209C  5008               	movf	(___fladd@a+3)^0,w,c
 10021   00209E  2204               	addwfc	(___fladd@b+3)^0,f,c
 10022   0020A0  A004               	btfss	(___fladd@b+3)^0,0,c
 10023   0020A2  EF55  F010         	goto	u2971
 10024   0020A6  EF57  F010         	goto	u2970
 10025   0020AA                     u2971:
 10026   0020AA  EF03  F011         	goto	l3632
 10027   0020AE                     u2970:
 10028   0020AE  A010               	btfss	___fladd@grs^0,0,c
 10029   0020B0  EF5C  F010         	goto	u2981
 10030   0020B4  EF5E  F010         	goto	u2980
 10031   0020B8                     u2981:
 10032   0020B8  EF64  F010         	goto	l3586
 10033   0020BC                     u2980:
 10034   0020BC  90D8               	bcf	status,0,c
 10035   0020BE  3010               	rrcf	___fladd@grs^0,w,c
 10036   0020C0  0901               	iorlw	1
 10037   0020C2  6E10               	movwf	___fladd@grs^0,c
 10038   0020C4  EF66  F010         	goto	l3588
 10039   0020C8                     l3586:
 10040   0020C8  90D8               	bcf	status,0,c
 10041   0020CA  3210               	rrcf	___fladd@grs^0,f,c
 10042   0020CC                     l3588:
 10043   0020CC  A001               	btfss	___fladd@b^0,0,c
 10044   0020CE  EF6B  F010         	goto	u2991
 10045   0020D2  EF6D  F010         	goto	u2990
 10046   0020D6                     u2991:
 10047   0020D6  EF6E  F010         	goto	l3592
 10048   0020DA                     u2990:
 10049   0020DA  8E10               	bsf	___fladd@grs^0,7,c
 10050   0020DC                     l3592:
 10051   0020DC  3404               	rlcf	(___fladd@b+3)^0,w,c
 10052   0020DE  3204               	rrcf	(___fladd@b+3)^0,f,c
 10053   0020E0  3203               	rrcf	(___fladd@b+2)^0,f,c
 10054   0020E2  3202               	rrcf	(___fladd@b+1)^0,f,c
 10055   0020E4  3201               	rrcf	___fladd@b^0,f,c
 10056   0020E6  2A0F               	incf	___fladd@bexp^0,f,c
 10057   0020E8  EF03  F011         	goto	l3632
 10058   0020EC                     l3596:
 10059   0020EC  5005               	movf	___fladd@a^0,w,c
 10060   0020EE  5C01               	subwf	___fladd@b^0,w,c
 10061   0020F0  5006               	movf	(___fladd@a+1)^0,w,c
 10062   0020F2  5802               	subwfb	(___fladd@b+1)^0,w,c
 10063   0020F4  5007               	movf	(___fladd@a+2)^0,w,c
 10064   0020F6  5803               	subwfb	(___fladd@b+2)^0,w,c
 10065   0020F8  5004               	movf	(___fladd@b+3)^0,w,c
 10066   0020FA  0A80               	xorlw	128
 10067   0020FC  6E09               	movwf	??___fladd^0,c
 10068   0020FE  5008               	movf	(___fladd@a+3)^0,w,c
 10069   002100  0A80               	xorlw	128
 10070   002102  5809               	subwfb	??___fladd^0,w,c
 10071   002104  B0D8               	btfsc	status,0,c
 10072   002106  EF87  F010         	goto	u3001
 10073   00210A  EF89  F010         	goto	u3000
 10074   00210E                     u3001:
 10075   00210E  EFB4  F010         	goto	l3606
 10076   002112                     u3000:
 10077   002112  5001               	movf	___fladd@b^0,w,c
 10078   002114  5C05               	subwf	___fladd@a^0,w,c
 10079   002116  6E09               	movwf	??___fladd^0,c
 10080   002118  5002               	movf	(___fladd@b+1)^0,w,c
 10081   00211A  5806               	subwfb	(___fladd@a+1)^0,w,c
 10082   00211C  6E0A               	movwf	(??___fladd+1)^0,c
 10083   00211E  5003               	movf	(___fladd@b+2)^0,w,c
 10084   002120  5807               	subwfb	(___fladd@a+2)^0,w,c
 10085   002122  6E0B               	movwf	(??___fladd+2)^0,c
 10086   002124  5004               	movf	(___fladd@b+3)^0,w,c
 10087   002126  5808               	subwfb	(___fladd@a+3)^0,w,c
 10088   002128  6E0C               	movwf	(??___fladd+3)^0,c
 10089   00212A  0EFF               	movlw	255
 10090   00212C  2409               	addwf	??___fladd^0,w,c
 10091   00212E  6E01               	movwf	___fladd@b^0,c
 10092   002130  0EFF               	movlw	255
 10093   002132  200A               	addwfc	(??___fladd+1)^0,w,c
 10094   002134  6E02               	movwf	(___fladd@b+1)^0,c
 10095   002136  0EFF               	movlw	255
 10096   002138  200B               	addwfc	(??___fladd+2)^0,w,c
 10097   00213A  6E03               	movwf	(___fladd@b+2)^0,c
 10098   00213C  0EFF               	movlw	255
 10099   00213E  200C               	addwfc	(??___fladd+3)^0,w,c
 10100   002140  6E04               	movwf	(___fladd@b+3)^0,c
 10101   002142  0E80               	movlw	128
 10102   002144  1A0D               	xorwf	___fladd@signs^0,f,c
 10103   002146  6C10               	negf	___fladd@grs^0,c
 10104   002148  5010               	movf	___fladd@grs^0,w,c
 10105   00214A  A4D8               	btfss	status,2,c
 10106   00214C  EFAA  F010         	goto	u3011
 10107   002150  EFAC  F010         	goto	u3010
 10108   002154                     u3011:
 10109   002154  EFBC  F010         	goto	l1207
 10110   002158                     u3010:
 10111   002158  0E01               	movlw	1
 10112   00215A  2601               	addwf	___fladd@b^0,f,c
 10113   00215C  0E00               	movlw	0
 10114   00215E  2202               	addwfc	(___fladd@b+1)^0,f,c
 10115   002160  2203               	addwfc	(___fladd@b+2)^0,f,c
 10116   002162  2204               	addwfc	(___fladd@b+3)^0,f,c
 10117   002164  EFBC  F010         	goto	l1207
 10118   002168                     l3606:
 10119   002168  5005               	movf	___fladd@a^0,w,c
 10120   00216A  5E01               	subwf	___fladd@b^0,f,c
 10121   00216C  5006               	movf	(___fladd@a+1)^0,w,c
 10122   00216E  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10123   002170  5007               	movf	(___fladd@a+2)^0,w,c
 10124   002172  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10125   002174  5008               	movf	(___fladd@a+3)^0,w,c
 10126   002176  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10127   002178                     l1207:
 10128   002178  5001               	movf	___fladd@b^0,w,c
 10129   00217A  1002               	iorwf	(___fladd@b+1)^0,w,c
 10130   00217C  1003               	iorwf	(___fladd@b+2)^0,w,c
 10131   00217E  1004               	iorwf	(___fladd@b+3)^0,w,c
 10132   002180  A4D8               	btfss	status,2,c
 10133   002182  EFC5  F010         	goto	u3021
 10134   002186  EFC7  F010         	goto	u3020
 10135   00218A                     u3021:
 10136   00218A  EFFC  F010         	goto	l3630
 10137   00218E                     u3020:
 10138   00218E  5010               	movf	___fladd@grs^0,w,c
 10139   002190  A4D8               	btfss	status,2,c
 10140   002192  EFCD  F010         	goto	u3031
 10141   002196  EFCF  F010         	goto	u3030
 10142   00219A                     u3031:
 10143   00219A  EFFC  F010         	goto	l3630
 10144   00219E                     u3030:
 10145   00219E  0E00               	movlw	0
 10146   0021A0  6E01               	movwf	?___fladd^0,c
 10147   0021A2  0E00               	movlw	0
 10148   0021A4  6E02               	movwf	(?___fladd+1)^0,c
 10149   0021A6  0E00               	movlw	0
 10150   0021A8  6E03               	movwf	(?___fladd+2)^0,c
 10151   0021AA  0E00               	movlw	0
 10152   0021AC  6E04               	movwf	(?___fladd+3)^0,c
 10153   0021AE  EF97  F011         	goto	l1199
 10154   0021B2                     l3614:
 10155   0021B2  90D8               	bcf	status,0,c
 10156   0021B4  3601               	rlcf	___fladd@b^0,f,c
 10157   0021B6  3602               	rlcf	(___fladd@b+1)^0,f,c
 10158   0021B8  3603               	rlcf	(___fladd@b+2)^0,f,c
 10159   0021BA  3604               	rlcf	(___fladd@b+3)^0,f,c
 10160   0021BC  AE10               	btfss	___fladd@grs^0,7,c
 10161   0021BE  EFE3  F010         	goto	u3041
 10162   0021C2  EFE5  F010         	goto	u3040
 10163   0021C6                     u3041:
 10164   0021C6  EFE6  F010         	goto	l3620
 10165   0021CA                     u3040:
 10166   0021CA  8001               	bsf	___fladd@b^0,0,c
 10167   0021CC                     l3620:
 10168   0021CC  A010               	btfss	___fladd@grs^0,0,c
 10169   0021CE  EFEB  F010         	goto	u3051
 10170   0021D2  EFED  F010         	goto	u3050
 10171   0021D6                     u3051:
 10172   0021D6  EFF1  F010         	goto	l3624
 10173   0021DA                     u3050:
 10174   0021DA  80D8               	bsf	status,0,c
 10175   0021DC  3610               	rlcf	___fladd@grs^0,f,c
 10176   0021DE  EFF3  F010         	goto	l3626
 10177   0021E2                     l3624:
 10178   0021E2  90D8               	bcf	status,0,c
 10179   0021E4  3610               	rlcf	___fladd@grs^0,f,c
 10180   0021E6                     l3626:
 10181   0021E6  500F               	movf	___fladd@bexp^0,w,c
 10182   0021E8  B4D8               	btfsc	status,2,c
 10183   0021EA  EFF9  F010         	goto	u3061
 10184   0021EE  EFFB  F010         	goto	u3060
 10185   0021F2                     u3061:
 10186   0021F2  EFFC  F010         	goto	l3630
 10187   0021F6                     u3060:
 10188   0021F6  060F               	decf	___fladd@bexp^0,f,c
 10189   0021F8                     l3630:
 10190   0021F8  AE03               	btfss	(___fladd@b+2)^0,7,c
 10191   0021FA  EF01  F011         	goto	u3071
 10192   0021FE  EF03  F011         	goto	u3070
 10193   002202                     u3071:
 10194   002202  EFD9  F010         	goto	l3614
 10195   002206                     u3070:
 10196   002206                     l3632:
 10197   002206  0E00               	movlw	0
 10198   002208  6E0E               	movwf	___fladd@aexp^0,c
 10199   00220A  AE10               	btfss	___fladd@grs^0,7,c
 10200   00220C  EF0A  F011         	goto	u3081
 10201   002210  EF0C  F011         	goto	u3080
 10202   002214                     u3081:
 10203   002214  EF24  F011         	goto	l1216
 10204   002218                     u3080:
 10205   002218  C010  F009         	movff	___fladd@grs,??___fladd
 10206   00221C  0E7F               	movlw	127
 10207   00221E  1609               	andwf	??___fladd^0,f,c
 10208   002220  B4D8               	btfsc	status,2,c
 10209   002222  EF15  F011         	goto	u3091
 10210   002226  EF17  F011         	goto	u3090
 10211   00222A                     u3091:
 10212   00222A  EF1B  F011         	goto	l1217
 10213   00222E                     u3090:
 10214   00222E                     l3638:
 10215   00222E  0E01               	movlw	1
 10216   002230  6E0E               	movwf	___fladd@aexp^0,c
 10217   002232  EF24  F011         	goto	l1216
 10218   002236                     l1217:
 10219   002236  A001               	btfss	___fladd@b^0,0,c
 10220   002238  EF20  F011         	goto	u3101
 10221   00223C  EF22  F011         	goto	u3100
 10222   002240                     u3101:
 10223   002240  EF24  F011         	goto	l1216
 10224   002244                     u3100:
 10225   002244  EF17  F011         	goto	l3638
 10226   002248                     l1216:
 10227   002248  500E               	movf	___fladd@aexp^0,w,c
 10228   00224A  B4D8               	btfsc	status,2,c
 10229   00224C  EF2A  F011         	goto	u3111
 10230   002250  EF2C  F011         	goto	u3110
 10231   002254                     u3111:
 10232   002254  EF57  F011         	goto	l3650
 10233   002258                     u3110:
 10234   002258  0E01               	movlw	1
 10235   00225A  2601               	addwf	___fladd@b^0,f,c
 10236   00225C  0E00               	movlw	0
 10237   00225E  2202               	addwfc	(___fladd@b+1)^0,f,c
 10238   002260  2203               	addwfc	(___fladd@b+2)^0,f,c
 10239   002262  2204               	addwfc	(___fladd@b+3)^0,f,c
 10240   002264  A004               	btfss	(___fladd@b+3)^0,0,c
 10241   002266  EF37  F011         	goto	u3121
 10242   00226A  EF39  F011         	goto	u3120
 10243   00226E                     u3121:
 10244   00226E  EF57  F011         	goto	l3650
 10245   002272                     u3120:
 10246   002272  C001  F009         	movff	___fladd@b,??___fladd
 10247   002276  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 10248   00227A  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 10249   00227E  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 10250   002282  340C               	rlcf	(??___fladd+3)^0,w,c
 10251   002284  320C               	rrcf	(??___fladd+3)^0,f,c
 10252   002286  320B               	rrcf	(??___fladd+2)^0,f,c
 10253   002288  320A               	rrcf	(??___fladd+1)^0,f,c
 10254   00228A  3209               	rrcf	??___fladd^0,f,c
 10255   00228C  C009  F001         	movff	??___fladd,___fladd@b
 10256   002290  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 10257   002294  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 10258   002298  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 10259   00229C  280F               	incf	___fladd@bexp^0,w,c
 10260   00229E  B4D8               	btfsc	status,2,c
 10261   0022A0  EF54  F011         	goto	u3131
 10262   0022A4  EF56  F011         	goto	u3130
 10263   0022A8                     u3131:
 10264   0022A8  EF57  F011         	goto	l3650
 10265   0022AC                     u3130:
 10266   0022AC  2A0F               	incf	___fladd@bexp^0,f,c
 10267   0022AE                     l3650:
 10268   0022AE  280F               	incf	___fladd@bexp^0,w,c
 10269   0022B0  B4D8               	btfsc	status,2,c
 10270   0022B2  EF5D  F011         	goto	u3141
 10271   0022B6  EF5F  F011         	goto	u3140
 10272   0022BA                     u3141:
 10273   0022BA  EF67  F011         	goto	l3654
 10274   0022BE                     u3140:
 10275   0022BE  500F               	movf	___fladd@bexp^0,w,c
 10276   0022C0  A4D8               	btfss	status,2,c
 10277   0022C2  EF65  F011         	goto	u3151
 10278   0022C6  EF67  F011         	goto	u3150
 10279   0022CA                     u3151:
 10280   0022CA  EF79  F011         	goto	l3658
 10281   0022CE                     u3150:
 10282   0022CE                     l3654:
 10283   0022CE  0E00               	movlw	0
 10284   0022D0  6E01               	movwf	___fladd@b^0,c
 10285   0022D2  0E00               	movlw	0
 10286   0022D4  6E02               	movwf	(___fladd@b+1)^0,c
 10287   0022D6  0E00               	movlw	0
 10288   0022D8  6E03               	movwf	(___fladd@b+2)^0,c
 10289   0022DA  0E00               	movlw	0
 10290   0022DC  6E04               	movwf	(___fladd@b+3)^0,c
 10291   0022DE  500F               	movf	___fladd@bexp^0,w,c
 10292   0022E0  A4D8               	btfss	status,2,c
 10293   0022E2  EF75  F011         	goto	u3161
 10294   0022E6  EF77  F011         	goto	u3160
 10295   0022EA                     u3161:
 10296   0022EA  EF79  F011         	goto	l3658
 10297   0022EE                     u3160:
 10298   0022EE  0E00               	movlw	0
 10299   0022F0  6E0D               	movwf	___fladd@signs^0,c
 10300   0022F2                     l3658:
 10301   0022F2  A00F               	btfss	___fladd@bexp^0,0,c
 10302   0022F4  EF7E  F011         	goto	u3171
 10303   0022F8  EF80  F011         	goto	u3170
 10304   0022FC                     u3171:
 10305   0022FC  EF83  F011         	goto	l3662
 10306   002300                     u3170:
 10307   002300  8E03               	bsf	(___fladd@b+2)^0,7,c
 10308   002302  EF84  F011         	goto	l3664
 10309   002306                     l3662:
 10310   002306  9E03               	bcf	(___fladd@b+2)^0,7,c
 10311   002308                     l3664:
 10312   002308  90D8               	bcf	status,0,c
 10313   00230A  300F               	rrcf	___fladd@bexp^0,w,c
 10314   00230C  6E04               	movwf	(___fladd@b+3)^0,c
 10315   00230E  AE0D               	btfss	___fladd@signs^0,7,c
 10316   002310  EF8C  F011         	goto	u3181
 10317   002314  EF8E  F011         	goto	u3180
 10318   002318                     u3181:
 10319   002318  EF8F  F011         	goto	l3670
 10320   00231C                     u3180:
 10321   00231C  8E04               	bsf	(___fladd@b+3)^0,7,c
 10322   00231E                     l3670:
 10323   00231E  C001  F001         	movff	___fladd@b,?___fladd
 10324   002322  C002  F002         	movff	___fladd@b+1,?___fladd+1
 10325   002326  C003  F003         	movff	___fladd@b+2,?___fladd+2
 10326   00232A  C004  F004         	movff	___fladd@b+3,?___fladd+3
 10327   00232E                     l1199:
 10328   00232E  0012               	return		;funcret
 10329   002330                     __end_of___fladd:
 10330                           	callstack 0
 10331                           
 10332 ;; *************** function ___flmul *****************
 10333 ;; Defined at:
 10334 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 10335 ;; Parameters:    Size  Location     Type
 10336 ;;  b               4   49[COMRAM] unsigned char 
 10337 ;;  a               4   53[COMRAM] unsigned char 
 10338 ;; Auto vars:     Size  Location     Type
 10339 ;;  prod            4   68[COMRAM] struct .
 10340 ;;  grs             4   62[COMRAM] unsigned long 
 10341 ;;  temp            2   72[COMRAM] struct .
 10342 ;;  bexp            1   67[COMRAM] unsigned char 
 10343 ;;  aexp            1   66[COMRAM] unsigned char 
 10344 ;;  sign            1   61[COMRAM] unsigned char 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  4   49[COMRAM] unsigned char 
 10347 ;; Registers used:
 10348 ;;		wreg, status,2, status,0, prodl, prodh
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10354 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10355 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10356 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10357 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10358 ;;Total ram usage:       25 bytes
 10359 ;; Hardware stack levels used: 1
 10360 ;; Hardware stack levels required when called: 1
 10361 ;; This function calls:
 10362 ;;		Nothing
 10363 ;; This function is called by:
 10364 ;;		_Colour_decider
 10365 ;;		_turnRight45
 10366 ;;		_turnLeft45
 10367 ;; This function uses a non-reentrant model
 10368 ;;
 10369                           
 10370                           	psect	text62
 10371   002330                     __ptext62:
 10372                           	callstack 0
 10373   002330                     ___flmul:
 10374                           	callstack 28
 10375   002330  5035               	movf	(___flmul@b+3)^0,w,c
 10376   002332  0B80               	andlw	128
 10377   002334  6E3E               	movwf	___flmul@sign^0,c
 10378   002336  5035               	movf	(___flmul@b+3)^0,w,c
 10379   002338  2435               	addwf	(___flmul@b+3)^0,w,c
 10380   00233A  6E44               	movwf	___flmul@bexp^0,c
 10381   00233C  AE34               	btfss	(___flmul@b+2)^0,7,c
 10382   00233E  EFA3  F011         	goto	u3461
 10383   002342  EFA5  F011         	goto	u3460
 10384   002346                     u3461:
 10385   002346  EFA6  F011         	goto	l3916
 10386   00234A                     u3460:
 10387   00234A  8044               	bsf	___flmul@bexp^0,0,c
 10388   00234C                     l3916:
 10389   00234C  5044               	movf	___flmul@bexp^0,w,c
 10390   00234E  B4D8               	btfsc	status,2,c
 10391   002350  EFAC  F011         	goto	u3471
 10392   002354  EFAE  F011         	goto	u3470
 10393   002358                     u3471:
 10394   002358  EFC1  F011         	goto	l3924
 10395   00235C                     u3470:
 10396   00235C  2844               	incf	___flmul@bexp^0,w,c
 10397   00235E  A4D8               	btfss	status,2,c
 10398   002360  EFB4  F011         	goto	u3481
 10399   002364  EFB6  F011         	goto	u3480
 10400   002368                     u3481:
 10401   002368  EFBE  F011         	goto	l3922
 10402   00236C                     u3480:
 10403   00236C  0E00               	movlw	0
 10404   00236E  6E32               	movwf	___flmul@b^0,c
 10405   002370  0E00               	movlw	0
 10406   002372  6E33               	movwf	(___flmul@b+1)^0,c
 10407   002374  0E00               	movlw	0
 10408   002376  6E34               	movwf	(___flmul@b+2)^0,c
 10409   002378  0E00               	movlw	0
 10410   00237A  6E35               	movwf	(___flmul@b+3)^0,c
 10411   00237C                     l3922:
 10412   00237C  8E34               	bsf	(___flmul@b+2)^0,7,c
 10413   00237E  EFC9  F011         	goto	l3926
 10414   002382                     l3924:
 10415   002382  0E00               	movlw	0
 10416   002384  6E32               	movwf	___flmul@b^0,c
 10417   002386  0E00               	movlw	0
 10418   002388  6E33               	movwf	(___flmul@b+1)^0,c
 10419   00238A  0E00               	movlw	0
 10420   00238C  6E34               	movwf	(___flmul@b+2)^0,c
 10421   00238E  0E00               	movlw	0
 10422   002390  6E35               	movwf	(___flmul@b+3)^0,c
 10423   002392                     l3926:
 10424   002392  5039               	movf	(___flmul@a+3)^0,w,c
 10425   002394  0B80               	andlw	128
 10426   002396  1A3E               	xorwf	___flmul@sign^0,f,c
 10427   002398  5039               	movf	(___flmul@a+3)^0,w,c
 10428   00239A  2439               	addwf	(___flmul@a+3)^0,w,c
 10429   00239C  6E43               	movwf	___flmul@aexp^0,c
 10430   00239E  AE38               	btfss	(___flmul@a+2)^0,7,c
 10431   0023A0  EFD4  F011         	goto	u3491
 10432   0023A4  EFD6  F011         	goto	u3490
 10433   0023A8                     u3491:
 10434   0023A8  EFD7  F011         	goto	l3934
 10435   0023AC                     u3490:
 10436   0023AC  8043               	bsf	___flmul@aexp^0,0,c
 10437   0023AE                     l3934:
 10438   0023AE  5043               	movf	___flmul@aexp^0,w,c
 10439   0023B0  B4D8               	btfsc	status,2,c
 10440   0023B2  EFDD  F011         	goto	u3501
 10441   0023B6  EFDF  F011         	goto	u3500
 10442   0023BA                     u3501:
 10443   0023BA  EFF2  F011         	goto	l3942
 10444   0023BE                     u3500:
 10445   0023BE  2843               	incf	___flmul@aexp^0,w,c
 10446   0023C0  A4D8               	btfss	status,2,c
 10447   0023C2  EFE5  F011         	goto	u3511
 10448   0023C6  EFE7  F011         	goto	u3510
 10449   0023CA                     u3511:
 10450   0023CA  EFEF  F011         	goto	l3940
 10451   0023CE                     u3510:
 10452   0023CE  0E00               	movlw	0
 10453   0023D0  6E36               	movwf	___flmul@a^0,c
 10454   0023D2  0E00               	movlw	0
 10455   0023D4  6E37               	movwf	(___flmul@a+1)^0,c
 10456   0023D6  0E00               	movlw	0
 10457   0023D8  6E38               	movwf	(___flmul@a+2)^0,c
 10458   0023DA  0E00               	movlw	0
 10459   0023DC  6E39               	movwf	(___flmul@a+3)^0,c
 10460   0023DE                     l3940:
 10461   0023DE  8E38               	bsf	(___flmul@a+2)^0,7,c
 10462   0023E0  EFFA  F011         	goto	l1276
 10463   0023E4                     l3942:
 10464   0023E4  0E00               	movlw	0
 10465   0023E6  6E36               	movwf	___flmul@a^0,c
 10466   0023E8  0E00               	movlw	0
 10467   0023EA  6E37               	movwf	(___flmul@a+1)^0,c
 10468   0023EC  0E00               	movlw	0
 10469   0023EE  6E38               	movwf	(___flmul@a+2)^0,c
 10470   0023F0  0E00               	movlw	0
 10471   0023F2  6E39               	movwf	(___flmul@a+3)^0,c
 10472   0023F4                     l1276:
 10473   0023F4  5043               	movf	___flmul@aexp^0,w,c
 10474   0023F6  B4D8               	btfsc	status,2,c
 10475   0023F8  EF00  F012         	goto	u3521
 10476   0023FC  EF02  F012         	goto	u3520
 10477   002400                     u3521:
 10478   002400  EF0A  F012         	goto	l3946
 10479   002404                     u3520:
 10480   002404  5044               	movf	___flmul@bexp^0,w,c
 10481   002406  A4D8               	btfss	status,2,c
 10482   002408  EF08  F012         	goto	u3531
 10483   00240C  EF0A  F012         	goto	u3530
 10484   002410                     u3531:
 10485   002410  EF14  F012         	goto	l3950
 10486   002414                     u3530:
 10487   002414                     l3946:
 10488   002414  0E00               	movlw	0
 10489   002416  6E32               	movwf	?___flmul^0,c
 10490   002418  0E00               	movlw	0
 10491   00241A  6E33               	movwf	(?___flmul+1)^0,c
 10492   00241C  0E00               	movlw	0
 10493   00241E  6E34               	movwf	(?___flmul+2)^0,c
 10494   002420  0E00               	movlw	0
 10495   002422  6E35               	movwf	(?___flmul+3)^0,c
 10496   002424  EFAC  F013         	goto	l1280
 10497   002428                     l3950:
 10498   002428  5038               	movf	(___flmul@a+2)^0,w,c
 10499   00242A  0232               	mulwf	___flmul@b^0,c
 10500   00242C  CFF3 F049          	movff	prodl,___flmul@temp
 10501   002430  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10502   002434  5049               	movf	___flmul@temp^0,w,c
 10503   002436  6E3F               	movwf	___flmul@grs^0,c
 10504   002438  6A40               	clrf	(___flmul@grs+1)^0,c
 10505   00243A  6A41               	clrf	(___flmul@grs+2)^0,c
 10506   00243C  6A42               	clrf	(___flmul@grs+3)^0,c
 10507   00243E  504A               	movf	(___flmul@temp+1)^0,w,c
 10508   002440  6E45               	movwf	___flmul@prod^0,c
 10509   002442  6A46               	clrf	(___flmul@prod+1)^0,c
 10510   002444  6A47               	clrf	(___flmul@prod+2)^0,c
 10511   002446  6A48               	clrf	(___flmul@prod+3)^0,c
 10512   002448  5037               	movf	(___flmul@a+1)^0,w,c
 10513   00244A  0233               	mulwf	(___flmul@b+1)^0,c
 10514   00244C  CFF3 F049          	movff	prodl,___flmul@temp
 10515   002450  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10516   002454  5049               	movf	___flmul@temp^0,w,c
 10517   002456  263F               	addwf	___flmul@grs^0,f,c
 10518   002458  0E00               	movlw	0
 10519   00245A  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10520   00245C  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10521   00245E  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10522   002460  504A               	movf	(___flmul@temp+1)^0,w,c
 10523   002462  2645               	addwf	___flmul@prod^0,f,c
 10524   002464  0E00               	movlw	0
 10525   002466  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10526   002468  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10527   00246A  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10528   00246C  5036               	movf	___flmul@a^0,w,c
 10529   00246E  0234               	mulwf	(___flmul@b+2)^0,c
 10530   002470  CFF3 F049          	movff	prodl,___flmul@temp
 10531   002474  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10532   002478  5049               	movf	___flmul@temp^0,w,c
 10533   00247A  263F               	addwf	___flmul@grs^0,f,c
 10534   00247C  0E00               	movlw	0
 10535   00247E  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10536   002480  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10537   002482  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10538   002484  504A               	movf	(___flmul@temp+1)^0,w,c
 10539   002486  2645               	addwf	___flmul@prod^0,f,c
 10540   002488  0E00               	movlw	0
 10541   00248A  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10542   00248C  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10543   00248E  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10544   002490  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10545   002494  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10546   002498  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10547   00249C  6A3F               	clrf	___flmul@grs^0,c
 10548   00249E  5036               	movf	___flmul@a^0,w,c
 10549   0024A0  0233               	mulwf	(___flmul@b+1)^0,c
 10550   0024A2  CFF3 F049          	movff	prodl,___flmul@temp
 10551   0024A6  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10552   0024AA  5049               	movf	___flmul@temp^0,w,c
 10553   0024AC  263F               	addwf	___flmul@grs^0,f,c
 10554   0024AE  504A               	movf	(___flmul@temp+1)^0,w,c
 10555   0024B0  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10556   0024B2  0E00               	movlw	0
 10557   0024B4  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10558   0024B6  0E00               	movlw	0
 10559   0024B8  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10560   0024BA  5037               	movf	(___flmul@a+1)^0,w,c
 10561   0024BC  0232               	mulwf	___flmul@b^0,c
 10562   0024BE  CFF3 F049          	movff	prodl,___flmul@temp
 10563   0024C2  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10564   0024C6  5049               	movf	___flmul@temp^0,w,c
 10565   0024C8  263F               	addwf	___flmul@grs^0,f,c
 10566   0024CA  504A               	movf	(___flmul@temp+1)^0,w,c
 10567   0024CC  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10568   0024CE  0E00               	movlw	0
 10569   0024D0  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10570   0024D2  0E00               	movlw	0
 10571   0024D4  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10572   0024D6  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10573   0024DA  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10574   0024DE  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10575   0024E2  6A3F               	clrf	___flmul@grs^0,c
 10576   0024E4  5036               	movf	___flmul@a^0,w,c
 10577   0024E6  0232               	mulwf	___flmul@b^0,c
 10578   0024E8  CFF3 F049          	movff	prodl,___flmul@temp
 10579   0024EC  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10580   0024F0  5049               	movf	___flmul@temp^0,w,c
 10581   0024F2  263F               	addwf	___flmul@grs^0,f,c
 10582   0024F4  504A               	movf	(___flmul@temp+1)^0,w,c
 10583   0024F6  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10584   0024F8  0E00               	movlw	0
 10585   0024FA  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10586   0024FC  0E00               	movlw	0
 10587   0024FE  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10588   002500  5038               	movf	(___flmul@a+2)^0,w,c
 10589   002502  0233               	mulwf	(___flmul@b+1)^0,c
 10590   002504  CFF3 F049          	movff	prodl,___flmul@temp
 10591   002508  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10592   00250C  5049               	movf	___flmul@temp^0,w,c
 10593   00250E  2645               	addwf	___flmul@prod^0,f,c
 10594   002510  504A               	movf	(___flmul@temp+1)^0,w,c
 10595   002512  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10596   002514  0E00               	movlw	0
 10597   002516  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10598   002518  0E00               	movlw	0
 10599   00251A  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10600   00251C  5037               	movf	(___flmul@a+1)^0,w,c
 10601   00251E  0234               	mulwf	(___flmul@b+2)^0,c
 10602   002520  CFF3 F049          	movff	prodl,___flmul@temp
 10603   002524  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10604   002528  5049               	movf	___flmul@temp^0,w,c
 10605   00252A  2645               	addwf	___flmul@prod^0,f,c
 10606   00252C  504A               	movf	(___flmul@temp+1)^0,w,c
 10607   00252E  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10608   002530  0E00               	movlw	0
 10609   002532  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10610   002534  0E00               	movlw	0
 10611   002536  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10612   002538  5038               	movf	(___flmul@a+2)^0,w,c
 10613   00253A  0234               	mulwf	(___flmul@b+2)^0,c
 10614   00253C  CFF3 F049          	movff	prodl,___flmul@temp
 10615   002540  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10616   002544  5049               	movf	___flmul@temp^0,w,c
 10617   002546  6E3A               	movwf	??___flmul^0,c
 10618   002548  504A               	movf	(___flmul@temp+1)^0,w,c
 10619   00254A  6E3B               	movwf	(??___flmul+1)^0,c
 10620   00254C  6A3C               	clrf	(??___flmul+2)^0,c
 10621   00254E  6A3D               	clrf	(??___flmul+3)^0,c
 10622   002550  C03C  F03D         	movff	??___flmul+2,??___flmul+3
 10623   002554  C03B  F03C         	movff	??___flmul+1,??___flmul+2
 10624   002558  C03A  F03B         	movff	??___flmul,??___flmul+1
 10625   00255C  6A3A               	clrf	??___flmul^0,c
 10626   00255E  503A               	movf	??___flmul^0,w,c
 10627   002560  2645               	addwf	___flmul@prod^0,f,c
 10628   002562  503B               	movf	(??___flmul+1)^0,w,c
 10629   002564  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10630   002566  503C               	movf	(??___flmul+2)^0,w,c
 10631   002568  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10632   00256A  503D               	movf	(??___flmul+3)^0,w,c
 10633   00256C  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10634   00256E  C03F  F03A         	movff	___flmul@grs,??___flmul
 10635   002572  C040  F03B         	movff	___flmul@grs+1,??___flmul+1
 10636   002576  C041  F03C         	movff	___flmul@grs+2,??___flmul+2
 10637   00257A  C042  F03D         	movff	___flmul@grs+3,??___flmul+3
 10638   00257E  0E19               	movlw	25
 10639   002580  EFC7  F012         	goto	u3540
 10640   002584                     u3545:
 10641   002584  90D8               	bcf	status,0,c
 10642   002586  323D               	rrcf	(??___flmul+3)^0,f,c
 10643   002588  323C               	rrcf	(??___flmul+2)^0,f,c
 10644   00258A  323B               	rrcf	(??___flmul+1)^0,f,c
 10645   00258C  323A               	rrcf	??___flmul^0,f,c
 10646   00258E                     u3540:
 10647   00258E  2EE8               	decfsz	wreg,f,c
 10648   002590  EFC2  F012         	goto	u3545
 10649   002594  503A               	movf	??___flmul^0,w,c
 10650   002596  2645               	addwf	___flmul@prod^0,f,c
 10651   002598  503B               	movf	(??___flmul+1)^0,w,c
 10652   00259A  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10653   00259C  503C               	movf	(??___flmul+2)^0,w,c
 10654   00259E  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10655   0025A0  503D               	movf	(??___flmul+3)^0,w,c
 10656   0025A2  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10657   0025A4  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10658   0025A8  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10659   0025AC  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10660   0025B0  6A3F               	clrf	___flmul@grs^0,c
 10661   0025B2  5043               	movf	___flmul@aexp^0,w,c
 10662   0025B4  C044  F03A         	movff	___flmul@bexp,??___flmul
 10663   0025B8  6A3B               	clrf	(??___flmul+1)^0,c
 10664   0025BA  263A               	addwf	??___flmul^0,f,c
 10665   0025BC  0E00               	movlw	0
 10666   0025BE  223B               	addwfc	(??___flmul+1)^0,f,c
 10667   0025C0  0E82               	movlw	130
 10668   0025C2  243A               	addwf	??___flmul^0,w,c
 10669   0025C4  6E49               	movwf	___flmul@temp^0,c
 10670   0025C6  0EFF               	movlw	255
 10671   0025C8  203B               	addwfc	(??___flmul+1)^0,w,c
 10672   0025CA  6E4A               	movwf	(___flmul@temp+1)^0,c
 10673   0025CC  EFFD  F012         	goto	l3998
 10674   0025D0                     l3992:
 10675   0025D0  90D8               	bcf	status,0,c
 10676   0025D2  3645               	rlcf	___flmul@prod^0,f,c
 10677   0025D4  3646               	rlcf	(___flmul@prod+1)^0,f,c
 10678   0025D6  3647               	rlcf	(___flmul@prod+2)^0,f,c
 10679   0025D8  3648               	rlcf	(___flmul@prod+3)^0,f,c
 10680   0025DA  AE42               	btfss	(___flmul@grs+3)^0,7,c
 10681   0025DC  EFF2  F012         	goto	u3551
 10682   0025E0  EFF4  F012         	goto	u3550
 10683   0025E4                     u3551:
 10684   0025E4  EFF5  F012         	goto	l1283
 10685   0025E8                     u3550:
 10686   0025E8  8045               	bsf	___flmul@prod^0,0,c
 10687   0025EA                     l1283:
 10688   0025EA  90D8               	bcf	status,0,c
 10689   0025EC  363F               	rlcf	___flmul@grs^0,f,c
 10690   0025EE  3640               	rlcf	(___flmul@grs+1)^0,f,c
 10691   0025F0  3641               	rlcf	(___flmul@grs+2)^0,f,c
 10692   0025F2  3642               	rlcf	(___flmul@grs+3)^0,f,c
 10693   0025F4  0649               	decf	___flmul@temp^0,f,c
 10694   0025F6  A0D8               	btfss	status,0,c
 10695   0025F8  064A               	decf	(___flmul@temp+1)^0,f,c
 10696   0025FA                     l3998:
 10697   0025FA  AE47               	btfss	(___flmul@prod+2)^0,7,c
 10698   0025FC  EF02  F013         	goto	u3561
 10699   002600  EF04  F013         	goto	u3560
 10700   002604                     u3561:
 10701   002604  EFE8  F012         	goto	l3992
 10702   002608                     u3560:
 10703   002608  0E00               	movlw	0
 10704   00260A  6E43               	movwf	___flmul@aexp^0,c
 10705   00260C  AE42               	btfss	(___flmul@grs+3)^0,7,c
 10706   00260E  EF0B  F013         	goto	u3571
 10707   002612  EF0D  F013         	goto	u3570
 10708   002616                     u3571:
 10709   002616  EF31  F013         	goto	l1285
 10710   00261A                     u3570:
 10711   00261A  0EFF               	movlw	255
 10712   00261C  143F               	andwf	___flmul@grs^0,w,c
 10713   00261E  6E3A               	movwf	??___flmul^0,c
 10714   002620  0EFF               	movlw	255
 10715   002622  1440               	andwf	(___flmul@grs+1)^0,w,c
 10716   002624  6E3B               	movwf	(??___flmul+1)^0,c
 10717   002626  0EFF               	movlw	255
 10718   002628  1441               	andwf	(___flmul@grs+2)^0,w,c
 10719   00262A  6E3C               	movwf	(??___flmul+2)^0,c
 10720   00262C  0E7F               	movlw	127
 10721   00262E  1442               	andwf	(___flmul@grs+3)^0,w,c
 10722   002630  6E3D               	movwf	(??___flmul+3)^0,c
 10723   002632  503A               	movf	??___flmul^0,w,c
 10724   002634  103B               	iorwf	(??___flmul+1)^0,w,c
 10725   002636  103C               	iorwf	(??___flmul+2)^0,w,c
 10726   002638  103D               	iorwf	(??___flmul+3)^0,w,c
 10727   00263A  B4D8               	btfsc	status,2,c
 10728   00263C  EF22  F013         	goto	u3581
 10729   002640  EF24  F013         	goto	u3580
 10730   002644                     u3581:
 10731   002644  EF28  F013         	goto	l1286
 10732   002648                     u3580:
 10733   002648                     l4006:
 10734   002648  0E01               	movlw	1
 10735   00264A  6E43               	movwf	___flmul@aexp^0,c
 10736   00264C  EF31  F013         	goto	l1285
 10737   002650                     l1286:
 10738   002650  A045               	btfss	___flmul@prod^0,0,c
 10739   002652  EF2D  F013         	goto	u3591
 10740   002656  EF2F  F013         	goto	u3590
 10741   00265A                     u3591:
 10742   00265A  EF31  F013         	goto	l1285
 10743   00265E                     u3590:
 10744   00265E  EF24  F013         	goto	l4006
 10745   002662                     l1285:
 10746   002662  5043               	movf	___flmul@aexp^0,w,c
 10747   002664  B4D8               	btfsc	status,2,c
 10748   002666  EF37  F013         	goto	u3601
 10749   00266A  EF39  F013         	goto	u3600
 10750   00266E                     u3601:
 10751   00266E  EF5D  F013         	goto	l4018
 10752   002672                     u3600:
 10753   002672  0E01               	movlw	1
 10754   002674  2645               	addwf	___flmul@prod^0,f,c
 10755   002676  0E00               	movlw	0
 10756   002678  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10757   00267A  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10758   00267C  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10759   00267E  A048               	btfss	(___flmul@prod+3)^0,0,c
 10760   002680  EF44  F013         	goto	u3611
 10761   002684  EF46  F013         	goto	u3610
 10762   002688                     u3611:
 10763   002688  EF5D  F013         	goto	l4018
 10764   00268C                     u3610:
 10765   00268C  C045  F03A         	movff	___flmul@prod,??___flmul
 10766   002690  C046  F03B         	movff	___flmul@prod+1,??___flmul+1
 10767   002694  C047  F03C         	movff	___flmul@prod+2,??___flmul+2
 10768   002698  C048  F03D         	movff	___flmul@prod+3,??___flmul+3
 10769   00269C  343D               	rlcf	(??___flmul+3)^0,w,c
 10770   00269E  323D               	rrcf	(??___flmul+3)^0,f,c
 10771   0026A0  323C               	rrcf	(??___flmul+2)^0,f,c
 10772   0026A2  323B               	rrcf	(??___flmul+1)^0,f,c
 10773   0026A4  323A               	rrcf	??___flmul^0,f,c
 10774   0026A6  C03A  F045         	movff	??___flmul,___flmul@prod
 10775   0026AA  C03B  F046         	movff	??___flmul+1,___flmul@prod+1
 10776   0026AE  C03C  F047         	movff	??___flmul+2,___flmul@prod+2
 10777   0026B2  C03D  F048         	movff	??___flmul+3,___flmul@prod+3
 10778   0026B6  4A49               	infsnz	___flmul@temp^0,f,c
 10779   0026B8  2A4A               	incf	(___flmul@temp+1)^0,f,c
 10780   0026BA                     l4018:
 10781   0026BA  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 10782   0026BC  EF68  F013         	goto	u3621
 10783   0026C0  504A               	movf	(___flmul@temp+1)^0,w,c
 10784   0026C2  E108               	bnz	u3620
 10785   0026C4  2849               	incf	___flmul@temp^0,w,c
 10786   0026C6  A0D8               	btfss	status,0,c
 10787   0026C8  EF68  F013         	goto	u3621
 10788   0026CC  EF6A  F013         	goto	u3620
 10789   0026D0                     u3621:
 10790   0026D0  EF74  F013         	goto	l4022
 10791   0026D4                     u3620:
 10792   0026D4  0E00               	movlw	0
 10793   0026D6  6E45               	movwf	___flmul@prod^0,c
 10794   0026D8  0E00               	movlw	0
 10795   0026DA  6E46               	movwf	(___flmul@prod+1)^0,c
 10796   0026DC  0E80               	movlw	128
 10797   0026DE  6E47               	movwf	(___flmul@prod+2)^0,c
 10798   0026E0  0E7F               	movlw	127
 10799   0026E2  6E48               	movwf	(___flmul@prod+3)^0,c
 10800   0026E4  EFA2  F013         	goto	l4034
 10801   0026E8                     l4022:
 10802   0026E8  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 10803   0026EA  EF81  F013         	goto	u3630
 10804   0026EE  504A               	movf	(___flmul@temp+1)^0,w,c
 10805   0026F0  E106               	bnz	u3631
 10806   0026F2  0449               	decf	___flmul@temp^0,w,c
 10807   0026F4  B0D8               	btfsc	status,0,c
 10808   0026F6  EF7F  F013         	goto	u3631
 10809   0026FA  EF81  F013         	goto	u3630
 10810   0026FE                     u3631:
 10811   0026FE  EF8D  F013         	goto	l1293
 10812   002702                     u3630:
 10813   002702  0E00               	movlw	0
 10814   002704  6E45               	movwf	___flmul@prod^0,c
 10815   002706  0E00               	movlw	0
 10816   002708  6E46               	movwf	(___flmul@prod+1)^0,c
 10817   00270A  0E00               	movlw	0
 10818   00270C  6E47               	movwf	(___flmul@prod+2)^0,c
 10819   00270E  0E00               	movlw	0
 10820   002710  6E48               	movwf	(___flmul@prod+3)^0,c
 10821   002712  0E00               	movlw	0
 10822   002714  6E3E               	movwf	___flmul@sign^0,c
 10823   002716  EFA2  F013         	goto	l4034
 10824   00271A                     l1293:
 10825   00271A  C049  F044         	movff	___flmul@temp,___flmul@bexp
 10826   00271E  0EFF               	movlw	255
 10827   002720  1645               	andwf	___flmul@prod^0,f,c
 10828   002722  0EFF               	movlw	255
 10829   002724  1646               	andwf	(___flmul@prod+1)^0,f,c
 10830   002726  0E7F               	movlw	127
 10831   002728  1647               	andwf	(___flmul@prod+2)^0,f,c
 10832   00272A  0E00               	movlw	0
 10833   00272C  1648               	andwf	(___flmul@prod+3)^0,f,c
 10834   00272E  A044               	btfss	___flmul@bexp^0,0,c
 10835   002730  EF9C  F013         	goto	u3641
 10836   002734  EF9E  F013         	goto	u3640
 10837   002738                     u3641:
 10838   002738  EF9F  F013         	goto	l4032
 10839   00273C                     u3640:
 10840   00273C  8E47               	bsf	(___flmul@prod+2)^0,7,c
 10841   00273E                     l4032:
 10842   00273E  90D8               	bcf	status,0,c
 10843   002740  3044               	rrcf	___flmul@bexp^0,w,c
 10844   002742  6E48               	movwf	(___flmul@prod+3)^0,c
 10845   002744                     l4034:
 10846   002744  503E               	movf	___flmul@sign^0,w,c
 10847   002746  1248               	iorwf	(___flmul@prod+3)^0,f,c
 10848   002748  C045  F032         	movff	___flmul@prod,?___flmul
 10849   00274C  C046  F033         	movff	___flmul@prod+1,?___flmul+1
 10850   002750  C047  F034         	movff	___flmul@prod+2,?___flmul+2
 10851   002754  C048  F035         	movff	___flmul@prod+3,?___flmul+3
 10852   002758                     l1280:
 10853   002758  0012               	return		;funcret
 10854   00275A                     __end_of___flmul:
 10855                           	callstack 0
 10856                           
 10857 ;; *************** function ___flge *****************
 10858 ;; Defined at:
 10859 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 10860 ;; Parameters:    Size  Location     Type
 10861 ;;  ff1             4    0[COMRAM] unsigned char 
 10862 ;;  ff2             4    4[COMRAM] unsigned char 
 10863 ;; Auto vars:     Size  Location     Type
 10864 ;;		None
 10865 ;; Return value:  Size  Location     Type
 10866 ;;		None               void
 10867 ;; Registers used:
 10868 ;;		wreg, status,2, status,0
 10869 ;; Tracked objects:
 10870 ;;		On entry : 0/0
 10871 ;;		On exit  : 0/0
 10872 ;;		Unchanged: 0/0
 10873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10874 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10876 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10877 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10878 ;;Total ram usage:       12 bytes
 10879 ;; Hardware stack levels used: 1
 10880 ;; Hardware stack levels required when called: 1
 10881 ;; This function calls:
 10882 ;;		Nothing
 10883 ;; This function is called by:
 10884 ;;		_Colour_decider
 10885 ;; This function uses a non-reentrant model
 10886 ;;
 10887                           
 10888                           	psect	text63
 10889   003A2A                     __ptext63:
 10890                           	callstack 0
 10891   003A2A                     ___flge:
 10892                           	callstack 28
 10893   003A2A  0E00               	movlw	0
 10894   003A2C  1401               	andwf	___flge@ff1^0,w,c
 10895   003A2E  6E09               	movwf	??___flge^0,c
 10896   003A30  0E00               	movlw	0
 10897   003A32  1402               	andwf	(___flge@ff1+1)^0,w,c
 10898   003A34  6E0A               	movwf	(??___flge+1)^0,c
 10899   003A36  0E80               	movlw	128
 10900   003A38  1403               	andwf	(___flge@ff1+2)^0,w,c
 10901   003A3A  6E0B               	movwf	(??___flge+2)^0,c
 10902   003A3C  0E7F               	movlw	127
 10903   003A3E  1404               	andwf	(___flge@ff1+3)^0,w,c
 10904   003A40  6E0C               	movwf	(??___flge+3)^0,c
 10905   003A42  5009               	movf	??___flge^0,w,c
 10906   003A44  100A               	iorwf	(??___flge+1)^0,w,c
 10907   003A46  100B               	iorwf	(??___flge+2)^0,w,c
 10908   003A48  100C               	iorwf	(??___flge+3)^0,w,c
 10909   003A4A  A4D8               	btfss	status,2,c
 10910   003A4C  EF2A  F01D         	goto	u3681
 10911   003A50  EF2C  F01D         	goto	u3680
 10912   003A54                     u3681:
 10913   003A54  EF34  F01D         	goto	l4066
 10914   003A58                     u3680:
 10915   003A58  0E00               	movlw	0
 10916   003A5A  6E01               	movwf	___flge@ff1^0,c
 10917   003A5C  0E00               	movlw	0
 10918   003A5E  6E02               	movwf	(___flge@ff1+1)^0,c
 10919   003A60  0E00               	movlw	0
 10920   003A62  6E03               	movwf	(___flge@ff1+2)^0,c
 10921   003A64  0E00               	movlw	0
 10922   003A66  6E04               	movwf	(___flge@ff1+3)^0,c
 10923   003A68                     l4066:
 10924   003A68  0E00               	movlw	0
 10925   003A6A  1405               	andwf	___flge@ff2^0,w,c
 10926   003A6C  6E09               	movwf	??___flge^0,c
 10927   003A6E  0E00               	movlw	0
 10928   003A70  1406               	andwf	(___flge@ff2+1)^0,w,c
 10929   003A72  6E0A               	movwf	(??___flge+1)^0,c
 10930   003A74  0E80               	movlw	128
 10931   003A76  1407               	andwf	(___flge@ff2+2)^0,w,c
 10932   003A78  6E0B               	movwf	(??___flge+2)^0,c
 10933   003A7A  0E7F               	movlw	127
 10934   003A7C  1408               	andwf	(___flge@ff2+3)^0,w,c
 10935   003A7E  6E0C               	movwf	(??___flge+3)^0,c
 10936   003A80  5009               	movf	??___flge^0,w,c
 10937   003A82  100A               	iorwf	(??___flge+1)^0,w,c
 10938   003A84  100B               	iorwf	(??___flge+2)^0,w,c
 10939   003A86  100C               	iorwf	(??___flge+3)^0,w,c
 10940   003A88  A4D8               	btfss	status,2,c
 10941   003A8A  EF49  F01D         	goto	u3691
 10942   003A8E  EF4B  F01D         	goto	u3690
 10943   003A92                     u3691:
 10944   003A92  EF53  F01D         	goto	l4070
 10945   003A96                     u3690:
 10946   003A96  0E00               	movlw	0
 10947   003A98  6E05               	movwf	___flge@ff2^0,c
 10948   003A9A  0E00               	movlw	0
 10949   003A9C  6E06               	movwf	(___flge@ff2+1)^0,c
 10950   003A9E  0E00               	movlw	0
 10951   003AA0  6E07               	movwf	(___flge@ff2+2)^0,c
 10952   003AA2  0E00               	movlw	0
 10953   003AA4  6E08               	movwf	(___flge@ff2+3)^0,c
 10954   003AA6                     l4070:
 10955   003AA6  AE04               	btfss	(___flge@ff1+3)^0,7,c
 10956   003AA8  EF58  F01D         	goto	u3701
 10957   003AAC  EF5A  F01D         	goto	u3700
 10958   003AB0                     u3701:
 10959   003AB0  EF63  F01D         	goto	l4074
 10960   003AB4                     u3700:
 10961   003AB4  6C01               	negf	___flge@ff1^0,c
 10962   003AB6  1E02               	comf	(___flge@ff1+1)^0,f,c
 10963   003AB8  B0D8               	btfsc	status,0,c
 10964   003ABA  2A02               	incf	(___flge@ff1+1)^0,f,c
 10965   003ABC  1E03               	comf	(___flge@ff1+2)^0,f,c
 10966   003ABE  B0D8               	btfsc	status,0,c
 10967   003AC0  2A03               	incf	(___flge@ff1+2)^0,f,c
 10968   003AC2  0E80               	movlw	128
 10969   003AC4  5604               	subfwb	(___flge@ff1+3)^0,f,c
 10970   003AC6                     l4074:
 10971   003AC6  AE08               	btfss	(___flge@ff2+3)^0,7,c
 10972   003AC8  EF68  F01D         	goto	u3711
 10973   003ACC  EF6A  F01D         	goto	u3710
 10974   003AD0                     u3711:
 10975   003AD0  EF73  F01D         	goto	l927
 10976   003AD4                     u3710:
 10977   003AD4  6C05               	negf	___flge@ff2^0,c
 10978   003AD6  1E06               	comf	(___flge@ff2+1)^0,f,c
 10979   003AD8  B0D8               	btfsc	status,0,c
 10980   003ADA  2A06               	incf	(___flge@ff2+1)^0,f,c
 10981   003ADC  1E07               	comf	(___flge@ff2+2)^0,f,c
 10982   003ADE  B0D8               	btfsc	status,0,c
 10983   003AE0  2A07               	incf	(___flge@ff2+2)^0,f,c
 10984   003AE2  0E80               	movlw	128
 10985   003AE4  5608               	subfwb	(___flge@ff2+3)^0,f,c
 10986   003AE6                     l927:
 10987   003AE6  0E00               	movlw	0
 10988   003AE8  1A01               	xorwf	___flge@ff1^0,f,c
 10989   003AEA  0E00               	movlw	0
 10990   003AEC  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 10991   003AEE  0E00               	movlw	0
 10992   003AF0  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 10993   003AF2  0E80               	movlw	128
 10994   003AF4  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 10995   003AF6  0E00               	movlw	0
 10996   003AF8  1A05               	xorwf	___flge@ff2^0,f,c
 10997   003AFA  0E00               	movlw	0
 10998   003AFC  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 10999   003AFE  0E00               	movlw	0
 11000   003B00  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11001   003B02  0E80               	movlw	128
 11002   003B04  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11003   003B06  5005               	movf	___flge@ff2^0,w,c
 11004   003B08  5C01               	subwf	___flge@ff1^0,w,c
 11005   003B0A  5006               	movf	(___flge@ff2+1)^0,w,c
 11006   003B0C  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11007   003B0E  5007               	movf	(___flge@ff2+2)^0,w,c
 11008   003B10  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11009   003B12  5008               	movf	(___flge@ff2+3)^0,w,c
 11010   003B14  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11011   003B16  B0D8               	btfsc	status,0,c
 11012   003B18  EF90  F01D         	goto	u3721
 11013   003B1C  EF92  F01D         	goto	u3720
 11014   003B20                     u3721:
 11015   003B20  EF95  F01D         	goto	l4080
 11016   003B24                     u3720:
 11017   003B24  90D8               	bcf	status,0,c
 11018   003B26  EF96  F01D         	goto	l932
 11019   003B2A                     l4080:
 11020   003B2A  80D8               	bsf	status,0,c
 11021   003B2C                     l932:
 11022   003B2C  0012               	return		;funcret
 11023   003B2E                     __end_of___flge:
 11024                           	callstack 0
 11025                           
 11026 ;; *************** function ___fleq *****************
 11027 ;; Defined at:
 11028 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 11029 ;; Parameters:    Size  Location     Type
 11030 ;;  ff1             4   24[COMRAM] unsigned char 
 11031 ;;  ff2             4   28[COMRAM] unsigned char 
 11032 ;; Auto vars:     Size  Location     Type
 11033 ;;		None
 11034 ;; Return value:  Size  Location     Type
 11035 ;;		None               void
 11036 ;; Registers used:
 11037 ;;		wreg, status,2, status,0
 11038 ;; Tracked objects:
 11039 ;;		On entry : 0/0
 11040 ;;		On exit  : 0/0
 11041 ;;		Unchanged: 0/0
 11042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11043 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11045 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11046 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11047 ;;Total ram usage:       12 bytes
 11048 ;; Hardware stack levels used: 1
 11049 ;; Hardware stack levels required when called: 1
 11050 ;; This function calls:
 11051 ;;		Nothing
 11052 ;; This function is called by:
 11053 ;;		_Colour_decider
 11054 ;; This function uses a non-reentrant model
 11055 ;;
 11056                           
 11057                           	psect	text64
 11058   003BF8                     __ptext64:
 11059                           	callstack 0
 11060   003BF8                     ___fleq:
 11061                           	callstack 28
 11062   003BF8  0E00               	movlw	0
 11063   003BFA  1419               	andwf	___fleq@ff1^0,w,c
 11064   003BFC  6E21               	movwf	??___fleq^0,c
 11065   003BFE  0E00               	movlw	0
 11066   003C00  141A               	andwf	(___fleq@ff1+1)^0,w,c
 11067   003C02  6E22               	movwf	(??___fleq+1)^0,c
 11068   003C04  0E80               	movlw	128
 11069   003C06  141B               	andwf	(___fleq@ff1+2)^0,w,c
 11070   003C08  6E23               	movwf	(??___fleq+2)^0,c
 11071   003C0A  0E7F               	movlw	127
 11072   003C0C  141C               	andwf	(___fleq@ff1+3)^0,w,c
 11073   003C0E  6E24               	movwf	(??___fleq+3)^0,c
 11074   003C10  5021               	movf	??___fleq^0,w,c
 11075   003C12  1022               	iorwf	(??___fleq+1)^0,w,c
 11076   003C14  1023               	iorwf	(??___fleq+2)^0,w,c
 11077   003C16  1024               	iorwf	(??___fleq+3)^0,w,c
 11078   003C18  A4D8               	btfss	status,2,c
 11079   003C1A  EF11  F01E         	goto	u3651
 11080   003C1E  EF13  F01E         	goto	u3650
 11081   003C22                     u3651:
 11082   003C22  EF1B  F01E         	goto	l4050
 11083   003C26                     u3650:
 11084   003C26  0E00               	movlw	0
 11085   003C28  6E19               	movwf	___fleq@ff1^0,c
 11086   003C2A  0E00               	movlw	0
 11087   003C2C  6E1A               	movwf	(___fleq@ff1+1)^0,c
 11088   003C2E  0E00               	movlw	0
 11089   003C30  6E1B               	movwf	(___fleq@ff1+2)^0,c
 11090   003C32  0E00               	movlw	0
 11091   003C34  6E1C               	movwf	(___fleq@ff1+3)^0,c
 11092   003C36                     l4050:
 11093   003C36  0E00               	movlw	0
 11094   003C38  141D               	andwf	___fleq@ff2^0,w,c
 11095   003C3A  6E21               	movwf	??___fleq^0,c
 11096   003C3C  0E00               	movlw	0
 11097   003C3E  141E               	andwf	(___fleq@ff2+1)^0,w,c
 11098   003C40  6E22               	movwf	(??___fleq+1)^0,c
 11099   003C42  0E80               	movlw	128
 11100   003C44  141F               	andwf	(___fleq@ff2+2)^0,w,c
 11101   003C46  6E23               	movwf	(??___fleq+2)^0,c
 11102   003C48  0E7F               	movlw	127
 11103   003C4A  1420               	andwf	(___fleq@ff2+3)^0,w,c
 11104   003C4C  6E24               	movwf	(??___fleq+3)^0,c
 11105   003C4E  5021               	movf	??___fleq^0,w,c
 11106   003C50  1022               	iorwf	(??___fleq+1)^0,w,c
 11107   003C52  1023               	iorwf	(??___fleq+2)^0,w,c
 11108   003C54  1024               	iorwf	(??___fleq+3)^0,w,c
 11109   003C56  A4D8               	btfss	status,2,c
 11110   003C58  EF30  F01E         	goto	u3661
 11111   003C5C  EF32  F01E         	goto	u3660
 11112   003C60                     u3661:
 11113   003C60  EF3A  F01E         	goto	l4054
 11114   003C64                     u3660:
 11115   003C64  0E00               	movlw	0
 11116   003C66  6E1D               	movwf	___fleq@ff2^0,c
 11117   003C68  0E00               	movlw	0
 11118   003C6A  6E1E               	movwf	(___fleq@ff2+1)^0,c
 11119   003C6C  0E00               	movlw	0
 11120   003C6E  6E1F               	movwf	(___fleq@ff2+2)^0,c
 11121   003C70  0E00               	movlw	0
 11122   003C72  6E20               	movwf	(___fleq@ff2+3)^0,c
 11123   003C74                     l4054:
 11124   003C74  501D               	movf	___fleq@ff2^0,w,c
 11125   003C76  1819               	xorwf	___fleq@ff1^0,w,c
 11126   003C78  E10F               	bnz	u3670
 11127   003C7A  501E               	movf	(___fleq@ff2+1)^0,w,c
 11128   003C7C  181A               	xorwf	(___fleq@ff1+1)^0,w,c
 11129   003C7E  E10C               	bnz	u3670
 11130   003C80  501F               	movf	(___fleq@ff2+2)^0,w,c
 11131   003C82  181B               	xorwf	(___fleq@ff1+2)^0,w,c
 11132   003C84  E109               	bnz	u3670
 11133   003C86  5020               	movf	(___fleq@ff2+3)^0,w,c
 11134   003C88  181C               	xorwf	(___fleq@ff1+3)^0,w,c
 11135   003C8A  B4D8               	btfsc	status,2,c
 11136   003C8C  EF4A  F01E         	goto	u3671
 11137   003C90  EF4C  F01E         	goto	u3670
 11138   003C94                     u3671:
 11139   003C94  EF4F  F01E         	goto	l4058
 11140   003C98                     u3670:
 11141   003C98  90D8               	bcf	status,0,c
 11142   003C9A  EF50  F01E         	goto	l921
 11143   003C9E                     l4058:
 11144   003C9E  80D8               	bsf	status,0,c
 11145   003CA0                     l921:
 11146   003CA0  0012               	return		;funcret
 11147   003CA2                     __end_of___fleq:
 11148                           	callstack 0
 11149                           
 11150 ;; *************** function ___fldiv *****************
 11151 ;; Defined at:
 11152 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11153 ;; Parameters:    Size  Location     Type
 11154 ;;  b               4   24[COMRAM] unsigned char 
 11155 ;;  a               4   28[COMRAM] unsigned char 
 11156 ;; Auto vars:     Size  Location     Type
 11157 ;;  grs             4   43[COMRAM] unsigned long 
 11158 ;;  rem             4   36[COMRAM] unsigned long 
 11159 ;;  new_exp         2   41[COMRAM] short 
 11160 ;;  aexp            1   48[COMRAM] unsigned char 
 11161 ;;  bexp            1   47[COMRAM] unsigned char 
 11162 ;;  sign            1   40[COMRAM] unsigned char 
 11163 ;; Return value:  Size  Location     Type
 11164 ;;                  4   24[COMRAM] unsigned char 
 11165 ;; Registers used:
 11166 ;;		wreg, status,2, status,0
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11172 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11173 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11174 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11175 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11176 ;;Total ram usage:       25 bytes
 11177 ;; Hardware stack levels used: 1
 11178 ;; Hardware stack levels required when called: 1
 11179 ;; This function calls:
 11180 ;;		Nothing
 11181 ;; This function is called by:
 11182 ;;		_colour_rel
 11183 ;;		_Colour_decider
 11184 ;; This function uses a non-reentrant model
 11185 ;;
 11186                           
 11187                           	psect	text65
 11188   00275A                     __ptext65:
 11189                           	callstack 0
 11190   00275A                     ___fldiv:
 11191                           	callstack 28
 11192   00275A  501C               	movf	(___fldiv@b+3)^0,w,c
 11193   00275C  0B80               	andlw	128
 11194   00275E  6E29               	movwf	___fldiv@sign^0,c
 11195   002760  501C               	movf	(___fldiv@b+3)^0,w,c
 11196   002762  241C               	addwf	(___fldiv@b+3)^0,w,c
 11197   002764  6E30               	movwf	___fldiv@bexp^0,c
 11198   002766  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11199   002768  EFB8  F013         	goto	u3231
 11200   00276C  EFBA  F013         	goto	u3230
 11201   002770                     u3231:
 11202   002770  EFBB  F013         	goto	l3778
 11203   002774                     u3230:
 11204   002774  8030               	bsf	___fldiv@bexp^0,0,c
 11205   002776                     l3778:
 11206   002776  5030               	movf	___fldiv@bexp^0,w,c
 11207   002778  B4D8               	btfsc	status,2,c
 11208   00277A  EFC1  F013         	goto	u3241
 11209   00277E  EFC3  F013         	goto	u3240
 11210   002782                     u3241:
 11211   002782  EFD8  F013         	goto	l3788
 11212   002786                     u3240:
 11213   002786  2830               	incf	___fldiv@bexp^0,w,c
 11214   002788  A4D8               	btfss	status,2,c
 11215   00278A  EFC9  F013         	goto	u3251
 11216   00278E  EFCB  F013         	goto	u3250
 11217   002792                     u3251:
 11218   002792  EFD3  F013         	goto	l3784
 11219   002796                     u3250:
 11220   002796  0E00               	movlw	0
 11221   002798  6E19               	movwf	___fldiv@b^0,c
 11222   00279A  0E00               	movlw	0
 11223   00279C  6E1A               	movwf	(___fldiv@b+1)^0,c
 11224   00279E  0E00               	movlw	0
 11225   0027A0  6E1B               	movwf	(___fldiv@b+2)^0,c
 11226   0027A2  0E00               	movlw	0
 11227   0027A4  6E1C               	movwf	(___fldiv@b+3)^0,c
 11228   0027A6                     l3784:
 11229   0027A6  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 11230   0027A8  0E00               	movlw	0
 11231   0027AA  6E1C               	movwf	(___fldiv@b+3)^0,c
 11232   0027AC  EFE0  F013         	goto	l3790
 11233   0027B0                     l3788:
 11234   0027B0  0E00               	movlw	0
 11235   0027B2  6E19               	movwf	___fldiv@b^0,c
 11236   0027B4  0E00               	movlw	0
 11237   0027B6  6E1A               	movwf	(___fldiv@b+1)^0,c
 11238   0027B8  0E00               	movlw	0
 11239   0027BA  6E1B               	movwf	(___fldiv@b+2)^0,c
 11240   0027BC  0E00               	movlw	0
 11241   0027BE  6E1C               	movwf	(___fldiv@b+3)^0,c
 11242   0027C0                     l3790:
 11243   0027C0  5020               	movf	(___fldiv@a+3)^0,w,c
 11244   0027C2  0B80               	andlw	128
 11245   0027C4  1A29               	xorwf	___fldiv@sign^0,f,c
 11246   0027C6  5020               	movf	(___fldiv@a+3)^0,w,c
 11247   0027C8  2420               	addwf	(___fldiv@a+3)^0,w,c
 11248   0027CA  6E31               	movwf	___fldiv@aexp^0,c
 11249   0027CC  AE1F               	btfss	(___fldiv@a+2)^0,7,c
 11250   0027CE  EFEB  F013         	goto	u3261
 11251   0027D2  EFED  F013         	goto	u3260
 11252   0027D6                     u3261:
 11253   0027D6  EFEE  F013         	goto	l3798
 11254   0027DA                     u3260:
 11255   0027DA  8031               	bsf	___fldiv@aexp^0,0,c
 11256   0027DC                     l3798:
 11257   0027DC  5031               	movf	___fldiv@aexp^0,w,c
 11258   0027DE  B4D8               	btfsc	status,2,c
 11259   0027E0  EFF4  F013         	goto	u3271
 11260   0027E4  EFF6  F013         	goto	u3270
 11261   0027E8                     u3271:
 11262   0027E8  EF0B  F014         	goto	l3808
 11263   0027EC                     u3270:
 11264   0027EC  2831               	incf	___fldiv@aexp^0,w,c
 11265   0027EE  A4D8               	btfss	status,2,c
 11266   0027F0  EFFC  F013         	goto	u3281
 11267   0027F4  EFFE  F013         	goto	u3280
 11268   0027F8                     u3281:
 11269   0027F8  EF06  F014         	goto	l3804
 11270   0027FC                     u3280:
 11271   0027FC  0E00               	movlw	0
 11272   0027FE  6E1D               	movwf	___fldiv@a^0,c
 11273   002800  0E00               	movlw	0
 11274   002802  6E1E               	movwf	(___fldiv@a+1)^0,c
 11275   002804  0E00               	movlw	0
 11276   002806  6E1F               	movwf	(___fldiv@a+2)^0,c
 11277   002808  0E00               	movlw	0
 11278   00280A  6E20               	movwf	(___fldiv@a+3)^0,c
 11279   00280C                     l3804:
 11280   00280C  8E1F               	bsf	(___fldiv@a+2)^0,7,c
 11281   00280E  0E00               	movlw	0
 11282   002810  6E20               	movwf	(___fldiv@a+3)^0,c
 11283   002812  EF13  F014         	goto	l3810
 11284   002816                     l3808:
 11285   002816  0E00               	movlw	0
 11286   002818  6E1D               	movwf	___fldiv@a^0,c
 11287   00281A  0E00               	movlw	0
 11288   00281C  6E1E               	movwf	(___fldiv@a+1)^0,c
 11289   00281E  0E00               	movlw	0
 11290   002820  6E1F               	movwf	(___fldiv@a+2)^0,c
 11291   002822  0E00               	movlw	0
 11292   002824  6E20               	movwf	(___fldiv@a+3)^0,c
 11293   002826                     l3810:
 11294   002826  501D               	movf	___fldiv@a^0,w,c
 11295   002828  101E               	iorwf	(___fldiv@a+1)^0,w,c
 11296   00282A  101F               	iorwf	(___fldiv@a+2)^0,w,c
 11297   00282C  1020               	iorwf	(___fldiv@a+3)^0,w,c
 11298   00282E  A4D8               	btfss	status,2,c
 11299   002830  EF1C  F014         	goto	u3291
 11300   002834  EF1E  F014         	goto	u3290
 11301   002838                     u3291:
 11302   002838  EF36  F014         	goto	l3822
 11303   00283C                     u3290:
 11304   00283C  0E00               	movlw	0
 11305   00283E  6E19               	movwf	___fldiv@b^0,c
 11306   002840  0E00               	movlw	0
 11307   002842  6E1A               	movwf	(___fldiv@b+1)^0,c
 11308   002844  0E00               	movlw	0
 11309   002846  6E1B               	movwf	(___fldiv@b+2)^0,c
 11310   002848  0E00               	movlw	0
 11311   00284A  6E1C               	movwf	(___fldiv@b+3)^0,c
 11312   00284C  0E80               	movlw	128
 11313   00284E  121B               	iorwf	(___fldiv@b+2)^0,f,c
 11314   002850  0E7F               	movlw	127
 11315   002852  121C               	iorwf	(___fldiv@b+3)^0,f,c
 11316   002854                     l3816:
 11317   002854  5029               	movf	___fldiv@sign^0,w,c
 11318   002856  121C               	iorwf	(___fldiv@b+3)^0,f,c
 11319   002858  C019  F019         	movff	___fldiv@b,?___fldiv
 11320   00285C  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
 11321   002860  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
 11322   002864  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
 11323   002868  EF79  F015         	goto	l1244
 11324   00286C                     l3822:
 11325   00286C  5030               	movf	___fldiv@bexp^0,w,c
 11326   00286E  A4D8               	btfss	status,2,c
 11327   002870  EF3C  F014         	goto	u3301
 11328   002874  EF3E  F014         	goto	u3300
 11329   002878                     u3301:
 11330   002878  EF48  F014         	goto	l3830
 11331   00287C                     u3300:
 11332   00287C  0E00               	movlw	0
 11333   00287E  6E19               	movwf	?___fldiv^0,c
 11334   002880  0E00               	movlw	0
 11335   002882  6E1A               	movwf	(?___fldiv+1)^0,c
 11336   002884  0E00               	movlw	0
 11337   002886  6E1B               	movwf	(?___fldiv+2)^0,c
 11338   002888  0E00               	movlw	0
 11339   00288A  6E1C               	movwf	(?___fldiv+3)^0,c
 11340   00288C  EF79  F015         	goto	l1244
 11341   002890                     l3830:
 11342   002890  5031               	movf	___fldiv@aexp^0,w,c
 11343   002892  C030  F021         	movff	___fldiv@bexp,??___fldiv
 11344   002896  6A22               	clrf	(??___fldiv+1)^0,c
 11345   002898  5E21               	subwf	??___fldiv^0,f,c
 11346   00289A  0E00               	movlw	0
 11347   00289C  5A22               	subwfb	(??___fldiv+1)^0,f,c
 11348   00289E  0E7F               	movlw	127
 11349   0028A0  2421               	addwf	??___fldiv^0,w,c
 11350   0028A2  6E2A               	movwf	___fldiv@new_exp^0,c
 11351   0028A4  0E00               	movlw	0
 11352   0028A6  2022               	addwfc	(??___fldiv+1)^0,w,c
 11353   0028A8  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11354   0028AA  C019  F025         	movff	___fldiv@b,___fldiv@rem
 11355   0028AE  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
 11356   0028B2  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
 11357   0028B6  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
 11358   0028BA  0E00               	movlw	0
 11359   0028BC  6E19               	movwf	___fldiv@b^0,c
 11360   0028BE  0E00               	movlw	0
 11361   0028C0  6E1A               	movwf	(___fldiv@b+1)^0,c
 11362   0028C2  0E00               	movlw	0
 11363   0028C4  6E1B               	movwf	(___fldiv@b+2)^0,c
 11364   0028C6  0E00               	movlw	0
 11365   0028C8  6E1C               	movwf	(___fldiv@b+3)^0,c
 11366   0028CA  0E00               	movlw	0
 11367   0028CC  6E2C               	movwf	___fldiv@grs^0,c
 11368   0028CE  0E00               	movlw	0
 11369   0028D0  6E2D               	movwf	(___fldiv@grs+1)^0,c
 11370   0028D2  0E00               	movlw	0
 11371   0028D4  6E2E               	movwf	(___fldiv@grs+2)^0,c
 11372   0028D6  0E00               	movlw	0
 11373   0028D8  6E2F               	movwf	(___fldiv@grs+3)^0,c
 11374   0028DA  0E00               	movlw	0
 11375   0028DC  6E31               	movwf	___fldiv@aexp^0,c
 11376   0028DE  EFA9  F014         	goto	l1246
 11377   0028E2                     l3840:
 11378   0028E2  5031               	movf	___fldiv@aexp^0,w,c
 11379   0028E4  B4D8               	btfsc	status,2,c
 11380   0028E6  EF77  F014         	goto	u3311
 11381   0028EA  EF79  F014         	goto	u3310
 11382   0028EE                     u3311:
 11383   0028EE  EF90  F014         	goto	l3848
 11384   0028F2                     u3310:
 11385   0028F2  90D8               	bcf	status,0,c
 11386   0028F4  3625               	rlcf	___fldiv@rem^0,f,c
 11387   0028F6  3626               	rlcf	(___fldiv@rem+1)^0,f,c
 11388   0028F8  3627               	rlcf	(___fldiv@rem+2)^0,f,c
 11389   0028FA  3628               	rlcf	(___fldiv@rem+3)^0,f,c
 11390   0028FC  90D8               	bcf	status,0,c
 11391   0028FE  3619               	rlcf	___fldiv@b^0,f,c
 11392   002900  361A               	rlcf	(___fldiv@b+1)^0,f,c
 11393   002902  361B               	rlcf	(___fldiv@b+2)^0,f,c
 11394   002904  361C               	rlcf	(___fldiv@b+3)^0,f,c
 11395   002906  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11396   002908  EF88  F014         	goto	u3321
 11397   00290C  EF8A  F014         	goto	u3320
 11398   002910                     u3321:
 11399   002910  EF8B  F014         	goto	l1249
 11400   002914                     u3320:
 11401   002914  8019               	bsf	___fldiv@b^0,0,c
 11402   002916                     l1249:
 11403   002916  90D8               	bcf	status,0,c
 11404   002918  362C               	rlcf	___fldiv@grs^0,f,c
 11405   00291A  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 11406   00291C  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 11407   00291E  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 11408   002920                     l3848:
 11409   002920  501D               	movf	___fldiv@a^0,w,c
 11410   002922  5C25               	subwf	___fldiv@rem^0,w,c
 11411   002924  501E               	movf	(___fldiv@a+1)^0,w,c
 11412   002926  5826               	subwfb	(___fldiv@rem+1)^0,w,c
 11413   002928  501F               	movf	(___fldiv@a+2)^0,w,c
 11414   00292A  5827               	subwfb	(___fldiv@rem+2)^0,w,c
 11415   00292C  5020               	movf	(___fldiv@a+3)^0,w,c
 11416   00292E  5828               	subwfb	(___fldiv@rem+3)^0,w,c
 11417   002930  A0D8               	btfss	status,0,c
 11418   002932  EF9D  F014         	goto	u3331
 11419   002936  EF9F  F014         	goto	u3330
 11420   00293A                     u3331:
 11421   00293A  EFA8  F014         	goto	l3854
 11422   00293E                     u3330:
 11423   00293E  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
 11424   002940  501D               	movf	___fldiv@a^0,w,c
 11425   002942  5E25               	subwf	___fldiv@rem^0,f,c
 11426   002944  501E               	movf	(___fldiv@a+1)^0,w,c
 11427   002946  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
 11428   002948  501F               	movf	(___fldiv@a+2)^0,w,c
 11429   00294A  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
 11430   00294C  5020               	movf	(___fldiv@a+3)^0,w,c
 11431   00294E  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
 11432   002950                     l3854:
 11433   002950  2A31               	incf	___fldiv@aexp^0,f,c
 11434   002952                     l1246:
 11435   002952  0E19               	movlw	25
 11436   002954  6431               	cpfsgt	___fldiv@aexp^0,c
 11437   002956  EFAF  F014         	goto	u3341
 11438   00295A  EFB1  F014         	goto	u3340
 11439   00295E                     u3341:
 11440   00295E  EF71  F014         	goto	l3840
 11441   002962                     u3340:
 11442   002962  5025               	movf	___fldiv@rem^0,w,c
 11443   002964  1026               	iorwf	(___fldiv@rem+1)^0,w,c
 11444   002966  1027               	iorwf	(___fldiv@rem+2)^0,w,c
 11445   002968  1028               	iorwf	(___fldiv@rem+3)^0,w,c
 11446   00296A  B4D8               	btfsc	status,2,c
 11447   00296C  EFBA  F014         	goto	u3351
 11448   002970  EFBC  F014         	goto	u3350
 11449   002974                     u3351:
 11450   002974  EFD4  F014         	goto	l3866
 11451   002978                     u3350:
 11452   002978  802C               	bsf	___fldiv@grs^0,0,c
 11453   00297A  EFD4  F014         	goto	l3866
 11454   00297E                     l3860:
 11455   00297E  90D8               	bcf	status,0,c
 11456   002980  3619               	rlcf	___fldiv@b^0,f,c
 11457   002982  361A               	rlcf	(___fldiv@b+1)^0,f,c
 11458   002984  361B               	rlcf	(___fldiv@b+2)^0,f,c
 11459   002986  361C               	rlcf	(___fldiv@b+3)^0,f,c
 11460   002988  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11461   00298A  EFC9  F014         	goto	u3361
 11462   00298E  EFCB  F014         	goto	u3360
 11463   002992                     u3361:
 11464   002992  EFCC  F014         	goto	l1255
 11465   002996                     u3360:
 11466   002996  8019               	bsf	___fldiv@b^0,0,c
 11467   002998                     l1255:
 11468   002998  90D8               	bcf	status,0,c
 11469   00299A  362C               	rlcf	___fldiv@grs^0,f,c
 11470   00299C  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 11471   00299E  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 11472   0029A0  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 11473   0029A2  062A               	decf	___fldiv@new_exp^0,f,c
 11474   0029A4  A0D8               	btfss	status,0,c
 11475   0029A6  062B               	decf	(___fldiv@new_exp+1)^0,f,c
 11476   0029A8                     l3866:
 11477   0029A8  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11478   0029AA  EFD9  F014         	goto	u3371
 11479   0029AE  EFDB  F014         	goto	u3370
 11480   0029B2                     u3371:
 11481   0029B2  EFBF  F014         	goto	l3860
 11482   0029B6                     u3370:
 11483   0029B6  0E00               	movlw	0
 11484   0029B8  6E31               	movwf	___fldiv@aexp^0,c
 11485   0029BA  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11486   0029BC  EFE2  F014         	goto	u3381
 11487   0029C0  EFE4  F014         	goto	u3380
 11488   0029C4                     u3381:
 11489   0029C4  EF08  F015         	goto	l1257
 11490   0029C8                     u3380:
 11491   0029C8  0EFF               	movlw	255
 11492   0029CA  142C               	andwf	___fldiv@grs^0,w,c
 11493   0029CC  6E21               	movwf	??___fldiv^0,c
 11494   0029CE  0EFF               	movlw	255
 11495   0029D0  142D               	andwf	(___fldiv@grs+1)^0,w,c
 11496   0029D2  6E22               	movwf	(??___fldiv+1)^0,c
 11497   0029D4  0EFF               	movlw	255
 11498   0029D6  142E               	andwf	(___fldiv@grs+2)^0,w,c
 11499   0029D8  6E23               	movwf	(??___fldiv+2)^0,c
 11500   0029DA  0E7F               	movlw	127
 11501   0029DC  142F               	andwf	(___fldiv@grs+3)^0,w,c
 11502   0029DE  6E24               	movwf	(??___fldiv+3)^0,c
 11503   0029E0  5021               	movf	??___fldiv^0,w,c
 11504   0029E2  1022               	iorwf	(??___fldiv+1)^0,w,c
 11505   0029E4  1023               	iorwf	(??___fldiv+2)^0,w,c
 11506   0029E6  1024               	iorwf	(??___fldiv+3)^0,w,c
 11507   0029E8  B4D8               	btfsc	status,2,c
 11508   0029EA  EFF9  F014         	goto	u3391
 11509   0029EE  EFFB  F014         	goto	u3390
 11510   0029F2                     u3391:
 11511   0029F2  EFFF  F014         	goto	l1258
 11512   0029F6                     u3390:
 11513   0029F6                     l3874:
 11514   0029F6  0E01               	movlw	1
 11515   0029F8  6E31               	movwf	___fldiv@aexp^0,c
 11516   0029FA  EF08  F015         	goto	l1257
 11517   0029FE                     l1258:
 11518   0029FE  A019               	btfss	___fldiv@b^0,0,c
 11519   002A00  EF04  F015         	goto	u3401
 11520   002A04  EF06  F015         	goto	u3400
 11521   002A08                     u3401:
 11522   002A08  EF08  F015         	goto	l1257
 11523   002A0C                     u3400:
 11524   002A0C  EFFB  F014         	goto	l3874
 11525   002A10                     l1257:
 11526   002A10  5031               	movf	___fldiv@aexp^0,w,c
 11527   002A12  B4D8               	btfsc	status,2,c
 11528   002A14  EF0E  F015         	goto	u3411
 11529   002A18  EF10  F015         	goto	u3410
 11530   002A1C                     u3411:
 11531   002A1C  EF34  F015         	goto	l3886
 11532   002A20                     u3410:
 11533   002A20  0E01               	movlw	1
 11534   002A22  2619               	addwf	___fldiv@b^0,f,c
 11535   002A24  0E00               	movlw	0
 11536   002A26  221A               	addwfc	(___fldiv@b+1)^0,f,c
 11537   002A28  221B               	addwfc	(___fldiv@b+2)^0,f,c
 11538   002A2A  221C               	addwfc	(___fldiv@b+3)^0,f,c
 11539   002A2C  A01C               	btfss	(___fldiv@b+3)^0,0,c
 11540   002A2E  EF1B  F015         	goto	u3421
 11541   002A32  EF1D  F015         	goto	u3420
 11542   002A36                     u3421:
 11543   002A36  EF34  F015         	goto	l3886
 11544   002A3A                     u3420:
 11545   002A3A  C019  F021         	movff	___fldiv@b,??___fldiv
 11546   002A3E  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
 11547   002A42  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
 11548   002A46  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
 11549   002A4A  3424               	rlcf	(??___fldiv+3)^0,w,c
 11550   002A4C  3224               	rrcf	(??___fldiv+3)^0,f,c
 11551   002A4E  3223               	rrcf	(??___fldiv+2)^0,f,c
 11552   002A50  3222               	rrcf	(??___fldiv+1)^0,f,c
 11553   002A52  3221               	rrcf	??___fldiv^0,f,c
 11554   002A54  C021  F019         	movff	??___fldiv,___fldiv@b
 11555   002A58  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
 11556   002A5C  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
 11557   002A60  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
 11558   002A64  4A2A               	infsnz	___fldiv@new_exp^0,f,c
 11559   002A66  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
 11560   002A68                     l3886:
 11561   002A68  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11562   002A6A  EF3F  F015         	goto	u3431
 11563   002A6E  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 11564   002A70  E108               	bnz	u3430
 11565   002A72  282A               	incf	___fldiv@new_exp^0,w,c
 11566   002A74  A0D8               	btfss	status,0,c
 11567   002A76  EF3F  F015         	goto	u3431
 11568   002A7A  EF41  F015         	goto	u3430
 11569   002A7E                     u3431:
 11570   002A7E  EF4C  F015         	goto	l3890
 11571   002A82                     u3430:
 11572   002A82  0E00               	movlw	0
 11573   002A84  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11574   002A86  682A               	setf	___fldiv@new_exp^0,c
 11575   002A88  0E00               	movlw	0
 11576   002A8A  6E19               	movwf	___fldiv@b^0,c
 11577   002A8C  0E00               	movlw	0
 11578   002A8E  6E1A               	movwf	(___fldiv@b+1)^0,c
 11579   002A90  0E00               	movlw	0
 11580   002A92  6E1B               	movwf	(___fldiv@b+2)^0,c
 11581   002A94  0E00               	movlw	0
 11582   002A96  6E1C               	movwf	(___fldiv@b+3)^0,c
 11583   002A98                     l3890:
 11584   002A98  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11585   002A9A  EF59  F015         	goto	u3440
 11586   002A9E  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 11587   002AA0  E106               	bnz	u3441
 11588   002AA2  042A               	decf	___fldiv@new_exp^0,w,c
 11589   002AA4  B0D8               	btfsc	status,0,c
 11590   002AA6  EF57  F015         	goto	u3441
 11591   002AAA  EF59  F015         	goto	u3440
 11592   002AAE                     u3441:
 11593   002AAE  EF67  F015         	goto	l3894
 11594   002AB2                     u3440:
 11595   002AB2  0E00               	movlw	0
 11596   002AB4  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11597   002AB6  0E00               	movlw	0
 11598   002AB8  6E2A               	movwf	___fldiv@new_exp^0,c
 11599   002ABA  0E00               	movlw	0
 11600   002ABC  6E19               	movwf	___fldiv@b^0,c
 11601   002ABE  0E00               	movlw	0
 11602   002AC0  6E1A               	movwf	(___fldiv@b+1)^0,c
 11603   002AC2  0E00               	movlw	0
 11604   002AC4  6E1B               	movwf	(___fldiv@b+2)^0,c
 11605   002AC6  0E00               	movlw	0
 11606   002AC8  6E1C               	movwf	(___fldiv@b+3)^0,c
 11607   002ACA  0E00               	movlw	0
 11608   002ACC  6E29               	movwf	___fldiv@sign^0,c
 11609   002ACE                     l3894:
 11610   002ACE  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
 11611   002AD2  A030               	btfss	___fldiv@bexp^0,0,c
 11612   002AD4  EF6E  F015         	goto	u3451
 11613   002AD8  EF70  F015         	goto	u3450
 11614   002ADC                     u3451:
 11615   002ADC  EF73  F015         	goto	l3900
 11616   002AE0                     u3450:
 11617   002AE0  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 11618   002AE2  EF74  F015         	goto	l3902
 11619   002AE6                     l3900:
 11620   002AE6  9E1B               	bcf	(___fldiv@b+2)^0,7,c
 11621   002AE8                     l3902:
 11622   002AE8  90D8               	bcf	status,0,c
 11623   002AEA  3030               	rrcf	___fldiv@bexp^0,w,c
 11624   002AEC  6E1C               	movwf	(___fldiv@b+3)^0,c
 11625   002AEE  EF2A  F014         	goto	l3816
 11626   002AF2                     l1244:
 11627   002AF2  0012               	return		;funcret
 11628   002AF4                     __end_of___fldiv:
 11629                           	callstack 0
 11630                           
 11631 ;; *************** function _HighISR *****************
 11632 ;; Defined at:
 11633 ;;		line 59 in file "interrupts.c"
 11634 ;; Parameters:    Size  Location     Type
 11635 ;;		None
 11636 ;; Auto vars:     Size  Location     Type
 11637 ;;		None
 11638 ;; Return value:  Size  Location     Type
 11639 ;;                  1    wreg      void 
 11640 ;; Registers used:
 11641 ;;		None
 11642 ;; Tracked objects:
 11643 ;;		On entry : 0/0
 11644 ;;		On exit  : 0/0
 11645 ;;		Unchanged: 0/0
 11646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11651 ;;Total ram usage:        0 bytes
 11652 ;; Hardware stack levels used: 1
 11653 ;; This function calls:
 11654 ;;		Nothing
 11655 ;; This function is called by:
 11656 ;;		Interrupt level 2
 11657 ;; This function uses a non-reentrant model
 11658 ;;
 11659                           
 11660                           	psect	intcode
 11661   000008                     __pintcode:
 11662                           	callstack 0
 11663   000008                     _HighISR:
 11664                           	callstack 22
 11665                           
 11666                           ;incstack = 0
 11667   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11668   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11669   00000C  0011               	retfie		f
 11670   00000E                     __end_of_HighISR:
 11671                           	callstack 0
 11672                           
 11673                           	psect	rparam
 11674   000000                     
 11675                           	psect	temp
 11676   00005F                     btemp:
 11677                           	callstack 0
 11678   00005F                     	ds	1
 11679   000000                     int$flags	set	btemp
 11680   000000                     wtemp8	set	btemp+1
 11681   000000                     ttemp5	set	btemp+1
 11682   000000                     ttemp6	set	btemp+4
 11683   000000                     ttemp7	set	btemp+8
 11684                           
 11685                           	psect	idloc
 11686                           
 11687                           ;Config register IDLOC0 @ 0x200000
 11688                           ;	unspecified, using default values
 11689   200000                     	org	2097152
 11690   200000  0FFF               	dw	4095
 11691                           
 11692                           ;Config register IDLOC1 @ 0x200002
 11693                           ;	unspecified, using default values
 11694   200002                     	org	2097154
 11695   200002  0FFF               	dw	4095
 11696                           
 11697                           ;Config register IDLOC2 @ 0x200004
 11698                           ;	unspecified, using default values
 11699   200004                     	org	2097156
 11700   200004  0FFF               	dw	4095
 11701                           
 11702                           ;Config register IDLOC3 @ 0x200006
 11703                           ;	unspecified, using default values
 11704   200006                     	org	2097158
 11705   200006  0FFF               	dw	4095
 11706                           
 11707                           ;Config register IDLOC4 @ 0x200008
 11708                           ;	unspecified, using default values
 11709   200008                     	org	2097160
 11710   200008  0FFF               	dw	4095
 11711                           
 11712                           ;Config register IDLOC5 @ 0x20000A
 11713                           ;	unspecified, using default values
 11714   20000A                     	org	2097162
 11715   20000A  0FFF               	dw	4095
 11716                           
 11717                           ;Config register IDLOC6 @ 0x20000C
 11718                           ;	unspecified, using default values
 11719   20000C                     	org	2097164
 11720   20000C  0FFF               	dw	4095
 11721                           
 11722                           ;Config register IDLOC7 @ 0x20000E
 11723                           ;	unspecified, using default values
 11724   20000E                     	org	2097166
 11725   20000E  0FFF               	dw	4095
 11726                           
 11727                           	psect	config
 11728                           
 11729                           ;Config register CONFIG1L @ 0x300000
 11730                           ;	External Oscillator mode Selection bits
 11731                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11732                           ;	Power-up default value for COSC bits
 11733                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11734   300000                     	org	3145728
 11735   300000  AA                 	db	170
 11736                           
 11737                           ;Config register CONFIG1H @ 0x300001
 11738                           ;	unspecified, using default values
 11739                           ;	Clock Out Enable bit
 11740                           ;	CLKOUTEN = 0x1, unprogrammed default
 11741                           ;	Clock Switch Enable bit
 11742                           ;	CSWEN = 0x1, unprogrammed default
 11743                           ;	Fail-Safe Clock Monitor Enable bit
 11744                           ;	FCMEN = 0x1, unprogrammed default
 11745   300001                     	org	3145729
 11746   300001  FF                 	db	255
 11747                           
 11748                           ;Config register CONFIG2L @ 0x300002
 11749                           ;	unspecified, using default values
 11750                           ;	Master Clear Enable bit
 11751                           ;	MCLRE = 0x1, unprogrammed default
 11752                           ;	Power-up Timer Enable bit
 11753                           ;	PWRTE = 0x1, unprogrammed default
 11754                           ;	Low-power BOR enable bit
 11755                           ;	LPBOREN = 0x1, unprogrammed default
 11756                           ;	Brown-out Reset Enable bits
 11757                           ;	BOREN = 0x3, unprogrammed default
 11758   300002                     	org	3145730
 11759   300002  FF                 	db	255
 11760                           
 11761                           ;Config register CONFIG2H @ 0x300003
 11762                           ;	unspecified, using default values
 11763                           ;	Brown Out Reset Voltage selection bits
 11764                           ;	BORV = 0x3, unprogrammed default
 11765                           ;	ZCD Disable bit
 11766                           ;	ZCD = 0x1, unprogrammed default
 11767                           ;	PPSLOCK bit One-Way Set Enable bit
 11768                           ;	PPS1WAY = 0x1, unprogrammed default
 11769                           ;	Stack Full/Underflow Reset Enable bit
 11770                           ;	STVREN = 0x1, unprogrammed default
 11771                           ;	Debugger Enable bit
 11772                           ;	DEBUG = 0x1, unprogrammed default
 11773                           ;	Extended Instruction Set Enable bit
 11774                           ;	XINST = 0x1, unprogrammed default
 11775   300003                     	org	3145731
 11776   300003  FF                 	db	255
 11777                           
 11778                           ;Config register CONFIG3L @ 0x300004
 11779                           ;	WDT Period Select bits
 11780                           ;	WDTCPS = 0x1F, unprogrammed default
 11781                           ;	WDT operating mode
 11782                           ;	WDTE = OFF, WDT Disabled
 11783   300004                     	org	3145732
 11784   300004  9F                 	db	159
 11785                           
 11786                           ;Config register CONFIG3H @ 0x300005
 11787                           ;	unspecified, using default values
 11788                           ;	WDT Window Select bits
 11789                           ;	WDTCWS = 0x7, unprogrammed default
 11790                           ;	WDT input clock selector
 11791                           ;	WDTCCS = 0x7, unprogrammed default
 11792   300005                     	org	3145733
 11793   300005  FF                 	db	255
 11794                           
 11795                           ;Config register CONFIG4L @ 0x300006
 11796                           ;	unspecified, using default values
 11797                           ;	Write Protection Block 0
 11798                           ;	WRT0 = 0x1, unprogrammed default
 11799                           ;	Write Protection Block 1
 11800                           ;	WRT1 = 0x1, unprogrammed default
 11801                           ;	Write Protection Block 2
 11802                           ;	WRT2 = 0x1, unprogrammed default
 11803                           ;	Write Protection Block 3
 11804                           ;	WRT3 = 0x1, unprogrammed default
 11805                           ;	Write Protection Block 3
 11806                           ;	WRT4 = 0x1, unprogrammed default
 11807                           ;	Write Protection Block 3
 11808                           ;	WRT5 = 0x1, unprogrammed default
 11809                           ;	Write Protection Block 3
 11810                           ;	WRT6 = 0x1, unprogrammed default
 11811                           ;	Write Protection Block 3
 11812                           ;	WRT7 = 0x1, unprogrammed default
 11813   300006                     	org	3145734
 11814   300006  FF                 	db	255
 11815                           
 11816                           ;Config register CONFIG4H @ 0x300007
 11817                           ;	unspecified, using default values
 11818                           ;	Configuration Register Write Protection bit
 11819                           ;	WRTC = 0x1, unprogrammed default
 11820                           ;	Boot Block Write Protection bit
 11821                           ;	WRTB = 0x1, unprogrammed default
 11822                           ;	Data EEPROM Write Protection bit
 11823                           ;	WRTD = 0x1, unprogrammed default
 11824                           ;	Scanner Enable bit
 11825                           ;	SCANE = 0x1, unprogrammed default
 11826                           ;	Low Voltage Programming Enable bit
 11827                           ;	LVP = 0x1, unprogrammed default
 11828   300007                     	org	3145735
 11829   300007  FF                 	db	255
 11830                           
 11831                           ;Config register CONFIG5L @ 0x300008
 11832                           ;	unspecified, using default values
 11833                           ;	UserNVM Program Memory Code Protection bit
 11834                           ;	CP = 0x1, unprogrammed default
 11835                           ;	DataNVM Memory Code Protection bit
 11836                           ;	CPD = 0x1, unprogrammed default
 11837   300008                     	org	3145736
 11838   300008  FF                 	db	255
 11839                           
 11840                           ;Config register CONFIG5H @ 0x300009
 11841                           ;	unspecified, using default values
 11842   300009                     	org	3145737
 11843   300009  FF                 	db	255
 11844                           
 11845                           ;Config register CONFIG6L @ 0x30000A
 11846                           ;	unspecified, using default values
 11847                           ;	Table Read Protection Block 0
 11848                           ;	EBTR0 = 0x1, unprogrammed default
 11849                           ;	Table Read Protection Block 1
 11850                           ;	EBTR1 = 0x1, unprogrammed default
 11851                           ;	Table Read Protection Block 2
 11852                           ;	EBTR2 = 0x1, unprogrammed default
 11853                           ;	Table Read Protection Block 3
 11854                           ;	EBTR3 = 0x1, unprogrammed default
 11855                           ;	Table Read Protection Block 4
 11856                           ;	EBTR4 = 0x1, unprogrammed default
 11857                           ;	Table Read Protection Block 5
 11858                           ;	EBTR5 = 0x1, unprogrammed default
 11859                           ;	Table Read Protection Block 6
 11860                           ;	EBTR6 = 0x1, unprogrammed default
 11861                           ;	Table Read Protection Block 7
 11862                           ;	EBTR7 = 0x1, unprogrammed default
 11863   30000A                     	org	3145738
 11864   30000A  FF                 	db	255
 11865                           
 11866                           ;Config register CONFIG6H @ 0x30000B
 11867                           ;	unspecified, using default values
 11868                           ;	Boot Block Table Read Protection bit
 11869                           ;	EBTRB = 0x1, unprogrammed default
 11870   30000B                     	org	3145739
 11871   30000B  FF                 	db	255
 11872                           tosu	equ	0xFFF
 11873                           tosh	equ	0xFFE
 11874                           tosl	equ	0xFFD
 11875                           stkptr	equ	0xFFC
 11876                           pclatu	equ	0xFFB
 11877                           pclath	equ	0xFFA
 11878                           pcl	equ	0xFF9
 11879                           tblptru	equ	0xFF8
 11880                           tblptrh	equ	0xFF7
 11881                           tblptrl	equ	0xFF6
 11882                           tablat	equ	0xFF5
 11883                           prodh	equ	0xFF4
 11884                           prodl	equ	0xFF3
 11885                           indf0	equ	0xFEF
 11886                           postinc0	equ	0xFEE
 11887                           postdec0	equ	0xFED
 11888                           preinc0	equ	0xFEC
 11889                           plusw0	equ	0xFEB
 11890                           fsr0h	equ	0xFEA
 11891                           fsr0l	equ	0xFE9
 11892                           wreg	equ	0xFE8
 11893                           indf1	equ	0xFE7
 11894                           postinc1	equ	0xFE6
 11895                           postdec1	equ	0xFE5
 11896                           preinc1	equ	0xFE4
 11897                           plusw1	equ	0xFE3
 11898                           fsr1h	equ	0xFE2
 11899                           fsr1l	equ	0xFE1
 11900                           bsr	equ	0xFE0
 11901                           indf2	equ	0xFDF
 11902                           postinc2	equ	0xFDE
 11903                           postdec2	equ	0xFDD
 11904                           preinc2	equ	0xFDC
 11905                           plusw2	equ	0xFDB
 11906                           fsr2h	equ	0xFDA
 11907                           fsr2l	equ	0xFD9
 11908                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        7
    BSS         325
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160    144     159
    BANK1           256      0     213
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2454$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2401$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2401$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_turnLeft45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_turnRight45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _fullSpeedAhead->_setMotorPWM
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Colour_decider

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               114   114      0  292928
                                             88 COMRAM     2     2      0
                                             32 BANK0    112   112      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    5722
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                             13     9      4  115191
                                             35 COMRAM    11     7      4
                           _BlueMove
                   _Forwardhalfblock
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                     _fullSpeedAhead
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   14100
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   14708
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   15468
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   15468
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   14860
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   14860
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   15620
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    7824
                                             49 COMRAM    28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   21910
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    7810
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2157
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    9251
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   21302
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _turnLeft45                                           6     2      4    7202
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2157
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6594
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    7354
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3633
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   20547
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     801
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5321
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    4086
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2320
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3800
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     494
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2159
                                             24 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
     ___fleq
       ___flsub (ARG)
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _go_Home
     _BlueMove
     _Forwardhalfblock
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _turnRight45
     _ReverseYellow
       _ForwardOneBlock
       _turnLeft45
     _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      64       9       39.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D5       7       83.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhlh       13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRllllll      F      0       0      58        0.0%
BITBIGSFRhhllh       E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRhlll        6      0       0      38        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhhlll       1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     236      61        0.0%
DATA                 0      0     236       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 18:58:25 2023

               _color_read_Red 4718                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
               _color_read_lum 46C8                   ___fldiv@sign 0029                _color_read_Blue 47B8  
                           l43 4622                             l52 4766                             l61 42C2  
                           l46 4B20                             l55 47B6                             l64 2E20  
                           l49 4716                             l74 1900                             l58 4806  
          ___wmul@multiplicand 0003               _color_read_Green 4768                readColours@vals 000C  
            ??_Interrupts_init 0001                            l210 4B76                            l141 4AB4  
                          l150 4B8C                            l207 4B62                            l144 4ADA  
                          l216 4A88                            l153 4B96                            l138 4AB2  
                          l402 1E12                            l147 4BA0                            l156 4B82  
                          l501 3E7A                            l270 4BAA                            l159 4920  
                          l531 44DA                            l427 1E6C                            l419 1E0E  
                          l540 431C                            l525 3F18                            l517 3DDC  
                          l509 3D3E                            l534 442A                            l198 4B5E  
                          l543 4376                            l528 4482                            l552 4A58  
                          l480 3FA0                            l537 43D0                            l561 46C6  
                          l570 4022                            l394 199E                            l555 4264  
                          l635 32CC                            l564 457E                            l493 40A0  
                          l549 4A1A                            l573 499E                            l629 32C2  
                          l662 4B00                            l558 4674                            l487 3774  
                          l567 45D0                            l656 4B40                            l576 49DC  
                          l921 3CA0                            l932 3B2C                            l927 3AE6  
                          l776 3608                            l789 38D8                            _abs 4922  
                          _pad 40A2                            _rel 01B2                            wreg 000FE8  
                 ___flmul@aexp 0043                   ___flmul@bexp 0044                   ___flmul@sign 003E  
                 ___flmul@temp 0049                   ___flmul@prod 0045                Colour_decider@i 007A  
                         ?_abs 0013                           l1207 2178                           l1216 2248  
                         l1232 489A                           l1320 3480                           l1160 418E  
                         l1217 2236                           l1153 4186                           l1402 4958  
                         l1331 3418                           l1244 2AF2                           l1324 33BC  
                         l1340 452C                           l1317 3324                           l1405 4960  
                         l1246 2952                           l1190 205E                           l1255 2998  
                         l1191 204C                           l4000 2608                           l1280 2758  
                         l1192 2012                           l3200 34B4                           l1257 2A10  
                         l1249 2916                           l1417 3BF6                           l1425 48DE  
                         l1258 29FE                           l4010 2672                           l4002 260C  
                         l3210 34F6                           l3202 34B8                           l3130 3B40  
                         l1362 40C4                           l1283 25EA                           l1371 2EAE  
                         l4020 26D4                           l4012 267E                           l4004 261A  
                         l1276 23F4                           l4100 3372                           l3300 3D7C  
                         l3220 3550                           l3212 3514                           l3204 34C6  
                         l1428 4BA8                           l3132 3B52                           l1293 271A  
                         l1285 2662                           l1373 2EB6                           l4030 273C  
                         l4022 26E8                           l4014 268C                           l4006 2648  
                         l1286 2650                           l4110 33FA                           l4102 33A4  
                         l3150 4124                           l3142 4ADC                           l3310 4024  
                         l3302 3D88                           l3222 357E                           l3214 351C  
                         l3230 35B8                           l3206 34E6                           l3134 3B5C  
                         l1366 411A                           l1374 2EFC                           l1199 232E  
                         l4032 273E                           l4024 2702                           l4016 26B6  
                         l4040 4856                           l4120 3450                           l4112 3408  
                         l4104 33A6                           l3160 415A                           l3152 4136  
                         l3144 4AF8                           l3312 4028                           l3320 4070  
                         l3304 3D94                           l3232 35C8                           l3224 359E  
                         l3216 3530                           l3208 34EA                           l3240 377A  
                         l3136 3B7A                           l3128 3B2E                           l3400 2FA2  
                         l1392 3A28                           l1385 309E                           l4050 3C36  
                         l4026 271E                           l4034 2744                           l4018 26BA  
                         l4042 4866                           l4122 3460                           l4114 3426  
                         l4106 33B2                           l4210 0F8A                           l3162 4170  
                         l3154 413E                           l3322 4088                           l3314 4040  
                         l3330 3E26                           l3306 3DAC                           l3234 35E8  
                         l3226 35A0                           l3218 353E                           l3250 37DA  
                         l3242 3788                           l3138 3BB0                           l3170 489C  
                         l3410 3068                           l3402 3006                           l4130 4808  
                         l4052 3C64                           l4036 2748                           l4028 272E  
                         l3500 1F04                           l4124 346E                           l4116 3428  
                         l4108 33EE                           l4300 1606                           l4220 1088  
                         l4212 0FDE                           l4204 0EFE                           l3164 4178  
                         l3156 4146                           l3148 411C                           l3180 3626  
                         l3316 404C                           l3332 3E32                           l3324 3DDE  
                         l3308 3DC4                           l3340 3CC6                           l3420 4B9C  
                         l4140 45D2                           l3228 35B2                           l3260 3850  
                         l3252 37F8                           l3244 37A8                           l3172 48A8  
                         l3412 306E                           l3404 3020                           l4132 4814  
                         l4054 3C74                           l4046 3BF8                           l4070 3AA6  
                         l4062 3A2A                           l3510 1F38                           l3502 1F06  
                         l4126 3470                           l4118 342C                           l4302 1644  
                         l4230 1158                           l4214 1010                           l4206 0F50  
                         l3166 417A                           l3158 4154                           l3190 36F0  
                         l3182 367A                           l3318 4058                           l3326 3E02  
                         l3334 3E4A                           l3350 3D26                           l3342 3CDE  
                         l3422 4B7A                           l4150 4604                           l4142 45D6  
                         l3430 4B84                           l3270 38B8                           l3262 3870  
                         l3254 3800                           l3246 37AC                           l3238 3776  
                         l3174 48BA                           l3414 307E                           l3406 303E  
                         l1398 4854                           l4134 4830                           l4056 3C98  
                         l4048 3C26                           l4080 3B2A                           l4072 3AB4  
                         l4064 3A58                           l3600 2146                           l3520 1F74  
                         l3504 1F16                           l3512 1F40                           l4312 165C  
                         l4240 12F6                           l4232 1190                           l4224 1094  
                         l4216 1016                           l4208 0F82                           l3168 4180  
                         l3192 3734                           l3184 368E                           l3360 3ED0  
                         l3352 3E7C                           l3336 3E62                           l3328 3E1A  
                         l3344 3CEA                           l3424 4B7E                           l4160 4616  
                         l4152 460E                           l4144 45E0                           l3440 48F6  
                         l3432 4B88                           l3264 3882                           l3256 3814  
                         l3248 37BA                           l3176 48BE                           l3280 40D0  
                         l3408 3058                           l4136 484C                           l4058 3C9E  
                         l4074 3AC6                           l4066 3A68                           l3610 219E  
                         l3602 2148                           l3530 1F88                           l3522 1F78  
                         l3514 1F50                           l3506 1F26                           l4090 3334  
                         l4330 1734                           l4314 168E                           l4234 11A2  
                         l4242 134E                           l4226 10A8                           l4218 1032  
                         l3186 3692                           l3178 360A                           l3354 3EA0  
                         l3362 3EE8                           l4410 4B3E                           l3346 3CF6  
                         l3338 3CA2                           l3450 4440                           l3418 4B98  
                         l3426 4B8E                           l4170 4620                           l4162 4618  
                         l4154 4610                           l4146 45F0                           l3442 491C  
                         l3434 48E2                           l3194 3482                           l3258 3822  
                         l3266 3888                           l3290 493C                           l3282 40E4  
                         l3274 40A2                           l3370 2E56                           l4076 3AD4  
                         l4068 3A96                           l3620 21CC                           l3604 2158  
                         l3540 1F9C                           l3532 1F8C                           l3524 1F7C  
                         l3516 1F62                           l3508 1F36                           l4092 334A  
                         l4084 32D0                           l4332 1766                           l4316 16C0  
                         l4308 1650                           l4244 1380                           l4252 13BE  
                         l4236 121E                           l4228 1148                           l3188 36D4  
                         l3364 3F00                           l3356 3EB8                           l3460 43D2  
                         l4404 4B22                           l3348 3D0E                           l3452 4456  
                         l3292 4AB4                           l3428 4B92                           l4164 461A  
                         l4156 4612                           l4148 45FA                           l4180 2C88  
                         l4500 31EA                           l4420 3F32                           l4412 3F1A  
                         l3444 491E                           l3436 48E6                           l4172 4266  
                         l3196 3486                           l3268 3898                           l3284 40E8  
                         l3276 40B0                           l3380 2ECE                           l3372 2E66  
                         l4078 3B24                           l3622 21DA                           l3614 21B2  
                         l3630 21F8                           l3606 2168                           l3542 1FA0  
                         l3534 1F90                           l3526 1F80                           l3518 1F70  
                         l3550 1FB0                           l4086 32E0                           l4334 1798  
                         l4342 17CE                           l4254 13F0                           l4262 142E  
                         l4246 13B2                           l4238 127A                           l4190 0E50  
                         l3358 3EC4                           l3462 43E6                           l3454 4484  
                         l4406 4B2A                           l3710 4A9C                           l3294 4AC4  
                         l4166 461C                           l4158 4614                           l4182 2CBC  
                         l4174 2AF4                           l3470 42F0                           l4510 3274  
                         l4502 3208                           l4430 3F7C                           l4422 3F48  
                         l4414 3F2C                           l3438 48EE                           l3198 3494  
                         l3286 4106                           l3278 40BC                           l3390 2F04  
                         l3382 2ED4                           l3374 2E86                           l3366 2E22  
                         l3800 27EC                           l3624 21E2                           l3616 21BC  
                         l3608 218E                           l3632 2206                           l3560 2020  
                         l3552 1FB4                           l3544 1FA4                           l3536 1F94  
                         l3528 1F84                           l3480 1E9C                           l3472 1E70  
                         l4096 335E                           l4088 32EE                           l4344 1800  
                         l4328 1702                           l4264 1460                           l4256 1422  
                         l4192 0E5C                           l3464 43FE                           l3456 4498  
                         l3296 3D40                           l4408 4B34                           l3448 442C  
                         l3712 4A9E                           l3704 4A8A                           l4168 461E  
                         l4184 2D54                           l4176 2BC0                           l4512 328C  
                         l4504 3220                           l4440 3F9E                           l4432 3F86  
                         l4424 3F4C                           l4416 3F2E                           l3720 470E  
                         l3288 4922                           l3392 2F0E                           l3384 2EE4  
                         l3376 2EA2                           l3368 2E42                           l4600 194A  
                         l3810 2826                           l3802 27FC                           l3642 2258  
                         l3650 22AE                           l3634 220A                           l3626 21E6  
                         l3618 21CA                           l3570 204A                           l3562 202C  
                         l3554 1FDE                           l3546 1FA8                           l3538 1F98  
                         l3490 1ED6                           l3482 1EAC                           l3474 1E7C  
                         l4098 3366                           l4346 1832                           l4290 1592  
                         l4266 1492                           l4194 0E8C                           l3458 44AE  
                         l3298 3D64                           l3714 4AA0                           l3706 4A94  
                         l4186 2D88                           l4178 2BF4                           l3466 42C4  
                         l4514 32AA                           l4506 323E                           l4434 3F88  
                         l4426 3F70                           l4418 3F30                           l3730 4768  
                         l3394 2F14                           l3386 2EF0                           l3378 2EBE  
                         l4450 451A                           l4442 44DC                           l4610 1968  
                         l4602 1952                           l3900 2AE6                           l3812 283C  
                         l3804 280C                           l3660 2300                           l3652 22BE  
                         l3644 2264                           l3636 2218                           l3628 21F6  
                         l3580 20A0                           l3572 206C                           l3564 2030  
                         l3556 1FFA                           l3548 1FAC                           l3492 1EDC  
                         l3484 1EBC                           l3476 1E8A                           l4364 18EC  
                         l4348 186C                           l4356 18AA                           l4292 15C4  
                         l4284 1554                           l4268 14CC                           l4276 150A  
                         l4196 0EC0                           l4188 0E26                           l4460 3FB6  
                         l3708 4A9A                           l3716 4B04                           l3468 42D8  
                         l4508 3256                           l4516 32C2                           l4436 3F92  
                         l4428 3F7A                           l4380 4B5A                           l4372 4B42  
                         l3732 47AE                           l3724 4718                           l3396 2F96  
                         l3388 2EF8                           l4444 44EE                           l4700 1C52  
                         l4620 1992                           l4612 1970                           l4604 195A  
                         l3902 2AE8                           l3830 2890                           l3814 284C  
                         l3822 286C                           l3806 280E                           l3910 2330  
                         l3670 231E                           l3662 2306                           l3654 22CE  
                         l3646 2272                           l3638 222E                           l3590 20DA  
                         l3582 20AE                           l3574 207C                           l3566 203E  
                         l3558 200A                           l3494 1EEE                           l3486 1EBE  
                         l3478 1E8C                           l4278 1548                           l4198 0EF4  
                         l4462 3FCE                           l4454 4624                           l3750 434A  
                         l4470 30A8                           l4438 3F94                           l4382 4B5C  
                         l4374 4B4C                           l3726 475E                           l3718 46C8  
                         l3742 4B62                           l4390 4A70                           l3398 2F9C  
                         l4446 44F6                           l4710 1C98                           l4702 1C56  
                         l4630 19D0                           l4622 199A                           l4614 1978  
                         l4606 1960                           ?_pad 0011                           l3840 28E2  
                         l3832 28AA                           l3824 287C                           l3816 2854  
                         l3808 2816                           l3920 236C                           l3912 233C  
                         l3664 2308                           l3656 22EE                           l3648 22AC  
                         l3592 20DC                           l3584 20BC                           l3568 2040  
                         l3496 1EF0                           l3488 1EC6                           l4368 18F8  
                         l4288 1560                           l4456 4676                           l4464 3FE2  
                         l3760 4580                           l3752 49DE                           l4376 4B4E  
                         l3736 47B8                           l3744 4B72                           l4384 4A5A  
                         l3680 391A                           l4448 44FE                           l4720 1CDE  
                         l4712 1C9C                           l4704 1C6C                           l4640 1A12  
                         l4632 19D4                           l4624 19AC                           l4616 1980  
                         l4608 1964                           l3850 293E                           l3842 28F2  
                         l3834 28BA                           l3826 287C                           l3818 2858  
                         l3930 239E                           l3922 237C                           l3914 234A  
                         l3666 230E                           l3658 22F2                           l3594 20E6  
                         l3586 20C8                           l3578 2090                           l3498 1EF6  
                         l3762 4378                           l4466 3FF6                           l4458 3FA2  
                         l3746 431E                           l3754 452E                           l3770 49A0  
                         l4490 3166                           l4482 30E0                           l4474 30BA  
                         l4378 4B58                           l3738 47FE                           l4386 4A5E  
                         l3690 39BE                           l3682 3920                           l3674 38DA  
                         l4730 1D24                           l4722 1CE2                           l4706 1C80  
                         l4714 1CB2                           l4650 1A8A                           l4642 1A30  
                         l4634 19E0                           l4626 19C4                           l4618 198A  
                         l4570 190E                           l3860 297E                           l3852 2940  
                         l3844 2906                           l3836 28CA                           l3780 2786  
                         l3772 275A                           l3940 23DE                           l3932 23AC  
                         l3924 2382                           l3916 234C                           l3668 231C  
                         l3588 20CC                           l3596 20EC                           l3764 438C  
                         l3756 4200                           l3748 4332                           l4492 317E  
                         l4484 3116                           l4476 30C2                           l4468 30A0  
                         l4388 4A6C                           l3684 3930                           l3676 38FE  
                         l4740 1D6A                           l4732 1D28                           l4716 1CC6  
                         l4724 1CF8                           l4708 1C94                           l4660 1B0C  
                         l4652 1AB2                           l4644 1A4C                           l4636 19F4  
                         l4628 19C8                           l4580 1926                           l4572 1912  
                         l4564 1902                           l3870 29BA                           l3862 2988  
                         l3854 2950                           l3846 2914                           l3838 28DA  
                         l3790 27C0                           l3782 2796                           l3774 2766  
                         l3950 2428                           l3942 23E4                           l3934 23AE  
                         l3926 2392                           l3918 235C                           l3598 2112  
                         l3766 43A4                           l3758 4A1C                           l4494 319C  
                         l4486 3132                           l4478 30C8                           l3694 39EE  
                         l3686 394C                           l3678 390C                           l4750 1DC2  
                         l4742 1D6E                           l4726 1D0C                           l4734 1D3E  
                         l4718 1CDA                           l4670 1B5A                           l4662 1B14  
                         l4654 1ACE                           l4646 1A58                           l4638 1A0C  
                         l4590 1932                           l4582 1928                           l4574 1916  
                         l4566 1906                           l3880 2A2C                           l3872 29C8  
                         l3864 2996                           l3856 2962                           l3848 2920  
                         l3792 27C6                           l3784 27A6                           l3776 2774  
                         l3960 2478                           l3952 2434                           l3944 2404  
                         l3936 23BE                           l3928 2398                           l3768 4962  
                         l4496 31B4                           l4488 314A                           l3688 3968  
                         l4752 1DD6                           l4736 1D52                           l4744 1D84  
                         l4728 1D20                           l4680 1BC6                           l4672 1B8E  
                         l4664 1B1C                           l4656 1AEA                           l4648 1A6C  
                         l4760 1E58                           l4592 1934                           l4584 192A  
                         l4576 1922                           l4568 190A                           l3890 2A98  
                         l3882 2A3A                           l3874 29F6                           l3858 2978  
                         l3866 29A8                           l3794 27CC                           l3786 27A8  
                         l3778 2776                           l3970 24BA                           l3962 2484  
                         l3954 243E                           l3946 2414                           l3938 23CE  
                         l4498 31D2                           l3698 3A00                           l4754 1E00  
                         l4746 1D98                           l4738 1D66                           l4690 1C0C  
                         l4682 1BCA                           l4674 1B9A                           l4658 1B04  
                         l4666 1B34                           l4594 193A                           l4586 192E  
                         l4578 1924                           l3892 2AB2                           l3884 2A64  
                         l3868 29B6                           l3796 27DA                           l3788 27B0  
                         l3980 251C                           l3972 24C6                           l3964 2490  
                         l3956 2454                           l4756 1E1A                           l4748 1DB0  
                         l4692 1C10                           l4676 1BAE                           l4684 1BE0  
                         l4668 1B52                           l4596 193E                           l4588 1930  
                         l3894 2ACE                           l3878 2A20                           l3886 2A68  
                         l3798 27DC                           l3990 25B2                           l3982 2528  
                         l3974 24D6                           l3966 249E                           l3958 2460  
                         l4758 1E4C                           l4686 1BF4                           l4694 1C26  
                         l4678 1BC2                           l4598 1942                           l3896 2AD2  
                         l3888 2A82                           l3992 25D0                           l3984 2544  
                         l3976 24F0                           l3968 24AA                           l4696 1C3A  
                         l4688 1C08                           l3898 2AE0                           l3994 25DA  
                         l3986 256E                           l3978 2500                           l4698 1C4E  
                         l3996 25E8                           l3988 25A4                           l3998 25FA  
                  GreenMove@mL 0020                    GreenMove@mR 0022                           STR_1 0E01  
                         STR_2 0E01                           u3000 2112                           u3001 210E  
                         u3010 2158                           u3011 2154                           u3100 2244  
                         u3020 218E                           u2300 3B40                           u3101 2240  
                         u3021 218A                           u2301 3B3C                           u3110 2258  
                         u3030 219E                           u2310 3B52                           u3111 2254  
                         u3031 219A                           u2311 3B4E                           u3120 2272  
                         u3040 21CA                           u4000 1548                           u2400 3494  
                         u2320 3B7A                           u3200 394C                   _BAUD4CONbits 000EE9  
                         u3121 226E                           u3041 21C6                           u4001 1544  
                         u2401 3490                           u2321 3B76                           u3201 3948  
                         u3130 22AC                           u3050 21DA                           u4010 1592  
                         u2410 34C6                           u2330 3BB0                           u3210 3968  
                         u3131 22A8                           u3051 21D6                           u4011 158E  
                         u2411 34C2                           u2331 3BAC                           u3211 3964  
                         u3300 287C                           u3140 22BE                           u3060 21F6  
                         u4100 1798                           u4020 15C4                           u2340 4136  
                         u3220 4B72                           u2500 3822                           u3301 2878  
                         u3141 22BA                           u3061 21F2                           u4101 1794  
                         u4021 15C0                           u2341 4132                           u3221 4B6E  
                         u2421 34F0                           u2501 381E                           u3310 28F2  
                         u3230 2774                           u3150 22CE                           u3070 2206  
                         u4110 17CA                           u4030 1602                           u2350 4154  
                         u2430 3514                           u2510 3850                           u3311 28EE  
                         u3231 2770                           u3151 22CA                           u3071 2202  
                         u4111 17C6                           u4031 15FE                           u2351 4150  
                         u2431 3510                           u2511 384C                           u3400 2A0C  
                         u3320 2914                           u3240 2786                           u3160 22EE  
                         u3080 2218                           u4120 1800                           u4040 1644  
                         u2360 4170                           u2600 4088                           u2440 353E  
                         u2520 3898                           u3401 2A08                           u3321 2910  
                         u3241 2782                           u3161 22EA                           u3081 2214  
                         u4121 17FC                           u4041 1640                           u2361 416C  
                         u2601 4084                           u2441 353A                           u2521 3894  
                         u3410 2A20                           u3330 293E                           u3250 2796  
                         u3170 2300                           u3090 222E                           u4130 1832  
                         u4050 168E                           u2610 40A0                           u4210 30B6  
                         u2450 357E                           u2370 48DE                           u2530 40B0  
                         _T2PR 000FBC                           u3411 2A1C                           u3331 293A  
                         u3251 2792                           u3171 22FC                           u3091 222A  
                         u4131 182E                           u4051 168A                           u2611 409C  
                         u4211 30B2                           u2451 357A                           u2371 48DA  
                         u2531 40AC                           u3420 2A3A                           u3340 2962  
                         u3260 27DA                           u3500 23BE                           u3180 231C  
                         u4140 186C                           u4060 16C0                           u2380 3626  
                         u2620 3E62                           u4300 32AA                           u4220 3116  
                         u2460 35C8                           u2540 4106                           u2700 2E66  
                         u3421 2A36                           u3341 295E                           u3261 27D6  
                         u3501 23BA                           u3181 2318                           u4141 1868  
                         u4061 16BC                           u2381 3622                           u2621 3E5E  
                         u4301 32A6                           u4221 3112                           u2461 35C4  
                         u2541 4102                           u2701 2E62                           u3430 2A82  
                         u3350 2978                           u3270 27EC                           u3510 23CE  
                         u4150 18A6                           u4070 16FE                           u2390 36F0  
                         u2630 3E7A                           u4230 3132                           u2470 3788  
                         u2550 493C                           u2710 2EA2                           u3190 38FE  
                         u3431 2A7E                           u3351 2974                           u3271 27E8  
                         u3511 23CA                           u4151 18A2                           u4071 16FA  
                         u2391 36EC                           u2631 3E76                           u4231 312E  
                         u2471 3784                           u2551 4938                           u2711 2E9E  
                         u3191 38FA                           u3440 2AB2                           u3360 2996  
                         u3280 27FC                           u3600 2672                           u3520 2404  
                         u2800 1E8A                           u4160 18E8                           u4080 1734  
                         u2640 3D26                           u2560 4AC4                           u4240 3166  
                         u2480 37BA                           u2720 2ECE                           u4400 1B52  
                         u3441 2AAE                           u3361 2992                           u3281 27F8  
                         u3601 266E                           u3521 2400                           u2801 1E86  
                         u4161 18E4                           u4081 1730                           u2641 3D22  
                         u2561 4AC0                           u4241 3162                           u2481 37B6  
                         u2721 2ECA                           u4401 1B4E                           u3450 2AE0  
                         u3370 29B6                           u3290 283C                           u3610 268C  
                         u3530 2414                           u2810 1E9C                           u4090 1766  
                         u2650 3D3E                           u2570 4ADA                           u4250 319C  
                         u4170 4A88                           u2490 37F8                           u2730 2EE4  
                         u4410 1BAE                           u3451 2ADC                           u3371 29B2  
                         u3291 2838                           u3611 2688                           u3531 2410  
                         u2811 1E98                           u4091 1762                           u2651 3D3A  
                         u2571 4AD6                           u4251 3198                           u4171 4A84  
                         u2491 37F4                           u2731 2EE0                           u4411 1BAA  
                         u3380 29C8                           u3700 3AB4                           u3620 26D4  
                         u3540 258E                           u3460 234A                           u2900 1FF6  
                         u2820 1EAC                           u2660 3F00                           u2580 3DC4  
                         u4260 31D2                           u2740 3020                           u4500 1E6C  
                         u4420 1BF4                           u3381 29C4                           u3701 3AB0  
                         u3621 26D0                           u3461 2346                           u2901 1FF0  
                         u2821 1EA8                           u2661 3EFC                           u2581 3DC0  
                         u4261 31CE                           u2741 301C                           u4501 1E68  
                         u4421 1BF0                           u3390 29F6                           u3710 3AD4  
                         u3630 2702                           u3550 25E8                           u3470 235C  
                         u2910 1FF8                           u2830 1EEE                           u2670 3F18  
                         u2590 3DDC                           u4270 3208                           u2750 303E  
                         u4430 1C3A                           u3391 29F2                           u3711 3AD0  
                         u3631 26FE                           u3551 25E4                           u3471 2358  
                         u2831 1EEA                           u2671 3F14                           u2591 3DD8  
                         u4271 3204                           u2751 303A                           u4431 1C36  
                         u3720 3B24                           u3640 273C                           u3560 2608  
                         u3480 236C                           u2920 2020                           u2840 1F04  
                         u3800 3426                           u4280 323E                           u2760 3058  
                         u2680 2E52                           u4440 1C80                           u4360 19AC  
                         u3721 3B20                           u3641 2738                           u3561 2604  
                         u3545 2584                           u3481 2368                           u2921 201C  
                         u2841 1F00                           u3801 3422                           u4281 323A  
                         u2761 3054                           u2681 2E4C                           u4441 1C7C  
                         u4361 19A8                           u3650 3C26                           u3570 261A  
                         u3490 23AC                           u2930 203E                           u2850 1F16  
                         u3810 3460                           u3730 32E0                           u4290 3274  
                         u2770 3068                           u2690 2E54                           u4450 1CC6  
                         u4370 1A30                           u3651 3C22                           u3571 2616  
                         u3491 23A8                           u2931 203A                           u2851 1F12  
                         u3811 345C                           u3731 32DC                           u4291 3270  
                         u2771 3064                           u4451 1CC2                           u4371 1A2C  
                         u3660 3C64                           u3580 2648                           u2940 205E  
                         u2860 1F26                           u3820 346E                           u3740 32EE  
                         u3900 1158                           u2780 490A                           u4460 1D0C  
                         u4380 1A8A                           u3661 3C60                           u3581 2644  
                         u2941 205A                           u2861 1F22                           u3821 346A  
                         u3741 32EA                           u3901 1154                           u2781 4902  
                         u4461 1D08                           u4381 1A86                           u3670 3C98  
                         u3590 265E                           u2950 206C                           u2870 1F62  
                         u3750 334A                           u3910 11A2                           u3830 484C  
                         u4470 1D52                           u4390 1B04                           u3671 3C94  
                         u3591 265A                           u2951 2068                           u2871 1F5E  
                         u3751 3346                           u3911 119E                           u3831 4848  
                         u4471 1D4E                           u4391 1B00                           u4607 1ABC  
                         u3680 3A58                           u2960 207C                           u2880 1F70  
                         u3760 33A0                           u3920 1380                           u4480 1D98  
                         u3681 3A54                           u2961 2078                           u2881 1F6C  
                         u3761 339C                           u3921 137C                           u3841 0E56  
                         u4481 1D94                           u4617 1B26                           u3690 3A96  
                         u2970 20AE                           u2890 1FDE                           u3770 33EA  
                         u3930 13B2                           u3850 0F50                           u4490 1DC2  
                         u3691 3A92                           u2971 20AA                           u2891 1FDA  
                         u3771 33E6                           u3931 13AE                           u3851 0F4C  
                         u4707 3FC0                           u4627 42E2                           u4491 1DBE  
                         u2980 20BC                           u3780 3408                           u3940 13F0  
                         u3860 0FDE                           u2981 20B8                           u3781 3404  
                         u3941 13EC                           u3861 0FDA                           u4717 4000  
                         u4637 430E                           u2990 20DA                           u3790 3418  
                         u3950 1422                           u3870 1032                           u2798 490C  
                         u2991 20D6                           u3791 3414                           u3951 141E  
                         u3871 102E                           u4807 4062                           u4727 3D9E  
                         u4647 433C                           u3960 1460                           u3880 1088  
                         u3961 145C                           u3881 1084                           u4817 3EDA  
                         u4737 44A2                           u4657 4368                           u3970 1492  
                         u3890 10A8                           u3971 148E                           u3891 10A4  
                         u4747 44CC                           u4667 45E6                           u4587 19B6  
                         u3980 14CC                           u3981 14C8                           u4757 3E3C  
                         u4677 444A                           u4597 19FE                           u3990 1506  
                         u3991 1502                           u4767 4396                           u4687 4474  
                         u4777 43C2                           u4697 3D00                           u4787 43F0  
                         u4797 441C                  _LightBlueMove 4580                           abs@a 0013  
                         _dbuf 0192                           _main 1902                           _dtoa 2E22  
                         _prec 00F0                           _vals 01C7                           pad@i 0018  
                         pad@p 0015                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           btemp 005F                           _stop 4024  
                         prodh 000FF4                           prodl 000FF3                           start 000E  
              ___fldiv@new_exp 002A         __end_of_color_read_Red 4768                __end_of_HighISR 000E  
       __end_of_color_read_lum 4718                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 4A1C                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 442C  
              __end_of___aodiv 360A                __end_of___fladd 2330                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 38DA                __end_of___fldiv 2AF4  
              __end_of___flmul 275A                __end_of___flsub 489C                    colour_rel@B 004A  
                  colour_rel@G 0046                          ?_stop 0014                    colour_rel@L 0036  
                  colour_rel@R 0042                __end_of___lwdiv 4190                          i2l275 000A  
                 vfpfcnvrt@fmt 0041                          _TMR0H 000FD4                          _TMR0L 000FD3  
              __end_of_go_Home 32CE        __end_of_sendCharSerial4 4B78     __end_of_I2C_2_Master_Start 4BA2  
   __end_of_I2C_2_Master_Write 4B84                   YellowMove@mL 0020                          _flags 00F4  
                 YellowMove@mR 0022                          _fputc 3B2E                          _fputs 489C  
                        pad@fp 0011                          _power 01D3                          _width 015C  
                        _putch 4BA8                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 0020                          tablat 000FF5  
             ??_Colour_decider 004F                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                   main@run_flag 00E6                          status 000FD8  
                        wtemp8 0060                __end_of_sprintf 452E        __end_of_color_read_Blue 4808  
        _I2C_2_Master_RepStart 4B84               __end_of_BlueMove 4266                     PinkMove@mL 0020  
                   PinkMove@mR 0022                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 4190                _reverseOneBlock 4378                   __end_of_main 1E70  
                 __end_of_dtoa 30A0                   __end_of_stop 40A2                  main@fakeTimer 00EC  
              _colour_rel$2805 003A                _colour_rel$2806 003E                         ??_main 0059  
                       ??_dtoa 0026          __end_of_ReverseYellow 49A0               __end_of_PinkMove 46C8  
                       ??_stop 0018                  __activetblptr 000001              Colour_decider@Hue 007C  
            Colour_decider@rel 004D                   ?_setMotorPWM 000E                         ?_fputc 0001  
                       ?_fputs 000A                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RC7PPS 000E69                         _RD5PPS 000E6F                         _RE4PPS 000E76  
                       _RD6PPS 000E70                         _RG6PPS 000E88                      ??_HighISR 0001  
     __end_of_color_click_init 4624                         _RX4PPS 000E15                         _TX4REG 000EE4  
                   _OrangeMove 452E               __end_of___xxtofl 3482                      ??_RedMove 0024  
                ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0057  
                ??_ReversePink 0024                         ___flge 3A2A                         ___fleq 3BF8  
                    ??___aodiv 0011                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 4ADC              ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C  
                    ??___fldiv 0021                      ??___flmul 003A                      ??___flsub 0019  
                    ??___lwdiv 000B                         clear_0 41C8                         clear_1 41D4  
                       clear_2 41E0                         _motorL 00F5                         _motorR 01BE  
                       isa$std 000001                      ??_go_Home 0028                         pad@buf 0013  
                       dtoa@fp 001C                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C  
                       putch@c 0001                ??_LightBlueMove 0024               __end_of_vfprintf 4856  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0059               __end_of_turnLeft 3E7C                     ___flge@ff1 0001  
                   _YellowMove 4624                     ___flge@ff2 0005                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     ___fleq@ff1 0019  
                   ___fleq@ff2 001D                fullSpeedBack@mL 0014                fullSpeedBack@mR 0016  
                   __accesstop 0060        __end_of__initialization 41EE        __end_of_reverseOneBlock 43D2  
     __end_of_color_read_Green 47B8         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 0005                _Interrupts_init 4BAA                 __pcstackCOMRAM 0001  
                _fullSpeedBack 3E7C                   __pidataBANK0 4BAC                   __pidataBANK1 4BA2  
                __end_of_fputc 3BF8                  __end_of_fputs 48E0                  __end_of_putch 4BAA  
            __end_of_GreenMove 4A5A            __end_of_Timer0_init 4B42            __end_of_ReversePink 49DE  
                    ?_BlueMove 0020                        ??_fputc 0005                        ??_fputs 000E  
         Colour_decider@F14347 0150          __end_of_reverseDetect 442C                        ??_putch 0001  
                   __pbssBANK0 00F0                     __pbssBANK1 0100                     __pbssBANK2 0200  
              reverseDetect@mL 001A                reverseDetect@mR 001C                    ?_OrangeMove 0020  
             _Forwardhalfblock 431E              __end_of_RetryMove 4024                      ?_PinkMove 0020  
            _color_writetoaddr 4B02                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 0001                        ?___fleq 0019             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                   ?_turnRight45 001A  
          ??_color_writetoaddr 0004                  colour_rel@rel 0034                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 2AF4  
      __end_of_Interrupts_init 4BAC         color_writetoaddr@value 0003               ??_color_read_Red 0007  
             main@consecuitive 00E8                        _HighISR 0008               ??_color_read_lum 0007  
             ?_reverseOneBlock 001A      __end_of_color_writetoaddr 4B22                        _RedMove 49DE  
           _I2C_2_Master_Start 4B98                     ??_PinkMove 0024                     _initUSART4 4B42  
           _I2C_2_Master_Write 4B78                        __Hparam 0000                        _WayBack 0160  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 4B22  
                  RetryMove@mL 001A                    RetryMove@mR 001C        sendStringSerial4@string 0002  
            reverseOneBlock@mL 001A              reverseOneBlock@mR 001C                    _ReversePink 49A0  
                      ___aodiv 3482                        ___fladd 1E70                        ___aomod 3776  
                      ___fldiv 275A                        ___flmul 2330                        ___flsub 4856  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 411C            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0051                   __psmallconst 0E00                   turnLeft45@mL 001A  
                 turnLeft45@mR 001C                        __pcinit 4190                        __ramtop 0E00  
                    ?_turnLeft 0014                        _go_Home 30A0                        __ptext0 1902  
                      __ptext1 44DC                        __ptext2 4808                        __ptext3 38DA  
                      __ptext4 2E22                        __ptext5 40A2                        __ptext6 489C  
                      __ptext7 3B2E                        __ptext8 4BA8                        __ptext9 4922  
                    _T2CONbits 000FBD                     ??___xxtofl 0005                      _T2HLTbits 000FBE  
                _RxBufWriteCnt 005E              color_read_lum@tmp 000A                        main@buf 0080  
                      _sprintf 44DC           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 41EE                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                LightBlueMove@mL 0020                LightBlueMove@mR 0022  
              ??_fullSpeedBack 0018             ??_color_click_init 0005                     _move_count 00F2  
            __end_of_vfpfcnvrt 3A2A                        postdec1 000FE5                        postdec2 000FDD  
                  _Turn45Delay 01D1                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 0047                     ??_vfprintf 0057  
              _initDCmotorsPWM 3F1A                     ??_turnLeft 0018                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013              __end_of_turnRight 3D40                    ___fladd@grs 0010  
                ___xxtofl@sign 0009                      _TRISAbits 000F81             setMotorPWM@posDuty 0012  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                    ___fldiv@grs 002C  
                  ___fldiv@rem 0025               fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016  
                ReversePink@mL 0020                  ReversePink@mR 0022       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 0032               ?_Interrupts_init 0001  
                  ___flmul@grs 003F                    _CCP1CONbits 000FAB                     main@colour 00EA  
                 _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001                      RedMove@mL 0020  
                    RedMove@mR 0022             ??_color_read_Green 0007                     _turnLeft45 4484  
               __end_of___flge 3B2E                 __end_of___fleq 3CA2                 _fullSpeedAhead 3D40  
                  vfpfcnvrt@ap 0043                    vfpfcnvrt@cp 004F                    vfpfcnvrt@fp 003F  
               __end_of___wmul 4B02       __end_of_Forwardhalfblock 4378                      _GreenMove 4A1C  
          start_initialization 4190                    __end_of_abs 4962                    __end_of_pad 411C  
                _TxBufWriteCnt 005C          __end_of_LightBlueMove 45D2                   ??_OrangeMove 0024  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 3FA2                    vfprintf@fmt 0053  
       __end_of_fullSpeedAhead 3DDE                       ??___flge 0009                       ??___fleq 0021  
                    _RetryMove 3FA2                       ??___wmul 0005            go_Home@Time_forward 0026  
                ??_readColours 000E                    __pdataBANK0 00FE                    __pdataBANK1 01CF  
              _ForwardOneBlock 42C4                      ___fladd@a 0005                      ___fladd@b 0001  
                _ReverseYellow 4962                      ___fldiv@a 001D                      ___fldiv@b 0019  
                   ?_GreenMove 0020                   OrangeMove@mL 0020                   OrangeMove@mR 0022  
           __end_of_OrangeMove 4580                      ___flmul@a 0036                      ___flmul@b 0032  
                  __pbssCOMRAM 005B                      ___flsub@a 0015                      ___flsub@b 0011  
                __pcstackBANK0 0060               ___aodiv@dividend 0001                   ??_YellowMove 0024  
                     ?_HighISR 0001          Colour_decider@RGB_col 0066                       ?_RedMove 0020  
             ___lwdiv@dividend 0007                      _dtoa$2482 002E                   ?_Timer0_init 0001  
                  ?_turnLeft45 001A                ?_fullSpeedAhead 0014                      __pintcode 0008  
                 ?_ReversePink 0020                     ?_RetryMove 001A                       ?___aodiv 0001  
                     ?___fladd 0001                       ?___aomod 0001                       ?___fldiv 0019  
             ___aodiv@quotient 0013                       ?___flmul 0032                       ?___flsub 0011  
          _Colour_decider$2807 0060                       ?___lwdiv 0007                       ?_go_Home 0024  
         I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020             __end_of_YellowMove 4676  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00            __end_of_readColours 42C4  
            _I2C_2_Master_Idle 4AB4              _I2C_2_Master_Init 4A8A              _I2C_2_Master_Read 48E0  
            _I2C_2_Master_Stop 4B8E                  _low_threshold 015E                   _RxBufReadCnt 005D  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0060                 colour_rel@vals 0032  
            _sendStringSerial4 4A5A            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C                       _LATFbits 000F7E  
                     _LATGbits 000F7F             ?_sendStringSerial4 0002                       _PIE4bits 000E2D  
      __end_of_ForwardOneBlock 431E                    turnRight@mL 0014                    turnRight@mR 0016  
                     _PIR4bits 000E37               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA                 _Colour_decider 0E26            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 38DA      __end_of_I2C_2_Master_Idle 4ADC  
    __end_of_I2C_2_Master_Init 4AB4      __end_of_I2C_2_Master_Read 4922              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 4B98                   setMotorPWM@m 000E                       _DataFlag 00FE  
  I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024              ??_color_read_Blue 0007  
                 _TxBufReadCnt 005B                       _BlueMove 4200                      _turnRight 3CA2  
                    copy_data0 41A4      __end_of_sendStringSerial4 4A8A                   ??_colour_rel 0036  
                _reverseDetect 43D2  __end_of_I2C_2_Master_RepStart 4B8E             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 3776                   ??_initUSART4 0001                       _PinkMove 4676  
                     __Hrparam 0000         __end_of_Colour_decider 1902                     vfprintf@ap 0055  
                     __Lrparam 0000                     vfprintf@fp 0051          __end_of_fullSpeedBack 3F1A  
                 __Lsmallconst 0E00                    ??_RetryMove 001E                    _readColours 4266  
              ??_ReverseYellow 0024                     ?_vfpfcnvrt 003F                ___aodiv@divisor 0009  
              ___aodiv@counter 0011             __end_of_colour_rel 2E22                     _ANSELDbits 000EA7  
                   _ANSELFbits 000EB4                     sprintf@fmt 0062              ?_Forwardhalfblock 001A  
                     ___xxtofl 32CE                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                 _Time_forward 0200                ___lwdiv@divisor 0009             __end_of_initUSART4 4B60  
              ___lwdiv@counter 000D             ??_Forwardhalfblock 001E                     ?_turnRight 0014  
                     __ptext10 3776                       __ptext11 3482                       __ptext20 48E0  
                     __ptext12 4A5A                       __ptext21 4B42                       __ptext13 4B60  
                     __ptext30 4A1C                       __ptext22 3F1A                       __ptext14 4266  
                     __ptext31 431E                       __ptext23 30A0                       __ptext15 46C8  
                     __ptext40 4A8A                       __ptext32 4200                       __ptext24 4962  
                     __ptext16 4718                       __ptext41 4624                       __ptext33 2AF4  
                     __ptext25 49A0                       __ptext17 4768                       __ptext50 4378  
                     __ptext42 442C                       __ptext34 45D2                       __ptext26 42C4  
                     __ptext18 47B8                       __ptext51 43D2                       __ptext43 3CA2  
                     __ptext35 4B02                       __ptext27 49DE                       __ptext19 4B84  
                     __ptext60 4856                       __ptext52 4024                       __ptext44 4B22  
                     __ptext36 4B78                       __ptext28 452E                       __ptext61 1E70  
                     __ptext53 3E7C                       __ptext45 3FA2                       __ptext37 4B8E  
                     __ptext29 4580                       __ptext62 2330                       __ptext54 360A  
                     __ptext46 3D40                       __ptext38 4B98                       __ptext63 3A2A  
                     __ptext55 4ADC                       __ptext47 4676                       __ptext39 4AB4  
                     __ptext64 3BF8                       __ptext56 411C                       __ptext48 4484  
                     __ptext65 275A                       __ptext57 4BAA                       __ptext49 3DDE  
                     __ptext58 0E26                       __ptext59 32CE                 ?_reverseDetect 001A  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     turnLeft@mL 0014  
                   turnLeft@mR 0016               ?_ForwardOneBlock 001A                       go_Home@i 002D  
              ?_Colour_decider 004B                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005F                       _vfprintf 4808                  ??_turnRight45 001E  
                     main@temp 00E4                       _turnLeft 3DDE               ___aomod@dividend 0001  
            ??_reverseOneBlock 001E                main@prev_colour 00EE                    _setMotorPWM 360A  
                turnRight45@mL 001A                  turnRight45@mR 001C                       intlevel2 0000  
                    sprintf@ap 006C                 _high_threshold 01CF               ??_fullSpeedAhead 0018  
                 ??_turnLeft45 001E                     BlueMove@mL 0020                     BlueMove@mR 0022  
              ___aomod@divisor 0009                    ??_vfpfcnvrt 0045                ___aomod@counter 0011  
             _color_click_init 45D2                       sprintf@f 006E                       sprintf@s 0060  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C            __end_of_turnRight45 4484  
              ??_reverseDetect 001E                    ??_turnRight 0018                  ___fladd@signs 000D  
           __end_of_turnLeft45 44DC                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
              _sendCharSerial4 4B60                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ___aomod@sign 0012  
