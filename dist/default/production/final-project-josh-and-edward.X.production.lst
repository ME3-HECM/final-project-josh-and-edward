

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 09 11:40:34 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73   000000                     
    74                           ; Generated 06/04/2022 GMT
    75                           ; 
    76                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F67K40 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108   000000                     
   109                           	psect	idataCOMRAM
   110   0041B6                     __pidataCOMRAM:
   111                           	callstack 0
   112                           
   113                           ;initializer for _DataFlag
   114   0041B6  01                 	db	1
   115                           
   116                           	psect	idataBANK1
   117   0041B0                     __pidataBANK1:
   118                           	callstack 0
   119                           
   120                           ;initializer for _high_threshold
   121   0041B0  03E8               	dw	1000
   122   000000                     _TRISEbits	set	3973
   123   000000                     _TX4REG	set	3812
   124   000000                     _RC4STAbits	set	3815
   125   000000                     _SP4BRGH	set	3814
   126   000000                     _SSP2CON2bits	set	3802
   127   000000                     _RX4PPS	set	3605
   128   000000                     _SSP2CLKPPS	set	3612
   129   000000                     _SSP2DATPPS	set	3613
   130   000000                     _ANSELDbits	set	3751
   131   000000                     _SSP2ADD	set	3798
   132   000000                     _SSP2CON1bits	set	3801
   133   000000                     _LATAbits	set	3961
   134   000000                     _LATFbits	set	3966
   135   000000                     _LATGbits	set	3967
   136   000000                     _TRISAbits	set	3969
   137   000000                     _TRISGbits	set	3975
   138   000000                     _CCPR2H	set	4006
   139   000000                     _CCPR1H	set	4010
   140   000000                     _TRISCbits	set	3971
   141   000000                     _TRISDbits	set	3972
   142   000000                     _TRISFbits	set	3974
   143   000000                     _LATDbits	set	3964
   144   000000                     _RC4REG	set	3811
   145   000000                     _SP4BRGL	set	3813
   146   000000                     _TX4STAbits	set	3816
   147   000000                     _BAUD4CONbits	set	3817
   148   000000                     _SSP2CON2	set	3802
   149   000000                     _SSP2STAT	set	3800
   150   000000                     _SSP2BUF	set	3797
   151   000000                     _PIE4bits	set	3629
   152   000000                     _PIR4bits	set	3639
   153   000000                     _RC0PPS	set	3682
   154   000000                     _RD5PPS	set	3695
   155   000000                     _RE2PPS	set	3700
   156   000000                     _RD6PPS	set	3696
   157   000000                     _RC7PPS	set	3689
   158   000000                     _CCPR4H	set	3873
   159   000000                     _CCPR3H	set	3877
   160   000000                     _CCP1CONbits	set	4011
   161   000000                     _CCPTMRS0bits	set	4013
   162   000000                     _T2PR	set	4028
   163   000000                     _T2CONbits	set	4029
   164   000000                     _CCP2CONbits	set	4007
   165   000000                     _CCP3CONbits	set	3878
   166   000000                     _CCP4CONbits	set	3874
   167   000000                     _RE4PPS	set	3702
   168   000000                     _RG6PPS	set	3720
   169   000000                     _T2CLKCONbits	set	4031
   170   000000                     _T2HLTbits	set	4030
   171                           
   172                           	psect	smallconst
   173   000E00                     __psmallconst:
   174                           	callstack 0
   175   000E00  00                 	db	0
   176   000E01                     STR_1:
   177   000E01  72                 	db	114	;'r'
   178   000E02  65                 	db	101	;'e'
   179   000E03  64                 	db	100	;'d'
   180   000E04  3D                 	db	61	;'='
   181   000E05  25                 	db	37
   182   000E06  64                 	db	100	;'d'
   183   000E07  20                 	db	32
   184   000E08  67                 	db	103	;'g'
   185   000E09  72                 	db	114	;'r'
   186   000E0A  65                 	db	101	;'e'
   187   000E0B  65                 	db	101	;'e'
   188   000E0C  6E                 	db	110	;'n'
   189   000E0D  3D                 	db	61	;'='
   190   000E0E  25                 	db	37
   191   000E0F  64                 	db	100	;'d'
   192   000E10  20                 	db	32
   193   000E11  62                 	db	98	;'b'
   194   000E12  6C                 	db	108	;'l'
   195   000E13  75                 	db	117	;'u'
   196   000E14  65                 	db	101	;'e'
   197   000E15  3D                 	db	61	;'='
   198   000E16  25                 	db	37
   199   000E17  64                 	db	100	;'d'
   200   000E18  20                 	db	32
   201   000E19  6C                 	db	108	;'l'
   202   000E1A  75                 	db	117	;'u'
   203   000E1B  6D                 	db	109	;'m'
   204   000E1C  3D                 	db	61	;'='
   205   000E1D  25                 	db	37
   206   000E1E  64                 	db	100	;'d'
   207   000E1F  20                 	db	32
   208   000E20  63                 	db	99	;'c'
   209   000E21  6F                 	db	111	;'o'
   210   000E22  6C                 	db	108	;'l'
   211   000E23  6F                 	db	111	;'o'
   212   000E24  75                 	db	117	;'u'
   213   000E25  72                 	db	114	;'r'
   214   000E26  3D                 	db	61	;'='
   215   000E27  25                 	db	37
   216   000E28  64                 	db	100	;'d'
   217   000E29  20                 	db	32
   218   000E2A  0D                 	db	13
   219   000E2B  0A                 	db	10
   220   000E2C  00                 	db	0
   221   000E2D                     STR_2:
   222   000E2D  72                 	db	114	;'r'
   223   000E2E  65                 	db	101	;'e'
   224   000E2F  64                 	db	100	;'d'
   225   000E30  3D                 	db	61	;'='
   226   000E31  25                 	db	37
   227   000E32  64                 	db	100	;'d'
   228   000E33  20                 	db	32
   229   000E34  67                 	db	103	;'g'
   230   000E35  72                 	db	114	;'r'
   231   000E36  65                 	db	101	;'e'
   232   000E37  65                 	db	101	;'e'
   233   000E38  6E                 	db	110	;'n'
   234   000E39  3D                 	db	61	;'='
   235   000E3A  25                 	db	37
   236   000E3B  64                 	db	100	;'d'
   237   000E3C  20                 	db	32
   238   000E3D  62                 	db	98	;'b'
   239   000E3E  6C                 	db	108	;'l'
   240   000E3F  75                 	db	117	;'u'
   241   000E40  65                 	db	101	;'e'
   242   000E41  3D                 	db	61	;'='
   243   000E42  25                 	db	37
   244   000E43  64                 	db	100	;'d'
   245   000E44  20                 	db	32
   246   000E45  6C                 	db	108	;'l'
   247   000E46  75                 	db	117	;'u'
   248   000E47  6D                 	db	109	;'m'
   249   000E48  3D                 	db	61	;'='
   250   000E49  25                 	db	37
   251   000E4A  64                 	db	100	;'d'
   252   000E4B  20                 	db	32
   253   000E4C  0D                 	db	13
   254   000E4D  0A                 	db	10
   255   000E4E  00                 	db	0
   256   000E4F  00                 	db	0	; dummy byte at the end
   257   000000                     
   258                           ; #config settings
   259                           
   260                           	psect	cinit
   261   003BE4                     __pcinit:
   262                           	callstack 0
   263   003BE4                     start_initialization:
   264                           	callstack 0
   265   003BE4                     __initialization:
   266                           	callstack 0
   267                           
   268                           ; Initialize objects allocated to BANK1 (2 bytes)
   269                           ; load TBLPTR registers with __pidataBANK1
   270   003BE4  0EB0               	movlw	low __pidataBANK1
   271   003BE6  6EF6               	movwf	tblptrl,c
   272   003BE8  0E41               	movlw	high __pidataBANK1
   273   003BEA  6EF7               	movwf	tblptrh,c
   274   003BEC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   275   003BEE  6EF8               	movwf	tblptru,c
   276   003BF0  0009               	tblrd		*+	;fetch initializer
   277   003BF2  CFF5 F190          	movff	tablat,__pdataBANK1
   278   003BF6  0009               	tblrd		*+	;fetch initializer
   279   003BF8  CFF5 F191          	movff	tablat,__pdataBANK1+1
   280                           
   281                           ; Initialize objects allocated to COMRAM (1 bytes)
   282                           ; load TBLPTR registers with __pidataCOMRAM
   283   003BFC  0EB6               	movlw	low __pidataCOMRAM
   284   003BFE  6EF6               	movwf	tblptrl,c
   285   003C00  0E41               	movlw	high __pidataCOMRAM
   286   003C02  6EF7               	movwf	tblptrh,c
   287   003C04  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   288   003C06  6EF8               	movwf	tblptru,c
   289   003C08  0009               	tblrd		*+	;fetch initializer
   290   003C0A  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   291                           
   292                           ; Clear objects allocated to BANK1 (144 bytes)
   293   003C0E  EE01  F000         	lfsr	0,__pbssBANK1
   294   003C12  0E90               	movlw	144
   295   003C14                     clear_0:
   296   003C14  6AEE               	clrf	postinc0,c
   297   003C16  06E8               	decf	wreg,f,c
   298   003C18  E1FD               	bnz	clear_0
   299                           
   300                           ; Clear objects allocated to BANK0 (25 bytes)
   301   003C1A  EE00  F0E6         	lfsr	0,__pbssBANK0
   302   003C1E  0E19               	movlw	25
   303   003C20                     clear_1:
   304   003C20  6AEE               	clrf	postinc0,c
   305   003C22  06E8               	decf	wreg,f,c
   306   003C24  E1FD               	bnz	clear_1
   307                           
   308                           ; Clear objects allocated to COMRAM (4 bytes)
   309   003C26  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   310   003C28  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   311   003C2A  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   312   003C2C  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   313   003C2E                     end_of_initialization:
   314                           	callstack 0
   315   003C2E                     __end_of__initialization:
   316                           	callstack 0
   317   003C2E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   318   003C30  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   319   003C32  0E00               	movlw	low (__Lsmallconst shr (0+16))
   320   003C34  6EF8               	movwf	tblptru,c
   321   003C36  0E0E               	movlw	high __Lsmallconst
   322   003C38  6EF7               	movwf	tblptrh,c
   323   003C3A  0100               	movlb	0
   324   003C3C  EFCB  F016         	goto	_main	;jump to C main() function
   325                           
   326                           	psect	bssCOMRAM
   327   00005A                     __pbssCOMRAM:
   328                           	callstack 0
   329   00005A                     _TxBufReadCnt:
   330                           	callstack 0
   331   00005A                     	ds	1
   332   00005B                     _TxBufWriteCnt:
   333                           	callstack 0
   334   00005B                     	ds	1
   335   00005C                     _RxBufReadCnt:
   336                           	callstack 0
   337   00005C                     	ds	1
   338   00005D                     _RxBufWriteCnt:
   339                           	callstack 0
   340   00005D                     	ds	1
   341                           
   342                           	psect	dataCOMRAM
   343   00005E                     __pdataCOMRAM:
   344                           	callstack 0
   345   00005E                     _DataFlag:
   346                           	callstack 0
   347   00005E                     	ds	1
   348                           
   349                           	psect	bssBANK0
   350   0000E6                     __pbssBANK0:
   351                           	callstack 0
   352   0000E6                     _width:
   353                           	callstack 0
   354   0000E6                     	ds	2
   355   0000E8                     _prec:
   356                           	callstack 0
   357   0000E8                     	ds	2
   358   0000EA                     _low_threshold:
   359                           	callstack 0
   360   0000EA                     	ds	2
   361   0000EC                     _flags:
   362                           	callstack 0
   363   0000EC                     	ds	1
   364   0000ED                     _motorR:
   365                           	callstack 0
   366   0000ED                     	ds	9
   367   0000F6                     _motorL:
   368                           	callstack 0
   369   0000F6                     	ds	9
   370                           
   371                           	psect	bssBANK1
   372   000100                     __pbssBANK1:
   373                           	callstack 0
   374   000100                     _EUSART4TXbuf:
   375                           	callstack 0
   376   000100                     	ds	60
   377   00013C                     _EUSART4RXbuf:
   378                           	callstack 0
   379   00013C                     	ds	20
   380   000150                     	ds	12
   381   00015C                     _dbuf:
   382                           	callstack 0
   383   00015C                     	ds	32
   384   00017C                     _rel:
   385                           	callstack 0
   386   00017C                     	ds	12
   387   000188                     _vals:
   388                           	callstack 0
   389   000188                     	ds	8
   390                           
   391                           	psect	dataBANK1
   392   000190                     __pdataBANK1:
   393                           	callstack 0
   394   000190                     _high_threshold:
   395                           	callstack 0
   396   000190                     	ds	2
   397                           
   398                           	psect	cstackBANK0
   399   000060                     __pcstackBANK0:
   400                           	callstack 0
   401   000060                     ?_sprintf:
   402                           	callstack 0
   403   000060                     sprintf@s:
   404                           	callstack 0
   405   000060                     _Colour_decider$2479:
   406                           	callstack 0
   407                           
   408                           ; 4 bytes @ 0x0
   409   000060                     	ds	2
   410   000062                     sprintf@fmt:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x2
   414   000062                     	ds	2
   415   000064                     Colour_decider@Cmax_i:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x4
   419   000064                     	ds	2
   420   000066                     Colour_decider@RGB_col:
   421                           	callstack 0
   422                           
   423                           ; 12 bytes @ 0x6
   424   000066                     	ds	8
   425   00006E                     sprintf@ap:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0xE
   429   00006E                     	ds	2
   430   000070                     sprintf@f:
   431                           	callstack 0
   432                           
   433                           ; 11 bytes @ 0x10
   434   000070                     	ds	2
   435   000072                     Colour_decider@Cmax:
   436                           	callstack 0
   437                           
   438                           ; 4 bytes @ 0x12
   439   000072                     	ds	4
   440   000076                     Colour_decider@Cmin:
   441                           	callstack 0
   442                           
   443                           ; 4 bytes @ 0x16
   444   000076                     	ds	4
   445   00007A                     Colour_decider@i:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x1A
   449   00007A                     	ds	2
   450   00007C                     Colour_decider@Hue:
   451                           	callstack 0
   452                           
   453                           ; 4 bytes @ 0x1C
   454   00007C                     	ds	4
   455   000080                     main@buf:
   456                           	callstack 0
   457                           
   458                           ; 100 bytes @ 0x20
   459   000080                     	ds	100
   460   0000E4                     main@colour:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x84
   464   0000E4                     	ds	2
   465                           
   466                           	psect	cstackCOMRAM
   467   000001                     __pcstackCOMRAM:
   468                           	callstack 0
   469   000001                     ??_I2C_2_Master_Idle:
   470   000001                     ?___wmul:
   471                           	callstack 0
   472   000001                     ?___fladd:
   473                           	callstack 0
   474   000001                     ?___xxtofl:
   475                           	callstack 0
   476   000001                     ?___aodiv:
   477                           	callstack 0
   478   000001                     ?___aomod:
   479                           	callstack 0
   480   000001                     sendCharSerial4@charToSend:
   481                           	callstack 0
   482   000001                     initDCmotorsPWM@PWMperiod:
   483                           	callstack 0
   484   000001                     ___wmul@multiplier:
   485                           	callstack 0
   486   000001                     fputc@c:
   487                           	callstack 0
   488   000001                     ___flge@ff1:
   489                           	callstack 0
   490   000001                     ___fladd@b:
   491                           	callstack 0
   492   000001                     ___xxtofl@val:
   493                           	callstack 0
   494   000001                     ___aodiv@dividend:
   495                           	callstack 0
   496   000001                     ___aomod@dividend:
   497                           	callstack 0
   498                           
   499                           ; 8 bytes @ 0x0
   500   000001                     	ds	1
   501   000002                     ??_I2C_2_Master_Read:
   502   000002                     I2C_2_Master_Write@data_byte:
   503                           	callstack 0
   504   000002                     sendStringSerial4@string:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x1
   508   000002                     	ds	1
   509   000003                     color_writetoaddr@value:
   510                           	callstack 0
   511   000003                     I2C_2_Master_Read@ack:
   512                           	callstack 0
   513   000003                     ___wmul@multiplicand:
   514                           	callstack 0
   515   000003                     fputc@fp:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x2
   519   000003                     	ds	1
   520   000004                     color_writetoaddr@address:
   521                           	callstack 0
   522   000004                     I2C_2_Master_Read@tmp:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x3
   526   000004                     	ds	1
   527   000005                     ??_fputc:
   528   000005                     ??_color_click_init:
   529   000005                     ??___xxtofl:
   530   000005                     ?_color_read_lum:
   531                           	callstack 0
   532   000005                     ?_color_read_Red:
   533                           	callstack 0
   534   000005                     ?_color_read_Green:
   535                           	callstack 0
   536   000005                     ?_color_read_Blue:
   537                           	callstack 0
   538   000005                     ___wmul@product:
   539                           	callstack 0
   540   000005                     ___flge@ff2:
   541                           	callstack 0
   542   000005                     ___fladd@a:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x4
   546   000005                     	ds	2
   547   000007                     ??_color_read_lum:
   548   000007                     ??_color_read_Red:
   549   000007                     ??_color_read_Green:
   550   000007                     ??_color_read_Blue:
   551   000007                     ?___lwdiv:
   552                           	callstack 0
   553   000007                     ___lwdiv@dividend:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x6
   557   000007                     	ds	2
   558   000009                     ??___fladd:
   559   000009                     ??___flge:
   560   000009                     ___xxtofl@sign:
   561                           	callstack 0
   562   000009                     ___lwdiv@divisor:
   563                           	callstack 0
   564   000009                     ___aodiv@divisor:
   565                           	callstack 0
   566   000009                     ___aomod@divisor:
   567                           	callstack 0
   568                           
   569                           ; 8 bytes @ 0x8
   570   000009                     	ds	1
   571   00000A                     ___xxtofl@exp:
   572                           	callstack 0
   573   00000A                     color_read_lum@tmp:
   574                           	callstack 0
   575   00000A                     color_read_Red@tmp:
   576                           	callstack 0
   577   00000A                     color_read_Green@tmp:
   578                           	callstack 0
   579   00000A                     color_read_Blue@tmp:
   580                           	callstack 0
   581   00000A                     fputs@s:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x9
   585   00000A                     	ds	1
   586   00000B                     ___lwdiv@quotient:
   587                           	callstack 0
   588   00000B                     ___xxtofl@arg:
   589                           	callstack 0
   590                           
   591                           ; 4 bytes @ 0xA
   592   00000B                     	ds	1
   593   00000C                     readColours@vals:
   594                           	callstack 0
   595   00000C                     fputs@fp:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0xB
   599   00000C                     	ds	1
   600   00000D                     ___lwdiv@counter:
   601                           	callstack 0
   602   00000D                     ___fladd@signs:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0xC
   606   00000D                     	ds	1
   607   00000E                     ___fladd@aexp:
   608                           	callstack 0
   609   00000E                     fputs@c:
   610                           	callstack 0
   611   00000E                     setMotorPWM@m:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0xD
   615   00000E                     	ds	1
   616   00000F                     ___fladd@bexp:
   617                           	callstack 0
   618   00000F                     fputs@i:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0xE
   622   00000F                     	ds	1
   623   000010                     ??_setMotorPWM:
   624   000010                     ___fladd@grs:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0xF
   628   000010                     	ds	1
   629   000011                     ?___flsub:
   630                           	callstack 0
   631   000011                     ___aodiv@counter:
   632                           	callstack 0
   633   000011                     ___aomod@counter:
   634                           	callstack 0
   635   000011                     pad@fp:
   636                           	callstack 0
   637   000011                     ___flsub@b:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0x10
   641   000011                     	ds	1
   642   000012                     setMotorPWM@posDuty:
   643                           	callstack 0
   644   000012                     ___aodiv@sign:
   645                           	callstack 0
   646   000012                     ___aomod@sign:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x11
   650   000012                     	ds	1
   651   000013                     ?_abs:
   652                           	callstack 0
   653   000013                     setMotorPWM@negDuty:
   654                           	callstack 0
   655   000013                     pad@buf:
   656                           	callstack 0
   657   000013                     abs@a:
   658                           	callstack 0
   659   000013                     ___aodiv@quotient:
   660                           	callstack 0
   661                           
   662                           ; 8 bytes @ 0x12
   663   000013                     	ds	1
   664   000014                     stop@mL:
   665                           	callstack 0
   666   000014                     turnLeft@mL:
   667                           	callstack 0
   668   000014                     turnRight@mL:
   669                           	callstack 0
   670   000014                     fullSpeedAhead@mL:
   671                           	callstack 0
   672   000014                     fullSpeedBack@mL:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x13
   676   000014                     	ds	1
   677   000015                     ??_abs:
   678   000015                     pad@p:
   679                           	callstack 0
   680   000015                     ___flsub@a:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x14
   684   000015                     	ds	1
   685   000016                     stop@mR:
   686                           	callstack 0
   687   000016                     turnLeft@mR:
   688                           	callstack 0
   689   000016                     turnRight@mR:
   690                           	callstack 0
   691   000016                     fullSpeedAhead@mR:
   692                           	callstack 0
   693   000016                     fullSpeedBack@mR:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x15
   697   000016                     	ds	1
   698   000017                     ??_pad:
   699                           
   700                           ; 1 bytes @ 0x16
   701   000017                     	ds	1
   702   000018                     ??_fullSpeedAhead:
   703   000018                     ??_stop:
   704   000018                     ??_turnLeft:
   705   000018                     ??_turnRight:
   706   000018                     ??_fullSpeedBack:
   707   000018                     pad@i:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x17
   711   000018                     	ds	1
   712   000019                     ?___fldiv:
   713                           	callstack 0
   714   000019                     turnRight45@mL:
   715                           	callstack 0
   716   000019                     turnLeft45@mL:
   717                           	callstack 0
   718   000019                     reverseDetect@mL:
   719                           	callstack 0
   720   000019                     ___fleq@ff1:
   721                           	callstack 0
   722   000019                     ___fldiv@b:
   723                           	callstack 0
   724                           
   725                           ; 4 bytes @ 0x18
   726   000019                     	ds	1
   727   00001A                     pad@w:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x19
   731   00001A                     	ds	1
   732   00001B                     turnRight45@mR:
   733                           	callstack 0
   734   00001B                     turnLeft45@mR:
   735                           	callstack 0
   736   00001B                     reverseDetect@mR:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x1A
   740   00001B                     	ds	1
   741   00001C                     dtoa@fp:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x1B
   745   00001C                     	ds	1
   746   00001D                     ??_reverseDetect:
   747   00001D                     ??_turnRight45:
   748   00001D                     ??_turnLeft45:
   749   00001D                     ___fleq@ff2:
   750                           	callstack 0
   751   00001D                     ___fldiv@a:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x1C
   755   00001D                     	ds	1
   756   00001E                     dtoa@d:
   757                           	callstack 0
   758                           
   759                           ; 8 bytes @ 0x1D
   760   00001E                     	ds	3
   761   000021                     ??___fldiv:
   762   000021                     ??___fleq:
   763                           
   764                           ; 1 bytes @ 0x20
   765   000021                     	ds	4
   766   000025                     ___fldiv@rem:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x24
   770   000025                     	ds	1
   771   000026                     ??_dtoa:
   772                           
   773                           ; 1 bytes @ 0x25
   774   000026                     	ds	3
   775   000029                     ___fldiv@sign:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0x28
   779   000029                     	ds	1
   780   00002A                     ___fldiv@new_exp:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x29
   784   00002A                     	ds	2
   785   00002C                     ___fldiv@grs:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0x2B
   789   00002C                     	ds	2
   790   00002E                     _dtoa$2171:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x2D
   794   00002E                     	ds	2
   795   000030                     ___fldiv@bexp:
   796                           	callstack 0
   797   000030                     dtoa@p:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x2F
   801   000030                     	ds	1
   802   000031                     ___fldiv@aexp:
   803                           	callstack 0
   804                           
   805                           ; 1 bytes @ 0x30
   806   000031                     	ds	1
   807   000032                     ?___flmul:
   808                           	callstack 0
   809   000032                     colour_rel@vals:
   810                           	callstack 0
   811   000032                     dtoa@w:
   812                           	callstack 0
   813   000032                     ___flmul@b:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x31
   817   000032                     	ds	2
   818   000034                     colour_rel@rel:
   819                           	callstack 0
   820   000034                     dtoa@n:
   821                           	callstack 0
   822                           
   823                           ; 8 bytes @ 0x33
   824   000034                     	ds	2
   825   000036                     colour_rel@L:
   826                           	callstack 0
   827   000036                     ___flmul@a:
   828                           	callstack 0
   829                           
   830                           ; 4 bytes @ 0x35
   831   000036                     	ds	4
   832   00003A                     ??___flmul:
   833   00003A                     _colour_rel$2477:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0x39
   837   00003A                     	ds	2
   838   00003C                     dtoa@i:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x3B
   842   00003C                     	ds	2
   843   00003E                     ___flmul@sign:
   844                           	callstack 0
   845   00003E                     dtoa@s:
   846                           	callstack 0
   847   00003E                     _colour_rel$2478:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x3D
   851   00003E                     	ds	1
   852   00003F                     vfpfcnvrt@fp:
   853                           	callstack 0
   854   00003F                     ___flmul@grs:
   855                           	callstack 0
   856                           
   857                           ; 4 bytes @ 0x3E
   858   00003F                     	ds	2
   859   000041                     vfpfcnvrt@fmt:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x40
   863   000041                     	ds	1
   864   000042                     colour_rel@R:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x41
   868   000042                     	ds	1
   869   000043                     ___flmul@aexp:
   870                           	callstack 0
   871   000043                     vfpfcnvrt@ap:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x42
   875   000043                     	ds	1
   876   000044                     ___flmul@bexp:
   877                           	callstack 0
   878                           
   879                           ; 1 bytes @ 0x43
   880   000044                     	ds	1
   881   000045                     ??_vfpfcnvrt:
   882   000045                     ___flmul@prod:
   883                           	callstack 0
   884                           
   885                           ; 4 bytes @ 0x44
   886   000045                     	ds	1
   887   000046                     colour_rel@G:
   888                           	callstack 0
   889                           
   890                           ; 4 bytes @ 0x45
   891   000046                     	ds	1
   892   000047                     vfpfcnvrt@convarg:
   893                           	callstack 0
   894                           
   895                           ; 8 bytes @ 0x46
   896   000047                     	ds	2
   897   000049                     ___flmul@temp:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x48
   901   000049                     	ds	1
   902   00004A                     colour_rel@B:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x49
   906   00004A                     	ds	1
   907   00004B                     ?_Colour_decider:
   908                           	callstack 0
   909   00004B                     Colour_decider@vals:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x4A
   913   00004B                     	ds	2
   914   00004D                     Colour_decider@rel:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x4C
   918   00004D                     	ds	2
   919   00004F                     ??_Colour_decider:
   920   00004F                     vfpfcnvrt@cp:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x4E
   924   00004F                     	ds	2
   925   000051                     ?_vfprintf:
   926                           	callstack 0
   927   000051                     vfprintf@fp:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x50
   931   000051                     	ds	2
   932   000053                     vfprintf@fmt:
   933                           	callstack 0
   934                           
   935                           ; 2 bytes @ 0x52
   936   000053                     	ds	2
   937   000055                     vfprintf@ap:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x54
   941   000055                     	ds	2
   942   000057                     vfprintf@cfmt:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x56
   946   000057                     	ds	2
   947   000059                     ??_main:
   948                           
   949                           ; 1 bytes @ 0x58
   950   000059                     	ds	1
   951                           
   952 ;;
   953 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   954 ;;
   955 ;; *************** function _main *****************
   956 ;; Defined at:
   957 ;;		line 29 in file "main.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;  colour          2  132[BANK0 ] int 
   962 ;;  buf           100   32[BANK0 ] unsigned char [100]
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   973 ;;      Locals:         0     102       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   975 ;;      Totals:         1     102       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   976 ;;Total ram usage:      103 bytes
   977 ;; Hardware stack levels required when called: 9
   978 ;; This function calls:
   979 ;;		_Colour_decider
   980 ;;		_I2C_2_Master_Init
   981 ;;		_Interrupts_init
   982 ;;		_color_click_init
   983 ;;		_colour_rel
   984 ;;		_fullSpeedAhead
   985 ;;		_initDCmotorsPWM
   986 ;;		_initUSART4
   987 ;;		_readColours
   988 ;;		_sendStringSerial4
   989 ;;		_sprintf
   990 ;;		_stop
   991 ;; This function is called by:
   992 ;;		Startup code after reset
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text0
   997   002D96                     __ptext0:
   998                           	callstack 0
   999   002D96                     _main:
  1000                           	callstack 22
  1001   002D96                     
  1002                           ;main.c: 30:     initUSART4();
  1003   002D96  ECA8  F020         	call	_initUSART4	;wreg free
  1004   002D9A                     
  1005                           ;main.c: 31:     Interrupts_init();
  1006   002D9A  ECDA  F020         	call	_Interrupts_init	;wreg free
  1007   002D9E                     
  1008                           ;main.c: 32:     color_click_init();
  1009   002D9E  ECCE  F01E         	call	_color_click_init	;wreg free
  1010   002DA2                     
  1011                           ;main.c: 33:     I2C_2_Master_Init();
  1012   002DA2  EC5C  F020         	call	_I2C_2_Master_Init	;wreg free
  1013   002DA6                     
  1014                           ;main.c: 34:     initDCmotorsPWM(200);
  1015   002DA6  0E00               	movlw	0
  1016   002DA8  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1017   002DAA  0EC8               	movlw	200
  1018   002DAC  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1019   002DAE  ECCD  F01C         	call	_initDCmotorsPWM	;wreg free
  1020   002DB2                     
  1021                           ;main.c: 35:     char buf[100];;main.c: 36:     TRISGbits.TRISG1 = 0;
  1022   002DB2  9287               	bcf	135,1,c	;volatile
  1023   002DB4                     
  1024                           ;main.c: 37:     TRISAbits.TRISA4 = 0;
  1025   002DB4  9881               	bcf	129,4,c	;volatile
  1026   002DB6                     
  1027                           ;main.c: 38:     TRISFbits.TRISF7 = 0;
  1028   002DB6  9E86               	bcf	134,7,c	;volatile
  1029   002DB8                     
  1030                           ;main.c: 39:     LATGbits.LATG1=1;
  1031   002DB8  827F               	bsf	127,1,c	;volatile
  1032   002DBA                     
  1033                           ;main.c: 40:     LATAbits.LATA4=1;
  1034   002DBA  8879               	bsf	121,4,c	;volatile
  1035   002DBC                     
  1036                           ;main.c: 41:     LATFbits.LATF7=1;
  1037   002DBC  8E7E               	bsf	126,7,c	;volatile
  1038   002DBE                     
  1039                           ;main.c: 45:     motorL.power=0;
  1040   002DBE  0E00               	movlw	0
  1041   002DC0  0100               	movlb	0	; () banked
  1042   002DC2  6FF6               	movwf	_motorL& (0+255),b
  1043   002DC4                     
  1044                           ; BSR set to: 0
  1045                           ;main.c: 46:     motorL.direction=1;
  1046   002DC4  0E01               	movlw	1
  1047   002DC6  6FF7               	movwf	(_motorL+1)& (0+255),b
  1048   002DC8                     
  1049                           ; BSR set to: 0
  1050                           ;main.c: 47:     motorL.brakemode=1;
  1051   002DC8  0E01               	movlw	1
  1052   002DCA  6FF8               	movwf	(_motorL+2)& (0+255),b
  1053   002DCC                     
  1054                           ; BSR set to: 0
  1055                           ;main.c: 48:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1056   002DCC  0EAA               	movlw	170
  1057   002DCE  6FFB               	movwf	(_motorL+5)& (0+255),b
  1058   002DD0  0E0F               	movlw	15
  1059   002DD2  6FFC               	movwf	(_motorL+6)& (0+255),b
  1060   002DD4                     
  1061                           ; BSR set to: 0
  1062                           ;main.c: 49:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1063   002DD4  0EA6               	movlw	166
  1064   002DD6  6FFD               	movwf	(_motorL+7)& (0+255),b
  1065   002DD8  0E0F               	movlw	15
  1066   002DDA  6FFE               	movwf	(_motorL+8)& (0+255),b
  1067   002DDC                     
  1068                           ; BSR set to: 0
  1069                           ;main.c: 50:     motorL.PWMperiod=200;
  1070   002DDC  0E00               	movlw	0
  1071   002DDE  6FFA               	movwf	(_motorL+4)& (0+255),b
  1072   002DE0  0EC8               	movlw	200
  1073   002DE2  6FF9               	movwf	(_motorL+3)& (0+255),b
  1074   002DE4                     
  1075                           ; BSR set to: 0
  1076                           ;main.c: 51:     motorR.power=0;
  1077   002DE4  0E00               	movlw	0
  1078   002DE6  6FED               	movwf	_motorR& (0+255),b
  1079   002DE8                     
  1080                           ; BSR set to: 0
  1081                           ;main.c: 52:     motorR.direction=1;
  1082   002DE8  0E01               	movlw	1
  1083   002DEA  6FEE               	movwf	(_motorR+1)& (0+255),b
  1084   002DEC                     
  1085                           ; BSR set to: 0
  1086                           ;main.c: 53:     motorR.brakemode=1;
  1087   002DEC  0E01               	movlw	1
  1088   002DEE  6FEF               	movwf	(_motorR+2)& (0+255),b
  1089   002DF0                     
  1090                           ; BSR set to: 0
  1091                           ;main.c: 54:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1092   002DF0  0E25               	movlw	37
  1093   002DF2  6FF2               	movwf	(_motorR+5)& (0+255),b
  1094   002DF4  0E0F               	movlw	15
  1095   002DF6  6FF3               	movwf	(_motorR+6)& (0+255),b
  1096   002DF8                     
  1097                           ; BSR set to: 0
  1098                           ;main.c: 55:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1099   002DF8  0E21               	movlw	33
  1100   002DFA  6FF4               	movwf	(_motorR+7)& (0+255),b
  1101   002DFC  0E0F               	movlw	15
  1102   002DFE  6FF5               	movwf	(_motorR+8)& (0+255),b
  1103   002E00                     
  1104                           ; BSR set to: 0
  1105                           ;main.c: 56:     motorR.PWMperiod=200;
  1106   002E00  0E00               	movlw	0
  1107   002E02  6FF1               	movwf	(_motorR+4)& (0+255),b
  1108   002E04  0EC8               	movlw	200
  1109   002E06  6FF0               	movwf	(_motorR+3)& (0+255),b
  1110   002E08                     l4015:
  1111                           
  1112                           ;main.c: 59:     {;main.c: 60:         fullSpeedAhead(&motorL, &motorR);
  1113   002E08  0EF6               	movlw	low _motorL
  1114   002E0A  6E14               	movwf	fullSpeedAhead@mL^0,c
  1115   002E0C  0E00               	movlw	high _motorL
  1116   002E0E  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1117   002E10  0EED               	movlw	low _motorR
  1118   002E12  6E16               	movwf	fullSpeedAhead@mR^0,c
  1119   002E14  0E00               	movlw	high _motorR
  1120   002E16  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1121   002E18  ECA1  F01B         	call	_fullSpeedAhead	;wreg free
  1122   002E1C                     
  1123                           ;main.c: 63:         readColours(&vals);
  1124   002E1C  0E88               	movlw	low _vals
  1125   002E1E  6E0C               	movwf	readColours@vals^0,c
  1126   002E20  0E01               	movlw	high _vals
  1127   002E22  6E0D               	movwf	(readColours@vals+1)^0,c
  1128   002E24  ECC3  F01D         	call	_readColours	;wreg free
  1129   002E28                     
  1130                           ;main.c: 66:         colour_rel(&vals, &rel);
  1131   002E28  0E88               	movlw	low _vals
  1132   002E2A  6E32               	movwf	colour_rel@vals^0,c
  1133   002E2C  0E01               	movlw	high _vals
  1134   002E2E  6E33               	movwf	(colour_rel@vals+1)^0,c
  1135   002E30  0E7C               	movlw	low _rel
  1136   002E32  6E34               	movwf	colour_rel@rel^0,c
  1137   002E34  0E01               	movlw	high _rel
  1138   002E36  6E35               	movwf	(colour_rel@rel+1)^0,c
  1139   002E38  EC1B  F013         	call	_colour_rel	;wreg free
  1140   002E3C                     
  1141                           ;main.c: 69:         if (vals.L>=2200){
  1142   002E3C  0101               	movlb	1	; () banked
  1143   002E3E  BF8F               	btfsc	(_vals+7)& (0+255),7,b
  1144   002E40  EF2B  F017         	goto	u3901
  1145   002E44  0E98               	movlw	152
  1146   002E46  5D8E               	subwf	(_vals+6)& (0+255),w,b
  1147   002E48  0E08               	movlw	8
  1148   002E4A  598F               	subwfb	(_vals+7)& (0+255),w,b
  1149   002E4C  A0D8               	btfss	status,0,c
  1150   002E4E  EF2B  F017         	goto	u3901
  1151   002E52  EF2D  F017         	goto	u3900
  1152   002E56                     u3901:
  1153   002E56  EF6D  F017         	goto	l4031
  1154   002E5A                     u3900:
  1155   002E5A                     
  1156                           ; BSR set to: 1
  1157                           ;main.c: 70:             stop(&motorL, &motorR);
  1158   002E5A  0EF6               	movlw	low _motorL
  1159   002E5C  6E14               	movwf	stop@mL^0,c
  1160   002E5E  0E00               	movlw	high _motorL
  1161   002E60  6E15               	movwf	(stop@mL+1)^0,c
  1162   002E62  0EED               	movlw	low _motorR
  1163   002E64  6E16               	movwf	stop@mR^0,c
  1164   002E66  0E00               	movlw	high _motorR
  1165   002E68  6E17               	movwf	(stop@mR+1)^0,c
  1166   002E6A  EC4E  F01D         	call	_stop	;wreg free
  1167   002E6E                     
  1168                           ;main.c: 71:             _delay((unsigned long)((10)*(64000000/4000.0)));
  1169   002E6E  0ED0               	movlw	208
  1170   002E70  6E59               	movwf	??_main^0,c
  1171   002E72  0ECA               	movlw	202
  1172   002E74                     u3917:
  1173   002E74  2EE8               	decfsz	wreg,f,c
  1174   002E76  D7FE               	bra	u3917
  1175   002E78  2E59               	decfsz	??_main^0,f,c
  1176   002E7A  D7FC               	bra	u3917
  1177   002E7C                     
  1178                           ;main.c: 72:             int colour = Colour_decider(&vals, &rel);
  1179   002E7C  0E88               	movlw	low _vals
  1180   002E7E  6E4B               	movwf	Colour_decider@vals^0,c
  1181   002E80  0E01               	movlw	high _vals
  1182   002E82  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1183   002E84  0E7C               	movlw	low _rel
  1184   002E86  6E4D               	movwf	Colour_decider@rel^0,c
  1185   002E88  0E01               	movlw	high _rel
  1186   002E8A  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1187   002E8C  EC28  F007         	call	_Colour_decider	;wreg free
  1188   002E90  C04B  F0E4         	movff	?_Colour_decider,main@colour
  1189   002E94  C04C  F0E5         	movff	?_Colour_decider+1,main@colour+1
  1190   002E98                     
  1191                           ;main.c: 75:             sprintf(buf,"red=%d green=%d blue=%d lum=%d colour=%d \r\n",val
      +                          s.R, vals.G,vals.B,vals.L,colour);
  1192   002E98  0E80               	movlw	low main@buf
  1193   002E9A  0100               	movlb	0	; () banked
  1194   002E9C  6F60               	movwf	sprintf@s& (0+255),b
  1195   002E9E  0E00               	movlw	high main@buf
  1196   002EA0  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1197   002EA2  0E01               	movlw	low STR_1
  1198   002EA4  6F62               	movwf	sprintf@fmt& (0+255),b
  1199   002EA6  0E0E               	movlw	high STR_1
  1200   002EA8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1201   002EAA  C188  F064         	movff	_vals,?_sprintf+4
  1202   002EAE  C189  F065         	movff	_vals+1,?_sprintf+5
  1203   002EB2  C18A  F066         	movff	_vals+2,?_sprintf+6
  1204   002EB6  C18B  F067         	movff	_vals+3,?_sprintf+7
  1205   002EBA  C18C  F068         	movff	_vals+4,?_sprintf+8
  1206   002EBE  C18D  F069         	movff	_vals+5,?_sprintf+9
  1207   002EC2  C18E  F06A         	movff	_vals+6,?_sprintf+10
  1208   002EC6  C18F  F06B         	movff	_vals+7,?_sprintf+11
  1209   002ECA  C0E4  F06C         	movff	main@colour,?_sprintf+12
  1210   002ECE  C0E5  F06D         	movff	main@colour+1,?_sprintf+13
  1211   002ED2  ECA5  F01E         	call	_sprintf	;wreg free
  1212                           
  1213                           ;main.c: 76:         }else{
  1214   002ED6  EF88  F017         	goto	l4033
  1215   002EDA                     l4031:
  1216                           
  1217                           ; BSR set to: 1
  1218                           ;main.c: 77:             sprintf(buf,"red=%d green=%d blue=%d lum=%d \r\n",vals.R, vals.
      +                          G,vals.B,vals.L);
  1219   002EDA  0E80               	movlw	low main@buf
  1220   002EDC  0100               	movlb	0	; () banked
  1221   002EDE  6F60               	movwf	sprintf@s& (0+255),b
  1222   002EE0  0E00               	movlw	high main@buf
  1223   002EE2  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1224   002EE4  0E2D               	movlw	low STR_2
  1225   002EE6  6F62               	movwf	sprintf@fmt& (0+255),b
  1226   002EE8  0E0E               	movlw	high STR_2
  1227   002EEA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1228   002EEC  C188  F064         	movff	_vals,?_sprintf+4
  1229   002EF0  C189  F065         	movff	_vals+1,?_sprintf+5
  1230   002EF4  C18A  F066         	movff	_vals+2,?_sprintf+6
  1231   002EF8  C18B  F067         	movff	_vals+3,?_sprintf+7
  1232   002EFC  C18C  F068         	movff	_vals+4,?_sprintf+8
  1233   002F00  C18D  F069         	movff	_vals+5,?_sprintf+9
  1234   002F04  C18E  F06A         	movff	_vals+6,?_sprintf+10
  1235   002F08  C18F  F06B         	movff	_vals+7,?_sprintf+11
  1236   002F0C  ECA5  F01E         	call	_sprintf	;wreg free
  1237   002F10                     l4033:
  1238                           
  1239                           ;main.c: 81:         sendStringSerial4(buf);
  1240   002F10  0E80               	movlw	low main@buf
  1241   002F12  6E02               	movwf	sendStringSerial4@string^0,c
  1242   002F14  0E00               	movlw	high main@buf
  1243   002F16  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1244   002F18  EC44  F020         	call	_sendStringSerial4	;wreg free
  1245   002F1C  EF04  F017         	goto	l4015
  1246   002F20  EF07  F000         	goto	start
  1247   002F24                     __end_of_main:
  1248                           	callstack 0
  1249                           
  1250 ;; *************** function _sprintf *****************
  1251 ;; Defined at:
  1252 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1255 ;;		 -> main@buf(100), 
  1256 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1257 ;;		 -> STR_2(34), STR_1(44), 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  f              11   16[BANK0 ] struct _IO_FILE
  1260 ;;  ap              2   14[BANK0 ] PTR void [1]
  1261 ;;		 -> ?_sprintf(2), 
  1262 ;;  ret             2    0        int 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  2    0[BANK0 ] int 
  1265 ;; Registers used:
  1266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1272 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1273 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1275 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1276 ;;Total ram usage:       27 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 8
  1279 ;; This function calls:
  1280 ;;		_vfprintf
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text1
  1287   003D4A                     __ptext1:
  1288                           	callstack 0
  1289   003D4A                     _sprintf:
  1290                           	callstack 22
  1291   003D4A  0E64               	movlw	low (?_sprintf+4)
  1292   003D4C  0100               	movlb	0	; () banked
  1293   003D4E  6F6E               	movwf	sprintf@ap& (0+255),b
  1294   003D50  0E00               	movlw	high (?_sprintf+4)
  1295   003D52  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  1296   003D54  C060  F070         	movff	sprintf@s,sprintf@f
  1297   003D58  C061  F071         	movff	sprintf@s+1,sprintf@f+1
  1298   003D5C                     
  1299                           ; BSR set to: 0
  1300   003D5C  0E00               	movlw	0
  1301   003D5E  6F74               	movwf	(sprintf@f+4)& (0+255),b
  1302   003D60  0E00               	movlw	0
  1303   003D62  6F73               	movwf	(sprintf@f+3)& (0+255),b
  1304   003D64                     
  1305                           ; BSR set to: 0
  1306   003D64  0E00               	movlw	0
  1307   003D66  6F7A               	movwf	(sprintf@f+10)& (0+255),b
  1308   003D68  0E00               	movlw	0
  1309   003D6A  6F79               	movwf	(sprintf@f+9)& (0+255),b
  1310   003D6C                     
  1311                           ; BSR set to: 0
  1312   003D6C  0E70               	movlw	low sprintf@f
  1313   003D6E  6E51               	movwf	vfprintf@fp^0,c
  1314   003D70  0E00               	movlw	high sprintf@f
  1315   003D72  6E52               	movwf	(vfprintf@fp+1)^0,c
  1316   003D74  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  1317   003D78  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1318   003D7C  0E6E               	movlw	low sprintf@ap
  1319   003D7E  6E55               	movwf	vfprintf@ap^0,c
  1320   003D80  0E00               	movlw	high sprintf@ap
  1321   003D82  6E56               	movwf	(vfprintf@ap+1)^0,c
  1322   003D84  EC97  F01F         	call	_vfprintf	;wreg free
  1323   003D88  0100               	movlb	0	; () banked
  1324   003D8A  5173               	movf	(sprintf@f+3)& (0+255),w,b
  1325   003D8C  2560               	addwf	sprintf@s& (0+255),w,b
  1326   003D8E  6ED9               	movwf	fsr2l,c
  1327   003D90  5174               	movf	(sprintf@f+4)& (0+255),w,b
  1328   003D92  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1329   003D94  6EDA               	movwf	fsr2h,c
  1330   003D96  0E00               	movlw	0
  1331   003D98  6EDF               	movwf	indf2,c
  1332   003D9A                     
  1333                           ; BSR set to: 0
  1334   003D9A  0012               	return		;funcret
  1335   003D9C                     __end_of_sprintf:
  1336                           	callstack 0
  1337                           
  1338 ;; *************** function _vfprintf *****************
  1339 ;; Defined at:
  1340 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1343 ;;		 -> sprintf@f(11), 
  1344 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1345 ;;		 -> STR_2(34), STR_1(44), 
  1346 ;;  ap              2   84[COMRAM] PTR PTR void 
  1347 ;;		 -> sprintf@ap(2), 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1350 ;;		 -> STR_2(34), STR_1(44), 
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  2   80[COMRAM] int 
  1353 ;; Registers used:
  1354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1360 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1361 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1363 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1364 ;;Total ram usage:        8 bytes
  1365 ;; Hardware stack levels used: 1
  1366 ;; Hardware stack levels required when called: 7
  1367 ;; This function calls:
  1368 ;;		_vfpfcnvrt
  1369 ;; This function is called by:
  1370 ;;		_sprintf
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text2
  1375   003F2E                     __ptext2:
  1376                           	callstack 0
  1377   003F2E                     _vfprintf:
  1378                           	callstack 22
  1379   003F2E                     
  1380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1381   003F2E  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1382   003F32  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1383                           
  1384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1385   003F36  EFAB  F01F         	goto	l3607
  1386   003F3A                     l3605:
  1387                           
  1388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1389   003F3A  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1390   003F3E  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1391   003F42  0E57               	movlw	low vfprintf@cfmt
  1392   003F44  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1393   003F46  0E00               	movlw	high vfprintf@cfmt
  1394   003F48  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1395   003F4A  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1396   003F4E  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1397   003F52  ECBE  F019         	call	_vfpfcnvrt	;wreg free
  1398   003F56                     l3607:
  1399                           
  1400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1401   003F56  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1402   003F5A  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1403   003F5E                     	if	0	;tblptru may be non-zero
  1404   003F5E                     	endif
  1405   003F5E                     	if	0	;tblptru may be non-zero
  1406   003F5E                     	endif
  1407   003F5E  0008               	tblrd		*
  1408   003F60  50F5               	movf	tablat,w,c
  1409   003F62  0900               	iorlw	0
  1410   003F64  A4D8               	btfss	status,2,c
  1411   003F66  EFB7  F01F         	goto	u3491
  1412   003F6A  EFB9  F01F         	goto	u3490
  1413   003F6E                     u3491:
  1414   003F6E  EF9D  F01F         	goto	l3605
  1415   003F72                     u3490:
  1416   003F72                     
  1417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1418   003F72  0E00               	movlw	0
  1419   003F74  6E52               	movwf	(?_vfprintf+1)^0,c
  1420   003F76  0E00               	movlw	0
  1421   003F78  6E51               	movwf	?_vfprintf^0,c
  1422   003F7A  0012               	return		;funcret
  1423   003F7C                     __end_of_vfprintf:
  1424                           	callstack 0
  1425                           
  1426 ;; *************** function _vfpfcnvrt *****************
  1427 ;; Defined at:
  1428 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1431 ;;		 -> sprintf@f(11), 
  1432 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1433 ;;		 -> vfprintf@cfmt(2), 
  1434 ;;  ap              2   66[COMRAM] PTR PTR void 
  1435 ;;		 -> sprintf@ap(2), 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  convarg         8   70[COMRAM] struct .
  1438 ;;  cp              2   78[COMRAM] PTR unsigned char 
  1439 ;;		 -> STR_2(34), STR_1(44), 
  1440 ;;  i               2    0        int 
  1441 ;;  done            2    0        int 
  1442 ;;  c               1    0        unsigned char 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1452 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1453 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1455 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1456 ;;Total ram usage:       18 bytes
  1457 ;; Hardware stack levels used: 1
  1458 ;; Hardware stack levels required when called: 6
  1459 ;; This function calls:
  1460 ;;		_dtoa
  1461 ;;		_fputc
  1462 ;; This function is called by:
  1463 ;;		_vfprintf
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text3
  1468   00337C                     __ptext3:
  1469                           	callstack 0
  1470   00337C                     _vfpfcnvrt:
  1471                           	callstack 22
  1472   00337C                     
  1473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1474   00337C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1475   003380  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1476   003384  CFDE FFF6          	movff	postinc2,tblptrl
  1477   003388  CFDD FFF7          	movff	postdec2,tblptrh
  1478   00338C                     	if	0	;tblptru may be non-zero
  1479   00338C                     	endif
  1480   00338C                     	if	0	;tblptru may be non-zero
  1481   00338C                     	endif
  1482   00338C  0008               	tblrd		*
  1483   00338E  50F5               	movf	tablat,w,c
  1484   003390  0A25               	xorlw	37
  1485   003392  A4D8               	btfss	status,2,c
  1486   003394  EFCE  F019         	goto	u2851
  1487   003398  EFD0  F019         	goto	u2850
  1488   00339C                     u2851:
  1489   00339C  EF50  F01A         	goto	l3179
  1490   0033A0                     u2850:
  1491   0033A0                     
  1492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1493   0033A0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1494   0033A4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1495   0033A8  2ADE               	incf	postinc2,f,c
  1496   0033AA  0E00               	movlw	0
  1497   0033AC  22DD               	addwfc	postdec2,f,c
  1498   0033AE                     
  1499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1500   0033AE  0E00               	movlw	0
  1501   0033B0  0100               	movlb	0	; () banked
  1502   0033B2  6FE7               	movwf	(_width+1)& (0+255),b
  1503   0033B4  0E00               	movlw	0
  1504   0033B6  6FE6               	movwf	_width& (0+255),b
  1505   0033B8  C0E6  F0EC         	movff	_width,_flags
  1506   0033BC                     
  1507                           ; BSR set to: 0
  1508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1509   0033BC  69E8               	setf	_prec& (0+255),b
  1510   0033BE  69E9               	setf	(_prec+1)& (0+255),b
  1511   0033C0                     
  1512                           ; BSR set to: 0
  1513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1514   0033C0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1515   0033C4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1516   0033C8  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  1517   0033CC  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  1518   0033D0                     
  1519                           ; BSR set to: 0
  1520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1521   0033D0  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1522   0033D4  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1523   0033D8                     	if	0	;tblptru may be non-zero
  1524   0033D8                     	endif
  1525   0033D8                     	if	0	;tblptru may be non-zero
  1526   0033D8                     	endif
  1527   0033D8  0008               	tblrd		*
  1528   0033DA  50F5               	movf	tablat,w,c
  1529   0033DC  0A64               	xorlw	100
  1530   0033DE  B4D8               	btfsc	status,2,c
  1531   0033E0  EFF4  F019         	goto	u2861
  1532   0033E4  EFF6  F019         	goto	u2860
  1533   0033E8                     u2861:
  1534   0033E8  EF04  F01A         	goto	l3169
  1535   0033EC                     u2860:
  1536   0033EC                     
  1537                           ; BSR set to: 0
  1538   0033EC  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1539   0033F0  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1540   0033F4                     	if	0	;tblptru may be non-zero
  1541   0033F4                     	endif
  1542   0033F4                     	if	0	;tblptru may be non-zero
  1543   0033F4                     	endif
  1544   0033F4  0008               	tblrd		*
  1545   0033F6  50F5               	movf	tablat,w,c
  1546   0033F8  0A69               	xorlw	105
  1547   0033FA  A4D8               	btfss	status,2,c
  1548   0033FC  EF02  F01A         	goto	u2871
  1549   003400  EF04  F01A         	goto	u2870
  1550   003404                     u2871:
  1551   003404  EF47  F01A         	goto	l3175
  1552   003408                     u2870:
  1553   003408                     l3169:
  1554                           
  1555                           ; BSR set to: 0
  1556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1557   003408  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1558   00340C  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1559   003410  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1560   003414  0E02               	movlw	2
  1561   003416  26DE               	addwf	postinc2,f,c
  1562   003418  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1563   00341C  0E00               	movlw	0
  1564   00341E  22DD               	addwfc	postdec2,f,c
  1565   003420  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1566   003424  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1567   003428  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  1568   00342C  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  1569   003430  0E00               	movlw	0
  1570   003432  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1571   003434  0EFF               	movlw	-1
  1572   003436  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1573   003438  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1574   00343A  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1575   00343C  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1576   00343E  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1577   003440  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1578                           
  1579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1580   003442  0E01               	movlw	1
  1581   003444  244F               	addwf	vfpfcnvrt@cp^0,w,c
  1582   003446  6E45               	movwf	??_vfpfcnvrt^0,c
  1583   003448  0E00               	movlw	0
  1584   00344A  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1585   00344C  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1586   00344E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1587   003452  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1588   003456  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1589   00345A  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1590   00345E                     
  1591                           ; BSR set to: 0
  1592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1593   00345E  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1594   003462  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1595   003466  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1596   00346A  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1597   00346E  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1598   003472  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1599   003476  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1600   00347A  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1601   00347E  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1602   003482  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1603   003486  ECB2  F014         	call	_dtoa	;wreg free
  1604   00348A  EF64  F01A         	goto	l1195
  1605   00348E                     l3175:
  1606                           
  1607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1608   00348E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1609   003492  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1610   003496  2ADE               	incf	postinc2,f,c
  1611   003498  0E00               	movlw	0
  1612   00349A  22DD               	addwfc	postdec2,f,c
  1613   00349C  EF64  F01A         	goto	l1195
  1614   0034A0                     l3179:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1617   0034A0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1618   0034A4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1619   0034A8  CFDE FFF6          	movff	postinc2,tblptrl
  1620   0034AC  CFDD FFF7          	movff	postdec2,tblptrh
  1621   0034B0                     	if	0	;tblptru may be non-zero
  1622   0034B0                     	endif
  1623   0034B0                     	if	0	;tblptru may be non-zero
  1624   0034B0                     	endif
  1625   0034B0  0008               	tblrd		*
  1626   0034B2  50F5               	movf	tablat,w,c
  1627   0034B4  6E01               	movwf	fputc@c^0,c
  1628   0034B6  6A02               	clrf	(fputc@c+1)^0,c
  1629   0034B8  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1630   0034BC  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1631   0034C0  ECE7  F01A         	call	_fputc	;wreg free
  1632   0034C4  EF47  F01A         	goto	l3175
  1633   0034C8                     l1195:
  1634   0034C8  0012               	return		;funcret
  1635   0034CA                     __end_of_vfpfcnvrt:
  1636                           	callstack 0
  1637                           
  1638 ;; *************** function _dtoa *****************
  1639 ;; Defined at:
  1640 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1643 ;;		 -> sprintf@f(11), 
  1644 ;;  d               8   29[COMRAM] long long 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  n               8   51[COMRAM] long long 
  1647 ;;  i               2   59[COMRAM] int 
  1648 ;;  w               2   49[COMRAM] int 
  1649 ;;  p               2   47[COMRAM] int 
  1650 ;;  s               1   61[COMRAM] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1660 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1661 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1662 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1663 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1664 ;;Total ram usage:       35 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; Hardware stack levels required when called: 5
  1667 ;; This function calls:
  1668 ;;		___aodiv
  1669 ;;		___aomod
  1670 ;;		_abs
  1671 ;;		_pad
  1672 ;; This function is called by:
  1673 ;;		_vfpfcnvrt
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text4
  1678   002964                     __ptext4:
  1679                           	callstack 0
  1680   002964                     _dtoa:
  1681                           	callstack 22
  1682   002964                     
  1683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1684   002964  C01E  F034         	movff	dtoa@d,dtoa@n
  1685   002968  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  1686   00296C  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  1687   002970  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  1688   002974  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  1689   002978  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  1690   00297C  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  1691   002980  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  1692   002984                     
  1693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1694   002984  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  1695   002986  EFC7  F014         	goto	u2261
  1696   00298A  EFCA  F014         	goto	u2260
  1697   00298E                     u2261:
  1698   00298E  0E01               	movlw	1
  1699   002990  EFCB  F014         	goto	u2270
  1700   002994                     u2260:
  1701   002994  0E00               	movlw	0
  1702   002996                     u2270:
  1703   002996  6E3E               	movwf	dtoa@s^0,c
  1704   002998                     
  1705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1706   002998  503E               	movf	dtoa@s^0,w,c
  1707   00299A  B4D8               	btfsc	status,2,c
  1708   00299C  EFD2  F014         	goto	u2281
  1709   0029A0  EFD4  F014         	goto	u2280
  1710   0029A4                     u2281:
  1711   0029A4  EFE4  F014         	goto	l2823
  1712   0029A8                     u2280:
  1713   0029A8                     
  1714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1715   0029A8  1E3B               	comf	(dtoa@n+7)^0,f,c
  1716   0029AA  1E3A               	comf	(dtoa@n+6)^0,f,c
  1717   0029AC  1E39               	comf	(dtoa@n+5)^0,f,c
  1718   0029AE  1E38               	comf	(dtoa@n+4)^0,f,c
  1719   0029B0  1E37               	comf	(dtoa@n+3)^0,f,c
  1720   0029B2  1E36               	comf	(dtoa@n+2)^0,f,c
  1721   0029B4  1E35               	comf	(dtoa@n+1)^0,f,c
  1722   0029B6  6C34               	negf	dtoa@n^0,c
  1723   0029B8  0E00               	movlw	0
  1724   0029BA  2235               	addwfc	(dtoa@n+1)^0,f,c
  1725   0029BC  2236               	addwfc	(dtoa@n+2)^0,f,c
  1726   0029BE  2237               	addwfc	(dtoa@n+3)^0,f,c
  1727   0029C0  2238               	addwfc	(dtoa@n+4)^0,f,c
  1728   0029C2  2239               	addwfc	(dtoa@n+5)^0,f,c
  1729   0029C4  223A               	addwfc	(dtoa@n+6)^0,f,c
  1730   0029C6  223B               	addwfc	(dtoa@n+7)^0,f,c
  1731   0029C8                     l2823:
  1732                           
  1733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1734   0029C8  0100               	movlb	0	; () banked
  1735   0029CA  BFE9               	btfsc	(_prec+1)& (0+255),7,b
  1736   0029CC  EFF2  F014         	goto	u2290
  1737   0029D0  51E9               	movf	(_prec+1)& (0+255),w,b
  1738   0029D2  E106               	bnz	u2291
  1739   0029D4  05E8               	decf	_prec& (0+255),w,b
  1740   0029D6  B0D8               	btfsc	status,0,c
  1741   0029D8  EFF0  F014         	goto	u2291
  1742   0029DC  EFF2  F014         	goto	u2290
  1743   0029E0                     u2291:
  1744   0029E0  EFF8  F014         	goto	l1174
  1745   0029E4                     u2290:
  1746   0029E4                     
  1747                           ; BSR set to: 0
  1748   0029E4  0E00               	movlw	0
  1749   0029E6  6E31               	movwf	(dtoa@p+1)^0,c
  1750   0029E8  0E01               	movlw	1
  1751   0029EA  6E30               	movwf	dtoa@p^0,c
  1752   0029EC  EFFC  F014         	goto	l1176
  1753   0029F0                     l1174:
  1754                           
  1755                           ; BSR set to: 0
  1756   0029F0  C0E8  F030         	movff	_prec,dtoa@p
  1757   0029F4  C0E9  F031         	movff	_prec+1,dtoa@p+1
  1758   0029F8                     l1176:
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1762   0029F8  C0E6  F032         	movff	_width,dtoa@w
  1763   0029FC  C0E7  F033         	movff	_width+1,dtoa@w+1
  1764   002A00                     
  1765                           ; BSR set to: 0
  1766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1767   002A00  503E               	movf	dtoa@s^0,w,c
  1768   002A02  B4D8               	btfsc	status,2,c
  1769   002A04  EF06  F015         	goto	u2301
  1770   002A08  EF08  F015         	goto	u2300
  1771   002A0C                     u2301:
  1772   002A0C  EF1F  F015         	goto	l1177
  1773   002A10                     u2300:
  1774   002A10                     
  1775                           ; BSR set to: 0
  1776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1777   002A10  0632               	decf	dtoa@w^0,f,c
  1778   002A12  A0D8               	btfss	status,0,c
  1779   002A14  0633               	decf	(dtoa@w+1)^0,f,c
  1780   002A16                     
  1781                           ; BSR set to: 0
  1782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1783   002A16  503E               	movf	dtoa@s^0,w,c
  1784   002A18  A4D8               	btfss	status,2,c
  1785   002A1A  EF11  F015         	goto	u2311
  1786   002A1E  EF13  F015         	goto	u2310
  1787   002A22                     u2311:
  1788   002A22  EF19  F015         	goto	l2835
  1789   002A26                     u2310:
  1790   002A26                     
  1791                           ; BSR set to: 0
  1792   002A26  0E00               	movlw	0
  1793   002A28  6E2F               	movwf	(_dtoa$2171+1)^0,c
  1794   002A2A  0E2B               	movlw	43
  1795   002A2C  6E2E               	movwf	_dtoa$2171^0,c
  1796   002A2E  EF1D  F015         	goto	l2837
  1797   002A32                     l2835:
  1798                           
  1799                           ; BSR set to: 0
  1800   002A32  0E00               	movlw	0
  1801   002A34  6E2F               	movwf	(_dtoa$2171+1)^0,c
  1802   002A36  0E2D               	movlw	45
  1803   002A38  6E2E               	movwf	_dtoa$2171^0,c
  1804   002A3A                     l2837:
  1805                           
  1806                           ; BSR set to: 0
  1807   002A3A  C02E  F03E         	movff	_dtoa$2171,dtoa@s
  1808   002A3E                     l1177:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1812   002A3E  0E00               	movlw	0
  1813   002A40  6E3D               	movwf	(dtoa@i+1)^0,c
  1814   002A42  0E1F               	movlw	31
  1815   002A44  6E3C               	movwf	dtoa@i^0,c
  1816   002A46                     
  1817                           ; BSR set to: 0
  1818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1819   002A46  0E00               	movlw	0
  1820   002A48  0101               	movlb	1	; () banked
  1821   002A4A  6F7B               	movwf	(_dbuf+31)& (0+255),b
  1822                           
  1823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1824   002A4C  EFA4  F015         	goto	l2851
  1825   002A50                     l2841:
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1828   002A50  063C               	decf	dtoa@i^0,f,c
  1829   002A52  A0D8               	btfss	status,0,c
  1830   002A54  063D               	decf	(dtoa@i+1)^0,f,c
  1831   002A56                     
  1832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1833   002A56  0E5C               	movlw	low _dbuf
  1834   002A58  243C               	addwf	dtoa@i^0,w,c
  1835   002A5A  6ED9               	movwf	fsr2l,c
  1836   002A5C  0E01               	movlw	high _dbuf
  1837   002A5E  203D               	addwfc	(dtoa@i+1)^0,w,c
  1838   002A60  6EDA               	movwf	fsr2h,c
  1839   002A62  C034  F001         	movff	dtoa@n,___aomod@dividend
  1840   002A66  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1841   002A6A  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1842   002A6E  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1843   002A72  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1844   002A76  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1845   002A7A  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1846   002A7E  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1847   002A82  0E0A               	movlw	10
  1848   002A84  6E09               	movwf	___aomod@divisor^0,c
  1849   002A86  0E00               	movlw	0
  1850   002A88  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1851   002A8A  0E00               	movlw	0
  1852   002A8C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1853   002A8E  0E00               	movlw	0
  1854   002A90  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1855   002A92  0E00               	movlw	0
  1856   002A94  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1857   002A96  0E00               	movlw	0
  1858   002A98  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1859   002A9A  0E00               	movlw	0
  1860   002A9C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1861   002A9E  0E00               	movlw	0
  1862   002AA0  6E10               	movwf	(___aomod@divisor+7)^0,c
  1863   002AA2  EC0C  F019         	call	___aomod	;wreg free
  1864   002AA6  C001  F026         	movff	?___aomod,??_dtoa
  1865   002AAA  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1866   002AAE  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1867   002AB2  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1868   002AB6  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1869   002ABA  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1870   002ABE  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1871   002AC2  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1872   002AC6  C026  F013         	movff	??_dtoa,abs@a
  1873   002ACA  C027  F014         	movff	??_dtoa+1,abs@a+1
  1874   002ACE  EC24  F020         	call	_abs	;wreg free
  1875   002AD2  5013               	movf	?_abs^0,w,c
  1876   002AD4  0F30               	addlw	48
  1877   002AD6  6EDF               	movwf	indf2,c
  1878   002AD8                     
  1879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1880   002AD8  0630               	decf	dtoa@p^0,f,c
  1881   002ADA  A0D8               	btfss	status,0,c
  1882   002ADC  0631               	decf	(dtoa@p+1)^0,f,c
  1883   002ADE                     
  1884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1885   002ADE  0632               	decf	dtoa@w^0,f,c
  1886   002AE0  A0D8               	btfss	status,0,c
  1887   002AE2  0633               	decf	(dtoa@w+1)^0,f,c
  1888   002AE4                     
  1889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1890   002AE4  C034  F001         	movff	dtoa@n,___aodiv@dividend
  1891   002AE8  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1892   002AEC  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1893   002AF0  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1894   002AF4  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1895   002AF8  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1896   002AFC  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1897   002B00  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1898   002B04  0E0A               	movlw	10
  1899   002B06  6E09               	movwf	___aodiv@divisor^0,c
  1900   002B08  0E00               	movlw	0
  1901   002B0A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1902   002B0C  0E00               	movlw	0
  1903   002B0E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1904   002B10  0E00               	movlw	0
  1905   002B12  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1906   002B14  0E00               	movlw	0
  1907   002B16  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1908   002B18  0E00               	movlw	0
  1909   002B1A  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1910   002B1C  0E00               	movlw	0
  1911   002B1E  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1912   002B20  0E00               	movlw	0
  1913   002B22  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1914   002B24  EC92  F017         	call	___aodiv	;wreg free
  1915   002B28  C001  F034         	movff	?___aodiv,dtoa@n
  1916   002B2C  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  1917   002B30  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  1918   002B34  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  1919   002B38  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  1920   002B3C  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  1921   002B40  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  1922   002B44  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  1923   002B48                     l2851:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1926   002B48  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  1927   002B4A  EFAF  F015         	goto	u2321
  1928   002B4E  503D               	movf	(dtoa@i+1)^0,w,c
  1929   002B50  E108               	bnz	u2320
  1930   002B52  043C               	decf	dtoa@i^0,w,c
  1931   002B54  A0D8               	btfss	status,0,c
  1932   002B56  EFAF  F015         	goto	u2321
  1933   002B5A  EFB1  F015         	goto	u2320
  1934   002B5E                     u2321:
  1935   002B5E  EFCD  F015         	goto	l2857
  1936   002B62                     u2320:
  1937   002B62  5034               	movf	dtoa@n^0,w,c
  1938   002B64  1035               	iorwf	(dtoa@n+1)^0,w,c
  1939   002B66  1036               	iorwf	(dtoa@n+2)^0,w,c
  1940   002B68  1037               	iorwf	(dtoa@n+3)^0,w,c
  1941   002B6A  1038               	iorwf	(dtoa@n+4)^0,w,c
  1942   002B6C  1039               	iorwf	(dtoa@n+5)^0,w,c
  1943   002B6E  103A               	iorwf	(dtoa@n+6)^0,w,c
  1944   002B70  103B               	iorwf	(dtoa@n+7)^0,w,c
  1945   002B72  A4D8               	btfss	status,2,c
  1946   002B74  EFBE  F015         	goto	u2331
  1947   002B78  EFC0  F015         	goto	u2330
  1948   002B7C                     u2331:
  1949   002B7C  EF28  F015         	goto	l2841
  1950   002B80                     u2330:
  1951   002B80  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1952   002B82  EFCD  F015         	goto	u2340
  1953   002B86  5031               	movf	(dtoa@p+1)^0,w,c
  1954   002B88  E106               	bnz	u2341
  1955   002B8A  0430               	decf	dtoa@p^0,w,c
  1956   002B8C  B0D8               	btfsc	status,0,c
  1957   002B8E  EFCB  F015         	goto	u2341
  1958   002B92  EFCD  F015         	goto	u2340
  1959   002B96                     u2341:
  1960   002B96  EF28  F015         	goto	l2841
  1961   002B9A                     u2340:
  1962   002B9A                     l2857:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1965   002B9A  503E               	movf	dtoa@s^0,w,c
  1966   002B9C  B4D8               	btfsc	status,2,c
  1967   002B9E  EFD3  F015         	goto	u2351
  1968   002BA2  EFD5  F015         	goto	u2350
  1969   002BA6                     u2351:
  1970   002BA6  EFE0  F015         	goto	l2863
  1971   002BAA                     u2350:
  1972   002BAA                     
  1973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1974   002BAA  063C               	decf	dtoa@i^0,f,c
  1975   002BAC  A0D8               	btfss	status,0,c
  1976   002BAE  063D               	decf	(dtoa@i+1)^0,f,c
  1977   002BB0                     
  1978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1979   002BB0  0E5C               	movlw	low _dbuf
  1980   002BB2  243C               	addwf	dtoa@i^0,w,c
  1981   002BB4  6ED9               	movwf	fsr2l,c
  1982   002BB6  0E01               	movlw	high _dbuf
  1983   002BB8  203D               	addwfc	(dtoa@i+1)^0,w,c
  1984   002BBA  6EDA               	movwf	fsr2h,c
  1985   002BBC  C03E  FFDF         	movff	dtoa@s,indf2
  1986   002BC0                     l2863:
  1987                           
  1988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1989   002BC0  C01C  F011         	movff	dtoa@fp,pad@fp
  1990   002BC4  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1991   002BC8  0E5C               	movlw	low _dbuf
  1992   002BCA  243C               	addwf	dtoa@i^0,w,c
  1993   002BCC  6E13               	movwf	pad@buf^0,c
  1994   002BCE  0E01               	movlw	high _dbuf
  1995   002BD0  203D               	addwfc	(dtoa@i+1)^0,w,c
  1996   002BD2  6E14               	movwf	(pad@buf+1)^0,c
  1997   002BD4  C032  F015         	movff	dtoa@w,pad@p
  1998   002BD8  C033  F016         	movff	dtoa@w+1,pad@p+1
  1999   002BDC  EC11  F01D         	call	_pad	;wreg free
  2000   002BE0  0012               	return		;funcret
  2001   002BE2                     __end_of_dtoa:
  2002                           	callstack 0
  2003                           
  2004 ;; *************** function _pad *****************
  2005 ;; Defined at:
  2006 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2009 ;;		 -> sprintf@f(11), 
  2010 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2011 ;;		 -> dbuf(32), 
  2012 ;;  p               2   20[COMRAM] int 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  w               2   25[COMRAM] int 
  2015 ;;  i               2   23[COMRAM] int 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2025 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2026 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2027 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2028 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2029 ;;Total ram usage:       11 bytes
  2030 ;; Hardware stack levels used: 1
  2031 ;; Hardware stack levels required when called: 4
  2032 ;; This function calls:
  2033 ;;		_fputc
  2034 ;;		_fputs
  2035 ;; This function is called by:
  2036 ;;		_dtoa
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text5
  2041   003A22                     __ptext5:
  2042                           	callstack 0
  2043   003A22                     _pad:
  2044                           	callstack 22
  2045   003A22                     
  2046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2047   003A22  BE16               	btfsc	(pad@p+1)^0,7,c
  2048   003A24  EF16  F01D         	goto	u2191
  2049   003A28  EF18  F01D         	goto	u2190
  2050   003A2C                     u2191:
  2051   003A2C  EF1E  F01D         	goto	l2781
  2052   003A30                     u2190:
  2053   003A30  C015  F01A         	movff	pad@p,pad@w
  2054   003A34  C016  F01B         	movff	pad@p+1,pad@w+1
  2055   003A38  EF22  F01D         	goto	l1165
  2056   003A3C                     l2781:
  2057   003A3C  0E00               	movlw	0
  2058   003A3E  6E1B               	movwf	(pad@w+1)^0,c
  2059   003A40  0E00               	movlw	0
  2060   003A42  6E1A               	movwf	pad@w^0,c
  2061   003A44                     l1165:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2064   003A44  0E00               	movlw	0
  2065   003A46  6E19               	movwf	(pad@i+1)^0,c
  2066   003A48  0E00               	movlw	0
  2067   003A4A  6E18               	movwf	pad@i^0,c
  2068                           
  2069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2070   003A4C  EF34  F01D         	goto	l2787
  2071   003A50                     l2783:
  2072                           
  2073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2074   003A50  0E00               	movlw	0
  2075   003A52  6E02               	movwf	(fputc@c+1)^0,c
  2076   003A54  0E20               	movlw	32
  2077   003A56  6E01               	movwf	fputc@c^0,c
  2078   003A58  C011  F003         	movff	pad@fp,fputc@fp
  2079   003A5C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2080   003A60  ECE7  F01A         	call	_fputc	;wreg free
  2081   003A64                     
  2082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2083   003A64  4A18               	infsnz	pad@i^0,f,c
  2084   003A66  2A19               	incf	(pad@i+1)^0,f,c
  2085   003A68                     l2787:
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2088   003A68  501A               	movf	pad@w^0,w,c
  2089   003A6A  5C18               	subwf	pad@i^0,w,c
  2090   003A6C  5019               	movf	(pad@i+1)^0,w,c
  2091   003A6E  0A80               	xorlw	128
  2092   003A70  6E17               	movwf	??_pad^0,c
  2093   003A72  501B               	movf	(pad@w+1)^0,w,c
  2094   003A74  0A80               	xorlw	128
  2095   003A76  5817               	subwfb	??_pad^0,w,c
  2096   003A78  A0D8               	btfss	status,0,c
  2097   003A7A  EF41  F01D         	goto	u2201
  2098   003A7E  EF43  F01D         	goto	u2200
  2099   003A82                     u2201:
  2100   003A82  EF28  F01D         	goto	l2783
  2101   003A86                     u2200:
  2102   003A86                     
  2103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2104   003A86  C013  F00A         	movff	pad@buf,fputs@s
  2105   003A8A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2106   003A8E  C011  F00C         	movff	pad@fp,fputs@fp
  2107   003A92  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2108   003A96  ECE1  F01F         	call	_fputs	;wreg free
  2109   003A9A  0012               	return		;funcret
  2110   003A9C                     __end_of_pad:
  2111                           	callstack 0
  2112                           
  2113 ;; *************** function _fputs *****************
  2114 ;; Defined at:
  2115 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2118 ;;		 -> dbuf(32), 
  2119 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2120 ;;		 -> sprintf@f(11), 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  i               2   14[COMRAM] int 
  2123 ;;  c               1   13[COMRAM] unsigned char 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  2    9[COMRAM] int 
  2126 ;; Registers used:
  2127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2133 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2134 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;Total ram usage:        7 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; Hardware stack levels required when called: 3
  2140 ;; This function calls:
  2141 ;;		_fputc
  2142 ;; This function is called by:
  2143 ;;		_pad
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text6
  2148   003FC2                     __ptext6:
  2149                           	callstack 0
  2150   003FC2                     _fputs:
  2151                           	callstack 22
  2152   003FC2  0E00               	movlw	0
  2153   003FC4  6E10               	movwf	(fputs@i+1)^0,c
  2154   003FC6  0E00               	movlw	0
  2155   003FC8  6E0F               	movwf	fputs@i^0,c
  2156   003FCA  EFF2  F01F         	goto	l2667
  2157   003FCE                     l2663:
  2158   003FCE  C00E  F001         	movff	fputs@c,fputc@c
  2159   003FD2  6A02               	clrf	(fputc@c+1)^0,c
  2160   003FD4  C00C  F003         	movff	fputs@fp,fputc@fp
  2161   003FD8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2162   003FDC  ECE7  F01A         	call	_fputc	;wreg free
  2163   003FE0  4A0F               	infsnz	fputs@i^0,f,c
  2164   003FE2  2A10               	incf	(fputs@i+1)^0,f,c
  2165   003FE4                     l2667:
  2166   003FE4  500F               	movf	fputs@i^0,w,c
  2167   003FE6  240A               	addwf	fputs@s^0,w,c
  2168   003FE8  6ED9               	movwf	fsr2l,c
  2169   003FEA  5010               	movf	(fputs@i+1)^0,w,c
  2170   003FEC  200B               	addwfc	(fputs@s+1)^0,w,c
  2171   003FEE  6EDA               	movwf	fsr2h,c
  2172   003FF0  50DF               	movf	indf2,w,c
  2173   003FF2  6E0E               	movwf	fputs@c^0,c
  2174   003FF4  500E               	movf	fputs@c^0,w,c
  2175   003FF6  A4D8               	btfss	status,2,c
  2176   003FF8  EF00  F020         	goto	u2021
  2177   003FFC  EF02  F020         	goto	u2020
  2178   004000                     u2021:
  2179   004000  EFE7  F01F         	goto	l2663
  2180   004004                     u2020:
  2181   004004  0012               	return		;funcret
  2182   004006                     __end_of_fputs:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function _fputc *****************
  2186 ;; Defined at:
  2187 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  c               2    0[COMRAM] int 
  2190 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2191 ;;		 -> sprintf@f(11), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  2    0[COMRAM] int 
  2196 ;; Registers used:
  2197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2203 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2205 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2206 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2207 ;;Total ram usage:        9 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; Hardware stack levels required when called: 2
  2210 ;; This function calls:
  2211 ;;		_putch
  2212 ;; This function is called by:
  2213 ;;		_pad
  2214 ;;		_vfpfcnvrt
  2215 ;;		_fputs
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text7
  2220   0035CE                     __ptext7:
  2221                           	callstack 0
  2222   0035CE                     _fputc:
  2223                           	callstack 25
  2224   0035CE  5003               	movf	fputc@fp^0,w,c
  2225   0035D0  1004               	iorwf	(fputc@fp+1)^0,w,c
  2226   0035D2  B4D8               	btfsc	status,2,c
  2227   0035D4  EFEE  F01A         	goto	u1981
  2228   0035D8  EFF0  F01A         	goto	u1980
  2229   0035DC                     u1981:
  2230   0035DC  EFF9  F01A         	goto	l2651
  2231   0035E0                     u1980:
  2232   0035E0  5003               	movf	fputc@fp^0,w,c
  2233   0035E2  1004               	iorwf	(fputc@fp+1)^0,w,c
  2234   0035E4  A4D8               	btfss	status,2,c
  2235   0035E6  EFF7  F01A         	goto	u1991
  2236   0035EA  EFF9  F01A         	goto	u1990
  2237   0035EE                     u1991:
  2238   0035EE  EFFE  F01A         	goto	l2653
  2239   0035F2                     u1990:
  2240   0035F2                     l2651:
  2241   0035F2  5001               	movf	fputc@c^0,w,c
  2242   0035F4  ECD9  F020         	call	_putch
  2243   0035F8  EF4B  F01B         	goto	l1220
  2244   0035FC                     l2653:
  2245   0035FC  EE20 F009          	lfsr	2,9
  2246   003600  5003               	movf	fputc@fp^0,w,c
  2247   003602  26D9               	addwf	fsr2l,f,c
  2248   003604  5004               	movf	(fputc@fp+1)^0,w,c
  2249   003606  22DA               	addwfc	fsr2h,f,c
  2250   003608  50DE               	movf	postinc2,w,c
  2251   00360A  10DE               	iorwf	postinc2,w,c
  2252   00360C  B4D8               	btfsc	status,2,c
  2253   00360E  EF0B  F01B         	goto	u2001
  2254   003612  EF0D  F01B         	goto	u2000
  2255   003616                     u2001:
  2256   003616  EF28  F01B         	goto	l2657
  2257   00361A                     u2000:
  2258   00361A  EE20 F009          	lfsr	2,9
  2259   00361E  5003               	movf	fputc@fp^0,w,c
  2260   003620  26D9               	addwf	fsr2l,f,c
  2261   003622  5004               	movf	(fputc@fp+1)^0,w,c
  2262   003624  22DA               	addwfc	fsr2h,f,c
  2263   003626  EE10 F003          	lfsr	1,3
  2264   00362A  5003               	movf	fputc@fp^0,w,c
  2265   00362C  26E1               	addwf	fsr1l,f,c
  2266   00362E  5004               	movf	(fputc@fp+1)^0,w,c
  2267   003630  22E2               	addwfc	fsr1h,f,c
  2268   003632  50DE               	movf	postinc2,w,c
  2269   003634  5CE6               	subwf	postinc1,w,c
  2270   003636  50E6               	movf	postinc1,w,c
  2271   003638  0A80               	xorlw	128
  2272   00363A  6E09               	movwf	(??_fputc+4)^0,c
  2273   00363C  50DE               	movf	postinc2,w,c
  2274   00363E  0A80               	xorlw	128
  2275   003640  5809               	subwfb	(??_fputc+4)^0,w,c
  2276   003642  B0D8               	btfsc	status,0,c
  2277   003644  EF26  F01B         	goto	u2011
  2278   003648  EF28  F01B         	goto	u2010
  2279   00364C                     u2011:
  2280   00364C  EF4B  F01B         	goto	l1220
  2281   003650                     u2010:
  2282   003650                     l2657:
  2283   003650  EE20 F003          	lfsr	2,3
  2284   003654  5003               	movf	fputc@fp^0,w,c
  2285   003656  26D9               	addwf	fsr2l,f,c
  2286   003658  5004               	movf	(fputc@fp+1)^0,w,c
  2287   00365A  22DA               	addwfc	fsr2h,f,c
  2288   00365C  CFDE F005          	movff	postinc2,??_fputc
  2289   003660  CFDD F006          	movff	postdec2,??_fputc+1
  2290   003664  C003  FFD9         	movff	fputc@fp,fsr2l
  2291   003668  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2292   00366C  CFDE F007          	movff	postinc2,??_fputc+2
  2293   003670  CFDD F008          	movff	postdec2,??_fputc+3
  2294   003674  5005               	movf	??_fputc^0,w,c
  2295   003676  2407               	addwf	(??_fputc+2)^0,w,c
  2296   003678  6ED9               	movwf	fsr2l,c
  2297   00367A  5006               	movf	(??_fputc+1)^0,w,c
  2298   00367C  2008               	addwfc	(??_fputc+3)^0,w,c
  2299   00367E  6EDA               	movwf	fsr2h,c
  2300   003680  C001  FFDF         	movff	fputc@c,indf2
  2301   003684  EE20 F003          	lfsr	2,3
  2302   003688  5003               	movf	fputc@fp^0,w,c
  2303   00368A  26D9               	addwf	fsr2l,f,c
  2304   00368C  5004               	movf	(fputc@fp+1)^0,w,c
  2305   00368E  22DA               	addwfc	fsr2h,f,c
  2306   003690  2ADE               	incf	postinc2,f,c
  2307   003692  0E00               	movlw	0
  2308   003694  22DD               	addwfc	postdec2,f,c
  2309   003696                     l1220:
  2310   003696  0012               	return		;funcret
  2311   003698                     __end_of_fputc:
  2312                           	callstack 0
  2313                           
  2314 ;; *************** function _putch *****************
  2315 ;; Defined at:
  2316 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  c               1    wreg     unsigned char 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  c               1    0[COMRAM] unsigned char 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2334 ;;Total ram usage:        0 bytes
  2335 ;; Hardware stack levels used: 1
  2336 ;; Hardware stack levels required when called: 1
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_fputc
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text8
  2345   0041B2                     __ptext8:
  2346                           	callstack 0
  2347   0041B2                     _putch:
  2348                           	callstack 25
  2349   0041B2  0012               	return		;funcret
  2350   0041B4                     __end_of_putch:
  2351                           	callstack 0
  2352                           
  2353 ;; *************** function _abs *****************
  2354 ;; Defined at:
  2355 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  a               2   18[COMRAM] int 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  2   18[COMRAM] int 
  2362 ;; Registers used:
  2363 ;;		wreg, status,2, status,0
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2371 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;Total ram usage:        4 bytes
  2374 ;; Hardware stack levels used: 1
  2375 ;; Hardware stack levels required when called: 1
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_dtoa
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text9
  2384   004048                     __ptext9:
  2385                           	callstack 0
  2386   004048                     _abs:
  2387                           	callstack 25
  2388   004048  BE14               	btfsc	(abs@a+1)^0,7,c
  2389   00404A  EF31  F020         	goto	u2210
  2390   00404E  5014               	movf	(abs@a+1)^0,w,c
  2391   004050  E106               	bnz	u2211
  2392   004052  0413               	decf	abs@a^0,w,c
  2393   004054  B0D8               	btfsc	status,0,c
  2394   004056  EF2F  F020         	goto	u2211
  2395   00405A  EF31  F020         	goto	u2210
  2396   00405E                     u2211:
  2397   00405E  EF3F  F020         	goto	l1205
  2398   004062                     u2210:
  2399   004062  C013  F015         	movff	abs@a,??_abs
  2400   004066  C014  F016         	movff	abs@a+1,??_abs+1
  2401   00406A  1E15               	comf	??_abs^0,f,c
  2402   00406C  1E16               	comf	(??_abs+1)^0,f,c
  2403   00406E  4A15               	infsnz	??_abs^0,f,c
  2404   004070  2A16               	incf	(??_abs+1)^0,f,c
  2405   004072  C015  F013         	movff	??_abs,?_abs
  2406   004076  C016  F014         	movff	??_abs+1,?_abs+1
  2407   00407A  EF43  F020         	goto	l1208
  2408   00407E                     l1205:
  2409   00407E  C013  F013         	movff	abs@a,?_abs
  2410   004082  C014  F014         	movff	abs@a+1,?_abs+1
  2411   004086                     l1208:
  2412   004086  0012               	return		;funcret
  2413   004088                     __end_of_abs:
  2414                           	callstack 0
  2415                           
  2416 ;; *************** function ___aomod *****************
  2417 ;; Defined at:
  2418 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  dividend        8    0[COMRAM] long long 
  2421 ;;  divisor         8    8[COMRAM] long long 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  sign            1   17[COMRAM] unsigned char 
  2424 ;;  counter         1   16[COMRAM] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  8    0[COMRAM] long long 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2434 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2435 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2437 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2438 ;;Total ram usage:       18 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; Hardware stack levels required when called: 1
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_dtoa
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text10
  2449   003218                     __ptext10:
  2450                           	callstack 0
  2451   003218                     ___aomod:
  2452                           	callstack 25
  2453   003218  0E00               	movlw	0
  2454   00321A  6E12               	movwf	___aomod@sign^0,c
  2455   00321C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2456   00321E  EF15  F019         	goto	u2100
  2457   003222  EF13  F019         	goto	u2101
  2458   003226                     u2101:
  2459   003226  EF27  F019         	goto	l2727
  2460   00322A                     u2100:
  2461   00322A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2462   00322C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2463   00322E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2464   003230  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2465   003232  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2466   003234  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2467   003236  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2468   003238  6C01               	negf	___aomod@dividend^0,c
  2469   00323A  0E00               	movlw	0
  2470   00323C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2471   00323E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2472   003240  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2473   003242  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2474   003244  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2475   003246  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2476   003248  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2477   00324A  0E01               	movlw	1
  2478   00324C  6E12               	movwf	___aomod@sign^0,c
  2479   00324E                     l2727:
  2480   00324E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2481   003250  EF2E  F019         	goto	u2110
  2482   003254  EF2C  F019         	goto	u2111
  2483   003258                     u2111:
  2484   003258  EF3E  F019         	goto	l2731
  2485   00325C                     u2110:
  2486   00325C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2487   00325E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2488   003260  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2489   003262  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2490   003264  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2491   003266  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2492   003268  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2493   00326A  6C09               	negf	___aomod@divisor^0,c
  2494   00326C  0E00               	movlw	0
  2495   00326E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2496   003270  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2497   003272  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2498   003274  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2499   003276  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2500   003278  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2501   00327A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2502   00327C                     l2731:
  2503   00327C  5009               	movf	___aomod@divisor^0,w,c
  2504   00327E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2505   003280  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2506   003282  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2507   003284  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2508   003286  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2509   003288  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2510   00328A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2511   00328C  B4D8               	btfsc	status,2,c
  2512   00328E  EF4B  F019         	goto	u2121
  2513   003292  EF4D  F019         	goto	u2120
  2514   003296                     u2121:
  2515   003296  EF95  F019         	goto	l2747
  2516   00329A                     u2120:
  2517   00329A  0E01               	movlw	1
  2518   00329C  6E11               	movwf	___aomod@counter^0,c
  2519   00329E  EF5B  F019         	goto	l2737
  2520   0032A2                     l2735:
  2521   0032A2  90D8               	bcf	status,0,c
  2522   0032A4  3609               	rlcf	___aomod@divisor^0,f,c
  2523   0032A6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2524   0032A8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2525   0032AA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2526   0032AC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2527   0032AE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2528   0032B0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2529   0032B2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2530   0032B4  2A11               	incf	___aomod@counter^0,f,c
  2531   0032B6                     l2737:
  2532   0032B6  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2533   0032B8  EF60  F019         	goto	u2131
  2534   0032BC  EF62  F019         	goto	u2130
  2535   0032C0                     u2131:
  2536   0032C0  EF51  F019         	goto	l2735
  2537   0032C4                     u2130:
  2538   0032C4                     l2739:
  2539   0032C4  5009               	movf	___aomod@divisor^0,w,c
  2540   0032C6  5C01               	subwf	___aomod@dividend^0,w,c
  2541   0032C8  500A               	movf	(___aomod@divisor+1)^0,w,c
  2542   0032CA  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2543   0032CC  500B               	movf	(___aomod@divisor+2)^0,w,c
  2544   0032CE  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2545   0032D0  500C               	movf	(___aomod@divisor+3)^0,w,c
  2546   0032D2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2547   0032D4  500D               	movf	(___aomod@divisor+4)^0,w,c
  2548   0032D6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2549   0032D8  500E               	movf	(___aomod@divisor+5)^0,w,c
  2550   0032DA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2551   0032DC  500F               	movf	(___aomod@divisor+6)^0,w,c
  2552   0032DE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2553   0032E0  5010               	movf	(___aomod@divisor+7)^0,w,c
  2554   0032E2  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2555   0032E4  A0D8               	btfss	status,0,c
  2556   0032E6  EF77  F019         	goto	u2141
  2557   0032EA  EF79  F019         	goto	u2140
  2558   0032EE                     u2141:
  2559   0032EE  EF89  F019         	goto	l2743
  2560   0032F2                     u2140:
  2561   0032F2  5009               	movf	___aomod@divisor^0,w,c
  2562   0032F4  5E01               	subwf	___aomod@dividend^0,f,c
  2563   0032F6  500A               	movf	(___aomod@divisor+1)^0,w,c
  2564   0032F8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2565   0032FA  500B               	movf	(___aomod@divisor+2)^0,w,c
  2566   0032FC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2567   0032FE  500C               	movf	(___aomod@divisor+3)^0,w,c
  2568   003300  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2569   003302  500D               	movf	(___aomod@divisor+4)^0,w,c
  2570   003304  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2571   003306  500E               	movf	(___aomod@divisor+5)^0,w,c
  2572   003308  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2573   00330A  500F               	movf	(___aomod@divisor+6)^0,w,c
  2574   00330C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2575   00330E  5010               	movf	(___aomod@divisor+7)^0,w,c
  2576   003310  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2577   003312                     l2743:
  2578   003312  90D8               	bcf	status,0,c
  2579   003314  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2580   003316  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2581   003318  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2582   00331A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2583   00331C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2584   00331E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2585   003320  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2586   003322  3209               	rrcf	___aomod@divisor^0,f,c
  2587   003324  2E11               	decfsz	___aomod@counter^0,f,c
  2588   003326  EF62  F019         	goto	l2739
  2589   00332A                     l2747:
  2590   00332A  5012               	movf	___aomod@sign^0,w,c
  2591   00332C  B4D8               	btfsc	status,2,c
  2592   00332E  EF9B  F019         	goto	u2151
  2593   003332  EF9D  F019         	goto	u2150
  2594   003336                     u2151:
  2595   003336  EFAD  F019         	goto	l2751
  2596   00333A                     u2150:
  2597   00333A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2598   00333C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2599   00333E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2600   003340  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2601   003342  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2602   003344  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2603   003346  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2604   003348  6C01               	negf	___aomod@dividend^0,c
  2605   00334A  0E00               	movlw	0
  2606   00334C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2607   00334E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2608   003350  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2609   003352  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2610   003354  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2611   003356  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2612   003358  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2613   00335A                     l2751:
  2614   00335A  C001  F001         	movff	___aomod@dividend,?___aomod
  2615   00335E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2616   003362  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2617   003366  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2618   00336A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2619   00336E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2620   003372  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2621   003376  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2622   00337A  0012               	return		;funcret
  2623   00337C                     __end_of___aomod:
  2624                           	callstack 0
  2625                           
  2626 ;; *************** function ___aodiv *****************
  2627 ;; Defined at:
  2628 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;  dividend        8    0[COMRAM] long long 
  2631 ;;  divisor         8    8[COMRAM] long long 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  quotient        8   18[COMRAM] long long 
  2634 ;;  sign            1   17[COMRAM] unsigned char 
  2635 ;;  counter         1   16[COMRAM] unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  8    0[COMRAM] long long 
  2638 ;; Registers used:
  2639 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2645 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2646 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2648 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2649 ;;Total ram usage:       26 bytes
  2650 ;; Hardware stack levels used: 1
  2651 ;; Hardware stack levels required when called: 1
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_dtoa
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text11
  2660   002F24                     __ptext11:
  2661                           	callstack 0
  2662   002F24                     ___aodiv:
  2663                           	callstack 25
  2664   002F24  0E00               	movlw	0
  2665   002F26  6E12               	movwf	___aodiv@sign^0,c
  2666   002F28  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2667   002F2A  EF9B  F017         	goto	u2030
  2668   002F2E  EF99  F017         	goto	u2031
  2669   002F32                     u2031:
  2670   002F32  EFAD  F017         	goto	l2683
  2671   002F36                     u2030:
  2672   002F36  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2673   002F38  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2674   002F3A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2675   002F3C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2676   002F3E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2677   002F40  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2678   002F42  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2679   002F44  6C09               	negf	___aodiv@divisor^0,c
  2680   002F46  0E00               	movlw	0
  2681   002F48  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2682   002F4A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2683   002F4C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2684   002F4E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2685   002F50  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2686   002F52  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2687   002F54  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2688   002F56  0E01               	movlw	1
  2689   002F58  6E12               	movwf	___aodiv@sign^0,c
  2690   002F5A                     l2683:
  2691   002F5A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2692   002F5C  EFB4  F017         	goto	u2040
  2693   002F60  EFB2  F017         	goto	u2041
  2694   002F64                     u2041:
  2695   002F64  EFC6  F017         	goto	l2689
  2696   002F68                     u2040:
  2697   002F68  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2698   002F6A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2699   002F6C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2700   002F6E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2701   002F70  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2702   002F72  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2703   002F74  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2704   002F76  6C01               	negf	___aodiv@dividend^0,c
  2705   002F78  0E00               	movlw	0
  2706   002F7A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2707   002F7C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2708   002F7E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2709   002F80  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2710   002F82  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2711   002F84  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2712   002F86  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2713   002F88  0E01               	movlw	1
  2714   002F8A  1A12               	xorwf	___aodiv@sign^0,f,c
  2715   002F8C                     l2689:
  2716   002F8C  EE20  F013         	lfsr	2,___aodiv@quotient
  2717   002F90  0E07               	movlw	7
  2718   002F92                     u2051:
  2719   002F92  6ADE               	clrf	postinc2,c
  2720   002F94  06E8               	decf	wreg,f,c
  2721   002F96  E2FD               	bc	u2051
  2722   002F98  5009               	movf	___aodiv@divisor^0,w,c
  2723   002F9A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2724   002F9C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2725   002F9E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2726   002FA0  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2727   002FA2  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2728   002FA4  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2729   002FA6  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2730   002FA8  B4D8               	btfsc	status,2,c
  2731   002FAA  EFD9  F017         	goto	u2061
  2732   002FAE  EFDB  F017         	goto	u2060
  2733   002FB2                     u2061:
  2734   002FB2  EF2D  F018         	goto	l2711
  2735   002FB6                     u2060:
  2736   002FB6  0E01               	movlw	1
  2737   002FB8  6E11               	movwf	___aodiv@counter^0,c
  2738   002FBA  EFE9  F017         	goto	l2697
  2739   002FBE                     l2695:
  2740   002FBE  90D8               	bcf	status,0,c
  2741   002FC0  3609               	rlcf	___aodiv@divisor^0,f,c
  2742   002FC2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2743   002FC4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2744   002FC6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2745   002FC8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2746   002FCA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2747   002FCC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2748   002FCE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2749   002FD0  2A11               	incf	___aodiv@counter^0,f,c
  2750   002FD2                     l2697:
  2751   002FD2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2752   002FD4  EFEE  F017         	goto	u2071
  2753   002FD8  EFF0  F017         	goto	u2070
  2754   002FDC                     u2071:
  2755   002FDC  EFDF  F017         	goto	l2695
  2756   002FE0                     u2070:
  2757   002FE0                     l2699:
  2758   002FE0  90D8               	bcf	status,0,c
  2759   002FE2  3613               	rlcf	___aodiv@quotient^0,f,c
  2760   002FE4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2761   002FE6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2762   002FE8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2763   002FEA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2764   002FEC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2765   002FEE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2766   002FF0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2767   002FF2  5009               	movf	___aodiv@divisor^0,w,c
  2768   002FF4  5C01               	subwf	___aodiv@dividend^0,w,c
  2769   002FF6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2770   002FF8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2771   002FFA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2772   002FFC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2773   002FFE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2774   003000  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2775   003002  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2776   003004  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2777   003006  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2778   003008  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2779   00300A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2780   00300C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2781   00300E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2782   003010  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2783   003012  A0D8               	btfss	status,0,c
  2784   003014  EF0E  F018         	goto	u2081
  2785   003018  EF10  F018         	goto	u2080
  2786   00301C                     u2081:
  2787   00301C  EF21  F018         	goto	l2707
  2788   003020                     u2080:
  2789   003020  5009               	movf	___aodiv@divisor^0,w,c
  2790   003022  5E01               	subwf	___aodiv@dividend^0,f,c
  2791   003024  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2792   003026  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2793   003028  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2794   00302A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2795   00302C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2796   00302E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2797   003030  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2798   003032  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2799   003034  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2800   003036  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2801   003038  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2802   00303A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2803   00303C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2804   00303E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2805   003040  8013               	bsf	___aodiv@quotient^0,0,c
  2806   003042                     l2707:
  2807   003042  90D8               	bcf	status,0,c
  2808   003044  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2809   003046  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2810   003048  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2811   00304A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2812   00304C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2813   00304E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2814   003050  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2815   003052  3209               	rrcf	___aodiv@divisor^0,f,c
  2816   003054  2E11               	decfsz	___aodiv@counter^0,f,c
  2817   003056  EFF0  F017         	goto	l2699
  2818   00305A                     l2711:
  2819   00305A  5012               	movf	___aodiv@sign^0,w,c
  2820   00305C  B4D8               	btfsc	status,2,c
  2821   00305E  EF33  F018         	goto	u2091
  2822   003062  EF35  F018         	goto	u2090
  2823   003066                     u2091:
  2824   003066  EF45  F018         	goto	l2715
  2825   00306A                     u2090:
  2826   00306A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2827   00306C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2828   00306E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2829   003070  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2830   003072  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2831   003074  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2832   003076  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2833   003078  6C13               	negf	___aodiv@quotient^0,c
  2834   00307A  0E00               	movlw	0
  2835   00307C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2836   00307E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2837   003080  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2838   003082  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2839   003084  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2840   003086  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2841   003088  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2842   00308A                     l2715:
  2843   00308A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2844   00308E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2845   003092  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2846   003096  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2847   00309A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2848   00309E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2849   0030A2  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2850   0030A6  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2851   0030AA  0012               	return		;funcret
  2852   0030AC                     __end_of___aodiv:
  2853                           	callstack 0
  2854                           
  2855 ;; *************** function _sendStringSerial4 *****************
  2856 ;; Defined at:
  2857 ;;		line 33 in file "serial.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  string          2    1[COMRAM] PTR unsigned char 
  2860 ;;		 -> main@buf(100), 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2872 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2876 ;;Total ram usage:        2 bytes
  2877 ;; Hardware stack levels used: 1
  2878 ;; Hardware stack levels required when called: 2
  2879 ;; This function calls:
  2880 ;;		_sendCharSerial4
  2881 ;; This function is called by:
  2882 ;;		_main
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text12
  2887   004088                     __ptext12:
  2888                           	callstack 0
  2889   004088                     _sendStringSerial4:
  2890                           	callstack 28
  2891   004088                     
  2892                           ;serial.c: 34:     while (*string!=0){
  2893   004088  EF4F  F020         	goto	l3867
  2894   00408C                     l3863:
  2895                           
  2896                           ;serial.c: 35:         sendCharSerial4(*string++);
  2897   00408C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  2898   004090  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2899   004094  50DF               	movf	indf2,w,c
  2900   004096  ECB7  F020         	call	_sendCharSerial4
  2901   00409A  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2902   00409C  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2903   00409E                     l3867:
  2904                           
  2905                           ;serial.c: 34:     while (*string!=0){
  2906   00409E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  2907   0040A2  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2908   0040A6  50DF               	movf	indf2,w,c
  2909   0040A8  A4D8               	btfss	status,2,c
  2910   0040AA  EF59  F020         	goto	u3821
  2911   0040AE  EF5B  F020         	goto	u3820
  2912   0040B2                     u3821:
  2913   0040B2  EF46  F020         	goto	l3863
  2914   0040B6                     u3820:
  2915   0040B6  0012               	return		;funcret
  2916   0040B8                     __end_of_sendStringSerial4:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function _sendCharSerial4 *****************
  2920 ;; Defined at:
  2921 ;;		line 26 in file "serial.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  charToSend      1    wreg     unsigned char 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  charToSend      1    0[COMRAM] unsigned char 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2938 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;Total ram usage:        1 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 1
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_sendStringSerial4
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text13
  2950   00416E                     __ptext13:
  2951                           	callstack 0
  2952   00416E                     _sendCharSerial4:
  2953                           	callstack 28
  2954                           
  2955                           ;incstack = 0
  2956                           ;sendCharSerial4@charToSend stored from wreg
  2957   00416E  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2958   004170                     l206:
  2959   004170  010E               	movlb	14	; () banked
  2960   004172  A537               	btfss	55,2,b	;volatile
  2961   004174  EFBE  F020         	goto	u2881
  2962   004178  EFC0  F020         	goto	u2880
  2963   00417C                     u2881:
  2964   00417C  EFB8  F020         	goto	l206
  2965   004180                     u2880:
  2966   004180                     
  2967                           ; BSR set to: 14
  2968                           ;serial.c: 28:     TX4REG = charToSend;
  2969   004180  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2970   004184                     
  2971                           ; BSR set to: 14
  2972   004184  0012               	return		;funcret
  2973   004186                     __end_of_sendCharSerial4:
  2974                           	callstack 0
  2975                           
  2976 ;; *************** function _readColours *****************
  2977 ;; Defined at:
  2978 ;;		line 105 in file "color.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  vals            2   11[COMRAM] PTR struct RGB
  2981 ;;		 -> vals(8), 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;		None
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2997 ;;Total ram usage:        2 bytes
  2998 ;; Hardware stack levels used: 1
  2999 ;; Hardware stack levels required when called: 4
  3000 ;; This function calls:
  3001 ;;		_color_read_Blue
  3002 ;;		_color_read_Green
  3003 ;;		_color_read_Red
  3004 ;;		_color_read_lum
  3005 ;; This function is called by:
  3006 ;;		_main
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text14
  3011   003B86                     __ptext14:
  3012                           	callstack 0
  3013   003B86                     _readColours:
  3014                           	callstack 26
  3015   003B86                     
  3016                           ;color.c: 107:     vals ->R = color_read_Red();
  3017   003B86  EC1F  F01F         	call	_color_read_Red	;wreg free
  3018   003B8A  C00C  FFD9         	movff	readColours@vals,fsr2l
  3019   003B8E  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  3020   003B92  C005  FFDE         	movff	?_color_read_Red,postinc2
  3021   003B96  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3022                           
  3023                           ;color.c: 108:     vals ->B = color_read_Blue();
  3024   003B9A  EC6F  F01F         	call	_color_read_Blue	;wreg free
  3025   003B9E  EE20 F004          	lfsr	2,4
  3026   003BA2  500C               	movf	readColours@vals^0,w,c
  3027   003BA4  26D9               	addwf	fsr2l,f,c
  3028   003BA6  500D               	movf	(readColours@vals+1)^0,w,c
  3029   003BA8  22DA               	addwfc	fsr2h,f,c
  3030   003BAA  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3031   003BAE  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3032                           
  3033                           ;color.c: 109:     vals ->G = color_read_Green();
  3034   003BB2  EC47  F01F         	call	_color_read_Green	;wreg free
  3035   003BB6  EE20 F002          	lfsr	2,2
  3036   003BBA  500C               	movf	readColours@vals^0,w,c
  3037   003BBC  26D9               	addwf	fsr2l,f,c
  3038   003BBE  500D               	movf	(readColours@vals+1)^0,w,c
  3039   003BC0  22DA               	addwfc	fsr2h,f,c
  3040   003BC2  C005  FFDE         	movff	?_color_read_Green,postinc2
  3041   003BC6  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3042                           
  3043                           ;color.c: 110:     vals ->L = color_read_lum();
  3044   003BCA  ECF7  F01E         	call	_color_read_lum	;wreg free
  3045   003BCE  EE20 F006          	lfsr	2,6
  3046   003BD2  500C               	movf	readColours@vals^0,w,c
  3047   003BD4  26D9               	addwf	fsr2l,f,c
  3048   003BD6  500D               	movf	(readColours@vals+1)^0,w,c
  3049   003BD8  22DA               	addwfc	fsr2h,f,c
  3050   003BDA  C005  FFDE         	movff	?_color_read_lum,postinc2
  3051   003BDE  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  3052   003BE2  0012               	return		;funcret
  3053   003BE4                     __end_of_readColours:
  3054                           	callstack 0
  3055                           
  3056 ;; *************** function _color_read_lum *****************
  3057 ;; Defined at:
  3058 ;;		line 49 in file "color.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;		None
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  tmp             2    9[COMRAM] unsigned int 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  2    4[COMRAM] unsigned int 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0, cstack
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3073 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3074 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3075 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3076 ;;Total ram usage:        7 bytes
  3077 ;; Hardware stack levels used: 1
  3078 ;; Hardware stack levels required when called: 3
  3079 ;; This function calls:
  3080 ;;		_I2C_2_Master_Read
  3081 ;;		_I2C_2_Master_RepStart
  3082 ;;		_I2C_2_Master_Start
  3083 ;;		_I2C_2_Master_Stop
  3084 ;;		_I2C_2_Master_Write
  3085 ;; This function is called by:
  3086 ;;		_readColours
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text15
  3091   003DEE                     __ptext15:
  3092                           	callstack 0
  3093   003DEE                     _color_read_lum:
  3094                           	callstack 26
  3095   003DEE                     
  3096                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  3097   003DEE  ECD3  F020         	call	_I2C_2_Master_Start	;wreg free
  3098                           
  3099                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  3100   003DF2  0E52               	movlw	82
  3101   003DF4  ECC3  F020         	call	_I2C_2_Master_Write
  3102                           
  3103                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  3104   003DF8  0EB4               	movlw	180
  3105   003DFA  ECC3  F020         	call	_I2C_2_Master_Write
  3106                           
  3107                           ;color.c: 55:  I2C_2_Master_RepStart();
  3108   003DFE  ECC9  F020         	call	_I2C_2_Master_RepStart	;wreg free
  3109                           
  3110                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  3111   003E02  0E53               	movlw	83
  3112   003E04  ECC3  F020         	call	_I2C_2_Master_Write
  3113                           
  3114                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  3115   003E08  0E01               	movlw	1
  3116   003E0A  EC03  F020         	call	_I2C_2_Master_Read
  3117   003E0E  6E07               	movwf	??_color_read_lum^0,c
  3118   003E10  5007               	movf	??_color_read_lum^0,w,c
  3119   003E12  6E0A               	movwf	color_read_lum@tmp^0,c
  3120   003E14  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  3121                           
  3122                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3123   003E16  0E00               	movlw	0
  3124   003E18  EC03  F020         	call	_I2C_2_Master_Read
  3125   003E1C  6E07               	movwf	??_color_read_lum^0,c
  3126   003E1E  5007               	movf	??_color_read_lum^0,w,c
  3127   003E20  6E09               	movwf	(??_color_read_lum+2)^0,c
  3128   003E22  6A08               	clrf	(??_color_read_lum+1)^0,c
  3129   003E24  500A               	movf	color_read_lum@tmp^0,w,c
  3130   003E26  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  3131   003E28  6E0A               	movwf	color_read_lum@tmp^0,c
  3132   003E2A  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  3133   003E2C  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  3134   003E2E  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  3135                           
  3136                           ;color.c: 59:  I2C_2_Master_Stop();
  3137   003E30  ECCE  F020         	call	_I2C_2_Master_Stop	;wreg free
  3138   003E34                     
  3139                           ;color.c: 60:  return tmp;
  3140   003E34  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  3141   003E38  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  3142   003E3C  0012               	return		;funcret
  3143   003E3E                     __end_of_color_read_lum:
  3144                           	callstack 0
  3145                           
  3146 ;; *************** function _color_read_Red *****************
  3147 ;; Defined at:
  3148 ;;		line 63 in file "color.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  tmp             2    9[COMRAM] unsigned int 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  2    4[COMRAM] unsigned int 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3164 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3165 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3166 ;;Total ram usage:        7 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 3
  3169 ;; This function calls:
  3170 ;;		_I2C_2_Master_Read
  3171 ;;		_I2C_2_Master_RepStart
  3172 ;;		_I2C_2_Master_Start
  3173 ;;		_I2C_2_Master_Stop
  3174 ;;		_I2C_2_Master_Write
  3175 ;; This function is called by:
  3176 ;;		_readColours
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text16
  3181   003E3E                     __ptext16:
  3182                           	callstack 0
  3183   003E3E                     _color_read_Red:
  3184                           	callstack 26
  3185   003E3E                     
  3186                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  3187   003E3E  ECD3  F020         	call	_I2C_2_Master_Start	;wreg free
  3188                           
  3189                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  3190   003E42  0E52               	movlw	82
  3191   003E44  ECC3  F020         	call	_I2C_2_Master_Write
  3192                           
  3193                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  3194   003E48  0EB6               	movlw	182
  3195   003E4A  ECC3  F020         	call	_I2C_2_Master_Write
  3196                           
  3197                           ;color.c: 69:  I2C_2_Master_RepStart();
  3198   003E4E  ECC9  F020         	call	_I2C_2_Master_RepStart	;wreg free
  3199                           
  3200                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  3201   003E52  0E53               	movlw	83
  3202   003E54  ECC3  F020         	call	_I2C_2_Master_Write
  3203                           
  3204                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  3205   003E58  0E01               	movlw	1
  3206   003E5A  EC03  F020         	call	_I2C_2_Master_Read
  3207   003E5E  6E07               	movwf	??_color_read_Red^0,c
  3208   003E60  5007               	movf	??_color_read_Red^0,w,c
  3209   003E62  6E0A               	movwf	color_read_Red@tmp^0,c
  3210   003E64  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3211                           
  3212                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3213   003E66  0E00               	movlw	0
  3214   003E68  EC03  F020         	call	_I2C_2_Master_Read
  3215   003E6C  6E07               	movwf	??_color_read_Red^0,c
  3216   003E6E  5007               	movf	??_color_read_Red^0,w,c
  3217   003E70  6E09               	movwf	(??_color_read_Red+2)^0,c
  3218   003E72  6A08               	clrf	(??_color_read_Red+1)^0,c
  3219   003E74  500A               	movf	color_read_Red@tmp^0,w,c
  3220   003E76  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3221   003E78  6E0A               	movwf	color_read_Red@tmp^0,c
  3222   003E7A  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3223   003E7C  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3224   003E7E  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3225                           
  3226                           ;color.c: 73:  I2C_2_Master_Stop();
  3227   003E80  ECCE  F020         	call	_I2C_2_Master_Stop	;wreg free
  3228   003E84                     
  3229                           ;color.c: 74:  return tmp;
  3230   003E84  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3231   003E88  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3232   003E8C  0012               	return		;funcret
  3233   003E8E                     __end_of_color_read_Red:
  3234                           	callstack 0
  3235                           
  3236 ;; *************** function _color_read_Green *****************
  3237 ;; Defined at:
  3238 ;;		line 76 in file "color.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;		None
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  tmp             2    9[COMRAM] unsigned int 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  2    4[COMRAM] unsigned int 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0, cstack
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3253 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3254 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3255 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3256 ;;Total ram usage:        7 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; Hardware stack levels required when called: 3
  3259 ;; This function calls:
  3260 ;;		_I2C_2_Master_Read
  3261 ;;		_I2C_2_Master_RepStart
  3262 ;;		_I2C_2_Master_Start
  3263 ;;		_I2C_2_Master_Stop
  3264 ;;		_I2C_2_Master_Write
  3265 ;; This function is called by:
  3266 ;;		_readColours
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text17
  3271   003E8E                     __ptext17:
  3272                           	callstack 0
  3273   003E8E                     _color_read_Green:
  3274                           	callstack 26
  3275   003E8E                     
  3276                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  3277   003E8E  ECD3  F020         	call	_I2C_2_Master_Start	;wreg free
  3278                           
  3279                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  3280   003E92  0E52               	movlw	82
  3281   003E94  ECC3  F020         	call	_I2C_2_Master_Write
  3282                           
  3283                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  3284   003E98  0EB8               	movlw	184
  3285   003E9A  ECC3  F020         	call	_I2C_2_Master_Write
  3286                           
  3287                           ;color.c: 82:  I2C_2_Master_RepStart();
  3288   003E9E  ECC9  F020         	call	_I2C_2_Master_RepStart	;wreg free
  3289                           
  3290                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  3291   003EA2  0E53               	movlw	83
  3292   003EA4  ECC3  F020         	call	_I2C_2_Master_Write
  3293                           
  3294                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  3295   003EA8  0E01               	movlw	1
  3296   003EAA  EC03  F020         	call	_I2C_2_Master_Read
  3297   003EAE  6E07               	movwf	??_color_read_Green^0,c
  3298   003EB0  5007               	movf	??_color_read_Green^0,w,c
  3299   003EB2  6E0A               	movwf	color_read_Green@tmp^0,c
  3300   003EB4  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  3301                           
  3302                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3303   003EB6  0E00               	movlw	0
  3304   003EB8  EC03  F020         	call	_I2C_2_Master_Read
  3305   003EBC  6E07               	movwf	??_color_read_Green^0,c
  3306   003EBE  5007               	movf	??_color_read_Green^0,w,c
  3307   003EC0  6E09               	movwf	(??_color_read_Green+2)^0,c
  3308   003EC2  6A08               	clrf	(??_color_read_Green+1)^0,c
  3309   003EC4  500A               	movf	color_read_Green@tmp^0,w,c
  3310   003EC6  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  3311   003EC8  6E0A               	movwf	color_read_Green@tmp^0,c
  3312   003ECA  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  3313   003ECC  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  3314   003ECE  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  3315                           
  3316                           ;color.c: 86:  I2C_2_Master_Stop();
  3317   003ED0  ECCE  F020         	call	_I2C_2_Master_Stop	;wreg free
  3318   003ED4                     
  3319                           ;color.c: 87:  return tmp;
  3320   003ED4  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  3321   003ED8  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3322   003EDC  0012               	return		;funcret
  3323   003EDE                     __end_of_color_read_Green:
  3324                           	callstack 0
  3325                           
  3326 ;; *************** function _color_read_Blue *****************
  3327 ;; Defined at:
  3328 ;;		line 90 in file "color.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  tmp             2    9[COMRAM] unsigned int 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  2    4[COMRAM] unsigned int 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3342 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3343 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3344 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3345 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3346 ;;Total ram usage:        7 bytes
  3347 ;; Hardware stack levels used: 1
  3348 ;; Hardware stack levels required when called: 3
  3349 ;; This function calls:
  3350 ;;		_I2C_2_Master_Read
  3351 ;;		_I2C_2_Master_RepStart
  3352 ;;		_I2C_2_Master_Start
  3353 ;;		_I2C_2_Master_Stop
  3354 ;;		_I2C_2_Master_Write
  3355 ;; This function is called by:
  3356 ;;		_readColours
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text18
  3361   003EDE                     __ptext18:
  3362                           	callstack 0
  3363   003EDE                     _color_read_Blue:
  3364                           	callstack 26
  3365   003EDE                     
  3366                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  3367   003EDE  ECD3  F020         	call	_I2C_2_Master_Start	;wreg free
  3368                           
  3369                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  3370   003EE2  0E52               	movlw	82
  3371   003EE4  ECC3  F020         	call	_I2C_2_Master_Write
  3372                           
  3373                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  3374   003EE8  0EBA               	movlw	186
  3375   003EEA  ECC3  F020         	call	_I2C_2_Master_Write
  3376                           
  3377                           ;color.c: 96:  I2C_2_Master_RepStart();
  3378   003EEE  ECC9  F020         	call	_I2C_2_Master_RepStart	;wreg free
  3379                           
  3380                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  3381   003EF2  0E53               	movlw	83
  3382   003EF4  ECC3  F020         	call	_I2C_2_Master_Write
  3383                           
  3384                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  3385   003EF8  0E01               	movlw	1
  3386   003EFA  EC03  F020         	call	_I2C_2_Master_Read
  3387   003EFE  6E07               	movwf	??_color_read_Blue^0,c
  3388   003F00  5007               	movf	??_color_read_Blue^0,w,c
  3389   003F02  6E0A               	movwf	color_read_Blue@tmp^0,c
  3390   003F04  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  3391                           
  3392                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3393   003F06  0E00               	movlw	0
  3394   003F08  EC03  F020         	call	_I2C_2_Master_Read
  3395   003F0C  6E07               	movwf	??_color_read_Blue^0,c
  3396   003F0E  5007               	movf	??_color_read_Blue^0,w,c
  3397   003F10  6E09               	movwf	(??_color_read_Blue+2)^0,c
  3398   003F12  6A08               	clrf	(??_color_read_Blue+1)^0,c
  3399   003F14  500A               	movf	color_read_Blue@tmp^0,w,c
  3400   003F16  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  3401   003F18  6E0A               	movwf	color_read_Blue@tmp^0,c
  3402   003F1A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  3403   003F1C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  3404   003F1E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  3405                           
  3406                           ;color.c: 100:  I2C_2_Master_Stop();
  3407   003F20  ECCE  F020         	call	_I2C_2_Master_Stop	;wreg free
  3408   003F24                     
  3409                           ;color.c: 101:  return tmp;
  3410   003F24  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  3411   003F28  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3412   003F2C  0012               	return		;funcret
  3413   003F2E                     __end_of_color_read_Blue:
  3414                           	callstack 0
  3415                           
  3416 ;; *************** function _I2C_2_Master_RepStart *****************
  3417 ;; Defined at:
  3418 ;;		line 33 in file "i2c.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3436 ;;Total ram usage:        0 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 2
  3439 ;; This function calls:
  3440 ;;		_I2C_2_Master_Idle
  3441 ;; This function is called by:
  3442 ;;		_color_read_lum
  3443 ;;		_color_read_Red
  3444 ;;		_color_read_Green
  3445 ;;		_color_read_Blue
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text19
  3450   004192                     __ptext19:
  3451                           	callstack 0
  3452   004192                     _I2C_2_Master_RepStart:
  3453                           	callstack 26
  3454   004192                     
  3455                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3456   004192  EC71  F020         	call	_I2C_2_Master_Idle	;wreg free
  3457   004196                     
  3458                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3459   004196  010E               	movlb	14	; () banked
  3460   004198  83DA               	bsf	218,1,b	;volatile
  3461   00419A                     
  3462                           ; BSR set to: 14
  3463   00419A  0012               	return		;funcret
  3464   00419C                     __end_of_I2C_2_Master_RepStart:
  3465                           	callstack 0
  3466                           
  3467 ;; *************** function _I2C_2_Master_Read *****************
  3468 ;; Defined at:
  3469 ;;		line 51 in file "i2c.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  ack             1    wreg     unsigned char 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;  ack             1    2[COMRAM] unsigned char 
  3474 ;;  tmp             1    3[COMRAM] unsigned char 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      unsigned char 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3485 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3487 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3488 ;;Total ram usage:        3 bytes
  3489 ;; Hardware stack levels used: 1
  3490 ;; Hardware stack levels required when called: 2
  3491 ;; This function calls:
  3492 ;;		_I2C_2_Master_Idle
  3493 ;; This function is called by:
  3494 ;;		_color_read_lum
  3495 ;;		_color_read_Red
  3496 ;;		_color_read_Green
  3497 ;;		_color_read_Blue
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text20
  3502   004006                     __ptext20:
  3503                           	callstack 0
  3504   004006                     _I2C_2_Master_Read:
  3505                           	callstack 26
  3506                           
  3507                           ; BSR set to: 14
  3508                           ;incstack = 0
  3509                           ;I2C_2_Master_Read@ack stored from wreg
  3510   004006  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3511   004008                     
  3512                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3513   004008  EC71  F020         	call	_I2C_2_Master_Idle	;wreg free
  3514   00400C                     
  3515                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3516   00400C  010E               	movlb	14	; () banked
  3517   00400E  87DA               	bsf	218,3,b	;volatile
  3518                           
  3519                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3520   004010  EC71  F020         	call	_I2C_2_Master_Idle	;wreg free
  3521   004014                     
  3522                           ;i2c.c: 57:   tmp = SSP2BUF;
  3523   004014  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3524                           
  3525                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3526   004018  EC71  F020         	call	_I2C_2_Master_Idle	;wreg free
  3527   00401C                     
  3528                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3529   00401C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3530   00401E  B4D8               	btfsc	status,2,c
  3531   004020  EF14  F020         	goto	u2361
  3532   004024  EF18  F020         	goto	u2360
  3533   004028                     u2361:
  3534   004028  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3535   00402A  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3536   00402C  EF19  F020         	goto	u2378
  3537   004030                     u2360:
  3538   004030  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3539   004032                     u2378:
  3540   004032  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3541   004034  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3542   004036  010E               	movlb	14	; () banked
  3543   004038  51DA               	movf	218,w,b	;volatile
  3544   00403A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3545   00403C  0BDF               	andlw	-33
  3546   00403E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3547   004040  6FDA               	movwf	218,b	;volatile
  3548   004042                     
  3549                           ; BSR set to: 14
  3550                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3551   004042  89DA               	bsf	218,4,b	;volatile
  3552   004044                     
  3553                           ; BSR set to: 14
  3554                           ;i2c.c: 61:   return tmp;
  3555   004044  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3556   004046                     
  3557                           ; BSR set to: 14
  3558   004046  0012               	return		;funcret
  3559   004048                     __end_of_I2C_2_Master_Read:
  3560                           	callstack 0
  3561                           
  3562 ;; *************** function _initUSART4 *****************
  3563 ;; Defined at:
  3564 ;;		line 4 in file "serial.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 1
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_main
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text21
  3593   004150                     __ptext21:
  3594                           	callstack 0
  3595   004150                     _initUSART4:
  3596                           	callstack 29
  3597   004150                     
  3598                           ;serial.c: 5:     RC0PPS = 0x12;
  3599   004150  0E12               	movlw	18
  3600   004152  010E               	movlb	14	; () banked
  3601   004154  6F62               	movwf	98,b	;volatile
  3602                           
  3603                           ;serial.c: 6:     RX4PPS = 0x11;
  3604   004156  0E11               	movlw	17
  3605   004158  6F15               	movwf	21,b	;volatile
  3606   00415A                     
  3607                           ; BSR set to: 14
  3608                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  3609   00415A  97E9               	bcf	233,3,b	;volatile
  3610   00415C                     
  3611                           ; BSR set to: 14
  3612                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  3613   00415C  95E8               	bcf	232,2,b	;volatile
  3614                           
  3615                           ;serial.c: 9:     SP4BRGL = 51;
  3616   00415E  0E33               	movlw	51
  3617   004160  6FE5               	movwf	229,b	;volatile
  3618                           
  3619                           ;serial.c: 10:     SP4BRGH = 0;
  3620   004162  0E00               	movlw	0
  3621   004164  6FE6               	movwf	230,b	;volatile
  3622   004166                     
  3623                           ; BSR set to: 14
  3624                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  3625   004166  89E7               	bsf	231,4,b	;volatile
  3626   004168                     
  3627                           ; BSR set to: 14
  3628                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  3629   004168  8BE8               	bsf	232,5,b	;volatile
  3630   00416A                     
  3631                           ; BSR set to: 14
  3632                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  3633   00416A  8FE7               	bsf	231,7,b	;volatile
  3634   00416C                     
  3635                           ; BSR set to: 14
  3636   00416C  0012               	return		;funcret
  3637   00416E                     __end_of_initUSART4:
  3638                           	callstack 0
  3639                           
  3640 ;; *************** function _initDCmotorsPWM *****************
  3641 ;; Defined at:
  3642 ;;		line 5 in file "dc_motor.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      void 
  3649 ;; Registers used:
  3650 ;;		wreg, status,2
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3660 ;;Total ram usage:        2 bytes
  3661 ;; Hardware stack levels used: 1
  3662 ;; Hardware stack levels required when called: 1
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text22
  3671   00399A                     __ptext22:
  3672                           	callstack 0
  3673   00399A                     _initDCmotorsPWM:
  3674                           	callstack 29
  3675   00399A                     
  3676                           ;dc_motor.c: 9:     RE2PPS=0x05;
  3677   00399A  0E05               	movlw	5
  3678   00399C  010E               	movlb	14	; () banked
  3679   00399E  6F74               	movwf	116,b	;volatile
  3680                           
  3681                           ;dc_motor.c: 10:     RE4PPS=0x06;
  3682   0039A0  0E06               	movlw	6
  3683   0039A2  6F76               	movwf	118,b	;volatile
  3684                           
  3685                           ;dc_motor.c: 11:     RC7PPS=0x07;
  3686   0039A4  0E07               	movlw	7
  3687   0039A6  6F69               	movwf	105,b	;volatile
  3688                           
  3689                           ;dc_motor.c: 12:     RG6PPS=0x08;
  3690   0039A8  0E08               	movlw	8
  3691   0039AA  6F88               	movwf	136,b	;volatile
  3692   0039AC                     
  3693                           ; BSR set to: 14
  3694                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  3695   0039AC  9485               	bcf	133,2,c	;volatile
  3696   0039AE                     
  3697                           ; BSR set to: 14
  3698                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  3699   0039AE  9885               	bcf	133,4,c	;volatile
  3700   0039B0                     
  3701                           ; BSR set to: 14
  3702                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  3703   0039B0  9E83               	bcf	131,7,c	;volatile
  3704   0039B2                     
  3705                           ; BSR set to: 14
  3706                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  3707   0039B2  9C87               	bcf	135,6,c	;volatile
  3708                           
  3709                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  3710   0039B4  50BD               	movf	189,w,c	;volatile
  3711   0039B6  0B8F               	andlw	-113
  3712   0039B8  0930               	iorlw	48
  3713   0039BA  6EBD               	movwf	189,c	;volatile
  3714                           
  3715                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  3716   0039BC  0EE0               	movlw	-32
  3717   0039BE  16BE               	andwf	190,f,c	;volatile
  3718                           
  3719                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  3720   0039C0  50BF               	movf	191,w,c	;volatile
  3721   0039C2  0BF0               	andlw	-16
  3722   0039C4  0901               	iorlw	1
  3723   0039C6  6EBF               	movwf	191,c	;volatile
  3724   0039C8                     
  3725                           ; BSR set to: 14
  3726                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  3727   0039C8  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  3728   0039CC                     
  3729                           ; BSR set to: 14
  3730                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  3731   0039CC  8EBD               	bsf	189,7,c	;volatile
  3732                           
  3733                           ;dc_motor.c: 33:     CCPR1H=0;
  3734   0039CE  0E00               	movlw	0
  3735   0039D0  6EAA               	movwf	170,c	;volatile
  3736                           
  3737                           ;dc_motor.c: 34:     CCPR2H=0;
  3738   0039D2  0E00               	movlw	0
  3739   0039D4  6EA6               	movwf	166,c	;volatile
  3740                           
  3741                           ;dc_motor.c: 35:     CCPR3H=0;
  3742   0039D6  0E00               	movlw	0
  3743   0039D8  010F               	movlb	15	; () banked
  3744   0039DA  6F25               	movwf	37,b	;volatile
  3745                           
  3746                           ;dc_motor.c: 36:     CCPR4H=0;
  3747   0039DC  0E00               	movlw	0
  3748   0039DE  6F21               	movwf	33,b	;volatile
  3749                           
  3750                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  3751   0039E0  0EFC               	movlw	-4
  3752   0039E2  16AD               	andwf	173,f,c	;volatile
  3753                           
  3754                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  3755   0039E4  0EF3               	movlw	-13
  3756   0039E6  16AD               	andwf	173,f,c	;volatile
  3757                           
  3758                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  3759   0039E8  0ECF               	movlw	-49
  3760   0039EA  16AD               	andwf	173,f,c	;volatile
  3761                           
  3762                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  3763   0039EC  0E3F               	movlw	-193
  3764   0039EE  16AD               	andwf	173,f,c	;volatile
  3765   0039F0                     
  3766                           ; BSR set to: 15
  3767                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  3768   0039F0  88AB               	bsf	171,4,c	;volatile
  3769                           
  3770                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  3771   0039F2  50AB               	movf	171,w,c	;volatile
  3772   0039F4  0BF0               	andlw	-16
  3773   0039F6  090C               	iorlw	12
  3774   0039F8  6EAB               	movwf	171,c	;volatile
  3775   0039FA                     
  3776                           ; BSR set to: 15
  3777                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  3778   0039FA  8EAB               	bsf	171,7,c	;volatile
  3779   0039FC                     
  3780                           ; BSR set to: 15
  3781                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  3782   0039FC  88A7               	bsf	167,4,c	;volatile
  3783                           
  3784                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  3785   0039FE  50A7               	movf	167,w,c	;volatile
  3786   003A00  0BF0               	andlw	-16
  3787   003A02  090C               	iorlw	12
  3788   003A04  6EA7               	movwf	167,c	;volatile
  3789   003A06                     
  3790                           ; BSR set to: 15
  3791                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  3792   003A06  8EA7               	bsf	167,7,c	;volatile
  3793   003A08                     
  3794                           ; BSR set to: 15
  3795                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  3796   003A08  8926               	bsf	38,4,b	;volatile
  3797                           
  3798                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  3799   003A0A  5126               	movf	38,w,b	;volatile
  3800   003A0C  0BF0               	andlw	-16
  3801   003A0E  090C               	iorlw	12
  3802   003A10  6F26               	movwf	38,b	;volatile
  3803   003A12                     
  3804                           ; BSR set to: 15
  3805                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  3806   003A12  8F26               	bsf	38,7,b	;volatile
  3807   003A14                     
  3808                           ; BSR set to: 15
  3809                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  3810   003A14  8922               	bsf	34,4,b	;volatile
  3811                           
  3812                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  3813   003A16  5122               	movf	34,w,b	;volatile
  3814   003A18  0BF0               	andlw	-16
  3815   003A1A  090C               	iorlw	12
  3816   003A1C  6F22               	movwf	34,b	;volatile
  3817   003A1E                     
  3818                           ; BSR set to: 15
  3819                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  3820   003A1E  8F22               	bsf	34,7,b	;volatile
  3821   003A20                     
  3822                           ; BSR set to: 15
  3823   003A20  0012               	return		;funcret
  3824   003A22                     __end_of_initDCmotorsPWM:
  3825                           	callstack 0
  3826                           
  3827 ;; *************** function _fullSpeedAhead *****************
  3828 ;; Defined at:
  3829 ;;		line 146 in file "dc_motor.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  3832 ;;		 -> motorL(9), 
  3833 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  3834 ;;		 -> motorR(9), 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3846 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3849 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3850 ;;Total ram usage:        5 bytes
  3851 ;; Hardware stack levels used: 1
  3852 ;; Hardware stack levels required when called: 3
  3853 ;; This function calls:
  3854 ;;		_setMotorPWM
  3855 ;; This function is called by:
  3856 ;;		_main
  3857 ;;		_BumpintoWall
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text23
  3862   003742                     __ptext23:
  3863                           	callstack 0
  3864   003742                     _fullSpeedAhead:
  3865                           	callstack 27
  3866   003742                     
  3867                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  3868   003742  EE20 F001          	lfsr	2,1
  3869   003746  5014               	movf	fullSpeedAhead@mL^0,w,c
  3870   003748  26D9               	addwf	fsr2l,f,c
  3871   00374A  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  3872   00374C  22DA               	addwfc	fsr2h,f,c
  3873   00374E  0E01               	movlw	1
  3874   003750  6EDF               	movwf	indf2,c
  3875                           
  3876                           ;dc_motor.c: 150:     mR->direction =1;
  3877   003752  EE20 F001          	lfsr	2,1
  3878   003756  5016               	movf	fullSpeedAhead@mR^0,w,c
  3879   003758  26D9               	addwf	fsr2l,f,c
  3880   00375A  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  3881   00375C  22DA               	addwfc	fsr2h,f,c
  3882   00375E  0E01               	movlw	1
  3883   003760  6EDF               	movwf	indf2,c
  3884                           
  3885                           ;dc_motor.c: 151:     while (mL->power < 100 && mR->power < 100){
  3886   003762  EFD3  F01B         	goto	l3917
  3887   003766                     l3909:
  3888                           
  3889                           ;dc_motor.c: 153:         mL->power+=10;
  3890   003766  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  3891   00376A  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  3892   00376E  0E0A               	movlw	10
  3893   003770  26DF               	addwf	indf2,f,c
  3894                           
  3895                           ;dc_motor.c: 154:         mR->power+=10;
  3896   003772  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  3897   003776  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  3898   00377A  0E0A               	movlw	10
  3899   00377C  26DF               	addwf	indf2,f,c
  3900   00377E                     
  3901                           ;dc_motor.c: 156:         setMotorPWM(mL);
  3902   00377E  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  3903   003782  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  3904   003786  EC56  F018         	call	_setMotorPWM	;wreg free
  3905   00378A                     
  3906                           ;dc_motor.c: 157:         setMotorPWM(mR);
  3907   00378A  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  3908   00378E  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  3909   003792  EC56  F018         	call	_setMotorPWM	;wreg free
  3910   003796                     
  3911                           ;dc_motor.c: 159:         _delay((unsigned long)((1)*(64000000/4000.0)));
  3912   003796  0E15               	movlw	21
  3913   003798  6E18               	movwf	??_fullSpeedAhead^0,c
  3914   00379A  0EC6               	movlw	198
  3915   00379C                     u3927:
  3916   00379C  2EE8               	decfsz	wreg,f,c
  3917   00379E  D7FE               	bra	u3927
  3918   0037A0  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  3919   0037A2  D7FC               	bra	u3927
  3920   0037A4  D000               	nop2	
  3921   0037A6                     l3917:
  3922                           
  3923                           ;dc_motor.c: 151:     while (mL->power < 100 && mR->power < 100){
  3924   0037A6  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  3925   0037AA  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  3926   0037AE  0E64               	movlw	100
  3927   0037B0  60DF               	cpfslt	indf2,c
  3928   0037B2  EFDD  F01B         	goto	u3841
  3929   0037B6  EFDF  F01B         	goto	u3840
  3930   0037BA                     u3841:
  3931   0037BA  EFEB  F01B         	goto	l442
  3932   0037BE                     u3840:
  3933   0037BE  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  3934   0037C2  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  3935   0037C6  0E63               	movlw	99
  3936   0037C8  64DF               	cpfsgt	indf2,c
  3937   0037CA  EFE9  F01B         	goto	u3851
  3938   0037CE  EFEB  F01B         	goto	u3850
  3939   0037D2                     u3851:
  3940   0037D2  EFB3  F01B         	goto	l3909
  3941   0037D6                     u3850:
  3942   0037D6                     l442:
  3943   0037D6  0012               	return		;funcret
  3944   0037D8                     __end_of_fullSpeedAhead:
  3945                           	callstack 0
  3946                           
  3947 ;; *************** function _colour_rel *****************
  3948 ;; Defined at:
  3949 ;;		line 114 in file "color.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  vals            2   49[COMRAM] PTR struct RGB
  3952 ;;		 -> vals(8), 
  3953 ;;  rel             2   51[COMRAM] PTR struct RGB_rel
  3954 ;;		 -> rel(12), 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  B               4   73[COMRAM] float 
  3957 ;;  G               4   69[COMRAM] float 
  3958 ;;  R               4   65[COMRAM] float 
  3959 ;;  L               4   53[COMRAM] float 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3969 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3970 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3972 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;Total ram usage:       28 bytes
  3974 ;; Hardware stack levels used: 1
  3975 ;; Hardware stack levels required when called: 2
  3976 ;; This function calls:
  3977 ;;		___fladd
  3978 ;;		___fldiv
  3979 ;;		___xxtofl
  3980 ;; This function is called by:
  3981 ;;		_main
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text24
  3986   002636                     __ptext24:
  3987                           	callstack 0
  3988   002636                     _colour_rel:
  3989                           	callstack 28
  3990   002636                     
  3991                           ;color.c: 115:     float R = vals->R;
  3992   002636  C032  FFD9         	movff	colour_rel@vals,fsr2l
  3993   00263A  C033  FFDA         	movff	colour_rel@vals+1,fsr2h
  3994   00263E  CFDE F001          	movff	postinc2,___xxtofl@val
  3995   002642  CFDD F002          	movff	postdec2,___xxtofl@val+1
  3996   002646  0E00               	movlw	0
  3997   002648  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  3998   00264A  0EFF               	movlw	-1
  3999   00264C  6E03               	movwf	(___xxtofl@val+2)^0,c
  4000   00264E  6E04               	movwf	(___xxtofl@val+3)^0,c
  4001   002650  0E01               	movlw	1
  4002   002652  ECF1  F015         	call	___xxtofl
  4003   002656  C001  F042         	movff	?___xxtofl,colour_rel@R
  4004   00265A  C002  F043         	movff	?___xxtofl+1,colour_rel@R+1
  4005   00265E  C003  F044         	movff	?___xxtofl+2,colour_rel@R+2
  4006   002662  C004  F045         	movff	?___xxtofl+3,colour_rel@R+3
  4007                           
  4008                           ;color.c: 116:     float G = vals->G;
  4009   002666  EE20 F002          	lfsr	2,2
  4010   00266A  5032               	movf	colour_rel@vals^0,w,c
  4011   00266C  26D9               	addwf	fsr2l,f,c
  4012   00266E  5033               	movf	(colour_rel@vals+1)^0,w,c
  4013   002670  22DA               	addwfc	fsr2h,f,c
  4014   002672  CFDE F001          	movff	postinc2,___xxtofl@val
  4015   002676  CFDD F002          	movff	postdec2,___xxtofl@val+1
  4016   00267A  0E00               	movlw	0
  4017   00267C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4018   00267E  0EFF               	movlw	-1
  4019   002680  6E03               	movwf	(___xxtofl@val+2)^0,c
  4020   002682  6E04               	movwf	(___xxtofl@val+3)^0,c
  4021   002684  0E01               	movlw	1
  4022   002686  ECF1  F015         	call	___xxtofl
  4023   00268A  C001  F046         	movff	?___xxtofl,colour_rel@G
  4024   00268E  C002  F047         	movff	?___xxtofl+1,colour_rel@G+1
  4025   002692  C003  F048         	movff	?___xxtofl+2,colour_rel@G+2
  4026   002696  C004  F049         	movff	?___xxtofl+3,colour_rel@G+3
  4027                           
  4028                           ;color.c: 117:     float B = vals->B;
  4029   00269A  EE20 F004          	lfsr	2,4
  4030   00269E  5032               	movf	colour_rel@vals^0,w,c
  4031   0026A0  26D9               	addwf	fsr2l,f,c
  4032   0026A2  5033               	movf	(colour_rel@vals+1)^0,w,c
  4033   0026A4  22DA               	addwfc	fsr2h,f,c
  4034   0026A6  CFDE F001          	movff	postinc2,___xxtofl@val
  4035   0026AA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  4036   0026AE  0E00               	movlw	0
  4037   0026B0  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4038   0026B2  0EFF               	movlw	-1
  4039   0026B4  6E03               	movwf	(___xxtofl@val+2)^0,c
  4040   0026B6  6E04               	movwf	(___xxtofl@val+3)^0,c
  4041   0026B8  0E01               	movlw	1
  4042   0026BA  ECF1  F015         	call	___xxtofl
  4043   0026BE  C001  F04A         	movff	?___xxtofl,colour_rel@B
  4044   0026C2  C002  F04B         	movff	?___xxtofl+1,colour_rel@B+1
  4045   0026C6  C003  F04C         	movff	?___xxtofl+2,colour_rel@B+2
  4046   0026CA  C004  F04D         	movff	?___xxtofl+3,colour_rel@B+3
  4047                           
  4048                           ;color.c: 118:     float L = vals->L;
  4049   0026CE  EE20 F006          	lfsr	2,6
  4050   0026D2  5032               	movf	colour_rel@vals^0,w,c
  4051   0026D4  26D9               	addwf	fsr2l,f,c
  4052   0026D6  5033               	movf	(colour_rel@vals+1)^0,w,c
  4053   0026D8  22DA               	addwfc	fsr2h,f,c
  4054   0026DA  CFDE F001          	movff	postinc2,___xxtofl@val
  4055   0026DE  CFDD F002          	movff	postdec2,___xxtofl@val+1
  4056   0026E2  0E00               	movlw	0
  4057   0026E4  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4058   0026E6  0EFF               	movlw	-1
  4059   0026E8  6E03               	movwf	(___xxtofl@val+2)^0,c
  4060   0026EA  6E04               	movwf	(___xxtofl@val+3)^0,c
  4061   0026EC  0E01               	movlw	1
  4062   0026EE  ECF1  F015         	call	___xxtofl
  4063   0026F2  C001  F036         	movff	?___xxtofl,colour_rel@L
  4064   0026F6  C002  F037         	movff	?___xxtofl+1,colour_rel@L+1
  4065   0026FA  C003  F038         	movff	?___xxtofl+2,colour_rel@L+2
  4066   0026FE  C004  F039         	movff	?___xxtofl+3,colour_rel@L+3
  4067   002702                     
  4068                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  4069   002702  C046  F005         	movff	colour_rel@G,___fladd@a
  4070   002706  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  4071   00270A  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  4072   00270E  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  4073   002712  C042  F001         	movff	colour_rel@R,___fladd@b
  4074   002716  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  4075   00271A  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  4076   00271E  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  4077   002722  ECD9  F00C         	call	___fladd	;wreg free
  4078   002726  C001  F03A         	movff	?___fladd,_colour_rel$2477
  4079   00272A  C002  F03B         	movff	?___fladd+1,_colour_rel$2477+1
  4080   00272E  C003  F03C         	movff	?___fladd+2,_colour_rel$2477+2
  4081   002732  C004  F03D         	movff	?___fladd+3,_colour_rel$2477+3
  4082   002736                     
  4083                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  4084   002736  C04A  F005         	movff	colour_rel@B,___fladd@a
  4085   00273A  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  4086   00273E  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  4087   002742  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  4088   002746  C03A  F001         	movff	_colour_rel$2477,___fladd@b
  4089   00274A  C03B  F002         	movff	_colour_rel$2477+1,___fladd@b+1
  4090   00274E  C03C  F003         	movff	_colour_rel$2477+2,___fladd@b+2
  4091   002752  C03D  F004         	movff	_colour_rel$2477+3,___fladd@b+3
  4092   002756  ECD9  F00C         	call	___fladd	;wreg free
  4093   00275A  C001  F03E         	movff	?___fladd,_colour_rel$2478
  4094   00275E  C002  F03F         	movff	?___fladd+1,_colour_rel$2478+1
  4095   002762  C003  F040         	movff	?___fladd+2,_colour_rel$2478+2
  4096   002766  C004  F041         	movff	?___fladd+3,_colour_rel$2478+3
  4097                           
  4098                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  4099   00276A  C042  F019         	movff	colour_rel@R,___fldiv@b
  4100   00276E  C043  F01A         	movff	colour_rel@R+1,___fldiv@b+1
  4101   002772  C044  F01B         	movff	colour_rel@R+2,___fldiv@b+2
  4102   002776  C045  F01C         	movff	colour_rel@R+3,___fldiv@b+3
  4103   00277A  C036  F005         	movff	colour_rel@L,___fladd@a
  4104   00277E  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  4105   002782  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  4106   002786  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  4107   00278A  C03E  F001         	movff	_colour_rel$2478,___fladd@b
  4108   00278E  C03F  F002         	movff	_colour_rel$2478+1,___fladd@b+1
  4109   002792  C040  F003         	movff	_colour_rel$2478+2,___fladd@b+2
  4110   002796  C041  F004         	movff	_colour_rel$2478+3,___fladd@b+3
  4111   00279A  ECD9  F00C         	call	___fladd	;wreg free
  4112   00279E  C001  F01D         	movff	?___fladd,___fldiv@a
  4113   0027A2  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  4114   0027A6  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  4115   0027AA  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  4116   0027AE  EC4E  F011         	call	___fldiv	;wreg free
  4117   0027B2  C034  FFD9         	movff	colour_rel@rel,fsr2l
  4118   0027B6  C035  FFDA         	movff	colour_rel@rel+1,fsr2h
  4119   0027BA  C019  FFDE         	movff	?___fldiv,postinc2
  4120   0027BE  C01A  FFDE         	movff	?___fldiv+1,postinc2
  4121   0027C2  C01B  FFDE         	movff	?___fldiv+2,postinc2
  4122   0027C6  C01C  FFDE         	movff	?___fldiv+3,postinc2
  4123   0027CA                     
  4124                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  4125   0027CA  C046  F005         	movff	colour_rel@G,___fladd@a
  4126   0027CE  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  4127   0027D2  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  4128   0027D6  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  4129   0027DA  C042  F001         	movff	colour_rel@R,___fladd@b
  4130   0027DE  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  4131   0027E2  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  4132   0027E6  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  4133   0027EA  ECD9  F00C         	call	___fladd	;wreg free
  4134   0027EE  C001  F03A         	movff	?___fladd,_colour_rel$2477
  4135   0027F2  C002  F03B         	movff	?___fladd+1,_colour_rel$2477+1
  4136   0027F6  C003  F03C         	movff	?___fladd+2,_colour_rel$2477+2
  4137   0027FA  C004  F03D         	movff	?___fladd+3,_colour_rel$2477+3
  4138   0027FE                     
  4139                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  4140   0027FE  C04A  F005         	movff	colour_rel@B,___fladd@a
  4141   002802  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  4142   002806  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  4143   00280A  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  4144   00280E  C03A  F001         	movff	_colour_rel$2477,___fladd@b
  4145   002812  C03B  F002         	movff	_colour_rel$2477+1,___fladd@b+1
  4146   002816  C03C  F003         	movff	_colour_rel$2477+2,___fladd@b+2
  4147   00281A  C03D  F004         	movff	_colour_rel$2477+3,___fladd@b+3
  4148   00281E  ECD9  F00C         	call	___fladd	;wreg free
  4149   002822  C001  F03E         	movff	?___fladd,_colour_rel$2478
  4150   002826  C002  F03F         	movff	?___fladd+1,_colour_rel$2478+1
  4151   00282A  C003  F040         	movff	?___fladd+2,_colour_rel$2478+2
  4152   00282E  C004  F041         	movff	?___fladd+3,_colour_rel$2478+3
  4153                           
  4154                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  4155   002832  C04A  F019         	movff	colour_rel@B,___fldiv@b
  4156   002836  C04B  F01A         	movff	colour_rel@B+1,___fldiv@b+1
  4157   00283A  C04C  F01B         	movff	colour_rel@B+2,___fldiv@b+2
  4158   00283E  C04D  F01C         	movff	colour_rel@B+3,___fldiv@b+3
  4159   002842  C036  F005         	movff	colour_rel@L,___fladd@a
  4160   002846  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  4161   00284A  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  4162   00284E  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  4163   002852  C03E  F001         	movff	_colour_rel$2478,___fladd@b
  4164   002856  C03F  F002         	movff	_colour_rel$2478+1,___fladd@b+1
  4165   00285A  C040  F003         	movff	_colour_rel$2478+2,___fladd@b+2
  4166   00285E  C041  F004         	movff	_colour_rel$2478+3,___fladd@b+3
  4167   002862  ECD9  F00C         	call	___fladd	;wreg free
  4168   002866  C001  F01D         	movff	?___fladd,___fldiv@a
  4169   00286A  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  4170   00286E  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  4171   002872  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  4172   002876  EC4E  F011         	call	___fldiv	;wreg free
  4173   00287A  EE20 F008          	lfsr	2,8
  4174   00287E  5034               	movf	colour_rel@rel^0,w,c
  4175   002880  26D9               	addwf	fsr2l,f,c
  4176   002882  5035               	movf	(colour_rel@rel+1)^0,w,c
  4177   002884  22DA               	addwfc	fsr2h,f,c
  4178   002886  C019  FFDE         	movff	?___fldiv,postinc2
  4179   00288A  C01A  FFDE         	movff	?___fldiv+1,postinc2
  4180   00288E  C01B  FFDE         	movff	?___fldiv+2,postinc2
  4181   002892  C01C  FFDE         	movff	?___fldiv+3,postinc2
  4182   002896                     
  4183                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  4184   002896  C046  F005         	movff	colour_rel@G,___fladd@a
  4185   00289A  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  4186   00289E  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  4187   0028A2  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  4188   0028A6  C042  F001         	movff	colour_rel@R,___fladd@b
  4189   0028AA  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  4190   0028AE  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  4191   0028B2  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  4192   0028B6  ECD9  F00C         	call	___fladd	;wreg free
  4193   0028BA  C001  F03A         	movff	?___fladd,_colour_rel$2477
  4194   0028BE  C002  F03B         	movff	?___fladd+1,_colour_rel$2477+1
  4195   0028C2  C003  F03C         	movff	?___fladd+2,_colour_rel$2477+2
  4196   0028C6  C004  F03D         	movff	?___fladd+3,_colour_rel$2477+3
  4197   0028CA                     
  4198                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  4199   0028CA  C04A  F005         	movff	colour_rel@B,___fladd@a
  4200   0028CE  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  4201   0028D2  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  4202   0028D6  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  4203   0028DA  C03A  F001         	movff	_colour_rel$2477,___fladd@b
  4204   0028DE  C03B  F002         	movff	_colour_rel$2477+1,___fladd@b+1
  4205   0028E2  C03C  F003         	movff	_colour_rel$2477+2,___fladd@b+2
  4206   0028E6  C03D  F004         	movff	_colour_rel$2477+3,___fladd@b+3
  4207   0028EA  ECD9  F00C         	call	___fladd	;wreg free
  4208   0028EE  C001  F03E         	movff	?___fladd,_colour_rel$2478
  4209   0028F2  C002  F03F         	movff	?___fladd+1,_colour_rel$2478+1
  4210   0028F6  C003  F040         	movff	?___fladd+2,_colour_rel$2478+2
  4211   0028FA  C004  F041         	movff	?___fladd+3,_colour_rel$2478+3
  4212                           
  4213                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  4214   0028FE  C046  F019         	movff	colour_rel@G,___fldiv@b
  4215   002902  C047  F01A         	movff	colour_rel@G+1,___fldiv@b+1
  4216   002906  C048  F01B         	movff	colour_rel@G+2,___fldiv@b+2
  4217   00290A  C049  F01C         	movff	colour_rel@G+3,___fldiv@b+3
  4218   00290E  C036  F005         	movff	colour_rel@L,___fladd@a
  4219   002912  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  4220   002916  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  4221   00291A  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  4222   00291E  C03E  F001         	movff	_colour_rel$2478,___fladd@b
  4223   002922  C03F  F002         	movff	_colour_rel$2478+1,___fladd@b+1
  4224   002926  C040  F003         	movff	_colour_rel$2478+2,___fladd@b+2
  4225   00292A  C041  F004         	movff	_colour_rel$2478+3,___fladd@b+3
  4226   00292E  ECD9  F00C         	call	___fladd	;wreg free
  4227   002932  C001  F01D         	movff	?___fladd,___fldiv@a
  4228   002936  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  4229   00293A  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  4230   00293E  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  4231   002942  EC4E  F011         	call	___fldiv	;wreg free
  4232   002946  EE20 F004          	lfsr	2,4
  4233   00294A  5034               	movf	colour_rel@rel^0,w,c
  4234   00294C  26D9               	addwf	fsr2l,f,c
  4235   00294E  5035               	movf	(colour_rel@rel+1)^0,w,c
  4236   002950  22DA               	addwfc	fsr2h,f,c
  4237   002952  C019  FFDE         	movff	?___fldiv,postinc2
  4238   002956  C01A  FFDE         	movff	?___fldiv+1,postinc2
  4239   00295A  C01B  FFDE         	movff	?___fldiv+2,postinc2
  4240   00295E  C01C  FFDE         	movff	?___fldiv+3,postinc2
  4241   002962  0012               	return		;funcret
  4242   002964                     __end_of_colour_rel:
  4243                           	callstack 0
  4244                           
  4245 ;; *************** function _color_click_init *****************
  4246 ;; Defined at:
  4247 ;;		line 7 in file "color.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;		None
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;		None
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1    wreg      void 
  4254 ;; Registers used:
  4255 ;;		wreg, status,2, status,0, cstack
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4265 ;;Total ram usage:        1 bytes
  4266 ;; Hardware stack levels used: 1
  4267 ;; Hardware stack levels required when called: 4
  4268 ;; This function calls:
  4269 ;;		_I2C_2_Master_Init
  4270 ;;		_color_writetoaddr
  4271 ;; This function is called by:
  4272 ;;		_main
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text25
  4277   003D9C                     __ptext25:
  4278                           	callstack 0
  4279   003D9C                     _color_click_init:
  4280                           	callstack 26
  4281   003D9C                     
  4282                           ;color.c: 10:     I2C_2_Master_Init();
  4283   003D9C  EC5C  F020         	call	_I2C_2_Master_Init	;wreg free
  4284   003DA0                     
  4285                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  4286   003DA0  0E01               	movlw	1
  4287   003DA2  6E03               	movwf	color_writetoaddr@value^0,c
  4288   003DA4  0E00               	movlw	0
  4289   003DA6  EC98  F020         	call	_color_writetoaddr
  4290   003DAA                     
  4291                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4292   003DAA  0E3F               	movlw	63
  4293   003DAC  6E05               	movwf	??_color_click_init^0,c
  4294   003DAE  0E55               	movlw	85
  4295   003DB0                     u3937:
  4296   003DB0  2EE8               	decfsz	wreg,f,c
  4297   003DB2  D7FE               	bra	u3937
  4298   003DB4  2E05               	decfsz	??_color_click_init^0,f,c
  4299   003DB6  D7FC               	bra	u3937
  4300   003DB8  F000               	nop	
  4301   003DBA                     
  4302                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  4303   003DBA  0E03               	movlw	3
  4304   003DBC  6E03               	movwf	color_writetoaddr@value^0,c
  4305   003DBE  0E00               	movlw	0
  4306   003DC0  EC98  F020         	call	_color_writetoaddr
  4307   003DC4                     
  4308                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  4309   003DC4  0ED5               	movlw	213
  4310   003DC6  6E03               	movwf	color_writetoaddr@value^0,c
  4311   003DC8  0E01               	movlw	1
  4312   003DCA  EC98  F020         	call	_color_writetoaddr
  4313   003DCE                     
  4314                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  4315   003DCE  0E00               	movlw	0
  4316   003DD0  6E03               	movwf	color_writetoaddr@value^0,c
  4317   003DD2  0E0F               	movlw	15
  4318   003DD4  EC98  F020         	call	_color_writetoaddr
  4319   003DD8                     
  4320                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  4321   003DD8  9287               	bcf	135,1,c	;volatile
  4322   003DDA                     
  4323                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  4324   003DDA  9881               	bcf	129,4,c	;volatile
  4325   003DDC                     
  4326                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  4327   003DDC  9E86               	bcf	134,7,c	;volatile
  4328   003DDE                     
  4329                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  4330   003DDE  9684               	bcf	132,3,c	;volatile
  4331   003DE0                     
  4332                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  4333   003DE0  9884               	bcf	132,4,c	;volatile
  4334   003DE2                     
  4335                           ;color.c: 28:     LATGbits.LATG1=0;
  4336   003DE2  927F               	bcf	127,1,c	;volatile
  4337   003DE4                     
  4338                           ;color.c: 29:     LATFbits.LATF7=0;
  4339   003DE4  9E7E               	bcf	126,7,c	;volatile
  4340   003DE6                     
  4341                           ;color.c: 30:     LATAbits.LATA4=0;
  4342   003DE6  9879               	bcf	121,4,c	;volatile
  4343   003DE8                     
  4344                           ;color.c: 32:     LATDbits.LATD3=0;
  4345   003DE8  967C               	bcf	124,3,c	;volatile
  4346   003DEA                     
  4347                           ;color.c: 33:     LATDbits.LATD4=0;
  4348   003DEA  987C               	bcf	124,4,c	;volatile
  4349   003DEC  0012               	return		;funcret
  4350   003DEE                     __end_of_color_click_init:
  4351                           	callstack 0
  4352                           
  4353 ;; *************** function _color_writetoaddr *****************
  4354 ;; Defined at:
  4355 ;;		line 41 in file "color.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  address         1    wreg     unsigned char 
  4358 ;;  value           1    2[COMRAM] unsigned char 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  address         1    3[COMRAM] unsigned char 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		wreg, status,2, status,0, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4370 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4374 ;;Total ram usage:        2 bytes
  4375 ;; Hardware stack levels used: 1
  4376 ;; Hardware stack levels required when called: 3
  4377 ;; This function calls:
  4378 ;;		_I2C_2_Master_Start
  4379 ;;		_I2C_2_Master_Stop
  4380 ;;		_I2C_2_Master_Write
  4381 ;; This function is called by:
  4382 ;;		_color_click_init
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text26
  4387   004130                     __ptext26:
  4388                           	callstack 0
  4389   004130                     _color_writetoaddr:
  4390                           	callstack 26
  4391                           
  4392                           ;incstack = 0
  4393                           ;color_writetoaddr@address stored from wreg
  4394   004130  6E04               	movwf	color_writetoaddr@address^0,c
  4395   004132                     
  4396                           ;color.c: 42:     I2C_2_Master_Start();
  4397   004132  ECD3  F020         	call	_I2C_2_Master_Start	;wreg free
  4398                           
  4399                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  4400   004136  0E52               	movlw	82
  4401   004138  ECC3  F020         	call	_I2C_2_Master_Write
  4402                           
  4403                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  4404   00413C  5004               	movf	color_writetoaddr@address^0,w,c
  4405   00413E  0980               	iorlw	128
  4406   004140  ECC3  F020         	call	_I2C_2_Master_Write
  4407                           
  4408                           ;color.c: 45:     I2C_2_Master_Write(value);
  4409   004144  5003               	movf	color_writetoaddr@value^0,w,c
  4410   004146  ECC3  F020         	call	_I2C_2_Master_Write
  4411                           
  4412                           ;color.c: 46:     I2C_2_Master_Stop();
  4413   00414A  ECCE  F020         	call	_I2C_2_Master_Stop	;wreg free
  4414   00414E  0012               	return		;funcret
  4415   004150                     __end_of_color_writetoaddr:
  4416                           	callstack 0
  4417                           
  4418 ;; *************** function _I2C_2_Master_Write *****************
  4419 ;; Defined at:
  4420 ;;		line 45 in file "i2c.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  data_byte       1    wreg     unsigned char 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  data_byte       1    1[COMRAM] unsigned char 
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  1    wreg      void 
  4427 ;; Registers used:
  4428 ;;		wreg, status,2, status,0, cstack
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4437 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4438 ;;Total ram usage:        1 bytes
  4439 ;; Hardware stack levels used: 1
  4440 ;; Hardware stack levels required when called: 2
  4441 ;; This function calls:
  4442 ;;		_I2C_2_Master_Idle
  4443 ;; This function is called by:
  4444 ;;		_color_writetoaddr
  4445 ;;		_color_read_lum
  4446 ;;		_color_read_Red
  4447 ;;		_color_read_Green
  4448 ;;		_color_read_Blue
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text27
  4453   004186                     __ptext27:
  4454                           	callstack 0
  4455   004186                     _I2C_2_Master_Write:
  4456                           	callstack 26
  4457                           
  4458                           ;incstack = 0
  4459                           ;I2C_2_Master_Write@data_byte stored from wreg
  4460   004186  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4461   004188                     
  4462                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4463   004188  EC71  F020         	call	_I2C_2_Master_Idle	;wreg free
  4464   00418C                     
  4465                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4466   00418C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4467   004190  0012               	return		;funcret
  4468   004192                     __end_of_I2C_2_Master_Write:
  4469                           	callstack 0
  4470                           
  4471 ;; *************** function _I2C_2_Master_Stop *****************
  4472 ;; Defined at:
  4473 ;;		line 39 in file "i2c.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;		None
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;		None
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      void 
  4480 ;; Registers used:
  4481 ;;		wreg, status,2, status,0, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4491 ;;Total ram usage:        0 bytes
  4492 ;; Hardware stack levels used: 1
  4493 ;; Hardware stack levels required when called: 2
  4494 ;; This function calls:
  4495 ;;		_I2C_2_Master_Idle
  4496 ;; This function is called by:
  4497 ;;		_color_writetoaddr
  4498 ;;		_color_read_lum
  4499 ;;		_color_read_Red
  4500 ;;		_color_read_Green
  4501 ;;		_color_read_Blue
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text28
  4506   00419C                     __ptext28:
  4507                           	callstack 0
  4508   00419C                     _I2C_2_Master_Stop:
  4509                           	callstack 26
  4510   00419C                     
  4511                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4512   00419C  EC71  F020         	call	_I2C_2_Master_Idle	;wreg free
  4513   0041A0                     
  4514                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4515   0041A0  010E               	movlb	14	; () banked
  4516   0041A2  85DA               	bsf	218,2,b	;volatile
  4517   0041A4                     
  4518                           ; BSR set to: 14
  4519   0041A4  0012               	return		;funcret
  4520   0041A6                     __end_of_I2C_2_Master_Stop:
  4521                           	callstack 0
  4522                           
  4523 ;; *************** function _I2C_2_Master_Start *****************
  4524 ;; Defined at:
  4525 ;;		line 27 in file "i2c.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;		None
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;		None
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  1    wreg      void 
  4532 ;; Registers used:
  4533 ;;		wreg, status,2, status,0, cstack
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4543 ;;Total ram usage:        0 bytes
  4544 ;; Hardware stack levels used: 1
  4545 ;; Hardware stack levels required when called: 2
  4546 ;; This function calls:
  4547 ;;		_I2C_2_Master_Idle
  4548 ;; This function is called by:
  4549 ;;		_color_writetoaddr
  4550 ;;		_color_read_lum
  4551 ;;		_color_read_Red
  4552 ;;		_color_read_Green
  4553 ;;		_color_read_Blue
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text29
  4558   0041A6                     __ptext29:
  4559                           	callstack 0
  4560   0041A6                     _I2C_2_Master_Start:
  4561                           	callstack 26
  4562   0041A6                     
  4563                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4564   0041A6  EC71  F020         	call	_I2C_2_Master_Idle	;wreg free
  4565   0041AA                     
  4566                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4567   0041AA  010E               	movlb	14	; () banked
  4568   0041AC  81DA               	bsf	218,0,b	;volatile
  4569   0041AE                     
  4570                           ; BSR set to: 14
  4571   0041AE  0012               	return		;funcret
  4572   0041B0                     __end_of_I2C_2_Master_Start:
  4573                           	callstack 0
  4574                           
  4575 ;; *************** function _I2C_2_Master_Idle *****************
  4576 ;; Defined at:
  4577 ;;		line 22 in file "i2c.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;		None
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;		None
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  1    wreg      void 
  4584 ;; Registers used:
  4585 ;;		wreg, status,2, status,0
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4595 ;;Total ram usage:        1 bytes
  4596 ;; Hardware stack levels used: 1
  4597 ;; Hardware stack levels required when called: 1
  4598 ;; This function calls:
  4599 ;;		Nothing
  4600 ;; This function is called by:
  4601 ;;		_I2C_2_Master_Start
  4602 ;;		_I2C_2_Master_RepStart
  4603 ;;		_I2C_2_Master_Stop
  4604 ;;		_I2C_2_Master_Write
  4605 ;;		_I2C_2_Master_Read
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           	psect	text30
  4610   0040E2                     __ptext30:
  4611                           	callstack 0
  4612   0040E2                     _I2C_2_Master_Idle:
  4613                           	callstack 26
  4614   0040E2                     l140:
  4615   0040E2  010E               	movlb	14	; () banked
  4616   0040E4  B5D8               	btfsc	216,2,b	;volatile
  4617   0040E6  EF77  F020         	goto	u2221
  4618   0040EA  EF79  F020         	goto	u2220
  4619   0040EE                     u2221:
  4620   0040EE  EF71  F020         	goto	l140
  4621   0040F2                     u2220:
  4622   0040F2                     
  4623                           ; BSR set to: 14
  4624   0040F2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4625   0040F6  0E1F               	movlw	31
  4626   0040F8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  4627   0040FA  A4D8               	btfss	status,2,c
  4628   0040FC  EF82  F020         	goto	u2231
  4629   004100  EF84  F020         	goto	u2230
  4630   004104                     u2231:
  4631   004104  EF71  F020         	goto	l140
  4632   004108                     u2230:
  4633   004108                     
  4634                           ; BSR set to: 14
  4635   004108  0012               	return		;funcret
  4636   00410A                     __end_of_I2C_2_Master_Idle:
  4637                           	callstack 0
  4638                           
  4639 ;; *************** function _I2C_2_Master_Init *****************
  4640 ;; Defined at:
  4641 ;;		line 4 in file "i2c.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;		None
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;		None
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      void 
  4648 ;; Registers used:
  4649 ;;		wreg, status,2
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4659 ;;Total ram usage:        0 bytes
  4660 ;; Hardware stack levels used: 1
  4661 ;; Hardware stack levels required when called: 1
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_color_click_init
  4666 ;;		_main
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           	psect	text31
  4671   0040B8                     __ptext31:
  4672                           	callstack 0
  4673   0040B8                     _I2C_2_Master_Init:
  4674                           	callstack 28
  4675   0040B8                     
  4676                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4677   0040B8  010E               	movlb	14	; () banked
  4678   0040BA  51D9               	movf	217,w,b	;volatile
  4679   0040BC  0BF0               	andlw	-16
  4680   0040BE  0908               	iorlw	8
  4681   0040C0  6FD9               	movwf	217,b	;volatile
  4682   0040C2                     
  4683                           ; BSR set to: 14
  4684                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4685   0040C2  8BD9               	bsf	217,5,b	;volatile
  4686                           
  4687                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4688   0040C4  0E9F               	movlw	159
  4689   0040C6  6FD6               	movwf	214,b	;volatile
  4690   0040C8                     
  4691                           ; BSR set to: 14
  4692                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4693   0040C8  8A84               	bsf	132,5,c	;volatile
  4694   0040CA                     
  4695                           ; BSR set to: 14
  4696                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4697   0040CA  8C84               	bsf	132,6,c	;volatile
  4698   0040CC                     
  4699                           ; BSR set to: 14
  4700                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4701   0040CC  9BA7               	bcf	167,5,b	;volatile
  4702   0040CE                     
  4703                           ; BSR set to: 14
  4704                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4705   0040CE  9DA7               	bcf	167,6,b	;volatile
  4706                           
  4707                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4708   0040D0  0E1D               	movlw	29
  4709   0040D2  6F1D               	movwf	29,b	;volatile
  4710                           
  4711                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4712   0040D4  0E1E               	movlw	30
  4713   0040D6  6F1C               	movwf	28,b	;volatile
  4714                           
  4715                           ;i2c.c: 18:   RD5PPS=0x1C;
  4716   0040D8  0E1C               	movlw	28
  4717   0040DA  6F6F               	movwf	111,b	;volatile
  4718                           
  4719                           ;i2c.c: 19:   RD6PPS=0x1B;
  4720   0040DC  0E1B               	movlw	27
  4721   0040DE  6F70               	movwf	112,b	;volatile
  4722   0040E0                     
  4723                           ; BSR set to: 14
  4724   0040E0  0012               	return		;funcret
  4725   0040E2                     __end_of_I2C_2_Master_Init:
  4726                           	callstack 0
  4727                           
  4728 ;; *************** function _Interrupts_init *****************
  4729 ;; Defined at:
  4730 ;;		line 12 in file "interrupts.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;		None
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;		None
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  1    wreg      void 
  4737 ;; Registers used:
  4738 ;;		None
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4748 ;;Total ram usage:        0 bytes
  4749 ;; Hardware stack levels used: 1
  4750 ;; Hardware stack levels required when called: 1
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_main
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text32
  4759   0041B4                     __ptext32:
  4760                           	callstack 0
  4761   0041B4                     _Interrupts_init:
  4762                           	callstack 29
  4763   0041B4  0012               	return		;funcret
  4764   0041B6                     __end_of_Interrupts_init:
  4765                           	callstack 0
  4766                           
  4767 ;; *************** function _Colour_decider *****************
  4768 ;; Defined at:
  4769 ;;		line 125 in file "color.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;  vals            2   74[COMRAM] PTR struct RGB
  4772 ;;		 -> vals(8), 
  4773 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  4774 ;;		 -> rel(12), 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  RGB_col        12    6[BANK0 ] float [3]
  4777 ;;  Hue             4   28[BANK0 ] float 
  4778 ;;  Cmin            4   22[BANK0 ] float 
  4779 ;;  Cmax            4   18[BANK0 ] float 
  4780 ;;  i               2   26[BANK0 ] int 
  4781 ;;  Cmax_i          2    4[BANK0 ] int 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  2   74[COMRAM] int 
  4784 ;; Registers used:
  4785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4791 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4792 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4794 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4795 ;;Total ram usage:       38 bytes
  4796 ;; Hardware stack levels used: 1
  4797 ;; Hardware stack levels required when called: 5
  4798 ;; This function calls:
  4799 ;;		___fladd
  4800 ;;		___fldiv
  4801 ;;		___fleq
  4802 ;;		___flge
  4803 ;;		___flmul
  4804 ;;		___flsub
  4805 ;;		___xxtofl
  4806 ;;		_reverseDetect
  4807 ;;		_turnLeft45
  4808 ;;		_turnRight45
  4809 ;; This function is called by:
  4810 ;;		_main
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text33
  4815   000E50                     __ptext33:
  4816                           	callstack 0
  4817   000E50                     _Colour_decider:
  4818                           	callstack 25
  4819   000E50                     
  4820                           ;color.c: 126:     float Cmax = 0;
  4821   000E50  0E00               	movlw	0
  4822   000E52  0100               	movlb	0	; () banked
  4823   000E54  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  4824   000E56  0E00               	movlw	0
  4825   000E58  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  4826   000E5A  0E00               	movlw	0
  4827   000E5C  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  4828   000E5E  0E00               	movlw	0
  4829   000E60  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  4830                           
  4831                           ;color.c: 127:     float Cmin= 100000;
  4832   000E62  0E00               	movlw	0
  4833   000E64  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  4834   000E66  0E50               	movlw	80
  4835   000E68  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  4836   000E6A  0EC3               	movlw	195
  4837   000E6C  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  4838   000E6E  0E47               	movlw	71
  4839   000E70  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  4840                           
  4841                           ;color.c: 128:     int Cmax_i =4;
  4842   000E72  0E00               	movlw	0
  4843   000E74  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  4844   000E76  0E04               	movlw	4
  4845   000E78  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  4846   000E7A                     
  4847                           ; BSR set to: 0
  4848                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  4849   000E7A  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  4850   000E7E  0E0B               	movlw	11
  4851   000E80                     u3501:
  4852   000E80  6ADE               	clrf	postinc2,c
  4853   000E82  06E8               	decf	wreg,f,c
  4854   000E84  E2FD               	bc	u3501
  4855   000E86                     
  4856                           ; BSR set to: 0
  4857   000E86  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  4858   000E8A  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  4859   000E8E  CFDE F001          	movff	postinc2,___xxtofl@val
  4860   000E92  CFDD F002          	movff	postdec2,___xxtofl@val+1
  4861   000E96  0E00               	movlw	0
  4862   000E98  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4863   000E9A  0EFF               	movlw	-1
  4864   000E9C  6E03               	movwf	(___xxtofl@val+2)^0,c
  4865   000E9E  6E04               	movwf	(___xxtofl@val+3)^0,c
  4866   000EA0  0E01               	movlw	1
  4867   000EA2  ECF1  F015         	call	___xxtofl
  4868   000EA6  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  4869   000EAA  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  4870   000EAE  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  4871   000EB2  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  4872   000EB6  EE20 F002          	lfsr	2,2
  4873   000EBA  504B               	movf	Colour_decider@vals^0,w,c
  4874   000EBC  26D9               	addwf	fsr2l,f,c
  4875   000EBE  504C               	movf	(Colour_decider@vals+1)^0,w,c
  4876   000EC0  22DA               	addwfc	fsr2h,f,c
  4877   000EC2  CFDE F001          	movff	postinc2,___xxtofl@val
  4878   000EC6  CFDD F002          	movff	postdec2,___xxtofl@val+1
  4879   000ECA  0E00               	movlw	0
  4880   000ECC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4881   000ECE  0EFF               	movlw	-1
  4882   000ED0  6E03               	movwf	(___xxtofl@val+2)^0,c
  4883   000ED2  6E04               	movwf	(___xxtofl@val+3)^0,c
  4884   000ED4  0E01               	movlw	1
  4885   000ED6  ECF1  F015         	call	___xxtofl
  4886   000EDA  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  4887   000EDE  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  4888   000EE2  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  4889   000EE6  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  4890   000EEA  EE20 F004          	lfsr	2,4
  4891   000EEE  504B               	movf	Colour_decider@vals^0,w,c
  4892   000EF0  26D9               	addwf	fsr2l,f,c
  4893   000EF2  504C               	movf	(Colour_decider@vals+1)^0,w,c
  4894   000EF4  22DA               	addwfc	fsr2h,f,c
  4895   000EF6  CFDE F001          	movff	postinc2,___xxtofl@val
  4896   000EFA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  4897   000EFE  0E00               	movlw	0
  4898   000F00  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4899   000F02  0EFF               	movlw	-1
  4900   000F04  6E03               	movwf	(___xxtofl@val+2)^0,c
  4901   000F06  6E04               	movwf	(___xxtofl@val+3)^0,c
  4902   000F08  0E01               	movlw	1
  4903   000F0A  ECF1  F015         	call	___xxtofl
  4904   000F0E  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  4905   000F12  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  4906   000F16  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  4907   000F1A  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  4908   000F1E                     
  4909                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  4910   000F1E  0E00               	movlw	0
  4911   000F20  0100               	movlb	0	; () banked
  4912   000F22  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  4913   000F24  0E00               	movlw	0
  4914   000F26  6F7A               	movwf	Colour_decider@i& (0+255),b
  4915   000F28                     l3677:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  4919   000F28  C072  F001         	movff	Colour_decider@Cmax,___flge@ff1
  4920   000F2C  C073  F002         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  4921   000F30  C074  F003         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  4922   000F34  C075  F004         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  4923   000F38  0E66               	movlw	low Colour_decider@RGB_col
  4924   000F3A  6E4F               	movwf	??_Colour_decider^0,c
  4925   000F3C  0E00               	movlw	high Colour_decider@RGB_col
  4926   000F3E  6E50               	movwf	(??_Colour_decider+1)^0,c
  4927   000F40  90D8               	bcf	status,0,c
  4928   000F42  357A               	rlcf	Colour_decider@i& (0+255),w,b
  4929   000F44  6ED9               	movwf	fsr2l,c
  4930   000F46  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  4931   000F48  6EDA               	movwf	fsr2h,c
  4932   000F4A  90D8               	bcf	status,0,c
  4933   000F4C  36D9               	rlcf	fsr2l,f,c
  4934   000F4E  36DA               	rlcf	fsr2h,f,c
  4935   000F50  504F               	movf	??_Colour_decider^0,w,c
  4936   000F52  26D9               	addwf	fsr2l,f,c
  4937   000F54  5050               	movf	(??_Colour_decider+1)^0,w,c
  4938   000F56  22DA               	addwfc	fsr2h,f,c
  4939   000F58  CFDE F005          	movff	postinc2,___flge@ff2
  4940   000F5C  CFDE F006          	movff	postinc2,___flge@ff2+1
  4941   000F60  CFDE F007          	movff	postinc2,___flge@ff2+2
  4942   000F64  CFDE F008          	movff	postinc2,___flge@ff2+3
  4943   000F68  EC65  F01A         	call	___flge	;wreg free
  4944   000F6C  B0D8               	btfsc	status,0,c
  4945   000F6E  EFBB  F007         	goto	u3511
  4946   000F72  EFBD  F007         	goto	u3510
  4947   000F76                     u3511:
  4948   000F76  EFDA  F007         	goto	l3683
  4949   000F7A                     u3510:
  4950   000F7A                     
  4951                           ;color.c: 137:             Cmax=RGB_col[i];
  4952   000F7A  0E66               	movlw	low Colour_decider@RGB_col
  4953   000F7C  6E4F               	movwf	??_Colour_decider^0,c
  4954   000F7E  0E00               	movlw	high Colour_decider@RGB_col
  4955   000F80  6E50               	movwf	(??_Colour_decider+1)^0,c
  4956   000F82  90D8               	bcf	status,0,c
  4957   000F84  0100               	movlb	0	; () banked
  4958   000F86  357A               	rlcf	Colour_decider@i& (0+255),w,b
  4959   000F88  6ED9               	movwf	fsr2l,c
  4960   000F8A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  4961   000F8C  6EDA               	movwf	fsr2h,c
  4962   000F8E  90D8               	bcf	status,0,c
  4963   000F90  36D9               	rlcf	fsr2l,f,c
  4964   000F92  36DA               	rlcf	fsr2h,f,c
  4965   000F94  504F               	movf	??_Colour_decider^0,w,c
  4966   000F96  26D9               	addwf	fsr2l,f,c
  4967   000F98  5050               	movf	(??_Colour_decider+1)^0,w,c
  4968   000F9A  22DA               	addwfc	fsr2h,f,c
  4969   000F9C  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  4970   000FA0  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  4971   000FA4  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  4972   000FA8  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  4973   000FAC                     
  4974                           ; BSR set to: 0
  4975                           ;color.c: 138:             Cmax_i=i;
  4976   000FAC  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  4977   000FB0  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  4978   000FB4                     l3683:
  4979                           
  4980                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  4981   000FB4  0E66               	movlw	low Colour_decider@RGB_col
  4982   000FB6  6E4F               	movwf	??_Colour_decider^0,c
  4983   000FB8  0E00               	movlw	high Colour_decider@RGB_col
  4984   000FBA  6E50               	movwf	(??_Colour_decider+1)^0,c
  4985   000FBC  90D8               	bcf	status,0,c
  4986   000FBE  0100               	movlb	0	; () banked
  4987   000FC0  357A               	rlcf	Colour_decider@i& (0+255),w,b
  4988   000FC2  6ED9               	movwf	fsr2l,c
  4989   000FC4  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  4990   000FC6  6EDA               	movwf	fsr2h,c
  4991   000FC8  90D8               	bcf	status,0,c
  4992   000FCA  36D9               	rlcf	fsr2l,f,c
  4993   000FCC  36DA               	rlcf	fsr2h,f,c
  4994   000FCE  504F               	movf	??_Colour_decider^0,w,c
  4995   000FD0  26D9               	addwf	fsr2l,f,c
  4996   000FD2  5050               	movf	(??_Colour_decider+1)^0,w,c
  4997   000FD4  22DA               	addwfc	fsr2h,f,c
  4998   000FD6  CFDE F001          	movff	postinc2,___flge@ff1
  4999   000FDA  CFDE F002          	movff	postinc2,___flge@ff1+1
  5000   000FDE  CFDE F003          	movff	postinc2,___flge@ff1+2
  5001   000FE2  CFDE F004          	movff	postinc2,___flge@ff1+3
  5002   000FE6  C076  F005         	movff	Colour_decider@Cmin,___flge@ff2
  5003   000FEA  C077  F006         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  5004   000FEE  C078  F007         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  5005   000FF2  C079  F008         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  5006   000FF6  EC65  F01A         	call	___flge	;wreg free
  5007   000FFA  B0D8               	btfsc	status,0,c
  5008   000FFC  EF02  F008         	goto	u3521
  5009   001000  EF04  F008         	goto	u3520
  5010   001004                     u3521:
  5011   001004  EF1D  F008         	goto	l3687
  5012   001008                     u3520:
  5013   001008  0E66               	movlw	low Colour_decider@RGB_col
  5014   00100A  6E4F               	movwf	??_Colour_decider^0,c
  5015   00100C  0E00               	movlw	high Colour_decider@RGB_col
  5016   00100E  6E50               	movwf	(??_Colour_decider+1)^0,c
  5017   001010  90D8               	bcf	status,0,c
  5018   001012  0100               	movlb	0	; () banked
  5019   001014  357A               	rlcf	Colour_decider@i& (0+255),w,b
  5020   001016  6ED9               	movwf	fsr2l,c
  5021   001018  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  5022   00101A  6EDA               	movwf	fsr2h,c
  5023   00101C  90D8               	bcf	status,0,c
  5024   00101E  36D9               	rlcf	fsr2l,f,c
  5025   001020  36DA               	rlcf	fsr2h,f,c
  5026   001022  504F               	movf	??_Colour_decider^0,w,c
  5027   001024  26D9               	addwf	fsr2l,f,c
  5028   001026  5050               	movf	(??_Colour_decider+1)^0,w,c
  5029   001028  22DA               	addwfc	fsr2h,f,c
  5030   00102A  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  5031   00102E  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  5032   001032  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  5033   001036  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  5034   00103A                     l3687:
  5035                           
  5036                           ;color.c: 141:     }
  5037   00103A  0100               	movlb	0	; () banked
  5038   00103C  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  5039   00103E  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  5040   001040                     
  5041                           ; BSR set to: 0
  5042   001040  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  5043   001042  EF2C  F008         	goto	u3531
  5044   001046  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  5045   001048  E109               	bnz	u3530
  5046   00104A  0E03               	movlw	3
  5047   00104C  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  5048   00104E  A0D8               	btfss	status,0,c
  5049   001050  EF2C  F008         	goto	u3531
  5050   001054  EF2E  F008         	goto	u3530
  5051   001058                     u3531:
  5052   001058  EF94  F007         	goto	l3677
  5053   00105C                     u3530:
  5054   00105C                     
  5055                           ; BSR set to: 0
  5056                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  5057   00105C  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  5058   001060  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  5059   001064  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  5060   001068  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  5061   00106C  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  5062   001070  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  5063   001074  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  5064   001078  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  5065   00107C  ECBE  F01F         	call	___flsub	;wreg free
  5066   001080  C011  F019         	movff	?___flsub,___fleq@ff1
  5067   001084  C012  F01A         	movff	?___flsub+1,___fleq@ff1+1
  5068   001088  C013  F01B         	movff	?___flsub+2,___fleq@ff1+2
  5069   00108C  C014  F01C         	movff	?___flsub+3,___fleq@ff1+3
  5070   001090  0E00               	movlw	0
  5071   001092  6E1D               	movwf	___fleq@ff2^0,c
  5072   001094  0E00               	movlw	0
  5073   001096  6E1E               	movwf	(___fleq@ff2+1)^0,c
  5074   001098  0E00               	movlw	0
  5075   00109A  6E1F               	movwf	(___fleq@ff2+2)^0,c
  5076   00109C  0E00               	movlw	0
  5077   00109E  6E20               	movwf	(___fleq@ff2+3)^0,c
  5078   0010A0  EC4C  F01B         	call	___fleq	;wreg free
  5079   0010A4  A0D8               	btfss	status,0,c
  5080   0010A6  EF57  F008         	goto	u3541
  5081   0010AA  EF59  F008         	goto	u3540
  5082   0010AE                     u3541:
  5083   0010AE  EF5F  F008         	goto	l3697
  5084   0010B2                     u3540:
  5085   0010B2                     l3693:
  5086   0010B2  0E00               	movlw	0
  5087   0010B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
  5088   0010B6  0E00               	movlw	0
  5089   0010B8  6E4B               	movwf	?_Colour_decider^0,c
  5090   0010BA  EFD8  F00C         	goto	l76
  5091   0010BE                     l3697:
  5092                           
  5093                           ;color.c: 146:     if (Cmax_i==0){
  5094   0010BE  0100               	movlb	0	; () banked
  5095   0010C0  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  5096   0010C2  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  5097   0010C4  A4D8               	btfss	status,2,c
  5098   0010C6  EF67  F008         	goto	u3551
  5099   0010CA  EF69  F008         	goto	u3550
  5100   0010CE                     u3551:
  5101   0010CE  EFDD  F008         	goto	l3705
  5102   0010D2                     u3550:
  5103   0010D2                     
  5104                           ; BSR set to: 0
  5105                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  5106   0010D2  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  5107   0010D6  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  5108   0010DA  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  5109   0010DE  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  5110   0010E2  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  5111   0010E6  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  5112   0010EA  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  5113   0010EE  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  5114   0010F2  ECBE  F01F         	call	___flsub	;wreg free
  5115   0010F6  C011  F01D         	movff	?___flsub,___fldiv@a
  5116   0010FA  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  5117   0010FE  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  5118   001102  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  5119   001106  C06E  F015         	movff	Colour_decider@RGB_col+8,___flsub@a
  5120   00110A  C06F  F016         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  5121   00110E  C070  F017         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  5122   001112  C071  F018         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  5123   001116  C06A  F011         	movff	Colour_decider@RGB_col+4,___flsub@b
  5124   00111A  C06B  F012         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  5125   00111E  C06C  F013         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  5126   001122  C06D  F014         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  5127   001126  ECBE  F01F         	call	___flsub	;wreg free
  5128   00112A  C011  F019         	movff	?___flsub,___fldiv@b
  5129   00112E  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  5130   001132  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  5131   001136  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  5132   00113A  EC4E  F011         	call	___fldiv	;wreg free
  5133   00113E  C019  F032         	movff	?___fldiv,___flmul@b
  5134   001142  C01A  F033         	movff	?___fldiv+1,___flmul@b+1
  5135   001146  C01B  F034         	movff	?___fldiv+2,___flmul@b+2
  5136   00114A  C01C  F035         	movff	?___fldiv+3,___flmul@b+3
  5137   00114E  0E00               	movlw	0
  5138   001150  6E36               	movwf	___flmul@a^0,c
  5139   001152  0E00               	movlw	0
  5140   001154  6E37               	movwf	(___flmul@a+1)^0,c
  5141   001156  0E70               	movlw	112
  5142   001158  6E38               	movwf	(___flmul@a+2)^0,c
  5143   00115A  0E42               	movlw	66
  5144   00115C  6E39               	movwf	(___flmul@a+3)^0,c
  5145   00115E  EC39  F00F         	call	___flmul	;wreg free
  5146   001162  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  5147   001166  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  5148   00116A  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  5149   00116E  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  5150   001172                     
  5151                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  5152   001172  0100               	movlb	0	; () banked
  5153   001174  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  5154   001176  EFC1  F008         	goto	u3560
  5155   00117A  EFBF  F008         	goto	u3561
  5156   00117E                     u3561:
  5157   00117E  EFBC  F009         	goto	l3715
  5158   001182                     u3560:
  5159   001182                     
  5160                           ; BSR set to: 0
  5161   001182  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  5162   001186  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  5163   00118A  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  5164   00118E  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  5165   001192  0E00               	movlw	0
  5166   001194  6E05               	movwf	___fladd@a^0,c
  5167   001196  0E00               	movlw	0
  5168   001198  6E06               	movwf	(___fladd@a+1)^0,c
  5169   00119A  0EB4               	movlw	180
  5170   00119C  6E07               	movwf	(___fladd@a+2)^0,c
  5171   00119E  0E43               	movlw	67
  5172   0011A0  6E08               	movwf	(___fladd@a+3)^0,c
  5173   0011A2  ECD9  F00C         	call	___fladd	;wreg free
  5174   0011A6  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  5175   0011AA  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  5176   0011AE  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  5177   0011B2  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  5178   0011B6  EFBC  F009         	goto	l3715
  5179   0011BA                     l3705:
  5180                           
  5181                           ; BSR set to: 0
  5182   0011BA  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  5183   0011BC  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  5184   0011BE  A4D8               	btfss	status,2,c
  5185   0011C0  EFE4  F008         	goto	u3571
  5186   0011C4  EFE6  F008         	goto	u3570
  5187   0011C8                     u3571:
  5188   0011C8  EF52  F009         	goto	l3711
  5189   0011CC                     u3570:
  5190   0011CC                     
  5191                           ; BSR set to: 0
  5192                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  5193   0011CC  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  5194   0011D0  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  5195   0011D4  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  5196   0011D8  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  5197   0011DC  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  5198   0011E0  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  5199   0011E4  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  5200   0011E8  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  5201   0011EC  ECBE  F01F         	call	___flsub	;wreg free
  5202   0011F0  C011  F01D         	movff	?___flsub,___fldiv@a
  5203   0011F4  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  5204   0011F8  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  5205   0011FC  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  5206   001200  C066  F015         	movff	Colour_decider@RGB_col,___flsub@a
  5207   001204  C067  F016         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  5208   001208  C068  F017         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  5209   00120C  C069  F018         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  5210   001210  C06E  F011         	movff	Colour_decider@RGB_col+8,___flsub@b
  5211   001214  C06F  F012         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  5212   001218  C070  F013         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  5213   00121C  C071  F014         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  5214   001220  ECBE  F01F         	call	___flsub	;wreg free
  5215   001224  C011  F019         	movff	?___flsub,___fldiv@b
  5216   001228  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  5217   00122C  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  5218   001230  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  5219   001234  EC4E  F011         	call	___fldiv	;wreg free
  5220   001238  C019  F060         	movff	?___fldiv,_Colour_decider$2479
  5221   00123C  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2479+1
  5222   001240  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2479+2
  5223   001244  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2479+3
  5224   001248                     
  5225                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  5226   001248  0E00               	movlw	0
  5227   00124A  6E05               	movwf	___fladd@a^0,c
  5228   00124C  0E00               	movlw	0
  5229   00124E  6E06               	movwf	(___fladd@a+1)^0,c
  5230   001250  0E00               	movlw	0
  5231   001252  6E07               	movwf	(___fladd@a+2)^0,c
  5232   001254  0E40               	movlw	64
  5233   001256  6E08               	movwf	(___fladd@a+3)^0,c
  5234   001258  C060  F001         	movff	_Colour_decider$2479,___fladd@b
  5235   00125C  C061  F002         	movff	_Colour_decider$2479+1,___fladd@b+1
  5236   001260  C062  F003         	movff	_Colour_decider$2479+2,___fladd@b+2
  5237   001264  C063  F004         	movff	_Colour_decider$2479+3,___fladd@b+3
  5238   001268  ECD9  F00C         	call	___fladd	;wreg free
  5239   00126C  C001  F032         	movff	?___fladd,___flmul@b
  5240   001270  C002  F033         	movff	?___fladd+1,___flmul@b+1
  5241   001274  C003  F034         	movff	?___fladd+2,___flmul@b+2
  5242   001278  C004  F035         	movff	?___fladd+3,___flmul@b+3
  5243   00127C  0E00               	movlw	0
  5244   00127E  6E36               	movwf	___flmul@a^0,c
  5245   001280  0E00               	movlw	0
  5246   001282  6E37               	movwf	(___flmul@a+1)^0,c
  5247   001284  0E70               	movlw	112
  5248   001286  6E38               	movwf	(___flmul@a+2)^0,c
  5249   001288  0E42               	movlw	66
  5250   00128A  6E39               	movwf	(___flmul@a+3)^0,c
  5251   00128C  EC39  F00F         	call	___flmul	;wreg free
  5252   001290  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  5253   001294  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  5254   001298  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  5255   00129C  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  5256                           
  5257                           ;color.c: 155:     }
  5258   0012A0  EFBC  F009         	goto	l3715
  5259   0012A4                     l3711:
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  5263   0012A4  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  5264   0012A8  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  5265   0012AC  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  5266   0012B0  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  5267   0012B4  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  5268   0012B8  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  5269   0012BC  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  5270   0012C0  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  5271   0012C4  ECBE  F01F         	call	___flsub	;wreg free
  5272   0012C8  C011  F01D         	movff	?___flsub,___fldiv@a
  5273   0012CC  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  5274   0012D0  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  5275   0012D4  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  5276   0012D8  C06A  F015         	movff	Colour_decider@RGB_col+4,___flsub@a
  5277   0012DC  C06B  F016         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  5278   0012E0  C06C  F017         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  5279   0012E4  C06D  F018         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  5280   0012E8  C066  F011         	movff	Colour_decider@RGB_col,___flsub@b
  5281   0012EC  C067  F012         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  5282   0012F0  C068  F013         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  5283   0012F4  C069  F014         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  5284   0012F8  ECBE  F01F         	call	___flsub	;wreg free
  5285   0012FC  C011  F019         	movff	?___flsub,___fldiv@b
  5286   001300  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  5287   001304  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  5288   001308  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  5289   00130C  EC4E  F011         	call	___fldiv	;wreg free
  5290   001310  C019  F060         	movff	?___fldiv,_Colour_decider$2479
  5291   001314  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2479+1
  5292   001318  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2479+2
  5293   00131C  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2479+3
  5294   001320                     
  5295                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  5296   001320  0E00               	movlw	0
  5297   001322  6E05               	movwf	___fladd@a^0,c
  5298   001324  0E00               	movlw	0
  5299   001326  6E06               	movwf	(___fladd@a+1)^0,c
  5300   001328  0E80               	movlw	128
  5301   00132A  6E07               	movwf	(___fladd@a+2)^0,c
  5302   00132C  0E40               	movlw	64
  5303   00132E  6E08               	movwf	(___fladd@a+3)^0,c
  5304   001330  C060  F001         	movff	_Colour_decider$2479,___fladd@b
  5305   001334  C061  F002         	movff	_Colour_decider$2479+1,___fladd@b+1
  5306   001338  C062  F003         	movff	_Colour_decider$2479+2,___fladd@b+2
  5307   00133C  C063  F004         	movff	_Colour_decider$2479+3,___fladd@b+3
  5308   001340  ECD9  F00C         	call	___fladd	;wreg free
  5309   001344  C001  F032         	movff	?___fladd,___flmul@b
  5310   001348  C002  F033         	movff	?___fladd+1,___flmul@b+1
  5311   00134C  C003  F034         	movff	?___fladd+2,___flmul@b+2
  5312   001350  C004  F035         	movff	?___fladd+3,___flmul@b+3
  5313   001354  0E00               	movlw	0
  5314   001356  6E36               	movwf	___flmul@a^0,c
  5315   001358  0E00               	movlw	0
  5316   00135A  6E37               	movwf	(___flmul@a+1)^0,c
  5317   00135C  0E70               	movlw	112
  5318   00135E  6E38               	movwf	(___flmul@a+2)^0,c
  5319   001360  0E42               	movlw	66
  5320   001362  6E39               	movwf	(___flmul@a+3)^0,c
  5321   001364  EC39  F00F         	call	___flmul	;wreg free
  5322   001368  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  5323   00136C  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  5324   001370  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  5325   001374  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  5326   001378                     l3715:
  5327                           
  5328                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  5329   001378  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  5330   00137C  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  5331   001380  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  5332   001384  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  5333   001388  0E00               	movlw	0
  5334   00138A  6E05               	movwf	___flge@ff2^0,c
  5335   00138C  0E00               	movlw	0
  5336   00138E  6E06               	movwf	(___flge@ff2+1)^0,c
  5337   001390  0EA5               	movlw	165
  5338   001392  6E07               	movwf	(___flge@ff2+2)^0,c
  5339   001394  0E43               	movlw	67
  5340   001396  6E08               	movwf	(___flge@ff2+3)^0,c
  5341   001398  EC65  F01A         	call	___flge	;wreg free
  5342   00139C  A0D8               	btfss	status,0,c
  5343   00139E  EFD3  F009         	goto	u3581
  5344   0013A2  EFD5  F009         	goto	u3580
  5345   0013A6                     u3581:
  5346   0013A6  EF12  F00A         	goto	l3727
  5347   0013AA                     u3580:
  5348   0013AA  0E00               	movlw	0
  5349   0013AC  6E01               	movwf	___flge@ff1^0,c
  5350   0013AE  0E00               	movlw	0
  5351   0013B0  6E02               	movwf	(___flge@ff1+1)^0,c
  5352   0013B2  0EB4               	movlw	180
  5353   0013B4  6E03               	movwf	(___flge@ff1+2)^0,c
  5354   0013B6  0E43               	movlw	67
  5355   0013B8  6E04               	movwf	(___flge@ff1+3)^0,c
  5356   0013BA  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  5357   0013BE  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  5358   0013C2  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  5359   0013C6  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  5360   0013CA  EC65  F01A         	call	___flge	;wreg free
  5361   0013CE  A0D8               	btfss	status,0,c
  5362   0013D0  EFEC  F009         	goto	u3591
  5363   0013D4  EFEE  F009         	goto	u3590
  5364   0013D8                     u3591:
  5365   0013D8  EF12  F00A         	goto	l3727
  5366   0013DC                     u3590:
  5367   0013DC                     
  5368                           ;color.c: 164:         reverseDetect(&motorL, &motorR);
  5369   0013DC  0EF6               	movlw	low _motorL
  5370   0013DE  6E19               	movwf	reverseDetect@mL^0,c
  5371   0013E0  0E00               	movlw	high _motorL
  5372   0013E2  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  5373   0013E4  0EED               	movlw	low _motorR
  5374   0013E6  6E1B               	movwf	reverseDetect@mR^0,c
  5375   0013E8  0E00               	movlw	high _motorR
  5376   0013EA  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  5377   0013EC  EC20  F01E         	call	_reverseDetect	;wreg free
  5378                           
  5379                           ;color.c: 165:         turnRight45(&motorL, &motorR);
  5380   0013F0  0EF6               	movlw	low _motorL
  5381   0013F2  6E19               	movwf	turnRight45@mL^0,c
  5382   0013F4  0E00               	movlw	high _motorL
  5383   0013F6  6E1A               	movwf	(turnRight45@mL+1)^0,c
  5384   0013F8  0EED               	movlw	low _motorR
  5385   0013FA  6E1B               	movwf	turnRight45@mR^0,c
  5386   0013FC  0E00               	movlw	high _motorR
  5387   0013FE  6E1C               	movwf	(turnRight45@mR+1)^0,c
  5388   001400  EC4D  F01E         	call	_turnRight45	;wreg free
  5389                           
  5390                           ;color.c: 166:         turnRight45(&motorL, &motorR);
  5391   001404  0EF6               	movlw	low _motorL
  5392   001406  6E19               	movwf	turnRight45@mL^0,c
  5393   001408  0E00               	movlw	high _motorL
  5394   00140A  6E1A               	movwf	(turnRight45@mL+1)^0,c
  5395   00140C  0EED               	movlw	low _motorR
  5396   00140E  6E1B               	movwf	turnRight45@mR^0,c
  5397   001410  0E00               	movlw	high _motorR
  5398   001412  6E1C               	movwf	(turnRight45@mR+1)^0,c
  5399   001414  EC4D  F01E         	call	_turnRight45	;wreg free
  5400   001418                     
  5401                           ;color.c: 168:         return 1;
  5402   001418  0E00               	movlw	0
  5403   00141A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  5404   00141C  0E01               	movlw	1
  5405   00141E  6E4B               	movwf	?_Colour_decider^0,c
  5406   001420  EFD8  F00C         	goto	l76
  5407   001424                     l3727:
  5408   001424  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  5409   001428  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  5410   00142C  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  5411   001430  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  5412   001434  0E00               	movlw	0
  5413   001436  6E05               	movwf	___flge@ff2^0,c
  5414   001438  0E00               	movlw	0
  5415   00143A  6E06               	movwf	(___flge@ff2+1)^0,c
  5416   00143C  0EA0               	movlw	160
  5417   00143E  6E07               	movwf	(___flge@ff2+2)^0,c
  5418   001440  0E40               	movlw	64
  5419   001442  6E08               	movwf	(___flge@ff2+3)^0,c
  5420   001444  EC65  F01A         	call	___flge	;wreg free
  5421   001448  A0D8               	btfss	status,0,c
  5422   00144A  EF29  F00A         	goto	u3601
  5423   00144E  EF2B  F00A         	goto	u3600
  5424   001452                     u3601:
  5425   001452  EF4A  F00A         	goto	l3737
  5426   001456                     u3600:
  5427   001456  0E00               	movlw	0
  5428   001458  6E01               	movwf	___flge@ff1^0,c
  5429   00145A  0E00               	movlw	0
  5430   00145C  6E02               	movwf	(___flge@ff1+1)^0,c
  5431   00145E  0E40               	movlw	64
  5432   001460  6E03               	movwf	(___flge@ff1+2)^0,c
  5433   001462  0E41               	movlw	65
  5434   001464  6E04               	movwf	(___flge@ff1+3)^0,c
  5435   001466  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  5436   00146A  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  5437   00146E  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  5438   001472  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  5439   001476  EC65  F01A         	call	___flge	;wreg free
  5440   00147A  A0D8               	btfss	status,0,c
  5441   00147C  EF42  F00A         	goto	u3611
  5442   001480  EF44  F00A         	goto	u3610
  5443   001484                     u3611:
  5444   001484  EF4A  F00A         	goto	l3737
  5445   001488                     u3610:
  5446   001488                     
  5447                           ;color.c: 172:         return 2;
  5448   001488  0E00               	movlw	0
  5449   00148A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  5450   00148C  0E02               	movlw	2
  5451   00148E  6E4B               	movwf	?_Colour_decider^0,c
  5452   001490  EFD8  F00C         	goto	l76
  5453   001494                     l3737:
  5454   001494  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  5455   001498  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  5456   00149C  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  5457   0014A0  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  5458   0014A4  0E00               	movlw	0
  5459   0014A6  6E05               	movwf	___flge@ff2^0,c
  5460   0014A8  0E00               	movlw	0
  5461   0014AA  6E06               	movwf	(___flge@ff2+1)^0,c
  5462   0014AC  0EA0               	movlw	160
  5463   0014AE  6E07               	movwf	(___flge@ff2+2)^0,c
  5464   0014B0  0E41               	movlw	65
  5465   0014B2  6E08               	movwf	(___flge@ff2+3)^0,c
  5466   0014B4  EC65  F01A         	call	___flge	;wreg free
  5467   0014B8  A0D8               	btfss	status,0,c
  5468   0014BA  EF61  F00A         	goto	u3621
  5469   0014BE  EF63  F00A         	goto	u3620
  5470   0014C2                     u3621:
  5471   0014C2  EF09  F00B         	goto	l3763
  5472   0014C6                     u3620:
  5473   0014C6  0E00               	movlw	0
  5474   0014C8  6E01               	movwf	___flge@ff1^0,c
  5475   0014CA  0E00               	movlw	0
  5476   0014CC  6E02               	movwf	(___flge@ff1+1)^0,c
  5477   0014CE  0EE8               	movlw	232
  5478   0014D0  6E03               	movwf	(___flge@ff1+2)^0,c
  5479   0014D2  0E41               	movlw	65
  5480   0014D4  6E04               	movwf	(___flge@ff1+3)^0,c
  5481   0014D6  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  5482   0014DA  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  5483   0014DE  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  5484   0014E2  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  5485   0014E6  EC65  F01A         	call	___flge	;wreg free
  5486   0014EA  A0D8               	btfss	status,0,c
  5487   0014EC  EF7A  F00A         	goto	u3631
  5488   0014F0  EF7C  F00A         	goto	u3630
  5489   0014F4                     u3631:
  5490   0014F4  EF09  F00B         	goto	l3763
  5491   0014F8                     u3630:
  5492   0014F8                     
  5493                           ;color.c: 177:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  5494   0014F8  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  5495   0014FC  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  5496   001500  CFDE F001          	movff	postinc2,___flge@ff1
  5497   001504  CFDE F002          	movff	postinc2,___flge@ff1+1
  5498   001508  CFDE F003          	movff	postinc2,___flge@ff1+2
  5499   00150C  CFDE F004          	movff	postinc2,___flge@ff1+3
  5500   001510  0ECD               	movlw	205
  5501   001512  6E05               	movwf	___flge@ff2^0,c
  5502   001514  0ECC               	movlw	204
  5503   001516  6E06               	movwf	(___flge@ff2+1)^0,c
  5504   001518  0E4C               	movlw	76
  5505   00151A  6E07               	movwf	(___flge@ff2+2)^0,c
  5506   00151C  0E3E               	movlw	62
  5507   00151E  6E08               	movwf	(___flge@ff2+3)^0,c
  5508   001520  EC65  F01A         	call	___flge	;wreg free
  5509   001524  A0D8               	btfss	status,0,c
  5510   001526  EF97  F00A         	goto	u3641
  5511   00152A  EF99  F00A         	goto	u3640
  5512   00152E                     u3641:
  5513   00152E  EFB8  F00A         	goto	l3749
  5514   001532                     u3640:
  5515   001532  0E1F               	movlw	31
  5516   001534  6E01               	movwf	___flge@ff1^0,c
  5517   001536  0E85               	movlw	133
  5518   001538  6E02               	movwf	(___flge@ff1+1)^0,c
  5519   00153A  0E6B               	movlw	107
  5520   00153C  6E03               	movwf	(___flge@ff1+2)^0,c
  5521   00153E  0E3E               	movlw	62
  5522   001540  6E04               	movwf	(___flge@ff1+3)^0,c
  5523   001542  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  5524   001546  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  5525   00154A  CFDE F005          	movff	postinc2,___flge@ff2
  5526   00154E  CFDE F006          	movff	postinc2,___flge@ff2+1
  5527   001552  CFDE F007          	movff	postinc2,___flge@ff2+2
  5528   001556  CFDE F008          	movff	postinc2,___flge@ff2+3
  5529   00155A  EC65  F01A         	call	___flge	;wreg free
  5530   00155E  A0D8               	btfss	status,0,c
  5531   001560  EFB4  F00A         	goto	u3651
  5532   001564  EFB6  F00A         	goto	u3650
  5533   001568                     u3651:
  5534   001568  EFB8  F00A         	goto	l3749
  5535   00156C                     u3650:
  5536   00156C  EF59  F008         	goto	l3693
  5537   001570                     l3749:
  5538                           
  5539                           ;color.c: 181:         if (vals->R>=2000){
  5540   001570  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  5541   001574  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  5542   001578  0E01               	movlw	1
  5543   00157A  BEDB               	btfsc	plusw2,7,c
  5544   00157C  EFC9  F00A         	goto	u3661
  5545   001580  0ED0               	movlw	208
  5546   001582  5CDE               	subwf	postinc2,w,c
  5547   001584  0E07               	movlw	7
  5548   001586  58DE               	subwfb	postinc2,w,c
  5549   001588  A0D8               	btfss	status,0,c
  5550   00158A  EFC9  F00A         	goto	u3661
  5551   00158E  EFCB  F00A         	goto	u3660
  5552   001592                     u3661:
  5553   001592  EFD1  F00A         	goto	l3757
  5554   001596                     u3660:
  5555   001596                     
  5556                           ;color.c: 182:             return 3;
  5557   001596  0E00               	movlw	0
  5558   001598  6E4C               	movwf	(?_Colour_decider+1)^0,c
  5559   00159A  0E03               	movlw	3
  5560   00159C  6E4B               	movwf	?_Colour_decider^0,c
  5561   00159E  EFD8  F00C         	goto	l76
  5562   0015A2                     l3757:
  5563                           
  5564                           ;color.c: 185:             reverseDetect(&motorL, &motorR);
  5565   0015A2  0EF6               	movlw	low _motorL
  5566   0015A4  6E19               	movwf	reverseDetect@mL^0,c
  5567   0015A6  0E00               	movlw	high _motorL
  5568   0015A8  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  5569   0015AA  0EED               	movlw	low _motorR
  5570   0015AC  6E1B               	movwf	reverseDetect@mR^0,c
  5571   0015AE  0E00               	movlw	high _motorR
  5572   0015B0  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  5573   0015B2  EC20  F01E         	call	_reverseDetect	;wreg free
  5574                           
  5575                           ;color.c: 186:             turnRight45(&motorL, &motorR);
  5576   0015B6  0EF6               	movlw	low _motorL
  5577   0015B8  6E19               	movwf	turnRight45@mL^0,c
  5578   0015BA  0E00               	movlw	high _motorL
  5579   0015BC  6E1A               	movwf	(turnRight45@mL+1)^0,c
  5580   0015BE  0EED               	movlw	low _motorR
  5581   0015C0  6E1B               	movwf	turnRight45@mR^0,c
  5582   0015C2  0E00               	movlw	high _motorR
  5583   0015C4  6E1C               	movwf	(turnRight45@mR+1)^0,c
  5584   0015C6  EC4D  F01E         	call	_turnRight45	;wreg free
  5585                           
  5586                           ;color.c: 187:             turnRight45(&motorL, &motorR);
  5587   0015CA  0EF6               	movlw	low _motorL
  5588   0015CC  6E19               	movwf	turnRight45@mL^0,c
  5589   0015CE  0E00               	movlw	high _motorL
  5590   0015D0  6E1A               	movwf	(turnRight45@mL+1)^0,c
  5591   0015D2  0EED               	movlw	low _motorR
  5592   0015D4  6E1B               	movwf	turnRight45@mR^0,c
  5593   0015D6  0E00               	movlw	high _motorR
  5594   0015D8  6E1C               	movwf	(turnRight45@mR+1)^0,c
  5595   0015DA  EC4D  F01E         	call	_turnRight45	;wreg free
  5596                           
  5597                           ;color.c: 188:             turnRight45(&motorL, &motorR);
  5598   0015DE  0EF6               	movlw	low _motorL
  5599   0015E0  6E19               	movwf	turnRight45@mL^0,c
  5600   0015E2  0E00               	movlw	high _motorL
  5601   0015E4  6E1A               	movwf	(turnRight45@mL+1)^0,c
  5602   0015E6  0EED               	movlw	low _motorR
  5603   0015E8  6E1B               	movwf	turnRight45@mR^0,c
  5604   0015EA  0E00               	movlw	high _motorR
  5605   0015EC  6E1C               	movwf	(turnRight45@mR+1)^0,c
  5606   0015EE  EC4D  F01E         	call	_turnRight45	;wreg free
  5607                           
  5608                           ;color.c: 189:             turnRight45(&motorL, &motorR);
  5609   0015F2  0EF6               	movlw	low _motorL
  5610   0015F4  6E19               	movwf	turnRight45@mL^0,c
  5611   0015F6  0E00               	movlw	high _motorL
  5612   0015F8  6E1A               	movwf	(turnRight45@mL+1)^0,c
  5613   0015FA  0EED               	movlw	low _motorR
  5614   0015FC  6E1B               	movwf	turnRight45@mR^0,c
  5615   0015FE  0E00               	movlw	high _motorR
  5616   001600  6E1C               	movwf	(turnRight45@mR+1)^0,c
  5617   001602  EC4D  F01E         	call	_turnRight45	;wreg free
  5618   001606                     
  5619                           ;color.c: 190:             return 4;
  5620   001606  0E00               	movlw	0
  5621   001608  6E4C               	movwf	(?_Colour_decider+1)^0,c
  5622   00160A  0E04               	movlw	4
  5623   00160C  6E4B               	movwf	?_Colour_decider^0,c
  5624   00160E  EFD8  F00C         	goto	l76
  5625   001612                     l3763:
  5626   001612  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  5627   001616  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  5628   00161A  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  5629   00161E  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  5630   001622  0E00               	movlw	0
  5631   001624  6E05               	movwf	___flge@ff2^0,c
  5632   001626  0E00               	movlw	0
  5633   001628  6E06               	movwf	(___flge@ff2+1)^0,c
  5634   00162A  0E70               	movlw	112
  5635   00162C  6E07               	movwf	(___flge@ff2+2)^0,c
  5636   00162E  0E42               	movlw	66
  5637   001630  6E08               	movwf	(___flge@ff2+3)^0,c
  5638   001632  EC65  F01A         	call	___flge	;wreg free
  5639   001636  A0D8               	btfss	status,0,c
  5640   001638  EF20  F00B         	goto	u3671
  5641   00163C  EF22  F00B         	goto	u3670
  5642   001640                     u3671:
  5643   001640  EF80  F00B         	goto	l3783
  5644   001644                     u3670:
  5645   001644  0E00               	movlw	0
  5646   001646  6E01               	movwf	___flge@ff1^0,c
  5647   001648  0E00               	movlw	0
  5648   00164A  6E02               	movwf	(___flge@ff1+1)^0,c
  5649   00164C  0E9E               	movlw	158
  5650   00164E  6E03               	movwf	(___flge@ff1+2)^0,c
  5651   001650  0E42               	movlw	66
  5652   001652  6E04               	movwf	(___flge@ff1+3)^0,c
  5653   001654  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  5654   001658  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  5655   00165C  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  5656   001660  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  5657   001664  EC65  F01A         	call	___flge	;wreg free
  5658   001668  A0D8               	btfss	status,0,c
  5659   00166A  EF39  F00B         	goto	u3681
  5660   00166E  EF3B  F00B         	goto	u3680
  5661   001672                     u3681:
  5662   001672  EF80  F00B         	goto	l3783
  5663   001676                     u3680:
  5664   001676                     
  5665                           ;color.c: 196:         if(0.15<=rel->B){
  5666   001676  EE20 F008          	lfsr	2,8
  5667   00167A  504D               	movf	Colour_decider@rel^0,w,c
  5668   00167C  26D9               	addwf	fsr2l,f,c
  5669   00167E  504E               	movf	(Colour_decider@rel+1)^0,w,c
  5670   001680  22DA               	addwfc	fsr2h,f,c
  5671   001682  CFDE F001          	movff	postinc2,___flge@ff1
  5672   001686  CFDE F002          	movff	postinc2,___flge@ff1+1
  5673   00168A  CFDE F003          	movff	postinc2,___flge@ff1+2
  5674   00168E  CFDE F004          	movff	postinc2,___flge@ff1+3
  5675   001692  0E9A               	movlw	154
  5676   001694  6E05               	movwf	___flge@ff2^0,c
  5677   001696  0E99               	movlw	153
  5678   001698  6E06               	movwf	(___flge@ff2+1)^0,c
  5679   00169A  0E19               	movlw	25
  5680   00169C  6E07               	movwf	(___flge@ff2+2)^0,c
  5681   00169E  0E3E               	movlw	62
  5682   0016A0  6E08               	movwf	(___flge@ff2+3)^0,c
  5683   0016A2  EC65  F01A         	call	___flge	;wreg free
  5684   0016A6  A0D8               	btfss	status,0,c
  5685   0016A8  EF58  F00B         	goto	u3691
  5686   0016AC  EF5A  F00B         	goto	u3690
  5687   0016B0                     u3691:
  5688   0016B0  EF5C  F00B         	goto	l3777
  5689   0016B4                     u3690:
  5690   0016B4  EFD1  F00A         	goto	l3757
  5691   0016B8                     l3777:
  5692                           
  5693                           ;color.c: 205:             reverseDetect(&motorL, &motorR);
  5694   0016B8  0EF6               	movlw	low _motorL
  5695   0016BA  6E19               	movwf	reverseDetect@mL^0,c
  5696   0016BC  0E00               	movlw	high _motorL
  5697   0016BE  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  5698   0016C0  0EED               	movlw	low _motorR
  5699   0016C2  6E1B               	movwf	reverseDetect@mR^0,c
  5700   0016C4  0E00               	movlw	high _motorR
  5701   0016C6  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  5702   0016C8  EC20  F01E         	call	_reverseDetect	;wreg free
  5703                           
  5704                           ;color.c: 206:             turnLeft45(&motorL, &motorR);
  5705   0016CC  0EF6               	movlw	low _motorL
  5706   0016CE  6E19               	movwf	turnLeft45@mL^0,c
  5707   0016D0  0E00               	movlw	high _motorL
  5708   0016D2  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  5709   0016D4  0EED               	movlw	low _motorR
  5710   0016D6  6E1B               	movwf	turnLeft45@mR^0,c
  5711   0016D8  0E00               	movlw	high _motorR
  5712   0016DA  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  5713   0016DC  EC79  F01E         	call	_turnLeft45	;wreg free
  5714                           
  5715                           ;color.c: 207:             turnLeft45(&motorL, &motorR);
  5716   0016E0  0EF6               	movlw	low _motorL
  5717   0016E2  6E19               	movwf	turnLeft45@mL^0,c
  5718   0016E4  0E00               	movlw	high _motorL
  5719   0016E6  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  5720   0016E8  0EED               	movlw	low _motorR
  5721   0016EA  6E1B               	movwf	turnLeft45@mR^0,c
  5722   0016EC  0E00               	movlw	high _motorR
  5723   0016EE  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  5724   0016F0  EC79  F01E         	call	_turnLeft45	;wreg free
  5725   0016F4                     
  5726                           ;color.c: 208:             return 5;
  5727   0016F4  0E00               	movlw	0
  5728   0016F6  6E4C               	movwf	(?_Colour_decider+1)^0,c
  5729   0016F8  0E05               	movlw	5
  5730   0016FA  6E4B               	movwf	?_Colour_decider^0,c
  5731   0016FC  EFD8  F00C         	goto	l76
  5732   001700                     l3783:
  5733   001700  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  5734   001704  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  5735   001708  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  5736   00170C  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  5737   001710  0E00               	movlw	0
  5738   001712  6E05               	movwf	___flge@ff2^0,c
  5739   001714  0E00               	movlw	0
  5740   001716  6E06               	movwf	(___flge@ff2+1)^0,c
  5741   001718  0EA0               	movlw	160
  5742   00171A  6E07               	movwf	(___flge@ff2+2)^0,c
  5743   00171C  0E42               	movlw	66
  5744   00171E  6E08               	movwf	(___flge@ff2+3)^0,c
  5745   001720  EC65  F01A         	call	___flge	;wreg free
  5746   001724  A0D8               	btfss	status,0,c
  5747   001726  EF97  F00B         	goto	u3701
  5748   00172A  EF99  F00B         	goto	u3700
  5749   00172E                     u3701:
  5750   00172E  EFD9  F00B         	goto	l3801
  5751   001732                     u3700:
  5752   001732  0E00               	movlw	0
  5753   001734  6E01               	movwf	___flge@ff1^0,c
  5754   001736  0E00               	movlw	0
  5755   001738  6E02               	movwf	(___flge@ff1+1)^0,c
  5756   00173A  0EE6               	movlw	230
  5757   00173C  6E03               	movwf	(___flge@ff1+2)^0,c
  5758   00173E  0E42               	movlw	66
  5759   001740  6E04               	movwf	(___flge@ff1+3)^0,c
  5760   001742  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  5761   001746  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  5762   00174A  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  5763   00174E  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  5764   001752  EC65  F01A         	call	___flge	;wreg free
  5765   001756  A0D8               	btfss	status,0,c
  5766   001758  EFB0  F00B         	goto	u3711
  5767   00175C  EFB2  F00B         	goto	u3710
  5768   001760                     u3711:
  5769   001760  EFD9  F00B         	goto	l3801
  5770   001764                     u3710:
  5771   001764                     
  5772                           ;color.c: 215:         if(0.15<=rel->B){
  5773   001764  EE20 F008          	lfsr	2,8
  5774   001768  504D               	movf	Colour_decider@rel^0,w,c
  5775   00176A  26D9               	addwf	fsr2l,f,c
  5776   00176C  504E               	movf	(Colour_decider@rel+1)^0,w,c
  5777   00176E  22DA               	addwfc	fsr2h,f,c
  5778   001770  CFDE F001          	movff	postinc2,___flge@ff1
  5779   001774  CFDE F002          	movff	postinc2,___flge@ff1+1
  5780   001778  CFDE F003          	movff	postinc2,___flge@ff1+2
  5781   00177C  CFDE F004          	movff	postinc2,___flge@ff1+3
  5782   001780  0E9A               	movlw	154
  5783   001782  6E05               	movwf	___flge@ff2^0,c
  5784   001784  0E99               	movlw	153
  5785   001786  6E06               	movwf	(___flge@ff2+1)^0,c
  5786   001788  0E19               	movlw	25
  5787   00178A  6E07               	movwf	(___flge@ff2+2)^0,c
  5788   00178C  0E3E               	movlw	62
  5789   00178E  6E08               	movwf	(___flge@ff2+3)^0,c
  5790   001790  EC65  F01A         	call	___flge	;wreg free
  5791   001794  A0D8               	btfss	status,0,c
  5792   001796  EFCF  F00B         	goto	u3721
  5793   00179A  EFD1  F00B         	goto	u3720
  5794   00179E                     u3721:
  5795   00179E  EFD3  F00B         	goto	l3797
  5796   0017A2                     u3720:
  5797   0017A2  EFD1  F00A         	goto	l3757
  5798   0017A6                     l3797:
  5799                           
  5800                           ;color.c: 224:              return 6;
  5801   0017A6  0E00               	movlw	0
  5802   0017A8  6E4C               	movwf	(?_Colour_decider+1)^0,c
  5803   0017AA  0E06               	movlw	6
  5804   0017AC  6E4B               	movwf	?_Colour_decider^0,c
  5805   0017AE  EFD8  F00C         	goto	l76
  5806   0017B2                     l3801:
  5807   0017B2  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  5808   0017B6  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  5809   0017BA  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  5810   0017BE  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  5811   0017C2  0E00               	movlw	0
  5812   0017C4  6E05               	movwf	___flge@ff2^0,c
  5813   0017C6  0E00               	movlw	0
  5814   0017C8  6E06               	movwf	(___flge@ff2+1)^0,c
  5815   0017CA  0EF0               	movlw	240
  5816   0017CC  6E07               	movwf	(___flge@ff2+2)^0,c
  5817   0017CE  0E41               	movlw	65
  5818   0017D0  6E08               	movwf	(___flge@ff2+3)^0,c
  5819   0017D2  EC65  F01A         	call	___flge	;wreg free
  5820   0017D6  A0D8               	btfss	status,0,c
  5821   0017D8  EFF0  F00B         	goto	u3731
  5822   0017DC  EFF2  F00B         	goto	u3730
  5823   0017E0                     u3731:
  5824   0017E0  EF0B  F00C         	goto	l3805
  5825   0017E4                     u3730:
  5826   0017E4  0E00               	movlw	0
  5827   0017E6  6E01               	movwf	___flge@ff1^0,c
  5828   0017E8  0E00               	movlw	0
  5829   0017EA  6E02               	movwf	(___flge@ff1+1)^0,c
  5830   0017EC  0E68               	movlw	104
  5831   0017EE  6E03               	movwf	(___flge@ff1+2)^0,c
  5832   0017F0  0E42               	movlw	66
  5833   0017F2  6E04               	movwf	(___flge@ff1+3)^0,c
  5834   0017F4  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  5835   0017F8  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  5836   0017FC  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  5837   001800  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  5838   001804  EC65  F01A         	call	___flge	;wreg free
  5839   001808  B0D8               	btfsc	status,0,c
  5840   00180A  EF09  F00C         	goto	u3741
  5841   00180E  EF0B  F00C         	goto	u3740
  5842   001812                     u3741:
  5843   001812  EFD1  F00A         	goto	l3757
  5844   001816                     u3740:
  5845   001816                     l3805:
  5846   001816  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  5847   00181A  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  5848   00181E  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  5849   001822  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  5850   001826  0E00               	movlw	0
  5851   001828  6E05               	movwf	___flge@ff2^0,c
  5852   00182A  0E00               	movlw	0
  5853   00182C  6E06               	movwf	(___flge@ff2+1)^0,c
  5854   00182E  0EF0               	movlw	240
  5855   001830  6E07               	movwf	(___flge@ff2+2)^0,c
  5856   001832  0E42               	movlw	66
  5857   001834  6E08               	movwf	(___flge@ff2+3)^0,c
  5858   001836  EC65  F01A         	call	___flge	;wreg free
  5859   00183A  A0D8               	btfss	status,0,c
  5860   00183C  EF22  F00C         	goto	u3751
  5861   001840  EF24  F00C         	goto	u3750
  5862   001844                     u3751:
  5863   001844  EF3F  F00C         	goto	l3817
  5864   001848                     u3750:
  5865   001848  0E00               	movlw	0
  5866   00184A  6E01               	movwf	___flge@ff1^0,c
  5867   00184C  0E00               	movlw	0
  5868   00184E  6E02               	movwf	(___flge@ff1+1)^0,c
  5869   001850  0E5C               	movlw	92
  5870   001852  6E03               	movwf	(___flge@ff1+2)^0,c
  5871   001854  0E43               	movlw	67
  5872   001856  6E04               	movwf	(___flge@ff1+3)^0,c
  5873   001858  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  5874   00185C  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  5875   001860  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  5876   001864  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  5877   001868  EC65  F01A         	call	___flge	;wreg free
  5878   00186C  A0D8               	btfss	status,0,c
  5879   00186E  EF3B  F00C         	goto	u3761
  5880   001872  EF3D  F00C         	goto	u3760
  5881   001876                     u3761:
  5882   001876  EF3F  F00C         	goto	l3817
  5883   00187A                     u3760:
  5884   00187A  EFD1  F00A         	goto	l3757
  5885   00187E                     l3817:
  5886   00187E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  5887   001882  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  5888   001886  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  5889   00188A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  5890   00188E  0E00               	movlw	0
  5891   001890  6E05               	movwf	___flge@ff2^0,c
  5892   001892  0E00               	movlw	0
  5893   001894  6E06               	movwf	(___flge@ff2+1)^0,c
  5894   001896  0E60               	movlw	96
  5895   001898  6E07               	movwf	(___flge@ff2+2)^0,c
  5896   00189A  0E41               	movlw	65
  5897   00189C  6E08               	movwf	(___flge@ff2+3)^0,c
  5898   00189E  EC65  F01A         	call	___flge	;wreg free
  5899   0018A2  A0D8               	btfss	status,0,c
  5900   0018A4  EF56  F00C         	goto	u3771
  5901   0018A8  EF58  F00C         	goto	u3770
  5902   0018AC                     u3771:
  5903   0018AC  EFD4  F00C         	goto	l3845
  5904   0018B0                     u3770:
  5905   0018B0  0E00               	movlw	0
  5906   0018B2  6E01               	movwf	___flge@ff1^0,c
  5907   0018B4  0E00               	movlw	0
  5908   0018B6  6E02               	movwf	(___flge@ff1+1)^0,c
  5909   0018B8  0E98               	movlw	152
  5910   0018BA  6E03               	movwf	(___flge@ff1+2)^0,c
  5911   0018BC  0E41               	movlw	65
  5912   0018BE  6E04               	movwf	(___flge@ff1+3)^0,c
  5913   0018C0  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  5914   0018C4  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  5915   0018C8  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  5916   0018CC  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  5917   0018D0  EC65  F01A         	call	___flge	;wreg free
  5918   0018D4  A0D8               	btfss	status,0,c
  5919   0018D6  EF6F  F00C         	goto	u3781
  5920   0018DA  EF71  F00C         	goto	u3780
  5921   0018DE                     u3781:
  5922   0018DE  EFD4  F00C         	goto	l3845
  5923   0018E2                     u3780:
  5924   0018E2                     
  5925                           ;color.c: 240:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  5926   0018E2  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  5927   0018E6  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  5928   0018EA  CFDE F001          	movff	postinc2,___flge@ff1
  5929   0018EE  CFDE F002          	movff	postinc2,___flge@ff1+1
  5930   0018F2  CFDE F003          	movff	postinc2,___flge@ff1+2
  5931   0018F6  CFDE F004          	movff	postinc2,___flge@ff1+3
  5932   0018FA  0ECD               	movlw	205
  5933   0018FC  6E05               	movwf	___flge@ff2^0,c
  5934   0018FE  0ECC               	movlw	204
  5935   001900  6E06               	movwf	(___flge@ff2+1)^0,c
  5936   001902  0E4C               	movlw	76
  5937   001904  6E07               	movwf	(___flge@ff2+2)^0,c
  5938   001906  0E3E               	movlw	62
  5939   001908  6E08               	movwf	(___flge@ff2+3)^0,c
  5940   00190A  EC65  F01A         	call	___flge	;wreg free
  5941   00190E  A0D8               	btfss	status,0,c
  5942   001910  EF8C  F00C         	goto	u3791
  5943   001914  EF8E  F00C         	goto	u3790
  5944   001918                     u3791:
  5945   001918  EFAD  F00C         	goto	l3831
  5946   00191C                     u3790:
  5947   00191C  0E1F               	movlw	31
  5948   00191E  6E01               	movwf	___flge@ff1^0,c
  5949   001920  0E85               	movlw	133
  5950   001922  6E02               	movwf	(___flge@ff1+1)^0,c
  5951   001924  0E6B               	movlw	107
  5952   001926  6E03               	movwf	(___flge@ff1+2)^0,c
  5953   001928  0E3E               	movlw	62
  5954   00192A  6E04               	movwf	(___flge@ff1+3)^0,c
  5955   00192C  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  5956   001930  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  5957   001934  CFDE F005          	movff	postinc2,___flge@ff2
  5958   001938  CFDE F006          	movff	postinc2,___flge@ff2+1
  5959   00193C  CFDE F007          	movff	postinc2,___flge@ff2+2
  5960   001940  CFDE F008          	movff	postinc2,___flge@ff2+3
  5961   001944  EC65  F01A         	call	___flge	;wreg free
  5962   001948  A0D8               	btfss	status,0,c
  5963   00194A  EFA9  F00C         	goto	u3801
  5964   00194E  EFAB  F00C         	goto	u3800
  5965   001952                     u3801:
  5966   001952  EFAD  F00C         	goto	l3831
  5967   001956                     u3800:
  5968   001956  EF59  F008         	goto	l3693
  5969   00195A                     l3831:
  5970   00195A  EE20 F008          	lfsr	2,8
  5971   00195E  504D               	movf	Colour_decider@rel^0,w,c
  5972   001960  26D9               	addwf	fsr2l,f,c
  5973   001962  504E               	movf	(Colour_decider@rel+1)^0,w,c
  5974   001964  22DA               	addwfc	fsr2h,f,c
  5975   001966  CFDE F001          	movff	postinc2,___flge@ff1
  5976   00196A  CFDE F002          	movff	postinc2,___flge@ff1+1
  5977   00196E  CFDE F003          	movff	postinc2,___flge@ff1+2
  5978   001972  CFDE F004          	movff	postinc2,___flge@ff1+3
  5979   001976  0E9A               	movlw	154
  5980   001978  6E05               	movwf	___flge@ff2^0,c
  5981   00197A  0E99               	movlw	153
  5982   00197C  6E06               	movwf	(___flge@ff2+1)^0,c
  5983   00197E  0E19               	movlw	25
  5984   001980  6E07               	movwf	(___flge@ff2+2)^0,c
  5985   001982  0E3E               	movlw	62
  5986   001984  6E08               	movwf	(___flge@ff2+3)^0,c
  5987   001986  EC65  F01A         	call	___flge	;wreg free
  5988   00198A  A0D8               	btfss	status,0,c
  5989   00198C  EFCA  F00C         	goto	u3811
  5990   001990  EFCC  F00C         	goto	u3810
  5991   001994                     u3811:
  5992   001994  EFCE  F00C         	goto	l3841
  5993   001998                     u3810:
  5994   001998  EFD1  F00A         	goto	l3757
  5995   00199C                     l3841:
  5996                           
  5997                           ;color.c: 252:             return 7;
  5998   00199C  0E00               	movlw	0
  5999   00199E  6E4C               	movwf	(?_Colour_decider+1)^0,c
  6000   0019A0  0E07               	movlw	7
  6001   0019A2  6E4B               	movwf	?_Colour_decider^0,c
  6002   0019A4  EFD8  F00C         	goto	l76
  6003   0019A8                     l3845:
  6004                           
  6005                           ;color.c: 256:         return 10;
  6006   0019A8  0E00               	movlw	0
  6007   0019AA  6E4C               	movwf	(?_Colour_decider+1)^0,c
  6008   0019AC  0E0A               	movlw	10
  6009   0019AE  6E4B               	movwf	?_Colour_decider^0,c
  6010   0019B0                     l76:
  6011   0019B0  0012               	return		;funcret
  6012   0019B2                     __end_of_Colour_decider:
  6013                           	callstack 0
  6014                           
  6015 ;; *************** function _turnRight45 *****************
  6016 ;; Defined at:
  6017 ;;		line 181 in file "dc_motor.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  6020 ;;		 -> motorL(9), 
  6021 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  6022 ;;		 -> motorR(9), 
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;		None
  6025 ;; Return value:  Size  Location     Type
  6026 ;;                  1    wreg      void 
  6027 ;; Registers used:
  6028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6034 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6037 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6038 ;;Total ram usage:        6 bytes
  6039 ;; Hardware stack levels used: 1
  6040 ;; Hardware stack levels required when called: 4
  6041 ;; This function calls:
  6042 ;;		_stop
  6043 ;;		_turnRight
  6044 ;; This function is called by:
  6045 ;;		_Colour_decider
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           	psect	text34
  6050   003C9A                     __ptext34:
  6051                           	callstack 0
  6052   003C9A                     _turnRight45:
  6053                           	callstack 25
  6054   003C9A                     
  6055                           ;dc_motor.c: 182:     turnRight(mL,mR);
  6056   003C9A  C019  F014         	movff	turnRight45@mL,turnRight@mL
  6057   003C9E  C01A  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  6058   003CA2  C01B  F016         	movff	turnRight45@mR,turnRight@mR
  6059   003CA6  C01C  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  6060   003CAA  ECEC  F01B         	call	_turnRight	;wreg free
  6061   003CAE                     
  6062                           ;dc_motor.c: 183:     _delay((unsigned long)((220)*(64000000/4000.0)));
  6063   003CAE  0E12               	movlw	18
  6064   003CB0  6E1E               	movwf	(??_turnRight45+1)^0,c
  6065   003CB2  0EDC               	movlw	220
  6066   003CB4  6E1D               	movwf	??_turnRight45^0,c
  6067   003CB6  0E60               	movlw	96
  6068   003CB8                     u3947:
  6069   003CB8  2EE8               	decfsz	wreg,f,c
  6070   003CBA  D7FE               	bra	u3947
  6071   003CBC  2E1D               	decfsz	??_turnRight45^0,f,c
  6072   003CBE  D7FC               	bra	u3947
  6073   003CC0  2E1E               	decfsz	(??_turnRight45+1)^0,f,c
  6074   003CC2  D7FA               	bra	u3947
  6075   003CC4                     
  6076                           ;dc_motor.c: 184:     stop(&motorL, &motorR);
  6077   003CC4  0EF6               	movlw	low _motorL
  6078   003CC6  6E14               	movwf	stop@mL^0,c
  6079   003CC8  0E00               	movlw	high _motorL
  6080   003CCA  6E15               	movwf	(stop@mL+1)^0,c
  6081   003CCC  0EED               	movlw	low _motorR
  6082   003CCE  6E16               	movwf	stop@mR^0,c
  6083   003CD0  0E00               	movlw	high _motorR
  6084   003CD2  6E17               	movwf	(stop@mR+1)^0,c
  6085   003CD4  EC4E  F01D         	call	_stop	;wreg free
  6086                           
  6087                           ;dc_motor.c: 185:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6088   003CD8  0E52               	movlw	82
  6089   003CDA  6E1E               	movwf	(??_turnRight45+1)^0,c
  6090   003CDC  0E2B               	movlw	43
  6091   003CDE  6E1D               	movwf	??_turnRight45^0,c
  6092   003CE0  0E00               	movlw	0
  6093   003CE2                     u3957:
  6094   003CE2  2EE8               	decfsz	wreg,f,c
  6095   003CE4  D7FE               	bra	u3957
  6096   003CE6  2E1D               	decfsz	??_turnRight45^0,f,c
  6097   003CE8  D7FC               	bra	u3957
  6098   003CEA  2E1E               	decfsz	(??_turnRight45+1)^0,f,c
  6099   003CEC  D7FA               	bra	u3957
  6100   003CEE  D000               	nop2	
  6101   003CF0  0012               	return		;funcret
  6102   003CF2                     __end_of_turnRight45:
  6103                           	callstack 0
  6104                           
  6105 ;; *************** function _turnRight *****************
  6106 ;; Defined at:
  6107 ;;		line 128 in file "dc_motor.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6110 ;;		 -> motorL(9), 
  6111 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6112 ;;		 -> motorR(9), 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;		None
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      void 
  6117 ;; Registers used:
  6118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6124 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6127 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6128 ;;Total ram usage:        5 bytes
  6129 ;; Hardware stack levels used: 1
  6130 ;; Hardware stack levels required when called: 3
  6131 ;; This function calls:
  6132 ;;		_setMotorPWM
  6133 ;; This function is called by:
  6134 ;;		_turnRight45
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           	psect	text35
  6139   0037D8                     __ptext35:
  6140                           	callstack 0
  6141   0037D8                     _turnRight:
  6142                           	callstack 25
  6143   0037D8                     
  6144                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  6145   0037D8  EE20 F001          	lfsr	2,1
  6146   0037DC  5014               	movf	turnRight@mL^0,w,c
  6147   0037DE  26D9               	addwf	fsr2l,f,c
  6148   0037E0  5015               	movf	(turnRight@mL+1)^0,w,c
  6149   0037E2  22DA               	addwfc	fsr2h,f,c
  6150   0037E4  0E01               	movlw	1
  6151   0037E6  6EDF               	movwf	indf2,c
  6152                           
  6153                           ;dc_motor.c: 131:     mR->direction =0;
  6154   0037E8  EE20 F001          	lfsr	2,1
  6155   0037EC  5016               	movf	turnRight@mR^0,w,c
  6156   0037EE  26D9               	addwf	fsr2l,f,c
  6157   0037F0  5017               	movf	(turnRight@mR+1)^0,w,c
  6158   0037F2  22DA               	addwfc	fsr2h,f,c
  6159   0037F4  0E00               	movlw	0
  6160   0037F6  6EDF               	movwf	indf2,c
  6161                           
  6162                           ;dc_motor.c: 133:     while(mL->power<70 && mR->power<70){
  6163   0037F8  EF1E  F01C         	goto	l2935
  6164   0037FC                     l2927:
  6165                           
  6166                           ;dc_motor.c: 135:         mL->power+=10;
  6167   0037FC  C014  FFD9         	movff	turnRight@mL,fsr2l
  6168   003800  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  6169   003804  0E0A               	movlw	10
  6170   003806  26DF               	addwf	indf2,f,c
  6171                           
  6172                           ;dc_motor.c: 136:         mR->power+=10;
  6173   003808  C016  FFD9         	movff	turnRight@mR,fsr2l
  6174   00380C  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  6175   003810  0E0A               	movlw	10
  6176   003812  26DF               	addwf	indf2,f,c
  6177   003814                     
  6178                           ;dc_motor.c: 138:         setMotorPWM(mL);
  6179   003814  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  6180   003818  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  6181   00381C  EC56  F018         	call	_setMotorPWM	;wreg free
  6182   003820                     
  6183                           ;dc_motor.c: 139:         setMotorPWM(mR);
  6184   003820  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  6185   003824  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  6186   003828  EC56  F018         	call	_setMotorPWM	;wreg free
  6187   00382C                     
  6188                           ;dc_motor.c: 141:         _delay((unsigned long)((1)*(64000000/4000.0)));
  6189   00382C  0E15               	movlw	21
  6190   00382E  6E18               	movwf	??_turnRight^0,c
  6191   003830  0EC6               	movlw	198
  6192   003832                     u3967:
  6193   003832  2EE8               	decfsz	wreg,f,c
  6194   003834  D7FE               	bra	u3967
  6195   003836  2E18               	decfsz	??_turnRight^0,f,c
  6196   003838  D7FC               	bra	u3967
  6197   00383A  D000               	nop2	
  6198   00383C                     l2935:
  6199                           
  6200                           ;dc_motor.c: 133:     while(mL->power<70 && mR->power<70){
  6201   00383C  C014  FFD9         	movff	turnRight@mL,fsr2l
  6202   003840  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  6203   003844  0E46               	movlw	70
  6204   003846  60DF               	cpfslt	indf2,c
  6205   003848  EF28  F01C         	goto	u2421
  6206   00384C  EF2A  F01C         	goto	u2420
  6207   003850                     u2421:
  6208   003850  EF36  F01C         	goto	l434
  6209   003854                     u2420:
  6210   003854  C016  FFD9         	movff	turnRight@mR,fsr2l
  6211   003858  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  6212   00385C  0E45               	movlw	69
  6213   00385E  64DF               	cpfsgt	indf2,c
  6214   003860  EF34  F01C         	goto	u2431
  6215   003864  EF36  F01C         	goto	u2430
  6216   003868                     u2431:
  6217   003868  EFFE  F01B         	goto	l2927
  6218   00386C                     u2430:
  6219   00386C                     l434:
  6220   00386C  0012               	return		;funcret
  6221   00386E                     __end_of_turnRight:
  6222                           	callstack 0
  6223                           
  6224 ;; *************** function _turnLeft45 *****************
  6225 ;; Defined at:
  6226 ;;		line 188 in file "dc_motor.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  6229 ;;		 -> motorL(9), 
  6230 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  6231 ;;		 -> motorR(9), 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;		None
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  1    wreg      void 
  6236 ;; Registers used:
  6237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6243 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6245 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6246 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6247 ;;Total ram usage:        6 bytes
  6248 ;; Hardware stack levels used: 1
  6249 ;; Hardware stack levels required when called: 4
  6250 ;; This function calls:
  6251 ;;		_stop
  6252 ;;		_turnLeft
  6253 ;; This function is called by:
  6254 ;;		_Colour_decider
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           	psect	text36
  6259   003CF2                     __ptext36:
  6260                           	callstack 0
  6261   003CF2                     _turnLeft45:
  6262                           	callstack 25
  6263   003CF2                     
  6264                           ;dc_motor.c: 189:     turnLeft(mL,mR);
  6265   003CF2  C019  F014         	movff	turnLeft45@mL,turnLeft@mL
  6266   003CF6  C01A  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  6267   003CFA  C01B  F016         	movff	turnLeft45@mR,turnLeft@mR
  6268   003CFE  C01C  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  6269   003D02  EC37  F01C         	call	_turnLeft	;wreg free
  6270   003D06                     
  6271                           ;dc_motor.c: 190:     _delay((unsigned long)((220)*(64000000/4000.0)));
  6272   003D06  0E12               	movlw	18
  6273   003D08  6E1E               	movwf	(??_turnLeft45+1)^0,c
  6274   003D0A  0EDC               	movlw	220
  6275   003D0C  6E1D               	movwf	??_turnLeft45^0,c
  6276   003D0E  0E60               	movlw	96
  6277   003D10                     u3977:
  6278   003D10  2EE8               	decfsz	wreg,f,c
  6279   003D12  D7FE               	bra	u3977
  6280   003D14  2E1D               	decfsz	??_turnLeft45^0,f,c
  6281   003D16  D7FC               	bra	u3977
  6282   003D18  2E1E               	decfsz	(??_turnLeft45+1)^0,f,c
  6283   003D1A  D7FA               	bra	u3977
  6284   003D1C                     
  6285                           ;dc_motor.c: 191:     stop(&motorL, &motorR);
  6286   003D1C  0EF6               	movlw	low _motorL
  6287   003D1E  6E14               	movwf	stop@mL^0,c
  6288   003D20  0E00               	movlw	high _motorL
  6289   003D22  6E15               	movwf	(stop@mL+1)^0,c
  6290   003D24  0EED               	movlw	low _motorR
  6291   003D26  6E16               	movwf	stop@mR^0,c
  6292   003D28  0E00               	movlw	high _motorR
  6293   003D2A  6E17               	movwf	(stop@mR+1)^0,c
  6294   003D2C  EC4E  F01D         	call	_stop	;wreg free
  6295                           
  6296                           ;dc_motor.c: 192:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6297   003D30  0E52               	movlw	82
  6298   003D32  6E1E               	movwf	(??_turnLeft45+1)^0,c
  6299   003D34  0E2B               	movlw	43
  6300   003D36  6E1D               	movwf	??_turnLeft45^0,c
  6301   003D38  0E00               	movlw	0
  6302   003D3A                     u3987:
  6303   003D3A  2EE8               	decfsz	wreg,f,c
  6304   003D3C  D7FE               	bra	u3987
  6305   003D3E  2E1D               	decfsz	??_turnLeft45^0,f,c
  6306   003D40  D7FC               	bra	u3987
  6307   003D42  2E1E               	decfsz	(??_turnLeft45+1)^0,f,c
  6308   003D44  D7FA               	bra	u3987
  6309   003D46  D000               	nop2	
  6310   003D48  0012               	return		;funcret
  6311   003D4A                     __end_of_turnLeft45:
  6312                           	callstack 0
  6313                           
  6314 ;; *************** function _turnLeft *****************
  6315 ;; Defined at:
  6316 ;;		line 110 in file "dc_motor.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6319 ;;		 -> motorL(9), 
  6320 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6321 ;;		 -> motorR(9), 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;		None
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  1    wreg      void 
  6326 ;; Registers used:
  6327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6333 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6336 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6337 ;;Total ram usage:        5 bytes
  6338 ;; Hardware stack levels used: 1
  6339 ;; Hardware stack levels required when called: 3
  6340 ;; This function calls:
  6341 ;;		_setMotorPWM
  6342 ;; This function is called by:
  6343 ;;		_turnLeft45
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text37
  6348   00386E                     __ptext37:
  6349                           	callstack 0
  6350   00386E                     _turnLeft:
  6351                           	callstack 25
  6352   00386E                     
  6353                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  6354   00386E  EE20 F001          	lfsr	2,1
  6355   003872  5014               	movf	turnLeft@mL^0,w,c
  6356   003874  26D9               	addwf	fsr2l,f,c
  6357   003876  5015               	movf	(turnLeft@mL+1)^0,w,c
  6358   003878  22DA               	addwfc	fsr2h,f,c
  6359   00387A  0E00               	movlw	0
  6360   00387C  6EDF               	movwf	indf2,c
  6361                           
  6362                           ;dc_motor.c: 113:     mR->direction =1;
  6363   00387E  EE20 F001          	lfsr	2,1
  6364   003882  5016               	movf	turnLeft@mR^0,w,c
  6365   003884  26D9               	addwf	fsr2l,f,c
  6366   003886  5017               	movf	(turnLeft@mR+1)^0,w,c
  6367   003888  22DA               	addwfc	fsr2h,f,c
  6368   00388A  0E01               	movlw	1
  6369   00388C  6EDF               	movwf	indf2,c
  6370                           
  6371                           ;dc_motor.c: 115:     while(mL->power<70 && mR->power<70){
  6372   00388E  EF69  F01C         	goto	l2921
  6373   003892                     l2913:
  6374                           
  6375                           ;dc_motor.c: 117:         mL->power+=10;
  6376   003892  C014  FFD9         	movff	turnLeft@mL,fsr2l
  6377   003896  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  6378   00389A  0E0A               	movlw	10
  6379   00389C  26DF               	addwf	indf2,f,c
  6380                           
  6381                           ;dc_motor.c: 118:         mR->power+=10;
  6382   00389E  C016  FFD9         	movff	turnLeft@mR,fsr2l
  6383   0038A2  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  6384   0038A6  0E0A               	movlw	10
  6385   0038A8  26DF               	addwf	indf2,f,c
  6386   0038AA                     
  6387                           ;dc_motor.c: 120:         setMotorPWM(mL);
  6388   0038AA  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  6389   0038AE  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6390   0038B2  EC56  F018         	call	_setMotorPWM	;wreg free
  6391   0038B6                     
  6392                           ;dc_motor.c: 121:         setMotorPWM(mR);
  6393   0038B6  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  6394   0038BA  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6395   0038BE  EC56  F018         	call	_setMotorPWM	;wreg free
  6396   0038C2                     
  6397                           ;dc_motor.c: 123:         _delay((unsigned long)((1)*(64000000/4000.0)));
  6398   0038C2  0E15               	movlw	21
  6399   0038C4  6E18               	movwf	??_turnLeft^0,c
  6400   0038C6  0EC6               	movlw	198
  6401   0038C8                     u3997:
  6402   0038C8  2EE8               	decfsz	wreg,f,c
  6403   0038CA  D7FE               	bra	u3997
  6404   0038CC  2E18               	decfsz	??_turnLeft^0,f,c
  6405   0038CE  D7FC               	bra	u3997
  6406   0038D0  D000               	nop2	
  6407   0038D2                     l2921:
  6408                           
  6409                           ;dc_motor.c: 115:     while(mL->power<70 && mR->power<70){
  6410   0038D2  C014  FFD9         	movff	turnLeft@mL,fsr2l
  6411   0038D6  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  6412   0038DA  0E46               	movlw	70
  6413   0038DC  60DF               	cpfslt	indf2,c
  6414   0038DE  EF73  F01C         	goto	u2401
  6415   0038E2  EF75  F01C         	goto	u2400
  6416   0038E6                     u2401:
  6417   0038E6  EF81  F01C         	goto	l426
  6418   0038EA                     u2400:
  6419   0038EA  C016  FFD9         	movff	turnLeft@mR,fsr2l
  6420   0038EE  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  6421   0038F2  0E45               	movlw	69
  6422   0038F4  64DF               	cpfsgt	indf2,c
  6423   0038F6  EF7F  F01C         	goto	u2411
  6424   0038FA  EF81  F01C         	goto	u2410
  6425   0038FE                     u2411:
  6426   0038FE  EF49  F01C         	goto	l2913
  6427   003902                     u2410:
  6428   003902                     l426:
  6429   003902  0012               	return		;funcret
  6430   003904                     __end_of_turnLeft:
  6431                           	callstack 0
  6432                           
  6433 ;; *************** function _reverseDetect *****************
  6434 ;; Defined at:
  6435 ;;		line 195 in file "dc_motor.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  6438 ;;		 -> motorL(9), 
  6439 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  6440 ;;		 -> motorR(9), 
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  1    wreg      void 
  6445 ;; Registers used:
  6446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6452 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6455 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6456 ;;Total ram usage:        6 bytes
  6457 ;; Hardware stack levels used: 1
  6458 ;; Hardware stack levels required when called: 4
  6459 ;; This function calls:
  6460 ;;		_fullSpeedBack
  6461 ;;		_stop
  6462 ;; This function is called by:
  6463 ;;		_Colour_decider
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           	psect	text38
  6468   003C40                     __ptext38:
  6469                           	callstack 0
  6470   003C40                     _reverseDetect:
  6471                           	callstack 25
  6472   003C40                     
  6473                           ;dc_motor.c: 196:     fullSpeedBack(mL,mR);
  6474   003C40  C019  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
  6475   003C44  C01A  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
  6476   003C48  C01B  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
  6477   003C4C  C01C  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
  6478   003C50  EC82  F01C         	call	_fullSpeedBack	;wreg free
  6479   003C54                     
  6480                           ;dc_motor.c: 197:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6481   003C54  0E11               	movlw	17
  6482   003C56  6E1E               	movwf	(??_reverseDetect+1)^0,c
  6483   003C58  0E3C               	movlw	60
  6484   003C5A  6E1D               	movwf	??_reverseDetect^0,c
  6485   003C5C  0ECB               	movlw	203
  6486   003C5E                     u4007:
  6487   003C5E  2EE8               	decfsz	wreg,f,c
  6488   003C60  D7FE               	bra	u4007
  6489   003C62  2E1D               	decfsz	??_reverseDetect^0,f,c
  6490   003C64  D7FC               	bra	u4007
  6491   003C66  2E1E               	decfsz	(??_reverseDetect+1)^0,f,c
  6492   003C68  D7FA               	bra	u4007
  6493   003C6A  F000               	nop	
  6494   003C6C                     
  6495                           ;dc_motor.c: 198:     stop(&motorL, &motorR);
  6496   003C6C  0EF6               	movlw	low _motorL
  6497   003C6E  6E14               	movwf	stop@mL^0,c
  6498   003C70  0E00               	movlw	high _motorL
  6499   003C72  6E15               	movwf	(stop@mL+1)^0,c
  6500   003C74  0EED               	movlw	low _motorR
  6501   003C76  6E16               	movwf	stop@mR^0,c
  6502   003C78  0E00               	movlw	high _motorR
  6503   003C7A  6E17               	movwf	(stop@mR+1)^0,c
  6504   003C7C  EC4E  F01D         	call	_stop	;wreg free
  6505                           
  6506                           ;dc_motor.c: 199:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6507   003C80  0E52               	movlw	82
  6508   003C82  6E1E               	movwf	(??_reverseDetect+1)^0,c
  6509   003C84  0E2B               	movlw	43
  6510   003C86  6E1D               	movwf	??_reverseDetect^0,c
  6511   003C88  0E00               	movlw	0
  6512   003C8A                     u4017:
  6513   003C8A  2EE8               	decfsz	wreg,f,c
  6514   003C8C  D7FE               	bra	u4017
  6515   003C8E  2E1D               	decfsz	??_reverseDetect^0,f,c
  6516   003C90  D7FC               	bra	u4017
  6517   003C92  2E1E               	decfsz	(??_reverseDetect+1)^0,f,c
  6518   003C94  D7FA               	bra	u4017
  6519   003C96  D000               	nop2	
  6520   003C98  0012               	return		;funcret
  6521   003C9A                     __end_of_reverseDetect:
  6522                           	callstack 0
  6523                           
  6524 ;; *************** function _stop *****************
  6525 ;; Defined at:
  6526 ;;		line 92 in file "dc_motor.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6529 ;;		 -> motorL(9), 
  6530 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6531 ;;		 -> motorR(9), 
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;		None
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  1    wreg      void 
  6536 ;; Registers used:
  6537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6545 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6546 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6547 ;;Total ram usage:        5 bytes
  6548 ;; Hardware stack levels used: 1
  6549 ;; Hardware stack levels required when called: 3
  6550 ;; This function calls:
  6551 ;;		_setMotorPWM
  6552 ;; This function is called by:
  6553 ;;		_main
  6554 ;;		_turnRight45
  6555 ;;		_turnLeft45
  6556 ;;		_reverseDetect
  6557 ;;		_BumpintoWall
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           	psect	text39
  6562   003A9C                     __ptext39:
  6563                           	callstack 0
  6564   003A9C                     _stop:
  6565                           	callstack 27
  6566   003A9C                     
  6567                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
  6568   003A9C  EF70  F01D         	goto	l2907
  6569   003AA0                     l2899:
  6570                           
  6571                           ;dc_motor.c: 96:         mL->power-=10;
  6572   003AA0  C014  FFD9         	movff	stop@mL,fsr2l
  6573   003AA4  C015  FFDA         	movff	stop@mL+1,fsr2h
  6574   003AA8  0E0A               	movlw	10
  6575   003AAA  5EDF               	subwf	indf2,f,c
  6576                           
  6577                           ;dc_motor.c: 97:         mR->power-=10;
  6578   003AAC  C016  FFD9         	movff	stop@mR,fsr2l
  6579   003AB0  C017  FFDA         	movff	stop@mR+1,fsr2h
  6580   003AB4  0E0A               	movlw	10
  6581   003AB6  5EDF               	subwf	indf2,f,c
  6582   003AB8                     
  6583                           ;dc_motor.c: 102:         setMotorPWM(mL);
  6584   003AB8  C014  F00E         	movff	stop@mL,setMotorPWM@m
  6585   003ABC  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  6586   003AC0  EC56  F018         	call	_setMotorPWM	;wreg free
  6587   003AC4                     
  6588                           ;dc_motor.c: 103:         setMotorPWM(mR);
  6589   003AC4  C016  F00E         	movff	stop@mR,setMotorPWM@m
  6590   003AC8  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  6591   003ACC  EC56  F018         	call	_setMotorPWM	;wreg free
  6592   003AD0                     
  6593                           ;dc_motor.c: 105:         _delay((unsigned long)((1)*(64000000/4000.0)));
  6594   003AD0  0E15               	movlw	21
  6595   003AD2  6E18               	movwf	??_stop^0,c
  6596   003AD4  0EC6               	movlw	198
  6597   003AD6                     u4027:
  6598   003AD6  2EE8               	decfsz	wreg,f,c
  6599   003AD8  D7FE               	bra	u4027
  6600   003ADA  2E18               	decfsz	??_stop^0,f,c
  6601   003ADC  D7FC               	bra	u4027
  6602   003ADE  D000               	nop2	
  6603   003AE0                     l2907:
  6604                           
  6605                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
  6606   003AE0  C014  FFD9         	movff	stop@mL,fsr2l
  6607   003AE4  C015  FFDA         	movff	stop@mL+1,fsr2h
  6608   003AE8  50DF               	movf	indf2,w,c
  6609   003AEA  A4D8               	btfss	status,2,c
  6610   003AEC  EF7A  F01D         	goto	u2381
  6611   003AF0  EF7C  F01D         	goto	u2380
  6612   003AF4                     u2381:
  6613   003AF4  EF50  F01D         	goto	l2899
  6614   003AF8                     u2380:
  6615   003AF8  C016  FFD9         	movff	stop@mR,fsr2l
  6616   003AFC  C017  FFDA         	movff	stop@mR+1,fsr2h
  6617   003B00  50DF               	movf	indf2,w,c
  6618   003B02  A4D8               	btfss	status,2,c
  6619   003B04  EF86  F01D         	goto	u2391
  6620   003B08  EF88  F01D         	goto	u2390
  6621   003B0C                     u2391:
  6622   003B0C  EF50  F01D         	goto	l2899
  6623   003B10                     u2390:
  6624   003B10  0012               	return		;funcret
  6625   003B12                     __end_of_stop:
  6626                           	callstack 0
  6627                           
  6628 ;; *************** function _fullSpeedBack *****************
  6629 ;; Defined at:
  6630 ;;		line 164 in file "dc_motor.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6633 ;;		 -> motorL(9), 
  6634 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6635 ;;		 -> motorR(9), 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6647 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6650 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6651 ;;Total ram usage:        5 bytes
  6652 ;; Hardware stack levels used: 1
  6653 ;; Hardware stack levels required when called: 3
  6654 ;; This function calls:
  6655 ;;		_setMotorPWM
  6656 ;; This function is called by:
  6657 ;;		_reverseDetect
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text40
  6662   003904                     __ptext40:
  6663                           	callstack 0
  6664   003904                     _fullSpeedBack:
  6665                           	callstack 25
  6666   003904                     
  6667                           ;dc_motor.c: 164: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 165: {;dc_motor.c: 167:     mL->direction =0;
  6668   003904  EE20 F001          	lfsr	2,1
  6669   003908  5014               	movf	fullSpeedBack@mL^0,w,c
  6670   00390A  26D9               	addwf	fsr2l,f,c
  6671   00390C  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
  6672   00390E  22DA               	addwfc	fsr2h,f,c
  6673   003910  0E00               	movlw	0
  6674   003912  6EDF               	movwf	indf2,c
  6675                           
  6676                           ;dc_motor.c: 168:     mR->direction =0;
  6677   003914  EE20 F001          	lfsr	2,1
  6678   003918  5016               	movf	fullSpeedBack@mR^0,w,c
  6679   00391A  26D9               	addwf	fsr2l,f,c
  6680   00391C  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
  6681   00391E  22DA               	addwfc	fsr2h,f,c
  6682   003920  0E00               	movlw	0
  6683   003922  6EDF               	movwf	indf2,c
  6684                           
  6685                           ;dc_motor.c: 169:     while (mL->power < 50 && mR->power <50){
  6686   003924  EFB4  F01C         	goto	l2949
  6687   003928                     l2941:
  6688                           
  6689                           ;dc_motor.c: 171:         mL->power+=10;
  6690   003928  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  6691   00392C  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  6692   003930  0E0A               	movlw	10
  6693   003932  26DF               	addwf	indf2,f,c
  6694                           
  6695                           ;dc_motor.c: 172:         mR->power+=10;
  6696   003934  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  6697   003938  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  6698   00393C  0E0A               	movlw	10
  6699   00393E  26DF               	addwf	indf2,f,c
  6700   003940                     
  6701                           ;dc_motor.c: 174:         setMotorPWM(mL);
  6702   003940  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
  6703   003944  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  6704   003948  EC56  F018         	call	_setMotorPWM	;wreg free
  6705   00394C                     
  6706                           ;dc_motor.c: 175:         setMotorPWM(mR);
  6707   00394C  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
  6708   003950  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  6709   003954  EC56  F018         	call	_setMotorPWM	;wreg free
  6710   003958                     
  6711                           ;dc_motor.c: 177:         _delay((unsigned long)((1)*(64000000/4000.0)));
  6712   003958  0E15               	movlw	21
  6713   00395A  6E18               	movwf	??_fullSpeedBack^0,c
  6714   00395C  0EC6               	movlw	198
  6715   00395E                     u4037:
  6716   00395E  2EE8               	decfsz	wreg,f,c
  6717   003960  D7FE               	bra	u4037
  6718   003962  2E18               	decfsz	??_fullSpeedBack^0,f,c
  6719   003964  D7FC               	bra	u4037
  6720   003966  D000               	nop2	
  6721   003968                     l2949:
  6722                           
  6723                           ;dc_motor.c: 169:     while (mL->power < 50 && mR->power <50){
  6724   003968  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  6725   00396C  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  6726   003970  0E32               	movlw	50
  6727   003972  60DF               	cpfslt	indf2,c
  6728   003974  EFBE  F01C         	goto	u2441
  6729   003978  EFC0  F01C         	goto	u2440
  6730   00397C                     u2441:
  6731   00397C  EFCC  F01C         	goto	l450
  6732   003980                     u2440:
  6733   003980  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  6734   003984  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  6735   003988  0E31               	movlw	49
  6736   00398A  64DF               	cpfsgt	indf2,c
  6737   00398C  EFCA  F01C         	goto	u2451
  6738   003990  EFCC  F01C         	goto	u2450
  6739   003994                     u2451:
  6740   003994  EF94  F01C         	goto	l2941
  6741   003998                     u2450:
  6742   003998                     l450:
  6743   003998  0012               	return		;funcret
  6744   00399A                     __end_of_fullSpeedBack:
  6745                           	callstack 0
  6746                           
  6747 ;; *************** function _setMotorPWM *****************
  6748 ;; Defined at:
  6749 ;;		line 67 in file "dc_motor.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  m               2   13[COMRAM] PTR struct DC_motor
  6752 ;;		 -> motorR(9), motorL(9), 
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;  negDuty         1   18[COMRAM] unsigned char 
  6755 ;;  posDuty         1   17[COMRAM] unsigned char 
  6756 ;; Return value:  Size  Location     Type
  6757 ;;                  1    wreg      void 
  6758 ;; Registers used:
  6759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6765 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6766 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6767 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6768 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6769 ;;Total ram usage:        6 bytes
  6770 ;; Hardware stack levels used: 1
  6771 ;; Hardware stack levels required when called: 2
  6772 ;; This function calls:
  6773 ;;		___lwdiv
  6774 ;;		___wmul
  6775 ;; This function is called by:
  6776 ;;		_stop
  6777 ;;		_turnLeft
  6778 ;;		_turnRight
  6779 ;;		_fullSpeedAhead
  6780 ;;		_fullSpeedBack
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           	psect	text41
  6785   0030AC                     __ptext41:
  6786                           	callstack 0
  6787   0030AC                     _setMotorPWM:
  6788                           	callstack 27
  6789   0030AC                     
  6790                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
  6791   0030AC  EE20 F002          	lfsr	2,2
  6792   0030B0  500E               	movf	setMotorPWM@m^0,w,c
  6793   0030B2  26D9               	addwf	fsr2l,f,c
  6794   0030B4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  6795   0030B6  22DA               	addwfc	fsr2h,f,c
  6796   0030B8  50DF               	movf	indf2,w,c
  6797   0030BA  B4D8               	btfsc	status,2,c
  6798   0030BC  EF62  F018         	goto	u2241
  6799   0030C0  EF64  F018         	goto	u2240
  6800   0030C4                     u2241:
  6801   0030C4  EF98  F018         	goto	l2805
  6802   0030C8                     u2240:
  6803   0030C8                     
  6804                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  6805   0030C8  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  6806   0030CC  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6807   0030D0  50DF               	movf	indf2,w,c
  6808   0030D2  6E10               	movwf	??_setMotorPWM^0,c
  6809   0030D4  5010               	movf	??_setMotorPWM^0,w,c
  6810   0030D6  6E01               	movwf	___wmul@multiplier^0,c
  6811   0030D8  6A02               	clrf	(___wmul@multiplier+1)^0,c
  6812   0030DA  EE20 F003          	lfsr	2,3
  6813   0030DE  500E               	movf	setMotorPWM@m^0,w,c
  6814   0030E0  26D9               	addwf	fsr2l,f,c
  6815   0030E2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  6816   0030E4  22DA               	addwfc	fsr2h,f,c
  6817   0030E6  CFDE F003          	movff	postinc2,___wmul@multiplicand
  6818   0030EA  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  6819   0030EE  EC85  F020         	call	___wmul	;wreg free
  6820   0030F2  C001  F007         	movff	?___wmul,___lwdiv@dividend
  6821   0030F6  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  6822   0030FA  0E00               	movlw	0
  6823   0030FC  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  6824   0030FE  0E64               	movlw	100
  6825   003100  6E09               	movwf	___lwdiv@divisor^0,c
  6826   003102  EC89  F01D         	call	___lwdiv	;wreg free
  6827   003106  EE20 F003          	lfsr	2,3
  6828   00310A  500E               	movf	setMotorPWM@m^0,w,c
  6829   00310C  26D9               	addwf	fsr2l,f,c
  6830   00310E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  6831   003110  22DA               	addwfc	fsr2h,f,c
  6832   003112  50DF               	movf	indf2,w,c
  6833   003114  6E11               	movwf	(??_setMotorPWM+1)^0,c
  6834   003116  5007               	movf	?___lwdiv^0,w,c
  6835   003118  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  6836   00311A  6E12               	movwf	setMotorPWM@posDuty^0,c
  6837   00311C                     
  6838                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
  6839   00311C  EE20 F003          	lfsr	2,3
  6840   003120  500E               	movf	setMotorPWM@m^0,w,c
  6841   003122  26D9               	addwf	fsr2l,f,c
  6842   003124  500F               	movf	(setMotorPWM@m+1)^0,w,c
  6843   003126  22DA               	addwfc	fsr2h,f,c
  6844   003128  50DF               	movf	indf2,w,c
  6845   00312A  6E13               	movwf	setMotorPWM@negDuty^0,c
  6846                           
  6847                           ;dc_motor.c: 74:     }
  6848   00312C  EFBB  F018         	goto	l2809
  6849   003130                     l2805:
  6850                           
  6851                           ;dc_motor.c: 76:         posDuty=0;
  6852   003130  0E00               	movlw	0
  6853   003132  6E12               	movwf	setMotorPWM@posDuty^0,c
  6854   003134                     
  6855                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  6856   003134  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  6857   003138  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6858   00313C  50DF               	movf	indf2,w,c
  6859   00313E  6E10               	movwf	??_setMotorPWM^0,c
  6860   003140  5010               	movf	??_setMotorPWM^0,w,c
  6861   003142  6E01               	movwf	___wmul@multiplier^0,c
  6862   003144  6A02               	clrf	(___wmul@multiplier+1)^0,c
  6863   003146  EE20 F003          	lfsr	2,3
  6864   00314A  500E               	movf	setMotorPWM@m^0,w,c
  6865   00314C  26D9               	addwf	fsr2l,f,c
  6866   00314E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  6867   003150  22DA               	addwfc	fsr2h,f,c
  6868   003152  CFDE F003          	movff	postinc2,___wmul@multiplicand
  6869   003156  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  6870   00315A  EC85  F020         	call	___wmul	;wreg free
  6871   00315E  C001  F007         	movff	?___wmul,___lwdiv@dividend
  6872   003162  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  6873   003166  0E00               	movlw	0
  6874   003168  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  6875   00316A  0E64               	movlw	100
  6876   00316C  6E09               	movwf	___lwdiv@divisor^0,c
  6877   00316E  EC89  F01D         	call	___lwdiv	;wreg free
  6878   003172  5007               	movf	?___lwdiv^0,w,c
  6879   003174  6E13               	movwf	setMotorPWM@negDuty^0,c
  6880   003176                     l2809:
  6881                           
  6882                           ;dc_motor.c: 80:     if (m->direction) {
  6883   003176  EE20 F001          	lfsr	2,1
  6884   00317A  500E               	movf	setMotorPWM@m^0,w,c
  6885   00317C  26D9               	addwf	fsr2l,f,c
  6886   00317E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  6887   003180  22DA               	addwfc	fsr2h,f,c
  6888   003182  50DF               	movf	indf2,w,c
  6889   003184  B4D8               	btfsc	status,2,c
  6890   003186  EFC7  F018         	goto	u2251
  6891   00318A  EFC9  F018         	goto	u2250
  6892   00318E                     u2251:
  6893   00318E  EFEB  F018         	goto	l2813
  6894   003192                     u2250:
  6895   003192                     
  6896                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=negDuty;
  6897   003192  EE20 F005          	lfsr	2,5
  6898   003196  500E               	movf	setMotorPWM@m^0,w,c
  6899   003198  26D9               	addwf	fsr2l,f,c
  6900   00319A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  6901   00319C  22DA               	addwfc	fsr2h,f,c
  6902   00319E  CFDE F010          	movff	postinc2,??_setMotorPWM
  6903   0031A2  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  6904   0031A6  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  6905   0031AA  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6906   0031AE  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  6907                           
  6908                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=posDuty;
  6909   0031B2  EE20 F007          	lfsr	2,7
  6910   0031B6  500E               	movf	setMotorPWM@m^0,w,c
  6911   0031B8  26D9               	addwf	fsr2l,f,c
  6912   0031BA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  6913   0031BC  22DA               	addwfc	fsr2h,f,c
  6914   0031BE  CFDE F010          	movff	postinc2,??_setMotorPWM
  6915   0031C2  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  6916   0031C6  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  6917   0031CA  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6918   0031CE  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  6919                           
  6920                           ;dc_motor.c: 85:     } else {
  6921   0031D2  EF0B  F019         	goto	l412
  6922   0031D6                     l2813:
  6923                           
  6924                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=posDuty;
  6925   0031D6  EE20 F005          	lfsr	2,5
  6926   0031DA  500E               	movf	setMotorPWM@m^0,w,c
  6927   0031DC  26D9               	addwf	fsr2l,f,c
  6928   0031DE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  6929   0031E0  22DA               	addwfc	fsr2h,f,c
  6930   0031E2  CFDE F010          	movff	postinc2,??_setMotorPWM
  6931   0031E6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  6932   0031EA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  6933   0031EE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6934   0031F2  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  6935                           
  6936                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=negDuty;
  6937   0031F6  EE20 F007          	lfsr	2,7
  6938   0031FA  500E               	movf	setMotorPWM@m^0,w,c
  6939   0031FC  26D9               	addwf	fsr2l,f,c
  6940   0031FE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  6941   003200  22DA               	addwfc	fsr2h,f,c
  6942   003202  CFDE F010          	movff	postinc2,??_setMotorPWM
  6943   003206  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  6944   00320A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  6945   00320E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6946   003212  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  6947   003216                     l412:
  6948   003216  0012               	return		;funcret
  6949   003218                     __end_of_setMotorPWM:
  6950                           	callstack 0
  6951                           
  6952 ;; *************** function ___wmul *****************
  6953 ;; Defined at:
  6954 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;  multiplier      2    0[COMRAM] unsigned int 
  6957 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;  product         2    4[COMRAM] unsigned int 
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  2    0[COMRAM] unsigned int 
  6962 ;; Registers used:
  6963 ;;		wreg, status,2, status,0, prodl, prodh
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6969 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6970 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6972 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6973 ;;Total ram usage:        6 bytes
  6974 ;; Hardware stack levels used: 1
  6975 ;; Hardware stack levels required when called: 1
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_setMotorPWM
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           	psect	text42
  6984   00410A                     __ptext42:
  6985                           	callstack 0
  6986   00410A                     ___wmul:
  6987                           	callstack 27
  6988   00410A  5001               	movf	___wmul@multiplier^0,w,c
  6989   00410C  0203               	mulwf	___wmul@multiplicand^0,c
  6990   00410E  CFF3 F005          	movff	prodl,___wmul@product
  6991   004112  CFF4 F006          	movff	prodh,___wmul@product+1
  6992   004116  5001               	movf	___wmul@multiplier^0,w,c
  6993   004118  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6994   00411A  50F3               	movf	243,w,c
  6995   00411C  2606               	addwf	(___wmul@product+1)^0,f,c
  6996   00411E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6997   004120  0203               	mulwf	___wmul@multiplicand^0,c
  6998   004122  50F3               	movf	243,w,c
  6999   004124  2606               	addwf	(___wmul@product+1)^0,f,c
  7000   004126  C005  F001         	movff	___wmul@product,?___wmul
  7001   00412A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7002   00412E  0012               	return		;funcret
  7003   004130                     __end_of___wmul:
  7004                           	callstack 0
  7005                           
  7006 ;; *************** function ___lwdiv *****************
  7007 ;; Defined at:
  7008 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;  dividend        2    6[COMRAM] unsigned int 
  7011 ;;  divisor         2    8[COMRAM] unsigned int 
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;  quotient        2   10[COMRAM] unsigned int 
  7014 ;;  counter         1   12[COMRAM] unsigned char 
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  2    6[COMRAM] unsigned int 
  7017 ;; Registers used:
  7018 ;;		wreg, status,2, status,0
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7024 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7025 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7027 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7028 ;;Total ram usage:        7 bytes
  7029 ;; Hardware stack levels used: 1
  7030 ;; Hardware stack levels required when called: 1
  7031 ;; This function calls:
  7032 ;;		Nothing
  7033 ;; This function is called by:
  7034 ;;		_setMotorPWM
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           	psect	text43
  7039   003B12                     __ptext43:
  7040                           	callstack 0
  7041   003B12                     ___lwdiv:
  7042                           	callstack 27
  7043   003B12  0E00               	movlw	0
  7044   003B14  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  7045   003B16  0E00               	movlw	0
  7046   003B18  6E0B               	movwf	___lwdiv@quotient^0,c
  7047   003B1A  5009               	movf	___lwdiv@divisor^0,w,c
  7048   003B1C  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7049   003B1E  B4D8               	btfsc	status,2,c
  7050   003B20  EF94  F01D         	goto	u2161
  7051   003B24  EF96  F01D         	goto	u2160
  7052   003B28                     u2161:
  7053   003B28  EFBE  F01D         	goto	l956
  7054   003B2C                     u2160:
  7055   003B2C  0E01               	movlw	1
  7056   003B2E  6E0D               	movwf	___lwdiv@counter^0,c
  7057   003B30  EF9E  F01D         	goto	l2763
  7058   003B34                     l2761:
  7059   003B34  90D8               	bcf	status,0,c
  7060   003B36  3609               	rlcf	___lwdiv@divisor^0,f,c
  7061   003B38  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7062   003B3A  2A0D               	incf	___lwdiv@counter^0,f,c
  7063   003B3C                     l2763:
  7064   003B3C  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  7065   003B3E  EFA3  F01D         	goto	u2171
  7066   003B42  EFA5  F01D         	goto	u2170
  7067   003B46                     u2171:
  7068   003B46  EF9A  F01D         	goto	l2761
  7069   003B4A                     u2170:
  7070   003B4A                     l2765:
  7071   003B4A  90D8               	bcf	status,0,c
  7072   003B4C  360B               	rlcf	___lwdiv@quotient^0,f,c
  7073   003B4E  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7074   003B50  5009               	movf	___lwdiv@divisor^0,w,c
  7075   003B52  5C07               	subwf	___lwdiv@dividend^0,w,c
  7076   003B54  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  7077   003B56  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7078   003B58  A0D8               	btfss	status,0,c
  7079   003B5A  EFB1  F01D         	goto	u2181
  7080   003B5E  EFB3  F01D         	goto	u2180
  7081   003B62                     u2181:
  7082   003B62  EFB8  F01D         	goto	l2773
  7083   003B66                     u2180:
  7084   003B66  5009               	movf	___lwdiv@divisor^0,w,c
  7085   003B68  5E07               	subwf	___lwdiv@dividend^0,f,c
  7086   003B6A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  7087   003B6C  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7088   003B6E  800B               	bsf	___lwdiv@quotient^0,0,c
  7089   003B70                     l2773:
  7090   003B70  90D8               	bcf	status,0,c
  7091   003B72  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7092   003B74  3209               	rrcf	___lwdiv@divisor^0,f,c
  7093   003B76  2E0D               	decfsz	___lwdiv@counter^0,f,c
  7094   003B78  EFA5  F01D         	goto	l2765
  7095   003B7C                     l956:
  7096   003B7C  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  7097   003B80  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7098   003B84  0012               	return		;funcret
  7099   003B86                     __end_of___lwdiv:
  7100                           	callstack 0
  7101                           
  7102 ;; *************** function ___xxtofl *****************
  7103 ;; Defined at:
  7104 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  sign            1    wreg     unsigned char 
  7107 ;;  val             4    0[COMRAM] long 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  sign            1    8[COMRAM] unsigned char 
  7110 ;;  arg             4   10[COMRAM] unsigned long 
  7111 ;;  exp             1    9[COMRAM] unsigned char 
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  4    0[COMRAM] unsigned char 
  7114 ;; Registers used:
  7115 ;;		wreg, status,2, status,0
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7122 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7123 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7124 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7125 ;;Total ram usage:       14 bytes
  7126 ;; Hardware stack levels used: 1
  7127 ;; Hardware stack levels required when called: 1
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_colour_rel
  7132 ;;		_Colour_decider
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           	psect	text44
  7137   002BE2                     __ptext44:
  7138                           	callstack 0
  7139   002BE2                     ___xxtofl:
  7140                           	callstack 28
  7141                           
  7142                           ;incstack = 0
  7143                           ;___xxtofl@sign stored from wreg
  7144   002BE2  6E09               	movwf	___xxtofl@sign^0,c
  7145   002BE4  5009               	movf	___xxtofl@sign^0,w,c
  7146   002BE6  B4D8               	btfsc	status,2,c
  7147   002BE8  EFF8  F015         	goto	u3391
  7148   002BEC  EFFA  F015         	goto	u3390
  7149   002BF0                     u3391:
  7150   002BF0  EF1C  F016         	goto	l1120
  7151   002BF4                     u3390:
  7152   002BF4  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7153   002BF6  EF01  F016         	goto	u3400
  7154   002BFA  EFFF  F015         	goto	u3401
  7155   002BFE                     u3401:
  7156   002BFE  EF1C  F016         	goto	l1120
  7157   002C02                     u3400:
  7158   002C02  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7159   002C06  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7160   002C0A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7161   002C0E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7162   002C12  1E05               	comf	??___xxtofl^0,f,c
  7163   002C14  1E06               	comf	(??___xxtofl+1)^0,f,c
  7164   002C16  1E07               	comf	(??___xxtofl+2)^0,f,c
  7165   002C18  1E08               	comf	(??___xxtofl+3)^0,f,c
  7166   002C1A  2A05               	incf	??___xxtofl^0,f,c
  7167   002C1C  0E00               	movlw	0
  7168   002C1E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7169   002C20  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7170   002C22  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7171   002C24  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7172   002C28  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7173   002C2C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7174   002C30  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7175   002C34  EF24  F016         	goto	l3563
  7176   002C38                     l1120:
  7177   002C38  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7178   002C3C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7179   002C40  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7180   002C44  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7181   002C48                     l3563:
  7182   002C48  5001               	movf	___xxtofl@val^0,w,c
  7183   002C4A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7184   002C4C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7185   002C4E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7186   002C50  A4D8               	btfss	status,2,c
  7187   002C52  EF2D  F016         	goto	u3411
  7188   002C56  EF2F  F016         	goto	u3410
  7189   002C5A                     u3411:
  7190   002C5A  EF39  F016         	goto	l3569
  7191   002C5E                     u3410:
  7192   002C5E  0E00               	movlw	0
  7193   002C60  6E01               	movwf	?___xxtofl^0,c
  7194   002C62  0E00               	movlw	0
  7195   002C64  6E02               	movwf	(?___xxtofl+1)^0,c
  7196   002C66  0E00               	movlw	0
  7197   002C68  6E03               	movwf	(?___xxtofl+2)^0,c
  7198   002C6A  0E00               	movlw	0
  7199   002C6C  6E04               	movwf	(?___xxtofl+3)^0,c
  7200   002C6E  EFCA  F016         	goto	l1123
  7201   002C72                     l3569:
  7202   002C72  0E96               	movlw	150
  7203   002C74  6E0A               	movwf	___xxtofl@exp^0,c
  7204   002C76  EF43  F016         	goto	l3573
  7205   002C7A                     l3571:
  7206   002C7A  2A0A               	incf	___xxtofl@exp^0,f,c
  7207   002C7C  90D8               	bcf	status,0,c
  7208   002C7E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7209   002C80  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7210   002C82  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7211   002C84  320B               	rrcf	___xxtofl@arg^0,f,c
  7212   002C86                     l3573:
  7213   002C86  0E00               	movlw	0
  7214   002C88  140B               	andwf	___xxtofl@arg^0,w,c
  7215   002C8A  6E05               	movwf	??___xxtofl^0,c
  7216   002C8C  0E00               	movlw	0
  7217   002C8E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7218   002C90  6E06               	movwf	(??___xxtofl+1)^0,c
  7219   002C92  0E00               	movlw	0
  7220   002C94  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7221   002C96  6E07               	movwf	(??___xxtofl+2)^0,c
  7222   002C98  0EFE               	movlw	254
  7223   002C9A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7224   002C9C  6E08               	movwf	(??___xxtofl+3)^0,c
  7225   002C9E  5005               	movf	??___xxtofl^0,w,c
  7226   002CA0  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7227   002CA2  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7228   002CA4  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7229   002CA6  A4D8               	btfss	status,2,c
  7230   002CA8  EF58  F016         	goto	u3421
  7231   002CAC  EF5A  F016         	goto	u3420
  7232   002CB0                     u3421:
  7233   002CB0  EF3D  F016         	goto	l3571
  7234   002CB4                     u3420:
  7235   002CB4  EF68  F016         	goto	l1127
  7236   002CB8                     l3575:
  7237   002CB8  2A0A               	incf	___xxtofl@exp^0,f,c
  7238   002CBA  0E01               	movlw	1
  7239   002CBC  260B               	addwf	___xxtofl@arg^0,f,c
  7240   002CBE  0E00               	movlw	0
  7241   002CC0  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7242   002CC2  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7243   002CC4  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7244   002CC6  90D8               	bcf	status,0,c
  7245   002CC8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7246   002CCA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7247   002CCC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7248   002CCE  320B               	rrcf	___xxtofl@arg^0,f,c
  7249   002CD0                     l1127:
  7250   002CD0  0E00               	movlw	0
  7251   002CD2  140B               	andwf	___xxtofl@arg^0,w,c
  7252   002CD4  6E05               	movwf	??___xxtofl^0,c
  7253   002CD6  0E00               	movlw	0
  7254   002CD8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7255   002CDA  6E06               	movwf	(??___xxtofl+1)^0,c
  7256   002CDC  0E00               	movlw	0
  7257   002CDE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7258   002CE0  6E07               	movwf	(??___xxtofl+2)^0,c
  7259   002CE2  0EFF               	movlw	255
  7260   002CE4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7261   002CE6  6E08               	movwf	(??___xxtofl+3)^0,c
  7262   002CE8  5005               	movf	??___xxtofl^0,w,c
  7263   002CEA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7264   002CEC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7265   002CEE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7266   002CF0  A4D8               	btfss	status,2,c
  7267   002CF2  EF7D  F016         	goto	u3431
  7268   002CF6  EF7F  F016         	goto	u3430
  7269   002CFA                     u3431:
  7270   002CFA  EF5C  F016         	goto	l3575
  7271   002CFE                     u3430:
  7272   002CFE  EF87  F016         	goto	l3583
  7273   002D02                     l3581:
  7274   002D02  060A               	decf	___xxtofl@exp^0,f,c
  7275   002D04  90D8               	bcf	status,0,c
  7276   002D06  360B               	rlcf	___xxtofl@arg^0,f,c
  7277   002D08  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7278   002D0A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7279   002D0C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7280   002D0E                     l3583:
  7281   002D0E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7282   002D10  EF8C  F016         	goto	u3441
  7283   002D14  EF8E  F016         	goto	u3440
  7284   002D18                     u3441:
  7285   002D18  EF96  F016         	goto	l1134
  7286   002D1C                     u3440:
  7287   002D1C  0E02               	movlw	2
  7288   002D1E  600A               	cpfslt	___xxtofl@exp^0,c
  7289   002D20  EF94  F016         	goto	u3451
  7290   002D24  EF96  F016         	goto	u3450
  7291   002D28                     u3451:
  7292   002D28  EF81  F016         	goto	l3581
  7293   002D2C                     u3450:
  7294   002D2C                     l1134:
  7295   002D2C  B00A               	btfsc	___xxtofl@exp^0,0,c
  7296   002D2E  EF9B  F016         	goto	u3461
  7297   002D32  EF9D  F016         	goto	u3460
  7298   002D36                     u3461:
  7299   002D36  EF9E  F016         	goto	l3589
  7300   002D3A                     u3460:
  7301   002D3A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7302   002D3C                     l3589:
  7303   002D3C  90D8               	bcf	status,0,c
  7304   002D3E  320A               	rrcf	___xxtofl@exp^0,f,c
  7305   002D40  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7306   002D44  6A06               	clrf	(??___xxtofl+1)^0,c
  7307   002D46  6A07               	clrf	(??___xxtofl+2)^0,c
  7308   002D48  6A08               	clrf	(??___xxtofl+3)^0,c
  7309   002D4A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7310   002D4E  6A07               	clrf	(??___xxtofl+2)^0,c
  7311   002D50  6A06               	clrf	(??___xxtofl+1)^0,c
  7312   002D52  6A05               	clrf	??___xxtofl^0,c
  7313   002D54  5005               	movf	??___xxtofl^0,w,c
  7314   002D56  120B               	iorwf	___xxtofl@arg^0,f,c
  7315   002D58  5006               	movf	(??___xxtofl+1)^0,w,c
  7316   002D5A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7317   002D5C  5007               	movf	(??___xxtofl+2)^0,w,c
  7318   002D5E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7319   002D60  5008               	movf	(??___xxtofl+3)^0,w,c
  7320   002D62  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7321   002D64  5009               	movf	___xxtofl@sign^0,w,c
  7322   002D66  B4D8               	btfsc	status,2,c
  7323   002D68  EFB8  F016         	goto	u3471
  7324   002D6C  EFBA  F016         	goto	u3470
  7325   002D70                     u3471:
  7326   002D70  EFC2  F016         	goto	l3599
  7327   002D74                     u3470:
  7328   002D74  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7329   002D76  EFC1  F016         	goto	u3480
  7330   002D7A  EFBF  F016         	goto	u3481
  7331   002D7E                     u3481:
  7332   002D7E  EFC2  F016         	goto	l3599
  7333   002D82                     u3480:
  7334   002D82  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7335   002D84                     l3599:
  7336   002D84  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7337   002D88  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7338   002D8C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7339   002D90  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7340   002D94                     l1123:
  7341   002D94  0012               	return		;funcret
  7342   002D96                     __end_of___xxtofl:
  7343                           	callstack 0
  7344                           
  7345 ;; *************** function ___flsub *****************
  7346 ;; Defined at:
  7347 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;  b               4   16[COMRAM] unsigned char 
  7350 ;;  a               4   20[COMRAM] unsigned char 
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;		None
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  4   16[COMRAM] unsigned char 
  7355 ;; Registers used:
  7356 ;;		wreg, status,2, status,0, cstack
  7357 ;; Tracked objects:
  7358 ;;		On entry : 0/0
  7359 ;;		On exit  : 0/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7362 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7365 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7366 ;;Total ram usage:        8 bytes
  7367 ;; Hardware stack levels used: 1
  7368 ;; Hardware stack levels required when called: 2
  7369 ;; This function calls:
  7370 ;;		___fladd
  7371 ;; This function is called by:
  7372 ;;		_Colour_decider
  7373 ;; This function uses a non-reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text45
  7377   003F7C                     __ptext45:
  7378                           	callstack 0
  7379   003F7C                     ___flsub:
  7380                           	callstack 27
  7381   003F7C  0E00               	movlw	0
  7382   003F7E  1A15               	xorwf	___flsub@a^0,f,c
  7383   003F80  0E00               	movlw	0
  7384   003F82  1A16               	xorwf	(___flsub@a+1)^0,f,c
  7385   003F84  0E00               	movlw	0
  7386   003F86  1A17               	xorwf	(___flsub@a+2)^0,f,c
  7387   003F88  0E80               	movlw	128
  7388   003F8A  1A18               	xorwf	(___flsub@a+3)^0,f,c
  7389   003F8C  C011  F001         	movff	___flsub@b,___fladd@b
  7390   003F90  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  7391   003F94  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  7392   003F98  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  7393   003F9C  C015  F005         	movff	___flsub@a,___fladd@a
  7394   003FA0  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  7395   003FA4  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  7396   003FA8  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  7397   003FAC  ECD9  F00C         	call	___fladd	;wreg free
  7398   003FB0  C001  F011         	movff	?___fladd,?___flsub
  7399   003FB4  C002  F012         	movff	?___fladd+1,?___flsub+1
  7400   003FB8  C003  F013         	movff	?___fladd+2,?___flsub+2
  7401   003FBC  C004  F014         	movff	?___fladd+3,?___flsub+3
  7402   003FC0  0012               	return		;funcret
  7403   003FC2                     __end_of___flsub:
  7404                           	callstack 0
  7405                           
  7406 ;; *************** function ___fladd *****************
  7407 ;; Defined at:
  7408 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;  b               4    0[COMRAM] unsigned char 
  7411 ;;  a               4    4[COMRAM] unsigned char 
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;  grs             1   15[COMRAM] unsigned char 
  7414 ;;  bexp            1   14[COMRAM] unsigned char 
  7415 ;;  aexp            1   13[COMRAM] unsigned char 
  7416 ;;  signs           1   12[COMRAM] unsigned char 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  4    0[COMRAM] unsigned char 
  7419 ;; Registers used:
  7420 ;;		wreg, status,2, status,0
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7426 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7427 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7428 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7429 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7430 ;;Total ram usage:       16 bytes
  7431 ;; Hardware stack levels used: 1
  7432 ;; Hardware stack levels required when called: 1
  7433 ;; This function calls:
  7434 ;;		Nothing
  7435 ;; This function is called by:
  7436 ;;		_colour_rel
  7437 ;;		_Colour_decider
  7438 ;;		___flsub
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text46
  7443   0019B2                     __ptext46:
  7444                           	callstack 0
  7445   0019B2                     ___fladd:
  7446                           	callstack 28
  7447   0019B2  5004               	movf	(___fladd@b+3)^0,w,c
  7448   0019B4  0B80               	andlw	128
  7449   0019B6  6E0D               	movwf	___fladd@signs^0,c
  7450   0019B8  5004               	movf	(___fladd@b+3)^0,w,c
  7451   0019BA  2404               	addwf	(___fladd@b+3)^0,w,c
  7452   0019BC  6E0F               	movwf	___fladd@bexp^0,c
  7453   0019BE  AE03               	btfss	(___fladd@b+2)^0,7,c
  7454   0019C0  EFE4  F00C         	goto	u2461
  7455   0019C4  EFE6  F00C         	goto	u2460
  7456   0019C8                     u2461:
  7457   0019C8  EFE7  F00C         	goto	l2959
  7458   0019CC                     u2460:
  7459   0019CC  800F               	bsf	___fladd@bexp^0,0,c
  7460   0019CE                     l2959:
  7461   0019CE  500F               	movf	___fladd@bexp^0,w,c
  7462   0019D0  B4D8               	btfsc	status,2,c
  7463   0019D2  EFED  F00C         	goto	u2471
  7464   0019D6  EFEF  F00C         	goto	u2470
  7465   0019DA                     u2471:
  7466   0019DA  EF04  F00D         	goto	l2969
  7467   0019DE                     u2470:
  7468   0019DE  280F               	incf	___fladd@bexp^0,w,c
  7469   0019E0  A4D8               	btfss	status,2,c
  7470   0019E2  EFF5  F00C         	goto	u2481
  7471   0019E6  EFF7  F00C         	goto	u2480
  7472   0019EA                     u2481:
  7473   0019EA  EFFF  F00C         	goto	l2965
  7474   0019EE                     u2480:
  7475   0019EE  0E00               	movlw	0
  7476   0019F0  6E01               	movwf	___fladd@b^0,c
  7477   0019F2  0E00               	movlw	0
  7478   0019F4  6E02               	movwf	(___fladd@b+1)^0,c
  7479   0019F6  0E00               	movlw	0
  7480   0019F8  6E03               	movwf	(___fladd@b+2)^0,c
  7481   0019FA  0E00               	movlw	0
  7482   0019FC  6E04               	movwf	(___fladd@b+3)^0,c
  7483   0019FE                     l2965:
  7484   0019FE  8E03               	bsf	(___fladd@b+2)^0,7,c
  7485   001A00  0E00               	movlw	0
  7486   001A02  6E04               	movwf	(___fladd@b+3)^0,c
  7487   001A04  EF0C  F00D         	goto	l2971
  7488   001A08                     l2969:
  7489   001A08  0E00               	movlw	0
  7490   001A0A  6E01               	movwf	___fladd@b^0,c
  7491   001A0C  0E00               	movlw	0
  7492   001A0E  6E02               	movwf	(___fladd@b+1)^0,c
  7493   001A10  0E00               	movlw	0
  7494   001A12  6E03               	movwf	(___fladd@b+2)^0,c
  7495   001A14  0E00               	movlw	0
  7496   001A16  6E04               	movwf	(___fladd@b+3)^0,c
  7497   001A18                     l2971:
  7498   001A18  5008               	movf	(___fladd@a+3)^0,w,c
  7499   001A1A  0B80               	andlw	128
  7500   001A1C  6E0E               	movwf	___fladd@aexp^0,c
  7501   001A1E  500D               	movf	___fladd@signs^0,w,c
  7502   001A20  180E               	xorwf	___fladd@aexp^0,w,c
  7503   001A22  B4D8               	btfsc	status,2,c
  7504   001A24  EF16  F00D         	goto	u2491
  7505   001A28  EF18  F00D         	goto	u2490
  7506   001A2C                     u2491:
  7507   001A2C  EF19  F00D         	goto	l2977
  7508   001A30                     u2490:
  7509   001A30  8C0D               	bsf	___fladd@signs^0,6,c
  7510   001A32                     l2977:
  7511   001A32  5008               	movf	(___fladd@a+3)^0,w,c
  7512   001A34  2408               	addwf	(___fladd@a+3)^0,w,c
  7513   001A36  6E0E               	movwf	___fladd@aexp^0,c
  7514   001A38  AE07               	btfss	(___fladd@a+2)^0,7,c
  7515   001A3A  EF21  F00D         	goto	u2501
  7516   001A3E  EF23  F00D         	goto	u2500
  7517   001A42                     u2501:
  7518   001A42  EF24  F00D         	goto	l2983
  7519   001A46                     u2500:
  7520   001A46  800E               	bsf	___fladd@aexp^0,0,c
  7521   001A48                     l2983:
  7522   001A48  500E               	movf	___fladd@aexp^0,w,c
  7523   001A4A  B4D8               	btfsc	status,2,c
  7524   001A4C  EF2A  F00D         	goto	u2511
  7525   001A50  EF2C  F00D         	goto	u2510
  7526   001A54                     u2511:
  7527   001A54  EF41  F00D         	goto	l2993
  7528   001A58                     u2510:
  7529   001A58  280E               	incf	___fladd@aexp^0,w,c
  7530   001A5A  A4D8               	btfss	status,2,c
  7531   001A5C  EF32  F00D         	goto	u2521
  7532   001A60  EF34  F00D         	goto	u2520
  7533   001A64                     u2521:
  7534   001A64  EF3C  F00D         	goto	l2989
  7535   001A68                     u2520:
  7536   001A68  0E00               	movlw	0
  7537   001A6A  6E05               	movwf	___fladd@a^0,c
  7538   001A6C  0E00               	movlw	0
  7539   001A6E  6E06               	movwf	(___fladd@a+1)^0,c
  7540   001A70  0E00               	movlw	0
  7541   001A72  6E07               	movwf	(___fladd@a+2)^0,c
  7542   001A74  0E00               	movlw	0
  7543   001A76  6E08               	movwf	(___fladd@a+3)^0,c
  7544   001A78                     l2989:
  7545   001A78  8E07               	bsf	(___fladd@a+2)^0,7,c
  7546   001A7A  0E00               	movlw	0
  7547   001A7C  6E08               	movwf	(___fladd@a+3)^0,c
  7548   001A7E  EF49  F00D         	goto	l2995
  7549   001A82                     l2993:
  7550   001A82  0E00               	movlw	0
  7551   001A84  6E05               	movwf	___fladd@a^0,c
  7552   001A86  0E00               	movlw	0
  7553   001A88  6E06               	movwf	(___fladd@a+1)^0,c
  7554   001A8A  0E00               	movlw	0
  7555   001A8C  6E07               	movwf	(___fladd@a+2)^0,c
  7556   001A8E  0E00               	movlw	0
  7557   001A90  6E08               	movwf	(___fladd@a+3)^0,c
  7558   001A92                     l2995:
  7559   001A92  500F               	movf	___fladd@bexp^0,w,c
  7560   001A94  5C0E               	subwf	___fladd@aexp^0,w,c
  7561   001A96  B0D8               	btfsc	status,0,c
  7562   001A98  EF50  F00D         	goto	u2531
  7563   001A9C  EF52  F00D         	goto	u2530
  7564   001AA0                     u2531:
  7565   001AA0  EF79  F00D         	goto	l3031
  7566   001AA4                     u2530:
  7567   001AA4  AC0D               	btfss	___fladd@signs^0,6,c
  7568   001AA6  EF57  F00D         	goto	u2541
  7569   001AAA  EF59  F00D         	goto	u2540
  7570   001AAE                     u2541:
  7571   001AAE  EF5B  F00D         	goto	l3001
  7572   001AB2                     u2540:
  7573   001AB2  0E80               	movlw	128
  7574   001AB4  1A0D               	xorwf	___fladd@signs^0,f,c
  7575   001AB6                     l3001:
  7576   001AB6  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7577   001ABA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7578   001ABE  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7579   001AC2  C001  F010         	movff	___fladd@b,___fladd@grs
  7580   001AC6  C005  F001         	movff	___fladd@a,___fladd@b
  7581   001ACA  C010  F005         	movff	___fladd@grs,___fladd@a
  7582   001ACE  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7583   001AD2  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7584   001AD6  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7585   001ADA  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7586   001ADE  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7587   001AE2  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7588   001AE6  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7589   001AEA  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7590   001AEE  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7591   001AF2                     l3031:
  7592   001AF2  0E00               	movlw	0
  7593   001AF4  6E10               	movwf	___fladd@grs^0,c
  7594   001AF6  500F               	movf	___fladd@bexp^0,w,c
  7595   001AF8  C00E  F009         	movff	___fladd@aexp,??___fladd
  7596   001AFC  6A0A               	clrf	(??___fladd+1)^0,c
  7597   001AFE  5E09               	subwf	??___fladd^0,f,c
  7598   001B00  0E00               	movlw	0
  7599   001B02  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7600   001B04  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7601   001B06  EF8E  F00D         	goto	u2551
  7602   001B0A  500A               	movf	(??___fladd+1)^0,w,c
  7603   001B0C  E109               	bnz	u2550
  7604   001B0E  0E1A               	movlw	26
  7605   001B10  5C09               	subwf	??___fladd^0,w,c
  7606   001B12  A0D8               	btfss	status,0,c
  7607   001B14  EF8E  F00D         	goto	u2551
  7608   001B18  EF90  F00D         	goto	u2550
  7609   001B1C                     u2551:
  7610   001B1C  EFC7  F00D         	goto	l994
  7611   001B20                     u2550:
  7612   001B20  5001               	movf	___fladd@b^0,w,c
  7613   001B22  1002               	iorwf	(___fladd@b+1)^0,w,c
  7614   001B24  1003               	iorwf	(___fladd@b+2)^0,w,c
  7615   001B26  1004               	iorwf	(___fladd@b+3)^0,w,c
  7616   001B28  A4D8               	btfss	status,2,c
  7617   001B2A  EF99  F00D         	goto	u2561
  7618   001B2E  EF9C  F00D         	goto	u2560
  7619   001B32                     u2561:
  7620   001B32  0E01               	movlw	1
  7621   001B34  EF9D  F00D         	goto	u2570
  7622   001B38                     u2560:
  7623   001B38  0E00               	movlw	0
  7624   001B3A                     u2570:
  7625   001B3A  6E10               	movwf	___fladd@grs^0,c
  7626   001B3C  0E00               	movlw	0
  7627   001B3E  6E01               	movwf	___fladd@b^0,c
  7628   001B40  0E00               	movlw	0
  7629   001B42  6E02               	movwf	(___fladd@b+1)^0,c
  7630   001B44  0E00               	movlw	0
  7631   001B46  6E03               	movwf	(___fladd@b+2)^0,c
  7632   001B48  0E00               	movlw	0
  7633   001B4A  6E04               	movwf	(___fladd@b+3)^0,c
  7634   001B4C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7635   001B50  EFD0  F00D         	goto	l993
  7636   001B54                     l995:
  7637   001B54  A010               	btfss	___fladd@grs^0,0,c
  7638   001B56  EFAF  F00D         	goto	u2581
  7639   001B5A  EFB1  F00D         	goto	u2580
  7640   001B5E                     u2581:
  7641   001B5E  EFB7  F00D         	goto	l3043
  7642   001B62                     u2580:
  7643   001B62  90D8               	bcf	status,0,c
  7644   001B64  3010               	rrcf	___fladd@grs^0,w,c
  7645   001B66  0901               	iorlw	1
  7646   001B68  6E10               	movwf	___fladd@grs^0,c
  7647   001B6A  EFB9  F00D         	goto	l3045
  7648   001B6E                     l3043:
  7649   001B6E  90D8               	bcf	status,0,c
  7650   001B70  3210               	rrcf	___fladd@grs^0,f,c
  7651   001B72                     l3045:
  7652   001B72  A001               	btfss	___fladd@b^0,0,c
  7653   001B74  EFBE  F00D         	goto	u2591
  7654   001B78  EFC0  F00D         	goto	u2590
  7655   001B7C                     u2591:
  7656   001B7C  EFC1  F00D         	goto	l3049
  7657   001B80                     u2590:
  7658   001B80  8E10               	bsf	___fladd@grs^0,7,c
  7659   001B82                     l3049:
  7660   001B82  3404               	rlcf	(___fladd@b+3)^0,w,c
  7661   001B84  3204               	rrcf	(___fladd@b+3)^0,f,c
  7662   001B86  3203               	rrcf	(___fladd@b+2)^0,f,c
  7663   001B88  3202               	rrcf	(___fladd@b+1)^0,f,c
  7664   001B8A  3201               	rrcf	___fladd@b^0,f,c
  7665   001B8C  2A0F               	incf	___fladd@bexp^0,f,c
  7666   001B8E                     l994:
  7667   001B8E  500E               	movf	___fladd@aexp^0,w,c
  7668   001B90  5C0F               	subwf	___fladd@bexp^0,w,c
  7669   001B92  A0D8               	btfss	status,0,c
  7670   001B94  EFCE  F00D         	goto	u2601
  7671   001B98  EFD0  F00D         	goto	u2600
  7672   001B9C                     u2601:
  7673   001B9C  EFAA  F00D         	goto	l995
  7674   001BA0                     u2600:
  7675   001BA0                     l993:
  7676   001BA0  BC0D               	btfsc	___fladd@signs^0,6,c
  7677   001BA2  EFD5  F00D         	goto	u2611
  7678   001BA6  EFD7  F00D         	goto	u2610
  7679   001BAA                     u2611:
  7680   001BAA  EF17  F00E         	goto	l3077
  7681   001BAE                     u2610:
  7682   001BAE  500F               	movf	___fladd@bexp^0,w,c
  7683   001BB0  A4D8               	btfss	status,2,c
  7684   001BB2  EFDD  F00D         	goto	u2621
  7685   001BB6  EFDF  F00D         	goto	u2620
  7686   001BBA                     u2621:
  7687   001BBA  EFE9  F00D         	goto	l3059
  7688   001BBE                     u2620:
  7689   001BBE  0E00               	movlw	0
  7690   001BC0  6E01               	movwf	?___fladd^0,c
  7691   001BC2  0E00               	movlw	0
  7692   001BC4  6E02               	movwf	(?___fladd+1)^0,c
  7693   001BC6  0E00               	movlw	0
  7694   001BC8  6E03               	movwf	(?___fladd+2)^0,c
  7695   001BCA  0E00               	movlw	0
  7696   001BCC  6E04               	movwf	(?___fladd+3)^0,c
  7697   001BCE  EF38  F00F         	goto	l1002
  7698   001BD2                     l3059:
  7699   001BD2  5005               	movf	___fladd@a^0,w,c
  7700   001BD4  2601               	addwf	___fladd@b^0,f,c
  7701   001BD6  5006               	movf	(___fladd@a+1)^0,w,c
  7702   001BD8  2202               	addwfc	(___fladd@b+1)^0,f,c
  7703   001BDA  5007               	movf	(___fladd@a+2)^0,w,c
  7704   001BDC  2203               	addwfc	(___fladd@b+2)^0,f,c
  7705   001BDE  5008               	movf	(___fladd@a+3)^0,w,c
  7706   001BE0  2204               	addwfc	(___fladd@b+3)^0,f,c
  7707   001BE2  A004               	btfss	(___fladd@b+3)^0,0,c
  7708   001BE4  EFF6  F00D         	goto	u2631
  7709   001BE8  EFF8  F00D         	goto	u2630
  7710   001BEC                     u2631:
  7711   001BEC  EFA4  F00E         	goto	l3113
  7712   001BF0                     u2630:
  7713   001BF0  A010               	btfss	___fladd@grs^0,0,c
  7714   001BF2  EFFD  F00D         	goto	u2641
  7715   001BF6  EFFF  F00D         	goto	u2640
  7716   001BFA                     u2641:
  7717   001BFA  EF05  F00E         	goto	l3067
  7718   001BFE                     u2640:
  7719   001BFE  90D8               	bcf	status,0,c
  7720   001C00  3010               	rrcf	___fladd@grs^0,w,c
  7721   001C02  0901               	iorlw	1
  7722   001C04  6E10               	movwf	___fladd@grs^0,c
  7723   001C06  EF07  F00E         	goto	l3069
  7724   001C0A                     l3067:
  7725   001C0A  90D8               	bcf	status,0,c
  7726   001C0C  3210               	rrcf	___fladd@grs^0,f,c
  7727   001C0E                     l3069:
  7728   001C0E  A001               	btfss	___fladd@b^0,0,c
  7729   001C10  EF0C  F00E         	goto	u2651
  7730   001C14  EF0E  F00E         	goto	u2650
  7731   001C18                     u2651:
  7732   001C18  EF0F  F00E         	goto	l3073
  7733   001C1C                     u2650:
  7734   001C1C  8E10               	bsf	___fladd@grs^0,7,c
  7735   001C1E                     l3073:
  7736   001C1E  3404               	rlcf	(___fladd@b+3)^0,w,c
  7737   001C20  3204               	rrcf	(___fladd@b+3)^0,f,c
  7738   001C22  3203               	rrcf	(___fladd@b+2)^0,f,c
  7739   001C24  3202               	rrcf	(___fladd@b+1)^0,f,c
  7740   001C26  3201               	rrcf	___fladd@b^0,f,c
  7741   001C28  2A0F               	incf	___fladd@bexp^0,f,c
  7742   001C2A  EFA4  F00E         	goto	l3113
  7743   001C2E                     l3077:
  7744   001C2E  5005               	movf	___fladd@a^0,w,c
  7745   001C30  5C01               	subwf	___fladd@b^0,w,c
  7746   001C32  5006               	movf	(___fladd@a+1)^0,w,c
  7747   001C34  5802               	subwfb	(___fladd@b+1)^0,w,c
  7748   001C36  5007               	movf	(___fladd@a+2)^0,w,c
  7749   001C38  5803               	subwfb	(___fladd@b+2)^0,w,c
  7750   001C3A  5004               	movf	(___fladd@b+3)^0,w,c
  7751   001C3C  0A80               	xorlw	128
  7752   001C3E  6E09               	movwf	??___fladd^0,c
  7753   001C40  5008               	movf	(___fladd@a+3)^0,w,c
  7754   001C42  0A80               	xorlw	128
  7755   001C44  5809               	subwfb	??___fladd^0,w,c
  7756   001C46  B0D8               	btfsc	status,0,c
  7757   001C48  EF28  F00E         	goto	u2661
  7758   001C4C  EF2A  F00E         	goto	u2660
  7759   001C50                     u2661:
  7760   001C50  EF55  F00E         	goto	l3087
  7761   001C54                     u2660:
  7762   001C54  5001               	movf	___fladd@b^0,w,c
  7763   001C56  5C05               	subwf	___fladd@a^0,w,c
  7764   001C58  6E09               	movwf	??___fladd^0,c
  7765   001C5A  5002               	movf	(___fladd@b+1)^0,w,c
  7766   001C5C  5806               	subwfb	(___fladd@a+1)^0,w,c
  7767   001C5E  6E0A               	movwf	(??___fladd+1)^0,c
  7768   001C60  5003               	movf	(___fladd@b+2)^0,w,c
  7769   001C62  5807               	subwfb	(___fladd@a+2)^0,w,c
  7770   001C64  6E0B               	movwf	(??___fladd+2)^0,c
  7771   001C66  5004               	movf	(___fladd@b+3)^0,w,c
  7772   001C68  5808               	subwfb	(___fladd@a+3)^0,w,c
  7773   001C6A  6E0C               	movwf	(??___fladd+3)^0,c
  7774   001C6C  0EFF               	movlw	255
  7775   001C6E  2409               	addwf	??___fladd^0,w,c
  7776   001C70  6E01               	movwf	___fladd@b^0,c
  7777   001C72  0EFF               	movlw	255
  7778   001C74  200A               	addwfc	(??___fladd+1)^0,w,c
  7779   001C76  6E02               	movwf	(___fladd@b+1)^0,c
  7780   001C78  0EFF               	movlw	255
  7781   001C7A  200B               	addwfc	(??___fladd+2)^0,w,c
  7782   001C7C  6E03               	movwf	(___fladd@b+2)^0,c
  7783   001C7E  0EFF               	movlw	255
  7784   001C80  200C               	addwfc	(??___fladd+3)^0,w,c
  7785   001C82  6E04               	movwf	(___fladd@b+3)^0,c
  7786   001C84  0E80               	movlw	128
  7787   001C86  1A0D               	xorwf	___fladd@signs^0,f,c
  7788   001C88  6C10               	negf	___fladd@grs^0,c
  7789   001C8A  5010               	movf	___fladd@grs^0,w,c
  7790   001C8C  A4D8               	btfss	status,2,c
  7791   001C8E  EF4B  F00E         	goto	u2671
  7792   001C92  EF4D  F00E         	goto	u2670
  7793   001C96                     u2671:
  7794   001C96  EF5D  F00E         	goto	l1010
  7795   001C9A                     u2670:
  7796   001C9A  0E01               	movlw	1
  7797   001C9C  2601               	addwf	___fladd@b^0,f,c
  7798   001C9E  0E00               	movlw	0
  7799   001CA0  2202               	addwfc	(___fladd@b+1)^0,f,c
  7800   001CA2  2203               	addwfc	(___fladd@b+2)^0,f,c
  7801   001CA4  2204               	addwfc	(___fladd@b+3)^0,f,c
  7802   001CA6  EF5D  F00E         	goto	l1010
  7803   001CAA                     l3087:
  7804   001CAA  5005               	movf	___fladd@a^0,w,c
  7805   001CAC  5E01               	subwf	___fladd@b^0,f,c
  7806   001CAE  5006               	movf	(___fladd@a+1)^0,w,c
  7807   001CB0  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7808   001CB2  5007               	movf	(___fladd@a+2)^0,w,c
  7809   001CB4  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7810   001CB6  5008               	movf	(___fladd@a+3)^0,w,c
  7811   001CB8  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7812   001CBA                     l1010:
  7813   001CBA  5001               	movf	___fladd@b^0,w,c
  7814   001CBC  1002               	iorwf	(___fladd@b+1)^0,w,c
  7815   001CBE  1003               	iorwf	(___fladd@b+2)^0,w,c
  7816   001CC0  1004               	iorwf	(___fladd@b+3)^0,w,c
  7817   001CC2  A4D8               	btfss	status,2,c
  7818   001CC4  EF66  F00E         	goto	u2681
  7819   001CC8  EF68  F00E         	goto	u2680
  7820   001CCC                     u2681:
  7821   001CCC  EF9D  F00E         	goto	l3111
  7822   001CD0                     u2680:
  7823   001CD0  5010               	movf	___fladd@grs^0,w,c
  7824   001CD2  A4D8               	btfss	status,2,c
  7825   001CD4  EF6E  F00E         	goto	u2691
  7826   001CD8  EF70  F00E         	goto	u2690
  7827   001CDC                     u2691:
  7828   001CDC  EF9D  F00E         	goto	l3111
  7829   001CE0                     u2690:
  7830   001CE0  0E00               	movlw	0
  7831   001CE2  6E01               	movwf	?___fladd^0,c
  7832   001CE4  0E00               	movlw	0
  7833   001CE6  6E02               	movwf	(?___fladd+1)^0,c
  7834   001CE8  0E00               	movlw	0
  7835   001CEA  6E03               	movwf	(?___fladd+2)^0,c
  7836   001CEC  0E00               	movlw	0
  7837   001CEE  6E04               	movwf	(?___fladd+3)^0,c
  7838   001CF0  EF38  F00F         	goto	l1002
  7839   001CF4                     l3095:
  7840   001CF4  90D8               	bcf	status,0,c
  7841   001CF6  3601               	rlcf	___fladd@b^0,f,c
  7842   001CF8  3602               	rlcf	(___fladd@b+1)^0,f,c
  7843   001CFA  3603               	rlcf	(___fladd@b+2)^0,f,c
  7844   001CFC  3604               	rlcf	(___fladd@b+3)^0,f,c
  7845   001CFE  AE10               	btfss	___fladd@grs^0,7,c
  7846   001D00  EF84  F00E         	goto	u2701
  7847   001D04  EF86  F00E         	goto	u2700
  7848   001D08                     u2701:
  7849   001D08  EF87  F00E         	goto	l3101
  7850   001D0C                     u2700:
  7851   001D0C  8001               	bsf	___fladd@b^0,0,c
  7852   001D0E                     l3101:
  7853   001D0E  A010               	btfss	___fladd@grs^0,0,c
  7854   001D10  EF8C  F00E         	goto	u2711
  7855   001D14  EF8E  F00E         	goto	u2710
  7856   001D18                     u2711:
  7857   001D18  EF92  F00E         	goto	l3105
  7858   001D1C                     u2710:
  7859   001D1C  80D8               	bsf	status,0,c
  7860   001D1E  3610               	rlcf	___fladd@grs^0,f,c
  7861   001D20  EF94  F00E         	goto	l3107
  7862   001D24                     l3105:
  7863   001D24  90D8               	bcf	status,0,c
  7864   001D26  3610               	rlcf	___fladd@grs^0,f,c
  7865   001D28                     l3107:
  7866   001D28  500F               	movf	___fladd@bexp^0,w,c
  7867   001D2A  B4D8               	btfsc	status,2,c
  7868   001D2C  EF9A  F00E         	goto	u2721
  7869   001D30  EF9C  F00E         	goto	u2720
  7870   001D34                     u2721:
  7871   001D34  EF9D  F00E         	goto	l3111
  7872   001D38                     u2720:
  7873   001D38  060F               	decf	___fladd@bexp^0,f,c
  7874   001D3A                     l3111:
  7875   001D3A  AE03               	btfss	(___fladd@b+2)^0,7,c
  7876   001D3C  EFA2  F00E         	goto	u2731
  7877   001D40  EFA4  F00E         	goto	u2730
  7878   001D44                     u2731:
  7879   001D44  EF7A  F00E         	goto	l3095
  7880   001D48                     u2730:
  7881   001D48                     l3113:
  7882   001D48  0E00               	movlw	0
  7883   001D4A  6E0E               	movwf	___fladd@aexp^0,c
  7884   001D4C  AE10               	btfss	___fladd@grs^0,7,c
  7885   001D4E  EFAB  F00E         	goto	u2741
  7886   001D52  EFAD  F00E         	goto	u2740
  7887   001D56                     u2741:
  7888   001D56  EFC5  F00E         	goto	l1019
  7889   001D5A                     u2740:
  7890   001D5A  C010  F009         	movff	___fladd@grs,??___fladd
  7891   001D5E  0E7F               	movlw	127
  7892   001D60  1609               	andwf	??___fladd^0,f,c
  7893   001D62  B4D8               	btfsc	status,2,c
  7894   001D64  EFB6  F00E         	goto	u2751
  7895   001D68  EFB8  F00E         	goto	u2750
  7896   001D6C                     u2751:
  7897   001D6C  EFBC  F00E         	goto	l1020
  7898   001D70                     u2750:
  7899   001D70                     l3119:
  7900   001D70  0E01               	movlw	1
  7901   001D72  6E0E               	movwf	___fladd@aexp^0,c
  7902   001D74  EFC5  F00E         	goto	l1019
  7903   001D78                     l1020:
  7904   001D78  A001               	btfss	___fladd@b^0,0,c
  7905   001D7A  EFC1  F00E         	goto	u2761
  7906   001D7E  EFC3  F00E         	goto	u2760
  7907   001D82                     u2761:
  7908   001D82  EFC5  F00E         	goto	l1019
  7909   001D86                     u2760:
  7910   001D86  EFB8  F00E         	goto	l3119
  7911   001D8A                     l1019:
  7912   001D8A  500E               	movf	___fladd@aexp^0,w,c
  7913   001D8C  B4D8               	btfsc	status,2,c
  7914   001D8E  EFCB  F00E         	goto	u2771
  7915   001D92  EFCD  F00E         	goto	u2770
  7916   001D96                     u2771:
  7917   001D96  EFF8  F00E         	goto	l3131
  7918   001D9A                     u2770:
  7919   001D9A  0E01               	movlw	1
  7920   001D9C  2601               	addwf	___fladd@b^0,f,c
  7921   001D9E  0E00               	movlw	0
  7922   001DA0  2202               	addwfc	(___fladd@b+1)^0,f,c
  7923   001DA2  2203               	addwfc	(___fladd@b+2)^0,f,c
  7924   001DA4  2204               	addwfc	(___fladd@b+3)^0,f,c
  7925   001DA6  A004               	btfss	(___fladd@b+3)^0,0,c
  7926   001DA8  EFD8  F00E         	goto	u2781
  7927   001DAC  EFDA  F00E         	goto	u2780
  7928   001DB0                     u2781:
  7929   001DB0  EFF8  F00E         	goto	l3131
  7930   001DB4                     u2780:
  7931   001DB4  C001  F009         	movff	___fladd@b,??___fladd
  7932   001DB8  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7933   001DBC  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7934   001DC0  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7935   001DC4  340C               	rlcf	(??___fladd+3)^0,w,c
  7936   001DC6  320C               	rrcf	(??___fladd+3)^0,f,c
  7937   001DC8  320B               	rrcf	(??___fladd+2)^0,f,c
  7938   001DCA  320A               	rrcf	(??___fladd+1)^0,f,c
  7939   001DCC  3209               	rrcf	??___fladd^0,f,c
  7940   001DCE  C009  F001         	movff	??___fladd,___fladd@b
  7941   001DD2  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7942   001DD6  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7943   001DDA  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7944   001DDE  280F               	incf	___fladd@bexp^0,w,c
  7945   001DE0  B4D8               	btfsc	status,2,c
  7946   001DE2  EFF5  F00E         	goto	u2791
  7947   001DE6  EFF7  F00E         	goto	u2790
  7948   001DEA                     u2791:
  7949   001DEA  EFF8  F00E         	goto	l3131
  7950   001DEE                     u2790:
  7951   001DEE  2A0F               	incf	___fladd@bexp^0,f,c
  7952   001DF0                     l3131:
  7953   001DF0  280F               	incf	___fladd@bexp^0,w,c
  7954   001DF2  B4D8               	btfsc	status,2,c
  7955   001DF4  EFFE  F00E         	goto	u2801
  7956   001DF8  EF00  F00F         	goto	u2800
  7957   001DFC                     u2801:
  7958   001DFC  EF08  F00F         	goto	l3135
  7959   001E00                     u2800:
  7960   001E00  500F               	movf	___fladd@bexp^0,w,c
  7961   001E02  A4D8               	btfss	status,2,c
  7962   001E04  EF06  F00F         	goto	u2811
  7963   001E08  EF08  F00F         	goto	u2810
  7964   001E0C                     u2811:
  7965   001E0C  EF1A  F00F         	goto	l3139
  7966   001E10                     u2810:
  7967   001E10                     l3135:
  7968   001E10  0E00               	movlw	0
  7969   001E12  6E01               	movwf	___fladd@b^0,c
  7970   001E14  0E00               	movlw	0
  7971   001E16  6E02               	movwf	(___fladd@b+1)^0,c
  7972   001E18  0E00               	movlw	0
  7973   001E1A  6E03               	movwf	(___fladd@b+2)^0,c
  7974   001E1C  0E00               	movlw	0
  7975   001E1E  6E04               	movwf	(___fladd@b+3)^0,c
  7976   001E20  500F               	movf	___fladd@bexp^0,w,c
  7977   001E22  A4D8               	btfss	status,2,c
  7978   001E24  EF16  F00F         	goto	u2821
  7979   001E28  EF18  F00F         	goto	u2820
  7980   001E2C                     u2821:
  7981   001E2C  EF1A  F00F         	goto	l3139
  7982   001E30                     u2820:
  7983   001E30  0E00               	movlw	0
  7984   001E32  6E0D               	movwf	___fladd@signs^0,c
  7985   001E34                     l3139:
  7986   001E34  A00F               	btfss	___fladd@bexp^0,0,c
  7987   001E36  EF1F  F00F         	goto	u2831
  7988   001E3A  EF21  F00F         	goto	u2830
  7989   001E3E                     u2831:
  7990   001E3E  EF24  F00F         	goto	l3143
  7991   001E42                     u2830:
  7992   001E42  8E03               	bsf	(___fladd@b+2)^0,7,c
  7993   001E44  EF25  F00F         	goto	l3145
  7994   001E48                     l3143:
  7995   001E48  9E03               	bcf	(___fladd@b+2)^0,7,c
  7996   001E4A                     l3145:
  7997   001E4A  90D8               	bcf	status,0,c
  7998   001E4C  300F               	rrcf	___fladd@bexp^0,w,c
  7999   001E4E  6E04               	movwf	(___fladd@b+3)^0,c
  8000   001E50  AE0D               	btfss	___fladd@signs^0,7,c
  8001   001E52  EF2D  F00F         	goto	u2841
  8002   001E56  EF2F  F00F         	goto	u2840
  8003   001E5A                     u2841:
  8004   001E5A  EF30  F00F         	goto	l3151
  8005   001E5E                     u2840:
  8006   001E5E  8E04               	bsf	(___fladd@b+3)^0,7,c
  8007   001E60                     l3151:
  8008   001E60  C001  F001         	movff	___fladd@b,?___fladd
  8009   001E64  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8010   001E68  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8011   001E6C  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8012   001E70                     l1002:
  8013   001E70  0012               	return		;funcret
  8014   001E72                     __end_of___fladd:
  8015                           	callstack 0
  8016                           
  8017 ;; *************** function ___flmul *****************
  8018 ;; Defined at:
  8019 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;  b               4   49[COMRAM] unsigned char 
  8022 ;;  a               4   53[COMRAM] unsigned char 
  8023 ;; Auto vars:     Size  Location     Type
  8024 ;;  prod            4   68[COMRAM] struct .
  8025 ;;  grs             4   62[COMRAM] unsigned long 
  8026 ;;  temp            2   72[COMRAM] struct .
  8027 ;;  bexp            1   67[COMRAM] unsigned char 
  8028 ;;  aexp            1   66[COMRAM] unsigned char 
  8029 ;;  sign            1   61[COMRAM] unsigned char 
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  4   49[COMRAM] unsigned char 
  8032 ;; Registers used:
  8033 ;;		wreg, status,2, status,0, prodl, prodh
  8034 ;; Tracked objects:
  8035 ;;		On entry : 0/0
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8039 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8040 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8041 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8042 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8043 ;;Total ram usage:       25 bytes
  8044 ;; Hardware stack levels used: 1
  8045 ;; Hardware stack levels required when called: 1
  8046 ;; This function calls:
  8047 ;;		Nothing
  8048 ;; This function is called by:
  8049 ;;		_Colour_decider
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053                           	psect	text47
  8054   001E72                     __ptext47:
  8055                           	callstack 0
  8056   001E72                     ___flmul:
  8057                           	callstack 28
  8058   001E72  5035               	movf	(___flmul@b+3)^0,w,c
  8059   001E74  0B80               	andlw	128
  8060   001E76  6E3E               	movwf	___flmul@sign^0,c
  8061   001E78  5035               	movf	(___flmul@b+3)^0,w,c
  8062   001E7A  2435               	addwf	(___flmul@b+3)^0,w,c
  8063   001E7C  6E44               	movwf	___flmul@bexp^0,c
  8064   001E7E  AE34               	btfss	(___flmul@b+2)^0,7,c
  8065   001E80  EF44  F00F         	goto	u3121
  8066   001E84  EF46  F00F         	goto	u3120
  8067   001E88                     u3121:
  8068   001E88  EF47  F00F         	goto	l3389
  8069   001E8C                     u3120:
  8070   001E8C  8044               	bsf	___flmul@bexp^0,0,c
  8071   001E8E                     l3389:
  8072   001E8E  5044               	movf	___flmul@bexp^0,w,c
  8073   001E90  B4D8               	btfsc	status,2,c
  8074   001E92  EF4D  F00F         	goto	u3131
  8075   001E96  EF4F  F00F         	goto	u3130
  8076   001E9A                     u3131:
  8077   001E9A  EF62  F00F         	goto	l3397
  8078   001E9E                     u3130:
  8079   001E9E  2844               	incf	___flmul@bexp^0,w,c
  8080   001EA0  A4D8               	btfss	status,2,c
  8081   001EA2  EF55  F00F         	goto	u3141
  8082   001EA6  EF57  F00F         	goto	u3140
  8083   001EAA                     u3141:
  8084   001EAA  EF5F  F00F         	goto	l3395
  8085   001EAE                     u3140:
  8086   001EAE  0E00               	movlw	0
  8087   001EB0  6E32               	movwf	___flmul@b^0,c
  8088   001EB2  0E00               	movlw	0
  8089   001EB4  6E33               	movwf	(___flmul@b+1)^0,c
  8090   001EB6  0E00               	movlw	0
  8091   001EB8  6E34               	movwf	(___flmul@b+2)^0,c
  8092   001EBA  0E00               	movlw	0
  8093   001EBC  6E35               	movwf	(___flmul@b+3)^0,c
  8094   001EBE                     l3395:
  8095   001EBE  8E34               	bsf	(___flmul@b+2)^0,7,c
  8096   001EC0  EF6A  F00F         	goto	l3399
  8097   001EC4                     l3397:
  8098   001EC4  0E00               	movlw	0
  8099   001EC6  6E32               	movwf	___flmul@b^0,c
  8100   001EC8  0E00               	movlw	0
  8101   001ECA  6E33               	movwf	(___flmul@b+1)^0,c
  8102   001ECC  0E00               	movlw	0
  8103   001ECE  6E34               	movwf	(___flmul@b+2)^0,c
  8104   001ED0  0E00               	movlw	0
  8105   001ED2  6E35               	movwf	(___flmul@b+3)^0,c
  8106   001ED4                     l3399:
  8107   001ED4  5039               	movf	(___flmul@a+3)^0,w,c
  8108   001ED6  0B80               	andlw	128
  8109   001ED8  1A3E               	xorwf	___flmul@sign^0,f,c
  8110   001EDA  5039               	movf	(___flmul@a+3)^0,w,c
  8111   001EDC  2439               	addwf	(___flmul@a+3)^0,w,c
  8112   001EDE  6E43               	movwf	___flmul@aexp^0,c
  8113   001EE0  AE38               	btfss	(___flmul@a+2)^0,7,c
  8114   001EE2  EF75  F00F         	goto	u3151
  8115   001EE6  EF77  F00F         	goto	u3150
  8116   001EEA                     u3151:
  8117   001EEA  EF78  F00F         	goto	l3407
  8118   001EEE                     u3150:
  8119   001EEE  8043               	bsf	___flmul@aexp^0,0,c
  8120   001EF0                     l3407:
  8121   001EF0  5043               	movf	___flmul@aexp^0,w,c
  8122   001EF2  B4D8               	btfsc	status,2,c
  8123   001EF4  EF7E  F00F         	goto	u3161
  8124   001EF8  EF80  F00F         	goto	u3160
  8125   001EFC                     u3161:
  8126   001EFC  EF93  F00F         	goto	l3415
  8127   001F00                     u3160:
  8128   001F00  2843               	incf	___flmul@aexp^0,w,c
  8129   001F02  A4D8               	btfss	status,2,c
  8130   001F04  EF86  F00F         	goto	u3171
  8131   001F08  EF88  F00F         	goto	u3170
  8132   001F0C                     u3171:
  8133   001F0C  EF90  F00F         	goto	l3413
  8134   001F10                     u3170:
  8135   001F10  0E00               	movlw	0
  8136   001F12  6E36               	movwf	___flmul@a^0,c
  8137   001F14  0E00               	movlw	0
  8138   001F16  6E37               	movwf	(___flmul@a+1)^0,c
  8139   001F18  0E00               	movlw	0
  8140   001F1A  6E38               	movwf	(___flmul@a+2)^0,c
  8141   001F1C  0E00               	movlw	0
  8142   001F1E  6E39               	movwf	(___flmul@a+3)^0,c
  8143   001F20                     l3413:
  8144   001F20  8E38               	bsf	(___flmul@a+2)^0,7,c
  8145   001F22  EF9B  F00F         	goto	l1079
  8146   001F26                     l3415:
  8147   001F26  0E00               	movlw	0
  8148   001F28  6E36               	movwf	___flmul@a^0,c
  8149   001F2A  0E00               	movlw	0
  8150   001F2C  6E37               	movwf	(___flmul@a+1)^0,c
  8151   001F2E  0E00               	movlw	0
  8152   001F30  6E38               	movwf	(___flmul@a+2)^0,c
  8153   001F32  0E00               	movlw	0
  8154   001F34  6E39               	movwf	(___flmul@a+3)^0,c
  8155   001F36                     l1079:
  8156   001F36  5043               	movf	___flmul@aexp^0,w,c
  8157   001F38  B4D8               	btfsc	status,2,c
  8158   001F3A  EFA1  F00F         	goto	u3181
  8159   001F3E  EFA3  F00F         	goto	u3180
  8160   001F42                     u3181:
  8161   001F42  EFAB  F00F         	goto	l3419
  8162   001F46                     u3180:
  8163   001F46  5044               	movf	___flmul@bexp^0,w,c
  8164   001F48  A4D8               	btfss	status,2,c
  8165   001F4A  EFA9  F00F         	goto	u3191
  8166   001F4E  EFAB  F00F         	goto	u3190
  8167   001F52                     u3191:
  8168   001F52  EFB5  F00F         	goto	l3423
  8169   001F56                     u3190:
  8170   001F56                     l3419:
  8171   001F56  0E00               	movlw	0
  8172   001F58  6E32               	movwf	?___flmul^0,c
  8173   001F5A  0E00               	movlw	0
  8174   001F5C  6E33               	movwf	(?___flmul+1)^0,c
  8175   001F5E  0E00               	movlw	0
  8176   001F60  6E34               	movwf	(?___flmul+2)^0,c
  8177   001F62  0E00               	movlw	0
  8178   001F64  6E35               	movwf	(?___flmul+3)^0,c
  8179   001F66  EF4D  F011         	goto	l1083
  8180   001F6A                     l3423:
  8181   001F6A  5038               	movf	(___flmul@a+2)^0,w,c
  8182   001F6C  0232               	mulwf	___flmul@b^0,c
  8183   001F6E  CFF3 F049          	movff	prodl,___flmul@temp
  8184   001F72  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8185   001F76  5049               	movf	___flmul@temp^0,w,c
  8186   001F78  6E3F               	movwf	___flmul@grs^0,c
  8187   001F7A  6A40               	clrf	(___flmul@grs+1)^0,c
  8188   001F7C  6A41               	clrf	(___flmul@grs+2)^0,c
  8189   001F7E  6A42               	clrf	(___flmul@grs+3)^0,c
  8190   001F80  504A               	movf	(___flmul@temp+1)^0,w,c
  8191   001F82  6E45               	movwf	___flmul@prod^0,c
  8192   001F84  6A46               	clrf	(___flmul@prod+1)^0,c
  8193   001F86  6A47               	clrf	(___flmul@prod+2)^0,c
  8194   001F88  6A48               	clrf	(___flmul@prod+3)^0,c
  8195   001F8A  5037               	movf	(___flmul@a+1)^0,w,c
  8196   001F8C  0233               	mulwf	(___flmul@b+1)^0,c
  8197   001F8E  CFF3 F049          	movff	prodl,___flmul@temp
  8198   001F92  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8199   001F96  5049               	movf	___flmul@temp^0,w,c
  8200   001F98  263F               	addwf	___flmul@grs^0,f,c
  8201   001F9A  0E00               	movlw	0
  8202   001F9C  2240               	addwfc	(___flmul@grs+1)^0,f,c
  8203   001F9E  2241               	addwfc	(___flmul@grs+2)^0,f,c
  8204   001FA0  2242               	addwfc	(___flmul@grs+3)^0,f,c
  8205   001FA2  504A               	movf	(___flmul@temp+1)^0,w,c
  8206   001FA4  2645               	addwf	___flmul@prod^0,f,c
  8207   001FA6  0E00               	movlw	0
  8208   001FA8  2246               	addwfc	(___flmul@prod+1)^0,f,c
  8209   001FAA  2247               	addwfc	(___flmul@prod+2)^0,f,c
  8210   001FAC  2248               	addwfc	(___flmul@prod+3)^0,f,c
  8211   001FAE  5036               	movf	___flmul@a^0,w,c
  8212   001FB0  0234               	mulwf	(___flmul@b+2)^0,c
  8213   001FB2  CFF3 F049          	movff	prodl,___flmul@temp
  8214   001FB6  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8215   001FBA  5049               	movf	___flmul@temp^0,w,c
  8216   001FBC  263F               	addwf	___flmul@grs^0,f,c
  8217   001FBE  0E00               	movlw	0
  8218   001FC0  2240               	addwfc	(___flmul@grs+1)^0,f,c
  8219   001FC2  2241               	addwfc	(___flmul@grs+2)^0,f,c
  8220   001FC4  2242               	addwfc	(___flmul@grs+3)^0,f,c
  8221   001FC6  504A               	movf	(___flmul@temp+1)^0,w,c
  8222   001FC8  2645               	addwf	___flmul@prod^0,f,c
  8223   001FCA  0E00               	movlw	0
  8224   001FCC  2246               	addwfc	(___flmul@prod+1)^0,f,c
  8225   001FCE  2247               	addwfc	(___flmul@prod+2)^0,f,c
  8226   001FD0  2248               	addwfc	(___flmul@prod+3)^0,f,c
  8227   001FD2  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
  8228   001FD6  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
  8229   001FDA  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
  8230   001FDE  6A3F               	clrf	___flmul@grs^0,c
  8231   001FE0  5036               	movf	___flmul@a^0,w,c
  8232   001FE2  0233               	mulwf	(___flmul@b+1)^0,c
  8233   001FE4  CFF3 F049          	movff	prodl,___flmul@temp
  8234   001FE8  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8235   001FEC  5049               	movf	___flmul@temp^0,w,c
  8236   001FEE  263F               	addwf	___flmul@grs^0,f,c
  8237   001FF0  504A               	movf	(___flmul@temp+1)^0,w,c
  8238   001FF2  2240               	addwfc	(___flmul@grs+1)^0,f,c
  8239   001FF4  0E00               	movlw	0
  8240   001FF6  2241               	addwfc	(___flmul@grs+2)^0,f,c
  8241   001FF8  0E00               	movlw	0
  8242   001FFA  2242               	addwfc	(___flmul@grs+3)^0,f,c
  8243   001FFC  5037               	movf	(___flmul@a+1)^0,w,c
  8244   001FFE  0232               	mulwf	___flmul@b^0,c
  8245   002000  CFF3 F049          	movff	prodl,___flmul@temp
  8246   002004  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8247   002008  5049               	movf	___flmul@temp^0,w,c
  8248   00200A  263F               	addwf	___flmul@grs^0,f,c
  8249   00200C  504A               	movf	(___flmul@temp+1)^0,w,c
  8250   00200E  2240               	addwfc	(___flmul@grs+1)^0,f,c
  8251   002010  0E00               	movlw	0
  8252   002012  2241               	addwfc	(___flmul@grs+2)^0,f,c
  8253   002014  0E00               	movlw	0
  8254   002016  2242               	addwfc	(___flmul@grs+3)^0,f,c
  8255   002018  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
  8256   00201C  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
  8257   002020  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
  8258   002024  6A3F               	clrf	___flmul@grs^0,c
  8259   002026  5036               	movf	___flmul@a^0,w,c
  8260   002028  0232               	mulwf	___flmul@b^0,c
  8261   00202A  CFF3 F049          	movff	prodl,___flmul@temp
  8262   00202E  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8263   002032  5049               	movf	___flmul@temp^0,w,c
  8264   002034  263F               	addwf	___flmul@grs^0,f,c
  8265   002036  504A               	movf	(___flmul@temp+1)^0,w,c
  8266   002038  2240               	addwfc	(___flmul@grs+1)^0,f,c
  8267   00203A  0E00               	movlw	0
  8268   00203C  2241               	addwfc	(___flmul@grs+2)^0,f,c
  8269   00203E  0E00               	movlw	0
  8270   002040  2242               	addwfc	(___flmul@grs+3)^0,f,c
  8271   002042  5038               	movf	(___flmul@a+2)^0,w,c
  8272   002044  0233               	mulwf	(___flmul@b+1)^0,c
  8273   002046  CFF3 F049          	movff	prodl,___flmul@temp
  8274   00204A  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8275   00204E  5049               	movf	___flmul@temp^0,w,c
  8276   002050  2645               	addwf	___flmul@prod^0,f,c
  8277   002052  504A               	movf	(___flmul@temp+1)^0,w,c
  8278   002054  2246               	addwfc	(___flmul@prod+1)^0,f,c
  8279   002056  0E00               	movlw	0
  8280   002058  2247               	addwfc	(___flmul@prod+2)^0,f,c
  8281   00205A  0E00               	movlw	0
  8282   00205C  2248               	addwfc	(___flmul@prod+3)^0,f,c
  8283   00205E  5037               	movf	(___flmul@a+1)^0,w,c
  8284   002060  0234               	mulwf	(___flmul@b+2)^0,c
  8285   002062  CFF3 F049          	movff	prodl,___flmul@temp
  8286   002066  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8287   00206A  5049               	movf	___flmul@temp^0,w,c
  8288   00206C  2645               	addwf	___flmul@prod^0,f,c
  8289   00206E  504A               	movf	(___flmul@temp+1)^0,w,c
  8290   002070  2246               	addwfc	(___flmul@prod+1)^0,f,c
  8291   002072  0E00               	movlw	0
  8292   002074  2247               	addwfc	(___flmul@prod+2)^0,f,c
  8293   002076  0E00               	movlw	0
  8294   002078  2248               	addwfc	(___flmul@prod+3)^0,f,c
  8295   00207A  5038               	movf	(___flmul@a+2)^0,w,c
  8296   00207C  0234               	mulwf	(___flmul@b+2)^0,c
  8297   00207E  CFF3 F049          	movff	prodl,___flmul@temp
  8298   002082  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8299   002086  5049               	movf	___flmul@temp^0,w,c
  8300   002088  6E3A               	movwf	??___flmul^0,c
  8301   00208A  504A               	movf	(___flmul@temp+1)^0,w,c
  8302   00208C  6E3B               	movwf	(??___flmul+1)^0,c
  8303   00208E  6A3C               	clrf	(??___flmul+2)^0,c
  8304   002090  6A3D               	clrf	(??___flmul+3)^0,c
  8305   002092  C03C  F03D         	movff	??___flmul+2,??___flmul+3
  8306   002096  C03B  F03C         	movff	??___flmul+1,??___flmul+2
  8307   00209A  C03A  F03B         	movff	??___flmul,??___flmul+1
  8308   00209E  6A3A               	clrf	??___flmul^0,c
  8309   0020A0  503A               	movf	??___flmul^0,w,c
  8310   0020A2  2645               	addwf	___flmul@prod^0,f,c
  8311   0020A4  503B               	movf	(??___flmul+1)^0,w,c
  8312   0020A6  2246               	addwfc	(___flmul@prod+1)^0,f,c
  8313   0020A8  503C               	movf	(??___flmul+2)^0,w,c
  8314   0020AA  2247               	addwfc	(___flmul@prod+2)^0,f,c
  8315   0020AC  503D               	movf	(??___flmul+3)^0,w,c
  8316   0020AE  2248               	addwfc	(___flmul@prod+3)^0,f,c
  8317   0020B0  C03F  F03A         	movff	___flmul@grs,??___flmul
  8318   0020B4  C040  F03B         	movff	___flmul@grs+1,??___flmul+1
  8319   0020B8  C041  F03C         	movff	___flmul@grs+2,??___flmul+2
  8320   0020BC  C042  F03D         	movff	___flmul@grs+3,??___flmul+3
  8321   0020C0  0E19               	movlw	25
  8322   0020C2  EF68  F010         	goto	u3200
  8323   0020C6                     u3205:
  8324   0020C6  90D8               	bcf	status,0,c
  8325   0020C8  323D               	rrcf	(??___flmul+3)^0,f,c
  8326   0020CA  323C               	rrcf	(??___flmul+2)^0,f,c
  8327   0020CC  323B               	rrcf	(??___flmul+1)^0,f,c
  8328   0020CE  323A               	rrcf	??___flmul^0,f,c
  8329   0020D0                     u3200:
  8330   0020D0  2EE8               	decfsz	wreg,f,c
  8331   0020D2  EF63  F010         	goto	u3205
  8332   0020D6  503A               	movf	??___flmul^0,w,c
  8333   0020D8  2645               	addwf	___flmul@prod^0,f,c
  8334   0020DA  503B               	movf	(??___flmul+1)^0,w,c
  8335   0020DC  2246               	addwfc	(___flmul@prod+1)^0,f,c
  8336   0020DE  503C               	movf	(??___flmul+2)^0,w,c
  8337   0020E0  2247               	addwfc	(___flmul@prod+2)^0,f,c
  8338   0020E2  503D               	movf	(??___flmul+3)^0,w,c
  8339   0020E4  2248               	addwfc	(___flmul@prod+3)^0,f,c
  8340   0020E6  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
  8341   0020EA  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
  8342   0020EE  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
  8343   0020F2  6A3F               	clrf	___flmul@grs^0,c
  8344   0020F4  5043               	movf	___flmul@aexp^0,w,c
  8345   0020F6  C044  F03A         	movff	___flmul@bexp,??___flmul
  8346   0020FA  6A3B               	clrf	(??___flmul+1)^0,c
  8347   0020FC  263A               	addwf	??___flmul^0,f,c
  8348   0020FE  0E00               	movlw	0
  8349   002100  223B               	addwfc	(??___flmul+1)^0,f,c
  8350   002102  0E82               	movlw	130
  8351   002104  243A               	addwf	??___flmul^0,w,c
  8352   002106  6E49               	movwf	___flmul@temp^0,c
  8353   002108  0EFF               	movlw	255
  8354   00210A  203B               	addwfc	(??___flmul+1)^0,w,c
  8355   00210C  6E4A               	movwf	(___flmul@temp+1)^0,c
  8356   00210E  EF9E  F010         	goto	l3471
  8357   002112                     l3465:
  8358   002112  90D8               	bcf	status,0,c
  8359   002114  3645               	rlcf	___flmul@prod^0,f,c
  8360   002116  3646               	rlcf	(___flmul@prod+1)^0,f,c
  8361   002118  3647               	rlcf	(___flmul@prod+2)^0,f,c
  8362   00211A  3648               	rlcf	(___flmul@prod+3)^0,f,c
  8363   00211C  AE42               	btfss	(___flmul@grs+3)^0,7,c
  8364   00211E  EF93  F010         	goto	u3211
  8365   002122  EF95  F010         	goto	u3210
  8366   002126                     u3211:
  8367   002126  EF96  F010         	goto	l1086
  8368   00212A                     u3210:
  8369   00212A  8045               	bsf	___flmul@prod^0,0,c
  8370   00212C                     l1086:
  8371   00212C  90D8               	bcf	status,0,c
  8372   00212E  363F               	rlcf	___flmul@grs^0,f,c
  8373   002130  3640               	rlcf	(___flmul@grs+1)^0,f,c
  8374   002132  3641               	rlcf	(___flmul@grs+2)^0,f,c
  8375   002134  3642               	rlcf	(___flmul@grs+3)^0,f,c
  8376   002136  0649               	decf	___flmul@temp^0,f,c
  8377   002138  A0D8               	btfss	status,0,c
  8378   00213A  064A               	decf	(___flmul@temp+1)^0,f,c
  8379   00213C                     l3471:
  8380   00213C  AE47               	btfss	(___flmul@prod+2)^0,7,c
  8381   00213E  EFA3  F010         	goto	u3221
  8382   002142  EFA5  F010         	goto	u3220
  8383   002146                     u3221:
  8384   002146  EF89  F010         	goto	l3465
  8385   00214A                     u3220:
  8386   00214A  0E00               	movlw	0
  8387   00214C  6E43               	movwf	___flmul@aexp^0,c
  8388   00214E  AE42               	btfss	(___flmul@grs+3)^0,7,c
  8389   002150  EFAC  F010         	goto	u3231
  8390   002154  EFAE  F010         	goto	u3230
  8391   002158                     u3231:
  8392   002158  EFD2  F010         	goto	l1088
  8393   00215C                     u3230:
  8394   00215C  0EFF               	movlw	255
  8395   00215E  143F               	andwf	___flmul@grs^0,w,c
  8396   002160  6E3A               	movwf	??___flmul^0,c
  8397   002162  0EFF               	movlw	255
  8398   002164  1440               	andwf	(___flmul@grs+1)^0,w,c
  8399   002166  6E3B               	movwf	(??___flmul+1)^0,c
  8400   002168  0EFF               	movlw	255
  8401   00216A  1441               	andwf	(___flmul@grs+2)^0,w,c
  8402   00216C  6E3C               	movwf	(??___flmul+2)^0,c
  8403   00216E  0E7F               	movlw	127
  8404   002170  1442               	andwf	(___flmul@grs+3)^0,w,c
  8405   002172  6E3D               	movwf	(??___flmul+3)^0,c
  8406   002174  503A               	movf	??___flmul^0,w,c
  8407   002176  103B               	iorwf	(??___flmul+1)^0,w,c
  8408   002178  103C               	iorwf	(??___flmul+2)^0,w,c
  8409   00217A  103D               	iorwf	(??___flmul+3)^0,w,c
  8410   00217C  B4D8               	btfsc	status,2,c
  8411   00217E  EFC3  F010         	goto	u3241
  8412   002182  EFC5  F010         	goto	u3240
  8413   002186                     u3241:
  8414   002186  EFC9  F010         	goto	l1089
  8415   00218A                     u3240:
  8416   00218A                     l3479:
  8417   00218A  0E01               	movlw	1
  8418   00218C  6E43               	movwf	___flmul@aexp^0,c
  8419   00218E  EFD2  F010         	goto	l1088
  8420   002192                     l1089:
  8421   002192  A045               	btfss	___flmul@prod^0,0,c
  8422   002194  EFCE  F010         	goto	u3251
  8423   002198  EFD0  F010         	goto	u3250
  8424   00219C                     u3251:
  8425   00219C  EFD2  F010         	goto	l1088
  8426   0021A0                     u3250:
  8427   0021A0  EFC5  F010         	goto	l3479
  8428   0021A4                     l1088:
  8429   0021A4  5043               	movf	___flmul@aexp^0,w,c
  8430   0021A6  B4D8               	btfsc	status,2,c
  8431   0021A8  EFD8  F010         	goto	u3261
  8432   0021AC  EFDA  F010         	goto	u3260
  8433   0021B0                     u3261:
  8434   0021B0  EFFE  F010         	goto	l3491
  8435   0021B4                     u3260:
  8436   0021B4  0E01               	movlw	1
  8437   0021B6  2645               	addwf	___flmul@prod^0,f,c
  8438   0021B8  0E00               	movlw	0
  8439   0021BA  2246               	addwfc	(___flmul@prod+1)^0,f,c
  8440   0021BC  2247               	addwfc	(___flmul@prod+2)^0,f,c
  8441   0021BE  2248               	addwfc	(___flmul@prod+3)^0,f,c
  8442   0021C0  A048               	btfss	(___flmul@prod+3)^0,0,c
  8443   0021C2  EFE5  F010         	goto	u3271
  8444   0021C6  EFE7  F010         	goto	u3270
  8445   0021CA                     u3271:
  8446   0021CA  EFFE  F010         	goto	l3491
  8447   0021CE                     u3270:
  8448   0021CE  C045  F03A         	movff	___flmul@prod,??___flmul
  8449   0021D2  C046  F03B         	movff	___flmul@prod+1,??___flmul+1
  8450   0021D6  C047  F03C         	movff	___flmul@prod+2,??___flmul+2
  8451   0021DA  C048  F03D         	movff	___flmul@prod+3,??___flmul+3
  8452   0021DE  343D               	rlcf	(??___flmul+3)^0,w,c
  8453   0021E0  323D               	rrcf	(??___flmul+3)^0,f,c
  8454   0021E2  323C               	rrcf	(??___flmul+2)^0,f,c
  8455   0021E4  323B               	rrcf	(??___flmul+1)^0,f,c
  8456   0021E6  323A               	rrcf	??___flmul^0,f,c
  8457   0021E8  C03A  F045         	movff	??___flmul,___flmul@prod
  8458   0021EC  C03B  F046         	movff	??___flmul+1,___flmul@prod+1
  8459   0021F0  C03C  F047         	movff	??___flmul+2,___flmul@prod+2
  8460   0021F4  C03D  F048         	movff	??___flmul+3,___flmul@prod+3
  8461   0021F8  4A49               	infsnz	___flmul@temp^0,f,c
  8462   0021FA  2A4A               	incf	(___flmul@temp+1)^0,f,c
  8463   0021FC                     l3491:
  8464   0021FC  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
  8465   0021FE  EF09  F011         	goto	u3281
  8466   002202  504A               	movf	(___flmul@temp+1)^0,w,c
  8467   002204  E108               	bnz	u3280
  8468   002206  2849               	incf	___flmul@temp^0,w,c
  8469   002208  A0D8               	btfss	status,0,c
  8470   00220A  EF09  F011         	goto	u3281
  8471   00220E  EF0B  F011         	goto	u3280
  8472   002212                     u3281:
  8473   002212  EF15  F011         	goto	l3495
  8474   002216                     u3280:
  8475   002216  0E00               	movlw	0
  8476   002218  6E45               	movwf	___flmul@prod^0,c
  8477   00221A  0E00               	movlw	0
  8478   00221C  6E46               	movwf	(___flmul@prod+1)^0,c
  8479   00221E  0E80               	movlw	128
  8480   002220  6E47               	movwf	(___flmul@prod+2)^0,c
  8481   002222  0E7F               	movlw	127
  8482   002224  6E48               	movwf	(___flmul@prod+3)^0,c
  8483   002226  EF43  F011         	goto	l3507
  8484   00222A                     l3495:
  8485   00222A  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
  8486   00222C  EF22  F011         	goto	u3290
  8487   002230  504A               	movf	(___flmul@temp+1)^0,w,c
  8488   002232  E106               	bnz	u3291
  8489   002234  0449               	decf	___flmul@temp^0,w,c
  8490   002236  B0D8               	btfsc	status,0,c
  8491   002238  EF20  F011         	goto	u3291
  8492   00223C  EF22  F011         	goto	u3290
  8493   002240                     u3291:
  8494   002240  EF2E  F011         	goto	l1096
  8495   002244                     u3290:
  8496   002244  0E00               	movlw	0
  8497   002246  6E45               	movwf	___flmul@prod^0,c
  8498   002248  0E00               	movlw	0
  8499   00224A  6E46               	movwf	(___flmul@prod+1)^0,c
  8500   00224C  0E00               	movlw	0
  8501   00224E  6E47               	movwf	(___flmul@prod+2)^0,c
  8502   002250  0E00               	movlw	0
  8503   002252  6E48               	movwf	(___flmul@prod+3)^0,c
  8504   002254  0E00               	movlw	0
  8505   002256  6E3E               	movwf	___flmul@sign^0,c
  8506   002258  EF43  F011         	goto	l3507
  8507   00225C                     l1096:
  8508   00225C  C049  F044         	movff	___flmul@temp,___flmul@bexp
  8509   002260  0EFF               	movlw	255
  8510   002262  1645               	andwf	___flmul@prod^0,f,c
  8511   002264  0EFF               	movlw	255
  8512   002266  1646               	andwf	(___flmul@prod+1)^0,f,c
  8513   002268  0E7F               	movlw	127
  8514   00226A  1647               	andwf	(___flmul@prod+2)^0,f,c
  8515   00226C  0E00               	movlw	0
  8516   00226E  1648               	andwf	(___flmul@prod+3)^0,f,c
  8517   002270  A044               	btfss	___flmul@bexp^0,0,c
  8518   002272  EF3D  F011         	goto	u3301
  8519   002276  EF3F  F011         	goto	u3300
  8520   00227A                     u3301:
  8521   00227A  EF40  F011         	goto	l3505
  8522   00227E                     u3300:
  8523   00227E  8E47               	bsf	(___flmul@prod+2)^0,7,c
  8524   002280                     l3505:
  8525   002280  90D8               	bcf	status,0,c
  8526   002282  3044               	rrcf	___flmul@bexp^0,w,c
  8527   002284  6E48               	movwf	(___flmul@prod+3)^0,c
  8528   002286                     l3507:
  8529   002286  503E               	movf	___flmul@sign^0,w,c
  8530   002288  1248               	iorwf	(___flmul@prod+3)^0,f,c
  8531   00228A  C045  F032         	movff	___flmul@prod,?___flmul
  8532   00228E  C046  F033         	movff	___flmul@prod+1,?___flmul+1
  8533   002292  C047  F034         	movff	___flmul@prod+2,?___flmul+2
  8534   002296  C048  F035         	movff	___flmul@prod+3,?___flmul+3
  8535   00229A                     l1083:
  8536   00229A  0012               	return		;funcret
  8537   00229C                     __end_of___flmul:
  8538                           	callstack 0
  8539                           
  8540 ;; *************** function ___flge *****************
  8541 ;; Defined at:
  8542 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;  ff1             4    0[COMRAM] unsigned char 
  8545 ;;  ff2             4    4[COMRAM] unsigned char 
  8546 ;; Auto vars:     Size  Location     Type
  8547 ;;		None
  8548 ;; Return value:  Size  Location     Type
  8549 ;;		None               void
  8550 ;; Registers used:
  8551 ;;		wreg, status,2, status,0
  8552 ;; Tracked objects:
  8553 ;;		On entry : 0/0
  8554 ;;		On exit  : 0/0
  8555 ;;		Unchanged: 0/0
  8556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8557 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8559 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8560 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8561 ;;Total ram usage:       12 bytes
  8562 ;; Hardware stack levels used: 1
  8563 ;; Hardware stack levels required when called: 1
  8564 ;; This function calls:
  8565 ;;		Nothing
  8566 ;; This function is called by:
  8567 ;;		_Colour_decider
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           	psect	text48
  8572   0034CA                     __ptext48:
  8573                           	callstack 0
  8574   0034CA                     ___flge:
  8575                           	callstack 28
  8576   0034CA  0E00               	movlw	0
  8577   0034CC  1401               	andwf	___flge@ff1^0,w,c
  8578   0034CE  6E09               	movwf	??___flge^0,c
  8579   0034D0  0E00               	movlw	0
  8580   0034D2  1402               	andwf	(___flge@ff1+1)^0,w,c
  8581   0034D4  6E0A               	movwf	(??___flge+1)^0,c
  8582   0034D6  0E80               	movlw	128
  8583   0034D8  1403               	andwf	(___flge@ff1+2)^0,w,c
  8584   0034DA  6E0B               	movwf	(??___flge+2)^0,c
  8585   0034DC  0E7F               	movlw	127
  8586   0034DE  1404               	andwf	(___flge@ff1+3)^0,w,c
  8587   0034E0  6E0C               	movwf	(??___flge+3)^0,c
  8588   0034E2  5009               	movf	??___flge^0,w,c
  8589   0034E4  100A               	iorwf	(??___flge+1)^0,w,c
  8590   0034E6  100B               	iorwf	(??___flge+2)^0,w,c
  8591   0034E8  100C               	iorwf	(??___flge+3)^0,w,c
  8592   0034EA  A4D8               	btfss	status,2,c
  8593   0034EC  EF7A  F01A         	goto	u3341
  8594   0034F0  EF7C  F01A         	goto	u3340
  8595   0034F4                     u3341:
  8596   0034F4  EF84  F01A         	goto	l3539
  8597   0034F8                     u3340:
  8598   0034F8  0E00               	movlw	0
  8599   0034FA  6E01               	movwf	___flge@ff1^0,c
  8600   0034FC  0E00               	movlw	0
  8601   0034FE  6E02               	movwf	(___flge@ff1+1)^0,c
  8602   003500  0E00               	movlw	0
  8603   003502  6E03               	movwf	(___flge@ff1+2)^0,c
  8604   003504  0E00               	movlw	0
  8605   003506  6E04               	movwf	(___flge@ff1+3)^0,c
  8606   003508                     l3539:
  8607   003508  0E00               	movlw	0
  8608   00350A  1405               	andwf	___flge@ff2^0,w,c
  8609   00350C  6E09               	movwf	??___flge^0,c
  8610   00350E  0E00               	movlw	0
  8611   003510  1406               	andwf	(___flge@ff2+1)^0,w,c
  8612   003512  6E0A               	movwf	(??___flge+1)^0,c
  8613   003514  0E80               	movlw	128
  8614   003516  1407               	andwf	(___flge@ff2+2)^0,w,c
  8615   003518  6E0B               	movwf	(??___flge+2)^0,c
  8616   00351A  0E7F               	movlw	127
  8617   00351C  1408               	andwf	(___flge@ff2+3)^0,w,c
  8618   00351E  6E0C               	movwf	(??___flge+3)^0,c
  8619   003520  5009               	movf	??___flge^0,w,c
  8620   003522  100A               	iorwf	(??___flge+1)^0,w,c
  8621   003524  100B               	iorwf	(??___flge+2)^0,w,c
  8622   003526  100C               	iorwf	(??___flge+3)^0,w,c
  8623   003528  A4D8               	btfss	status,2,c
  8624   00352A  EF99  F01A         	goto	u3351
  8625   00352E  EF9B  F01A         	goto	u3350
  8626   003532                     u3351:
  8627   003532  EFA3  F01A         	goto	l3543
  8628   003536                     u3350:
  8629   003536  0E00               	movlw	0
  8630   003538  6E05               	movwf	___flge@ff2^0,c
  8631   00353A  0E00               	movlw	0
  8632   00353C  6E06               	movwf	(___flge@ff2+1)^0,c
  8633   00353E  0E00               	movlw	0
  8634   003540  6E07               	movwf	(___flge@ff2+2)^0,c
  8635   003542  0E00               	movlw	0
  8636   003544  6E08               	movwf	(___flge@ff2+3)^0,c
  8637   003546                     l3543:
  8638   003546  AE04               	btfss	(___flge@ff1+3)^0,7,c
  8639   003548  EFA8  F01A         	goto	u3361
  8640   00354C  EFAA  F01A         	goto	u3360
  8641   003550                     u3361:
  8642   003550  EFB3  F01A         	goto	l3547
  8643   003554                     u3360:
  8644   003554  6C01               	negf	___flge@ff1^0,c
  8645   003556  1E02               	comf	(___flge@ff1+1)^0,f,c
  8646   003558  B0D8               	btfsc	status,0,c
  8647   00355A  2A02               	incf	(___flge@ff1+1)^0,f,c
  8648   00355C  1E03               	comf	(___flge@ff1+2)^0,f,c
  8649   00355E  B0D8               	btfsc	status,0,c
  8650   003560  2A03               	incf	(___flge@ff1+2)^0,f,c
  8651   003562  0E80               	movlw	128
  8652   003564  5604               	subfwb	(___flge@ff1+3)^0,f,c
  8653   003566                     l3547:
  8654   003566  AE08               	btfss	(___flge@ff2+3)^0,7,c
  8655   003568  EFB8  F01A         	goto	u3371
  8656   00356C  EFBA  F01A         	goto	u3370
  8657   003570                     u3371:
  8658   003570  EFC3  F01A         	goto	l730
  8659   003574                     u3370:
  8660   003574  6C05               	negf	___flge@ff2^0,c
  8661   003576  1E06               	comf	(___flge@ff2+1)^0,f,c
  8662   003578  B0D8               	btfsc	status,0,c
  8663   00357A  2A06               	incf	(___flge@ff2+1)^0,f,c
  8664   00357C  1E07               	comf	(___flge@ff2+2)^0,f,c
  8665   00357E  B0D8               	btfsc	status,0,c
  8666   003580  2A07               	incf	(___flge@ff2+2)^0,f,c
  8667   003582  0E80               	movlw	128
  8668   003584  5608               	subfwb	(___flge@ff2+3)^0,f,c
  8669   003586                     l730:
  8670   003586  0E00               	movlw	0
  8671   003588  1A01               	xorwf	___flge@ff1^0,f,c
  8672   00358A  0E00               	movlw	0
  8673   00358C  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  8674   00358E  0E00               	movlw	0
  8675   003590  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  8676   003592  0E80               	movlw	128
  8677   003594  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  8678   003596  0E00               	movlw	0
  8679   003598  1A05               	xorwf	___flge@ff2^0,f,c
  8680   00359A  0E00               	movlw	0
  8681   00359C  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  8682   00359E  0E00               	movlw	0
  8683   0035A0  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  8684   0035A2  0E80               	movlw	128
  8685   0035A4  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  8686   0035A6  5005               	movf	___flge@ff2^0,w,c
  8687   0035A8  5C01               	subwf	___flge@ff1^0,w,c
  8688   0035AA  5006               	movf	(___flge@ff2+1)^0,w,c
  8689   0035AC  5802               	subwfb	(___flge@ff1+1)^0,w,c
  8690   0035AE  5007               	movf	(___flge@ff2+2)^0,w,c
  8691   0035B0  5803               	subwfb	(___flge@ff1+2)^0,w,c
  8692   0035B2  5008               	movf	(___flge@ff2+3)^0,w,c
  8693   0035B4  5804               	subwfb	(___flge@ff1+3)^0,w,c
  8694   0035B6  B0D8               	btfsc	status,0,c
  8695   0035B8  EFE0  F01A         	goto	u3381
  8696   0035BC  EFE2  F01A         	goto	u3380
  8697   0035C0                     u3381:
  8698   0035C0  EFE5  F01A         	goto	l3553
  8699   0035C4                     u3380:
  8700   0035C4  90D8               	bcf	status,0,c
  8701   0035C6  EFE6  F01A         	goto	l735
  8702   0035CA                     l3553:
  8703   0035CA  80D8               	bsf	status,0,c
  8704   0035CC                     l735:
  8705   0035CC  0012               	return		;funcret
  8706   0035CE                     __end_of___flge:
  8707                           	callstack 0
  8708                           
  8709 ;; *************** function ___fleq *****************
  8710 ;; Defined at:
  8711 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  8712 ;; Parameters:    Size  Location     Type
  8713 ;;  ff1             4   24[COMRAM] unsigned char 
  8714 ;;  ff2             4   28[COMRAM] unsigned char 
  8715 ;; Auto vars:     Size  Location     Type
  8716 ;;		None
  8717 ;; Return value:  Size  Location     Type
  8718 ;;		None               void
  8719 ;; Registers used:
  8720 ;;		wreg, status,2, status,0
  8721 ;; Tracked objects:
  8722 ;;		On entry : 0/0
  8723 ;;		On exit  : 0/0
  8724 ;;		Unchanged: 0/0
  8725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8726 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8728 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8729 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8730 ;;Total ram usage:       12 bytes
  8731 ;; Hardware stack levels used: 1
  8732 ;; Hardware stack levels required when called: 1
  8733 ;; This function calls:
  8734 ;;		Nothing
  8735 ;; This function is called by:
  8736 ;;		_Colour_decider
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           	psect	text49
  8741   003698                     __ptext49:
  8742                           	callstack 0
  8743   003698                     ___fleq:
  8744                           	callstack 28
  8745   003698  0E00               	movlw	0
  8746   00369A  1419               	andwf	___fleq@ff1^0,w,c
  8747   00369C  6E21               	movwf	??___fleq^0,c
  8748   00369E  0E00               	movlw	0
  8749   0036A0  141A               	andwf	(___fleq@ff1+1)^0,w,c
  8750   0036A2  6E22               	movwf	(??___fleq+1)^0,c
  8751   0036A4  0E80               	movlw	128
  8752   0036A6  141B               	andwf	(___fleq@ff1+2)^0,w,c
  8753   0036A8  6E23               	movwf	(??___fleq+2)^0,c
  8754   0036AA  0E7F               	movlw	127
  8755   0036AC  141C               	andwf	(___fleq@ff1+3)^0,w,c
  8756   0036AE  6E24               	movwf	(??___fleq+3)^0,c
  8757   0036B0  5021               	movf	??___fleq^0,w,c
  8758   0036B2  1022               	iorwf	(??___fleq+1)^0,w,c
  8759   0036B4  1023               	iorwf	(??___fleq+2)^0,w,c
  8760   0036B6  1024               	iorwf	(??___fleq+3)^0,w,c
  8761   0036B8  A4D8               	btfss	status,2,c
  8762   0036BA  EF61  F01B         	goto	u3311
  8763   0036BE  EF63  F01B         	goto	u3310
  8764   0036C2                     u3311:
  8765   0036C2  EF6B  F01B         	goto	l3523
  8766   0036C6                     u3310:
  8767   0036C6  0E00               	movlw	0
  8768   0036C8  6E19               	movwf	___fleq@ff1^0,c
  8769   0036CA  0E00               	movlw	0
  8770   0036CC  6E1A               	movwf	(___fleq@ff1+1)^0,c
  8771   0036CE  0E00               	movlw	0
  8772   0036D0  6E1B               	movwf	(___fleq@ff1+2)^0,c
  8773   0036D2  0E00               	movlw	0
  8774   0036D4  6E1C               	movwf	(___fleq@ff1+3)^0,c
  8775   0036D6                     l3523:
  8776   0036D6  0E00               	movlw	0
  8777   0036D8  141D               	andwf	___fleq@ff2^0,w,c
  8778   0036DA  6E21               	movwf	??___fleq^0,c
  8779   0036DC  0E00               	movlw	0
  8780   0036DE  141E               	andwf	(___fleq@ff2+1)^0,w,c
  8781   0036E0  6E22               	movwf	(??___fleq+1)^0,c
  8782   0036E2  0E80               	movlw	128
  8783   0036E4  141F               	andwf	(___fleq@ff2+2)^0,w,c
  8784   0036E6  6E23               	movwf	(??___fleq+2)^0,c
  8785   0036E8  0E7F               	movlw	127
  8786   0036EA  1420               	andwf	(___fleq@ff2+3)^0,w,c
  8787   0036EC  6E24               	movwf	(??___fleq+3)^0,c
  8788   0036EE  5021               	movf	??___fleq^0,w,c
  8789   0036F0  1022               	iorwf	(??___fleq+1)^0,w,c
  8790   0036F2  1023               	iorwf	(??___fleq+2)^0,w,c
  8791   0036F4  1024               	iorwf	(??___fleq+3)^0,w,c
  8792   0036F6  A4D8               	btfss	status,2,c
  8793   0036F8  EF80  F01B         	goto	u3321
  8794   0036FC  EF82  F01B         	goto	u3320
  8795   003700                     u3321:
  8796   003700  EF8A  F01B         	goto	l3527
  8797   003704                     u3320:
  8798   003704  0E00               	movlw	0
  8799   003706  6E1D               	movwf	___fleq@ff2^0,c
  8800   003708  0E00               	movlw	0
  8801   00370A  6E1E               	movwf	(___fleq@ff2+1)^0,c
  8802   00370C  0E00               	movlw	0
  8803   00370E  6E1F               	movwf	(___fleq@ff2+2)^0,c
  8804   003710  0E00               	movlw	0
  8805   003712  6E20               	movwf	(___fleq@ff2+3)^0,c
  8806   003714                     l3527:
  8807   003714  501D               	movf	___fleq@ff2^0,w,c
  8808   003716  1819               	xorwf	___fleq@ff1^0,w,c
  8809   003718  E10F               	bnz	u3330
  8810   00371A  501E               	movf	(___fleq@ff2+1)^0,w,c
  8811   00371C  181A               	xorwf	(___fleq@ff1+1)^0,w,c
  8812   00371E  E10C               	bnz	u3330
  8813   003720  501F               	movf	(___fleq@ff2+2)^0,w,c
  8814   003722  181B               	xorwf	(___fleq@ff1+2)^0,w,c
  8815   003724  E109               	bnz	u3330
  8816   003726  5020               	movf	(___fleq@ff2+3)^0,w,c
  8817   003728  181C               	xorwf	(___fleq@ff1+3)^0,w,c
  8818   00372A  B4D8               	btfsc	status,2,c
  8819   00372C  EF9A  F01B         	goto	u3331
  8820   003730  EF9C  F01B         	goto	u3330
  8821   003734                     u3331:
  8822   003734  EF9F  F01B         	goto	l3531
  8823   003738                     u3330:
  8824   003738  90D8               	bcf	status,0,c
  8825   00373A  EFA0  F01B         	goto	l724
  8826   00373E                     l3531:
  8827   00373E  80D8               	bsf	status,0,c
  8828   003740                     l724:
  8829   003740  0012               	return		;funcret
  8830   003742                     __end_of___fleq:
  8831                           	callstack 0
  8832                           
  8833 ;; *************** function ___fldiv *****************
  8834 ;; Defined at:
  8835 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;  b               4   24[COMRAM] unsigned char 
  8838 ;;  a               4   28[COMRAM] unsigned char 
  8839 ;; Auto vars:     Size  Location     Type
  8840 ;;  grs             4   43[COMRAM] unsigned long 
  8841 ;;  rem             4   36[COMRAM] unsigned long 
  8842 ;;  new_exp         2   41[COMRAM] short 
  8843 ;;  aexp            1   48[COMRAM] unsigned char 
  8844 ;;  bexp            1   47[COMRAM] unsigned char 
  8845 ;;  sign            1   40[COMRAM] unsigned char 
  8846 ;; Return value:  Size  Location     Type
  8847 ;;                  4   24[COMRAM] unsigned char 
  8848 ;; Registers used:
  8849 ;;		wreg, status,2, status,0
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8855 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8856 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8857 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8858 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8859 ;;Total ram usage:       25 bytes
  8860 ;; Hardware stack levels used: 1
  8861 ;; Hardware stack levels required when called: 1
  8862 ;; This function calls:
  8863 ;;		Nothing
  8864 ;; This function is called by:
  8865 ;;		_colour_rel
  8866 ;;		_Colour_decider
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text50
  8871   00229C                     __ptext50:
  8872                           	callstack 0
  8873   00229C                     ___fldiv:
  8874                           	callstack 28
  8875   00229C  501C               	movf	(___fldiv@b+3)^0,w,c
  8876   00229E  0B80               	andlw	128
  8877   0022A0  6E29               	movwf	___fldiv@sign^0,c
  8878   0022A2  501C               	movf	(___fldiv@b+3)^0,w,c
  8879   0022A4  241C               	addwf	(___fldiv@b+3)^0,w,c
  8880   0022A6  6E30               	movwf	___fldiv@bexp^0,c
  8881   0022A8  AE1B               	btfss	(___fldiv@b+2)^0,7,c
  8882   0022AA  EF59  F011         	goto	u2891
  8883   0022AE  EF5B  F011         	goto	u2890
  8884   0022B2                     u2891:
  8885   0022B2  EF5C  F011         	goto	l3251
  8886   0022B6                     u2890:
  8887   0022B6  8030               	bsf	___fldiv@bexp^0,0,c
  8888   0022B8                     l3251:
  8889   0022B8  5030               	movf	___fldiv@bexp^0,w,c
  8890   0022BA  B4D8               	btfsc	status,2,c
  8891   0022BC  EF62  F011         	goto	u2901
  8892   0022C0  EF64  F011         	goto	u2900
  8893   0022C4                     u2901:
  8894   0022C4  EF79  F011         	goto	l3261
  8895   0022C8                     u2900:
  8896   0022C8  2830               	incf	___fldiv@bexp^0,w,c
  8897   0022CA  A4D8               	btfss	status,2,c
  8898   0022CC  EF6A  F011         	goto	u2911
  8899   0022D0  EF6C  F011         	goto	u2910
  8900   0022D4                     u2911:
  8901   0022D4  EF74  F011         	goto	l3257
  8902   0022D8                     u2910:
  8903   0022D8  0E00               	movlw	0
  8904   0022DA  6E19               	movwf	___fldiv@b^0,c
  8905   0022DC  0E00               	movlw	0
  8906   0022DE  6E1A               	movwf	(___fldiv@b+1)^0,c
  8907   0022E0  0E00               	movlw	0
  8908   0022E2  6E1B               	movwf	(___fldiv@b+2)^0,c
  8909   0022E4  0E00               	movlw	0
  8910   0022E6  6E1C               	movwf	(___fldiv@b+3)^0,c
  8911   0022E8                     l3257:
  8912   0022E8  8E1B               	bsf	(___fldiv@b+2)^0,7,c
  8913   0022EA  0E00               	movlw	0
  8914   0022EC  6E1C               	movwf	(___fldiv@b+3)^0,c
  8915   0022EE  EF81  F011         	goto	l3263
  8916   0022F2                     l3261:
  8917   0022F2  0E00               	movlw	0
  8918   0022F4  6E19               	movwf	___fldiv@b^0,c
  8919   0022F6  0E00               	movlw	0
  8920   0022F8  6E1A               	movwf	(___fldiv@b+1)^0,c
  8921   0022FA  0E00               	movlw	0
  8922   0022FC  6E1B               	movwf	(___fldiv@b+2)^0,c
  8923   0022FE  0E00               	movlw	0
  8924   002300  6E1C               	movwf	(___fldiv@b+3)^0,c
  8925   002302                     l3263:
  8926   002302  5020               	movf	(___fldiv@a+3)^0,w,c
  8927   002304  0B80               	andlw	128
  8928   002306  1A29               	xorwf	___fldiv@sign^0,f,c
  8929   002308  5020               	movf	(___fldiv@a+3)^0,w,c
  8930   00230A  2420               	addwf	(___fldiv@a+3)^0,w,c
  8931   00230C  6E31               	movwf	___fldiv@aexp^0,c
  8932   00230E  AE1F               	btfss	(___fldiv@a+2)^0,7,c
  8933   002310  EF8C  F011         	goto	u2921
  8934   002314  EF8E  F011         	goto	u2920
  8935   002318                     u2921:
  8936   002318  EF8F  F011         	goto	l3271
  8937   00231C                     u2920:
  8938   00231C  8031               	bsf	___fldiv@aexp^0,0,c
  8939   00231E                     l3271:
  8940   00231E  5031               	movf	___fldiv@aexp^0,w,c
  8941   002320  B4D8               	btfsc	status,2,c
  8942   002322  EF95  F011         	goto	u2931
  8943   002326  EF97  F011         	goto	u2930
  8944   00232A                     u2931:
  8945   00232A  EFAC  F011         	goto	l3281
  8946   00232E                     u2930:
  8947   00232E  2831               	incf	___fldiv@aexp^0,w,c
  8948   002330  A4D8               	btfss	status,2,c
  8949   002332  EF9D  F011         	goto	u2941
  8950   002336  EF9F  F011         	goto	u2940
  8951   00233A                     u2941:
  8952   00233A  EFA7  F011         	goto	l3277
  8953   00233E                     u2940:
  8954   00233E  0E00               	movlw	0
  8955   002340  6E1D               	movwf	___fldiv@a^0,c
  8956   002342  0E00               	movlw	0
  8957   002344  6E1E               	movwf	(___fldiv@a+1)^0,c
  8958   002346  0E00               	movlw	0
  8959   002348  6E1F               	movwf	(___fldiv@a+2)^0,c
  8960   00234A  0E00               	movlw	0
  8961   00234C  6E20               	movwf	(___fldiv@a+3)^0,c
  8962   00234E                     l3277:
  8963   00234E  8E1F               	bsf	(___fldiv@a+2)^0,7,c
  8964   002350  0E00               	movlw	0
  8965   002352  6E20               	movwf	(___fldiv@a+3)^0,c
  8966   002354  EFB4  F011         	goto	l3283
  8967   002358                     l3281:
  8968   002358  0E00               	movlw	0
  8969   00235A  6E1D               	movwf	___fldiv@a^0,c
  8970   00235C  0E00               	movlw	0
  8971   00235E  6E1E               	movwf	(___fldiv@a+1)^0,c
  8972   002360  0E00               	movlw	0
  8973   002362  6E1F               	movwf	(___fldiv@a+2)^0,c
  8974   002364  0E00               	movlw	0
  8975   002366  6E20               	movwf	(___fldiv@a+3)^0,c
  8976   002368                     l3283:
  8977   002368  501D               	movf	___fldiv@a^0,w,c
  8978   00236A  101E               	iorwf	(___fldiv@a+1)^0,w,c
  8979   00236C  101F               	iorwf	(___fldiv@a+2)^0,w,c
  8980   00236E  1020               	iorwf	(___fldiv@a+3)^0,w,c
  8981   002370  A4D8               	btfss	status,2,c
  8982   002372  EFBD  F011         	goto	u2951
  8983   002376  EFBF  F011         	goto	u2950
  8984   00237A                     u2951:
  8985   00237A  EFD7  F011         	goto	l3295
  8986   00237E                     u2950:
  8987   00237E  0E00               	movlw	0
  8988   002380  6E19               	movwf	___fldiv@b^0,c
  8989   002382  0E00               	movlw	0
  8990   002384  6E1A               	movwf	(___fldiv@b+1)^0,c
  8991   002386  0E00               	movlw	0
  8992   002388  6E1B               	movwf	(___fldiv@b+2)^0,c
  8993   00238A  0E00               	movlw	0
  8994   00238C  6E1C               	movwf	(___fldiv@b+3)^0,c
  8995   00238E  0E80               	movlw	128
  8996   002390  121B               	iorwf	(___fldiv@b+2)^0,f,c
  8997   002392  0E7F               	movlw	127
  8998   002394  121C               	iorwf	(___fldiv@b+3)^0,f,c
  8999   002396                     l3289:
  9000   002396  5029               	movf	___fldiv@sign^0,w,c
  9001   002398  121C               	iorwf	(___fldiv@b+3)^0,f,c
  9002   00239A  C019  F019         	movff	___fldiv@b,?___fldiv
  9003   00239E  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
  9004   0023A2  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
  9005   0023A6  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
  9006   0023AA  EF1A  F013         	goto	l1047
  9007   0023AE                     l3295:
  9008   0023AE  5030               	movf	___fldiv@bexp^0,w,c
  9009   0023B0  A4D8               	btfss	status,2,c
  9010   0023B2  EFDD  F011         	goto	u2961
  9011   0023B6  EFDF  F011         	goto	u2960
  9012   0023BA                     u2961:
  9013   0023BA  EFE9  F011         	goto	l3303
  9014   0023BE                     u2960:
  9015   0023BE  0E00               	movlw	0
  9016   0023C0  6E19               	movwf	?___fldiv^0,c
  9017   0023C2  0E00               	movlw	0
  9018   0023C4  6E1A               	movwf	(?___fldiv+1)^0,c
  9019   0023C6  0E00               	movlw	0
  9020   0023C8  6E1B               	movwf	(?___fldiv+2)^0,c
  9021   0023CA  0E00               	movlw	0
  9022   0023CC  6E1C               	movwf	(?___fldiv+3)^0,c
  9023   0023CE  EF1A  F013         	goto	l1047
  9024   0023D2                     l3303:
  9025   0023D2  5031               	movf	___fldiv@aexp^0,w,c
  9026   0023D4  C030  F021         	movff	___fldiv@bexp,??___fldiv
  9027   0023D8  6A22               	clrf	(??___fldiv+1)^0,c
  9028   0023DA  5E21               	subwf	??___fldiv^0,f,c
  9029   0023DC  0E00               	movlw	0
  9030   0023DE  5A22               	subwfb	(??___fldiv+1)^0,f,c
  9031   0023E0  0E7F               	movlw	127
  9032   0023E2  2421               	addwf	??___fldiv^0,w,c
  9033   0023E4  6E2A               	movwf	___fldiv@new_exp^0,c
  9034   0023E6  0E00               	movlw	0
  9035   0023E8  2022               	addwfc	(??___fldiv+1)^0,w,c
  9036   0023EA  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  9037   0023EC  C019  F025         	movff	___fldiv@b,___fldiv@rem
  9038   0023F0  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
  9039   0023F4  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
  9040   0023F8  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
  9041   0023FC  0E00               	movlw	0
  9042   0023FE  6E19               	movwf	___fldiv@b^0,c
  9043   002400  0E00               	movlw	0
  9044   002402  6E1A               	movwf	(___fldiv@b+1)^0,c
  9045   002404  0E00               	movlw	0
  9046   002406  6E1B               	movwf	(___fldiv@b+2)^0,c
  9047   002408  0E00               	movlw	0
  9048   00240A  6E1C               	movwf	(___fldiv@b+3)^0,c
  9049   00240C  0E00               	movlw	0
  9050   00240E  6E2C               	movwf	___fldiv@grs^0,c
  9051   002410  0E00               	movlw	0
  9052   002412  6E2D               	movwf	(___fldiv@grs+1)^0,c
  9053   002414  0E00               	movlw	0
  9054   002416  6E2E               	movwf	(___fldiv@grs+2)^0,c
  9055   002418  0E00               	movlw	0
  9056   00241A  6E2F               	movwf	(___fldiv@grs+3)^0,c
  9057   00241C  0E00               	movlw	0
  9058   00241E  6E31               	movwf	___fldiv@aexp^0,c
  9059   002420  EF4A  F012         	goto	l1049
  9060   002424                     l3313:
  9061   002424  5031               	movf	___fldiv@aexp^0,w,c
  9062   002426  B4D8               	btfsc	status,2,c
  9063   002428  EF18  F012         	goto	u2971
  9064   00242C  EF1A  F012         	goto	u2970
  9065   002430                     u2971:
  9066   002430  EF31  F012         	goto	l3321
  9067   002434                     u2970:
  9068   002434  90D8               	bcf	status,0,c
  9069   002436  3625               	rlcf	___fldiv@rem^0,f,c
  9070   002438  3626               	rlcf	(___fldiv@rem+1)^0,f,c
  9071   00243A  3627               	rlcf	(___fldiv@rem+2)^0,f,c
  9072   00243C  3628               	rlcf	(___fldiv@rem+3)^0,f,c
  9073   00243E  90D8               	bcf	status,0,c
  9074   002440  3619               	rlcf	___fldiv@b^0,f,c
  9075   002442  361A               	rlcf	(___fldiv@b+1)^0,f,c
  9076   002444  361B               	rlcf	(___fldiv@b+2)^0,f,c
  9077   002446  361C               	rlcf	(___fldiv@b+3)^0,f,c
  9078   002448  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  9079   00244A  EF29  F012         	goto	u2981
  9080   00244E  EF2B  F012         	goto	u2980
  9081   002452                     u2981:
  9082   002452  EF2C  F012         	goto	l1052
  9083   002456                     u2980:
  9084   002456  8019               	bsf	___fldiv@b^0,0,c
  9085   002458                     l1052:
  9086   002458  90D8               	bcf	status,0,c
  9087   00245A  362C               	rlcf	___fldiv@grs^0,f,c
  9088   00245C  362D               	rlcf	(___fldiv@grs+1)^0,f,c
  9089   00245E  362E               	rlcf	(___fldiv@grs+2)^0,f,c
  9090   002460  362F               	rlcf	(___fldiv@grs+3)^0,f,c
  9091   002462                     l3321:
  9092   002462  501D               	movf	___fldiv@a^0,w,c
  9093   002464  5C25               	subwf	___fldiv@rem^0,w,c
  9094   002466  501E               	movf	(___fldiv@a+1)^0,w,c
  9095   002468  5826               	subwfb	(___fldiv@rem+1)^0,w,c
  9096   00246A  501F               	movf	(___fldiv@a+2)^0,w,c
  9097   00246C  5827               	subwfb	(___fldiv@rem+2)^0,w,c
  9098   00246E  5020               	movf	(___fldiv@a+3)^0,w,c
  9099   002470  5828               	subwfb	(___fldiv@rem+3)^0,w,c
  9100   002472  A0D8               	btfss	status,0,c
  9101   002474  EF3E  F012         	goto	u2991
  9102   002478  EF40  F012         	goto	u2990
  9103   00247C                     u2991:
  9104   00247C  EF49  F012         	goto	l3327
  9105   002480                     u2990:
  9106   002480  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
  9107   002482  501D               	movf	___fldiv@a^0,w,c
  9108   002484  5E25               	subwf	___fldiv@rem^0,f,c
  9109   002486  501E               	movf	(___fldiv@a+1)^0,w,c
  9110   002488  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
  9111   00248A  501F               	movf	(___fldiv@a+2)^0,w,c
  9112   00248C  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
  9113   00248E  5020               	movf	(___fldiv@a+3)^0,w,c
  9114   002490  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
  9115   002492                     l3327:
  9116   002492  2A31               	incf	___fldiv@aexp^0,f,c
  9117   002494                     l1049:
  9118   002494  0E19               	movlw	25
  9119   002496  6431               	cpfsgt	___fldiv@aexp^0,c
  9120   002498  EF50  F012         	goto	u3001
  9121   00249C  EF52  F012         	goto	u3000
  9122   0024A0                     u3001:
  9123   0024A0  EF12  F012         	goto	l3313
  9124   0024A4                     u3000:
  9125   0024A4  5025               	movf	___fldiv@rem^0,w,c
  9126   0024A6  1026               	iorwf	(___fldiv@rem+1)^0,w,c
  9127   0024A8  1027               	iorwf	(___fldiv@rem+2)^0,w,c
  9128   0024AA  1028               	iorwf	(___fldiv@rem+3)^0,w,c
  9129   0024AC  B4D8               	btfsc	status,2,c
  9130   0024AE  EF5B  F012         	goto	u3011
  9131   0024B2  EF5D  F012         	goto	u3010
  9132   0024B6                     u3011:
  9133   0024B6  EF75  F012         	goto	l3339
  9134   0024BA                     u3010:
  9135   0024BA  802C               	bsf	___fldiv@grs^0,0,c
  9136   0024BC  EF75  F012         	goto	l3339
  9137   0024C0                     l3333:
  9138   0024C0  90D8               	bcf	status,0,c
  9139   0024C2  3619               	rlcf	___fldiv@b^0,f,c
  9140   0024C4  361A               	rlcf	(___fldiv@b+1)^0,f,c
  9141   0024C6  361B               	rlcf	(___fldiv@b+2)^0,f,c
  9142   0024C8  361C               	rlcf	(___fldiv@b+3)^0,f,c
  9143   0024CA  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  9144   0024CC  EF6A  F012         	goto	u3021
  9145   0024D0  EF6C  F012         	goto	u3020
  9146   0024D4                     u3021:
  9147   0024D4  EF6D  F012         	goto	l1058
  9148   0024D8                     u3020:
  9149   0024D8  8019               	bsf	___fldiv@b^0,0,c
  9150   0024DA                     l1058:
  9151   0024DA  90D8               	bcf	status,0,c
  9152   0024DC  362C               	rlcf	___fldiv@grs^0,f,c
  9153   0024DE  362D               	rlcf	(___fldiv@grs+1)^0,f,c
  9154   0024E0  362E               	rlcf	(___fldiv@grs+2)^0,f,c
  9155   0024E2  362F               	rlcf	(___fldiv@grs+3)^0,f,c
  9156   0024E4  062A               	decf	___fldiv@new_exp^0,f,c
  9157   0024E6  A0D8               	btfss	status,0,c
  9158   0024E8  062B               	decf	(___fldiv@new_exp+1)^0,f,c
  9159   0024EA                     l3339:
  9160   0024EA  AE1B               	btfss	(___fldiv@b+2)^0,7,c
  9161   0024EC  EF7A  F012         	goto	u3031
  9162   0024F0  EF7C  F012         	goto	u3030
  9163   0024F4                     u3031:
  9164   0024F4  EF60  F012         	goto	l3333
  9165   0024F8                     u3030:
  9166   0024F8  0E00               	movlw	0
  9167   0024FA  6E31               	movwf	___fldiv@aexp^0,c
  9168   0024FC  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  9169   0024FE  EF83  F012         	goto	u3041
  9170   002502  EF85  F012         	goto	u3040
  9171   002506                     u3041:
  9172   002506  EFA9  F012         	goto	l1060
  9173   00250A                     u3040:
  9174   00250A  0EFF               	movlw	255
  9175   00250C  142C               	andwf	___fldiv@grs^0,w,c
  9176   00250E  6E21               	movwf	??___fldiv^0,c
  9177   002510  0EFF               	movlw	255
  9178   002512  142D               	andwf	(___fldiv@grs+1)^0,w,c
  9179   002514  6E22               	movwf	(??___fldiv+1)^0,c
  9180   002516  0EFF               	movlw	255
  9181   002518  142E               	andwf	(___fldiv@grs+2)^0,w,c
  9182   00251A  6E23               	movwf	(??___fldiv+2)^0,c
  9183   00251C  0E7F               	movlw	127
  9184   00251E  142F               	andwf	(___fldiv@grs+3)^0,w,c
  9185   002520  6E24               	movwf	(??___fldiv+3)^0,c
  9186   002522  5021               	movf	??___fldiv^0,w,c
  9187   002524  1022               	iorwf	(??___fldiv+1)^0,w,c
  9188   002526  1023               	iorwf	(??___fldiv+2)^0,w,c
  9189   002528  1024               	iorwf	(??___fldiv+3)^0,w,c
  9190   00252A  B4D8               	btfsc	status,2,c
  9191   00252C  EF9A  F012         	goto	u3051
  9192   002530  EF9C  F012         	goto	u3050
  9193   002534                     u3051:
  9194   002534  EFA0  F012         	goto	l1061
  9195   002538                     u3050:
  9196   002538                     l3347:
  9197   002538  0E01               	movlw	1
  9198   00253A  6E31               	movwf	___fldiv@aexp^0,c
  9199   00253C  EFA9  F012         	goto	l1060
  9200   002540                     l1061:
  9201   002540  A019               	btfss	___fldiv@b^0,0,c
  9202   002542  EFA5  F012         	goto	u3061
  9203   002546  EFA7  F012         	goto	u3060
  9204   00254A                     u3061:
  9205   00254A  EFA9  F012         	goto	l1060
  9206   00254E                     u3060:
  9207   00254E  EF9C  F012         	goto	l3347
  9208   002552                     l1060:
  9209   002552  5031               	movf	___fldiv@aexp^0,w,c
  9210   002554  B4D8               	btfsc	status,2,c
  9211   002556  EFAF  F012         	goto	u3071
  9212   00255A  EFB1  F012         	goto	u3070
  9213   00255E                     u3071:
  9214   00255E  EFD5  F012         	goto	l3359
  9215   002562                     u3070:
  9216   002562  0E01               	movlw	1
  9217   002564  2619               	addwf	___fldiv@b^0,f,c
  9218   002566  0E00               	movlw	0
  9219   002568  221A               	addwfc	(___fldiv@b+1)^0,f,c
  9220   00256A  221B               	addwfc	(___fldiv@b+2)^0,f,c
  9221   00256C  221C               	addwfc	(___fldiv@b+3)^0,f,c
  9222   00256E  A01C               	btfss	(___fldiv@b+3)^0,0,c
  9223   002570  EFBC  F012         	goto	u3081
  9224   002574  EFBE  F012         	goto	u3080
  9225   002578                     u3081:
  9226   002578  EFD5  F012         	goto	l3359
  9227   00257C                     u3080:
  9228   00257C  C019  F021         	movff	___fldiv@b,??___fldiv
  9229   002580  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
  9230   002584  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
  9231   002588  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
  9232   00258C  3424               	rlcf	(??___fldiv+3)^0,w,c
  9233   00258E  3224               	rrcf	(??___fldiv+3)^0,f,c
  9234   002590  3223               	rrcf	(??___fldiv+2)^0,f,c
  9235   002592  3222               	rrcf	(??___fldiv+1)^0,f,c
  9236   002594  3221               	rrcf	??___fldiv^0,f,c
  9237   002596  C021  F019         	movff	??___fldiv,___fldiv@b
  9238   00259A  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
  9239   00259E  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
  9240   0025A2  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
  9241   0025A6  4A2A               	infsnz	___fldiv@new_exp^0,f,c
  9242   0025A8  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
  9243   0025AA                     l3359:
  9244   0025AA  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9245   0025AC  EFE0  F012         	goto	u3091
  9246   0025B0  502B               	movf	(___fldiv@new_exp+1)^0,w,c
  9247   0025B2  E108               	bnz	u3090
  9248   0025B4  282A               	incf	___fldiv@new_exp^0,w,c
  9249   0025B6  A0D8               	btfss	status,0,c
  9250   0025B8  EFE0  F012         	goto	u3091
  9251   0025BC  EFE2  F012         	goto	u3090
  9252   0025C0                     u3091:
  9253   0025C0  EFED  F012         	goto	l3363
  9254   0025C4                     u3090:
  9255   0025C4  0E00               	movlw	0
  9256   0025C6  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  9257   0025C8  682A               	setf	___fldiv@new_exp^0,c
  9258   0025CA  0E00               	movlw	0
  9259   0025CC  6E19               	movwf	___fldiv@b^0,c
  9260   0025CE  0E00               	movlw	0
  9261   0025D0  6E1A               	movwf	(___fldiv@b+1)^0,c
  9262   0025D2  0E00               	movlw	0
  9263   0025D4  6E1B               	movwf	(___fldiv@b+2)^0,c
  9264   0025D6  0E00               	movlw	0
  9265   0025D8  6E1C               	movwf	(___fldiv@b+3)^0,c
  9266   0025DA                     l3363:
  9267   0025DA  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9268   0025DC  EFFA  F012         	goto	u3100
  9269   0025E0  502B               	movf	(___fldiv@new_exp+1)^0,w,c
  9270   0025E2  E106               	bnz	u3101
  9271   0025E4  042A               	decf	___fldiv@new_exp^0,w,c
  9272   0025E6  B0D8               	btfsc	status,0,c
  9273   0025E8  EFF8  F012         	goto	u3101
  9274   0025EC  EFFA  F012         	goto	u3100
  9275   0025F0                     u3101:
  9276   0025F0  EF08  F013         	goto	l3367
  9277   0025F4                     u3100:
  9278   0025F4  0E00               	movlw	0
  9279   0025F6  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  9280   0025F8  0E00               	movlw	0
  9281   0025FA  6E2A               	movwf	___fldiv@new_exp^0,c
  9282   0025FC  0E00               	movlw	0
  9283   0025FE  6E19               	movwf	___fldiv@b^0,c
  9284   002600  0E00               	movlw	0
  9285   002602  6E1A               	movwf	(___fldiv@b+1)^0,c
  9286   002604  0E00               	movlw	0
  9287   002606  6E1B               	movwf	(___fldiv@b+2)^0,c
  9288   002608  0E00               	movlw	0
  9289   00260A  6E1C               	movwf	(___fldiv@b+3)^0,c
  9290   00260C  0E00               	movlw	0
  9291   00260E  6E29               	movwf	___fldiv@sign^0,c
  9292   002610                     l3367:
  9293   002610  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
  9294   002614  A030               	btfss	___fldiv@bexp^0,0,c
  9295   002616  EF0F  F013         	goto	u3111
  9296   00261A  EF11  F013         	goto	u3110
  9297   00261E                     u3111:
  9298   00261E  EF14  F013         	goto	l3373
  9299   002622                     u3110:
  9300   002622  8E1B               	bsf	(___fldiv@b+2)^0,7,c
  9301   002624  EF15  F013         	goto	l3375
  9302   002628                     l3373:
  9303   002628  9E1B               	bcf	(___fldiv@b+2)^0,7,c
  9304   00262A                     l3375:
  9305   00262A  90D8               	bcf	status,0,c
  9306   00262C  3030               	rrcf	___fldiv@bexp^0,w,c
  9307   00262E  6E1C               	movwf	(___fldiv@b+3)^0,c
  9308   002630  EFCB  F011         	goto	l3289
  9309   002634                     l1047:
  9310   002634  0012               	return		;funcret
  9311   002636                     __end_of___fldiv:
  9312                           	callstack 0
  9313                           
  9314 ;; *************** function _HighISR *****************
  9315 ;; Defined at:
  9316 ;;		line 59 in file "interrupts.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;		None
  9319 ;; Auto vars:     Size  Location     Type
  9320 ;;		None
  9321 ;; Return value:  Size  Location     Type
  9322 ;;                  1    wreg      void 
  9323 ;; Registers used:
  9324 ;;		None
  9325 ;; Tracked objects:
  9326 ;;		On entry : 0/0
  9327 ;;		On exit  : 0/0
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9334 ;;Total ram usage:        0 bytes
  9335 ;; Hardware stack levels used: 1
  9336 ;; This function calls:
  9337 ;;		Nothing
  9338 ;; This function is called by:
  9339 ;;		Interrupt level 2
  9340 ;; This function uses a non-reentrant model
  9341 ;;
  9342                           
  9343                           	psect	intcode
  9344   000008                     __pintcode:
  9345                           	callstack 0
  9346   000008                     _HighISR:
  9347                           	callstack 22
  9348                           
  9349                           ;incstack = 0
  9350   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9351   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9352   00000C  0011               	retfie		f
  9353   00000E                     __end_of_HighISR:
  9354                           	callstack 0
  9355                           
  9356                           	psect	rparam
  9357   000000                     
  9358                           	psect	temp
  9359   00005F                     btemp:
  9360                           	callstack 0
  9361   00005F                     	ds	1
  9362   000000                     int$flags	set	btemp
  9363   000000                     wtemp8	set	btemp+1
  9364   000000                     ttemp5	set	btemp+1
  9365   000000                     ttemp6	set	btemp+4
  9366   000000                     ttemp7	set	btemp+8
  9367                           
  9368                           	psect	idloc
  9369                           
  9370                           ;Config register IDLOC0 @ 0x200000
  9371                           ;	unspecified, using default values
  9372   200000                     	org	2097152
  9373   200000  0FFF               	dw	4095
  9374                           
  9375                           ;Config register IDLOC1 @ 0x200002
  9376                           ;	unspecified, using default values
  9377   200002                     	org	2097154
  9378   200002  0FFF               	dw	4095
  9379                           
  9380                           ;Config register IDLOC2 @ 0x200004
  9381                           ;	unspecified, using default values
  9382   200004                     	org	2097156
  9383   200004  0FFF               	dw	4095
  9384                           
  9385                           ;Config register IDLOC3 @ 0x200006
  9386                           ;	unspecified, using default values
  9387   200006                     	org	2097158
  9388   200006  0FFF               	dw	4095
  9389                           
  9390                           ;Config register IDLOC4 @ 0x200008
  9391                           ;	unspecified, using default values
  9392   200008                     	org	2097160
  9393   200008  0FFF               	dw	4095
  9394                           
  9395                           ;Config register IDLOC5 @ 0x20000A
  9396                           ;	unspecified, using default values
  9397   20000A                     	org	2097162
  9398   20000A  0FFF               	dw	4095
  9399                           
  9400                           ;Config register IDLOC6 @ 0x20000C
  9401                           ;	unspecified, using default values
  9402   20000C                     	org	2097164
  9403   20000C  0FFF               	dw	4095
  9404                           
  9405                           ;Config register IDLOC7 @ 0x20000E
  9406                           ;	unspecified, using default values
  9407   20000E                     	org	2097166
  9408   20000E  0FFF               	dw	4095
  9409                           
  9410                           	psect	config
  9411                           
  9412                           ;Config register CONFIG1L @ 0x300000
  9413                           ;	External Oscillator mode Selection bits
  9414                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9415                           ;	Power-up default value for COSC bits
  9416                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9417   300000                     	org	3145728
  9418   300000  AA                 	db	170
  9419                           
  9420                           ;Config register CONFIG1H @ 0x300001
  9421                           ;	unspecified, using default values
  9422                           ;	Clock Out Enable bit
  9423                           ;	CLKOUTEN = 0x1, unprogrammed default
  9424                           ;	Clock Switch Enable bit
  9425                           ;	CSWEN = 0x1, unprogrammed default
  9426                           ;	Fail-Safe Clock Monitor Enable bit
  9427                           ;	FCMEN = 0x1, unprogrammed default
  9428   300001                     	org	3145729
  9429   300001  FF                 	db	255
  9430                           
  9431                           ;Config register CONFIG2L @ 0x300002
  9432                           ;	unspecified, using default values
  9433                           ;	Master Clear Enable bit
  9434                           ;	MCLRE = 0x1, unprogrammed default
  9435                           ;	Power-up Timer Enable bit
  9436                           ;	PWRTE = 0x1, unprogrammed default
  9437                           ;	Low-power BOR enable bit
  9438                           ;	LPBOREN = 0x1, unprogrammed default
  9439                           ;	Brown-out Reset Enable bits
  9440                           ;	BOREN = 0x3, unprogrammed default
  9441   300002                     	org	3145730
  9442   300002  FF                 	db	255
  9443                           
  9444                           ;Config register CONFIG2H @ 0x300003
  9445                           ;	unspecified, using default values
  9446                           ;	Brown Out Reset Voltage selection bits
  9447                           ;	BORV = 0x3, unprogrammed default
  9448                           ;	ZCD Disable bit
  9449                           ;	ZCD = 0x1, unprogrammed default
  9450                           ;	PPSLOCK bit One-Way Set Enable bit
  9451                           ;	PPS1WAY = 0x1, unprogrammed default
  9452                           ;	Stack Full/Underflow Reset Enable bit
  9453                           ;	STVREN = 0x1, unprogrammed default
  9454                           ;	Debugger Enable bit
  9455                           ;	DEBUG = 0x1, unprogrammed default
  9456                           ;	Extended Instruction Set Enable bit
  9457                           ;	XINST = 0x1, unprogrammed default
  9458   300003                     	org	3145731
  9459   300003  FF                 	db	255
  9460                           
  9461                           ;Config register CONFIG3L @ 0x300004
  9462                           ;	WDT Period Select bits
  9463                           ;	WDTCPS = 0x1F, unprogrammed default
  9464                           ;	WDT operating mode
  9465                           ;	WDTE = OFF, WDT Disabled
  9466   300004                     	org	3145732
  9467   300004  9F                 	db	159
  9468                           
  9469                           ;Config register CONFIG3H @ 0x300005
  9470                           ;	unspecified, using default values
  9471                           ;	WDT Window Select bits
  9472                           ;	WDTCWS = 0x7, unprogrammed default
  9473                           ;	WDT input clock selector
  9474                           ;	WDTCCS = 0x7, unprogrammed default
  9475   300005                     	org	3145733
  9476   300005  FF                 	db	255
  9477                           
  9478                           ;Config register CONFIG4L @ 0x300006
  9479                           ;	unspecified, using default values
  9480                           ;	Write Protection Block 0
  9481                           ;	WRT0 = 0x1, unprogrammed default
  9482                           ;	Write Protection Block 1
  9483                           ;	WRT1 = 0x1, unprogrammed default
  9484                           ;	Write Protection Block 2
  9485                           ;	WRT2 = 0x1, unprogrammed default
  9486                           ;	Write Protection Block 3
  9487                           ;	WRT3 = 0x1, unprogrammed default
  9488                           ;	Write Protection Block 3
  9489                           ;	WRT4 = 0x1, unprogrammed default
  9490                           ;	Write Protection Block 3
  9491                           ;	WRT5 = 0x1, unprogrammed default
  9492                           ;	Write Protection Block 3
  9493                           ;	WRT6 = 0x1, unprogrammed default
  9494                           ;	Write Protection Block 3
  9495                           ;	WRT7 = 0x1, unprogrammed default
  9496   300006                     	org	3145734
  9497   300006  FF                 	db	255
  9498                           
  9499                           ;Config register CONFIG4H @ 0x300007
  9500                           ;	unspecified, using default values
  9501                           ;	Configuration Register Write Protection bit
  9502                           ;	WRTC = 0x1, unprogrammed default
  9503                           ;	Boot Block Write Protection bit
  9504                           ;	WRTB = 0x1, unprogrammed default
  9505                           ;	Data EEPROM Write Protection bit
  9506                           ;	WRTD = 0x1, unprogrammed default
  9507                           ;	Scanner Enable bit
  9508                           ;	SCANE = 0x1, unprogrammed default
  9509                           ;	Low Voltage Programming Enable bit
  9510                           ;	LVP = 0x1, unprogrammed default
  9511   300007                     	org	3145735
  9512   300007  FF                 	db	255
  9513                           
  9514                           ;Config register CONFIG5L @ 0x300008
  9515                           ;	unspecified, using default values
  9516                           ;	UserNVM Program Memory Code Protection bit
  9517                           ;	CP = 0x1, unprogrammed default
  9518                           ;	DataNVM Memory Code Protection bit
  9519                           ;	CPD = 0x1, unprogrammed default
  9520   300008                     	org	3145736
  9521   300008  FF                 	db	255
  9522                           
  9523                           ;Config register CONFIG5H @ 0x300009
  9524                           ;	unspecified, using default values
  9525   300009                     	org	3145737
  9526   300009  FF                 	db	255
  9527                           
  9528                           ;Config register CONFIG6L @ 0x30000A
  9529                           ;	unspecified, using default values
  9530                           ;	Table Read Protection Block 0
  9531                           ;	EBTR0 = 0x1, unprogrammed default
  9532                           ;	Table Read Protection Block 1
  9533                           ;	EBTR1 = 0x1, unprogrammed default
  9534                           ;	Table Read Protection Block 2
  9535                           ;	EBTR2 = 0x1, unprogrammed default
  9536                           ;	Table Read Protection Block 3
  9537                           ;	EBTR3 = 0x1, unprogrammed default
  9538                           ;	Table Read Protection Block 4
  9539                           ;	EBTR4 = 0x1, unprogrammed default
  9540                           ;	Table Read Protection Block 5
  9541                           ;	EBTR5 = 0x1, unprogrammed default
  9542                           ;	Table Read Protection Block 6
  9543                           ;	EBTR6 = 0x1, unprogrammed default
  9544                           ;	Table Read Protection Block 7
  9545                           ;	EBTR7 = 0x1, unprogrammed default
  9546   30000A                     	org	3145738
  9547   30000A  FF                 	db	255
  9548                           
  9549                           ;Config register CONFIG6H @ 0x30000B
  9550                           ;	unspecified, using default values
  9551                           ;	Boot Block Table Read Protection bit
  9552                           ;	EBTRB = 0x1, unprogrammed default
  9553   30000B                     	org	3145739
  9554   30000B  FF                 	db	255
  9555                           tosu	equ	0xFFF
  9556                           tosh	equ	0xFFE
  9557                           tosl	equ	0xFFD
  9558                           stkptr	equ	0xFFC
  9559                           pclatu	equ	0xFFB
  9560                           pclath	equ	0xFFA
  9561                           pcl	equ	0xFF9
  9562                           tblptru	equ	0xFF8
  9563                           tblptrh	equ	0xFF7
  9564                           tblptrl	equ	0xFF6
  9565                           tablat	equ	0xFF5
  9566                           prodh	equ	0xFF4
  9567                           prodl	equ	0xFF3
  9568                           indf0	equ	0xFEF
  9569                           postinc0	equ	0xFEE
  9570                           postdec0	equ	0xFED
  9571                           preinc0	equ	0xFEC
  9572                           plusw0	equ	0xFEB
  9573                           fsr0h	equ	0xFEA
  9574                           fsr0l	equ	0xFE9
  9575                           wreg	equ	0xFE8
  9576                           indf1	equ	0xFE7
  9577                           postinc1	equ	0xFE6
  9578                           postdec1	equ	0xFE5
  9579                           preinc1	equ	0xFE4
  9580                           plusw1	equ	0xFE3
  9581                           fsr1h	equ	0xFE2
  9582                           fsr1l	equ	0xFE1
  9583                           bsr	equ	0xFE0
  9584                           indf2	equ	0xFDF
  9585                           postinc2	equ	0xFDE
  9586                           postdec2	equ	0xFDD
  9587                           preinc2	equ	0xFDC
  9588                           plusw2	equ	0xFDB
  9589                           fsr2h	equ	0xFDA
  9590                           fsr2l	equ	0xFD9
  9591                           status	equ	0xFD8

Data Sizes:
    Strings     78
    Constant    0
    Data        3
    BSS         173
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      94
    BANK0           160    134     159
    BANK1           256      0     146
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_2(CODE[34]), STR_1(CODE[44]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 44
		 -> STR_2(CODE[34]), STR_1(CODE[44]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 44
		 -> STR_2(CODE[34]), STR_1(CODE[44]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2143$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_2(CODE[34]), STR_1(CODE[44]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2090$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2090$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _fullSpeedAhead->_setMotorPWM
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _Colour_decider->___flmul
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Colour_decider

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               103   103      0   59161
                                             88 COMRAM     1     1      0
                                             32 BANK0    102   102      0
                     _Colour_decider
                  _I2C_2_Master_Init
                    _Interrupts_init
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    15     14    5722
                                              0 BANK0     27    13     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    2309
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    7688
                                             49 COMRAM    28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   39399
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                      _reverseDetect
                         _turnLeft45
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _turnRight45                                          6     2      4    8266
                                             24 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _turnRight                                            5     1      4    2157
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    5226
                                             24 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             5     1      4    2157
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    5986
                                             24 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    2721
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        5     1      4    2157
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     665
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5321
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    4086
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2048
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3604
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     494
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2159
                                             24 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
     ___fleq
       ___flsub (ARG)
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
     ___flsub
     ___xxtofl
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
     _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      92       7       57.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      41        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      43        0.0%
BITBIGSFRllllll     2D      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllll     1E      0       0      47        0.0%
BITBIGSFRhll        1E      0       0      36        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRllllll      F      0       0      55        0.0%
BITBIGSFRhhlh        E      0       0      33        0.0%
BITBIGSFRllllll      9      0       0      54        0.0%
BITBIGSFRllllhl      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRllllhh      2      0       0      42        0.0%
BITBIGSFRhlh         2      0       0      35        0.0%
BITBIGSFRlllhl       2      0       0      40        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRhhll        1      0       0      34        0.0%
BITBIGSFRlllllh      1      0       0      45        0.0%
BITBIGSFRlllhh       1      0       0      39        0.0%
BITBIGSFRllh         1      0       0      38        0.0%
BITBIGSFRlhl         1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18F      58        0.0%
DATA                 0      0     18F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 09 11:40:34 2023

               _color_read_Red 3E3E                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
               _color_read_lum 3DEE                   ___fldiv@sign 0029                _color_read_Blue 3EDE  
                           l51 3E3C                             l60 3F2C                             l45 3DEC  
                           l54 3E8C                             l63 3BE2                             l48 414E  
                           l57 3EDC                             l66 2962                             l76 19B0  
          ___wmul@multiplicand 0003               _color_read_Green 3E8E                readColours@vals 000C  
            ??_Interrupts_init 0001                            l140 40E2                            l206 4170  
                          l143 4108                            l215 40B6                            l152 41A4  
                          l137 40E0                            l209 4184                            l146 41AE  
                          l155 4190                            l412 3216                            l405 3A20  
                          l149 419A                            l158 4046                            l450 3998  
                          l418 3B10                            l426 3902                            l434 386C  
                          l442 37D6                            l453 3CF0                            l269 41B4  
                          l197 416C                            l456 3D48                            l465 412E  
                          l730 3586                            l459 3C98                            l724 3740  
                          l735 35CC                            l592 337A                            l579 30AA  
                          l963 3B84                            l956 3B7C                            l993 1BA0  
                          l994 1B8E                            l995 1B54                            _abs 4048  
                          _pad 3A22                            _rel 017C                            wreg 000FE8  
                 ___flmul@aexp 0043                   ___flmul@bexp 0044                   ___flmul@sign 003E  
                 ___flmul@temp 0049                   ___flmul@prod 0045                Colour_decider@i 007A  
                         l1010 1CBA                           l1002 1E70                           l1020 1D78  
                         l1120 2C38                           l1201 3F7A                           l1019 1D8A  
                         l1035 3FC0                           l1123 2D94                           ?_abs 0013  
                         l1060 2552                           l1052 2458                           l1220 3696  
                         l1061 2540                           l1205 407E                           l1134 2D2C  
                         l1047 2634                           l1127 2CD0                           l1231 41B2  
                         l1143 3D9A                           l1208 4086                           l1049 2494  
                         l3001 1AB6                           l1058 24DA                           l1083 229A  
                         l3011 1ACA                           l3003 1ABA                           l1228 4004  
                         l3101 1D0E                           l3021 1ADE                           l3013 1ACE  
                         l3005 1ABE                           l1165 3A44                           l1086 212C  
                         l1174 29F0                           l1079 1F36                           l3103 1D1C  
                         l3111 1D3A                           l3023 1AE2                           l3015 1AD2  
                         l3007 1AC2                           l3031 1AF2                           l1096 225C  
                         l1088 21A4                           l1176 29F8                           l1089 2192  
                         l3105 1D24                           l3113 1D48                           l3041 1B62  
                         l3033 1AF6                           l3025 1AE6                           l3017 1AD6  
                         l3009 1AC6                           l3201 3E34                           l1169 3A9A  
                         l1177 2A3E                           l4001 2DDC                           l3123 1D9A  
                         l3131 1DF0                           l3115 1D4C                           l3107 1D28  
                         l3051 1B8C                           l3043 1B6E                           l3035 1B20  
                         l3027 1AEA                           l3019 1ADA                           l3211 3E8E  
                         l1195 34C8                           l4011 2DF8                           l4003 2DE4  
                         l1188 2BE0                           l3141 1E42                           l3133 1E00  
                         l3125 1DA6                           l3117 1D5A                           l3109 1D38  
                         l3061 1BE2                           l3053 1BAE                           l3045 1B72  
                         l3037 1B3C                           l3029 1AEE                           l3213 3ED4  
                         l3205 3E3E                           l4021 2E3C                           l4013 2E00  
                         l4005 2DE8                           l3311 241C                           l3303 23D2  
                         l3151 1E60                           l3143 1E48                           l3135 1E10  
                         l3127 1DB4                           l3119 1D70                           l3071 1C1C  
                         l3063 1BF0                           l3055 1BBE                           l3047 1B80  
                         l3039 1B4C                           l3223 3C40                           l3231 3CAE  
                         l3207 3E84                           l4023 2E5A                           l4031 2EDA  
                         l4015 2E08                           l4007 2DEC                           l3321 2462  
                         l3313 2424                           l3305 23EC                           l3401 1EDA  
                         l3145 1E4A                           l3137 1E30                           l3129 1DEE  
                         l3081 1C88                           l3073 1C1E                           l3065 1BFE  
                         l3049 1B82                           l3225 3C54                           l3233 3CC4  
                         l3217 3EDE                           l3241 4170                           l3161 33BC  
                         l4033 2F10                           l4025 2E6E                           l4017 2E1C  
                         l4009 2DF0                           l3331 24BA                           l3323 2480  
                         l3315 2434                           l3307 23FC                           l3251 22B8  
                         l3411 1F10                           l3403 1EE0                           l3147 1E50  
                         l3139 1E34                           l3091 1CE0                           l3083 1C8A  
                         l3075 1C28                           l3067 1C0A                           l3059 1BD2  
                         l3227 3C6C                           l3235 3CF2                           l3219 3F24  
                         l3243 4180                           l3171 345E                           l3163 33C0  
                         l3155 337C                           l4027 2E7C                           l4019 2E28  
                         l3341 24F8                           l3333 24C0                           l3325 2482  
                         l3317 2448                           l3309 240C                           l3253 22C8  
                         l3261 22F2                           l3245 229C                           l3501 2270  
                         l3413 1F20                           l3405 1EEE                           l3149 1E5E  
                         l3085 1C9A                           l3069 1C0E                           l3077 1C2E  
                         l3237 3D06                           l3229 3C9A                           l2701 2FF2  
                         l3165 33D0                           l3157 33A0                           l4029 2E98  
                         l3351 2562                           l3343 24FC                           l3335 24CA  
                         l3327 2492                           l3319 2456                           l3271 231E  
                         l3263 2302                           l3255 22D8                           l3247 22A8  
                         l3503 227E                           l3431 1FA2                           l3423 1F6A  
                         l3415 1F26                           l3407 1EF0                           l3095 1CF4  
                         l3079 1C54                           l3087 1CAA                           l3239 3D1C  
                         l3191 40CA                           l2703 3020                           l2711 305A  
                         l3175 348E                           l3167 33EC                           l3159 33AE  
                         l3361 25C4                           l3353 256E                           l3345 250A  
                         l3337 24D8                           l3329 24A4                           l3273 232E  
                         l3281 2358                           l3265 2308                           l3257 22E8  
                         l3249 22B6                           l3521 36C6                           l3505 2280  
                         l3441 1FEC                           l3433 1FBA                           l3425 1F76  
                         l3417 1F46                           l3409 1F00                           l3097 1CFE  
                         l3089 1CD0                           l3513 3F7C                           l2801 30C8  
                         l3193 40CC                           l3185 40B8                           l2713 306A  
                         l2705 3040                           l2721 321C                           l3169 3408  
                         l3371 2622                           l3363 25DA                           l3355 257C  
                         l3347 2538                           l3339 24EA                           l3291 239A  
                         l3283 2368                           l3275 233E                           l3267 230E  
                         l3259 22EA                           l3531 373E                           l3523 36D6  
                         l3507 2286                           l3451 2042                           l3443 1FFC  
                         l3435 1FC6                           l3427 1F80                           l3419 1F56  
                         l3099 1D0C                           l3515 3F8C                           l2811 3192  
                         l2803 311C                           l3195 40CE                           l3187 40C2  
                         l2715 308A                           l2707 3042                           l2731 327C  
                         l2723 322A                           l2651 35F2                           l3179 34A0  
                         l3603 3F2E                           l3373 2628                           l3365 25F4  
                         l3357 25A6                           l3285 237E                           l3277 234E  
                         l3269 231C                           l3525 3704                           l3541 3536  
                         l3509 228A                           l3461 20E6                           l3453 205E  
                         l3445 2008                           l3437 1FD2                           l3429 1F96  
                         l2813 31D6                           l2805 3130                           l2901 3AB8  
                         l3701 1172                           l3189 40C8                           l3197 4132  
                         l3621 3DC4                           l3613 3D9C                           l2709 3054  
                         l2741 32F2                           l2733 329A                           l2725 324A  
                         l2653 35FC                           l2661 3FC2                           l2821 29A8  
                         l3605 3F3A                           l3375 262A                           l3367 2610  
                         l3359 25AA                           l3287 238E                           l3295 23AE  
                         l3279 2350                           l3527 3714                           l3519 3698  
                         l3551 35C4                           l3543 3546                           l3535 34CA  
                         l3471 213C                           l3463 20F4                           l3455 206A  
                         l3447 2018                           l3439 1FE0                           l3391 1E9E  
                         l3383 1E72                           l2671 4126                           l2807 3134  
                         l2903 3AC4                           l2911 386E                           l3711 12A4  
                         l3703 1182                           l3631 3DDE                           l3623 3DCE  
                         l3615 3DA0                           l3199 3DEE                           l2751 335A  
                         l2743 3312                           l2735 32A2                           l2727 324E  
                         l2719 3218                           l2655 361A                           l2647 35CE  
                         l2663 3FCE                           l2831 2A16                           l2823 29C8  
                         l2815 2964                           l3607 3F56                           l3369 2614  
                         l3297 23BE                           l3289 2396                           l3529 3738  
                         l3553 35CA                           l3545 3554                           l3537 34F8  
                         l3473 214A                           l3465 2112                           l3457 2086  
                         l3449 2032                           l3393 1EAE                           l3385 1E7E  
                         l3561 2C02                           l2761 3B34                           l2809 3176  
                         l2905 3AD0                           l2913 3892                           l2921 38D2  
                         l3801 17B2                           l3721 1418                           l3713 1320  
                         l3705 11BA                           l3641 3DE8                           l3633 3DE0  
                         l3625 3DD8                           l3617 3DAA                           l2681 2F56  
                         l2745 3324                           l2737 32B6                           l2729 325C  
                         l2657 3650                           l2649 35E0                           l2665 3FE0  
                         l2841 2A50                           l2833 2A26                           l2825 29E4  
                         l2817 2984                           l3609 3F72                           l3299 23BE  
                         l3547 3566                           l3539 3508                           l3483 21B4  
                         l3491 21FC                           l3475 214E                           l3467 211C  
                         l3459 20B0                           l3395 1EBE                           l3387 1E8C  
                         l3571 2C7A                           l3563 2C48                           l2771 3B6E  
                         l2763 3B3C                           l2755 3B12                           l2907 3AE0  
                         l2923 38EA                           l2915 38AA                           l2931 3820  
                         l3803 17E4                           l3731 1488                           l3707 11CC  
                         l3715 1378                           l3643 3DEA                           l3635 3DE2  
                         l3627 3DDA                           l3619 3DBA                           l3651 2736  
                         l2691 2F98                           l2683 2F5A                           l2675 2F24  
                         l2739 32C4                           l2747 332A                           l2667 3FE4  
                         l2843 2A56                           l2851 2B48                           l2835 2A32  
                         l2827 2A00                           l2819 2998                           l3549 3574  
                         l3493 2216                           l3485 21C0                           l3477 215C  
                         l3469 212A                           l3397 1EC4                           l3389 1E8E  
                         l3581 2D02                           l3573 2C86                           l3565 2C5E  
                         l3557 2BE4                           l2773 3B70                           l2765 3B4A  
                         l2757 3B1A                           l2669 410A                           l2941 3928  
                         l2909 3AF8                           l2917 38B6                           l2933 382C  
                         l2925 37D8                           l3821 18E2                           l3805 1816  
                         l3741 14F8                           l3717 13AA                           l3709 1248  
                         l3661 0E50                           l3637 3DE4                           l3629 3DDC  
                         l3653 27CA                           l3901 3A12                           l3645 3B86  
                         l2693 2FB6                           l2685 2F68                           l2677 2F28  
                         l2749 333A                           l2781 3A3C                           l2861 2BB0  
                         l2853 2B62                           l2845 2AD8                           l2837 2A3A  
                         l2829 2A10                           ?_pad 0011                           l3495 222A  
                         l3487 21CE                           l3479 218A                           l3399 1ED4  
                         l3591 2D40                           l3583 2D0E                           l3575 2CB8  
                         l3559 2BF4                           l2775 3B76                           l2767 3B50  
                         l2759 3B2C                           l2951 3980                           l2943 3940  
                         l2919 38C2                           l2927 37FC                           l2935 383C  
                         l3823 191C                           l3831 195A                           l3807 1848  
                         l3751 1596                           l3743 1532                           l3719 13DC  
                         l3727 1424                           l3671 0F1E                           l3663 0E7A  
                         l2871 4188                           l3639 3DE6                           l3655 27FE  
                         l3647 2636                           l3911 377E                           l3903 3A14  
                         l2695 2FBE                           l2687 2F88                           l2679 2F36  
                         l2791 4048                           l2783 3A50                           l2863 2BC0  
                         l2855 2B80                           l2847 2ADE                           l2839 2A46  
                         l3497 2244                           l3489 21F8                           l2961 19DE  
                         l2953 19B2                           l3593 2D64                           l3585 2D1C  
                         l3577 2CBA                           l3569 2C72                           l2769 3B66  
                         l2945 394C                           l2937 3854                           l2929 3814  
                         l3841 199C                           l3817 187E                           l3729 1456  
                         l3737 1494                           l3681 0FAC                           l3665 0E86  
                         l2873 418C                           l3657 2896                           l3649 2702  
                         l3913 378A                           l3905 3A1E                           l2881 4196  
                         l2697 2FD2                           l2689 2F8C                           l2793 4062  
                         l2785 3A64                           l2777 3A22                           l2857 2B9A  
                         l2849 2AE4                           l3921 3D4A                           l3499 2260  
                         l2971 1A18                           l2963 19EE                           l2955 19BE  
                         l3595 2D74                           l3587 2D3A                           l3579 2CC6  
                         l2947 3958                           l2939 3904                           l3819 18B0  
                         l3739 14C6                           l3763 1612                           l3691 105C  
                         l3683 0FB4                           l3667 0EB6                           l2795 40E2  
                         l2867 41A6                           l2875 419C                           l3659 28CA  
                         l3915 3796                           l3907 3742                           l3851 415A  
                         l2891 4042                           l2883 4008                           l2699 2FE0  
                         l2787 3A68                           l2779 3A30                           l2859 2BAA  
                         l3923 3D5C                           l2981 1A46                           l2973 1A1E  
                         l2965 19FE                           l2957 19CC                           l3597 2D82  
                         l3589 2D3C                           l2949 3968                           l3845 19A8  
                         l3765 1644                           l3757 15A2                           l3749 1570  
                         l3693 10B2                           l3685 1008                           l3677 0F28  
                         l3669 0EEA                           l2797 40F2                           l2869 41AA  
                         l2877 41A0                           l3909 3766                           l3917 37A6  
                         l3853 415C                           l2893 4044                           l2885 400C  
                         l3861 4088                           l2789 3A86                           l3925 3D64  
                         l2991 1A7A                           l2983 1A48                           l2975 1A30  
                         l2967 1A00                           l2959 19CE                           l3599 2D84  
                         l2799 30AC                           l3767 1676                           l3783 1700  
                         l3759 1606                           l3687 103A                           l3679 0F7A  
                         l3919 37BE                           l3855 4166                           l2887 4014  
                         l2879 4192                           l3863 408C                           l3927 3D6C  
                         l2985 1A58                           l2993 1A82                           l2977 1A32  
                         l2969 1A08                           l2897 3A9C                           l3785 1732  
                         l3777 16B8                           l3697 10BE                           l3689 1040  
                         l3881 39AE                           l3857 4168                           l3849 4150  
                         l2889 401C                           l3865 409A                           l3929 3D88  
                         l2995 1A92                           l2987 1A68                           l2979 1A38  
                         l2899 3AA0                           l3787 1764                           l3779 16F4  
                         l3699 10D2                           l3891 39F0                           l3883 39B0  
                         l3859 416A                           l3867 409E                           l3971 2D9A  
                         l2997 1AA4                           l2989 1A78                           l3797 17A6  
                         l3893 39FA                           l3885 39B2                           l3877 399A  
                         l3981 2DB4                           l3973 2D9E                           l2999 1AB2  
                         l3895 39FC                           l3887 39C8                           l3879 39AC  
                         l3991 2DBE                           l3983 2DB6                           l3975 2DA2  
                         l3897 3A06                           l3889 39CC                           l3993 2DC4  
                         l3985 2DB8                           l3977 2DA6                           l3969 2D96  
                         l3899 3A08                           l3995 2DC8                           l3987 2DBA  
                         l3979 2DB2                           l3997 2DCC                           l3989 2DBC  
                         l3999 2DD4                           STR_1 0E01                           STR_2 0E2D  
                         u2000 361A                           u2001 3616                           u2010 3650  
                         u2011 364C                           u2100 322A                           u2020 4004  
                         u2101 3226                           u2021 4000                           u2030 2F36  
                         u2110 325C                           u2031 2F32                           u2111 3258  
                         u3000 24A4                           u2040 2F68                           u2120 329A  
                         u2200 3A86                           u3001 24A0                           u2041 2F64  
                         u2121 3296                           u2201 3A82                           u3010 24BA  
                         u2130 32C4                           u2210 4062                           u3011 24B6  
                         u2051 2F92                           u2131 32C0                           u2211 405E  
                         u3100 25F4                           u3020 24D8                           u2220 40F2  
                         u2060 2FB6                           u2140 32F2                           u2300 2A10  
                         u3101 25F0                           u3021 24D4                           u2221 40EE  
                         u2061 2FB2                           u2141 32EE                           u2301 2A0C  
                         u3110 2622                           u3030 24F8                           u2230 4108  
                         u2070 2FE0                           u2150 333A                           u2310 2A26  
                         u3111 261E                           u3031 24F4                           u2231 4104  
                         u2071 2FDC                           u2151 3336                           u2311 2A22  
                         u3040 250A                           u3200 20D0                           u3120 1E8C  
                         u2160 3B2C                           u2240 30C8                           u2400 38EA  
                         u2080 3020                           u2320 2B62                   _BAUD4CONbits 000EE9  
                         u3041 2506                           u3121 1E88                           u2161 3B28  
                         u2241 30C4                           u2401 38E6                           u2081 301C  
                         u2321 2B5E                           u3050 2538                           u3210 212A  
                         u3130 1E9E                           u2170 3B4A                           u2250 3192  
                         u2410 3902                           u2090 306A                           u2330 2B80  
                         u3051 2534                           u3211 2126                           u3131 1E9A  
                         u2171 3B46                           u2251 318E                           u2411 38FE  
                         u2091 3066                           u2331 2B7C                           u3060 254E  
                         u3300 227E                           u3220 214A                           u3140 1EAE  
                         u2500 1A46                           u2180 3B66                           u2420 3854  
                         u2340 2B9A                           u2260 2994                           u3061 254A  
                         u3301 227A                           u3221 2146                           u3205 20C6  
                         u3141 1EAA                           u2501 1A42                           u2181 3B62  
                         u2421 3850                           u2341 2B96                           u2261 298E  
                         u3070 2562                           u3310 36C6                           u3230 215C  
                         u3150 1EEE                           u2510 1A58                           u2430 386C  
                         u2190 3A30                           u2350 2BAA                           u2270 2996  
                         u3071 255E                           u3311 36C2                           u3231 2158  
                         u3151 1EEA                           u2511 1A54                           u4007 3C5E  
                         u2431 3868                           u2191 3A2C                           u2351 2BA6  
                         u3080 257C                           u3320 3704                           u3240 218A  
                         u3160 1F00                           u2600 1BA0                           u2520 1A68  
                         u3400 2C02                           u2440 3980                           u2360 4030  
                         u2280 29A8                           u3081 2578                           u3321 3700  
                         u3241 2186                           u3161 1EFC                           u2601 1B9C  
                         u2521 1A64                           u3401 2BFE                           u2441 397C  
                         u4017 3C8A                           u2361 4028                           u2281 29A4  
                         u3090 25C4                           u3330 3738                           u3250 21A0  
                         u3170 1F10                           u2610 1BAE                           u2530 1AA4  
                         u3410 2C5E                           u2450 3998                           u2290 29E4  
                         _T2PR 000FBC                           u3091 25C0                           u3331 3734  
                         u3251 219C                           u3171 1F0C                           u2611 1BAA  
                         u2531 1AA0                           u3411 2C5A                           u2451 3994  
                         u4027 3AD6                           u2291 29E0                           u3340 34F8  
                         u3260 21B4                           u3180 1F46                           u2700 1D0C  
                         u2620 1BBE                           u2540 1AB2                           u2460 19CC  
                         u3420 2CB4                           u2380 3AF8                           u3341 34F4  
                         u3261 21B0                           u3181 1F42                           u2701 1D08  
                         u2621 1BBA                           u2541 1AAE                           u2461 19C8  
                         u3421 2CB0                           u4037 395E                           u2381 3AF4  
                         u3501 0E80                           u3350 3536                           u3270 21CE  
                         u3190 1F56                           u2710 1D1C                           u2630 1BF0  
                         u2550 1B20                           u2470 19DE                           u3430 2CFE  
                         u2390 3B10                           u3510 0F7A                           u3351 3532  
                         u3271 21CA                           u3191 1F52                           u2711 1D18  
                         u2631 1BEC                           u2551 1B1C                           u2471 19DA  
                         u3431 2CFA                           u2391 3B0C                           u3511 0F76  
                         u3360 3554                           u3280 2216                           u2800 1E00  
                         u2720 1D38                           u2640 1BFE                           u2560 1B38  
                         u2480 19EE                           u3440 2D1C                           u3600 1456  
                         u3520 1008                           u3361 3550                           u3281 2212  
                         u2801 1DFC                           u2721 1D34                           u2641 1BFA  
                         u2561 1B32                           u2481 19EA                           u3441 2D18  
                         u3601 1452                           u3521 1004                           u3370 3574  
                         u3290 2244                           u2810 1E10                           u2730 1D48  
                         u2650 1C1C                           u2570 1B3A                           u2490 1A30  
                         u3450 2D2C                           u3610 1488                           u3530 105C  
                         u2378 4032                           u3371 3570                           u3291 2240  
                         u2811 1E0C                           u2731 1D44                           u2651 1C18  
                         u2491 1A2C                           u3451 2D28                           u3611 1484  
                         u3531 1058                           u2900 22C8                           u3380 35C4  
                         u2820 1E30                           u2740 1D5A                           u2660 1C54  
                         u2580 1B62                           u3460 2D3A                           u3700 1732  
                         u3620 14C6                           u3540 10B2                           u2901 22C4  
                         u3381 35C0                           u2821 1E2C                           u2741 1D56  
                         u2661 1C50                           u2581 1B5E                           u3461 2D36  
                         u3701 172E                           u3621 14C2                           u3541 10AE  
                         u2910 22D8                           u2830 1E42                           u2750 1D70  
                         u2670 1C9A                           u2590 1B80                           u3470 2D74  
                         u3390 2BF4                           u3710 1764                           u3630 14F8  
                         u3550 10D2                           u2911 22D4                           u2831 1E3E  
                         u2751 1D6C                           u2671 1C96                           u2591 1B7C  
                         u3471 2D70                           u3391 2BF0                           u3711 1760  
                         u3631 14F4                           u3551 10CE                           u2920 231C  
                         u2840 1E5E                           u2760 1D86                           u2680 1CD0  
                         u3480 2D82                           u3800 1956                           u3720 17A2  
                         u3640 1532                           u3560 1182                           u2921 2318  
                         u2841 1E5A                           u2761 1D82                           u2681 1CCC  
                         u3481 2D7E                           u3801 1952                           u3721 179E  
                         u3641 152E                           u3561 117E                           u2930 232E  
                         u2770 1D9A                           u2690 1CE0                           u3810 1998  
                         u3730 17E4                           u3650 156C                           u3570 11CC  
                         u2850 33A0                           u3490 3F72                           u2931 232A  
                         u2771 1D96                           u2691 1CDC                           u3811 1994  
                         u3731 17E0                           u3651 1568                           u3571 11C8  
                         u2851 339C                           u3491 3F6E                           u2940 233E  
                         u2780 1DB4                           u3740 1816                           u3660 1596  
                         u3580 13AA                           u3820 40B6                           u1980 35E0  
                         u2860 33EC                           u3900 2E5A                           u2941 233A  
                         u2781 1DB0                           u3741 1812                           u3661 1592  
                         u3581 13A6                           u3821 40B2                           u1981 35DC  
                         u2861 33E8                           u3901 2E56                           u2950 237E  
                         u2790 1DEE                           u3750 1848                           u3670 1644  
                         u3590 13DC                           u1990 35F2                           u2870 3408  
                         u2951 237A                           u2791 1DEA                           u3751 1844  
                         u3671 1640                           u3591 13D8                           u1991 35EE  
                         u2871 3404                           u2960 23BE                           u3760 187A  
                         u3680 1676                           u3840 37BE                           u2880 4180  
                         u2961 23BA                           u3761 1876                           u3681 1672  
                         u3841 37BA                           u2881 417C                           u2970 2434  
                         u2890 22B6                           u3770 18B0                           u3690 16B4  
                         u3850 37D6                           u2971 2430                           u2891 22B2  
                         u3771 18AC                           u3691 16B0                           u3851 37D2  
                         u2980 2456                           u3780 18E2                           u2981 2452  
                         u3781 18DE                           u3917 2E74                           u2990 2480  
                         u3790 191C                           u2991 247C                           u3791 1918  
                         u3927 379C                           u3937 3DB0                           u3947 3CB8  
                         u3957 3CE2                           u3967 3832                           u3977 3D10  
                         u3987 3D3A                           u3997 38C8                           abs@a 0013  
                         _dbuf 015C                           _main 2D96                           _dtoa 2964  
                         _prec 00E8                           _vals 0188                           pad@i 0018  
                         pad@p 0015                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           btemp 005F                           _stop 3A9C  
                         prodh 000FF4                           prodl 000FF3                           start 000E  
              ___fldiv@new_exp 002A         __end_of_color_read_Red 3E8E                __end_of_HighISR 000E  
       __end_of_color_read_lum 3E3E                   ___param_bank 000000                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 3C9A  
              __end_of___aodiv 30AC                __end_of___fladd 1E72                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 337C                __end_of___fldiv 2636  
              __end_of___flmul 229C                __end_of___flsub 3FC2                    colour_rel@B 004A  
                  colour_rel@G 0046                          ?_stop 0014                    colour_rel@L 0036  
                  colour_rel@R 0042                __end_of___lwdiv 3B86                          i2l274 000A  
                 vfpfcnvrt@fmt 0041        __end_of_sendCharSerial4 4186     __end_of_I2C_2_Master_Start 41B0  
   __end_of_I2C_2_Master_Write 4192                          _flags 00EC                          _fputc 35CE  
                        _fputs 3FC2                          pad@fp 0011                          _width 00E6  
                        _putch 41B2                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                          tablat 000FF5                          plusw2 000FDB  
             ??_Colour_decider 004F                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 000FD8                          wtemp8 0060  
              __end_of_sprintf 3D9C        __end_of_color_read_Blue 3F2E          _I2C_2_Master_RepStart 4192  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 3BE4  
                 __end_of_main 2F24                   __end_of_dtoa 2BE2                   __end_of_stop 3B12  
              _colour_rel$2477 003A                _colour_rel$2478 003E                         ??_main 0059  
                       ??_dtoa 0026                         ??_stop 0018                  __activetblptr 000001  
            Colour_decider@Hue 007C              Colour_decider@rel 004D                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         ?_fputs 000A                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         _RG6PPS 000E88  
                    ??_HighISR 0001       __end_of_color_click_init 3DEE                         _RX4PPS 000E15  
                       _TX4REG 000EE4               __end_of___xxtofl 2D96                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 0057                         ___flge 34CA                         ___fleq 3698  
                    ??___aodiv 0011                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 410A                      ??___fldiv 0021                      ??___flmul 003A  
                    ??___flsub 0019                      ??___lwdiv 000B                         clear_0 3C14  
                       clear_1 3C20                         _motorL 00F6                         _motorR 00ED  
                       isa$std 000001                         pad@buf 0013                         dtoa@fp 001C  
                       fputc@c 0001                         fputs@c 000E                         fputs@i 000F  
                 __pdataCOMRAM 005E                         fputs@s 000A                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 3F7C  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0059               __end_of_turnLeft 3904                     ___flge@ff1 0001  
                   ___flge@ff2 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0019                     ___fleq@ff2 001D  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 3C2E       __end_of_color_read_Green 3EDE         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001               ?_color_read_Blue 0005                _Interrupts_init 41B4  
               __pcstackCOMRAM 0001                  _fullSpeedBack 3904                   __pidataBANK1 41B0  
                __end_of_fputc 3698                  __end_of_fputs 4006                  __end_of_putch 41B4  
                      ??_fputc 0005                        ??_fputs 000E           Colour_decider@F14306 0150  
        __end_of_reverseDetect 3C9A                        ??_putch 0001                     __pbssBANK0 00E6  
                   __pbssBANK1 0100                reverseDetect@mL 0019                reverseDetect@mR 001B  
            _color_writetoaddr 4130                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 0001                        ?___fleq 0019             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                   ?_turnRight45 0019  
          ??_color_writetoaddr 0004                  colour_rel@rel 0034                      ?___xxtofl 0001  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                     _colour_rel 2636        __end_of_Interrupts_init 41B6  
       color_writetoaddr@value 0003               ??_color_read_Red 0007                        _HighISR 0008  
             ??_color_read_lum 0007      __end_of_color_writetoaddr 4150             _I2C_2_Master_Start 41A6  
                   _initUSART4 4150             _I2C_2_Master_Write 4186                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A        sendStringSerial4@string 0002  
                      ___aodiv 2F24                        ___fladd 19B2                        ___aomod 3218  
                      ___fldiv 229C                        ___flmul 1E72                        ___flsub 3F7C  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 3B12            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0051                   __psmallconst 0E00                   turnLeft45@mL 0019  
                 turnLeft45@mR 001B                        __pcinit 3BE4                        __ramtop 0E00  
                    ?_turnLeft 0014                        __ptext0 2D96                        __ptext1 3D4A  
                      __ptext2 3F2E                        __ptext3 337C                        __ptext4 2964  
                      __ptext5 3A22                        __ptext6 3FC2                        __ptext7 35CE  
                      __ptext8 41B2                        __ptext9 4048                      _T2CONbits 000FBD  
                   ??___xxtofl 0005                      _T2HLTbits 000FBE                  _RxBufWriteCnt 005D  
            color_read_lum@tmp 000A                        main@buf 0080                        _sprintf 3D4A  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 3C2E  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
              ??_fullSpeedBack 0018             ??_color_click_init 0005              __end_of_vfpfcnvrt 34CA  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 0047                     ??_vfprintf 0057  
              _initDCmotorsPWM 399A                     ??_turnLeft 0018             setMotorPWM@negDuty 0013  
            __end_of_turnRight 386E                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                    ___fldiv@grs 002C                    ___fldiv@rem 0025  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 0032               ?_Interrupts_init 0001  
                  ___flmul@grs 003F                    _CCP1CONbits 000FAB                     main@colour 00E4  
                 _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001             ??_color_read_Green 0007  
                   _turnLeft45 3CF2                 __end_of___flge 35CE                 __end_of___fleq 3742  
               _fullSpeedAhead 3742                    vfpfcnvrt@ap 0043                    vfpfcnvrt@cp 004F  
                  vfpfcnvrt@fp 003F                 __end_of___wmul 4130                  __pidataCOMRAM 41B6  
          start_initialization 3BE4                    __end_of_abs 4088                    __end_of_pad 3A9C  
                _TxBufWriteCnt 005B            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 3A22  
                  vfprintf@fmt 0053         __end_of_fullSpeedAhead 37D8                       ??___flge 0009  
                     ??___fleq 0021                       ??___wmul 0005                  ??_readColours 000E  
                  __pdataBANK1 0190                      ___fladd@a 0005                      ___fladd@b 0001  
                    ___fldiv@a 001D                      ___fldiv@b 0019                      ___flmul@a 0036  
                    ___flmul@b 0032                    __pbssCOMRAM 005A                      ___flsub@a 0015  
                    ___flsub@b 0011                  __pcstackBANK0 0060               ___aodiv@dividend 0001  
                     ?_HighISR 0001          Colour_decider@RGB_col 0066               ___lwdiv@dividend 0007  
                    _dtoa$2171 002E                    ?_turnLeft45 0019                ?_fullSpeedAhead 0014  
                    __pintcode 0008                       ?___aodiv 0001                       ?___fladd 0001  
                     ?___aomod 0001                       ?___fldiv 0019               ___aodiv@quotient 0013  
                     ?___flmul 0032                       ?___flsub 0011            _Colour_decider$2479 0060  
                     ?___lwdiv 0007           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00            __end_of_readColours 3BE4              _I2C_2_Master_Idle 40E2  
            _I2C_2_Master_Init 40B8              _I2C_2_Master_Read 4006              _I2C_2_Master_Stop 419C  
                _low_threshold 00EA                   _RxBufReadCnt 005C             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 0060                 colour_rel@vals 0032              _sendStringSerial4 4088  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
           ?_sendStringSerial4 0002                       _PIE4bits 000E2D                    turnRight@mL 0014  
                  turnRight@mR 0016                       _PIR4bits 000E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 000EDA                 _Colour_decider 0E50  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 337C  
    __end_of_I2C_2_Master_Idle 410A      __end_of_I2C_2_Master_Init 40E2      __end_of_I2C_2_Master_Read 4048  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 41A6                   setMotorPWM@m 000E  
                     _DataFlag 005E    I2C_2_Master_Write@data_byte 0002              ??_color_read_Blue 0007  
                 _TxBufReadCnt 005A                      _turnRight 37D8      __end_of_sendStringSerial4 40B8  
                 ??_colour_rel 0036                  _reverseDetect 3C40  __end_of_I2C_2_Master_RepStart 419C  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 3218                   ??_initUSART4 0001  
                     __Hrparam 0000         __end_of_Colour_decider 19B2                     vfprintf@ap 0055  
                     __Lrparam 0000                     vfprintf@fp 0051          __end_of_fullSpeedBack 399A  
                 __Lsmallconst 0E00                    _readColours 3B86                     ?_vfpfcnvrt 003F  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 2964  
                   _ANSELDbits 000EA7                     sprintf@fmt 0062                       ___xxtofl 2BE2  
              ___lwdiv@divisor 0009             __end_of_initUSART4 416E                ___lwdiv@counter 000D  
                   ?_turnRight 0014                       __ptext10 3218                       __ptext11 2F24  
                     __ptext20 4006                       __ptext12 4088                       __ptext21 4150  
                     __ptext13 416E                       __ptext30 40E2                       __ptext22 399A  
                     __ptext14 3B86                       __ptext31 40B8                       __ptext23 3742  
                     __ptext15 3DEE                       __ptext40 3904                       __ptext32 41B4  
                     __ptext24 2636                       __ptext16 3E3E                       __ptext41 30AC  
                     __ptext33 0E50                       __ptext25 3D9C                       __ptext17 3E8E  
                     __ptext50 229C                       __ptext42 410A                       __ptext34 3C9A  
                     __ptext26 4130                       __ptext18 3EDE                       __ptext43 3B12  
                     __ptext35 37D8                       __ptext27 4186                       __ptext19 4192  
                     __ptext44 2BE2                       __ptext36 3CF2                       __ptext28 419C  
                     __ptext45 3F7C                       __ptext37 386E                       __ptext29 41A6  
                     __ptext46 19B2                       __ptext38 3C40                       __ptext47 1E72  
                     __ptext39 3A9C                       __ptext48 34CA                       __ptext49 3698  
               ?_reverseDetect 0019                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   turnLeft@mL 0014                     turnLeft@mR 0016                ?_Colour_decider 004B  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005F  
                     _vfprintf 3F2E                  ??_turnRight45 001D                       _turnLeft 386E  
             ___aomod@dividend 0001                    _setMotorPWM 30AC                  turnRight45@mL 0019  
                turnRight45@mR 001B                       intlevel2 0000                      sprintf@ap 006E  
               _high_threshold 0190               ??_fullSpeedAhead 0018                   ??_turnLeft45 001D  
              ___aomod@divisor 0009                    ??_vfpfcnvrt 0045                ___aomod@counter 0011  
             _color_click_init 3D9C                       sprintf@f 0070                       sprintf@s 0060  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C            __end_of_turnRight45 3CF2  
              ??_reverseDetect 001D                    ??_turnRight 0018                  ___fladd@signs 000D  
           __end_of_turnLeft45 3D4A                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
              _sendCharSerial4 416E                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ___aomod@sign 0012  
