

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 09 17:14:50 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    81   000000                     
    82                           ; Generated 06/04/2022 GMT
    83                           ; 
    84                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution. Publication is not required when
    98                           ;        this file is used in an embedded application.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F67K40 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116   000000                     
   117                           	psect	idataBANK0
   118   00453C                     __pidataBANK0:
   119                           	callstack 0
   120                           
   121                           ;initializer for _DataFlag
   122   00453C  01                 	db	1
   123                           
   124                           	psect	idataBANK1
   125   004536                     __pidataBANK1:
   126                           	callstack 0
   127                           
   128                           ;initializer for _high_threshold
   129   004536  03E8               	dw	1000
   130   000000                     _TRISEbits	set	3973
   131   000000                     _TX4REG	set	3812
   132   000000                     _RC4STAbits	set	3815
   133   000000                     _SP4BRGH	set	3814
   134   000000                     _SSP2CON2bits	set	3802
   135   000000                     _RX4PPS	set	3605
   136   000000                     _SSP2CLKPPS	set	3612
   137   000000                     _SSP2DATPPS	set	3613
   138   000000                     _ANSELDbits	set	3751
   139   000000                     _SSP2ADD	set	3798
   140   000000                     _SSP2CON1bits	set	3801
   141   000000                     _LATAbits	set	3961
   142   000000                     _LATFbits	set	3966
   143   000000                     _LATGbits	set	3967
   144   000000                     _TRISAbits	set	3969
   145   000000                     _TRISGbits	set	3975
   146   000000                     _CCPR2H	set	4006
   147   000000                     _CCPR1H	set	4010
   148   000000                     _TRISCbits	set	3971
   149   000000                     _TRISDbits	set	3972
   150   000000                     _TRISFbits	set	3974
   151   000000                     _LATDbits	set	3964
   152   000000                     _RC4REG	set	3811
   153   000000                     _SP4BRGL	set	3813
   154   000000                     _TX4STAbits	set	3816
   155   000000                     _BAUD4CONbits	set	3817
   156   000000                     _SSP2CON2	set	3802
   157   000000                     _SSP2STAT	set	3800
   158   000000                     _SSP2BUF	set	3797
   159   000000                     _PIE4bits	set	3629
   160   000000                     _PIR4bits	set	3639
   161   000000                     _RC0PPS	set	3682
   162   000000                     _RD5PPS	set	3695
   163   000000                     _RE2PPS	set	3700
   164   000000                     _RD6PPS	set	3696
   165   000000                     _RC7PPS	set	3689
   166   000000                     _CCPR4H	set	3873
   167   000000                     _CCPR3H	set	3877
   168   000000                     _CCP1CONbits	set	4011
   169   000000                     _CCPTMRS0bits	set	4013
   170   000000                     _T2PR	set	4028
   171   000000                     _T2CONbits	set	4029
   172   000000                     _CCP2CONbits	set	4007
   173   000000                     _CCP3CONbits	set	3878
   174   000000                     _CCP4CONbits	set	3874
   175   000000                     _RE4PPS	set	3702
   176   000000                     _RG6PPS	set	3720
   177   000000                     _T2CLKCONbits	set	4031
   178   000000                     _T2HLTbits	set	4030
   179                           
   180                           	psect	smallconst
   181   000E00                     __psmallconst:
   182                           	callstack 0
   183   000E00  00                 	db	0
   184   000E01                     STR_1:
   185   000E01  72                 	db	114	;'r'
   186   000E02  65                 	db	101	;'e'
   187   000E03  64                 	db	100	;'d'
   188   000E04  3D                 	db	61	;'='
   189   000E05  25                 	db	37
   190   000E06  64                 	db	100	;'d'
   191   000E07  20                 	db	32
   192   000E08  67                 	db	103	;'g'
   193   000E09  72                 	db	114	;'r'
   194   000E0A  65                 	db	101	;'e'
   195   000E0B  65                 	db	101	;'e'
   196   000E0C  6E                 	db	110	;'n'
   197   000E0D  3D                 	db	61	;'='
   198   000E0E  25                 	db	37
   199   000E0F  64                 	db	100	;'d'
   200   000E10  20                 	db	32
   201   000E11  62                 	db	98	;'b'
   202   000E12  6C                 	db	108	;'l'
   203   000E13  75                 	db	117	;'u'
   204   000E14  65                 	db	101	;'e'
   205   000E15  3D                 	db	61	;'='
   206   000E16  25                 	db	37
   207   000E17  64                 	db	100	;'d'
   208   000E18  20                 	db	32
   209   000E19  6C                 	db	108	;'l'
   210   000E1A  75                 	db	117	;'u'
   211   000E1B  6D                 	db	109	;'m'
   212   000E1C  3D                 	db	61	;'='
   213   000E1D  25                 	db	37
   214   000E1E  64                 	db	100	;'d'
   215   000E1F  20                 	db	32
   216   000E20  63                 	db	99	;'c'
   217   000E21  6F                 	db	111	;'o'
   218   000E22  6C                 	db	108	;'l'
   219   000E23  6F                 	db	111	;'o'
   220   000E24  75                 	db	117	;'u'
   221   000E25  72                 	db	114	;'r'
   222   000E26  3D                 	db	61	;'='
   223   000E27  25                 	db	37
   224   000E28  64                 	db	100	;'d'
   225   000E29  20                 	db	32
   226   000E2A  0D                 	db	13
   227   000E2B  0A                 	db	10
   228   000E2C  00                 	db	0
   229   000E2D                     STR_2:
   230   000E2D  72                 	db	114	;'r'
   231   000E2E  65                 	db	101	;'e'
   232   000E2F  64                 	db	100	;'d'
   233   000E30  3D                 	db	61	;'='
   234   000E31  25                 	db	37
   235   000E32  64                 	db	100	;'d'
   236   000E33  20                 	db	32
   237   000E34  67                 	db	103	;'g'
   238   000E35  72                 	db	114	;'r'
   239   000E36  65                 	db	101	;'e'
   240   000E37  65                 	db	101	;'e'
   241   000E38  6E                 	db	110	;'n'
   242   000E39  3D                 	db	61	;'='
   243   000E3A  25                 	db	37
   244   000E3B  64                 	db	100	;'d'
   245   000E3C  20                 	db	32
   246   000E3D  62                 	db	98	;'b'
   247   000E3E  6C                 	db	108	;'l'
   248   000E3F  75                 	db	117	;'u'
   249   000E40  65                 	db	101	;'e'
   250   000E41  3D                 	db	61	;'='
   251   000E42  25                 	db	37
   252   000E43  64                 	db	100	;'d'
   253   000E44  20                 	db	32
   254   000E45  6C                 	db	108	;'l'
   255   000E46  75                 	db	117	;'u'
   256   000E47  6D                 	db	109	;'m'
   257   000E48  3D                 	db	61	;'='
   258   000E49  25                 	db	37
   259   000E4A  64                 	db	100	;'d'
   260   000E4B  20                 	db	32
   261   000E4C  0D                 	db	13
   262   000E4D  0A                 	db	10
   263   000E4E  00                 	db	0
   264   000E4F  00                 	db	0	; dummy byte at the end
   265   000000                     
   266                           ; #config settings
   267                           
   268                           	psect	cinit
   269   003D4C                     __pcinit:
   270                           	callstack 0
   271   003D4C                     start_initialization:
   272                           	callstack 0
   273   003D4C                     __initialization:
   274                           	callstack 0
   275                           
   276                           ; Initialize objects allocated to BANK1 (2 bytes)
   277                           ; load TBLPTR registers with __pidataBANK1
   278   003D4C  0E36               	movlw	low __pidataBANK1
   279   003D4E  6EF6               	movwf	tblptrl,c
   280   003D50  0E45               	movlw	high __pidataBANK1
   281   003D52  6EF7               	movwf	tblptrh,c
   282   003D54  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   283   003D56  6EF8               	movwf	tblptru,c
   284   003D58  0009               	tblrd		*+	;fetch initializer
   285   003D5A  CFF5 F190          	movff	tablat,__pdataBANK1
   286   003D5E  0009               	tblrd		*+	;fetch initializer
   287   003D60  CFF5 F191          	movff	tablat,__pdataBANK1+1
   288                           
   289                           ; Initialize objects allocated to BANK0 (1 bytes)
   290                           ; load TBLPTR registers with __pidataBANK0
   291   003D64  0E3C               	movlw	low __pidataBANK0
   292   003D66  6EF6               	movwf	tblptrl,c
   293   003D68  0E45               	movlw	high __pidataBANK0
   294   003D6A  6EF7               	movwf	tblptrh,c
   295   003D6C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   296   003D6E  6EF8               	movwf	tblptru,c
   297   003D70  0009               	tblrd		*+	;fetch initializer
   298   003D72  CFF5 F0FF          	movff	tablat,__pdataBANK0
   299                           
   300                           ; Clear objects allocated to BANK1 (144 bytes)
   301   003D76  EE01  F000         	lfsr	0,__pbssBANK1
   302   003D7A  0E90               	movlw	144
   303   003D7C                     clear_0:
   304   003D7C  6AEE               	clrf	postinc0,c
   305   003D7E  06E8               	decf	wreg,f,c
   306   003D80  E1FD               	bnz	clear_0
   307                           
   308                           ; Clear objects allocated to BANK0 (25 bytes)
   309   003D82  EE00  F0E6         	lfsr	0,__pbssBANK0
   310   003D86  0E19               	movlw	25
   311   003D88                     clear_1:
   312   003D88  6AEE               	clrf	postinc0,c
   313   003D8A  06E8               	decf	wreg,f,c
   314   003D8C  E1FD               	bnz	clear_1
   315                           
   316                           ; Clear objects allocated to COMRAM (4 bytes)
   317   003D8E  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   318   003D90  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   319   003D92  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   320   003D94  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   321   003D96                     end_of_initialization:
   322                           	callstack 0
   323   003D96                     __end_of__initialization:
   324                           	callstack 0
   325   003D96  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   326   003D98  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   327   003D9A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   328   003D9C  6EF8               	movwf	tblptru,c
   329   003D9E  0E0E               	movlw	high __Lsmallconst
   330   003DA0  6EF7               	movwf	tblptrh,c
   331   003DA2  0100               	movlb	0
   332   003DA4  EF94  F014         	goto	_main	;jump to C main() function
   333                           
   334                           	psect	bssCOMRAM
   335   00005B                     __pbssCOMRAM:
   336                           	callstack 0
   337   00005B                     _TxBufReadCnt:
   338                           	callstack 0
   339   00005B                     	ds	1
   340   00005C                     _TxBufWriteCnt:
   341                           	callstack 0
   342   00005C                     	ds	1
   343   00005D                     _RxBufReadCnt:
   344                           	callstack 0
   345   00005D                     	ds	1
   346   00005E                     _RxBufWriteCnt:
   347                           	callstack 0
   348   00005E                     	ds	1
   349                           
   350                           	psect	bssBANK0
   351   0000E6                     __pbssBANK0:
   352                           	callstack 0
   353   0000E6                     _width:
   354                           	callstack 0
   355   0000E6                     	ds	2
   356   0000E8                     _prec:
   357                           	callstack 0
   358   0000E8                     	ds	2
   359   0000EA                     _low_threshold:
   360                           	callstack 0
   361   0000EA                     	ds	2
   362   0000EC                     _flags:
   363                           	callstack 0
   364   0000EC                     	ds	1
   365   0000ED                     _motorR:
   366                           	callstack 0
   367   0000ED                     	ds	9
   368   0000F6                     _motorL:
   369                           	callstack 0
   370   0000F6                     	ds	9
   371                           
   372                           	psect	dataBANK0
   373   0000FF                     __pdataBANK0:
   374                           	callstack 0
   375   0000FF                     _DataFlag:
   376                           	callstack 0
   377   0000FF                     	ds	1
   378                           
   379                           	psect	bssBANK1
   380   000100                     __pbssBANK1:
   381                           	callstack 0
   382   000100                     _EUSART4TXbuf:
   383                           	callstack 0
   384   000100                     	ds	60
   385   00013C                     _EUSART4RXbuf:
   386                           	callstack 0
   387   00013C                     	ds	20
   388   000150                     	ds	12
   389   00015C                     _dbuf:
   390                           	callstack 0
   391   00015C                     	ds	32
   392   00017C                     _rel:
   393                           	callstack 0
   394   00017C                     	ds	12
   395   000188                     _vals:
   396                           	callstack 0
   397   000188                     	ds	8
   398                           
   399                           	psect	dataBANK1
   400   000190                     __pdataBANK1:
   401                           	callstack 0
   402   000190                     _high_threshold:
   403                           	callstack 0
   404   000190                     	ds	2
   405                           
   406                           	psect	cstackBANK0
   407   000060                     __pcstackBANK0:
   408                           	callstack 0
   409   000060                     ?_sprintf:
   410                           	callstack 0
   411   000060                     sprintf@s:
   412                           	callstack 0
   413   000060                     _Colour_decider$2542:
   414                           	callstack 0
   415                           
   416                           ; 4 bytes @ 0x0
   417   000060                     	ds	2
   418   000062                     sprintf@fmt:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x2
   422   000062                     	ds	2
   423   000064                     Colour_decider@Cmax_i:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x4
   427   000064                     	ds	2
   428   000066                     Colour_decider@RGB_col:
   429                           	callstack 0
   430                           
   431                           ; 12 bytes @ 0x6
   432   000066                     	ds	8
   433   00006E                     sprintf@ap:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0xE
   437   00006E                     	ds	2
   438   000070                     sprintf@f:
   439                           	callstack 0
   440                           
   441                           ; 11 bytes @ 0x10
   442   000070                     	ds	2
   443   000072                     Colour_decider@Cmax:
   444                           	callstack 0
   445                           
   446                           ; 4 bytes @ 0x12
   447   000072                     	ds	4
   448   000076                     Colour_decider@Cmin:
   449                           	callstack 0
   450                           
   451                           ; 4 bytes @ 0x16
   452   000076                     	ds	4
   453   00007A                     Colour_decider@i:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x1A
   457   00007A                     	ds	2
   458   00007C                     Colour_decider@Hue:
   459                           	callstack 0
   460                           
   461                           ; 4 bytes @ 0x1C
   462   00007C                     	ds	4
   463   000080                     main@buf:
   464                           	callstack 0
   465                           
   466                           ; 100 bytes @ 0x20
   467   000080                     	ds	100
   468   0000E4                     main@colour:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x84
   472   0000E4                     	ds	2
   473                           
   474                           	psect	cstackCOMRAM
   475   000001                     __pcstackCOMRAM:
   476                           	callstack 0
   477   000001                     ??_I2C_2_Master_Idle:
   478   000001                     ?___wmul:
   479                           	callstack 0
   480   000001                     ?___fladd:
   481                           	callstack 0
   482   000001                     ?___xxtofl:
   483                           	callstack 0
   484   000001                     ?___aodiv:
   485                           	callstack 0
   486   000001                     ?___aomod:
   487                           	callstack 0
   488   000001                     sendCharSerial4@charToSend:
   489                           	callstack 0
   490   000001                     initDCmotorsPWM@PWMperiod:
   491                           	callstack 0
   492   000001                     ___wmul@multiplier:
   493                           	callstack 0
   494   000001                     fputc@c:
   495                           	callstack 0
   496   000001                     ___flge@ff1:
   497                           	callstack 0
   498   000001                     ___fladd@b:
   499                           	callstack 0
   500   000001                     ___xxtofl@val:
   501                           	callstack 0
   502   000001                     ___aodiv@dividend:
   503                           	callstack 0
   504   000001                     ___aomod@dividend:
   505                           	callstack 0
   506                           
   507                           ; 8 bytes @ 0x0
   508   000001                     	ds	1
   509   000002                     ??_I2C_2_Master_Read:
   510   000002                     I2C_2_Master_Write@data_byte:
   511                           	callstack 0
   512   000002                     sendStringSerial4@string:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x1
   516   000002                     	ds	1
   517   000003                     color_writetoaddr@value:
   518                           	callstack 0
   519   000003                     I2C_2_Master_Read@ack:
   520                           	callstack 0
   521   000003                     ___wmul@multiplicand:
   522                           	callstack 0
   523   000003                     fputc@fp:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x2
   527   000003                     	ds	1
   528   000004                     color_writetoaddr@address:
   529                           	callstack 0
   530   000004                     I2C_2_Master_Read@tmp:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x3
   534   000004                     	ds	1
   535   000005                     ??_fputc:
   536   000005                     ??_color_click_init:
   537   000005                     ??___xxtofl:
   538   000005                     ?_color_read_lum:
   539                           	callstack 0
   540   000005                     ?_color_read_Red:
   541                           	callstack 0
   542   000005                     ?_color_read_Green:
   543                           	callstack 0
   544   000005                     ?_color_read_Blue:
   545                           	callstack 0
   546   000005                     ___wmul@product:
   547                           	callstack 0
   548   000005                     ___flge@ff2:
   549                           	callstack 0
   550   000005                     ___fladd@a:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0x4
   554   000005                     	ds	2
   555   000007                     ??_color_read_lum:
   556   000007                     ??_color_read_Red:
   557   000007                     ??_color_read_Green:
   558   000007                     ??_color_read_Blue:
   559   000007                     ?___lwdiv:
   560                           	callstack 0
   561   000007                     ___lwdiv@dividend:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x6
   565   000007                     	ds	2
   566   000009                     ??___fladd:
   567   000009                     ??___flge:
   568   000009                     ___xxtofl@sign:
   569                           	callstack 0
   570   000009                     ___lwdiv@divisor:
   571                           	callstack 0
   572   000009                     ___aodiv@divisor:
   573                           	callstack 0
   574   000009                     ___aomod@divisor:
   575                           	callstack 0
   576                           
   577                           ; 8 bytes @ 0x8
   578   000009                     	ds	1
   579   00000A                     ___xxtofl@exp:
   580                           	callstack 0
   581   00000A                     color_read_lum@tmp:
   582                           	callstack 0
   583   00000A                     color_read_Red@tmp:
   584                           	callstack 0
   585   00000A                     color_read_Green@tmp:
   586                           	callstack 0
   587   00000A                     color_read_Blue@tmp:
   588                           	callstack 0
   589   00000A                     fputs@s:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x9
   593   00000A                     	ds	1
   594   00000B                     ___lwdiv@quotient:
   595                           	callstack 0
   596   00000B                     ___xxtofl@arg:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0xA
   600   00000B                     	ds	1
   601   00000C                     readColours@vals:
   602                           	callstack 0
   603   00000C                     fputs@fp:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0xB
   607   00000C                     	ds	1
   608   00000D                     ___lwdiv@counter:
   609                           	callstack 0
   610   00000D                     ___fladd@signs:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0xC
   614   00000D                     	ds	1
   615   00000E                     ___fladd@aexp:
   616                           	callstack 0
   617   00000E                     fputs@c:
   618                           	callstack 0
   619   00000E                     setMotorPWM@m:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0xD
   623   00000E                     	ds	1
   624   00000F                     ___fladd@bexp:
   625                           	callstack 0
   626   00000F                     fputs@i:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0xE
   630   00000F                     	ds	1
   631   000010                     ??_setMotorPWM:
   632   000010                     ___fladd@grs:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0xF
   636   000010                     	ds	1
   637   000011                     ?___flsub:
   638                           	callstack 0
   639   000011                     ___aodiv@counter:
   640                           	callstack 0
   641   000011                     ___aomod@counter:
   642                           	callstack 0
   643   000011                     pad@fp:
   644                           	callstack 0
   645   000011                     ___flsub@b:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0x10
   649   000011                     	ds	1
   650   000012                     setMotorPWM@posDuty:
   651                           	callstack 0
   652   000012                     ___aodiv@sign:
   653                           	callstack 0
   654   000012                     ___aomod@sign:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0x11
   658   000012                     	ds	1
   659   000013                     ?_abs:
   660                           	callstack 0
   661   000013                     setMotorPWM@negDuty:
   662                           	callstack 0
   663   000013                     pad@buf:
   664                           	callstack 0
   665   000013                     abs@a:
   666                           	callstack 0
   667   000013                     ___aodiv@quotient:
   668                           	callstack 0
   669                           
   670                           ; 8 bytes @ 0x12
   671   000013                     	ds	1
   672   000014                     stop@mL:
   673                           	callstack 0
   674   000014                     turnLeft@mL:
   675                           	callstack 0
   676   000014                     turnRight@mL:
   677                           	callstack 0
   678   000014                     fullSpeedAhead@mL:
   679                           	callstack 0
   680   000014                     fullSpeedBack@mL:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x13
   684   000014                     	ds	1
   685   000015                     ??_abs:
   686   000015                     pad@p:
   687                           	callstack 0
   688   000015                     ___flsub@a:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x14
   692   000015                     	ds	1
   693   000016                     stop@mR:
   694                           	callstack 0
   695   000016                     turnLeft@mR:
   696                           	callstack 0
   697   000016                     turnRight@mR:
   698                           	callstack 0
   699   000016                     fullSpeedAhead@mR:
   700                           	callstack 0
   701   000016                     fullSpeedBack@mR:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x15
   705   000016                     	ds	1
   706   000017                     ??_pad:
   707                           
   708                           ; 1 bytes @ 0x16
   709   000017                     	ds	1
   710   000018                     ??_fullSpeedAhead:
   711   000018                     ??_stop:
   712   000018                     ??_turnLeft:
   713   000018                     ??_turnRight:
   714   000018                     ??_fullSpeedBack:
   715   000018                     pad@i:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x17
   719   000018                     	ds	1
   720   000019                     ?___fldiv:
   721                           	callstack 0
   722   000019                     turnRight45@mL:
   723                           	callstack 0
   724   000019                     turnLeft45@mL:
   725                           	callstack 0
   726   000019                     reverseDetect@mL:
   727                           	callstack 0
   728   000019                     reverseOneBlock@mL:
   729                           	callstack 0
   730   000019                     ___fleq@ff1:
   731                           	callstack 0
   732   000019                     ___fldiv@b:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x18
   736   000019                     	ds	1
   737   00001A                     pad@w:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x19
   741   00001A                     	ds	1
   742   00001B                     turnRight45@mR:
   743                           	callstack 0
   744   00001B                     turnLeft45@mR:
   745                           	callstack 0
   746   00001B                     reverseDetect@mR:
   747                           	callstack 0
   748   00001B                     reverseOneBlock@mR:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x1A
   752   00001B                     	ds	1
   753   00001C                     dtoa@fp:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x1B
   757   00001C                     	ds	1
   758   00001D                     ??_reverseDetect:
   759   00001D                     ??_turnLeft45:
   760   00001D                     ??_turnRight45:
   761   00001D                     ??_reverseOneBlock:
   762   00001D                     ___fleq@ff2:
   763                           	callstack 0
   764   00001D                     ___fldiv@a:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x1C
   768   00001D                     	ds	1
   769   00001E                     dtoa@d:
   770                           	callstack 0
   771                           
   772                           ; 8 bytes @ 0x1D
   773   00001E                     	ds	1
   774   00001F                     RedMove@mL:
   775                           	callstack 0
   776   00001F                     GreenMove@mL:
   777                           	callstack 0
   778   00001F                     BlueMove@mL:
   779                           	callstack 0
   780   00001F                     YellowMove@mL:
   781                           	callstack 0
   782   00001F                     PinkMove@mL:
   783                           	callstack 0
   784   00001F                     OrangeMove@mL:
   785                           	callstack 0
   786   00001F                     LightBlueMove@mL:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x1E
   790   00001F                     	ds	2
   791   000021                     ??___fldiv:
   792   000021                     ??___fleq:
   793   000021                     RedMove@mR:
   794                           	callstack 0
   795   000021                     GreenMove@mR:
   796                           	callstack 0
   797   000021                     BlueMove@mR:
   798                           	callstack 0
   799   000021                     YellowMove@mR:
   800                           	callstack 0
   801   000021                     PinkMove@mR:
   802                           	callstack 0
   803   000021                     OrangeMove@mR:
   804                           	callstack 0
   805   000021                     LightBlueMove@mR:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x20
   809   000021                     	ds	2
   810   000023                     
   811                           ; 1 bytes @ 0x22
   812   000023                     	ds	2
   813   000025                     ___fldiv@rem:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x24
   817   000025                     	ds	1
   818   000026                     ??_dtoa:
   819                           
   820                           ; 1 bytes @ 0x25
   821   000026                     	ds	3
   822   000029                     ___fldiv@sign:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x28
   826   000029                     	ds	1
   827   00002A                     ___fldiv@new_exp:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x29
   831   00002A                     	ds	2
   832   00002C                     ___fldiv@grs:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x2B
   836   00002C                     	ds	2
   837   00002E                     _dtoa$2235:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x2D
   841   00002E                     	ds	2
   842   000030                     ___fldiv@bexp:
   843                           	callstack 0
   844   000030                     dtoa@p:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0x2F
   848   000030                     	ds	1
   849   000031                     ___fldiv@aexp:
   850                           	callstack 0
   851                           
   852                           ; 1 bytes @ 0x30
   853   000031                     	ds	1
   854   000032                     ?___flmul:
   855                           	callstack 0
   856   000032                     colour_rel@vals:
   857                           	callstack 0
   858   000032                     dtoa@w:
   859                           	callstack 0
   860   000032                     ___flmul@b:
   861                           	callstack 0
   862                           
   863                           ; 4 bytes @ 0x31
   864   000032                     	ds	2
   865   000034                     colour_rel@rel:
   866                           	callstack 0
   867   000034                     dtoa@n:
   868                           	callstack 0
   869                           
   870                           ; 8 bytes @ 0x33
   871   000034                     	ds	2
   872   000036                     colour_rel@L:
   873                           	callstack 0
   874   000036                     ___flmul@a:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x35
   878   000036                     	ds	4
   879   00003A                     ??___flmul:
   880   00003A                     _colour_rel$2540:
   881                           	callstack 0
   882                           
   883                           ; 4 bytes @ 0x39
   884   00003A                     	ds	2
   885   00003C                     dtoa@i:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x3B
   889   00003C                     	ds	2
   890   00003E                     ___flmul@sign:
   891                           	callstack 0
   892   00003E                     dtoa@s:
   893                           	callstack 0
   894   00003E                     _colour_rel$2541:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x3D
   898   00003E                     	ds	1
   899   00003F                     vfpfcnvrt@fp:
   900                           	callstack 0
   901   00003F                     ___flmul@grs:
   902                           	callstack 0
   903                           
   904                           ; 4 bytes @ 0x3E
   905   00003F                     	ds	2
   906   000041                     vfpfcnvrt@fmt:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x40
   910   000041                     	ds	1
   911   000042                     colour_rel@R:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x41
   915   000042                     	ds	1
   916   000043                     ___flmul@aexp:
   917                           	callstack 0
   918   000043                     vfpfcnvrt@ap:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x42
   922   000043                     	ds	1
   923   000044                     ___flmul@bexp:
   924                           	callstack 0
   925                           
   926                           ; 1 bytes @ 0x43
   927   000044                     	ds	1
   928   000045                     ??_vfpfcnvrt:
   929   000045                     ___flmul@prod:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x44
   933   000045                     	ds	1
   934   000046                     colour_rel@G:
   935                           	callstack 0
   936                           
   937                           ; 4 bytes @ 0x45
   938   000046                     	ds	1
   939   000047                     vfpfcnvrt@convarg:
   940                           	callstack 0
   941                           
   942                           ; 8 bytes @ 0x46
   943   000047                     	ds	2
   944   000049                     ___flmul@temp:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x48
   948   000049                     	ds	1
   949   00004A                     colour_rel@B:
   950                           	callstack 0
   951                           
   952                           ; 4 bytes @ 0x49
   953   00004A                     	ds	1
   954   00004B                     ?_Colour_decider:
   955                           	callstack 0
   956   00004B                     Colour_decider@vals:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x4A
   960   00004B                     	ds	2
   961   00004D                     Colour_decider@rel:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x4C
   965   00004D                     	ds	2
   966   00004F                     ??_Colour_decider:
   967   00004F                     vfpfcnvrt@cp:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x4E
   971   00004F                     	ds	2
   972   000051                     ?_vfprintf:
   973                           	callstack 0
   974   000051                     vfprintf@fp:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x50
   978   000051                     	ds	2
   979   000053                     vfprintf@fmt:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x52
   983   000053                     	ds	2
   984   000055                     vfprintf@ap:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x54
   988   000055                     	ds	2
   989   000057                     vfprintf@cfmt:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x56
   993   000057                     	ds	2
   994   000059                     ??_main:
   995                           
   996                           ; 1 bytes @ 0x58
   997   000059                     	ds	2
   998                           
   999 ;;
  1000 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1001 ;;
  1002 ;; *************** function _main *****************
  1003 ;; Defined at:
  1004 ;;		line 29 in file "main.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  colour          2  132[BANK0 ] int 
  1009 ;;  buf           100   32[BANK0 ] unsigned char [100]
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1020 ;;      Locals:         0     102       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1022 ;;      Totals:         2     102       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1023 ;;Total ram usage:      104 bytes
  1024 ;; Hardware stack levels required when called: 9
  1025 ;; This function calls:
  1026 ;;		_BlueMove
  1027 ;;		_Colour_decider
  1028 ;;		_GreenMove
  1029 ;;		_I2C_2_Master_Init
  1030 ;;		_Interrupts_init
  1031 ;;		_LightBlueMove
  1032 ;;		_OrangeMove
  1033 ;;		_PinkMove
  1034 ;;		_RedMove
  1035 ;;		_YellowMove
  1036 ;;		_color_click_init
  1037 ;;		_colour_rel
  1038 ;;		_fullSpeedAhead
  1039 ;;		_initDCmotorsPWM
  1040 ;;		_initUSART4
  1041 ;;		_readColours
  1042 ;;		_sendStringSerial4
  1043 ;;		_sprintf
  1044 ;;		_stop
  1045 ;; This function is called by:
  1046 ;;		Startup code after reset
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text0
  1051   002928                     __ptext0:
  1052                           	callstack 0
  1053   002928                     _main:
  1054                           	callstack 22
  1055   002928                     
  1056                           ;main.c: 30:     initUSART4();
  1057   002928  EC6B  F022         	call	_initUSART4	;wreg free
  1058   00292C                     
  1059                           ;main.c: 31:     Interrupts_init();
  1060   00292C  EC9D  F022         	call	_Interrupts_init	;wreg free
  1061   002930                     
  1062                           ;main.c: 32:     color_click_init();
  1063   002930  ECAF  F01F         	call	_color_click_init	;wreg free
  1064   002934                     
  1065                           ;main.c: 33:     I2C_2_Master_Init();
  1066   002934  EC1F  F022         	call	_I2C_2_Master_Init	;wreg free
  1067   002938                     
  1068                           ;main.c: 34:     initDCmotorsPWM(200);
  1069   002938  0E00               	movlw	0
  1070   00293A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1071   00293C  0EC8               	movlw	200
  1072   00293E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1073   002940  EC4E  F01D         	call	_initDCmotorsPWM	;wreg free
  1074   002944                     
  1075                           ;main.c: 35:     char buf[100];;main.c: 36:     TRISGbits.TRISG1 = 0;
  1076   002944  9287               	bcf	135,1,c	;volatile
  1077   002946                     
  1078                           ;main.c: 37:     TRISAbits.TRISA4 = 0;
  1079   002946  9881               	bcf	129,4,c	;volatile
  1080   002948                     
  1081                           ;main.c: 38:     TRISFbits.TRISF7 = 0;
  1082   002948  9E86               	bcf	134,7,c	;volatile
  1083   00294A                     
  1084                           ;main.c: 39:     LATGbits.LATG1=1;
  1085   00294A  827F               	bsf	127,1,c	;volatile
  1086   00294C                     
  1087                           ;main.c: 40:     LATAbits.LATA4=1;
  1088   00294C  8879               	bsf	121,4,c	;volatile
  1089   00294E                     
  1090                           ;main.c: 41:     LATFbits.LATF7=1;
  1091   00294E  8E7E               	bsf	126,7,c	;volatile
  1092   002950                     
  1093                           ;main.c: 45:     motorL.power=0;
  1094   002950  0E00               	movlw	0
  1095   002952  0100               	movlb	0	; () banked
  1096   002954  6FF6               	movwf	_motorL& (0+255),b
  1097   002956                     
  1098                           ; BSR set to: 0
  1099                           ;main.c: 46:     motorL.direction=1;
  1100   002956  0E01               	movlw	1
  1101   002958  6FF7               	movwf	(_motorL+1)& (0+255),b
  1102   00295A                     
  1103                           ; BSR set to: 0
  1104                           ;main.c: 47:     motorL.brakemode=1;
  1105   00295A  0E01               	movlw	1
  1106   00295C  6FF8               	movwf	(_motorL+2)& (0+255),b
  1107   00295E                     
  1108                           ; BSR set to: 0
  1109                           ;main.c: 48:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1110   00295E  0EAA               	movlw	170
  1111   002960  6FFB               	movwf	(_motorL+5)& (0+255),b
  1112   002962  0E0F               	movlw	15
  1113   002964  6FFC               	movwf	(_motorL+6)& (0+255),b
  1114   002966                     
  1115                           ; BSR set to: 0
  1116                           ;main.c: 49:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1117   002966  0EA6               	movlw	166
  1118   002968  6FFD               	movwf	(_motorL+7)& (0+255),b
  1119   00296A  0E0F               	movlw	15
  1120   00296C  6FFE               	movwf	(_motorL+8)& (0+255),b
  1121   00296E                     
  1122                           ; BSR set to: 0
  1123                           ;main.c: 50:     motorL.PWMperiod=200;
  1124   00296E  0E00               	movlw	0
  1125   002970  6FFA               	movwf	(_motorL+4)& (0+255),b
  1126   002972  0EC8               	movlw	200
  1127   002974  6FF9               	movwf	(_motorL+3)& (0+255),b
  1128   002976                     
  1129                           ; BSR set to: 0
  1130                           ;main.c: 51:     motorR.power=0;
  1131   002976  0E00               	movlw	0
  1132   002978  6FED               	movwf	_motorR& (0+255),b
  1133   00297A                     
  1134                           ; BSR set to: 0
  1135                           ;main.c: 52:     motorR.direction=1;
  1136   00297A  0E01               	movlw	1
  1137   00297C  6FEE               	movwf	(_motorR+1)& (0+255),b
  1138   00297E                     
  1139                           ; BSR set to: 0
  1140                           ;main.c: 53:     motorR.brakemode=1;
  1141   00297E  0E01               	movlw	1
  1142   002980  6FEF               	movwf	(_motorR+2)& (0+255),b
  1143   002982                     
  1144                           ; BSR set to: 0
  1145                           ;main.c: 54:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1146   002982  0E25               	movlw	37
  1147   002984  6FF2               	movwf	(_motorR+5)& (0+255),b
  1148   002986  0E0F               	movlw	15
  1149   002988  6FF3               	movwf	(_motorR+6)& (0+255),b
  1150   00298A                     
  1151                           ; BSR set to: 0
  1152                           ;main.c: 55:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1153   00298A  0E21               	movlw	33
  1154   00298C  6FF4               	movwf	(_motorR+7)& (0+255),b
  1155   00298E  0E0F               	movlw	15
  1156   002990  6FF5               	movwf	(_motorR+8)& (0+255),b
  1157   002992                     
  1158                           ; BSR set to: 0
  1159                           ;main.c: 56:     motorR.PWMperiod=200;
  1160   002992  0E00               	movlw	0
  1161   002994  6FF1               	movwf	(_motorR+4)& (0+255),b
  1162   002996  0EC8               	movlw	200
  1163   002998  6FF0               	movwf	(_motorR+3)& (0+255),b
  1164   00299A                     l4125:
  1165                           
  1166                           ;main.c: 59:     {;main.c: 60:         fullSpeedAhead(&motorL, &motorR);
  1167   00299A  0EF6               	movlw	low _motorL
  1168   00299C  6E14               	movwf	fullSpeedAhead@mL^0,c
  1169   00299E  0E00               	movlw	high _motorL
  1170   0029A0  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1171   0029A2  0EED               	movlw	low _motorR
  1172   0029A4  6E16               	movwf	fullSpeedAhead@mR^0,c
  1173   0029A6  0E00               	movlw	high _motorR
  1174   0029A8  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1175   0029AA  EC22  F01C         	call	_fullSpeedAhead	;wreg free
  1176   0029AE                     
  1177                           ;main.c: 63:         readColours(&vals);
  1178   0029AE  0E88               	movlw	low _vals
  1179   0029B0  6E0C               	movwf	readColours@vals^0,c
  1180   0029B2  0E01               	movlw	high _vals
  1181   0029B4  6E0D               	movwf	(readColours@vals+1)^0,c
  1182   0029B6  EC77  F01E         	call	_readColours	;wreg free
  1183   0029BA                     
  1184                           ;main.c: 66:         colour_rel(&vals, &rel);
  1185   0029BA  0E88               	movlw	low _vals
  1186   0029BC  6E32               	movwf	colour_rel@vals^0,c
  1187   0029BE  0E01               	movlw	high _vals
  1188   0029C0  6E33               	movwf	(colour_rel@vals+1)^0,c
  1189   0029C2  0E7C               	movlw	low _rel
  1190   0029C4  6E34               	movwf	colour_rel@rel^0,c
  1191   0029C6  0E01               	movlw	high _rel
  1192   0029C8  6E35               	movwf	(colour_rel@rel+1)^0,c
  1193   0029CA  ECFD  F012         	call	_colour_rel	;wreg free
  1194   0029CE                     
  1195                           ;main.c: 69:         if (vals.L>=2200){
  1196   0029CE  0101               	movlb	1	; () banked
  1197   0029D0  BF8F               	btfsc	(_vals+7)& (0+255),7,b
  1198   0029D2  EFF4  F014         	goto	u4001
  1199   0029D6  0E98               	movlw	152
  1200   0029D8  5D8E               	subwf	(_vals+6)& (0+255),w,b
  1201   0029DA  0E08               	movlw	8
  1202   0029DC  598F               	subwfb	(_vals+7)& (0+255),w,b
  1203   0029DE  A0D8               	btfss	status,0,c
  1204   0029E0  EFF4  F014         	goto	u4001
  1205   0029E4  EFF6  F014         	goto	u4000
  1206   0029E8                     u4001:
  1207   0029E8  EFD5  F015         	goto	l4169
  1208   0029EC                     u4000:
  1209   0029EC                     
  1210                           ; BSR set to: 1
  1211                           ;main.c: 71:             stop(&motorL, &motorR);
  1212   0029EC  0EF6               	movlw	low _motorL
  1213   0029EE  6E14               	movwf	stop@mL^0,c
  1214   0029F0  0E00               	movlw	high _motorL
  1215   0029F2  6E15               	movwf	(stop@mL+1)^0,c
  1216   0029F4  0EED               	movlw	low _motorR
  1217   0029F6  6E16               	movwf	stop@mR^0,c
  1218   0029F8  0E00               	movlw	high _motorR
  1219   0029FA  6E17               	movwf	(stop@mR+1)^0,c
  1220   0029FC  ECCF  F01D         	call	_stop	;wreg free
  1221   002A00                     
  1222                           ;main.c: 72:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1223   002A00  0E11               	movlw	17
  1224   002A02  6E5A               	movwf	(??_main+1)^0,c
  1225   002A04  0E3C               	movlw	60
  1226   002A06  6E59               	movwf	??_main^0,c
  1227   002A08  0ECB               	movlw	203
  1228   002A0A                     u4087:
  1229   002A0A  2EE8               	decfsz	wreg,f,c
  1230   002A0C  D7FE               	bra	u4087
  1231   002A0E  2E59               	decfsz	??_main^0,f,c
  1232   002A10  D7FC               	bra	u4087
  1233   002A12  2E5A               	decfsz	(??_main+1)^0,f,c
  1234   002A14  D7FA               	bra	u4087
  1235   002A16  F000               	nop	
  1236   002A18                     
  1237                           ;main.c: 74:             int colour = Colour_decider(&vals, &rel);
  1238   002A18  0E88               	movlw	low _vals
  1239   002A1A  6E4B               	movwf	Colour_decider@vals^0,c
  1240   002A1C  0E01               	movlw	high _vals
  1241   002A1E  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1242   002A20  0E7C               	movlw	low _rel
  1243   002A22  6E4D               	movwf	Colour_decider@rel^0,c
  1244   002A24  0E01               	movlw	high _rel
  1245   002A26  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1246   002A28  EC28  F007         	call	_Colour_decider	;wreg free
  1247   002A2C  C04B  F0E4         	movff	?_Colour_decider,main@colour
  1248   002A30  C04C  F0E5         	movff	?_Colour_decider+1,main@colour+1
  1249   002A34                     
  1250                           ;main.c: 77:             if (colour==1){
  1251   002A34  0100               	movlb	0	; () banked
  1252   002A36  05E4               	decf	main@colour& (0+255),w,b
  1253   002A38  11E5               	iorwf	(main@colour+1)& (0+255),w,b
  1254   002A3A  A4D8               	btfss	status,2,c
  1255   002A3C  EF22  F015         	goto	u4011
  1256   002A40  EF24  F015         	goto	u4010
  1257   002A44                     u4011:
  1258   002A44  EF30  F015         	goto	l4143
  1259   002A48                     u4010:
  1260   002A48                     
  1261                           ; BSR set to: 0
  1262                           ;main.c: 78:                 RedMove(&motorL, &motorR);
  1263   002A48  0EF6               	movlw	low _motorL
  1264   002A4A  6E1F               	movwf	RedMove@mL^0,c
  1265   002A4C  0E00               	movlw	high _motorL
  1266   002A4E  6E20               	movwf	(RedMove@mL+1)^0,c
  1267   002A50  0EED               	movlw	low _motorR
  1268   002A52  6E21               	movwf	RedMove@mR^0,c
  1269   002A54  0E00               	movlw	high _motorR
  1270   002A56  6E22               	movwf	(RedMove@mR+1)^0,c
  1271   002A58  ECC9  F021         	call	_RedMove	;wreg free
  1272                           
  1273                           ;main.c: 79:             }
  1274   002A5C  EFB4  F015         	goto	l4167
  1275   002A60                     l4143:
  1276                           
  1277                           ; BSR set to: 0
  1278   002A60  0E02               	movlw	2
  1279   002A62  19E4               	xorwf	main@colour& (0+255),w,b
  1280   002A64  11E5               	iorwf	(main@colour+1)& (0+255),w,b
  1281   002A66  A4D8               	btfss	status,2,c
  1282   002A68  EF38  F015         	goto	u4021
  1283   002A6C  EF3A  F015         	goto	u4020
  1284   002A70                     u4021:
  1285   002A70  EF46  F015         	goto	l4147
  1286   002A74                     u4020:
  1287   002A74                     
  1288                           ; BSR set to: 0
  1289                           ;main.c: 81:                 OrangeMove(&motorL, &motorR);
  1290   002A74  0EF6               	movlw	low _motorL
  1291   002A76  6E1F               	movwf	OrangeMove@mL^0,c
  1292   002A78  0E00               	movlw	high _motorL
  1293   002A7A  6E20               	movwf	(OrangeMove@mL+1)^0,c
  1294   002A7C  0EED               	movlw	low _motorR
  1295   002A7E  6E21               	movwf	OrangeMove@mR^0,c
  1296   002A80  0E00               	movlw	high _motorR
  1297   002A82  6E22               	movwf	(OrangeMove@mR+1)^0,c
  1298   002A84  EC2A  F020         	call	_OrangeMove	;wreg free
  1299                           
  1300                           ;main.c: 82:             }
  1301   002A88  EFB4  F015         	goto	l4167
  1302   002A8C                     l4147:
  1303                           
  1304                           ; BSR set to: 0
  1305   002A8C  0E03               	movlw	3
  1306   002A8E  19E4               	xorwf	main@colour& (0+255),w,b
  1307   002A90  11E5               	iorwf	(main@colour+1)& (0+255),w,b
  1308   002A92  A4D8               	btfss	status,2,c
  1309   002A94  EF4E  F015         	goto	u4031
  1310   002A98  EF50  F015         	goto	u4030
  1311   002A9C                     u4031:
  1312   002A9C  EF5C  F015         	goto	l4151
  1313   002AA0                     u4030:
  1314   002AA0                     
  1315                           ; BSR set to: 0
  1316                           ;main.c: 84:                 YellowMove(&motorL, &motorR);
  1317   002AA0  0EF6               	movlw	low _motorL
  1318   002AA2  6E1F               	movwf	YellowMove@mL^0,c
  1319   002AA4  0E00               	movlw	high _motorL
  1320   002AA6  6E20               	movwf	(YellowMove@mL+1)^0,c
  1321   002AA8  0EED               	movlw	low _motorR
  1322   002AAA  6E21               	movwf	YellowMove@mR^0,c
  1323   002AAC  0E00               	movlw	high _motorR
  1324   002AAE  6E22               	movwf	(YellowMove@mR+1)^0,c
  1325   002AB0  ECD8  F01F         	call	_YellowMove	;wreg free
  1326                           
  1327                           ;main.c: 85:             }
  1328   002AB4  EFB4  F015         	goto	l4167
  1329   002AB8                     l4151:
  1330                           
  1331                           ; BSR set to: 0
  1332   002AB8  0E04               	movlw	4
  1333   002ABA  19E4               	xorwf	main@colour& (0+255),w,b
  1334   002ABC  11E5               	iorwf	(main@colour+1)& (0+255),w,b
  1335   002ABE  A4D8               	btfss	status,2,c
  1336   002AC0  EF64  F015         	goto	u4041
  1337   002AC4  EF66  F015         	goto	u4040
  1338   002AC8                     u4041:
  1339   002AC8  EF72  F015         	goto	l4155
  1340   002ACC                     u4040:
  1341   002ACC                     
  1342                           ; BSR set to: 0
  1343                           ;main.c: 87:                 BlueMove(&motorL, &motorR);
  1344   002ACC  0EF6               	movlw	low _motorL
  1345   002ACE  6E1F               	movwf	BlueMove@mL^0,c
  1346   002AD0  0E00               	movlw	high _motorL
  1347   002AD2  6E20               	movwf	(BlueMove@mL+1)^0,c
  1348   002AD4  0EED               	movlw	low _motorR
  1349   002AD6  6E21               	movwf	BlueMove@mR^0,c
  1350   002AD8  0E00               	movlw	high _motorR
  1351   002ADA  6E22               	movwf	(BlueMove@mR+1)^0,c
  1352   002ADC  EC44  F01E         	call	_BlueMove	;wreg free
  1353                           
  1354                           ;main.c: 88:             }
  1355   002AE0  EFB4  F015         	goto	l4167
  1356   002AE4                     l4155:
  1357                           
  1358                           ; BSR set to: 0
  1359   002AE4  0E05               	movlw	5
  1360   002AE6  19E4               	xorwf	main@colour& (0+255),w,b
  1361   002AE8  11E5               	iorwf	(main@colour+1)& (0+255),w,b
  1362   002AEA  A4D8               	btfss	status,2,c
  1363   002AEC  EF7A  F015         	goto	u4051
  1364   002AF0  EF7C  F015         	goto	u4050
  1365   002AF4                     u4051:
  1366   002AF4  EF88  F015         	goto	l4159
  1367   002AF8                     u4050:
  1368   002AF8                     
  1369                           ; BSR set to: 0
  1370                           ;main.c: 90:                 GreenMove(&motorL, &motorR);
  1371   002AF8  0EF6               	movlw	low _motorL
  1372   002AFA  6E1F               	movwf	GreenMove@mL^0,c
  1373   002AFC  0E00               	movlw	high _motorL
  1374   002AFE  6E20               	movwf	(GreenMove@mL+1)^0,c
  1375   002B00  0EED               	movlw	low _motorR
  1376   002B02  6E21               	movwf	GreenMove@mR^0,c
  1377   002B04  0E00               	movlw	high _motorR
  1378   002B06  6E22               	movwf	(GreenMove@mR+1)^0,c
  1379   002B08  ECE8  F021         	call	_GreenMove	;wreg free
  1380                           
  1381                           ;main.c: 91:             }
  1382   002B0C  EFB4  F015         	goto	l4167
  1383   002B10                     l4159:
  1384                           
  1385                           ; BSR set to: 0
  1386   002B10  0E06               	movlw	6
  1387   002B12  19E4               	xorwf	main@colour& (0+255),w,b
  1388   002B14  11E5               	iorwf	(main@colour+1)& (0+255),w,b
  1389   002B16  A4D8               	btfss	status,2,c
  1390   002B18  EF90  F015         	goto	u4061
  1391   002B1C  EF92  F015         	goto	u4060
  1392   002B20                     u4061:
  1393   002B20  EF9E  F015         	goto	l4163
  1394   002B24                     u4060:
  1395   002B24                     
  1396                           ; BSR set to: 0
  1397                           ;main.c: 93:                 LightBlueMove(&motorL, &motorR);
  1398   002B24  0EF6               	movlw	low _motorL
  1399   002B26  6E1F               	movwf	LightBlueMove@mL^0,c
  1400   002B28  0E00               	movlw	high _motorL
  1401   002B2A  6E20               	movwf	(LightBlueMove@mL+1)^0,c
  1402   002B2C  0EED               	movlw	low _motorR
  1403   002B2E  6E21               	movwf	LightBlueMove@mR^0,c
  1404   002B30  0E00               	movlw	high _motorR
  1405   002B32  6E22               	movwf	(LightBlueMove@mR+1)^0,c
  1406   002B34  EC53  F020         	call	_LightBlueMove	;wreg free
  1407                           
  1408                           ;main.c: 94:             }
  1409   002B38  EFB4  F015         	goto	l4167
  1410   002B3C                     l4163:
  1411                           
  1412                           ; BSR set to: 0
  1413   002B3C  0E07               	movlw	7
  1414   002B3E  19E4               	xorwf	main@colour& (0+255),w,b
  1415   002B40  11E5               	iorwf	(main@colour+1)& (0+255),w,b
  1416   002B42  A4D8               	btfss	status,2,c
  1417   002B44  EFA6  F015         	goto	u4071
  1418   002B48  EFA8  F015         	goto	u4070
  1419   002B4C                     u4071:
  1420   002B4C  EFB4  F015         	goto	l374
  1421   002B50                     u4070:
  1422   002B50                     
  1423                           ; BSR set to: 0
  1424                           ;main.c: 96:                 PinkMove(&motorL, &motorR);
  1425   002B50  0EF6               	movlw	low _motorL
  1426   002B52  6E1F               	movwf	PinkMove@mL^0,c
  1427   002B54  0E00               	movlw	high _motorL
  1428   002B56  6E20               	movwf	(PinkMove@mL+1)^0,c
  1429   002B58  0EED               	movlw	low _motorR
  1430   002B5A  6E21               	movwf	PinkMove@mR^0,c
  1431   002B5C  0E00               	movlw	high _motorR
  1432   002B5E  6E22               	movwf	(PinkMove@mR+1)^0,c
  1433   002B60  EC01  F020         	call	_PinkMove	;wreg free
  1434   002B64  EFB4  F015         	goto	l4167
  1435   002B68                     l374:
  1436   002B68                     l4167:
  1437                           
  1438                           ;main.c: 101:             sprintf(buf,"red=%d green=%d blue=%d lum=%d colour=%d \r\n",va
      +                          ls.R, vals.G,vals.B,vals.L,colour);
  1439   002B68  0E80               	movlw	low main@buf
  1440   002B6A  0100               	movlb	0	; () banked
  1441   002B6C  6F60               	movwf	sprintf@s& (0+255),b
  1442   002B6E  0E00               	movlw	high main@buf
  1443   002B70  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1444   002B72  0E01               	movlw	low STR_1
  1445   002B74  6F62               	movwf	sprintf@fmt& (0+255),b
  1446   002B76  0E0E               	movlw	high STR_1
  1447   002B78  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1448   002B7A  C188  F064         	movff	_vals,?_sprintf+4
  1449   002B7E  C189  F065         	movff	_vals+1,?_sprintf+5
  1450   002B82  C18A  F066         	movff	_vals+2,?_sprintf+6
  1451   002B86  C18B  F067         	movff	_vals+3,?_sprintf+7
  1452   002B8A  C18C  F068         	movff	_vals+4,?_sprintf+8
  1453   002B8E  C18D  F069         	movff	_vals+5,?_sprintf+9
  1454   002B92  C18E  F06A         	movff	_vals+6,?_sprintf+10
  1455   002B96  C18F  F06B         	movff	_vals+7,?_sprintf+11
  1456   002B9A  C0E4  F06C         	movff	main@colour,?_sprintf+12
  1457   002B9E  C0E5  F06D         	movff	main@colour+1,?_sprintf+13
  1458   002BA2  EC86  F01F         	call	_sprintf	;wreg free
  1459                           
  1460                           ;main.c: 102:         }else{
  1461   002BA6  EFF0  F015         	goto	l4171
  1462   002BAA                     l4169:
  1463                           
  1464                           ; BSR set to: 1
  1465                           ;main.c: 103:             sprintf(buf,"red=%d green=%d blue=%d lum=%d \r\n",vals.R, vals
      +                          .G,vals.B,vals.L);
  1466   002BAA  0E80               	movlw	low main@buf
  1467   002BAC  0100               	movlb	0	; () banked
  1468   002BAE  6F60               	movwf	sprintf@s& (0+255),b
  1469   002BB0  0E00               	movlw	high main@buf
  1470   002BB2  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1471   002BB4  0E2D               	movlw	low STR_2
  1472   002BB6  6F62               	movwf	sprintf@fmt& (0+255),b
  1473   002BB8  0E0E               	movlw	high STR_2
  1474   002BBA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1475   002BBC  C188  F064         	movff	_vals,?_sprintf+4
  1476   002BC0  C189  F065         	movff	_vals+1,?_sprintf+5
  1477   002BC4  C18A  F066         	movff	_vals+2,?_sprintf+6
  1478   002BC8  C18B  F067         	movff	_vals+3,?_sprintf+7
  1479   002BCC  C18C  F068         	movff	_vals+4,?_sprintf+8
  1480   002BD0  C18D  F069         	movff	_vals+5,?_sprintf+9
  1481   002BD4  C18E  F06A         	movff	_vals+6,?_sprintf+10
  1482   002BD8  C18F  F06B         	movff	_vals+7,?_sprintf+11
  1483   002BDC  EC86  F01F         	call	_sprintf	;wreg free
  1484   002BE0                     l4171:
  1485                           
  1486                           ;main.c: 107:         sendStringSerial4(buf);
  1487   002BE0  0E80               	movlw	low main@buf
  1488   002BE2  6E02               	movwf	sendStringSerial4@string^0,c
  1489   002BE4  0E00               	movlw	high main@buf
  1490   002BE6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1491   002BE8  EC07  F022         	call	_sendStringSerial4	;wreg free
  1492   002BEC  EFCD  F014         	goto	l4125
  1493   002BF0  EF07  F000         	goto	start
  1494   002BF4                     __end_of_main:
  1495                           	callstack 0
  1496                           
  1497 ;; *************** function _sprintf *****************
  1498 ;; Defined at:
  1499 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1502 ;;		 -> main@buf(100), 
  1503 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1504 ;;		 -> STR_2(34), STR_1(44), 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  f              11   16[BANK0 ] struct _IO_FILE
  1507 ;;  ap              2   14[BANK0 ] PTR void [1]
  1508 ;;		 -> ?_sprintf(2), 
  1509 ;;  ret             2    0        int 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  2    0[BANK0 ] int 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1519 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1520 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1522 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1523 ;;Total ram usage:       27 bytes
  1524 ;; Hardware stack levels used: 1
  1525 ;; Hardware stack levels required when called: 8
  1526 ;; This function calls:
  1527 ;;		_vfprintf
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text1
  1534   003F0C                     __ptext1:
  1535                           	callstack 0
  1536   003F0C                     _sprintf:
  1537                           	callstack 22
  1538   003F0C  0E64               	movlw	low (?_sprintf+4)
  1539   003F0E  0100               	movlb	0	; () banked
  1540   003F10  6F6E               	movwf	sprintf@ap& (0+255),b
  1541   003F12  0E00               	movlw	high (?_sprintf+4)
  1542   003F14  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  1543   003F16  C060  F070         	movff	sprintf@s,sprintf@f
  1544   003F1A  C061  F071         	movff	sprintf@s+1,sprintf@f+1
  1545   003F1E                     
  1546                           ; BSR set to: 0
  1547   003F1E  0E00               	movlw	0
  1548   003F20  6F74               	movwf	(sprintf@f+4)& (0+255),b
  1549   003F22  0E00               	movlw	0
  1550   003F24  6F73               	movwf	(sprintf@f+3)& (0+255),b
  1551   003F26                     
  1552                           ; BSR set to: 0
  1553   003F26  0E00               	movlw	0
  1554   003F28  6F7A               	movwf	(sprintf@f+10)& (0+255),b
  1555   003F2A  0E00               	movlw	0
  1556   003F2C  6F79               	movwf	(sprintf@f+9)& (0+255),b
  1557   003F2E                     
  1558                           ; BSR set to: 0
  1559   003F2E  0E70               	movlw	low sprintf@f
  1560   003F30  6E51               	movwf	vfprintf@fp^0,c
  1561   003F32  0E00               	movlw	high sprintf@f
  1562   003F34  6E52               	movwf	(vfprintf@fp+1)^0,c
  1563   003F36  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  1564   003F3A  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1565   003F3E  0E6E               	movlw	low sprintf@ap
  1566   003F40  6E55               	movwf	vfprintf@ap^0,c
  1567   003F42  0E00               	movlw	high sprintf@ap
  1568   003F44  6E56               	movwf	(vfprintf@ap+1)^0,c
  1569   003F46  EC1C  F021         	call	_vfprintf	;wreg free
  1570   003F4A  0100               	movlb	0	; () banked
  1571   003F4C  5173               	movf	(sprintf@f+3)& (0+255),w,b
  1572   003F4E  2560               	addwf	sprintf@s& (0+255),w,b
  1573   003F50  6ED9               	movwf	fsr2l,c
  1574   003F52  5174               	movf	(sprintf@f+4)& (0+255),w,b
  1575   003F54  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1576   003F56  6EDA               	movwf	fsr2h,c
  1577   003F58  0E00               	movlw	0
  1578   003F5A  6EDF               	movwf	indf2,c
  1579   003F5C                     
  1580                           ; BSR set to: 0
  1581   003F5C  0012               	return		;funcret
  1582   003F5E                     __end_of_sprintf:
  1583                           	callstack 0
  1584                           
  1585 ;; *************** function _vfprintf *****************
  1586 ;; Defined at:
  1587 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1590 ;;		 -> sprintf@f(11), 
  1591 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1592 ;;		 -> STR_2(34), STR_1(44), 
  1593 ;;  ap              2   84[COMRAM] PTR PTR void 
  1594 ;;		 -> sprintf@ap(2), 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1597 ;;		 -> STR_2(34), STR_1(44), 
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  2   80[COMRAM] int 
  1600 ;; Registers used:
  1601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1607 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1608 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1610 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1611 ;;Total ram usage:        8 bytes
  1612 ;; Hardware stack levels used: 1
  1613 ;; Hardware stack levels required when called: 7
  1614 ;; This function calls:
  1615 ;;		_vfpfcnvrt
  1616 ;; This function is called by:
  1617 ;;		_sprintf
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text2
  1622   004238                     __ptext2:
  1623                           	callstack 0
  1624   004238                     _vfprintf:
  1625                           	callstack 22
  1626   004238                     
  1627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1628   004238  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1629   00423C  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1632   004240  EF30  F021         	goto	l3697
  1633   004244                     l3695:
  1634                           
  1635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1636   004244  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1637   004248  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1638   00424C  0E57               	movlw	low vfprintf@cfmt
  1639   00424E  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1640   004250  0E00               	movlw	high vfprintf@cfmt
  1641   004252  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1642   004254  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1643   004258  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1644   00425C  EC3F  F01A         	call	_vfpfcnvrt	;wreg free
  1645   004260                     l3697:
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1648   004260  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1649   004264  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1650   004268                     	if	0	;tblptru may be non-zero
  1651   004268                     	endif
  1652   004268                     	if	0	;tblptru may be non-zero
  1653   004268                     	endif
  1654   004268  0008               	tblrd		*
  1655   00426A  50F5               	movf	tablat,w,c
  1656   00426C  0900               	iorlw	0
  1657   00426E  A4D8               	btfss	status,2,c
  1658   004270  EF3C  F021         	goto	u3561
  1659   004274  EF3E  F021         	goto	u3560
  1660   004278                     u3561:
  1661   004278  EF22  F021         	goto	l3695
  1662   00427C                     u3560:
  1663   00427C                     
  1664                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1665   00427C  0E00               	movlw	0
  1666   00427E  6E52               	movwf	(?_vfprintf+1)^0,c
  1667   004280  0E00               	movlw	0
  1668   004282  6E51               	movwf	?_vfprintf^0,c
  1669   004284  0012               	return		;funcret
  1670   004286                     __end_of_vfprintf:
  1671                           	callstack 0
  1672                           
  1673 ;; *************** function _vfpfcnvrt *****************
  1674 ;; Defined at:
  1675 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1678 ;;		 -> sprintf@f(11), 
  1679 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1680 ;;		 -> vfprintf@cfmt(2), 
  1681 ;;  ap              2   66[COMRAM] PTR PTR void 
  1682 ;;		 -> sprintf@ap(2), 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  convarg         8   70[COMRAM] struct .
  1685 ;;  cp              2   78[COMRAM] PTR unsigned char 
  1686 ;;		 -> STR_2(34), STR_1(44), 
  1687 ;;  i               2    0        int 
  1688 ;;  done            2    0        int 
  1689 ;;  c               1    0        unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1699 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1700 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1702 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1703 ;;Total ram usage:       18 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; Hardware stack levels required when called: 6
  1706 ;; This function calls:
  1707 ;;		_dtoa
  1708 ;;		_fputc
  1709 ;; This function is called by:
  1710 ;;		_vfprintf
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text3
  1715   00347E                     __ptext3:
  1716                           	callstack 0
  1717   00347E                     _vfpfcnvrt:
  1718                           	callstack 22
  1719   00347E                     
  1720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1721   00347E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1722   003482  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1723   003486  CFDE FFF6          	movff	postinc2,tblptrl
  1724   00348A  CFDD FFF7          	movff	postdec2,tblptrh
  1725   00348E                     	if	0	;tblptru may be non-zero
  1726   00348E                     	endif
  1727   00348E                     	if	0	;tblptru may be non-zero
  1728   00348E                     	endif
  1729   00348E  0008               	tblrd		*
  1730   003490  50F5               	movf	tablat,w,c
  1731   003492  0A25               	xorlw	37
  1732   003494  A4D8               	btfss	status,2,c
  1733   003496  EF4F  F01A         	goto	u2921
  1734   00349A  EF51  F01A         	goto	u2920
  1735   00349E                     u2921:
  1736   00349E  EFD1  F01A         	goto	l3263
  1737   0034A2                     u2920:
  1738   0034A2                     
  1739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1740   0034A2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1741   0034A6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1742   0034AA  2ADE               	incf	postinc2,f,c
  1743   0034AC  0E00               	movlw	0
  1744   0034AE  22DD               	addwfc	postdec2,f,c
  1745   0034B0                     
  1746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1747   0034B0  0E00               	movlw	0
  1748   0034B2  0100               	movlb	0	; () banked
  1749   0034B4  6FE7               	movwf	(_width+1)& (0+255),b
  1750   0034B6  0E00               	movlw	0
  1751   0034B8  6FE6               	movwf	_width& (0+255),b
  1752   0034BA  C0E6  F0EC         	movff	_width,_flags
  1753   0034BE                     
  1754                           ; BSR set to: 0
  1755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1756   0034BE  69E8               	setf	_prec& (0+255),b
  1757   0034C0  69E9               	setf	(_prec+1)& (0+255),b
  1758   0034C2                     
  1759                           ; BSR set to: 0
  1760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1761   0034C2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1762   0034C6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1763   0034CA  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  1764   0034CE  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  1765   0034D2                     
  1766                           ; BSR set to: 0
  1767                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1768   0034D2  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1769   0034D6  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1770   0034DA                     	if	0	;tblptru may be non-zero
  1771   0034DA                     	endif
  1772   0034DA                     	if	0	;tblptru may be non-zero
  1773   0034DA                     	endif
  1774   0034DA  0008               	tblrd		*
  1775   0034DC  50F5               	movf	tablat,w,c
  1776   0034DE  0A64               	xorlw	100
  1777   0034E0  B4D8               	btfsc	status,2,c
  1778   0034E2  EF75  F01A         	goto	u2931
  1779   0034E6  EF77  F01A         	goto	u2930
  1780   0034EA                     u2931:
  1781   0034EA  EF85  F01A         	goto	l3253
  1782   0034EE                     u2930:
  1783   0034EE                     
  1784                           ; BSR set to: 0
  1785   0034EE  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1786   0034F2  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1787   0034F6                     	if	0	;tblptru may be non-zero
  1788   0034F6                     	endif
  1789   0034F6                     	if	0	;tblptru may be non-zero
  1790   0034F6                     	endif
  1791   0034F6  0008               	tblrd		*
  1792   0034F8  50F5               	movf	tablat,w,c
  1793   0034FA  0A69               	xorlw	105
  1794   0034FC  A4D8               	btfss	status,2,c
  1795   0034FE  EF83  F01A         	goto	u2941
  1796   003502  EF85  F01A         	goto	u2940
  1797   003506                     u2941:
  1798   003506  EFC8  F01A         	goto	l3259
  1799   00350A                     u2940:
  1800   00350A                     l3253:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1804   00350A  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1805   00350E  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1806   003512  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1807   003516  0E02               	movlw	2
  1808   003518  26DE               	addwf	postinc2,f,c
  1809   00351A  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1810   00351E  0E00               	movlw	0
  1811   003520  22DD               	addwfc	postdec2,f,c
  1812   003522  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1813   003526  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1814   00352A  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  1815   00352E  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  1816   003532  0E00               	movlw	0
  1817   003534  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1818   003536  0EFF               	movlw	-1
  1819   003538  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1820   00353A  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1821   00353C  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1822   00353E  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1823   003540  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1824   003542  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1827   003544  0E01               	movlw	1
  1828   003546  244F               	addwf	vfpfcnvrt@cp^0,w,c
  1829   003548  6E45               	movwf	??_vfpfcnvrt^0,c
  1830   00354A  0E00               	movlw	0
  1831   00354C  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1832   00354E  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1833   003550  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1834   003554  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1835   003558  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1836   00355C  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1837   003560                     
  1838                           ; BSR set to: 0
  1839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1840   003560  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1841   003564  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1842   003568  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1843   00356C  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1844   003570  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1845   003574  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1846   003578  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1847   00357C  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1848   003580  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1849   003584  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1850   003588  ECFA  F015         	call	_dtoa	;wreg free
  1851   00358C  EFE5  F01A         	goto	l1243
  1852   003590                     l3259:
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1855   003590  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1856   003594  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1857   003598  2ADE               	incf	postinc2,f,c
  1858   00359A  0E00               	movlw	0
  1859   00359C  22DD               	addwfc	postdec2,f,c
  1860   00359E  EFE5  F01A         	goto	l1243
  1861   0035A2                     l3263:
  1862                           
  1863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1864   0035A2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1865   0035A6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1866   0035AA  CFDE FFF6          	movff	postinc2,tblptrl
  1867   0035AE  CFDD FFF7          	movff	postdec2,tblptrh
  1868   0035B2                     	if	0	;tblptru may be non-zero
  1869   0035B2                     	endif
  1870   0035B2                     	if	0	;tblptru may be non-zero
  1871   0035B2                     	endif
  1872   0035B2  0008               	tblrd		*
  1873   0035B4  50F5               	movf	tablat,w,c
  1874   0035B6  6E01               	movwf	fputc@c^0,c
  1875   0035B8  6A02               	clrf	(fputc@c+1)^0,c
  1876   0035BA  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1877   0035BE  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1878   0035C2  EC68  F01B         	call	_fputc	;wreg free
  1879   0035C6  EFC8  F01A         	goto	l3259
  1880   0035CA                     l1243:
  1881   0035CA  0012               	return		;funcret
  1882   0035CC                     __end_of_vfpfcnvrt:
  1883                           	callstack 0
  1884                           
  1885 ;; *************** function _dtoa *****************
  1886 ;; Defined at:
  1887 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1890 ;;		 -> sprintf@f(11), 
  1891 ;;  d               8   29[COMRAM] long long 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  n               8   51[COMRAM] long long 
  1894 ;;  i               2   59[COMRAM] int 
  1895 ;;  w               2   49[COMRAM] int 
  1896 ;;  p               2   47[COMRAM] int 
  1897 ;;  s               1   61[COMRAM] unsigned char 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1907 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1908 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1909 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1910 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1911 ;;Total ram usage:       35 bytes
  1912 ;; Hardware stack levels used: 1
  1913 ;; Hardware stack levels required when called: 5
  1914 ;; This function calls:
  1915 ;;		___aodiv
  1916 ;;		___aomod
  1917 ;;		_abs
  1918 ;;		_pad
  1919 ;; This function is called by:
  1920 ;;		_vfpfcnvrt
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text4
  1925   002BF4                     __ptext4:
  1926                           	callstack 0
  1927   002BF4                     _dtoa:
  1928                           	callstack 22
  1929   002BF4                     
  1930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1931   002BF4  C01E  F034         	movff	dtoa@d,dtoa@n
  1932   002BF8  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  1933   002BFC  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  1934   002C00  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  1935   002C04  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  1936   002C08  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  1937   002C0C  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  1938   002C10  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  1939   002C14                     
  1940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1941   002C14  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  1942   002C16  EF0F  F016         	goto	u2331
  1943   002C1A  EF12  F016         	goto	u2330
  1944   002C1E                     u2331:
  1945   002C1E  0E01               	movlw	1
  1946   002C20  EF13  F016         	goto	u2340
  1947   002C24                     u2330:
  1948   002C24  0E00               	movlw	0
  1949   002C26                     u2340:
  1950   002C26  6E3E               	movwf	dtoa@s^0,c
  1951   002C28                     
  1952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1953   002C28  503E               	movf	dtoa@s^0,w,c
  1954   002C2A  B4D8               	btfsc	status,2,c
  1955   002C2C  EF1A  F016         	goto	u2351
  1956   002C30  EF1C  F016         	goto	u2350
  1957   002C34                     u2351:
  1958   002C34  EF2C  F016         	goto	l2907
  1959   002C38                     u2350:
  1960   002C38                     
  1961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1962   002C38  1E3B               	comf	(dtoa@n+7)^0,f,c
  1963   002C3A  1E3A               	comf	(dtoa@n+6)^0,f,c
  1964   002C3C  1E39               	comf	(dtoa@n+5)^0,f,c
  1965   002C3E  1E38               	comf	(dtoa@n+4)^0,f,c
  1966   002C40  1E37               	comf	(dtoa@n+3)^0,f,c
  1967   002C42  1E36               	comf	(dtoa@n+2)^0,f,c
  1968   002C44  1E35               	comf	(dtoa@n+1)^0,f,c
  1969   002C46  6C34               	negf	dtoa@n^0,c
  1970   002C48  0E00               	movlw	0
  1971   002C4A  2235               	addwfc	(dtoa@n+1)^0,f,c
  1972   002C4C  2236               	addwfc	(dtoa@n+2)^0,f,c
  1973   002C4E  2237               	addwfc	(dtoa@n+3)^0,f,c
  1974   002C50  2238               	addwfc	(dtoa@n+4)^0,f,c
  1975   002C52  2239               	addwfc	(dtoa@n+5)^0,f,c
  1976   002C54  223A               	addwfc	(dtoa@n+6)^0,f,c
  1977   002C56  223B               	addwfc	(dtoa@n+7)^0,f,c
  1978   002C58                     l2907:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1981   002C58  0100               	movlb	0	; () banked
  1982   002C5A  BFE9               	btfsc	(_prec+1)& (0+255),7,b
  1983   002C5C  EF3A  F016         	goto	u2360
  1984   002C60  51E9               	movf	(_prec+1)& (0+255),w,b
  1985   002C62  E106               	bnz	u2361
  1986   002C64  05E8               	decf	_prec& (0+255),w,b
  1987   002C66  B0D8               	btfsc	status,0,c
  1988   002C68  EF38  F016         	goto	u2361
  1989   002C6C  EF3A  F016         	goto	u2360
  1990   002C70                     u2361:
  1991   002C70  EF40  F016         	goto	l1222
  1992   002C74                     u2360:
  1993   002C74                     
  1994                           ; BSR set to: 0
  1995   002C74  0E00               	movlw	0
  1996   002C76  6E31               	movwf	(dtoa@p+1)^0,c
  1997   002C78  0E01               	movlw	1
  1998   002C7A  6E30               	movwf	dtoa@p^0,c
  1999   002C7C  EF44  F016         	goto	l1224
  2000   002C80                     l1222:
  2001                           
  2002                           ; BSR set to: 0
  2003   002C80  C0E8  F030         	movff	_prec,dtoa@p
  2004   002C84  C0E9  F031         	movff	_prec+1,dtoa@p+1
  2005   002C88                     l1224:
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2009   002C88  C0E6  F032         	movff	_width,dtoa@w
  2010   002C8C  C0E7  F033         	movff	_width+1,dtoa@w+1
  2011   002C90                     
  2012                           ; BSR set to: 0
  2013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2014   002C90  503E               	movf	dtoa@s^0,w,c
  2015   002C92  B4D8               	btfsc	status,2,c
  2016   002C94  EF4E  F016         	goto	u2371
  2017   002C98  EF50  F016         	goto	u2370
  2018   002C9C                     u2371:
  2019   002C9C  EF67  F016         	goto	l1225
  2020   002CA0                     u2370:
  2021   002CA0                     
  2022                           ; BSR set to: 0
  2023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2024   002CA0  0632               	decf	dtoa@w^0,f,c
  2025   002CA2  A0D8               	btfss	status,0,c
  2026   002CA4  0633               	decf	(dtoa@w+1)^0,f,c
  2027   002CA6                     
  2028                           ; BSR set to: 0
  2029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2030   002CA6  503E               	movf	dtoa@s^0,w,c
  2031   002CA8  A4D8               	btfss	status,2,c
  2032   002CAA  EF59  F016         	goto	u2381
  2033   002CAE  EF5B  F016         	goto	u2380
  2034   002CB2                     u2381:
  2035   002CB2  EF61  F016         	goto	l2919
  2036   002CB6                     u2380:
  2037   002CB6                     
  2038                           ; BSR set to: 0
  2039   002CB6  0E00               	movlw	0
  2040   002CB8  6E2F               	movwf	(_dtoa$2235+1)^0,c
  2041   002CBA  0E2B               	movlw	43
  2042   002CBC  6E2E               	movwf	_dtoa$2235^0,c
  2043   002CBE  EF65  F016         	goto	l2921
  2044   002CC2                     l2919:
  2045                           
  2046                           ; BSR set to: 0
  2047   002CC2  0E00               	movlw	0
  2048   002CC4  6E2F               	movwf	(_dtoa$2235+1)^0,c
  2049   002CC6  0E2D               	movlw	45
  2050   002CC8  6E2E               	movwf	_dtoa$2235^0,c
  2051   002CCA                     l2921:
  2052                           
  2053                           ; BSR set to: 0
  2054   002CCA  C02E  F03E         	movff	_dtoa$2235,dtoa@s
  2055   002CCE                     l1225:
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2059   002CCE  0E00               	movlw	0
  2060   002CD0  6E3D               	movwf	(dtoa@i+1)^0,c
  2061   002CD2  0E1F               	movlw	31
  2062   002CD4  6E3C               	movwf	dtoa@i^0,c
  2063   002CD6                     
  2064                           ; BSR set to: 0
  2065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2066   002CD6  0E00               	movlw	0
  2067   002CD8  0101               	movlb	1	; () banked
  2068   002CDA  6F7B               	movwf	(_dbuf+31)& (0+255),b
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2071   002CDC  EFEC  F016         	goto	l2935
  2072   002CE0                     l2925:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2075   002CE0  063C               	decf	dtoa@i^0,f,c
  2076   002CE2  A0D8               	btfss	status,0,c
  2077   002CE4  063D               	decf	(dtoa@i+1)^0,f,c
  2078   002CE6                     
  2079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2080   002CE6  0E5C               	movlw	low _dbuf
  2081   002CE8  243C               	addwf	dtoa@i^0,w,c
  2082   002CEA  6ED9               	movwf	fsr2l,c
  2083   002CEC  0E01               	movlw	high _dbuf
  2084   002CEE  203D               	addwfc	(dtoa@i+1)^0,w,c
  2085   002CF0  6EDA               	movwf	fsr2h,c
  2086   002CF2  C034  F001         	movff	dtoa@n,___aomod@dividend
  2087   002CF6  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2088   002CFA  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2089   002CFE  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2090   002D02  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2091   002D06  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2092   002D0A  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2093   002D0E  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2094   002D12  0E0A               	movlw	10
  2095   002D14  6E09               	movwf	___aomod@divisor^0,c
  2096   002D16  0E00               	movlw	0
  2097   002D18  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2098   002D1A  0E00               	movlw	0
  2099   002D1C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2100   002D1E  0E00               	movlw	0
  2101   002D20  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2102   002D22  0E00               	movlw	0
  2103   002D24  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2104   002D26  0E00               	movlw	0
  2105   002D28  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2106   002D2A  0E00               	movlw	0
  2107   002D2C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2108   002D2E  0E00               	movlw	0
  2109   002D30  6E10               	movwf	(___aomod@divisor+7)^0,c
  2110   002D32  EC8D  F019         	call	___aomod	;wreg free
  2111   002D36  C001  F026         	movff	?___aomod,??_dtoa
  2112   002D3A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2113   002D3E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2114   002D42  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2115   002D46  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2116   002D4A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2117   002D4E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2118   002D52  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2119   002D56  C026  F013         	movff	??_dtoa,abs@a
  2120   002D5A  C027  F014         	movff	??_dtoa+1,abs@a+1
  2121   002D5E  ECA9  F021         	call	_abs	;wreg free
  2122   002D62  5013               	movf	?_abs^0,w,c
  2123   002D64  0F30               	addlw	48
  2124   002D66  6EDF               	movwf	indf2,c
  2125   002D68                     
  2126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2127   002D68  0630               	decf	dtoa@p^0,f,c
  2128   002D6A  A0D8               	btfss	status,0,c
  2129   002D6C  0631               	decf	(dtoa@p+1)^0,f,c
  2130   002D6E                     
  2131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2132   002D6E  0632               	decf	dtoa@w^0,f,c
  2133   002D70  A0D8               	btfss	status,0,c
  2134   002D72  0633               	decf	(dtoa@w+1)^0,f,c
  2135   002D74                     
  2136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2137   002D74  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2138   002D78  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2139   002D7C  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2140   002D80  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2141   002D84  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2142   002D88  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2143   002D8C  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2144   002D90  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2145   002D94  0E0A               	movlw	10
  2146   002D96  6E09               	movwf	___aodiv@divisor^0,c
  2147   002D98  0E00               	movlw	0
  2148   002D9A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2149   002D9C  0E00               	movlw	0
  2150   002D9E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2151   002DA0  0E00               	movlw	0
  2152   002DA2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2153   002DA4  0E00               	movlw	0
  2154   002DA6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2155   002DA8  0E00               	movlw	0
  2156   002DAA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2157   002DAC  0E00               	movlw	0
  2158   002DAE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2159   002DB0  0E00               	movlw	0
  2160   002DB2  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2161   002DB4  EC13  F018         	call	___aodiv	;wreg free
  2162   002DB8  C001  F034         	movff	?___aodiv,dtoa@n
  2163   002DBC  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2164   002DC0  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2165   002DC4  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2166   002DC8  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2167   002DCC  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2168   002DD0  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2169   002DD4  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2170   002DD8                     l2935:
  2171                           
  2172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2173   002DD8  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2174   002DDA  EFF7  F016         	goto	u2391
  2175   002DDE  503D               	movf	(dtoa@i+1)^0,w,c
  2176   002DE0  E108               	bnz	u2390
  2177   002DE2  043C               	decf	dtoa@i^0,w,c
  2178   002DE4  A0D8               	btfss	status,0,c
  2179   002DE6  EFF7  F016         	goto	u2391
  2180   002DEA  EFF9  F016         	goto	u2390
  2181   002DEE                     u2391:
  2182   002DEE  EF15  F017         	goto	l2941
  2183   002DF2                     u2390:
  2184   002DF2  5034               	movf	dtoa@n^0,w,c
  2185   002DF4  1035               	iorwf	(dtoa@n+1)^0,w,c
  2186   002DF6  1036               	iorwf	(dtoa@n+2)^0,w,c
  2187   002DF8  1037               	iorwf	(dtoa@n+3)^0,w,c
  2188   002DFA  1038               	iorwf	(dtoa@n+4)^0,w,c
  2189   002DFC  1039               	iorwf	(dtoa@n+5)^0,w,c
  2190   002DFE  103A               	iorwf	(dtoa@n+6)^0,w,c
  2191   002E00  103B               	iorwf	(dtoa@n+7)^0,w,c
  2192   002E02  A4D8               	btfss	status,2,c
  2193   002E04  EF06  F017         	goto	u2401
  2194   002E08  EF08  F017         	goto	u2400
  2195   002E0C                     u2401:
  2196   002E0C  EF70  F016         	goto	l2925
  2197   002E10                     u2400:
  2198   002E10  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2199   002E12  EF15  F017         	goto	u2410
  2200   002E16  5031               	movf	(dtoa@p+1)^0,w,c
  2201   002E18  E106               	bnz	u2411
  2202   002E1A  0430               	decf	dtoa@p^0,w,c
  2203   002E1C  B0D8               	btfsc	status,0,c
  2204   002E1E  EF13  F017         	goto	u2411
  2205   002E22  EF15  F017         	goto	u2410
  2206   002E26                     u2411:
  2207   002E26  EF70  F016         	goto	l2925
  2208   002E2A                     u2410:
  2209   002E2A                     l2941:
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2212   002E2A  503E               	movf	dtoa@s^0,w,c
  2213   002E2C  B4D8               	btfsc	status,2,c
  2214   002E2E  EF1B  F017         	goto	u2421
  2215   002E32  EF1D  F017         	goto	u2420
  2216   002E36                     u2421:
  2217   002E36  EF28  F017         	goto	l2947
  2218   002E3A                     u2420:
  2219   002E3A                     
  2220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2221   002E3A  063C               	decf	dtoa@i^0,f,c
  2222   002E3C  A0D8               	btfss	status,0,c
  2223   002E3E  063D               	decf	(dtoa@i+1)^0,f,c
  2224   002E40                     
  2225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2226   002E40  0E5C               	movlw	low _dbuf
  2227   002E42  243C               	addwf	dtoa@i^0,w,c
  2228   002E44  6ED9               	movwf	fsr2l,c
  2229   002E46  0E01               	movlw	high _dbuf
  2230   002E48  203D               	addwfc	(dtoa@i+1)^0,w,c
  2231   002E4A  6EDA               	movwf	fsr2h,c
  2232   002E4C  C03E  FFDF         	movff	dtoa@s,indf2
  2233   002E50                     l2947:
  2234                           
  2235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2236   002E50  C01C  F011         	movff	dtoa@fp,pad@fp
  2237   002E54  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2238   002E58  0E5C               	movlw	low _dbuf
  2239   002E5A  243C               	addwf	dtoa@i^0,w,c
  2240   002E5C  6E13               	movwf	pad@buf^0,c
  2241   002E5E  0E01               	movlw	high _dbuf
  2242   002E60  203D               	addwfc	(dtoa@i+1)^0,w,c
  2243   002E62  6E14               	movwf	(pad@buf+1)^0,c
  2244   002E64  C032  F015         	movff	dtoa@w,pad@p
  2245   002E68  C033  F016         	movff	dtoa@w+1,pad@p+1
  2246   002E6C  EC92  F01D         	call	_pad	;wreg free
  2247   002E70  0012               	return		;funcret
  2248   002E72                     __end_of_dtoa:
  2249                           	callstack 0
  2250                           
  2251 ;; *************** function _pad *****************
  2252 ;; Defined at:
  2253 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2256 ;;		 -> sprintf@f(11), 
  2257 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2258 ;;		 -> dbuf(32), 
  2259 ;;  p               2   20[COMRAM] int 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  w               2   25[COMRAM] int 
  2262 ;;  i               2   23[COMRAM] int 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2272 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2273 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2274 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2275 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2276 ;;Total ram usage:       11 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; Hardware stack levels required when called: 4
  2279 ;; This function calls:
  2280 ;;		_fputc
  2281 ;;		_fputs
  2282 ;; This function is called by:
  2283 ;;		_dtoa
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text5
  2288   003B24                     __ptext5:
  2289                           	callstack 0
  2290   003B24                     _pad:
  2291                           	callstack 22
  2292   003B24                     
  2293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2294   003B24  BE16               	btfsc	(pad@p+1)^0,7,c
  2295   003B26  EF97  F01D         	goto	u2261
  2296   003B2A  EF99  F01D         	goto	u2260
  2297   003B2E                     u2261:
  2298   003B2E  EF9F  F01D         	goto	l2865
  2299   003B32                     u2260:
  2300   003B32  C015  F01A         	movff	pad@p,pad@w
  2301   003B36  C016  F01B         	movff	pad@p+1,pad@w+1
  2302   003B3A  EFA3  F01D         	goto	l1213
  2303   003B3E                     l2865:
  2304   003B3E  0E00               	movlw	0
  2305   003B40  6E1B               	movwf	(pad@w+1)^0,c
  2306   003B42  0E00               	movlw	0
  2307   003B44  6E1A               	movwf	pad@w^0,c
  2308   003B46                     l1213:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2311   003B46  0E00               	movlw	0
  2312   003B48  6E19               	movwf	(pad@i+1)^0,c
  2313   003B4A  0E00               	movlw	0
  2314   003B4C  6E18               	movwf	pad@i^0,c
  2315                           
  2316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2317   003B4E  EFB5  F01D         	goto	l2871
  2318   003B52                     l2867:
  2319                           
  2320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2321   003B52  0E00               	movlw	0
  2322   003B54  6E02               	movwf	(fputc@c+1)^0,c
  2323   003B56  0E20               	movlw	32
  2324   003B58  6E01               	movwf	fputc@c^0,c
  2325   003B5A  C011  F003         	movff	pad@fp,fputc@fp
  2326   003B5E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2327   003B62  EC68  F01B         	call	_fputc	;wreg free
  2328   003B66                     
  2329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2330   003B66  4A18               	infsnz	pad@i^0,f,c
  2331   003B68  2A19               	incf	(pad@i+1)^0,f,c
  2332   003B6A                     l2871:
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2335   003B6A  501A               	movf	pad@w^0,w,c
  2336   003B6C  5C18               	subwf	pad@i^0,w,c
  2337   003B6E  5019               	movf	(pad@i+1)^0,w,c
  2338   003B70  0A80               	xorlw	128
  2339   003B72  6E17               	movwf	??_pad^0,c
  2340   003B74  501B               	movf	(pad@w+1)^0,w,c
  2341   003B76  0A80               	xorlw	128
  2342   003B78  5817               	subwfb	??_pad^0,w,c
  2343   003B7A  A0D8               	btfss	status,0,c
  2344   003B7C  EFC2  F01D         	goto	u2271
  2345   003B80  EFC4  F01D         	goto	u2270
  2346   003B84                     u2271:
  2347   003B84  EFA9  F01D         	goto	l2867
  2348   003B88                     u2270:
  2349   003B88                     
  2350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2351   003B88  C013  F00A         	movff	pad@buf,fputs@s
  2352   003B8C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2353   003B90  C011  F00C         	movff	pad@fp,fputs@fp
  2354   003B94  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2355   003B98  EC66  F021         	call	_fputs	;wreg free
  2356   003B9C  0012               	return		;funcret
  2357   003B9E                     __end_of_pad:
  2358                           	callstack 0
  2359                           
  2360 ;; *************** function _fputs *****************
  2361 ;; Defined at:
  2362 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2365 ;;		 -> dbuf(32), 
  2366 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2367 ;;		 -> sprintf@f(11), 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  i               2   14[COMRAM] int 
  2370 ;;  c               1   13[COMRAM] unsigned char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  2    9[COMRAM] int 
  2373 ;; Registers used:
  2374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2380 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2381 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2384 ;;Total ram usage:        7 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 3
  2387 ;; This function calls:
  2388 ;;		_fputc
  2389 ;; This function is called by:
  2390 ;;		_pad
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           	psect	text6
  2395   0042CC                     __ptext6:
  2396                           	callstack 0
  2397   0042CC                     _fputs:
  2398                           	callstack 22
  2399   0042CC  0E00               	movlw	0
  2400   0042CE  6E10               	movwf	(fputs@i+1)^0,c
  2401   0042D0  0E00               	movlw	0
  2402   0042D2  6E0F               	movwf	fputs@i^0,c
  2403   0042D4  EF77  F021         	goto	l2751
  2404   0042D8                     l2747:
  2405   0042D8  C00E  F001         	movff	fputs@c,fputc@c
  2406   0042DC  6A02               	clrf	(fputc@c+1)^0,c
  2407   0042DE  C00C  F003         	movff	fputs@fp,fputc@fp
  2408   0042E2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2409   0042E6  EC68  F01B         	call	_fputc	;wreg free
  2410   0042EA  4A0F               	infsnz	fputs@i^0,f,c
  2411   0042EC  2A10               	incf	(fputs@i+1)^0,f,c
  2412   0042EE                     l2751:
  2413   0042EE  500F               	movf	fputs@i^0,w,c
  2414   0042F0  240A               	addwf	fputs@s^0,w,c
  2415   0042F2  6ED9               	movwf	fsr2l,c
  2416   0042F4  5010               	movf	(fputs@i+1)^0,w,c
  2417   0042F6  200B               	addwfc	(fputs@s+1)^0,w,c
  2418   0042F8  6EDA               	movwf	fsr2h,c
  2419   0042FA  50DF               	movf	indf2,w,c
  2420   0042FC  6E0E               	movwf	fputs@c^0,c
  2421   0042FE  500E               	movf	fputs@c^0,w,c
  2422   004300  A4D8               	btfss	status,2,c
  2423   004302  EF85  F021         	goto	u2091
  2424   004306  EF87  F021         	goto	u2090
  2425   00430A                     u2091:
  2426   00430A  EF6C  F021         	goto	l2747
  2427   00430E                     u2090:
  2428   00430E  0012               	return		;funcret
  2429   004310                     __end_of_fputs:
  2430                           	callstack 0
  2431                           
  2432 ;; *************** function _fputc *****************
  2433 ;; Defined at:
  2434 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  c               2    0[COMRAM] int 
  2437 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2438 ;;		 -> sprintf@f(11), 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  2    0[COMRAM] int 
  2443 ;; Registers used:
  2444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2450 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2452 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2453 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2454 ;;Total ram usage:        9 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; Hardware stack levels required when called: 2
  2457 ;; This function calls:
  2458 ;;		_putch
  2459 ;; This function is called by:
  2460 ;;		_pad
  2461 ;;		_vfpfcnvrt
  2462 ;;		_fputs
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	text7
  2467   0036D0                     __ptext7:
  2468                           	callstack 0
  2469   0036D0                     _fputc:
  2470                           	callstack 25
  2471   0036D0  5003               	movf	fputc@fp^0,w,c
  2472   0036D2  1004               	iorwf	(fputc@fp+1)^0,w,c
  2473   0036D4  B4D8               	btfsc	status,2,c
  2474   0036D6  EF6F  F01B         	goto	u2051
  2475   0036DA  EF71  F01B         	goto	u2050
  2476   0036DE                     u2051:
  2477   0036DE  EF7A  F01B         	goto	l2735
  2478   0036E2                     u2050:
  2479   0036E2  5003               	movf	fputc@fp^0,w,c
  2480   0036E4  1004               	iorwf	(fputc@fp+1)^0,w,c
  2481   0036E6  A4D8               	btfss	status,2,c
  2482   0036E8  EF78  F01B         	goto	u2061
  2483   0036EC  EF7A  F01B         	goto	u2060
  2484   0036F0                     u2061:
  2485   0036F0  EF7F  F01B         	goto	l2737
  2486   0036F4                     u2060:
  2487   0036F4                     l2735:
  2488   0036F4  5001               	movf	fputc@c^0,w,c
  2489   0036F6  EC9C  F022         	call	_putch
  2490   0036FA  EFCC  F01B         	goto	l1268
  2491   0036FE                     l2737:
  2492   0036FE  EE20 F009          	lfsr	2,9
  2493   003702  5003               	movf	fputc@fp^0,w,c
  2494   003704  26D9               	addwf	fsr2l,f,c
  2495   003706  5004               	movf	(fputc@fp+1)^0,w,c
  2496   003708  22DA               	addwfc	fsr2h,f,c
  2497   00370A  50DE               	movf	postinc2,w,c
  2498   00370C  10DE               	iorwf	postinc2,w,c
  2499   00370E  B4D8               	btfsc	status,2,c
  2500   003710  EF8C  F01B         	goto	u2071
  2501   003714  EF8E  F01B         	goto	u2070
  2502   003718                     u2071:
  2503   003718  EFA9  F01B         	goto	l2741
  2504   00371C                     u2070:
  2505   00371C  EE20 F009          	lfsr	2,9
  2506   003720  5003               	movf	fputc@fp^0,w,c
  2507   003722  26D9               	addwf	fsr2l,f,c
  2508   003724  5004               	movf	(fputc@fp+1)^0,w,c
  2509   003726  22DA               	addwfc	fsr2h,f,c
  2510   003728  EE10 F003          	lfsr	1,3
  2511   00372C  5003               	movf	fputc@fp^0,w,c
  2512   00372E  26E1               	addwf	fsr1l,f,c
  2513   003730  5004               	movf	(fputc@fp+1)^0,w,c
  2514   003732  22E2               	addwfc	fsr1h,f,c
  2515   003734  50DE               	movf	postinc2,w,c
  2516   003736  5CE6               	subwf	postinc1,w,c
  2517   003738  50E6               	movf	postinc1,w,c
  2518   00373A  0A80               	xorlw	128
  2519   00373C  6E09               	movwf	(??_fputc+4)^0,c
  2520   00373E  50DE               	movf	postinc2,w,c
  2521   003740  0A80               	xorlw	128
  2522   003742  5809               	subwfb	(??_fputc+4)^0,w,c
  2523   003744  B0D8               	btfsc	status,0,c
  2524   003746  EFA7  F01B         	goto	u2081
  2525   00374A  EFA9  F01B         	goto	u2080
  2526   00374E                     u2081:
  2527   00374E  EFCC  F01B         	goto	l1268
  2528   003752                     u2080:
  2529   003752                     l2741:
  2530   003752  EE20 F003          	lfsr	2,3
  2531   003756  5003               	movf	fputc@fp^0,w,c
  2532   003758  26D9               	addwf	fsr2l,f,c
  2533   00375A  5004               	movf	(fputc@fp+1)^0,w,c
  2534   00375C  22DA               	addwfc	fsr2h,f,c
  2535   00375E  CFDE F005          	movff	postinc2,??_fputc
  2536   003762  CFDD F006          	movff	postdec2,??_fputc+1
  2537   003766  C003  FFD9         	movff	fputc@fp,fsr2l
  2538   00376A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2539   00376E  CFDE F007          	movff	postinc2,??_fputc+2
  2540   003772  CFDD F008          	movff	postdec2,??_fputc+3
  2541   003776  5005               	movf	??_fputc^0,w,c
  2542   003778  2407               	addwf	(??_fputc+2)^0,w,c
  2543   00377A  6ED9               	movwf	fsr2l,c
  2544   00377C  5006               	movf	(??_fputc+1)^0,w,c
  2545   00377E  2008               	addwfc	(??_fputc+3)^0,w,c
  2546   003780  6EDA               	movwf	fsr2h,c
  2547   003782  C001  FFDF         	movff	fputc@c,indf2
  2548   003786  EE20 F003          	lfsr	2,3
  2549   00378A  5003               	movf	fputc@fp^0,w,c
  2550   00378C  26D9               	addwf	fsr2l,f,c
  2551   00378E  5004               	movf	(fputc@fp+1)^0,w,c
  2552   003790  22DA               	addwfc	fsr2h,f,c
  2553   003792  2ADE               	incf	postinc2,f,c
  2554   003794  0E00               	movlw	0
  2555   003796  22DD               	addwfc	postdec2,f,c
  2556   003798                     l1268:
  2557   003798  0012               	return		;funcret
  2558   00379A                     __end_of_fputc:
  2559                           	callstack 0
  2560                           
  2561 ;; *************** function _putch *****************
  2562 ;; Defined at:
  2563 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  c               1    wreg     unsigned char 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  c               1    0[COMRAM] unsigned char 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 1
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_fputc
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text8
  2592   004538                     __ptext8:
  2593                           	callstack 0
  2594   004538                     _putch:
  2595                           	callstack 25
  2596   004538  0012               	return		;funcret
  2597   00453A                     __end_of_putch:
  2598                           	callstack 0
  2599                           
  2600 ;; *************** function _abs *****************
  2601 ;; Defined at:
  2602 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  a               2   18[COMRAM] int 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  2   18[COMRAM] int 
  2609 ;; Registers used:
  2610 ;;		wreg, status,2, status,0
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2619 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2620 ;;Total ram usage:        4 bytes
  2621 ;; Hardware stack levels used: 1
  2622 ;; Hardware stack levels required when called: 1
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_dtoa
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text9
  2631   004352                     __ptext9:
  2632                           	callstack 0
  2633   004352                     _abs:
  2634                           	callstack 25
  2635   004352  BE14               	btfsc	(abs@a+1)^0,7,c
  2636   004354  EFB6  F021         	goto	u2280
  2637   004358  5014               	movf	(abs@a+1)^0,w,c
  2638   00435A  E106               	bnz	u2281
  2639   00435C  0413               	decf	abs@a^0,w,c
  2640   00435E  B0D8               	btfsc	status,0,c
  2641   004360  EFB4  F021         	goto	u2281
  2642   004364  EFB6  F021         	goto	u2280
  2643   004368                     u2281:
  2644   004368  EFC4  F021         	goto	l1253
  2645   00436C                     u2280:
  2646   00436C  C013  F015         	movff	abs@a,??_abs
  2647   004370  C014  F016         	movff	abs@a+1,??_abs+1
  2648   004374  1E15               	comf	??_abs^0,f,c
  2649   004376  1E16               	comf	(??_abs+1)^0,f,c
  2650   004378  4A15               	infsnz	??_abs^0,f,c
  2651   00437A  2A16               	incf	(??_abs+1)^0,f,c
  2652   00437C  C015  F013         	movff	??_abs,?_abs
  2653   004380  C016  F014         	movff	??_abs+1,?_abs+1
  2654   004384  EFC8  F021         	goto	l1256
  2655   004388                     l1253:
  2656   004388  C013  F013         	movff	abs@a,?_abs
  2657   00438C  C014  F014         	movff	abs@a+1,?_abs+1
  2658   004390                     l1256:
  2659   004390  0012               	return		;funcret
  2660   004392                     __end_of_abs:
  2661                           	callstack 0
  2662                           
  2663 ;; *************** function ___aomod *****************
  2664 ;; Defined at:
  2665 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  dividend        8    0[COMRAM] long long 
  2668 ;;  divisor         8    8[COMRAM] long long 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  sign            1   17[COMRAM] unsigned char 
  2671 ;;  counter         1   16[COMRAM] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  8    0[COMRAM] long long 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2681 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2684 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2685 ;;Total ram usage:       18 bytes
  2686 ;; Hardware stack levels used: 1
  2687 ;; Hardware stack levels required when called: 1
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_dtoa
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text10
  2696   00331A                     __ptext10:
  2697                           	callstack 0
  2698   00331A                     ___aomod:
  2699                           	callstack 25
  2700   00331A  0E00               	movlw	0
  2701   00331C  6E12               	movwf	___aomod@sign^0,c
  2702   00331E  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2703   003320  EF96  F019         	goto	u2170
  2704   003324  EF94  F019         	goto	u2171
  2705   003328                     u2171:
  2706   003328  EFA8  F019         	goto	l2811
  2707   00332C                     u2170:
  2708   00332C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2709   00332E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2710   003330  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2711   003332  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2712   003334  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2713   003336  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2714   003338  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2715   00333A  6C01               	negf	___aomod@dividend^0,c
  2716   00333C  0E00               	movlw	0
  2717   00333E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2718   003340  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2719   003342  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2720   003344  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2721   003346  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2722   003348  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2723   00334A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2724   00334C  0E01               	movlw	1
  2725   00334E  6E12               	movwf	___aomod@sign^0,c
  2726   003350                     l2811:
  2727   003350  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2728   003352  EFAF  F019         	goto	u2180
  2729   003356  EFAD  F019         	goto	u2181
  2730   00335A                     u2181:
  2731   00335A  EFBF  F019         	goto	l2815
  2732   00335E                     u2180:
  2733   00335E  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2734   003360  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2735   003362  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2736   003364  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2737   003366  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2738   003368  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2739   00336A  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2740   00336C  6C09               	negf	___aomod@divisor^0,c
  2741   00336E  0E00               	movlw	0
  2742   003370  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2743   003372  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2744   003374  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2745   003376  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2746   003378  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2747   00337A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2748   00337C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2749   00337E                     l2815:
  2750   00337E  5009               	movf	___aomod@divisor^0,w,c
  2751   003380  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2752   003382  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2753   003384  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2754   003386  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2755   003388  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2756   00338A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2757   00338C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2758   00338E  B4D8               	btfsc	status,2,c
  2759   003390  EFCC  F019         	goto	u2191
  2760   003394  EFCE  F019         	goto	u2190
  2761   003398                     u2191:
  2762   003398  EF16  F01A         	goto	l2831
  2763   00339C                     u2190:
  2764   00339C  0E01               	movlw	1
  2765   00339E  6E11               	movwf	___aomod@counter^0,c
  2766   0033A0  EFDC  F019         	goto	l2821
  2767   0033A4                     l2819:
  2768   0033A4  90D8               	bcf	status,0,c
  2769   0033A6  3609               	rlcf	___aomod@divisor^0,f,c
  2770   0033A8  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2771   0033AA  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2772   0033AC  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2773   0033AE  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2774   0033B0  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2775   0033B2  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2776   0033B4  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2777   0033B6  2A11               	incf	___aomod@counter^0,f,c
  2778   0033B8                     l2821:
  2779   0033B8  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2780   0033BA  EFE1  F019         	goto	u2201
  2781   0033BE  EFE3  F019         	goto	u2200
  2782   0033C2                     u2201:
  2783   0033C2  EFD2  F019         	goto	l2819
  2784   0033C6                     u2200:
  2785   0033C6                     l2823:
  2786   0033C6  5009               	movf	___aomod@divisor^0,w,c
  2787   0033C8  5C01               	subwf	___aomod@dividend^0,w,c
  2788   0033CA  500A               	movf	(___aomod@divisor+1)^0,w,c
  2789   0033CC  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2790   0033CE  500B               	movf	(___aomod@divisor+2)^0,w,c
  2791   0033D0  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2792   0033D2  500C               	movf	(___aomod@divisor+3)^0,w,c
  2793   0033D4  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2794   0033D6  500D               	movf	(___aomod@divisor+4)^0,w,c
  2795   0033D8  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2796   0033DA  500E               	movf	(___aomod@divisor+5)^0,w,c
  2797   0033DC  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2798   0033DE  500F               	movf	(___aomod@divisor+6)^0,w,c
  2799   0033E0  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2800   0033E2  5010               	movf	(___aomod@divisor+7)^0,w,c
  2801   0033E4  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2802   0033E6  A0D8               	btfss	status,0,c
  2803   0033E8  EFF8  F019         	goto	u2211
  2804   0033EC  EFFA  F019         	goto	u2210
  2805   0033F0                     u2211:
  2806   0033F0  EF0A  F01A         	goto	l2827
  2807   0033F4                     u2210:
  2808   0033F4  5009               	movf	___aomod@divisor^0,w,c
  2809   0033F6  5E01               	subwf	___aomod@dividend^0,f,c
  2810   0033F8  500A               	movf	(___aomod@divisor+1)^0,w,c
  2811   0033FA  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2812   0033FC  500B               	movf	(___aomod@divisor+2)^0,w,c
  2813   0033FE  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2814   003400  500C               	movf	(___aomod@divisor+3)^0,w,c
  2815   003402  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2816   003404  500D               	movf	(___aomod@divisor+4)^0,w,c
  2817   003406  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2818   003408  500E               	movf	(___aomod@divisor+5)^0,w,c
  2819   00340A  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2820   00340C  500F               	movf	(___aomod@divisor+6)^0,w,c
  2821   00340E  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2822   003410  5010               	movf	(___aomod@divisor+7)^0,w,c
  2823   003412  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2824   003414                     l2827:
  2825   003414  90D8               	bcf	status,0,c
  2826   003416  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2827   003418  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2828   00341A  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2829   00341C  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2830   00341E  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2831   003420  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2832   003422  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2833   003424  3209               	rrcf	___aomod@divisor^0,f,c
  2834   003426  2E11               	decfsz	___aomod@counter^0,f,c
  2835   003428  EFE3  F019         	goto	l2823
  2836   00342C                     l2831:
  2837   00342C  5012               	movf	___aomod@sign^0,w,c
  2838   00342E  B4D8               	btfsc	status,2,c
  2839   003430  EF1C  F01A         	goto	u2221
  2840   003434  EF1E  F01A         	goto	u2220
  2841   003438                     u2221:
  2842   003438  EF2E  F01A         	goto	l2835
  2843   00343C                     u2220:
  2844   00343C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2845   00343E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2846   003440  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2847   003442  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2848   003444  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2849   003446  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2850   003448  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2851   00344A  6C01               	negf	___aomod@dividend^0,c
  2852   00344C  0E00               	movlw	0
  2853   00344E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2854   003450  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2855   003452  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2856   003454  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2857   003456  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2858   003458  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2859   00345A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2860   00345C                     l2835:
  2861   00345C  C001  F001         	movff	___aomod@dividend,?___aomod
  2862   003460  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2863   003464  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2864   003468  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2865   00346C  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2866   003470  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2867   003474  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2868   003478  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2869   00347C  0012               	return		;funcret
  2870   00347E                     __end_of___aomod:
  2871                           	callstack 0
  2872                           
  2873 ;; *************** function ___aodiv *****************
  2874 ;; Defined at:
  2875 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  dividend        8    0[COMRAM] long long 
  2878 ;;  divisor         8    8[COMRAM] long long 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  quotient        8   18[COMRAM] long long 
  2881 ;;  sign            1   17[COMRAM] unsigned char 
  2882 ;;  counter         1   16[COMRAM] unsigned char 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  8    0[COMRAM] long long 
  2885 ;; Registers used:
  2886 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2892 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2893 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2895 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2896 ;;Total ram usage:       26 bytes
  2897 ;; Hardware stack levels used: 1
  2898 ;; Hardware stack levels required when called: 1
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_dtoa
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text11
  2907   003026                     __ptext11:
  2908                           	callstack 0
  2909   003026                     ___aodiv:
  2910                           	callstack 25
  2911   003026  0E00               	movlw	0
  2912   003028  6E12               	movwf	___aodiv@sign^0,c
  2913   00302A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2914   00302C  EF1C  F018         	goto	u2100
  2915   003030  EF1A  F018         	goto	u2101
  2916   003034                     u2101:
  2917   003034  EF2E  F018         	goto	l2767
  2918   003038                     u2100:
  2919   003038  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2920   00303A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2921   00303C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2922   00303E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2923   003040  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2924   003042  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2925   003044  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2926   003046  6C09               	negf	___aodiv@divisor^0,c
  2927   003048  0E00               	movlw	0
  2928   00304A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2929   00304C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2930   00304E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2931   003050  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2932   003052  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2933   003054  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2934   003056  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2935   003058  0E01               	movlw	1
  2936   00305A  6E12               	movwf	___aodiv@sign^0,c
  2937   00305C                     l2767:
  2938   00305C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2939   00305E  EF35  F018         	goto	u2110
  2940   003062  EF33  F018         	goto	u2111
  2941   003066                     u2111:
  2942   003066  EF47  F018         	goto	l2773
  2943   00306A                     u2110:
  2944   00306A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2945   00306C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2946   00306E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2947   003070  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2948   003072  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2949   003074  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2950   003076  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2951   003078  6C01               	negf	___aodiv@dividend^0,c
  2952   00307A  0E00               	movlw	0
  2953   00307C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2954   00307E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2955   003080  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2956   003082  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2957   003084  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2958   003086  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2959   003088  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2960   00308A  0E01               	movlw	1
  2961   00308C  1A12               	xorwf	___aodiv@sign^0,f,c
  2962   00308E                     l2773:
  2963   00308E  EE20  F013         	lfsr	2,___aodiv@quotient
  2964   003092  0E07               	movlw	7
  2965   003094                     u2121:
  2966   003094  6ADE               	clrf	postinc2,c
  2967   003096  06E8               	decf	wreg,f,c
  2968   003098  E2FD               	bc	u2121
  2969   00309A  5009               	movf	___aodiv@divisor^0,w,c
  2970   00309C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2971   00309E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2972   0030A0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2973   0030A2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2974   0030A4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2975   0030A6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2976   0030A8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2977   0030AA  B4D8               	btfsc	status,2,c
  2978   0030AC  EF5A  F018         	goto	u2131
  2979   0030B0  EF5C  F018         	goto	u2130
  2980   0030B4                     u2131:
  2981   0030B4  EFAE  F018         	goto	l2795
  2982   0030B8                     u2130:
  2983   0030B8  0E01               	movlw	1
  2984   0030BA  6E11               	movwf	___aodiv@counter^0,c
  2985   0030BC  EF6A  F018         	goto	l2781
  2986   0030C0                     l2779:
  2987   0030C0  90D8               	bcf	status,0,c
  2988   0030C2  3609               	rlcf	___aodiv@divisor^0,f,c
  2989   0030C4  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2990   0030C6  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2991   0030C8  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2992   0030CA  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2993   0030CC  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2994   0030CE  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2995   0030D0  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2996   0030D2  2A11               	incf	___aodiv@counter^0,f,c
  2997   0030D4                     l2781:
  2998   0030D4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2999   0030D6  EF6F  F018         	goto	u2141
  3000   0030DA  EF71  F018         	goto	u2140
  3001   0030DE                     u2141:
  3002   0030DE  EF60  F018         	goto	l2779
  3003   0030E2                     u2140:
  3004   0030E2                     l2783:
  3005   0030E2  90D8               	bcf	status,0,c
  3006   0030E4  3613               	rlcf	___aodiv@quotient^0,f,c
  3007   0030E6  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3008   0030E8  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3009   0030EA  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3010   0030EC  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3011   0030EE  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3012   0030F0  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3013   0030F2  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3014   0030F4  5009               	movf	___aodiv@divisor^0,w,c
  3015   0030F6  5C01               	subwf	___aodiv@dividend^0,w,c
  3016   0030F8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3017   0030FA  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3018   0030FC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3019   0030FE  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3020   003100  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3021   003102  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3022   003104  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3023   003106  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3024   003108  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3025   00310A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3026   00310C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3027   00310E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3028   003110  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3029   003112  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3030   003114  A0D8               	btfss	status,0,c
  3031   003116  EF8F  F018         	goto	u2151
  3032   00311A  EF91  F018         	goto	u2150
  3033   00311E                     u2151:
  3034   00311E  EFA2  F018         	goto	l2791
  3035   003122                     u2150:
  3036   003122  5009               	movf	___aodiv@divisor^0,w,c
  3037   003124  5E01               	subwf	___aodiv@dividend^0,f,c
  3038   003126  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3039   003128  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3040   00312A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3041   00312C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3042   00312E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3043   003130  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3044   003132  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3045   003134  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3046   003136  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3047   003138  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3048   00313A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3049   00313C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3050   00313E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3051   003140  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3052   003142  8013               	bsf	___aodiv@quotient^0,0,c
  3053   003144                     l2791:
  3054   003144  90D8               	bcf	status,0,c
  3055   003146  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3056   003148  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3057   00314A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3058   00314C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3059   00314E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3060   003150  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3061   003152  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3062   003154  3209               	rrcf	___aodiv@divisor^0,f,c
  3063   003156  2E11               	decfsz	___aodiv@counter^0,f,c
  3064   003158  EF71  F018         	goto	l2783
  3065   00315C                     l2795:
  3066   00315C  5012               	movf	___aodiv@sign^0,w,c
  3067   00315E  B4D8               	btfsc	status,2,c
  3068   003160  EFB4  F018         	goto	u2161
  3069   003164  EFB6  F018         	goto	u2160
  3070   003168                     u2161:
  3071   003168  EFC6  F018         	goto	l2799
  3072   00316C                     u2160:
  3073   00316C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3074   00316E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3075   003170  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3076   003172  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3077   003174  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3078   003176  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3079   003178  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3080   00317A  6C13               	negf	___aodiv@quotient^0,c
  3081   00317C  0E00               	movlw	0
  3082   00317E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3083   003180  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3084   003182  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3085   003184  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3086   003186  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3087   003188  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3088   00318A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3089   00318C                     l2799:
  3090   00318C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3091   003190  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3092   003194  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3093   003198  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3094   00319C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3095   0031A0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3096   0031A4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3097   0031A8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3098   0031AC  0012               	return		;funcret
  3099   0031AE                     __end_of___aodiv:
  3100                           	callstack 0
  3101                           
  3102 ;; *************** function _sendStringSerial4 *****************
  3103 ;; Defined at:
  3104 ;;		line 33 in file "serial.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  string          2    1[COMRAM] PTR unsigned char 
  3107 ;;		 -> main@buf(100), 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3123 ;;Total ram usage:        2 bytes
  3124 ;; Hardware stack levels used: 1
  3125 ;; Hardware stack levels required when called: 2
  3126 ;; This function calls:
  3127 ;;		_sendCharSerial4
  3128 ;; This function is called by:
  3129 ;;		_main
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text12
  3134   00440E                     __ptext12:
  3135                           	callstack 0
  3136   00440E                     _sendStringSerial4:
  3137                           	callstack 28
  3138   00440E                     
  3139                           ;serial.c: 34:     while (*string!=0){
  3140   00440E  EF12  F022         	goto	l3951
  3141   004412                     l3947:
  3142                           
  3143                           ;serial.c: 35:         sendCharSerial4(*string++);
  3144   004412  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3145   004416  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3146   00441A  50DF               	movf	indf2,w,c
  3147   00441C  EC7A  F022         	call	_sendCharSerial4
  3148   004420  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3149   004422  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3150   004424                     l3951:
  3151                           
  3152                           ;serial.c: 34:     while (*string!=0){
  3153   004424  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3154   004428  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3155   00442C  50DF               	movf	indf2,w,c
  3156   00442E  A4D8               	btfss	status,2,c
  3157   004430  EF1C  F022         	goto	u3891
  3158   004434  EF1E  F022         	goto	u3890
  3159   004438                     u3891:
  3160   004438  EF09  F022         	goto	l3947
  3161   00443C                     u3890:
  3162   00443C  0012               	return		;funcret
  3163   00443E                     __end_of_sendStringSerial4:
  3164                           	callstack 0
  3165                           
  3166 ;; *************** function _sendCharSerial4 *****************
  3167 ;; Defined at:
  3168 ;;		line 26 in file "serial.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  charToSend      1    wreg     unsigned char 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  charToSend      1    0[COMRAM] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3185 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3186 ;;Total ram usage:        1 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; Hardware stack levels required when called: 1
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_sendStringSerial4
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text13
  3197   0044F4                     __ptext13:
  3198                           	callstack 0
  3199   0044F4                     _sendCharSerial4:
  3200                           	callstack 28
  3201                           
  3202                           ;incstack = 0
  3203                           ;sendCharSerial4@charToSend stored from wreg
  3204   0044F4  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3205   0044F6                     l206:
  3206   0044F6  010E               	movlb	14	; () banked
  3207   0044F8  A537               	btfss	55,2,b	;volatile
  3208   0044FA  EF81  F022         	goto	u2951
  3209   0044FE  EF83  F022         	goto	u2950
  3210   004502                     u2951:
  3211   004502  EF7B  F022         	goto	l206
  3212   004506                     u2950:
  3213   004506                     
  3214                           ; BSR set to: 14
  3215                           ;serial.c: 28:     TX4REG = charToSend;
  3216   004506  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3217   00450A                     
  3218                           ; BSR set to: 14
  3219   00450A  0012               	return		;funcret
  3220   00450C                     __end_of_sendCharSerial4:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function _readColours *****************
  3224 ;; Defined at:
  3225 ;;		line 105 in file "color.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  vals            2   11[COMRAM] PTR struct RGB
  3228 ;;		 -> vals(8), 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3240 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3243 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3244 ;;Total ram usage:        2 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; Hardware stack levels required when called: 4
  3247 ;; This function calls:
  3248 ;;		_color_read_Blue
  3249 ;;		_color_read_Green
  3250 ;;		_color_read_Red
  3251 ;;		_color_read_lum
  3252 ;; This function is called by:
  3253 ;;		_main
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           	psect	text14
  3258   003CEE                     __ptext14:
  3259                           	callstack 0
  3260   003CEE                     _readColours:
  3261                           	callstack 26
  3262   003CEE                     
  3263                           ;color.c: 107:     vals ->R = color_read_Red();
  3264   003CEE  ECA4  F020         	call	_color_read_Red	;wreg free
  3265   003CF2  C00C  FFD9         	movff	readColours@vals,fsr2l
  3266   003CF6  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  3267   003CFA  C005  FFDE         	movff	?_color_read_Red,postinc2
  3268   003CFE  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3269                           
  3270                           ;color.c: 108:     vals ->B = color_read_Blue();
  3271   003D02  ECF4  F020         	call	_color_read_Blue	;wreg free
  3272   003D06  EE20 F004          	lfsr	2,4
  3273   003D0A  500C               	movf	readColours@vals^0,w,c
  3274   003D0C  26D9               	addwf	fsr2l,f,c
  3275   003D0E  500D               	movf	(readColours@vals+1)^0,w,c
  3276   003D10  22DA               	addwfc	fsr2h,f,c
  3277   003D12  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3278   003D16  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3279                           
  3280                           ;color.c: 109:     vals ->G = color_read_Green();
  3281   003D1A  ECCC  F020         	call	_color_read_Green	;wreg free
  3282   003D1E  EE20 F002          	lfsr	2,2
  3283   003D22  500C               	movf	readColours@vals^0,w,c
  3284   003D24  26D9               	addwf	fsr2l,f,c
  3285   003D26  500D               	movf	(readColours@vals+1)^0,w,c
  3286   003D28  22DA               	addwfc	fsr2h,f,c
  3287   003D2A  C005  FFDE         	movff	?_color_read_Green,postinc2
  3288   003D2E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3289                           
  3290                           ;color.c: 110:     vals ->L = color_read_lum();
  3291   003D32  EC7C  F020         	call	_color_read_lum	;wreg free
  3292   003D36  EE20 F006          	lfsr	2,6
  3293   003D3A  500C               	movf	readColours@vals^0,w,c
  3294   003D3C  26D9               	addwf	fsr2l,f,c
  3295   003D3E  500D               	movf	(readColours@vals+1)^0,w,c
  3296   003D40  22DA               	addwfc	fsr2h,f,c
  3297   003D42  C005  FFDE         	movff	?_color_read_lum,postinc2
  3298   003D46  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  3299   003D4A  0012               	return		;funcret
  3300   003D4C                     __end_of_readColours:
  3301                           	callstack 0
  3302                           
  3303 ;; *************** function _color_read_lum *****************
  3304 ;; Defined at:
  3305 ;;		line 49 in file "color.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;		None
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  tmp             2    9[COMRAM] unsigned int 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  2    4[COMRAM] unsigned int 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3321 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3322 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3323 ;;Total ram usage:        7 bytes
  3324 ;; Hardware stack levels used: 1
  3325 ;; Hardware stack levels required when called: 3
  3326 ;; This function calls:
  3327 ;;		_I2C_2_Master_Read
  3328 ;;		_I2C_2_Master_RepStart
  3329 ;;		_I2C_2_Master_Start
  3330 ;;		_I2C_2_Master_Stop
  3331 ;;		_I2C_2_Master_Write
  3332 ;; This function is called by:
  3333 ;;		_readColours
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text15
  3338   0040F8                     __ptext15:
  3339                           	callstack 0
  3340   0040F8                     _color_read_lum:
  3341                           	callstack 26
  3342   0040F8                     
  3343                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  3344   0040F8  EC96  F022         	call	_I2C_2_Master_Start	;wreg free
  3345                           
  3346                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  3347   0040FC  0E52               	movlw	82
  3348   0040FE  EC86  F022         	call	_I2C_2_Master_Write
  3349                           
  3350                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  3351   004102  0EB4               	movlw	180
  3352   004104  EC86  F022         	call	_I2C_2_Master_Write
  3353                           
  3354                           ;color.c: 55:  I2C_2_Master_RepStart();
  3355   004108  EC8C  F022         	call	_I2C_2_Master_RepStart	;wreg free
  3356                           
  3357                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  3358   00410C  0E53               	movlw	83
  3359   00410E  EC86  F022         	call	_I2C_2_Master_Write
  3360                           
  3361                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  3362   004112  0E01               	movlw	1
  3363   004114  EC88  F021         	call	_I2C_2_Master_Read
  3364   004118  6E07               	movwf	??_color_read_lum^0,c
  3365   00411A  5007               	movf	??_color_read_lum^0,w,c
  3366   00411C  6E0A               	movwf	color_read_lum@tmp^0,c
  3367   00411E  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  3368                           
  3369                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3370   004120  0E00               	movlw	0
  3371   004122  EC88  F021         	call	_I2C_2_Master_Read
  3372   004126  6E07               	movwf	??_color_read_lum^0,c
  3373   004128  5007               	movf	??_color_read_lum^0,w,c
  3374   00412A  6E09               	movwf	(??_color_read_lum+2)^0,c
  3375   00412C  6A08               	clrf	(??_color_read_lum+1)^0,c
  3376   00412E  500A               	movf	color_read_lum@tmp^0,w,c
  3377   004130  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  3378   004132  6E0A               	movwf	color_read_lum@tmp^0,c
  3379   004134  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  3380   004136  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  3381   004138  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  3382                           
  3383                           ;color.c: 59:  I2C_2_Master_Stop();
  3384   00413A  EC91  F022         	call	_I2C_2_Master_Stop	;wreg free
  3385   00413E                     
  3386                           ;color.c: 60:  return tmp;
  3387   00413E  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  3388   004142  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  3389   004146  0012               	return		;funcret
  3390   004148                     __end_of_color_read_lum:
  3391                           	callstack 0
  3392                           
  3393 ;; *************** function _color_read_Red *****************
  3394 ;; Defined at:
  3395 ;;		line 63 in file "color.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  tmp             2    9[COMRAM] unsigned int 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  2    4[COMRAM] unsigned int 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3410 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3411 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3412 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3413 ;;Total ram usage:        7 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; Hardware stack levels required when called: 3
  3416 ;; This function calls:
  3417 ;;		_I2C_2_Master_Read
  3418 ;;		_I2C_2_Master_RepStart
  3419 ;;		_I2C_2_Master_Start
  3420 ;;		_I2C_2_Master_Stop
  3421 ;;		_I2C_2_Master_Write
  3422 ;; This function is called by:
  3423 ;;		_readColours
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text16
  3428   004148                     __ptext16:
  3429                           	callstack 0
  3430   004148                     _color_read_Red:
  3431                           	callstack 26
  3432   004148                     
  3433                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  3434   004148  EC96  F022         	call	_I2C_2_Master_Start	;wreg free
  3435                           
  3436                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  3437   00414C  0E52               	movlw	82
  3438   00414E  EC86  F022         	call	_I2C_2_Master_Write
  3439                           
  3440                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  3441   004152  0EB6               	movlw	182
  3442   004154  EC86  F022         	call	_I2C_2_Master_Write
  3443                           
  3444                           ;color.c: 69:  I2C_2_Master_RepStart();
  3445   004158  EC8C  F022         	call	_I2C_2_Master_RepStart	;wreg free
  3446                           
  3447                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  3448   00415C  0E53               	movlw	83
  3449   00415E  EC86  F022         	call	_I2C_2_Master_Write
  3450                           
  3451                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  3452   004162  0E01               	movlw	1
  3453   004164  EC88  F021         	call	_I2C_2_Master_Read
  3454   004168  6E07               	movwf	??_color_read_Red^0,c
  3455   00416A  5007               	movf	??_color_read_Red^0,w,c
  3456   00416C  6E0A               	movwf	color_read_Red@tmp^0,c
  3457   00416E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3458                           
  3459                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3460   004170  0E00               	movlw	0
  3461   004172  EC88  F021         	call	_I2C_2_Master_Read
  3462   004176  6E07               	movwf	??_color_read_Red^0,c
  3463   004178  5007               	movf	??_color_read_Red^0,w,c
  3464   00417A  6E09               	movwf	(??_color_read_Red+2)^0,c
  3465   00417C  6A08               	clrf	(??_color_read_Red+1)^0,c
  3466   00417E  500A               	movf	color_read_Red@tmp^0,w,c
  3467   004180  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3468   004182  6E0A               	movwf	color_read_Red@tmp^0,c
  3469   004184  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3470   004186  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3471   004188  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3472                           
  3473                           ;color.c: 73:  I2C_2_Master_Stop();
  3474   00418A  EC91  F022         	call	_I2C_2_Master_Stop	;wreg free
  3475   00418E                     
  3476                           ;color.c: 74:  return tmp;
  3477   00418E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3478   004192  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3479   004196  0012               	return		;funcret
  3480   004198                     __end_of_color_read_Red:
  3481                           	callstack 0
  3482                           
  3483 ;; *************** function _color_read_Green *****************
  3484 ;; Defined at:
  3485 ;;		line 76 in file "color.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;		None
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  tmp             2    9[COMRAM] unsigned int 
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  2    4[COMRAM] unsigned int 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0, cstack
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3501 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3502 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3503 ;;Total ram usage:        7 bytes
  3504 ;; Hardware stack levels used: 1
  3505 ;; Hardware stack levels required when called: 3
  3506 ;; This function calls:
  3507 ;;		_I2C_2_Master_Read
  3508 ;;		_I2C_2_Master_RepStart
  3509 ;;		_I2C_2_Master_Start
  3510 ;;		_I2C_2_Master_Stop
  3511 ;;		_I2C_2_Master_Write
  3512 ;; This function is called by:
  3513 ;;		_readColours
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text17
  3518   004198                     __ptext17:
  3519                           	callstack 0
  3520   004198                     _color_read_Green:
  3521                           	callstack 26
  3522   004198                     
  3523                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  3524   004198  EC96  F022         	call	_I2C_2_Master_Start	;wreg free
  3525                           
  3526                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  3527   00419C  0E52               	movlw	82
  3528   00419E  EC86  F022         	call	_I2C_2_Master_Write
  3529                           
  3530                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  3531   0041A2  0EB8               	movlw	184
  3532   0041A4  EC86  F022         	call	_I2C_2_Master_Write
  3533                           
  3534                           ;color.c: 82:  I2C_2_Master_RepStart();
  3535   0041A8  EC8C  F022         	call	_I2C_2_Master_RepStart	;wreg free
  3536                           
  3537                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  3538   0041AC  0E53               	movlw	83
  3539   0041AE  EC86  F022         	call	_I2C_2_Master_Write
  3540                           
  3541                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  3542   0041B2  0E01               	movlw	1
  3543   0041B4  EC88  F021         	call	_I2C_2_Master_Read
  3544   0041B8  6E07               	movwf	??_color_read_Green^0,c
  3545   0041BA  5007               	movf	??_color_read_Green^0,w,c
  3546   0041BC  6E0A               	movwf	color_read_Green@tmp^0,c
  3547   0041BE  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  3548                           
  3549                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3550   0041C0  0E00               	movlw	0
  3551   0041C2  EC88  F021         	call	_I2C_2_Master_Read
  3552   0041C6  6E07               	movwf	??_color_read_Green^0,c
  3553   0041C8  5007               	movf	??_color_read_Green^0,w,c
  3554   0041CA  6E09               	movwf	(??_color_read_Green+2)^0,c
  3555   0041CC  6A08               	clrf	(??_color_read_Green+1)^0,c
  3556   0041CE  500A               	movf	color_read_Green@tmp^0,w,c
  3557   0041D0  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  3558   0041D2  6E0A               	movwf	color_read_Green@tmp^0,c
  3559   0041D4  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  3560   0041D6  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  3561   0041D8  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  3562                           
  3563                           ;color.c: 86:  I2C_2_Master_Stop();
  3564   0041DA  EC91  F022         	call	_I2C_2_Master_Stop	;wreg free
  3565   0041DE                     
  3566                           ;color.c: 87:  return tmp;
  3567   0041DE  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  3568   0041E2  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3569   0041E6  0012               	return		;funcret
  3570   0041E8                     __end_of_color_read_Green:
  3571                           	callstack 0
  3572                           
  3573 ;; *************** function _color_read_Blue *****************
  3574 ;; Defined at:
  3575 ;;		line 90 in file "color.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  tmp             2    9[COMRAM] unsigned int 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  2    4[COMRAM] unsigned int 
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3590 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3593 ;;Total ram usage:        7 bytes
  3594 ;; Hardware stack levels used: 1
  3595 ;; Hardware stack levels required when called: 3
  3596 ;; This function calls:
  3597 ;;		_I2C_2_Master_Read
  3598 ;;		_I2C_2_Master_RepStart
  3599 ;;		_I2C_2_Master_Start
  3600 ;;		_I2C_2_Master_Stop
  3601 ;;		_I2C_2_Master_Write
  3602 ;; This function is called by:
  3603 ;;		_readColours
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           	psect	text18
  3608   0041E8                     __ptext18:
  3609                           	callstack 0
  3610   0041E8                     _color_read_Blue:
  3611                           	callstack 26
  3612   0041E8                     
  3613                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  3614   0041E8  EC96  F022         	call	_I2C_2_Master_Start	;wreg free
  3615                           
  3616                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  3617   0041EC  0E52               	movlw	82
  3618   0041EE  EC86  F022         	call	_I2C_2_Master_Write
  3619                           
  3620                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  3621   0041F2  0EBA               	movlw	186
  3622   0041F4  EC86  F022         	call	_I2C_2_Master_Write
  3623                           
  3624                           ;color.c: 96:  I2C_2_Master_RepStart();
  3625   0041F8  EC8C  F022         	call	_I2C_2_Master_RepStart	;wreg free
  3626                           
  3627                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  3628   0041FC  0E53               	movlw	83
  3629   0041FE  EC86  F022         	call	_I2C_2_Master_Write
  3630                           
  3631                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  3632   004202  0E01               	movlw	1
  3633   004204  EC88  F021         	call	_I2C_2_Master_Read
  3634   004208  6E07               	movwf	??_color_read_Blue^0,c
  3635   00420A  5007               	movf	??_color_read_Blue^0,w,c
  3636   00420C  6E0A               	movwf	color_read_Blue@tmp^0,c
  3637   00420E  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  3638                           
  3639                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3640   004210  0E00               	movlw	0
  3641   004212  EC88  F021         	call	_I2C_2_Master_Read
  3642   004216  6E07               	movwf	??_color_read_Blue^0,c
  3643   004218  5007               	movf	??_color_read_Blue^0,w,c
  3644   00421A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  3645   00421C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  3646   00421E  500A               	movf	color_read_Blue@tmp^0,w,c
  3647   004220  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  3648   004222  6E0A               	movwf	color_read_Blue@tmp^0,c
  3649   004224  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  3650   004226  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  3651   004228  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  3652                           
  3653                           ;color.c: 100:  I2C_2_Master_Stop();
  3654   00422A  EC91  F022         	call	_I2C_2_Master_Stop	;wreg free
  3655   00422E                     
  3656                           ;color.c: 101:  return tmp;
  3657   00422E  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  3658   004232  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3659   004236  0012               	return		;funcret
  3660   004238                     __end_of_color_read_Blue:
  3661                           	callstack 0
  3662                           
  3663 ;; *************** function _I2C_2_Master_RepStart *****************
  3664 ;; Defined at:
  3665 ;;		line 33 in file "i2c.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, status,2, status,0, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3683 ;;Total ram usage:        0 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 2
  3686 ;; This function calls:
  3687 ;;		_I2C_2_Master_Idle
  3688 ;; This function is called by:
  3689 ;;		_color_read_lum
  3690 ;;		_color_read_Red
  3691 ;;		_color_read_Green
  3692 ;;		_color_read_Blue
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text19
  3697   004518                     __ptext19:
  3698                           	callstack 0
  3699   004518                     _I2C_2_Master_RepStart:
  3700                           	callstack 26
  3701   004518                     
  3702                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3703   004518  EC34  F022         	call	_I2C_2_Master_Idle	;wreg free
  3704   00451C                     
  3705                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3706   00451C  010E               	movlb	14	; () banked
  3707   00451E  83DA               	bsf	218,1,b	;volatile
  3708   004520                     
  3709                           ; BSR set to: 14
  3710   004520  0012               	return		;funcret
  3711   004522                     __end_of_I2C_2_Master_RepStart:
  3712                           	callstack 0
  3713                           
  3714 ;; *************** function _I2C_2_Master_Read *****************
  3715 ;; Defined at:
  3716 ;;		line 51 in file "i2c.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  ack             1    wreg     unsigned char 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  ack             1    2[COMRAM] unsigned char 
  3721 ;;  tmp             1    3[COMRAM] unsigned char 
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  1    wreg      unsigned char 
  3724 ;; Registers used:
  3725 ;;		wreg, status,2, status,0, cstack
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3732 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3733 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3734 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3735 ;;Total ram usage:        3 bytes
  3736 ;; Hardware stack levels used: 1
  3737 ;; Hardware stack levels required when called: 2
  3738 ;; This function calls:
  3739 ;;		_I2C_2_Master_Idle
  3740 ;; This function is called by:
  3741 ;;		_color_read_lum
  3742 ;;		_color_read_Red
  3743 ;;		_color_read_Green
  3744 ;;		_color_read_Blue
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text20
  3749   004310                     __ptext20:
  3750                           	callstack 0
  3751   004310                     _I2C_2_Master_Read:
  3752                           	callstack 26
  3753                           
  3754                           ; BSR set to: 14
  3755                           ;incstack = 0
  3756                           ;I2C_2_Master_Read@ack stored from wreg
  3757   004310  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3758   004312                     
  3759                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3760   004312  EC34  F022         	call	_I2C_2_Master_Idle	;wreg free
  3761   004316                     
  3762                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3763   004316  010E               	movlb	14	; () banked
  3764   004318  87DA               	bsf	218,3,b	;volatile
  3765                           
  3766                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3767   00431A  EC34  F022         	call	_I2C_2_Master_Idle	;wreg free
  3768   00431E                     
  3769                           ;i2c.c: 57:   tmp = SSP2BUF;
  3770   00431E  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3771                           
  3772                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3773   004322  EC34  F022         	call	_I2C_2_Master_Idle	;wreg free
  3774   004326                     
  3775                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3776   004326  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3777   004328  B4D8               	btfsc	status,2,c
  3778   00432A  EF99  F021         	goto	u2431
  3779   00432E  EF9D  F021         	goto	u2430
  3780   004332                     u2431:
  3781   004332  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3782   004334  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3783   004336  EF9E  F021         	goto	u2448
  3784   00433A                     u2430:
  3785   00433A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3786   00433C                     u2448:
  3787   00433C  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3788   00433E  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3789   004340  010E               	movlb	14	; () banked
  3790   004342  51DA               	movf	218,w,b	;volatile
  3791   004344  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3792   004346  0BDF               	andlw	-33
  3793   004348  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3794   00434A  6FDA               	movwf	218,b	;volatile
  3795   00434C                     
  3796                           ; BSR set to: 14
  3797                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3798   00434C  89DA               	bsf	218,4,b	;volatile
  3799   00434E                     
  3800                           ; BSR set to: 14
  3801                           ;i2c.c: 61:   return tmp;
  3802   00434E  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3803   004350                     
  3804                           ; BSR set to: 14
  3805   004350  0012               	return		;funcret
  3806   004352                     __end_of_I2C_2_Master_Read:
  3807                           	callstack 0
  3808                           
  3809 ;; *************** function _initUSART4 *****************
  3810 ;; Defined at:
  3811 ;;		line 4 in file "serial.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3829 ;;Total ram usage:        0 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; Hardware stack levels required when called: 1
  3832 ;; This function calls:
  3833 ;;		Nothing
  3834 ;; This function is called by:
  3835 ;;		_main
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text21
  3840   0044D6                     __ptext21:
  3841                           	callstack 0
  3842   0044D6                     _initUSART4:
  3843                           	callstack 29
  3844   0044D6                     
  3845                           ;serial.c: 5:     RC0PPS = 0x12;
  3846   0044D6  0E12               	movlw	18
  3847   0044D8  010E               	movlb	14	; () banked
  3848   0044DA  6F62               	movwf	98,b	;volatile
  3849                           
  3850                           ;serial.c: 6:     RX4PPS = 0x11;
  3851   0044DC  0E11               	movlw	17
  3852   0044DE  6F15               	movwf	21,b	;volatile
  3853   0044E0                     
  3854                           ; BSR set to: 14
  3855                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  3856   0044E0  97E9               	bcf	233,3,b	;volatile
  3857   0044E2                     
  3858                           ; BSR set to: 14
  3859                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  3860   0044E2  95E8               	bcf	232,2,b	;volatile
  3861                           
  3862                           ;serial.c: 9:     SP4BRGL = 51;
  3863   0044E4  0E33               	movlw	51
  3864   0044E6  6FE5               	movwf	229,b	;volatile
  3865                           
  3866                           ;serial.c: 10:     SP4BRGH = 0;
  3867   0044E8  0E00               	movlw	0
  3868   0044EA  6FE6               	movwf	230,b	;volatile
  3869   0044EC                     
  3870                           ; BSR set to: 14
  3871                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  3872   0044EC  89E7               	bsf	231,4,b	;volatile
  3873   0044EE                     
  3874                           ; BSR set to: 14
  3875                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  3876   0044EE  8BE8               	bsf	232,5,b	;volatile
  3877   0044F0                     
  3878                           ; BSR set to: 14
  3879                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  3880   0044F0  8FE7               	bsf	231,7,b	;volatile
  3881   0044F2                     
  3882                           ; BSR set to: 14
  3883   0044F2  0012               	return		;funcret
  3884   0044F4                     __end_of_initUSART4:
  3885                           	callstack 0
  3886                           
  3887 ;; *************** function _initDCmotorsPWM *****************
  3888 ;; Defined at:
  3889 ;;		line 5 in file "dc_motor.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg, status,2
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3907 ;;Total ram usage:        2 bytes
  3908 ;; Hardware stack levels used: 1
  3909 ;; Hardware stack levels required when called: 1
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_main
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           	psect	text22
  3918   003A9C                     __ptext22:
  3919                           	callstack 0
  3920   003A9C                     _initDCmotorsPWM:
  3921                           	callstack 29
  3922   003A9C                     
  3923                           ;dc_motor.c: 9:     RE2PPS=0x05;
  3924   003A9C  0E05               	movlw	5
  3925   003A9E  010E               	movlb	14	; () banked
  3926   003AA0  6F74               	movwf	116,b	;volatile
  3927                           
  3928                           ;dc_motor.c: 10:     RE4PPS=0x06;
  3929   003AA2  0E06               	movlw	6
  3930   003AA4  6F76               	movwf	118,b	;volatile
  3931                           
  3932                           ;dc_motor.c: 11:     RC7PPS=0x07;
  3933   003AA6  0E07               	movlw	7
  3934   003AA8  6F69               	movwf	105,b	;volatile
  3935                           
  3936                           ;dc_motor.c: 12:     RG6PPS=0x08;
  3937   003AAA  0E08               	movlw	8
  3938   003AAC  6F88               	movwf	136,b	;volatile
  3939   003AAE                     
  3940                           ; BSR set to: 14
  3941                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  3942   003AAE  9485               	bcf	133,2,c	;volatile
  3943   003AB0                     
  3944                           ; BSR set to: 14
  3945                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  3946   003AB0  9885               	bcf	133,4,c	;volatile
  3947   003AB2                     
  3948                           ; BSR set to: 14
  3949                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  3950   003AB2  9E83               	bcf	131,7,c	;volatile
  3951   003AB4                     
  3952                           ; BSR set to: 14
  3953                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  3954   003AB4  9C87               	bcf	135,6,c	;volatile
  3955                           
  3956                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  3957   003AB6  50BD               	movf	189,w,c	;volatile
  3958   003AB8  0B8F               	andlw	-113
  3959   003ABA  0930               	iorlw	48
  3960   003ABC  6EBD               	movwf	189,c	;volatile
  3961                           
  3962                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  3963   003ABE  0EE0               	movlw	-32
  3964   003AC0  16BE               	andwf	190,f,c	;volatile
  3965                           
  3966                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  3967   003AC2  50BF               	movf	191,w,c	;volatile
  3968   003AC4  0BF0               	andlw	-16
  3969   003AC6  0901               	iorlw	1
  3970   003AC8  6EBF               	movwf	191,c	;volatile
  3971   003ACA                     
  3972                           ; BSR set to: 14
  3973                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  3974   003ACA  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  3975   003ACE                     
  3976                           ; BSR set to: 14
  3977                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  3978   003ACE  8EBD               	bsf	189,7,c	;volatile
  3979                           
  3980                           ;dc_motor.c: 33:     CCPR1H=0;
  3981   003AD0  0E00               	movlw	0
  3982   003AD2  6EAA               	movwf	170,c	;volatile
  3983                           
  3984                           ;dc_motor.c: 34:     CCPR2H=0;
  3985   003AD4  0E00               	movlw	0
  3986   003AD6  6EA6               	movwf	166,c	;volatile
  3987                           
  3988                           ;dc_motor.c: 35:     CCPR3H=0;
  3989   003AD8  0E00               	movlw	0
  3990   003ADA  010F               	movlb	15	; () banked
  3991   003ADC  6F25               	movwf	37,b	;volatile
  3992                           
  3993                           ;dc_motor.c: 36:     CCPR4H=0;
  3994   003ADE  0E00               	movlw	0
  3995   003AE0  6F21               	movwf	33,b	;volatile
  3996                           
  3997                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  3998   003AE2  0EFC               	movlw	-4
  3999   003AE4  16AD               	andwf	173,f,c	;volatile
  4000                           
  4001                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  4002   003AE6  0EF3               	movlw	-13
  4003   003AE8  16AD               	andwf	173,f,c	;volatile
  4004                           
  4005                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  4006   003AEA  0ECF               	movlw	-49
  4007   003AEC  16AD               	andwf	173,f,c	;volatile
  4008                           
  4009                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  4010   003AEE  0E3F               	movlw	-193
  4011   003AF0  16AD               	andwf	173,f,c	;volatile
  4012   003AF2                     
  4013                           ; BSR set to: 15
  4014                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  4015   003AF2  88AB               	bsf	171,4,c	;volatile
  4016                           
  4017                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  4018   003AF4  50AB               	movf	171,w,c	;volatile
  4019   003AF6  0BF0               	andlw	-16
  4020   003AF8  090C               	iorlw	12
  4021   003AFA  6EAB               	movwf	171,c	;volatile
  4022   003AFC                     
  4023                           ; BSR set to: 15
  4024                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  4025   003AFC  8EAB               	bsf	171,7,c	;volatile
  4026   003AFE                     
  4027                           ; BSR set to: 15
  4028                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  4029   003AFE  88A7               	bsf	167,4,c	;volatile
  4030                           
  4031                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  4032   003B00  50A7               	movf	167,w,c	;volatile
  4033   003B02  0BF0               	andlw	-16
  4034   003B04  090C               	iorlw	12
  4035   003B06  6EA7               	movwf	167,c	;volatile
  4036   003B08                     
  4037                           ; BSR set to: 15
  4038                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  4039   003B08  8EA7               	bsf	167,7,c	;volatile
  4040   003B0A                     
  4041                           ; BSR set to: 15
  4042                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  4043   003B0A  8926               	bsf	38,4,b	;volatile
  4044                           
  4045                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  4046   003B0C  5126               	movf	38,w,b	;volatile
  4047   003B0E  0BF0               	andlw	-16
  4048   003B10  090C               	iorlw	12
  4049   003B12  6F26               	movwf	38,b	;volatile
  4050   003B14                     
  4051                           ; BSR set to: 15
  4052                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  4053   003B14  8F26               	bsf	38,7,b	;volatile
  4054   003B16                     
  4055                           ; BSR set to: 15
  4056                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  4057   003B16  8922               	bsf	34,4,b	;volatile
  4058                           
  4059                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  4060   003B18  5122               	movf	34,w,b	;volatile
  4061   003B1A  0BF0               	andlw	-16
  4062   003B1C  090C               	iorlw	12
  4063   003B1E  6F22               	movwf	34,b	;volatile
  4064   003B20                     
  4065                           ; BSR set to: 15
  4066                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  4067   003B20  8F22               	bsf	34,7,b	;volatile
  4068   003B22                     
  4069                           ; BSR set to: 15
  4070   003B22  0012               	return		;funcret
  4071   003B24                     __end_of_initDCmotorsPWM:
  4072                           	callstack 0
  4073                           
  4074 ;; *************** function _fullSpeedAhead *****************
  4075 ;; Defined at:
  4076 ;;		line 146 in file "dc_motor.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  4079 ;;		 -> motorL(9), 
  4080 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  4081 ;;		 -> motorR(9), 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      void 
  4086 ;; Registers used:
  4087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4093 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4096 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4097 ;;Total ram usage:        5 bytes
  4098 ;; Hardware stack levels used: 1
  4099 ;; Hardware stack levels required when called: 3
  4100 ;; This function calls:
  4101 ;;		_setMotorPWM
  4102 ;; This function is called by:
  4103 ;;		_main
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text23
  4108   003844                     __ptext23:
  4109                           	callstack 0
  4110   003844                     _fullSpeedAhead:
  4111                           	callstack 27
  4112   003844                     
  4113                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  4114   003844  EE20 F001          	lfsr	2,1
  4115   003848  5014               	movf	fullSpeedAhead@mL^0,w,c
  4116   00384A  26D9               	addwf	fsr2l,f,c
  4117   00384C  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4118   00384E  22DA               	addwfc	fsr2h,f,c
  4119   003850  0E01               	movlw	1
  4120   003852  6EDF               	movwf	indf2,c
  4121                           
  4122                           ;dc_motor.c: 150:     mR->direction =1;
  4123   003854  EE20 F001          	lfsr	2,1
  4124   003858  5016               	movf	fullSpeedAhead@mR^0,w,c
  4125   00385A  26D9               	addwf	fsr2l,f,c
  4126   00385C  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4127   00385E  22DA               	addwfc	fsr2h,f,c
  4128   003860  0E01               	movlw	1
  4129   003862  6EDF               	movwf	indf2,c
  4130                           
  4131                           ;dc_motor.c: 151:     while (mL->power < 100 && mR->power < 100){
  4132   003864  EF54  F01C         	goto	l4005
  4133   003868                     l3997:
  4134                           
  4135                           ;dc_motor.c: 153:         mL->power+=10;
  4136   003868  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4137   00386C  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4138   003870  0E0A               	movlw	10
  4139   003872  26DF               	addwf	indf2,f,c
  4140                           
  4141                           ;dc_motor.c: 154:         mR->power+=10;
  4142   003874  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4143   003878  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4144   00387C  0E0A               	movlw	10
  4145   00387E  26DF               	addwf	indf2,f,c
  4146   003880                     
  4147                           ;dc_motor.c: 156:         setMotorPWM(mL);
  4148   003880  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4149   003884  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4150   003888  ECD7  F018         	call	_setMotorPWM	;wreg free
  4151   00388C                     
  4152                           ;dc_motor.c: 157:         setMotorPWM(mR);
  4153   00388C  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4154   003890  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4155   003894  ECD7  F018         	call	_setMotorPWM	;wreg free
  4156   003898                     
  4157                           ;dc_motor.c: 159:         _delay((unsigned long)((1)*(64000000/4000.0)));
  4158   003898  0E15               	movlw	21
  4159   00389A  6E18               	movwf	??_fullSpeedAhead^0,c
  4160   00389C  0EC6               	movlw	198
  4161   00389E                     u4097:
  4162   00389E  2EE8               	decfsz	wreg,f,c
  4163   0038A0  D7FE               	bra	u4097
  4164   0038A2  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  4165   0038A4  D7FC               	bra	u4097
  4166   0038A6  D000               	nop2	
  4167   0038A8                     l4005:
  4168                           
  4169                           ;dc_motor.c: 151:     while (mL->power < 100 && mR->power < 100){
  4170   0038A8  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4171   0038AC  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4172   0038B0  0E64               	movlw	100
  4173   0038B2  60DF               	cpfslt	indf2,c
  4174   0038B4  EF5E  F01C         	goto	u3931
  4175   0038B8  EF60  F01C         	goto	u3930
  4176   0038BC                     u3931:
  4177   0038BC  EF6C  F01C         	goto	l469
  4178   0038C0                     u3930:
  4179   0038C0  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4180   0038C4  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4181   0038C8  0E63               	movlw	99
  4182   0038CA  64DF               	cpfsgt	indf2,c
  4183   0038CC  EF6A  F01C         	goto	u3941
  4184   0038D0  EF6C  F01C         	goto	u3940
  4185   0038D4                     u3941:
  4186   0038D4  EF34  F01C         	goto	l3997
  4187   0038D8                     u3940:
  4188   0038D8                     l469:
  4189   0038D8  0012               	return		;funcret
  4190   0038DA                     __end_of_fullSpeedAhead:
  4191                           	callstack 0
  4192                           
  4193 ;; *************** function _colour_rel *****************
  4194 ;; Defined at:
  4195 ;;		line 114 in file "color.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  vals            2   49[COMRAM] PTR struct RGB
  4198 ;;		 -> vals(8), 
  4199 ;;  rel             2   51[COMRAM] PTR struct RGB_rel
  4200 ;;		 -> rel(12), 
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;  B               4   73[COMRAM] float 
  4203 ;;  G               4   69[COMRAM] float 
  4204 ;;  R               4   65[COMRAM] float 
  4205 ;;  L               4   53[COMRAM] float 
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      void 
  4208 ;; Registers used:
  4209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4215 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4216 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4218 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4219 ;;Total ram usage:       28 bytes
  4220 ;; Hardware stack levels used: 1
  4221 ;; Hardware stack levels required when called: 2
  4222 ;; This function calls:
  4223 ;;		___fladd
  4224 ;;		___fldiv
  4225 ;;		___xxtofl
  4226 ;; This function is called by:
  4227 ;;		_main
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text24
  4232   0025FA                     __ptext24:
  4233                           	callstack 0
  4234   0025FA                     _colour_rel:
  4235                           	callstack 28
  4236   0025FA                     
  4237                           ;color.c: 115:     float R = vals->R;
  4238   0025FA  C032  FFD9         	movff	colour_rel@vals,fsr2l
  4239   0025FE  C033  FFDA         	movff	colour_rel@vals+1,fsr2h
  4240   002602  CFDE F001          	movff	postinc2,___xxtofl@val
  4241   002606  CFDD F002          	movff	postdec2,___xxtofl@val+1
  4242   00260A  0E00               	movlw	0
  4243   00260C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4244   00260E  0EFF               	movlw	-1
  4245   002610  6E03               	movwf	(___xxtofl@val+2)^0,c
  4246   002612  6E04               	movwf	(___xxtofl@val+3)^0,c
  4247   002614  0E01               	movlw	1
  4248   002616  EC39  F017         	call	___xxtofl
  4249   00261A  C001  F042         	movff	?___xxtofl,colour_rel@R
  4250   00261E  C002  F043         	movff	?___xxtofl+1,colour_rel@R+1
  4251   002622  C003  F044         	movff	?___xxtofl+2,colour_rel@R+2
  4252   002626  C004  F045         	movff	?___xxtofl+3,colour_rel@R+3
  4253                           
  4254                           ;color.c: 116:     float G = vals->G;
  4255   00262A  EE20 F002          	lfsr	2,2
  4256   00262E  5032               	movf	colour_rel@vals^0,w,c
  4257   002630  26D9               	addwf	fsr2l,f,c
  4258   002632  5033               	movf	(colour_rel@vals+1)^0,w,c
  4259   002634  22DA               	addwfc	fsr2h,f,c
  4260   002636  CFDE F001          	movff	postinc2,___xxtofl@val
  4261   00263A  CFDD F002          	movff	postdec2,___xxtofl@val+1
  4262   00263E  0E00               	movlw	0
  4263   002640  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4264   002642  0EFF               	movlw	-1
  4265   002644  6E03               	movwf	(___xxtofl@val+2)^0,c
  4266   002646  6E04               	movwf	(___xxtofl@val+3)^0,c
  4267   002648  0E01               	movlw	1
  4268   00264A  EC39  F017         	call	___xxtofl
  4269   00264E  C001  F046         	movff	?___xxtofl,colour_rel@G
  4270   002652  C002  F047         	movff	?___xxtofl+1,colour_rel@G+1
  4271   002656  C003  F048         	movff	?___xxtofl+2,colour_rel@G+2
  4272   00265A  C004  F049         	movff	?___xxtofl+3,colour_rel@G+3
  4273                           
  4274                           ;color.c: 117:     float B = vals->B;
  4275   00265E  EE20 F004          	lfsr	2,4
  4276   002662  5032               	movf	colour_rel@vals^0,w,c
  4277   002664  26D9               	addwf	fsr2l,f,c
  4278   002666  5033               	movf	(colour_rel@vals+1)^0,w,c
  4279   002668  22DA               	addwfc	fsr2h,f,c
  4280   00266A  CFDE F001          	movff	postinc2,___xxtofl@val
  4281   00266E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  4282   002672  0E00               	movlw	0
  4283   002674  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4284   002676  0EFF               	movlw	-1
  4285   002678  6E03               	movwf	(___xxtofl@val+2)^0,c
  4286   00267A  6E04               	movwf	(___xxtofl@val+3)^0,c
  4287   00267C  0E01               	movlw	1
  4288   00267E  EC39  F017         	call	___xxtofl
  4289   002682  C001  F04A         	movff	?___xxtofl,colour_rel@B
  4290   002686  C002  F04B         	movff	?___xxtofl+1,colour_rel@B+1
  4291   00268A  C003  F04C         	movff	?___xxtofl+2,colour_rel@B+2
  4292   00268E  C004  F04D         	movff	?___xxtofl+3,colour_rel@B+3
  4293                           
  4294                           ;color.c: 118:     float L = vals->L;
  4295   002692  EE20 F006          	lfsr	2,6
  4296   002696  5032               	movf	colour_rel@vals^0,w,c
  4297   002698  26D9               	addwf	fsr2l,f,c
  4298   00269A  5033               	movf	(colour_rel@vals+1)^0,w,c
  4299   00269C  22DA               	addwfc	fsr2h,f,c
  4300   00269E  CFDE F001          	movff	postinc2,___xxtofl@val
  4301   0026A2  CFDD F002          	movff	postdec2,___xxtofl@val+1
  4302   0026A6  0E00               	movlw	0
  4303   0026A8  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4304   0026AA  0EFF               	movlw	-1
  4305   0026AC  6E03               	movwf	(___xxtofl@val+2)^0,c
  4306   0026AE  6E04               	movwf	(___xxtofl@val+3)^0,c
  4307   0026B0  0E01               	movlw	1
  4308   0026B2  EC39  F017         	call	___xxtofl
  4309   0026B6  C001  F036         	movff	?___xxtofl,colour_rel@L
  4310   0026BA  C002  F037         	movff	?___xxtofl+1,colour_rel@L+1
  4311   0026BE  C003  F038         	movff	?___xxtofl+2,colour_rel@L+2
  4312   0026C2  C004  F039         	movff	?___xxtofl+3,colour_rel@L+3
  4313   0026C6                     
  4314                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  4315   0026C6  C046  F005         	movff	colour_rel@G,___fladd@a
  4316   0026CA  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  4317   0026CE  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  4318   0026D2  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  4319   0026D6  C042  F001         	movff	colour_rel@R,___fladd@b
  4320   0026DA  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  4321   0026DE  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  4322   0026E2  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  4323   0026E6  ECBB  F00C         	call	___fladd	;wreg free
  4324   0026EA  C001  F03A         	movff	?___fladd,_colour_rel$2540
  4325   0026EE  C002  F03B         	movff	?___fladd+1,_colour_rel$2540+1
  4326   0026F2  C003  F03C         	movff	?___fladd+2,_colour_rel$2540+2
  4327   0026F6  C004  F03D         	movff	?___fladd+3,_colour_rel$2540+3
  4328   0026FA                     
  4329                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  4330   0026FA  C04A  F005         	movff	colour_rel@B,___fladd@a
  4331   0026FE  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  4332   002702  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  4333   002706  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  4334   00270A  C03A  F001         	movff	_colour_rel$2540,___fladd@b
  4335   00270E  C03B  F002         	movff	_colour_rel$2540+1,___fladd@b+1
  4336   002712  C03C  F003         	movff	_colour_rel$2540+2,___fladd@b+2
  4337   002716  C03D  F004         	movff	_colour_rel$2540+3,___fladd@b+3
  4338   00271A  ECBB  F00C         	call	___fladd	;wreg free
  4339   00271E  C001  F03E         	movff	?___fladd,_colour_rel$2541
  4340   002722  C002  F03F         	movff	?___fladd+1,_colour_rel$2541+1
  4341   002726  C003  F040         	movff	?___fladd+2,_colour_rel$2541+2
  4342   00272A  C004  F041         	movff	?___fladd+3,_colour_rel$2541+3
  4343                           
  4344                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  4345   00272E  C042  F019         	movff	colour_rel@R,___fldiv@b
  4346   002732  C043  F01A         	movff	colour_rel@R+1,___fldiv@b+1
  4347   002736  C044  F01B         	movff	colour_rel@R+2,___fldiv@b+2
  4348   00273A  C045  F01C         	movff	colour_rel@R+3,___fldiv@b+3
  4349   00273E  C036  F005         	movff	colour_rel@L,___fladd@a
  4350   002742  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  4351   002746  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  4352   00274A  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  4353   00274E  C03E  F001         	movff	_colour_rel$2541,___fladd@b
  4354   002752  C03F  F002         	movff	_colour_rel$2541+1,___fladd@b+1
  4355   002756  C040  F003         	movff	_colour_rel$2541+2,___fladd@b+2
  4356   00275A  C041  F004         	movff	_colour_rel$2541+3,___fladd@b+3
  4357   00275E  ECBB  F00C         	call	___fladd	;wreg free
  4358   002762  C001  F01D         	movff	?___fladd,___fldiv@a
  4359   002766  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  4360   00276A  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  4361   00276E  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  4362   002772  EC30  F011         	call	___fldiv	;wreg free
  4363   002776  C034  FFD9         	movff	colour_rel@rel,fsr2l
  4364   00277A  C035  FFDA         	movff	colour_rel@rel+1,fsr2h
  4365   00277E  C019  FFDE         	movff	?___fldiv,postinc2
  4366   002782  C01A  FFDE         	movff	?___fldiv+1,postinc2
  4367   002786  C01B  FFDE         	movff	?___fldiv+2,postinc2
  4368   00278A  C01C  FFDE         	movff	?___fldiv+3,postinc2
  4369   00278E                     
  4370                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  4371   00278E  C046  F005         	movff	colour_rel@G,___fladd@a
  4372   002792  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  4373   002796  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  4374   00279A  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  4375   00279E  C042  F001         	movff	colour_rel@R,___fladd@b
  4376   0027A2  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  4377   0027A6  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  4378   0027AA  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  4379   0027AE  ECBB  F00C         	call	___fladd	;wreg free
  4380   0027B2  C001  F03A         	movff	?___fladd,_colour_rel$2540
  4381   0027B6  C002  F03B         	movff	?___fladd+1,_colour_rel$2540+1
  4382   0027BA  C003  F03C         	movff	?___fladd+2,_colour_rel$2540+2
  4383   0027BE  C004  F03D         	movff	?___fladd+3,_colour_rel$2540+3
  4384   0027C2                     
  4385                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  4386   0027C2  C04A  F005         	movff	colour_rel@B,___fladd@a
  4387   0027C6  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  4388   0027CA  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  4389   0027CE  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  4390   0027D2  C03A  F001         	movff	_colour_rel$2540,___fladd@b
  4391   0027D6  C03B  F002         	movff	_colour_rel$2540+1,___fladd@b+1
  4392   0027DA  C03C  F003         	movff	_colour_rel$2540+2,___fladd@b+2
  4393   0027DE  C03D  F004         	movff	_colour_rel$2540+3,___fladd@b+3
  4394   0027E2  ECBB  F00C         	call	___fladd	;wreg free
  4395   0027E6  C001  F03E         	movff	?___fladd,_colour_rel$2541
  4396   0027EA  C002  F03F         	movff	?___fladd+1,_colour_rel$2541+1
  4397   0027EE  C003  F040         	movff	?___fladd+2,_colour_rel$2541+2
  4398   0027F2  C004  F041         	movff	?___fladd+3,_colour_rel$2541+3
  4399                           
  4400                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  4401   0027F6  C04A  F019         	movff	colour_rel@B,___fldiv@b
  4402   0027FA  C04B  F01A         	movff	colour_rel@B+1,___fldiv@b+1
  4403   0027FE  C04C  F01B         	movff	colour_rel@B+2,___fldiv@b+2
  4404   002802  C04D  F01C         	movff	colour_rel@B+3,___fldiv@b+3
  4405   002806  C036  F005         	movff	colour_rel@L,___fladd@a
  4406   00280A  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  4407   00280E  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  4408   002812  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  4409   002816  C03E  F001         	movff	_colour_rel$2541,___fladd@b
  4410   00281A  C03F  F002         	movff	_colour_rel$2541+1,___fladd@b+1
  4411   00281E  C040  F003         	movff	_colour_rel$2541+2,___fladd@b+2
  4412   002822  C041  F004         	movff	_colour_rel$2541+3,___fladd@b+3
  4413   002826  ECBB  F00C         	call	___fladd	;wreg free
  4414   00282A  C001  F01D         	movff	?___fladd,___fldiv@a
  4415   00282E  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  4416   002832  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  4417   002836  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  4418   00283A  EC30  F011         	call	___fldiv	;wreg free
  4419   00283E  EE20 F008          	lfsr	2,8
  4420   002842  5034               	movf	colour_rel@rel^0,w,c
  4421   002844  26D9               	addwf	fsr2l,f,c
  4422   002846  5035               	movf	(colour_rel@rel+1)^0,w,c
  4423   002848  22DA               	addwfc	fsr2h,f,c
  4424   00284A  C019  FFDE         	movff	?___fldiv,postinc2
  4425   00284E  C01A  FFDE         	movff	?___fldiv+1,postinc2
  4426   002852  C01B  FFDE         	movff	?___fldiv+2,postinc2
  4427   002856  C01C  FFDE         	movff	?___fldiv+3,postinc2
  4428   00285A                     
  4429                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  4430   00285A  C046  F005         	movff	colour_rel@G,___fladd@a
  4431   00285E  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  4432   002862  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  4433   002866  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  4434   00286A  C042  F001         	movff	colour_rel@R,___fladd@b
  4435   00286E  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  4436   002872  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  4437   002876  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  4438   00287A  ECBB  F00C         	call	___fladd	;wreg free
  4439   00287E  C001  F03A         	movff	?___fladd,_colour_rel$2540
  4440   002882  C002  F03B         	movff	?___fladd+1,_colour_rel$2540+1
  4441   002886  C003  F03C         	movff	?___fladd+2,_colour_rel$2540+2
  4442   00288A  C004  F03D         	movff	?___fladd+3,_colour_rel$2540+3
  4443   00288E                     
  4444                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  4445   00288E  C04A  F005         	movff	colour_rel@B,___fladd@a
  4446   002892  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  4447   002896  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  4448   00289A  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  4449   00289E  C03A  F001         	movff	_colour_rel$2540,___fladd@b
  4450   0028A2  C03B  F002         	movff	_colour_rel$2540+1,___fladd@b+1
  4451   0028A6  C03C  F003         	movff	_colour_rel$2540+2,___fladd@b+2
  4452   0028AA  C03D  F004         	movff	_colour_rel$2540+3,___fladd@b+3
  4453   0028AE  ECBB  F00C         	call	___fladd	;wreg free
  4454   0028B2  C001  F03E         	movff	?___fladd,_colour_rel$2541
  4455   0028B6  C002  F03F         	movff	?___fladd+1,_colour_rel$2541+1
  4456   0028BA  C003  F040         	movff	?___fladd+2,_colour_rel$2541+2
  4457   0028BE  C004  F041         	movff	?___fladd+3,_colour_rel$2541+3
  4458                           
  4459                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  4460   0028C2  C046  F019         	movff	colour_rel@G,___fldiv@b
  4461   0028C6  C047  F01A         	movff	colour_rel@G+1,___fldiv@b+1
  4462   0028CA  C048  F01B         	movff	colour_rel@G+2,___fldiv@b+2
  4463   0028CE  C049  F01C         	movff	colour_rel@G+3,___fldiv@b+3
  4464   0028D2  C036  F005         	movff	colour_rel@L,___fladd@a
  4465   0028D6  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  4466   0028DA  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  4467   0028DE  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  4468   0028E2  C03E  F001         	movff	_colour_rel$2541,___fladd@b
  4469   0028E6  C03F  F002         	movff	_colour_rel$2541+1,___fladd@b+1
  4470   0028EA  C040  F003         	movff	_colour_rel$2541+2,___fladd@b+2
  4471   0028EE  C041  F004         	movff	_colour_rel$2541+3,___fladd@b+3
  4472   0028F2  ECBB  F00C         	call	___fladd	;wreg free
  4473   0028F6  C001  F01D         	movff	?___fladd,___fldiv@a
  4474   0028FA  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  4475   0028FE  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  4476   002902  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  4477   002906  EC30  F011         	call	___fldiv	;wreg free
  4478   00290A  EE20 F004          	lfsr	2,4
  4479   00290E  5034               	movf	colour_rel@rel^0,w,c
  4480   002910  26D9               	addwf	fsr2l,f,c
  4481   002912  5035               	movf	(colour_rel@rel+1)^0,w,c
  4482   002914  22DA               	addwfc	fsr2h,f,c
  4483   002916  C019  FFDE         	movff	?___fldiv,postinc2
  4484   00291A  C01A  FFDE         	movff	?___fldiv+1,postinc2
  4485   00291E  C01B  FFDE         	movff	?___fldiv+2,postinc2
  4486   002922  C01C  FFDE         	movff	?___fldiv+3,postinc2
  4487   002926  0012               	return		;funcret
  4488   002928                     __end_of_colour_rel:
  4489                           	callstack 0
  4490                           
  4491 ;; *************** function _color_click_init *****************
  4492 ;; Defined at:
  4493 ;;		line 7 in file "color.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;		None
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;		None
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      void 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0, cstack
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4510 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4511 ;;Total ram usage:        1 bytes
  4512 ;; Hardware stack levels used: 1
  4513 ;; Hardware stack levels required when called: 4
  4514 ;; This function calls:
  4515 ;;		_I2C_2_Master_Init
  4516 ;;		_color_writetoaddr
  4517 ;; This function is called by:
  4518 ;;		_main
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text25
  4523   003F5E                     __ptext25:
  4524                           	callstack 0
  4525   003F5E                     _color_click_init:
  4526                           	callstack 26
  4527   003F5E                     
  4528                           ;color.c: 10:     I2C_2_Master_Init();
  4529   003F5E  EC1F  F022         	call	_I2C_2_Master_Init	;wreg free
  4530   003F62                     
  4531                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  4532   003F62  0E01               	movlw	1
  4533   003F64  6E03               	movwf	color_writetoaddr@value^0,c
  4534   003F66  0E00               	movlw	0
  4535   003F68  EC5B  F022         	call	_color_writetoaddr
  4536   003F6C                     
  4537                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4538   003F6C  0E3F               	movlw	63
  4539   003F6E  6E05               	movwf	??_color_click_init^0,c
  4540   003F70  0E55               	movlw	85
  4541   003F72                     u4107:
  4542   003F72  2EE8               	decfsz	wreg,f,c
  4543   003F74  D7FE               	bra	u4107
  4544   003F76  2E05               	decfsz	??_color_click_init^0,f,c
  4545   003F78  D7FC               	bra	u4107
  4546   003F7A  F000               	nop	
  4547   003F7C                     
  4548                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  4549   003F7C  0E03               	movlw	3
  4550   003F7E  6E03               	movwf	color_writetoaddr@value^0,c
  4551   003F80  0E00               	movlw	0
  4552   003F82  EC5B  F022         	call	_color_writetoaddr
  4553   003F86                     
  4554                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  4555   003F86  0ED5               	movlw	213
  4556   003F88  6E03               	movwf	color_writetoaddr@value^0,c
  4557   003F8A  0E01               	movlw	1
  4558   003F8C  EC5B  F022         	call	_color_writetoaddr
  4559   003F90                     
  4560                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  4561   003F90  0E00               	movlw	0
  4562   003F92  6E03               	movwf	color_writetoaddr@value^0,c
  4563   003F94  0E0F               	movlw	15
  4564   003F96  EC5B  F022         	call	_color_writetoaddr
  4565   003F9A                     
  4566                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  4567   003F9A  9287               	bcf	135,1,c	;volatile
  4568   003F9C                     
  4569                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  4570   003F9C  9881               	bcf	129,4,c	;volatile
  4571   003F9E                     
  4572                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  4573   003F9E  9E86               	bcf	134,7,c	;volatile
  4574   003FA0                     
  4575                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  4576   003FA0  9684               	bcf	132,3,c	;volatile
  4577   003FA2                     
  4578                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  4579   003FA2  9884               	bcf	132,4,c	;volatile
  4580   003FA4                     
  4581                           ;color.c: 28:     LATGbits.LATG1=0;
  4582   003FA4  927F               	bcf	127,1,c	;volatile
  4583   003FA6                     
  4584                           ;color.c: 29:     LATFbits.LATF7=0;
  4585   003FA6  9E7E               	bcf	126,7,c	;volatile
  4586   003FA8                     
  4587                           ;color.c: 30:     LATAbits.LATA4=0;
  4588   003FA8  9879               	bcf	121,4,c	;volatile
  4589   003FAA                     
  4590                           ;color.c: 32:     LATDbits.LATD3=0;
  4591   003FAA  967C               	bcf	124,3,c	;volatile
  4592   003FAC                     
  4593                           ;color.c: 33:     LATDbits.LATD4=0;
  4594   003FAC  987C               	bcf	124,4,c	;volatile
  4595   003FAE  0012               	return		;funcret
  4596   003FB0                     __end_of_color_click_init:
  4597                           	callstack 0
  4598                           
  4599 ;; *************** function _color_writetoaddr *****************
  4600 ;; Defined at:
  4601 ;;		line 41 in file "color.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  address         1    wreg     unsigned char 
  4604 ;;  value           1    2[COMRAM] unsigned char 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  address         1    3[COMRAM] unsigned char 
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      void 
  4609 ;; Registers used:
  4610 ;;		wreg, status,2, status,0, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4616 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4620 ;;Total ram usage:        2 bytes
  4621 ;; Hardware stack levels used: 1
  4622 ;; Hardware stack levels required when called: 3
  4623 ;; This function calls:
  4624 ;;		_I2C_2_Master_Start
  4625 ;;		_I2C_2_Master_Stop
  4626 ;;		_I2C_2_Master_Write
  4627 ;; This function is called by:
  4628 ;;		_color_click_init
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text26
  4633   0044B6                     __ptext26:
  4634                           	callstack 0
  4635   0044B6                     _color_writetoaddr:
  4636                           	callstack 26
  4637                           
  4638                           ;incstack = 0
  4639                           ;color_writetoaddr@address stored from wreg
  4640   0044B6  6E04               	movwf	color_writetoaddr@address^0,c
  4641   0044B8                     
  4642                           ;color.c: 42:     I2C_2_Master_Start();
  4643   0044B8  EC96  F022         	call	_I2C_2_Master_Start	;wreg free
  4644                           
  4645                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  4646   0044BC  0E52               	movlw	82
  4647   0044BE  EC86  F022         	call	_I2C_2_Master_Write
  4648                           
  4649                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  4650   0044C2  5004               	movf	color_writetoaddr@address^0,w,c
  4651   0044C4  0980               	iorlw	128
  4652   0044C6  EC86  F022         	call	_I2C_2_Master_Write
  4653                           
  4654                           ;color.c: 45:     I2C_2_Master_Write(value);
  4655   0044CA  5003               	movf	color_writetoaddr@value^0,w,c
  4656   0044CC  EC86  F022         	call	_I2C_2_Master_Write
  4657                           
  4658                           ;color.c: 46:     I2C_2_Master_Stop();
  4659   0044D0  EC91  F022         	call	_I2C_2_Master_Stop	;wreg free
  4660   0044D4  0012               	return		;funcret
  4661   0044D6                     __end_of_color_writetoaddr:
  4662                           	callstack 0
  4663                           
  4664 ;; *************** function _I2C_2_Master_Write *****************
  4665 ;; Defined at:
  4666 ;;		line 45 in file "i2c.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  data_byte       1    wreg     unsigned char 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  data_byte       1    1[COMRAM] unsigned char 
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      void 
  4673 ;; Registers used:
  4674 ;;		wreg, status,2, status,0, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4684 ;;Total ram usage:        1 bytes
  4685 ;; Hardware stack levels used: 1
  4686 ;; Hardware stack levels required when called: 2
  4687 ;; This function calls:
  4688 ;;		_I2C_2_Master_Idle
  4689 ;; This function is called by:
  4690 ;;		_color_writetoaddr
  4691 ;;		_color_read_lum
  4692 ;;		_color_read_Red
  4693 ;;		_color_read_Green
  4694 ;;		_color_read_Blue
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           	psect	text27
  4699   00450C                     __ptext27:
  4700                           	callstack 0
  4701   00450C                     _I2C_2_Master_Write:
  4702                           	callstack 26
  4703                           
  4704                           ;incstack = 0
  4705                           ;I2C_2_Master_Write@data_byte stored from wreg
  4706   00450C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4707   00450E                     
  4708                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4709   00450E  EC34  F022         	call	_I2C_2_Master_Idle	;wreg free
  4710   004512                     
  4711                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4712   004512  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4713   004516  0012               	return		;funcret
  4714   004518                     __end_of_I2C_2_Master_Write:
  4715                           	callstack 0
  4716                           
  4717 ;; *************** function _I2C_2_Master_Stop *****************
  4718 ;; Defined at:
  4719 ;;		line 39 in file "i2c.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;		None
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;		None
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  1    wreg      void 
  4726 ;; Registers used:
  4727 ;;		wreg, status,2, status,0, cstack
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4737 ;;Total ram usage:        0 bytes
  4738 ;; Hardware stack levels used: 1
  4739 ;; Hardware stack levels required when called: 2
  4740 ;; This function calls:
  4741 ;;		_I2C_2_Master_Idle
  4742 ;; This function is called by:
  4743 ;;		_color_writetoaddr
  4744 ;;		_color_read_lum
  4745 ;;		_color_read_Red
  4746 ;;		_color_read_Green
  4747 ;;		_color_read_Blue
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           	psect	text28
  4752   004522                     __ptext28:
  4753                           	callstack 0
  4754   004522                     _I2C_2_Master_Stop:
  4755                           	callstack 26
  4756   004522                     
  4757                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4758   004522  EC34  F022         	call	_I2C_2_Master_Idle	;wreg free
  4759   004526                     
  4760                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4761   004526  010E               	movlb	14	; () banked
  4762   004528  85DA               	bsf	218,2,b	;volatile
  4763   00452A                     
  4764                           ; BSR set to: 14
  4765   00452A  0012               	return		;funcret
  4766   00452C                     __end_of_I2C_2_Master_Stop:
  4767                           	callstack 0
  4768                           
  4769 ;; *************** function _I2C_2_Master_Start *****************
  4770 ;; Defined at:
  4771 ;;		line 27 in file "i2c.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;		None
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;		None
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1    wreg      void 
  4778 ;; Registers used:
  4779 ;;		wreg, status,2, status,0, cstack
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4789 ;;Total ram usage:        0 bytes
  4790 ;; Hardware stack levels used: 1
  4791 ;; Hardware stack levels required when called: 2
  4792 ;; This function calls:
  4793 ;;		_I2C_2_Master_Idle
  4794 ;; This function is called by:
  4795 ;;		_color_writetoaddr
  4796 ;;		_color_read_lum
  4797 ;;		_color_read_Red
  4798 ;;		_color_read_Green
  4799 ;;		_color_read_Blue
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           	psect	text29
  4804   00452C                     __ptext29:
  4805                           	callstack 0
  4806   00452C                     _I2C_2_Master_Start:
  4807                           	callstack 26
  4808   00452C                     
  4809                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4810   00452C  EC34  F022         	call	_I2C_2_Master_Idle	;wreg free
  4811   004530                     
  4812                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4813   004530  010E               	movlb	14	; () banked
  4814   004532  81DA               	bsf	218,0,b	;volatile
  4815   004534                     
  4816                           ; BSR set to: 14
  4817   004534  0012               	return		;funcret
  4818   004536                     __end_of_I2C_2_Master_Start:
  4819                           	callstack 0
  4820                           
  4821 ;; *************** function _I2C_2_Master_Idle *****************
  4822 ;; Defined at:
  4823 ;;		line 22 in file "i2c.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;		None
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;		None
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, status,2, status,0
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4839 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4840 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4841 ;;Total ram usage:        1 bytes
  4842 ;; Hardware stack levels used: 1
  4843 ;; Hardware stack levels required when called: 1
  4844 ;; This function calls:
  4845 ;;		Nothing
  4846 ;; This function is called by:
  4847 ;;		_I2C_2_Master_Start
  4848 ;;		_I2C_2_Master_RepStart
  4849 ;;		_I2C_2_Master_Stop
  4850 ;;		_I2C_2_Master_Write
  4851 ;;		_I2C_2_Master_Read
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           	psect	text30
  4856   004468                     __ptext30:
  4857                           	callstack 0
  4858   004468                     _I2C_2_Master_Idle:
  4859                           	callstack 26
  4860   004468                     l140:
  4861   004468  010E               	movlb	14	; () banked
  4862   00446A  B5D8               	btfsc	216,2,b	;volatile
  4863   00446C  EF3A  F022         	goto	u2291
  4864   004470  EF3C  F022         	goto	u2290
  4865   004474                     u2291:
  4866   004474  EF34  F022         	goto	l140
  4867   004478                     u2290:
  4868   004478                     
  4869                           ; BSR set to: 14
  4870   004478  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4871   00447C  0E1F               	movlw	31
  4872   00447E  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  4873   004480  A4D8               	btfss	status,2,c
  4874   004482  EF45  F022         	goto	u2301
  4875   004486  EF47  F022         	goto	u2300
  4876   00448A                     u2301:
  4877   00448A  EF34  F022         	goto	l140
  4878   00448E                     u2300:
  4879   00448E                     
  4880                           ; BSR set to: 14
  4881   00448E  0012               	return		;funcret
  4882   004490                     __end_of_I2C_2_Master_Idle:
  4883                           	callstack 0
  4884                           
  4885 ;; *************** function _I2C_2_Master_Init *****************
  4886 ;; Defined at:
  4887 ;;		line 4 in file "i2c.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;		None
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;		None
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  1    wreg      void 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4905 ;;Total ram usage:        0 bytes
  4906 ;; Hardware stack levels used: 1
  4907 ;; Hardware stack levels required when called: 1
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		_color_click_init
  4912 ;;		_main
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text31
  4917   00443E                     __ptext31:
  4918                           	callstack 0
  4919   00443E                     _I2C_2_Master_Init:
  4920                           	callstack 28
  4921   00443E                     
  4922                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4923   00443E  010E               	movlb	14	; () banked
  4924   004440  51D9               	movf	217,w,b	;volatile
  4925   004442  0BF0               	andlw	-16
  4926   004444  0908               	iorlw	8
  4927   004446  6FD9               	movwf	217,b	;volatile
  4928   004448                     
  4929                           ; BSR set to: 14
  4930                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4931   004448  8BD9               	bsf	217,5,b	;volatile
  4932                           
  4933                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4934   00444A  0E9F               	movlw	159
  4935   00444C  6FD6               	movwf	214,b	;volatile
  4936   00444E                     
  4937                           ; BSR set to: 14
  4938                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4939   00444E  8A84               	bsf	132,5,c	;volatile
  4940   004450                     
  4941                           ; BSR set to: 14
  4942                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4943   004450  8C84               	bsf	132,6,c	;volatile
  4944   004452                     
  4945                           ; BSR set to: 14
  4946                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4947   004452  9BA7               	bcf	167,5,b	;volatile
  4948   004454                     
  4949                           ; BSR set to: 14
  4950                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4951   004454  9DA7               	bcf	167,6,b	;volatile
  4952                           
  4953                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4954   004456  0E1D               	movlw	29
  4955   004458  6F1D               	movwf	29,b	;volatile
  4956                           
  4957                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4958   00445A  0E1E               	movlw	30
  4959   00445C  6F1C               	movwf	28,b	;volatile
  4960                           
  4961                           ;i2c.c: 18:   RD5PPS=0x1C;
  4962   00445E  0E1C               	movlw	28
  4963   004460  6F6F               	movwf	111,b	;volatile
  4964                           
  4965                           ;i2c.c: 19:   RD6PPS=0x1B;
  4966   004462  0E1B               	movlw	27
  4967   004464  6F70               	movwf	112,b	;volatile
  4968   004466                     
  4969                           ; BSR set to: 14
  4970   004466  0012               	return		;funcret
  4971   004468                     __end_of_I2C_2_Master_Init:
  4972                           	callstack 0
  4973                           
  4974 ;; *************** function _YellowMove *****************
  4975 ;; Defined at:
  4976 ;;		line 239 in file "dc_motor.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4979 ;;		 -> motorL(9), 
  4980 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4981 ;;		 -> motorR(9), 
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;		None
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      void 
  4986 ;; Registers used:
  4987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4993 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4996 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4997 ;;Total ram usage:        4 bytes
  4998 ;; Hardware stack levels used: 1
  4999 ;; Hardware stack levels required when called: 5
  5000 ;; This function calls:
  5001 ;;		_reverseDetect
  5002 ;;		_reverseOneBlock
  5003 ;;		_turnRight45
  5004 ;; This function is called by:
  5005 ;;		_main
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           	psect	text32
  5010   003FB0                     __ptext32:
  5011                           	callstack 0
  5012   003FB0                     _YellowMove:
  5013                           	callstack 25
  5014   003FB0                     
  5015                           ;dc_motor.c: 240:     reverseDetect(&motorL, &motorR);
  5016   003FB0  0EF6               	movlw	low _motorL
  5017   003FB2  6E19               	movwf	reverseDetect@mL^0,c
  5018   003FB4  0E00               	movlw	high _motorL
  5019   003FB6  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  5020   003FB8  0EED               	movlw	low _motorR
  5021   003FBA  6E1B               	movwf	reverseDetect@mR^0,c
  5022   003FBC  0E00               	movlw	high _motorR
  5023   003FBE  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  5024   003FC0  EC01  F01F         	call	_reverseDetect	;wreg free
  5025                           
  5026                           ;dc_motor.c: 242:     reverseOneBlock(&motorL, &motorR);
  5027   003FC4  0EF6               	movlw	low _motorL
  5028   003FC6  6E19               	movwf	reverseOneBlock@mL^0,c
  5029   003FC8  0E00               	movlw	high _motorL
  5030   003FCA  6E1A               	movwf	(reverseOneBlock@mL+1)^0,c
  5031   003FCC  0EED               	movlw	low _motorR
  5032   003FCE  6E1B               	movwf	reverseOneBlock@mR^0,c
  5033   003FD0  0E00               	movlw	high _motorR
  5034   003FD2  6E1C               	movwf	(reverseOneBlock@mR+1)^0,c
  5035   003FD4  ECD4  F01E         	call	_reverseOneBlock	;wreg free
  5036                           
  5037                           ;dc_motor.c: 244:     turnRight45(&motorL, &motorR);
  5038   003FD8  0EF6               	movlw	low _motorL
  5039   003FDA  6E19               	movwf	turnRight45@mL^0,c
  5040   003FDC  0E00               	movlw	high _motorL
  5041   003FDE  6E1A               	movwf	(turnRight45@mL+1)^0,c
  5042   003FE0  0EED               	movlw	low _motorR
  5043   003FE2  6E1B               	movwf	turnRight45@mR^0,c
  5044   003FE4  0E00               	movlw	high _motorR
  5045   003FE6  6E1C               	movwf	(turnRight45@mR+1)^0,c
  5046   003FE8  EC5A  F01F         	call	_turnRight45	;wreg free
  5047                           
  5048                           ;dc_motor.c: 245:     turnRight45(&motorL, &motorR);
  5049   003FEC  0EF6               	movlw	low _motorL
  5050   003FEE  6E19               	movwf	turnRight45@mL^0,c
  5051   003FF0  0E00               	movlw	high _motorL
  5052   003FF2  6E1A               	movwf	(turnRight45@mL+1)^0,c
  5053   003FF4  0EED               	movlw	low _motorR
  5054   003FF6  6E1B               	movwf	turnRight45@mR^0,c
  5055   003FF8  0E00               	movlw	high _motorR
  5056   003FFA  6E1C               	movwf	(turnRight45@mR+1)^0,c
  5057   003FFC  EC5A  F01F         	call	_turnRight45	;wreg free
  5058   004000  0012               	return		;funcret
  5059   004002                     __end_of_YellowMove:
  5060                           	callstack 0
  5061                           
  5062 ;; *************** function _RedMove *****************
  5063 ;; Defined at:
  5064 ;;		line 213 in file "dc_motor.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  5067 ;;		 -> motorL(9), 
  5068 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  5069 ;;		 -> motorR(9), 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5081 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5084 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5085 ;;Total ram usage:        4 bytes
  5086 ;; Hardware stack levels used: 1
  5087 ;; Hardware stack levels required when called: 5
  5088 ;; This function calls:
  5089 ;;		_reverseDetect
  5090 ;;		_turnRight45
  5091 ;; This function is called by:
  5092 ;;		_main
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           	psect	text33
  5097   004392                     __ptext33:
  5098                           	callstack 0
  5099   004392                     _RedMove:
  5100                           	callstack 25
  5101   004392                     
  5102                           ;dc_motor.c: 214:     reverseDetect(&motorL, &motorR);
  5103   004392  0EF6               	movlw	low _motorL
  5104   004394  6E19               	movwf	reverseDetect@mL^0,c
  5105   004396  0E00               	movlw	high _motorL
  5106   004398  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  5107   00439A  0EED               	movlw	low _motorR
  5108   00439C  6E1B               	movwf	reverseDetect@mR^0,c
  5109   00439E  0E00               	movlw	high _motorR
  5110   0043A0  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  5111   0043A2  EC01  F01F         	call	_reverseDetect	;wreg free
  5112                           
  5113                           ;dc_motor.c: 216:     turnRight45(&motorL, &motorR);
  5114   0043A6  0EF6               	movlw	low _motorL
  5115   0043A8  6E19               	movwf	turnRight45@mL^0,c
  5116   0043AA  0E00               	movlw	high _motorL
  5117   0043AC  6E1A               	movwf	(turnRight45@mL+1)^0,c
  5118   0043AE  0EED               	movlw	low _motorR
  5119   0043B0  6E1B               	movwf	turnRight45@mR^0,c
  5120   0043B2  0E00               	movlw	high _motorR
  5121   0043B4  6E1C               	movwf	(turnRight45@mR+1)^0,c
  5122   0043B6  EC5A  F01F         	call	_turnRight45	;wreg free
  5123                           
  5124                           ;dc_motor.c: 217:     turnRight45(&motorL, &motorR);
  5125   0043BA  0EF6               	movlw	low _motorL
  5126   0043BC  6E19               	movwf	turnRight45@mL^0,c
  5127   0043BE  0E00               	movlw	high _motorL
  5128   0043C0  6E1A               	movwf	(turnRight45@mL+1)^0,c
  5129   0043C2  0EED               	movlw	low _motorR
  5130   0043C4  6E1B               	movwf	turnRight45@mR^0,c
  5131   0043C6  0E00               	movlw	high _motorR
  5132   0043C8  6E1C               	movwf	(turnRight45@mR+1)^0,c
  5133   0043CA  EC5A  F01F         	call	_turnRight45	;wreg free
  5134   0043CE  0012               	return		;funcret
  5135   0043D0                     __end_of_RedMove:
  5136                           	callstack 0
  5137                           
  5138 ;; *************** function _PinkMove *****************
  5139 ;; Defined at:
  5140 ;;		line 249 in file "dc_motor.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  5143 ;;		 -> motorL(9), 
  5144 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  5145 ;;		 -> motorR(9), 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;		None
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      void 
  5150 ;; Registers used:
  5151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5157 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5160 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5161 ;;Total ram usage:        4 bytes
  5162 ;; Hardware stack levels used: 1
  5163 ;; Hardware stack levels required when called: 5
  5164 ;; This function calls:
  5165 ;;		_reverseDetect
  5166 ;;		_reverseOneBlock
  5167 ;;		_turnLeft45
  5168 ;; This function is called by:
  5169 ;;		_main
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           	psect	text34
  5174   004002                     __ptext34:
  5175                           	callstack 0
  5176   004002                     _PinkMove:
  5177                           	callstack 25
  5178   004002                     
  5179                           ;dc_motor.c: 250:     reverseDetect(&motorL, &motorR);
  5180   004002  0EF6               	movlw	low _motorL
  5181   004004  6E19               	movwf	reverseDetect@mL^0,c
  5182   004006  0E00               	movlw	high _motorL
  5183   004008  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  5184   00400A  0EED               	movlw	low _motorR
  5185   00400C  6E1B               	movwf	reverseDetect@mR^0,c
  5186   00400E  0E00               	movlw	high _motorR
  5187   004010  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  5188   004012  EC01  F01F         	call	_reverseDetect	;wreg free
  5189                           
  5190                           ;dc_motor.c: 252:     reverseOneBlock(&motorL, &motorR);
  5191   004016  0EF6               	movlw	low _motorL
  5192   004018  6E19               	movwf	reverseOneBlock@mL^0,c
  5193   00401A  0E00               	movlw	high _motorL
  5194   00401C  6E1A               	movwf	(reverseOneBlock@mL+1)^0,c
  5195   00401E  0EED               	movlw	low _motorR
  5196   004020  6E1B               	movwf	reverseOneBlock@mR^0,c
  5197   004022  0E00               	movlw	high _motorR
  5198   004024  6E1C               	movwf	(reverseOneBlock@mR+1)^0,c
  5199   004026  ECD4  F01E         	call	_reverseOneBlock	;wreg free
  5200                           
  5201                           ;dc_motor.c: 254:     turnLeft45(&motorL, &motorR);
  5202   00402A  0EF6               	movlw	low _motorL
  5203   00402C  6E19               	movwf	turnLeft45@mL^0,c
  5204   00402E  0E00               	movlw	high _motorL
  5205   004030  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  5206   004032  0EED               	movlw	low _motorR
  5207   004034  6E1B               	movwf	turnLeft45@mR^0,c
  5208   004036  0E00               	movlw	high _motorR
  5209   004038  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  5210   00403A  EC2E  F01F         	call	_turnLeft45	;wreg free
  5211                           
  5212                           ;dc_motor.c: 255:     turnLeft45(&motorL, &motorR);
  5213   00403E  0EF6               	movlw	low _motorL
  5214   004040  6E19               	movwf	turnLeft45@mL^0,c
  5215   004042  0E00               	movlw	high _motorL
  5216   004044  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  5217   004046  0EED               	movlw	low _motorR
  5218   004048  6E1B               	movwf	turnLeft45@mR^0,c
  5219   00404A  0E00               	movlw	high _motorR
  5220   00404C  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  5221   00404E  EC2E  F01F         	call	_turnLeft45	;wreg free
  5222   004052  0012               	return		;funcret
  5223   004054                     __end_of_PinkMove:
  5224                           	callstack 0
  5225                           
  5226 ;; *************** function _reverseOneBlock *****************
  5227 ;; Defined at:
  5228 ;;		line 202 in file "dc_motor.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  5231 ;;		 -> motorL(9), 
  5232 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  5233 ;;		 -> motorR(9), 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;		None
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  1    wreg      void 
  5238 ;; Registers used:
  5239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5245 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5247 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5248 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;Total ram usage:        6 bytes
  5250 ;; Hardware stack levels used: 1
  5251 ;; Hardware stack levels required when called: 4
  5252 ;; This function calls:
  5253 ;;		_fullSpeedBack
  5254 ;;		_stop
  5255 ;; This function is called by:
  5256 ;;		_YellowMove
  5257 ;;		_PinkMove
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           	psect	text35
  5262   003DA8                     __ptext35:
  5263                           	callstack 0
  5264   003DA8                     _reverseOneBlock:
  5265                           	callstack 25
  5266   003DA8                     
  5267                           ;dc_motor.c: 203:     fullSpeedBack(mL,mR);
  5268   003DA8  C019  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  5269   003DAC  C01A  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  5270   003DB0  C01B  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  5271   003DB4  C01C  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  5272   003DB8  EC03  F01D         	call	_fullSpeedBack	;wreg free
  5273   003DBC                     
  5274                           ;dc_motor.c: 204:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5275   003DBC  0E52               	movlw	82
  5276   003DBE  6E1E               	movwf	(??_reverseOneBlock+1)^0,c
  5277   003DC0  0E2B               	movlw	43
  5278   003DC2  6E1D               	movwf	??_reverseOneBlock^0,c
  5279   003DC4  0E00               	movlw	0
  5280   003DC6                     u4117:
  5281   003DC6  2EE8               	decfsz	wreg,f,c
  5282   003DC8  D7FE               	bra	u4117
  5283   003DCA  2E1D               	decfsz	??_reverseOneBlock^0,f,c
  5284   003DCC  D7FC               	bra	u4117
  5285   003DCE  2E1E               	decfsz	(??_reverseOneBlock+1)^0,f,c
  5286   003DD0  D7FA               	bra	u4117
  5287   003DD2  D000               	nop2	
  5288   003DD4                     
  5289                           ;dc_motor.c: 205:     stop(&motorL, &motorR);
  5290   003DD4  0EF6               	movlw	low _motorL
  5291   003DD6  6E14               	movwf	stop@mL^0,c
  5292   003DD8  0E00               	movlw	high _motorL
  5293   003DDA  6E15               	movwf	(stop@mL+1)^0,c
  5294   003DDC  0EED               	movlw	low _motorR
  5295   003DDE  6E16               	movwf	stop@mR^0,c
  5296   003DE0  0E00               	movlw	high _motorR
  5297   003DE2  6E17               	movwf	(stop@mR+1)^0,c
  5298   003DE4  ECCF  F01D         	call	_stop	;wreg free
  5299                           
  5300                           ;dc_motor.c: 206:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5301   003DE8  0E52               	movlw	82
  5302   003DEA  6E1E               	movwf	(??_reverseOneBlock+1)^0,c
  5303   003DEC  0E2B               	movlw	43
  5304   003DEE  6E1D               	movwf	??_reverseOneBlock^0,c
  5305   003DF0  0E00               	movlw	0
  5306   003DF2                     u4127:
  5307   003DF2  2EE8               	decfsz	wreg,f,c
  5308   003DF4  D7FE               	bra	u4127
  5309   003DF6  2E1D               	decfsz	??_reverseOneBlock^0,f,c
  5310   003DF8  D7FC               	bra	u4127
  5311   003DFA  2E1E               	decfsz	(??_reverseOneBlock+1)^0,f,c
  5312   003DFC  D7FA               	bra	u4127
  5313   003DFE  D000               	nop2	
  5314   003E00  0012               	return		;funcret
  5315   003E02                     __end_of_reverseOneBlock:
  5316                           	callstack 0
  5317                           
  5318 ;; *************** function _OrangeMove *****************
  5319 ;; Defined at:
  5320 ;;		line 259 in file "dc_motor.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  5323 ;;		 -> motorL(9), 
  5324 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  5325 ;;		 -> motorR(9), 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;		None
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  1    wreg      void 
  5330 ;; Registers used:
  5331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5340 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5341 ;;Total ram usage:        4 bytes
  5342 ;; Hardware stack levels used: 1
  5343 ;; Hardware stack levels required when called: 5
  5344 ;; This function calls:
  5345 ;;		_reverseDetect
  5346 ;;		_turnRight45
  5347 ;; This function is called by:
  5348 ;;		_main
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           	psect	text36
  5353   004054                     __ptext36:
  5354                           	callstack 0
  5355   004054                     _OrangeMove:
  5356                           	callstack 25
  5357   004054                     
  5358                           ;dc_motor.c: 260:     reverseDetect(&motorL, &motorR);
  5359   004054  0EF6               	movlw	low _motorL
  5360   004056  6E19               	movwf	reverseDetect@mL^0,c
  5361   004058  0E00               	movlw	high _motorL
  5362   00405A  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  5363   00405C  0EED               	movlw	low _motorR
  5364   00405E  6E1B               	movwf	reverseDetect@mR^0,c
  5365   004060  0E00               	movlw	high _motorR
  5366   004062  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  5367   004064  EC01  F01F         	call	_reverseDetect	;wreg free
  5368                           
  5369                           ;dc_motor.c: 262:     turnRight45(&motorL, &motorR);
  5370   004068  0EF6               	movlw	low _motorL
  5371   00406A  6E19               	movwf	turnRight45@mL^0,c
  5372   00406C  0E00               	movlw	high _motorL
  5373   00406E  6E1A               	movwf	(turnRight45@mL+1)^0,c
  5374   004070  0EED               	movlw	low _motorR
  5375   004072  6E1B               	movwf	turnRight45@mR^0,c
  5376   004074  0E00               	movlw	high _motorR
  5377   004076  6E1C               	movwf	(turnRight45@mR+1)^0,c
  5378   004078  EC5A  F01F         	call	_turnRight45	;wreg free
  5379                           
  5380                           ;dc_motor.c: 263:     turnRight45(&motorL, &motorR);
  5381   00407C  0EF6               	movlw	low _motorL
  5382   00407E  6E19               	movwf	turnRight45@mL^0,c
  5383   004080  0E00               	movlw	high _motorL
  5384   004082  6E1A               	movwf	(turnRight45@mL+1)^0,c
  5385   004084  0EED               	movlw	low _motorR
  5386   004086  6E1B               	movwf	turnRight45@mR^0,c
  5387   004088  0E00               	movlw	high _motorR
  5388   00408A  6E1C               	movwf	(turnRight45@mR+1)^0,c
  5389   00408C  EC5A  F01F         	call	_turnRight45	;wreg free
  5390                           
  5391                           ;dc_motor.c: 264:     turnRight45(&motorL, &motorR);
  5392   004090  0EF6               	movlw	low _motorL
  5393   004092  6E19               	movwf	turnRight45@mL^0,c
  5394   004094  0E00               	movlw	high _motorL
  5395   004096  6E1A               	movwf	(turnRight45@mL+1)^0,c
  5396   004098  0EED               	movlw	low _motorR
  5397   00409A  6E1B               	movwf	turnRight45@mR^0,c
  5398   00409C  0E00               	movlw	high _motorR
  5399   00409E  6E1C               	movwf	(turnRight45@mR+1)^0,c
  5400   0040A0  EC5A  F01F         	call	_turnRight45	;wreg free
  5401   0040A4  0012               	return		;funcret
  5402   0040A6                     __end_of_OrangeMove:
  5403                           	callstack 0
  5404                           
  5405 ;; *************** function _LightBlueMove *****************
  5406 ;; Defined at:
  5407 ;;		line 268 in file "dc_motor.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  5410 ;;		 -> motorL(9), 
  5411 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  5412 ;;		 -> motorR(9), 
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;		None
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  1    wreg      void 
  5417 ;; Registers used:
  5418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5427 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5428 ;;Total ram usage:        4 bytes
  5429 ;; Hardware stack levels used: 1
  5430 ;; Hardware stack levels required when called: 5
  5431 ;; This function calls:
  5432 ;;		_reverseDetect
  5433 ;;		_turnLeft45
  5434 ;; This function is called by:
  5435 ;;		_main
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text37
  5440   0040A6                     __ptext37:
  5441                           	callstack 0
  5442   0040A6                     _LightBlueMove:
  5443                           	callstack 25
  5444   0040A6                     
  5445                           ;dc_motor.c: 269:     reverseDetect(&motorL, &motorR);
  5446   0040A6  0EF6               	movlw	low _motorL
  5447   0040A8  6E19               	movwf	reverseDetect@mL^0,c
  5448   0040AA  0E00               	movlw	high _motorL
  5449   0040AC  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  5450   0040AE  0EED               	movlw	low _motorR
  5451   0040B0  6E1B               	movwf	reverseDetect@mR^0,c
  5452   0040B2  0E00               	movlw	high _motorR
  5453   0040B4  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  5454   0040B6  EC01  F01F         	call	_reverseDetect	;wreg free
  5455                           
  5456                           ;dc_motor.c: 271:     turnLeft45(&motorL, &motorR);
  5457   0040BA  0EF6               	movlw	low _motorL
  5458   0040BC  6E19               	movwf	turnLeft45@mL^0,c
  5459   0040BE  0E00               	movlw	high _motorL
  5460   0040C0  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  5461   0040C2  0EED               	movlw	low _motorR
  5462   0040C4  6E1B               	movwf	turnLeft45@mR^0,c
  5463   0040C6  0E00               	movlw	high _motorR
  5464   0040C8  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  5465   0040CA  EC2E  F01F         	call	_turnLeft45	;wreg free
  5466                           
  5467                           ;dc_motor.c: 272:     turnLeft45(&motorL, &motorR);
  5468   0040CE  0EF6               	movlw	low _motorL
  5469   0040D0  6E19               	movwf	turnLeft45@mL^0,c
  5470   0040D2  0E00               	movlw	high _motorL
  5471   0040D4  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  5472   0040D6  0EED               	movlw	low _motorR
  5473   0040D8  6E1B               	movwf	turnLeft45@mR^0,c
  5474   0040DA  0E00               	movlw	high _motorR
  5475   0040DC  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  5476   0040DE  EC2E  F01F         	call	_turnLeft45	;wreg free
  5477                           
  5478                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  5479   0040E2  0EF6               	movlw	low _motorL
  5480   0040E4  6E19               	movwf	turnLeft45@mL^0,c
  5481   0040E6  0E00               	movlw	high _motorL
  5482   0040E8  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  5483   0040EA  0EED               	movlw	low _motorR
  5484   0040EC  6E1B               	movwf	turnLeft45@mR^0,c
  5485   0040EE  0E00               	movlw	high _motorR
  5486   0040F0  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  5487   0040F2  EC2E  F01F         	call	_turnLeft45	;wreg free
  5488   0040F6  0012               	return		;funcret
  5489   0040F8                     __end_of_LightBlueMove:
  5490                           	callstack 0
  5491                           
  5492 ;; *************** function _Interrupts_init *****************
  5493 ;; Defined at:
  5494 ;;		line 12 in file "interrupts.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;		None
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;		None
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  1    wreg      void 
  5501 ;; Registers used:
  5502 ;;		None
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5512 ;;Total ram usage:        0 bytes
  5513 ;; Hardware stack levels used: 1
  5514 ;; Hardware stack levels required when called: 1
  5515 ;; This function calls:
  5516 ;;		Nothing
  5517 ;; This function is called by:
  5518 ;;		_main
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text38
  5523   00453A                     __ptext38:
  5524                           	callstack 0
  5525   00453A                     _Interrupts_init:
  5526                           	callstack 29
  5527   00453A  0012               	return		;funcret
  5528   00453C                     __end_of_Interrupts_init:
  5529                           	callstack 0
  5530                           
  5531 ;; *************** function _GreenMove *****************
  5532 ;; Defined at:
  5533 ;;		line 221 in file "dc_motor.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  5536 ;;		 -> motorL(9), 
  5537 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  5538 ;;		 -> motorR(9), 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;		None
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      void 
  5543 ;; Registers used:
  5544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5553 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5554 ;;Total ram usage:        4 bytes
  5555 ;; Hardware stack levels used: 1
  5556 ;; Hardware stack levels required when called: 5
  5557 ;; This function calls:
  5558 ;;		_reverseDetect
  5559 ;;		_turnLeft45
  5560 ;; This function is called by:
  5561 ;;		_main
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           	psect	text39
  5566   0043D0                     __ptext39:
  5567                           	callstack 0
  5568   0043D0                     _GreenMove:
  5569                           	callstack 25
  5570   0043D0                     
  5571                           ;dc_motor.c: 222:     reverseDetect(&motorL, &motorR);
  5572   0043D0  0EF6               	movlw	low _motorL
  5573   0043D2  6E19               	movwf	reverseDetect@mL^0,c
  5574   0043D4  0E00               	movlw	high _motorL
  5575   0043D6  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  5576   0043D8  0EED               	movlw	low _motorR
  5577   0043DA  6E1B               	movwf	reverseDetect@mR^0,c
  5578   0043DC  0E00               	movlw	high _motorR
  5579   0043DE  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  5580   0043E0  EC01  F01F         	call	_reverseDetect	;wreg free
  5581                           
  5582                           ;dc_motor.c: 224:     turnLeft45(&motorL, &motorR);
  5583   0043E4  0EF6               	movlw	low _motorL
  5584   0043E6  6E19               	movwf	turnLeft45@mL^0,c
  5585   0043E8  0E00               	movlw	high _motorL
  5586   0043EA  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  5587   0043EC  0EED               	movlw	low _motorR
  5588   0043EE  6E1B               	movwf	turnLeft45@mR^0,c
  5589   0043F0  0E00               	movlw	high _motorR
  5590   0043F2  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  5591   0043F4  EC2E  F01F         	call	_turnLeft45	;wreg free
  5592                           
  5593                           ;dc_motor.c: 225:     turnLeft45(&motorL, &motorR);
  5594   0043F8  0EF6               	movlw	low _motorL
  5595   0043FA  6E19               	movwf	turnLeft45@mL^0,c
  5596   0043FC  0E00               	movlw	high _motorL
  5597   0043FE  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  5598   004400  0EED               	movlw	low _motorR
  5599   004402  6E1B               	movwf	turnLeft45@mR^0,c
  5600   004404  0E00               	movlw	high _motorR
  5601   004406  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  5602   004408  EC2E  F01F         	call	_turnLeft45	;wreg free
  5603   00440C  0012               	return		;funcret
  5604   00440E                     __end_of_GreenMove:
  5605                           	callstack 0
  5606                           
  5607 ;; *************** function _Colour_decider *****************
  5608 ;; Defined at:
  5609 ;;		line 125 in file "color.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  vals            2   74[COMRAM] PTR struct RGB
  5612 ;;		 -> vals(8), 
  5613 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  5614 ;;		 -> rel(12), 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  RGB_col        12    6[BANK0 ] float [3]
  5617 ;;  Hue             4   28[BANK0 ] float 
  5618 ;;  Cmin            4   22[BANK0 ] float 
  5619 ;;  Cmax            4   18[BANK0 ] float 
  5620 ;;  i               2   26[BANK0 ] int 
  5621 ;;  Cmax_i          2    4[BANK0 ] int 
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  2   74[COMRAM] int 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5631 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5632 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5633 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5634 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5635 ;;Total ram usage:       38 bytes
  5636 ;; Hardware stack levels used: 1
  5637 ;; Hardware stack levels required when called: 5
  5638 ;; This function calls:
  5639 ;;		___fladd
  5640 ;;		___fldiv
  5641 ;;		___fleq
  5642 ;;		___flge
  5643 ;;		___flmul
  5644 ;;		___flsub
  5645 ;;		___xxtofl
  5646 ;;		_reverseDetect
  5647 ;;		_turnLeft45
  5648 ;;		_turnRight45
  5649 ;; This function is called by:
  5650 ;;		_main
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           	psect	text40
  5655   000E50                     __ptext40:
  5656                           	callstack 0
  5657   000E50                     _Colour_decider:
  5658                           	callstack 25
  5659   000E50                     
  5660                           ;color.c: 126:     float Cmax = 0;
  5661   000E50  0E00               	movlw	0
  5662   000E52  0100               	movlb	0	; () banked
  5663   000E54  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  5664   000E56  0E00               	movlw	0
  5665   000E58  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  5666   000E5A  0E00               	movlw	0
  5667   000E5C  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  5668   000E5E  0E00               	movlw	0
  5669   000E60  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  5670                           
  5671                           ;color.c: 127:     float Cmin= 100000;
  5672   000E62  0E00               	movlw	0
  5673   000E64  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  5674   000E66  0E50               	movlw	80
  5675   000E68  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  5676   000E6A  0EC3               	movlw	195
  5677   000E6C  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  5678   000E6E  0E47               	movlw	71
  5679   000E70  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  5680                           
  5681                           ;color.c: 128:     int Cmax_i =4;
  5682   000E72  0E00               	movlw	0
  5683   000E74  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  5684   000E76  0E04               	movlw	4
  5685   000E78  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  5686   000E7A                     
  5687                           ; BSR set to: 0
  5688                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  5689   000E7A  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  5690   000E7E  0E0B               	movlw	11
  5691   000E80                     u3571:
  5692   000E80  6ADE               	clrf	postinc2,c
  5693   000E82  06E8               	decf	wreg,f,c
  5694   000E84  E2FD               	bc	u3571
  5695   000E86                     
  5696                           ; BSR set to: 0
  5697   000E86  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  5698   000E8A  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  5699   000E8E  CFDE F001          	movff	postinc2,___xxtofl@val
  5700   000E92  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5701   000E96  0E00               	movlw	0
  5702   000E98  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5703   000E9A  0EFF               	movlw	-1
  5704   000E9C  6E03               	movwf	(___xxtofl@val+2)^0,c
  5705   000E9E  6E04               	movwf	(___xxtofl@val+3)^0,c
  5706   000EA0  0E01               	movlw	1
  5707   000EA2  EC39  F017         	call	___xxtofl
  5708   000EA6  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  5709   000EAA  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  5710   000EAE  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  5711   000EB2  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  5712   000EB6  EE20 F002          	lfsr	2,2
  5713   000EBA  504B               	movf	Colour_decider@vals^0,w,c
  5714   000EBC  26D9               	addwf	fsr2l,f,c
  5715   000EBE  504C               	movf	(Colour_decider@vals+1)^0,w,c
  5716   000EC0  22DA               	addwfc	fsr2h,f,c
  5717   000EC2  CFDE F001          	movff	postinc2,___xxtofl@val
  5718   000EC6  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5719   000ECA  0E00               	movlw	0
  5720   000ECC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5721   000ECE  0EFF               	movlw	-1
  5722   000ED0  6E03               	movwf	(___xxtofl@val+2)^0,c
  5723   000ED2  6E04               	movwf	(___xxtofl@val+3)^0,c
  5724   000ED4  0E01               	movlw	1
  5725   000ED6  EC39  F017         	call	___xxtofl
  5726   000EDA  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  5727   000EDE  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  5728   000EE2  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  5729   000EE6  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  5730   000EEA  EE20 F004          	lfsr	2,4
  5731   000EEE  504B               	movf	Colour_decider@vals^0,w,c
  5732   000EF0  26D9               	addwf	fsr2l,f,c
  5733   000EF2  504C               	movf	(Colour_decider@vals+1)^0,w,c
  5734   000EF4  22DA               	addwfc	fsr2h,f,c
  5735   000EF6  CFDE F001          	movff	postinc2,___xxtofl@val
  5736   000EFA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5737   000EFE  0E00               	movlw	0
  5738   000F00  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5739   000F02  0EFF               	movlw	-1
  5740   000F04  6E03               	movwf	(___xxtofl@val+2)^0,c
  5741   000F06  6E04               	movwf	(___xxtofl@val+3)^0,c
  5742   000F08  0E01               	movlw	1
  5743   000F0A  EC39  F017         	call	___xxtofl
  5744   000F0E  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  5745   000F12  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  5746   000F16  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  5747   000F1A  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  5748   000F1E                     
  5749                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  5750   000F1E  0E00               	movlw	0
  5751   000F20  0100               	movlb	0	; () banked
  5752   000F22  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  5753   000F24  0E00               	movlw	0
  5754   000F26  6F7A               	movwf	Colour_decider@i& (0+255),b
  5755   000F28                     l3767:
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  5759   000F28  C072  F001         	movff	Colour_decider@Cmax,___flge@ff1
  5760   000F2C  C073  F002         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  5761   000F30  C074  F003         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  5762   000F34  C075  F004         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  5763   000F38  0E66               	movlw	low Colour_decider@RGB_col
  5764   000F3A  6E4F               	movwf	??_Colour_decider^0,c
  5765   000F3C  0E00               	movlw	high Colour_decider@RGB_col
  5766   000F3E  6E50               	movwf	(??_Colour_decider+1)^0,c
  5767   000F40  90D8               	bcf	status,0,c
  5768   000F42  357A               	rlcf	Colour_decider@i& (0+255),w,b
  5769   000F44  6ED9               	movwf	fsr2l,c
  5770   000F46  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  5771   000F48  6EDA               	movwf	fsr2h,c
  5772   000F4A  90D8               	bcf	status,0,c
  5773   000F4C  36D9               	rlcf	fsr2l,f,c
  5774   000F4E  36DA               	rlcf	fsr2h,f,c
  5775   000F50  504F               	movf	??_Colour_decider^0,w,c
  5776   000F52  26D9               	addwf	fsr2l,f,c
  5777   000F54  5050               	movf	(??_Colour_decider+1)^0,w,c
  5778   000F56  22DA               	addwfc	fsr2h,f,c
  5779   000F58  CFDE F005          	movff	postinc2,___flge@ff2
  5780   000F5C  CFDE F006          	movff	postinc2,___flge@ff2+1
  5781   000F60  CFDE F007          	movff	postinc2,___flge@ff2+2
  5782   000F64  CFDE F008          	movff	postinc2,___flge@ff2+3
  5783   000F68  ECE6  F01A         	call	___flge	;wreg free
  5784   000F6C  B0D8               	btfsc	status,0,c
  5785   000F6E  EFBB  F007         	goto	u3581
  5786   000F72  EFBD  F007         	goto	u3580
  5787   000F76                     u3581:
  5788   000F76  EFDA  F007         	goto	l3773
  5789   000F7A                     u3580:
  5790   000F7A                     
  5791                           ;color.c: 137:             Cmax=RGB_col[i];
  5792   000F7A  0E66               	movlw	low Colour_decider@RGB_col
  5793   000F7C  6E4F               	movwf	??_Colour_decider^0,c
  5794   000F7E  0E00               	movlw	high Colour_decider@RGB_col
  5795   000F80  6E50               	movwf	(??_Colour_decider+1)^0,c
  5796   000F82  90D8               	bcf	status,0,c
  5797   000F84  0100               	movlb	0	; () banked
  5798   000F86  357A               	rlcf	Colour_decider@i& (0+255),w,b
  5799   000F88  6ED9               	movwf	fsr2l,c
  5800   000F8A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  5801   000F8C  6EDA               	movwf	fsr2h,c
  5802   000F8E  90D8               	bcf	status,0,c
  5803   000F90  36D9               	rlcf	fsr2l,f,c
  5804   000F92  36DA               	rlcf	fsr2h,f,c
  5805   000F94  504F               	movf	??_Colour_decider^0,w,c
  5806   000F96  26D9               	addwf	fsr2l,f,c
  5807   000F98  5050               	movf	(??_Colour_decider+1)^0,w,c
  5808   000F9A  22DA               	addwfc	fsr2h,f,c
  5809   000F9C  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  5810   000FA0  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  5811   000FA4  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  5812   000FA8  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  5813   000FAC                     
  5814                           ; BSR set to: 0
  5815                           ;color.c: 138:             Cmax_i=i;
  5816   000FAC  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  5817   000FB0  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  5818   000FB4                     l3773:
  5819                           
  5820                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  5821   000FB4  0E66               	movlw	low Colour_decider@RGB_col
  5822   000FB6  6E4F               	movwf	??_Colour_decider^0,c
  5823   000FB8  0E00               	movlw	high Colour_decider@RGB_col
  5824   000FBA  6E50               	movwf	(??_Colour_decider+1)^0,c
  5825   000FBC  90D8               	bcf	status,0,c
  5826   000FBE  0100               	movlb	0	; () banked
  5827   000FC0  357A               	rlcf	Colour_decider@i& (0+255),w,b
  5828   000FC2  6ED9               	movwf	fsr2l,c
  5829   000FC4  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  5830   000FC6  6EDA               	movwf	fsr2h,c
  5831   000FC8  90D8               	bcf	status,0,c
  5832   000FCA  36D9               	rlcf	fsr2l,f,c
  5833   000FCC  36DA               	rlcf	fsr2h,f,c
  5834   000FCE  504F               	movf	??_Colour_decider^0,w,c
  5835   000FD0  26D9               	addwf	fsr2l,f,c
  5836   000FD2  5050               	movf	(??_Colour_decider+1)^0,w,c
  5837   000FD4  22DA               	addwfc	fsr2h,f,c
  5838   000FD6  CFDE F001          	movff	postinc2,___flge@ff1
  5839   000FDA  CFDE F002          	movff	postinc2,___flge@ff1+1
  5840   000FDE  CFDE F003          	movff	postinc2,___flge@ff1+2
  5841   000FE2  CFDE F004          	movff	postinc2,___flge@ff1+3
  5842   000FE6  C076  F005         	movff	Colour_decider@Cmin,___flge@ff2
  5843   000FEA  C077  F006         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  5844   000FEE  C078  F007         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  5845   000FF2  C079  F008         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  5846   000FF6  ECE6  F01A         	call	___flge	;wreg free
  5847   000FFA  B0D8               	btfsc	status,0,c
  5848   000FFC  EF02  F008         	goto	u3591
  5849   001000  EF04  F008         	goto	u3590
  5850   001004                     u3591:
  5851   001004  EF1D  F008         	goto	l3777
  5852   001008                     u3590:
  5853   001008  0E66               	movlw	low Colour_decider@RGB_col
  5854   00100A  6E4F               	movwf	??_Colour_decider^0,c
  5855   00100C  0E00               	movlw	high Colour_decider@RGB_col
  5856   00100E  6E50               	movwf	(??_Colour_decider+1)^0,c
  5857   001010  90D8               	bcf	status,0,c
  5858   001012  0100               	movlb	0	; () banked
  5859   001014  357A               	rlcf	Colour_decider@i& (0+255),w,b
  5860   001016  6ED9               	movwf	fsr2l,c
  5861   001018  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  5862   00101A  6EDA               	movwf	fsr2h,c
  5863   00101C  90D8               	bcf	status,0,c
  5864   00101E  36D9               	rlcf	fsr2l,f,c
  5865   001020  36DA               	rlcf	fsr2h,f,c
  5866   001022  504F               	movf	??_Colour_decider^0,w,c
  5867   001024  26D9               	addwf	fsr2l,f,c
  5868   001026  5050               	movf	(??_Colour_decider+1)^0,w,c
  5869   001028  22DA               	addwfc	fsr2h,f,c
  5870   00102A  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  5871   00102E  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  5872   001032  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  5873   001036  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  5874   00103A                     l3777:
  5875                           
  5876                           ;color.c: 141:     }
  5877   00103A  0100               	movlb	0	; () banked
  5878   00103C  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  5879   00103E  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  5880   001040                     
  5881                           ; BSR set to: 0
  5882   001040  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  5883   001042  EF2C  F008         	goto	u3601
  5884   001046  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  5885   001048  E109               	bnz	u3600
  5886   00104A  0E03               	movlw	3
  5887   00104C  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  5888   00104E  A0D8               	btfss	status,0,c
  5889   001050  EF2C  F008         	goto	u3601
  5890   001054  EF2E  F008         	goto	u3600
  5891   001058                     u3601:
  5892   001058  EF94  F007         	goto	l3767
  5893   00105C                     u3600:
  5894   00105C                     
  5895                           ; BSR set to: 0
  5896                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  5897   00105C  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  5898   001060  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  5899   001064  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  5900   001068  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  5901   00106C  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  5902   001070  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  5903   001074  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  5904   001078  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  5905   00107C  EC43  F021         	call	___flsub	;wreg free
  5906   001080  C011  F019         	movff	?___flsub,___fleq@ff1
  5907   001084  C012  F01A         	movff	?___flsub+1,___fleq@ff1+1
  5908   001088  C013  F01B         	movff	?___flsub+2,___fleq@ff1+2
  5909   00108C  C014  F01C         	movff	?___flsub+3,___fleq@ff1+3
  5910   001090  0E00               	movlw	0
  5911   001092  6E1D               	movwf	___fleq@ff2^0,c
  5912   001094  0E00               	movlw	0
  5913   001096  6E1E               	movwf	(___fleq@ff2+1)^0,c
  5914   001098  0E00               	movlw	0
  5915   00109A  6E1F               	movwf	(___fleq@ff2+2)^0,c
  5916   00109C  0E00               	movlw	0
  5917   00109E  6E20               	movwf	(___fleq@ff2+3)^0,c
  5918   0010A0  ECCD  F01B         	call	___fleq	;wreg free
  5919   0010A4  A0D8               	btfss	status,0,c
  5920   0010A6  EF57  F008         	goto	u3611
  5921   0010AA  EF59  F008         	goto	u3610
  5922   0010AE                     u3611:
  5923   0010AE  EF5F  F008         	goto	l3787
  5924   0010B2                     u3610:
  5925   0010B2                     l3783:
  5926   0010B2  0E00               	movlw	0
  5927   0010B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
  5928   0010B6  0E00               	movlw	0
  5929   0010B8  6E4B               	movwf	?_Colour_decider^0,c
  5930   0010BA  EFBA  F00C         	goto	l76
  5931   0010BE                     l3787:
  5932                           
  5933                           ;color.c: 146:     if (Cmax_i==0){
  5934   0010BE  0100               	movlb	0	; () banked
  5935   0010C0  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  5936   0010C2  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  5937   0010C4  A4D8               	btfss	status,2,c
  5938   0010C6  EF67  F008         	goto	u3621
  5939   0010CA  EF69  F008         	goto	u3620
  5940   0010CE                     u3621:
  5941   0010CE  EFDD  F008         	goto	l3795
  5942   0010D2                     u3620:
  5943   0010D2                     
  5944                           ; BSR set to: 0
  5945                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  5946   0010D2  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  5947   0010D6  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  5948   0010DA  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  5949   0010DE  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  5950   0010E2  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  5951   0010E6  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  5952   0010EA  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  5953   0010EE  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  5954   0010F2  EC43  F021         	call	___flsub	;wreg free
  5955   0010F6  C011  F01D         	movff	?___flsub,___fldiv@a
  5956   0010FA  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  5957   0010FE  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  5958   001102  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  5959   001106  C06E  F015         	movff	Colour_decider@RGB_col+8,___flsub@a
  5960   00110A  C06F  F016         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  5961   00110E  C070  F017         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  5962   001112  C071  F018         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  5963   001116  C06A  F011         	movff	Colour_decider@RGB_col+4,___flsub@b
  5964   00111A  C06B  F012         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  5965   00111E  C06C  F013         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  5966   001122  C06D  F014         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  5967   001126  EC43  F021         	call	___flsub	;wreg free
  5968   00112A  C011  F019         	movff	?___flsub,___fldiv@b
  5969   00112E  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  5970   001132  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  5971   001136  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  5972   00113A  EC30  F011         	call	___fldiv	;wreg free
  5973   00113E  C019  F032         	movff	?___fldiv,___flmul@b
  5974   001142  C01A  F033         	movff	?___fldiv+1,___flmul@b+1
  5975   001146  C01B  F034         	movff	?___fldiv+2,___flmul@b+2
  5976   00114A  C01C  F035         	movff	?___fldiv+3,___flmul@b+3
  5977   00114E  0E00               	movlw	0
  5978   001150  6E36               	movwf	___flmul@a^0,c
  5979   001152  0E00               	movlw	0
  5980   001154  6E37               	movwf	(___flmul@a+1)^0,c
  5981   001156  0E70               	movlw	112
  5982   001158  6E38               	movwf	(___flmul@a+2)^0,c
  5983   00115A  0E42               	movlw	66
  5984   00115C  6E39               	movwf	(___flmul@a+3)^0,c
  5985   00115E  EC1B  F00F         	call	___flmul	;wreg free
  5986   001162  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  5987   001166  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  5988   00116A  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  5989   00116E  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  5990   001172                     
  5991                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  5992   001172  0100               	movlb	0	; () banked
  5993   001174  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  5994   001176  EFC1  F008         	goto	u3630
  5995   00117A  EFBF  F008         	goto	u3631
  5996   00117E                     u3631:
  5997   00117E  EFBC  F009         	goto	l3805
  5998   001182                     u3630:
  5999   001182                     
  6000                           ; BSR set to: 0
  6001   001182  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  6002   001186  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  6003   00118A  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  6004   00118E  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  6005   001192  0E00               	movlw	0
  6006   001194  6E05               	movwf	___fladd@a^0,c
  6007   001196  0E00               	movlw	0
  6008   001198  6E06               	movwf	(___fladd@a+1)^0,c
  6009   00119A  0EB4               	movlw	180
  6010   00119C  6E07               	movwf	(___fladd@a+2)^0,c
  6011   00119E  0E43               	movlw	67
  6012   0011A0  6E08               	movwf	(___fladd@a+3)^0,c
  6013   0011A2  ECBB  F00C         	call	___fladd	;wreg free
  6014   0011A6  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  6015   0011AA  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  6016   0011AE  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  6017   0011B2  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  6018   0011B6  EFBC  F009         	goto	l3805
  6019   0011BA                     l3795:
  6020                           
  6021                           ; BSR set to: 0
  6022   0011BA  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  6023   0011BC  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  6024   0011BE  A4D8               	btfss	status,2,c
  6025   0011C0  EFE4  F008         	goto	u3641
  6026   0011C4  EFE6  F008         	goto	u3640
  6027   0011C8                     u3641:
  6028   0011C8  EF52  F009         	goto	l3801
  6029   0011CC                     u3640:
  6030   0011CC                     
  6031                           ; BSR set to: 0
  6032                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  6033   0011CC  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  6034   0011D0  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  6035   0011D4  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  6036   0011D8  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  6037   0011DC  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  6038   0011E0  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  6039   0011E4  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  6040   0011E8  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  6041   0011EC  EC43  F021         	call	___flsub	;wreg free
  6042   0011F0  C011  F01D         	movff	?___flsub,___fldiv@a
  6043   0011F4  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  6044   0011F8  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  6045   0011FC  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  6046   001200  C066  F015         	movff	Colour_decider@RGB_col,___flsub@a
  6047   001204  C067  F016         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  6048   001208  C068  F017         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  6049   00120C  C069  F018         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  6050   001210  C06E  F011         	movff	Colour_decider@RGB_col+8,___flsub@b
  6051   001214  C06F  F012         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  6052   001218  C070  F013         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  6053   00121C  C071  F014         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  6054   001220  EC43  F021         	call	___flsub	;wreg free
  6055   001224  C011  F019         	movff	?___flsub,___fldiv@b
  6056   001228  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  6057   00122C  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  6058   001230  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  6059   001234  EC30  F011         	call	___fldiv	;wreg free
  6060   001238  C019  F060         	movff	?___fldiv,_Colour_decider$2542
  6061   00123C  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2542+1
  6062   001240  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2542+2
  6063   001244  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2542+3
  6064   001248                     
  6065                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  6066   001248  0E00               	movlw	0
  6067   00124A  6E05               	movwf	___fladd@a^0,c
  6068   00124C  0E00               	movlw	0
  6069   00124E  6E06               	movwf	(___fladd@a+1)^0,c
  6070   001250  0E00               	movlw	0
  6071   001252  6E07               	movwf	(___fladd@a+2)^0,c
  6072   001254  0E40               	movlw	64
  6073   001256  6E08               	movwf	(___fladd@a+3)^0,c
  6074   001258  C060  F001         	movff	_Colour_decider$2542,___fladd@b
  6075   00125C  C061  F002         	movff	_Colour_decider$2542+1,___fladd@b+1
  6076   001260  C062  F003         	movff	_Colour_decider$2542+2,___fladd@b+2
  6077   001264  C063  F004         	movff	_Colour_decider$2542+3,___fladd@b+3
  6078   001268  ECBB  F00C         	call	___fladd	;wreg free
  6079   00126C  C001  F032         	movff	?___fladd,___flmul@b
  6080   001270  C002  F033         	movff	?___fladd+1,___flmul@b+1
  6081   001274  C003  F034         	movff	?___fladd+2,___flmul@b+2
  6082   001278  C004  F035         	movff	?___fladd+3,___flmul@b+3
  6083   00127C  0E00               	movlw	0
  6084   00127E  6E36               	movwf	___flmul@a^0,c
  6085   001280  0E00               	movlw	0
  6086   001282  6E37               	movwf	(___flmul@a+1)^0,c
  6087   001284  0E70               	movlw	112
  6088   001286  6E38               	movwf	(___flmul@a+2)^0,c
  6089   001288  0E42               	movlw	66
  6090   00128A  6E39               	movwf	(___flmul@a+3)^0,c
  6091   00128C  EC1B  F00F         	call	___flmul	;wreg free
  6092   001290  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  6093   001294  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  6094   001298  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  6095   00129C  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  6096                           
  6097                           ;color.c: 155:     }
  6098   0012A0  EFBC  F009         	goto	l3805
  6099   0012A4                     l3801:
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  6103   0012A4  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  6104   0012A8  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  6105   0012AC  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  6106   0012B0  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  6107   0012B4  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  6108   0012B8  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  6109   0012BC  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  6110   0012C0  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  6111   0012C4  EC43  F021         	call	___flsub	;wreg free
  6112   0012C8  C011  F01D         	movff	?___flsub,___fldiv@a
  6113   0012CC  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  6114   0012D0  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  6115   0012D4  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  6116   0012D8  C06A  F015         	movff	Colour_decider@RGB_col+4,___flsub@a
  6117   0012DC  C06B  F016         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  6118   0012E0  C06C  F017         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  6119   0012E4  C06D  F018         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  6120   0012E8  C066  F011         	movff	Colour_decider@RGB_col,___flsub@b
  6121   0012EC  C067  F012         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  6122   0012F0  C068  F013         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  6123   0012F4  C069  F014         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  6124   0012F8  EC43  F021         	call	___flsub	;wreg free
  6125   0012FC  C011  F019         	movff	?___flsub,___fldiv@b
  6126   001300  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  6127   001304  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  6128   001308  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  6129   00130C  EC30  F011         	call	___fldiv	;wreg free
  6130   001310  C019  F060         	movff	?___fldiv,_Colour_decider$2542
  6131   001314  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2542+1
  6132   001318  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2542+2
  6133   00131C  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2542+3
  6134   001320                     
  6135                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  6136   001320  0E00               	movlw	0
  6137   001322  6E05               	movwf	___fladd@a^0,c
  6138   001324  0E00               	movlw	0
  6139   001326  6E06               	movwf	(___fladd@a+1)^0,c
  6140   001328  0E80               	movlw	128
  6141   00132A  6E07               	movwf	(___fladd@a+2)^0,c
  6142   00132C  0E40               	movlw	64
  6143   00132E  6E08               	movwf	(___fladd@a+3)^0,c
  6144   001330  C060  F001         	movff	_Colour_decider$2542,___fladd@b
  6145   001334  C061  F002         	movff	_Colour_decider$2542+1,___fladd@b+1
  6146   001338  C062  F003         	movff	_Colour_decider$2542+2,___fladd@b+2
  6147   00133C  C063  F004         	movff	_Colour_decider$2542+3,___fladd@b+3
  6148   001340  ECBB  F00C         	call	___fladd	;wreg free
  6149   001344  C001  F032         	movff	?___fladd,___flmul@b
  6150   001348  C002  F033         	movff	?___fladd+1,___flmul@b+1
  6151   00134C  C003  F034         	movff	?___fladd+2,___flmul@b+2
  6152   001350  C004  F035         	movff	?___fladd+3,___flmul@b+3
  6153   001354  0E00               	movlw	0
  6154   001356  6E36               	movwf	___flmul@a^0,c
  6155   001358  0E00               	movlw	0
  6156   00135A  6E37               	movwf	(___flmul@a+1)^0,c
  6157   00135C  0E70               	movlw	112
  6158   00135E  6E38               	movwf	(___flmul@a+2)^0,c
  6159   001360  0E42               	movlw	66
  6160   001362  6E39               	movwf	(___flmul@a+3)^0,c
  6161   001364  EC1B  F00F         	call	___flmul	;wreg free
  6162   001368  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  6163   00136C  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  6164   001370  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  6165   001374  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  6166   001378                     l3805:
  6167                           
  6168                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  6169   001378  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  6170   00137C  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  6171   001380  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  6172   001384  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  6173   001388  0E00               	movlw	0
  6174   00138A  6E05               	movwf	___flge@ff2^0,c
  6175   00138C  0E00               	movlw	0
  6176   00138E  6E06               	movwf	(___flge@ff2+1)^0,c
  6177   001390  0EA5               	movlw	165
  6178   001392  6E07               	movwf	(___flge@ff2+2)^0,c
  6179   001394  0E43               	movlw	67
  6180   001396  6E08               	movwf	(___flge@ff2+3)^0,c
  6181   001398  ECE6  F01A         	call	___flge	;wreg free
  6182   00139C  A0D8               	btfss	status,0,c
  6183   00139E  EFD3  F009         	goto	u3651
  6184   0013A2  EFD5  F009         	goto	u3650
  6185   0013A6                     u3651:
  6186   0013A6  EFF4  F009         	goto	l3815
  6187   0013AA                     u3650:
  6188   0013AA  0E00               	movlw	0
  6189   0013AC  6E01               	movwf	___flge@ff1^0,c
  6190   0013AE  0E00               	movlw	0
  6191   0013B0  6E02               	movwf	(___flge@ff1+1)^0,c
  6192   0013B2  0EB4               	movlw	180
  6193   0013B4  6E03               	movwf	(___flge@ff1+2)^0,c
  6194   0013B6  0E43               	movlw	67
  6195   0013B8  6E04               	movwf	(___flge@ff1+3)^0,c
  6196   0013BA  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  6197   0013BE  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  6198   0013C2  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  6199   0013C6  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  6200   0013CA  ECE6  F01A         	call	___flge	;wreg free
  6201   0013CE  A0D8               	btfss	status,0,c
  6202   0013D0  EFEC  F009         	goto	u3661
  6203   0013D4  EFEE  F009         	goto	u3660
  6204   0013D8                     u3661:
  6205   0013D8  EFF4  F009         	goto	l3815
  6206   0013DC                     u3660:
  6207   0013DC                     
  6208                           ;color.c: 164:         return 1;
  6209   0013DC  0E00               	movlw	0
  6210   0013DE  6E4C               	movwf	(?_Colour_decider+1)^0,c
  6211   0013E0  0E01               	movlw	1
  6212   0013E2  6E4B               	movwf	?_Colour_decider^0,c
  6213   0013E4  EFBA  F00C         	goto	l76
  6214   0013E8                     l3815:
  6215   0013E8  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  6216   0013EC  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  6217   0013F0  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  6218   0013F4  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  6219   0013F8  0E00               	movlw	0
  6220   0013FA  6E05               	movwf	___flge@ff2^0,c
  6221   0013FC  0E00               	movlw	0
  6222   0013FE  6E06               	movwf	(___flge@ff2+1)^0,c
  6223   001400  0EA0               	movlw	160
  6224   001402  6E07               	movwf	(___flge@ff2+2)^0,c
  6225   001404  0E40               	movlw	64
  6226   001406  6E08               	movwf	(___flge@ff2+3)^0,c
  6227   001408  ECE6  F01A         	call	___flge	;wreg free
  6228   00140C  A0D8               	btfss	status,0,c
  6229   00140E  EF0B  F00A         	goto	u3671
  6230   001412  EF0D  F00A         	goto	u3670
  6231   001416                     u3671:
  6232   001416  EF2C  F00A         	goto	l3825
  6233   00141A                     u3670:
  6234   00141A  0E00               	movlw	0
  6235   00141C  6E01               	movwf	___flge@ff1^0,c
  6236   00141E  0E00               	movlw	0
  6237   001420  6E02               	movwf	(___flge@ff1+1)^0,c
  6238   001422  0E40               	movlw	64
  6239   001424  6E03               	movwf	(___flge@ff1+2)^0,c
  6240   001426  0E41               	movlw	65
  6241   001428  6E04               	movwf	(___flge@ff1+3)^0,c
  6242   00142A  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  6243   00142E  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  6244   001432  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  6245   001436  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  6246   00143A  ECE6  F01A         	call	___flge	;wreg free
  6247   00143E  A0D8               	btfss	status,0,c
  6248   001440  EF24  F00A         	goto	u3681
  6249   001444  EF26  F00A         	goto	u3680
  6250   001448                     u3681:
  6251   001448  EF2C  F00A         	goto	l3825
  6252   00144C                     u3680:
  6253   00144C                     
  6254                           ;color.c: 168:         return 2;
  6255   00144C  0E00               	movlw	0
  6256   00144E  6E4C               	movwf	(?_Colour_decider+1)^0,c
  6257   001450  0E02               	movlw	2
  6258   001452  6E4B               	movwf	?_Colour_decider^0,c
  6259   001454  EFBA  F00C         	goto	l76
  6260   001458                     l3825:
  6261   001458  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  6262   00145C  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  6263   001460  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  6264   001464  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  6265   001468  0E00               	movlw	0
  6266   00146A  6E05               	movwf	___flge@ff2^0,c
  6267   00146C  0E00               	movlw	0
  6268   00146E  6E06               	movwf	(___flge@ff2+1)^0,c
  6269   001470  0EA0               	movlw	160
  6270   001472  6E07               	movwf	(___flge@ff2+2)^0,c
  6271   001474  0E41               	movlw	65
  6272   001476  6E08               	movwf	(___flge@ff2+3)^0,c
  6273   001478  ECE6  F01A         	call	___flge	;wreg free
  6274   00147C  A0D8               	btfss	status,0,c
  6275   00147E  EF43  F00A         	goto	u3691
  6276   001482  EF45  F00A         	goto	u3690
  6277   001486                     u3691:
  6278   001486  EFB9  F00A         	goto	l3849
  6279   00148A                     u3690:
  6280   00148A  0E00               	movlw	0
  6281   00148C  6E01               	movwf	___flge@ff1^0,c
  6282   00148E  0E00               	movlw	0
  6283   001490  6E02               	movwf	(___flge@ff1+1)^0,c
  6284   001492  0EE8               	movlw	232
  6285   001494  6E03               	movwf	(___flge@ff1+2)^0,c
  6286   001496  0E41               	movlw	65
  6287   001498  6E04               	movwf	(___flge@ff1+3)^0,c
  6288   00149A  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  6289   00149E  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  6290   0014A2  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  6291   0014A6  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  6292   0014AA  ECE6  F01A         	call	___flge	;wreg free
  6293   0014AE  A0D8               	btfss	status,0,c
  6294   0014B0  EF5C  F00A         	goto	u3701
  6295   0014B4  EF5E  F00A         	goto	u3700
  6296   0014B8                     u3701:
  6297   0014B8  EFB9  F00A         	goto	l3849
  6298   0014BC                     u3700:
  6299   0014BC                     
  6300                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  6301   0014BC  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  6302   0014C0  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  6303   0014C4  CFDE F001          	movff	postinc2,___flge@ff1
  6304   0014C8  CFDE F002          	movff	postinc2,___flge@ff1+1
  6305   0014CC  CFDE F003          	movff	postinc2,___flge@ff1+2
  6306   0014D0  CFDE F004          	movff	postinc2,___flge@ff1+3
  6307   0014D4  0ECD               	movlw	205
  6308   0014D6  6E05               	movwf	___flge@ff2^0,c
  6309   0014D8  0ECC               	movlw	204
  6310   0014DA  6E06               	movwf	(___flge@ff2+1)^0,c
  6311   0014DC  0E4C               	movlw	76
  6312   0014DE  6E07               	movwf	(___flge@ff2+2)^0,c
  6313   0014E0  0E3E               	movlw	62
  6314   0014E2  6E08               	movwf	(___flge@ff2+3)^0,c
  6315   0014E4  ECE6  F01A         	call	___flge	;wreg free
  6316   0014E8  A0D8               	btfss	status,0,c
  6317   0014EA  EF79  F00A         	goto	u3711
  6318   0014EE  EF7B  F00A         	goto	u3710
  6319   0014F2                     u3711:
  6320   0014F2  EF9A  F00A         	goto	l3837
  6321   0014F6                     u3710:
  6322   0014F6  0E1F               	movlw	31
  6323   0014F8  6E01               	movwf	___flge@ff1^0,c
  6324   0014FA  0E85               	movlw	133
  6325   0014FC  6E02               	movwf	(___flge@ff1+1)^0,c
  6326   0014FE  0E6B               	movlw	107
  6327   001500  6E03               	movwf	(___flge@ff1+2)^0,c
  6328   001502  0E3E               	movlw	62
  6329   001504  6E04               	movwf	(___flge@ff1+3)^0,c
  6330   001506  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  6331   00150A  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  6332   00150E  CFDE F005          	movff	postinc2,___flge@ff2
  6333   001512  CFDE F006          	movff	postinc2,___flge@ff2+1
  6334   001516  CFDE F007          	movff	postinc2,___flge@ff2+2
  6335   00151A  CFDE F008          	movff	postinc2,___flge@ff2+3
  6336   00151E  ECE6  F01A         	call	___flge	;wreg free
  6337   001522  A0D8               	btfss	status,0,c
  6338   001524  EF96  F00A         	goto	u3721
  6339   001528  EF98  F00A         	goto	u3720
  6340   00152C                     u3721:
  6341   00152C  EF9A  F00A         	goto	l3837
  6342   001530                     u3720:
  6343   001530  EF59  F008         	goto	l3783
  6344   001534                     l3837:
  6345                           
  6346                           ;color.c: 177:         if (vals->R>=2000){
  6347   001534  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  6348   001538  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  6349   00153C  0E01               	movlw	1
  6350   00153E  BEDB               	btfsc	plusw2,7,c
  6351   001540  EFAB  F00A         	goto	u3731
  6352   001544  0ED0               	movlw	208
  6353   001546  5CDE               	subwf	postinc2,w,c
  6354   001548  0E07               	movlw	7
  6355   00154A  58DE               	subwfb	postinc2,w,c
  6356   00154C  A0D8               	btfss	status,0,c
  6357   00154E  EFAB  F00A         	goto	u3731
  6358   001552  EFAD  F00A         	goto	u3730
  6359   001556                     u3731:
  6360   001556  EFB3  F00A         	goto	l3845
  6361   00155A                     u3730:
  6362   00155A                     
  6363                           ;color.c: 178:             return 3;
  6364   00155A  0E00               	movlw	0
  6365   00155C  6E4C               	movwf	(?_Colour_decider+1)^0,c
  6366   00155E  0E03               	movlw	3
  6367   001560  6E4B               	movwf	?_Colour_decider^0,c
  6368   001562  EFBA  F00C         	goto	l76
  6369   001566                     l3845:
  6370                           
  6371                           ;color.c: 181:             return 4;
  6372   001566  0E00               	movlw	0
  6373   001568  6E4C               	movwf	(?_Colour_decider+1)^0,c
  6374   00156A  0E04               	movlw	4
  6375   00156C  6E4B               	movwf	?_Colour_decider^0,c
  6376   00156E  EFBA  F00C         	goto	l76
  6377   001572                     l3849:
  6378   001572  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  6379   001576  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  6380   00157A  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  6381   00157E  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  6382   001582  0E00               	movlw	0
  6383   001584  6E05               	movwf	___flge@ff2^0,c
  6384   001586  0E00               	movlw	0
  6385   001588  6E06               	movwf	(___flge@ff2+1)^0,c
  6386   00158A  0E70               	movlw	112
  6387   00158C  6E07               	movwf	(___flge@ff2+2)^0,c
  6388   00158E  0E42               	movlw	66
  6389   001590  6E08               	movwf	(___flge@ff2+3)^0,c
  6390   001592  ECE6  F01A         	call	___flge	;wreg free
  6391   001596  A0D8               	btfss	status,0,c
  6392   001598  EFD0  F00A         	goto	u3741
  6393   00159C  EFD2  F00A         	goto	u3740
  6394   0015A0                     u3741:
  6395   0015A0  EF30  F00B         	goto	l3867
  6396   0015A4                     u3740:
  6397   0015A4  0E00               	movlw	0
  6398   0015A6  6E01               	movwf	___flge@ff1^0,c
  6399   0015A8  0E00               	movlw	0
  6400   0015AA  6E02               	movwf	(___flge@ff1+1)^0,c
  6401   0015AC  0E9E               	movlw	158
  6402   0015AE  6E03               	movwf	(___flge@ff1+2)^0,c
  6403   0015B0  0E42               	movlw	66
  6404   0015B2  6E04               	movwf	(___flge@ff1+3)^0,c
  6405   0015B4  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  6406   0015B8  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  6407   0015BC  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  6408   0015C0  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  6409   0015C4  ECE6  F01A         	call	___flge	;wreg free
  6410   0015C8  A0D8               	btfss	status,0,c
  6411   0015CA  EFE9  F00A         	goto	u3751
  6412   0015CE  EFEB  F00A         	goto	u3750
  6413   0015D2                     u3751:
  6414   0015D2  EF30  F00B         	goto	l3867
  6415   0015D6                     u3750:
  6416   0015D6                     
  6417                           ;color.c: 187:         if(0.15<=rel->B){
  6418   0015D6  EE20 F008          	lfsr	2,8
  6419   0015DA  504D               	movf	Colour_decider@rel^0,w,c
  6420   0015DC  26D9               	addwf	fsr2l,f,c
  6421   0015DE  504E               	movf	(Colour_decider@rel+1)^0,w,c
  6422   0015E0  22DA               	addwfc	fsr2h,f,c
  6423   0015E2  CFDE F001          	movff	postinc2,___flge@ff1
  6424   0015E6  CFDE F002          	movff	postinc2,___flge@ff1+1
  6425   0015EA  CFDE F003          	movff	postinc2,___flge@ff1+2
  6426   0015EE  CFDE F004          	movff	postinc2,___flge@ff1+3
  6427   0015F2  0E9A               	movlw	154
  6428   0015F4  6E05               	movwf	___flge@ff2^0,c
  6429   0015F6  0E99               	movlw	153
  6430   0015F8  6E06               	movwf	(___flge@ff2+1)^0,c
  6431   0015FA  0E19               	movlw	25
  6432   0015FC  6E07               	movwf	(___flge@ff2+2)^0,c
  6433   0015FE  0E3E               	movlw	62
  6434   001600  6E08               	movwf	(___flge@ff2+3)^0,c
  6435   001602  ECE6  F01A         	call	___flge	;wreg free
  6436   001606  A0D8               	btfss	status,0,c
  6437   001608  EF08  F00B         	goto	u3761
  6438   00160C  EF0A  F00B         	goto	u3760
  6439   001610                     u3761:
  6440   001610  EF0C  F00B         	goto	l3861
  6441   001614                     u3760:
  6442   001614  EFB3  F00A         	goto	l3845
  6443   001618                     l3861:
  6444                           
  6445                           ;color.c: 191:             reverseDetect(&motorL, &motorR);
  6446   001618  0EF6               	movlw	low _motorL
  6447   00161A  6E19               	movwf	reverseDetect@mL^0,c
  6448   00161C  0E00               	movlw	high _motorL
  6449   00161E  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  6450   001620  0EED               	movlw	low _motorR
  6451   001622  6E1B               	movwf	reverseDetect@mR^0,c
  6452   001624  0E00               	movlw	high _motorR
  6453   001626  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  6454   001628  EC01  F01F         	call	_reverseDetect	;wreg free
  6455                           
  6456                           ;color.c: 192:             turnLeft45(&motorL, &motorR);
  6457   00162C  0EF6               	movlw	low _motorL
  6458   00162E  6E19               	movwf	turnLeft45@mL^0,c
  6459   001630  0E00               	movlw	high _motorL
  6460   001632  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  6461   001634  0EED               	movlw	low _motorR
  6462   001636  6E1B               	movwf	turnLeft45@mR^0,c
  6463   001638  0E00               	movlw	high _motorR
  6464   00163A  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  6465   00163C  EC2E  F01F         	call	_turnLeft45	;wreg free
  6466                           
  6467                           ;color.c: 193:             turnLeft45(&motorL, &motorR);
  6468   001640  0EF6               	movlw	low _motorL
  6469   001642  6E19               	movwf	turnLeft45@mL^0,c
  6470   001644  0E00               	movlw	high _motorL
  6471   001646  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  6472   001648  0EED               	movlw	low _motorR
  6473   00164A  6E1B               	movwf	turnLeft45@mR^0,c
  6474   00164C  0E00               	movlw	high _motorR
  6475   00164E  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  6476   001650  EC2E  F01F         	call	_turnLeft45	;wreg free
  6477   001654                     
  6478                           ;color.c: 194:             return 5;
  6479   001654  0E00               	movlw	0
  6480   001656  6E4C               	movwf	(?_Colour_decider+1)^0,c
  6481   001658  0E05               	movlw	5
  6482   00165A  6E4B               	movwf	?_Colour_decider^0,c
  6483   00165C  EFBA  F00C         	goto	l76
  6484   001660                     l3867:
  6485   001660  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  6486   001664  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  6487   001668  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  6488   00166C  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  6489   001670  0E00               	movlw	0
  6490   001672  6E05               	movwf	___flge@ff2^0,c
  6491   001674  0E00               	movlw	0
  6492   001676  6E06               	movwf	(___flge@ff2+1)^0,c
  6493   001678  0EA0               	movlw	160
  6494   00167A  6E07               	movwf	(___flge@ff2+2)^0,c
  6495   00167C  0E42               	movlw	66
  6496   00167E  6E08               	movwf	(___flge@ff2+3)^0,c
  6497   001680  ECE6  F01A         	call	___flge	;wreg free
  6498   001684  A0D8               	btfss	status,0,c
  6499   001686  EF47  F00B         	goto	u3771
  6500   00168A  EF49  F00B         	goto	u3770
  6501   00168E                     u3771:
  6502   00168E  EFBB  F00B         	goto	l3885
  6503   001692                     u3770:
  6504   001692  0E00               	movlw	0
  6505   001694  6E01               	movwf	___flge@ff1^0,c
  6506   001696  0E00               	movlw	0
  6507   001698  6E02               	movwf	(___flge@ff1+1)^0,c
  6508   00169A  0EE6               	movlw	230
  6509   00169C  6E03               	movwf	(___flge@ff1+2)^0,c
  6510   00169E  0E42               	movlw	66
  6511   0016A0  6E04               	movwf	(___flge@ff1+3)^0,c
  6512   0016A2  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  6513   0016A6  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  6514   0016AA  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  6515   0016AE  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  6516   0016B2  ECE6  F01A         	call	___flge	;wreg free
  6517   0016B6  A0D8               	btfss	status,0,c
  6518   0016B8  EF60  F00B         	goto	u3781
  6519   0016BC  EF62  F00B         	goto	u3780
  6520   0016C0                     u3781:
  6521   0016C0  EFBB  F00B         	goto	l3885
  6522   0016C4                     u3780:
  6523   0016C4                     
  6524                           ;color.c: 201:         if(0.15<=rel->B){
  6525   0016C4  EE20 F008          	lfsr	2,8
  6526   0016C8  504D               	movf	Colour_decider@rel^0,w,c
  6527   0016CA  26D9               	addwf	fsr2l,f,c
  6528   0016CC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  6529   0016CE  22DA               	addwfc	fsr2h,f,c
  6530   0016D0  CFDE F001          	movff	postinc2,___flge@ff1
  6531   0016D4  CFDE F002          	movff	postinc2,___flge@ff1+1
  6532   0016D8  CFDE F003          	movff	postinc2,___flge@ff1+2
  6533   0016DC  CFDE F004          	movff	postinc2,___flge@ff1+3
  6534   0016E0  0E9A               	movlw	154
  6535   0016E2  6E05               	movwf	___flge@ff2^0,c
  6536   0016E4  0E99               	movlw	153
  6537   0016E6  6E06               	movwf	(___flge@ff2+1)^0,c
  6538   0016E8  0E19               	movlw	25
  6539   0016EA  6E07               	movwf	(___flge@ff2+2)^0,c
  6540   0016EC  0E3E               	movlw	62
  6541   0016EE  6E08               	movwf	(___flge@ff2+3)^0,c
  6542   0016F0  ECE6  F01A         	call	___flge	;wreg free
  6543   0016F4  A0D8               	btfss	status,0,c
  6544   0016F6  EF7F  F00B         	goto	u3791
  6545   0016FA  EF81  F00B         	goto	u3790
  6546   0016FE                     u3791:
  6547   0016FE  EFB5  F00B         	goto	l3881
  6548   001702                     u3790:
  6549   001702                     l3873:
  6550                           
  6551                           ;color.c: 202:             reverseDetect(&motorL, &motorR);
  6552   001702  0EF6               	movlw	low _motorL
  6553   001704  6E19               	movwf	reverseDetect@mL^0,c
  6554   001706  0E00               	movlw	high _motorL
  6555   001708  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  6556   00170A  0EED               	movlw	low _motorR
  6557   00170C  6E1B               	movwf	reverseDetect@mR^0,c
  6558   00170E  0E00               	movlw	high _motorR
  6559   001710  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  6560   001712  EC01  F01F         	call	_reverseDetect	;wreg free
  6561                           
  6562                           ;color.c: 203:             turnRight45(&motorL, &motorR);
  6563   001716  0EF6               	movlw	low _motorL
  6564   001718  6E19               	movwf	turnRight45@mL^0,c
  6565   00171A  0E00               	movlw	high _motorL
  6566   00171C  6E1A               	movwf	(turnRight45@mL+1)^0,c
  6567   00171E  0EED               	movlw	low _motorR
  6568   001720  6E1B               	movwf	turnRight45@mR^0,c
  6569   001722  0E00               	movlw	high _motorR
  6570   001724  6E1C               	movwf	(turnRight45@mR+1)^0,c
  6571   001726  EC5A  F01F         	call	_turnRight45	;wreg free
  6572                           
  6573                           ;color.c: 204:             turnRight45(&motorL, &motorR);
  6574   00172A  0EF6               	movlw	low _motorL
  6575   00172C  6E19               	movwf	turnRight45@mL^0,c
  6576   00172E  0E00               	movlw	high _motorL
  6577   001730  6E1A               	movwf	(turnRight45@mL+1)^0,c
  6578   001732  0EED               	movlw	low _motorR
  6579   001734  6E1B               	movwf	turnRight45@mR^0,c
  6580   001736  0E00               	movlw	high _motorR
  6581   001738  6E1C               	movwf	(turnRight45@mR+1)^0,c
  6582   00173A  EC5A  F01F         	call	_turnRight45	;wreg free
  6583                           
  6584                           ;color.c: 205:             turnRight45(&motorL, &motorR);
  6585   00173E  0EF6               	movlw	low _motorL
  6586   001740  6E19               	movwf	turnRight45@mL^0,c
  6587   001742  0E00               	movlw	high _motorL
  6588   001744  6E1A               	movwf	(turnRight45@mL+1)^0,c
  6589   001746  0EED               	movlw	low _motorR
  6590   001748  6E1B               	movwf	turnRight45@mR^0,c
  6591   00174A  0E00               	movlw	high _motorR
  6592   00174C  6E1C               	movwf	(turnRight45@mR+1)^0,c
  6593   00174E  EC5A  F01F         	call	_turnRight45	;wreg free
  6594                           
  6595                           ;color.c: 206:             turnRight45(&motorL, &motorR);
  6596   001752  0EF6               	movlw	low _motorL
  6597   001754  6E19               	movwf	turnRight45@mL^0,c
  6598   001756  0E00               	movlw	high _motorL
  6599   001758  6E1A               	movwf	(turnRight45@mL+1)^0,c
  6600   00175A  0EED               	movlw	low _motorR
  6601   00175C  6E1B               	movwf	turnRight45@mR^0,c
  6602   00175E  0E00               	movlw	high _motorR
  6603   001760  6E1C               	movwf	(turnRight45@mR+1)^0,c
  6604   001762  EC5A  F01F         	call	_turnRight45	;wreg free
  6605   001766  EFB3  F00A         	goto	l3845
  6606   00176A                     l3881:
  6607                           
  6608                           ;color.c: 210:              return 6;
  6609   00176A  0E00               	movlw	0
  6610   00176C  6E4C               	movwf	(?_Colour_decider+1)^0,c
  6611   00176E  0E06               	movlw	6
  6612   001770  6E4B               	movwf	?_Colour_decider^0,c
  6613   001772  EFBA  F00C         	goto	l76
  6614   001776                     l3885:
  6615   001776  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  6616   00177A  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  6617   00177E  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  6618   001782  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  6619   001786  0E00               	movlw	0
  6620   001788  6E05               	movwf	___flge@ff2^0,c
  6621   00178A  0E00               	movlw	0
  6622   00178C  6E06               	movwf	(___flge@ff2+1)^0,c
  6623   00178E  0EF0               	movlw	240
  6624   001790  6E07               	movwf	(___flge@ff2+2)^0,c
  6625   001792  0E41               	movlw	65
  6626   001794  6E08               	movwf	(___flge@ff2+3)^0,c
  6627   001796  ECE6  F01A         	call	___flge	;wreg free
  6628   00179A  A0D8               	btfss	status,0,c
  6629   00179C  EFD2  F00B         	goto	u3801
  6630   0017A0  EFD4  F00B         	goto	u3800
  6631   0017A4                     u3801:
  6632   0017A4  EFED  F00B         	goto	l3889
  6633   0017A8                     u3800:
  6634   0017A8  0E00               	movlw	0
  6635   0017AA  6E01               	movwf	___flge@ff1^0,c
  6636   0017AC  0E00               	movlw	0
  6637   0017AE  6E02               	movwf	(___flge@ff1+1)^0,c
  6638   0017B0  0E68               	movlw	104
  6639   0017B2  6E03               	movwf	(___flge@ff1+2)^0,c
  6640   0017B4  0E42               	movlw	66
  6641   0017B6  6E04               	movwf	(___flge@ff1+3)^0,c
  6642   0017B8  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  6643   0017BC  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  6644   0017C0  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  6645   0017C4  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  6646   0017C8  ECE6  F01A         	call	___flge	;wreg free
  6647   0017CC  B0D8               	btfsc	status,0,c
  6648   0017CE  EFEB  F00B         	goto	u3811
  6649   0017D2  EFED  F00B         	goto	u3810
  6650   0017D6                     u3811:
  6651   0017D6  EF81  F00B         	goto	l3873
  6652   0017DA                     u3810:
  6653   0017DA                     l3889:
  6654   0017DA  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  6655   0017DE  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  6656   0017E2  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  6657   0017E6  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  6658   0017EA  0E00               	movlw	0
  6659   0017EC  6E05               	movwf	___flge@ff2^0,c
  6660   0017EE  0E00               	movlw	0
  6661   0017F0  6E06               	movwf	(___flge@ff2+1)^0,c
  6662   0017F2  0EF0               	movlw	240
  6663   0017F4  6E07               	movwf	(___flge@ff2+2)^0,c
  6664   0017F6  0E42               	movlw	66
  6665   0017F8  6E08               	movwf	(___flge@ff2+3)^0,c
  6666   0017FA  ECE6  F01A         	call	___flge	;wreg free
  6667   0017FE  A0D8               	btfss	status,0,c
  6668   001800  EF04  F00C         	goto	u3821
  6669   001804  EF06  F00C         	goto	u3820
  6670   001808                     u3821:
  6671   001808  EF21  F00C         	goto	l3901
  6672   00180C                     u3820:
  6673   00180C  0E00               	movlw	0
  6674   00180E  6E01               	movwf	___flge@ff1^0,c
  6675   001810  0E00               	movlw	0
  6676   001812  6E02               	movwf	(___flge@ff1+1)^0,c
  6677   001814  0E5C               	movlw	92
  6678   001816  6E03               	movwf	(___flge@ff1+2)^0,c
  6679   001818  0E43               	movlw	67
  6680   00181A  6E04               	movwf	(___flge@ff1+3)^0,c
  6681   00181C  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  6682   001820  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  6683   001824  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  6684   001828  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  6685   00182C  ECE6  F01A         	call	___flge	;wreg free
  6686   001830  A0D8               	btfss	status,0,c
  6687   001832  EF1D  F00C         	goto	u3831
  6688   001836  EF1F  F00C         	goto	u3830
  6689   00183A                     u3831:
  6690   00183A  EF21  F00C         	goto	l3901
  6691   00183E                     u3830:
  6692   00183E  EF81  F00B         	goto	l3873
  6693   001842                     l3901:
  6694   001842  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  6695   001846  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  6696   00184A  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  6697   00184E  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  6698   001852  0E00               	movlw	0
  6699   001854  6E05               	movwf	___flge@ff2^0,c
  6700   001856  0E00               	movlw	0
  6701   001858  6E06               	movwf	(___flge@ff2+1)^0,c
  6702   00185A  0E60               	movlw	96
  6703   00185C  6E07               	movwf	(___flge@ff2+2)^0,c
  6704   00185E  0E41               	movlw	65
  6705   001860  6E08               	movwf	(___flge@ff2+3)^0,c
  6706   001862  ECE6  F01A         	call	___flge	;wreg free
  6707   001866  A0D8               	btfss	status,0,c
  6708   001868  EF38  F00C         	goto	u3841
  6709   00186C  EF3A  F00C         	goto	u3840
  6710   001870                     u3841:
  6711   001870  EFB6  F00C         	goto	l3929
  6712   001874                     u3840:
  6713   001874  0E00               	movlw	0
  6714   001876  6E01               	movwf	___flge@ff1^0,c
  6715   001878  0E00               	movlw	0
  6716   00187A  6E02               	movwf	(___flge@ff1+1)^0,c
  6717   00187C  0E98               	movlw	152
  6718   00187E  6E03               	movwf	(___flge@ff1+2)^0,c
  6719   001880  0E41               	movlw	65
  6720   001882  6E04               	movwf	(___flge@ff1+3)^0,c
  6721   001884  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  6722   001888  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  6723   00188C  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  6724   001890  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  6725   001894  ECE6  F01A         	call	___flge	;wreg free
  6726   001898  A0D8               	btfss	status,0,c
  6727   00189A  EF51  F00C         	goto	u3851
  6728   00189E  EF53  F00C         	goto	u3850
  6729   0018A2                     u3851:
  6730   0018A2  EFB6  F00C         	goto	l3929
  6731   0018A6                     u3850:
  6732   0018A6                     
  6733                           ;color.c: 226:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  6734   0018A6  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  6735   0018AA  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  6736   0018AE  CFDE F001          	movff	postinc2,___flge@ff1
  6737   0018B2  CFDE F002          	movff	postinc2,___flge@ff1+1
  6738   0018B6  CFDE F003          	movff	postinc2,___flge@ff1+2
  6739   0018BA  CFDE F004          	movff	postinc2,___flge@ff1+3
  6740   0018BE  0ECD               	movlw	205
  6741   0018C0  6E05               	movwf	___flge@ff2^0,c
  6742   0018C2  0ECC               	movlw	204
  6743   0018C4  6E06               	movwf	(___flge@ff2+1)^0,c
  6744   0018C6  0E4C               	movlw	76
  6745   0018C8  6E07               	movwf	(___flge@ff2+2)^0,c
  6746   0018CA  0E3E               	movlw	62
  6747   0018CC  6E08               	movwf	(___flge@ff2+3)^0,c
  6748   0018CE  ECE6  F01A         	call	___flge	;wreg free
  6749   0018D2  A0D8               	btfss	status,0,c
  6750   0018D4  EF6E  F00C         	goto	u3861
  6751   0018D8  EF70  F00C         	goto	u3860
  6752   0018DC                     u3861:
  6753   0018DC  EF8F  F00C         	goto	l3915
  6754   0018E0                     u3860:
  6755   0018E0  0E1F               	movlw	31
  6756   0018E2  6E01               	movwf	___flge@ff1^0,c
  6757   0018E4  0E85               	movlw	133
  6758   0018E6  6E02               	movwf	(___flge@ff1+1)^0,c
  6759   0018E8  0E6B               	movlw	107
  6760   0018EA  6E03               	movwf	(___flge@ff1+2)^0,c
  6761   0018EC  0E3E               	movlw	62
  6762   0018EE  6E04               	movwf	(___flge@ff1+3)^0,c
  6763   0018F0  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  6764   0018F4  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  6765   0018F8  CFDE F005          	movff	postinc2,___flge@ff2
  6766   0018FC  CFDE F006          	movff	postinc2,___flge@ff2+1
  6767   001900  CFDE F007          	movff	postinc2,___flge@ff2+2
  6768   001904  CFDE F008          	movff	postinc2,___flge@ff2+3
  6769   001908  ECE6  F01A         	call	___flge	;wreg free
  6770   00190C  A0D8               	btfss	status,0,c
  6771   00190E  EF8B  F00C         	goto	u3871
  6772   001912  EF8D  F00C         	goto	u3870
  6773   001916                     u3871:
  6774   001916  EF8F  F00C         	goto	l3915
  6775   00191A                     u3870:
  6776   00191A  EF59  F008         	goto	l3783
  6777   00191E                     l3915:
  6778   00191E  EE20 F008          	lfsr	2,8
  6779   001922  504D               	movf	Colour_decider@rel^0,w,c
  6780   001924  26D9               	addwf	fsr2l,f,c
  6781   001926  504E               	movf	(Colour_decider@rel+1)^0,w,c
  6782   001928  22DA               	addwfc	fsr2h,f,c
  6783   00192A  CFDE F001          	movff	postinc2,___flge@ff1
  6784   00192E  CFDE F002          	movff	postinc2,___flge@ff1+1
  6785   001932  CFDE F003          	movff	postinc2,___flge@ff1+2
  6786   001936  CFDE F004          	movff	postinc2,___flge@ff1+3
  6787   00193A  0E9A               	movlw	154
  6788   00193C  6E05               	movwf	___flge@ff2^0,c
  6789   00193E  0E99               	movlw	153
  6790   001940  6E06               	movwf	(___flge@ff2+1)^0,c
  6791   001942  0E19               	movlw	25
  6792   001944  6E07               	movwf	(___flge@ff2+2)^0,c
  6793   001946  0E3E               	movlw	62
  6794   001948  6E08               	movwf	(___flge@ff2+3)^0,c
  6795   00194A  ECE6  F01A         	call	___flge	;wreg free
  6796   00194E  A0D8               	btfss	status,0,c
  6797   001950  EFAC  F00C         	goto	u3881
  6798   001954  EFAE  F00C         	goto	u3880
  6799   001958                     u3881:
  6800   001958  EFB0  F00C         	goto	l3925
  6801   00195C                     u3880:
  6802   00195C  EF81  F00B         	goto	l3873
  6803   001960                     l3925:
  6804                           
  6805                           ;color.c: 238:             return 7;
  6806   001960  0E00               	movlw	0
  6807   001962  6E4C               	movwf	(?_Colour_decider+1)^0,c
  6808   001964  0E07               	movlw	7
  6809   001966  6E4B               	movwf	?_Colour_decider^0,c
  6810   001968  EFBA  F00C         	goto	l76
  6811   00196C                     l3929:
  6812                           
  6813                           ;color.c: 242:         return 10;
  6814   00196C  0E00               	movlw	0
  6815   00196E  6E4C               	movwf	(?_Colour_decider+1)^0,c
  6816   001970  0E0A               	movlw	10
  6817   001972  6E4B               	movwf	?_Colour_decider^0,c
  6818   001974                     l76:
  6819   001974  0012               	return		;funcret
  6820   001976                     __end_of_Colour_decider:
  6821                           	callstack 0
  6822                           
  6823 ;; *************** function _turnLeft45 *****************
  6824 ;; Defined at:
  6825 ;;		line 188 in file "dc_motor.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  6828 ;;		 -> motorL(9), 
  6829 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  6830 ;;		 -> motorR(9), 
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;		None
  6833 ;; Return value:  Size  Location     Type
  6834 ;;                  1    wreg      void 
  6835 ;; Registers used:
  6836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6837 ;; Tracked objects:
  6838 ;;		On entry : 0/0
  6839 ;;		On exit  : 0/0
  6840 ;;		Unchanged: 0/0
  6841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6842 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6845 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6846 ;;Total ram usage:        6 bytes
  6847 ;; Hardware stack levels used: 1
  6848 ;; Hardware stack levels required when called: 4
  6849 ;; This function calls:
  6850 ;;		_stop
  6851 ;;		_turnLeft
  6852 ;; This function is called by:
  6853 ;;		_Colour_decider
  6854 ;;		_GreenMove
  6855 ;;		_PinkMove
  6856 ;;		_LightBlueMove
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           	psect	text41
  6861   003E5C                     __ptext41:
  6862                           	callstack 0
  6863   003E5C                     _turnLeft45:
  6864                           	callstack 25
  6865   003E5C                     
  6866                           ;dc_motor.c: 189:     turnLeft(mL,mR);
  6867   003E5C  C019  F014         	movff	turnLeft45@mL,turnLeft@mL
  6868   003E60  C01A  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  6869   003E64  C01B  F016         	movff	turnLeft45@mR,turnLeft@mR
  6870   003E68  C01C  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  6871   003E6C  EC6D  F01C         	call	_turnLeft	;wreg free
  6872   003E70                     
  6873                           ;dc_motor.c: 190:     _delay((unsigned long)((220)*(64000000/4000.0)));
  6874   003E70  0E12               	movlw	18
  6875   003E72  6E1E               	movwf	(??_turnLeft45+1)^0,c
  6876   003E74  0EDC               	movlw	220
  6877   003E76  6E1D               	movwf	??_turnLeft45^0,c
  6878   003E78  0E60               	movlw	96
  6879   003E7A                     u4137:
  6880   003E7A  2EE8               	decfsz	wreg,f,c
  6881   003E7C  D7FE               	bra	u4137
  6882   003E7E  2E1D               	decfsz	??_turnLeft45^0,f,c
  6883   003E80  D7FC               	bra	u4137
  6884   003E82  2E1E               	decfsz	(??_turnLeft45+1)^0,f,c
  6885   003E84  D7FA               	bra	u4137
  6886   003E86                     
  6887                           ;dc_motor.c: 191:     stop(&motorL, &motorR);
  6888   003E86  0EF6               	movlw	low _motorL
  6889   003E88  6E14               	movwf	stop@mL^0,c
  6890   003E8A  0E00               	movlw	high _motorL
  6891   003E8C  6E15               	movwf	(stop@mL+1)^0,c
  6892   003E8E  0EED               	movlw	low _motorR
  6893   003E90  6E16               	movwf	stop@mR^0,c
  6894   003E92  0E00               	movlw	high _motorR
  6895   003E94  6E17               	movwf	(stop@mR+1)^0,c
  6896   003E96  ECCF  F01D         	call	_stop	;wreg free
  6897                           
  6898                           ;dc_motor.c: 192:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6899   003E9A  0E52               	movlw	82
  6900   003E9C  6E1E               	movwf	(??_turnLeft45+1)^0,c
  6901   003E9E  0E2B               	movlw	43
  6902   003EA0  6E1D               	movwf	??_turnLeft45^0,c
  6903   003EA2  0E00               	movlw	0
  6904   003EA4                     u4147:
  6905   003EA4  2EE8               	decfsz	wreg,f,c
  6906   003EA6  D7FE               	bra	u4147
  6907   003EA8  2E1D               	decfsz	??_turnLeft45^0,f,c
  6908   003EAA  D7FC               	bra	u4147
  6909   003EAC  2E1E               	decfsz	(??_turnLeft45+1)^0,f,c
  6910   003EAE  D7FA               	bra	u4147
  6911   003EB0  D000               	nop2	
  6912   003EB2  0012               	return		;funcret
  6913   003EB4                     __end_of_turnLeft45:
  6914                           	callstack 0
  6915                           
  6916 ;; *************** function _turnLeft *****************
  6917 ;; Defined at:
  6918 ;;		line 110 in file "dc_motor.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6921 ;;		 -> motorL(9), 
  6922 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6923 ;;		 -> motorR(9), 
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;		None
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      void 
  6928 ;; Registers used:
  6929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6935 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6938 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6939 ;;Total ram usage:        5 bytes
  6940 ;; Hardware stack levels used: 1
  6941 ;; Hardware stack levels required when called: 3
  6942 ;; This function calls:
  6943 ;;		_setMotorPWM
  6944 ;; This function is called by:
  6945 ;;		_turnLeft45
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text42
  6950   0038DA                     __ptext42:
  6951                           	callstack 0
  6952   0038DA                     _turnLeft:
  6953                           	callstack 25
  6954   0038DA                     
  6955                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  6956   0038DA  EE20 F001          	lfsr	2,1
  6957   0038DE  5014               	movf	turnLeft@mL^0,w,c
  6958   0038E0  26D9               	addwf	fsr2l,f,c
  6959   0038E2  5015               	movf	(turnLeft@mL+1)^0,w,c
  6960   0038E4  22DA               	addwfc	fsr2h,f,c
  6961   0038E6  0E00               	movlw	0
  6962   0038E8  6EDF               	movwf	indf2,c
  6963                           
  6964                           ;dc_motor.c: 113:     mR->direction =1;
  6965   0038EA  EE20 F001          	lfsr	2,1
  6966   0038EE  5016               	movf	turnLeft@mR^0,w,c
  6967   0038F0  26D9               	addwf	fsr2l,f,c
  6968   0038F2  5017               	movf	(turnLeft@mR+1)^0,w,c
  6969   0038F4  22DA               	addwfc	fsr2h,f,c
  6970   0038F6  0E01               	movlw	1
  6971   0038F8  6EDF               	movwf	indf2,c
  6972                           
  6973                           ;dc_motor.c: 115:     while(mL->power<70 && mR->power<70){
  6974   0038FA  EF9F  F01C         	goto	l3005
  6975   0038FE                     l2997:
  6976                           
  6977                           ;dc_motor.c: 117:         mL->power+=10;
  6978   0038FE  C014  FFD9         	movff	turnLeft@mL,fsr2l
  6979   003902  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  6980   003906  0E0A               	movlw	10
  6981   003908  26DF               	addwf	indf2,f,c
  6982                           
  6983                           ;dc_motor.c: 118:         mR->power+=10;
  6984   00390A  C016  FFD9         	movff	turnLeft@mR,fsr2l
  6985   00390E  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  6986   003912  0E0A               	movlw	10
  6987   003914  26DF               	addwf	indf2,f,c
  6988   003916                     
  6989                           ;dc_motor.c: 120:         setMotorPWM(mL);
  6990   003916  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  6991   00391A  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6992   00391E  ECD7  F018         	call	_setMotorPWM	;wreg free
  6993   003922                     
  6994                           ;dc_motor.c: 121:         setMotorPWM(mR);
  6995   003922  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  6996   003926  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6997   00392A  ECD7  F018         	call	_setMotorPWM	;wreg free
  6998   00392E                     
  6999                           ;dc_motor.c: 123:         _delay((unsigned long)((1)*(64000000/4000.0)));
  7000   00392E  0E15               	movlw	21
  7001   003930  6E18               	movwf	??_turnLeft^0,c
  7002   003932  0EC6               	movlw	198
  7003   003934                     u4157:
  7004   003934  2EE8               	decfsz	wreg,f,c
  7005   003936  D7FE               	bra	u4157
  7006   003938  2E18               	decfsz	??_turnLeft^0,f,c
  7007   00393A  D7FC               	bra	u4157
  7008   00393C  D000               	nop2	
  7009   00393E                     l3005:
  7010                           
  7011                           ;dc_motor.c: 115:     while(mL->power<70 && mR->power<70){
  7012   00393E  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7013   003942  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7014   003946  0E46               	movlw	70
  7015   003948  60DF               	cpfslt	indf2,c
  7016   00394A  EFA9  F01C         	goto	u2471
  7017   00394E  EFAB  F01C         	goto	u2470
  7018   003952                     u2471:
  7019   003952  EFB7  F01C         	goto	l453
  7020   003956                     u2470:
  7021   003956  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7022   00395A  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7023   00395E  0E45               	movlw	69
  7024   003960  64DF               	cpfsgt	indf2,c
  7025   003962  EFB5  F01C         	goto	u2481
  7026   003966  EFB7  F01C         	goto	u2480
  7027   00396A                     u2481:
  7028   00396A  EF7F  F01C         	goto	l2997
  7029   00396E                     u2480:
  7030   00396E                     l453:
  7031   00396E  0012               	return		;funcret
  7032   003970                     __end_of_turnLeft:
  7033                           	callstack 0
  7034                           
  7035 ;; *************** function ___xxtofl *****************
  7036 ;; Defined at:
  7037 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  7038 ;; Parameters:    Size  Location     Type
  7039 ;;  sign            1    wreg     unsigned char 
  7040 ;;  val             4    0[COMRAM] long 
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;  sign            1    8[COMRAM] unsigned char 
  7043 ;;  arg             4   10[COMRAM] unsigned long 
  7044 ;;  exp             1    9[COMRAM] unsigned char 
  7045 ;; Return value:  Size  Location     Type
  7046 ;;                  4    0[COMRAM] unsigned char 
  7047 ;; Registers used:
  7048 ;;		wreg, status,2, status,0
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7055 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7056 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7057 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7058 ;;Total ram usage:       14 bytes
  7059 ;; Hardware stack levels used: 1
  7060 ;; Hardware stack levels required when called: 1
  7061 ;; This function calls:
  7062 ;;		Nothing
  7063 ;; This function is called by:
  7064 ;;		_colour_rel
  7065 ;;		_Colour_decider
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           	psect	text43
  7070   002E72                     __ptext43:
  7071                           	callstack 0
  7072   002E72                     ___xxtofl:
  7073                           	callstack 28
  7074                           
  7075                           ;incstack = 0
  7076                           ;___xxtofl@sign stored from wreg
  7077   002E72  6E09               	movwf	___xxtofl@sign^0,c
  7078   002E74  5009               	movf	___xxtofl@sign^0,w,c
  7079   002E76  B4D8               	btfsc	status,2,c
  7080   002E78  EF40  F017         	goto	u3461
  7081   002E7C  EF42  F017         	goto	u3460
  7082   002E80                     u3461:
  7083   002E80  EF64  F017         	goto	l1168
  7084   002E84                     u3460:
  7085   002E84  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7086   002E86  EF49  F017         	goto	u3470
  7087   002E8A  EF47  F017         	goto	u3471
  7088   002E8E                     u3471:
  7089   002E8E  EF64  F017         	goto	l1168
  7090   002E92                     u3470:
  7091   002E92  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7092   002E96  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7093   002E9A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7094   002E9E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7095   002EA2  1E05               	comf	??___xxtofl^0,f,c
  7096   002EA4  1E06               	comf	(??___xxtofl+1)^0,f,c
  7097   002EA6  1E07               	comf	(??___xxtofl+2)^0,f,c
  7098   002EA8  1E08               	comf	(??___xxtofl+3)^0,f,c
  7099   002EAA  2A05               	incf	??___xxtofl^0,f,c
  7100   002EAC  0E00               	movlw	0
  7101   002EAE  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7102   002EB0  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7103   002EB2  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7104   002EB4  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7105   002EB8  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7106   002EBC  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7107   002EC0  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7108   002EC4  EF6C  F017         	goto	l3653
  7109   002EC8                     l1168:
  7110   002EC8  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7111   002ECC  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7112   002ED0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7113   002ED4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7114   002ED8                     l3653:
  7115   002ED8  5001               	movf	___xxtofl@val^0,w,c
  7116   002EDA  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7117   002EDC  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7118   002EDE  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7119   002EE0  A4D8               	btfss	status,2,c
  7120   002EE2  EF75  F017         	goto	u3481
  7121   002EE6  EF77  F017         	goto	u3480
  7122   002EEA                     u3481:
  7123   002EEA  EF81  F017         	goto	l3659
  7124   002EEE                     u3480:
  7125   002EEE  0E00               	movlw	0
  7126   002EF0  6E01               	movwf	?___xxtofl^0,c
  7127   002EF2  0E00               	movlw	0
  7128   002EF4  6E02               	movwf	(?___xxtofl+1)^0,c
  7129   002EF6  0E00               	movlw	0
  7130   002EF8  6E03               	movwf	(?___xxtofl+2)^0,c
  7131   002EFA  0E00               	movlw	0
  7132   002EFC  6E04               	movwf	(?___xxtofl+3)^0,c
  7133   002EFE  EF12  F018         	goto	l1171
  7134   002F02                     l3659:
  7135   002F02  0E96               	movlw	150
  7136   002F04  6E0A               	movwf	___xxtofl@exp^0,c
  7137   002F06  EF8B  F017         	goto	l3663
  7138   002F0A                     l3661:
  7139   002F0A  2A0A               	incf	___xxtofl@exp^0,f,c
  7140   002F0C  90D8               	bcf	status,0,c
  7141   002F0E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7142   002F10  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7143   002F12  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7144   002F14  320B               	rrcf	___xxtofl@arg^0,f,c
  7145   002F16                     l3663:
  7146   002F16  0E00               	movlw	0
  7147   002F18  140B               	andwf	___xxtofl@arg^0,w,c
  7148   002F1A  6E05               	movwf	??___xxtofl^0,c
  7149   002F1C  0E00               	movlw	0
  7150   002F1E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7151   002F20  6E06               	movwf	(??___xxtofl+1)^0,c
  7152   002F22  0E00               	movlw	0
  7153   002F24  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7154   002F26  6E07               	movwf	(??___xxtofl+2)^0,c
  7155   002F28  0EFE               	movlw	254
  7156   002F2A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7157   002F2C  6E08               	movwf	(??___xxtofl+3)^0,c
  7158   002F2E  5005               	movf	??___xxtofl^0,w,c
  7159   002F30  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7160   002F32  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7161   002F34  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7162   002F36  A4D8               	btfss	status,2,c
  7163   002F38  EFA0  F017         	goto	u3491
  7164   002F3C  EFA2  F017         	goto	u3490
  7165   002F40                     u3491:
  7166   002F40  EF85  F017         	goto	l3661
  7167   002F44                     u3490:
  7168   002F44  EFB0  F017         	goto	l1175
  7169   002F48                     l3665:
  7170   002F48  2A0A               	incf	___xxtofl@exp^0,f,c
  7171   002F4A  0E01               	movlw	1
  7172   002F4C  260B               	addwf	___xxtofl@arg^0,f,c
  7173   002F4E  0E00               	movlw	0
  7174   002F50  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7175   002F52  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7176   002F54  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7177   002F56  90D8               	bcf	status,0,c
  7178   002F58  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7179   002F5A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7180   002F5C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7181   002F5E  320B               	rrcf	___xxtofl@arg^0,f,c
  7182   002F60                     l1175:
  7183   002F60  0E00               	movlw	0
  7184   002F62  140B               	andwf	___xxtofl@arg^0,w,c
  7185   002F64  6E05               	movwf	??___xxtofl^0,c
  7186   002F66  0E00               	movlw	0
  7187   002F68  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7188   002F6A  6E06               	movwf	(??___xxtofl+1)^0,c
  7189   002F6C  0E00               	movlw	0
  7190   002F6E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7191   002F70  6E07               	movwf	(??___xxtofl+2)^0,c
  7192   002F72  0EFF               	movlw	255
  7193   002F74  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7194   002F76  6E08               	movwf	(??___xxtofl+3)^0,c
  7195   002F78  5005               	movf	??___xxtofl^0,w,c
  7196   002F7A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7197   002F7C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7198   002F7E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7199   002F80  A4D8               	btfss	status,2,c
  7200   002F82  EFC5  F017         	goto	u3501
  7201   002F86  EFC7  F017         	goto	u3500
  7202   002F8A                     u3501:
  7203   002F8A  EFA4  F017         	goto	l3665
  7204   002F8E                     u3500:
  7205   002F8E  EFCF  F017         	goto	l3673
  7206   002F92                     l3671:
  7207   002F92  060A               	decf	___xxtofl@exp^0,f,c
  7208   002F94  90D8               	bcf	status,0,c
  7209   002F96  360B               	rlcf	___xxtofl@arg^0,f,c
  7210   002F98  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7211   002F9A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7212   002F9C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7213   002F9E                     l3673:
  7214   002F9E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7215   002FA0  EFD4  F017         	goto	u3511
  7216   002FA4  EFD6  F017         	goto	u3510
  7217   002FA8                     u3511:
  7218   002FA8  EFDE  F017         	goto	l1182
  7219   002FAC                     u3510:
  7220   002FAC  0E02               	movlw	2
  7221   002FAE  600A               	cpfslt	___xxtofl@exp^0,c
  7222   002FB0  EFDC  F017         	goto	u3521
  7223   002FB4  EFDE  F017         	goto	u3520
  7224   002FB8                     u3521:
  7225   002FB8  EFC9  F017         	goto	l3671
  7226   002FBC                     u3520:
  7227   002FBC                     l1182:
  7228   002FBC  B00A               	btfsc	___xxtofl@exp^0,0,c
  7229   002FBE  EFE3  F017         	goto	u3531
  7230   002FC2  EFE5  F017         	goto	u3530
  7231   002FC6                     u3531:
  7232   002FC6  EFE6  F017         	goto	l3679
  7233   002FCA                     u3530:
  7234   002FCA  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7235   002FCC                     l3679:
  7236   002FCC  90D8               	bcf	status,0,c
  7237   002FCE  320A               	rrcf	___xxtofl@exp^0,f,c
  7238   002FD0  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7239   002FD4  6A06               	clrf	(??___xxtofl+1)^0,c
  7240   002FD6  6A07               	clrf	(??___xxtofl+2)^0,c
  7241   002FD8  6A08               	clrf	(??___xxtofl+3)^0,c
  7242   002FDA  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7243   002FDE  6A07               	clrf	(??___xxtofl+2)^0,c
  7244   002FE0  6A06               	clrf	(??___xxtofl+1)^0,c
  7245   002FE2  6A05               	clrf	??___xxtofl^0,c
  7246   002FE4  5005               	movf	??___xxtofl^0,w,c
  7247   002FE6  120B               	iorwf	___xxtofl@arg^0,f,c
  7248   002FE8  5006               	movf	(??___xxtofl+1)^0,w,c
  7249   002FEA  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7250   002FEC  5007               	movf	(??___xxtofl+2)^0,w,c
  7251   002FEE  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7252   002FF0  5008               	movf	(??___xxtofl+3)^0,w,c
  7253   002FF2  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7254   002FF4  5009               	movf	___xxtofl@sign^0,w,c
  7255   002FF6  B4D8               	btfsc	status,2,c
  7256   002FF8  EF00  F018         	goto	u3541
  7257   002FFC  EF02  F018         	goto	u3540
  7258   003000                     u3541:
  7259   003000  EF0A  F018         	goto	l3689
  7260   003004                     u3540:
  7261   003004  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7262   003006  EF09  F018         	goto	u3550
  7263   00300A  EF07  F018         	goto	u3551
  7264   00300E                     u3551:
  7265   00300E  EF0A  F018         	goto	l3689
  7266   003012                     u3550:
  7267   003012  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7268   003014                     l3689:
  7269   003014  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7270   003018  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7271   00301C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7272   003020  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7273   003024                     l1171:
  7274   003024  0012               	return		;funcret
  7275   003026                     __end_of___xxtofl:
  7276                           	callstack 0
  7277                           
  7278 ;; *************** function ___flsub *****************
  7279 ;; Defined at:
  7280 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;  b               4   16[COMRAM] unsigned char 
  7283 ;;  a               4   20[COMRAM] unsigned char 
  7284 ;; Auto vars:     Size  Location     Type
  7285 ;;		None
  7286 ;; Return value:  Size  Location     Type
  7287 ;;                  4   16[COMRAM] unsigned char 
  7288 ;; Registers used:
  7289 ;;		wreg, status,2, status,0, cstack
  7290 ;; Tracked objects:
  7291 ;;		On entry : 0/0
  7292 ;;		On exit  : 0/0
  7293 ;;		Unchanged: 0/0
  7294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7295 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7298 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7299 ;;Total ram usage:        8 bytes
  7300 ;; Hardware stack levels used: 1
  7301 ;; Hardware stack levels required when called: 2
  7302 ;; This function calls:
  7303 ;;		___fladd
  7304 ;; This function is called by:
  7305 ;;		_Colour_decider
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           	psect	text44
  7310   004286                     __ptext44:
  7311                           	callstack 0
  7312   004286                     ___flsub:
  7313                           	callstack 27
  7314   004286  0E00               	movlw	0
  7315   004288  1A15               	xorwf	___flsub@a^0,f,c
  7316   00428A  0E00               	movlw	0
  7317   00428C  1A16               	xorwf	(___flsub@a+1)^0,f,c
  7318   00428E  0E00               	movlw	0
  7319   004290  1A17               	xorwf	(___flsub@a+2)^0,f,c
  7320   004292  0E80               	movlw	128
  7321   004294  1A18               	xorwf	(___flsub@a+3)^0,f,c
  7322   004296  C011  F001         	movff	___flsub@b,___fladd@b
  7323   00429A  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  7324   00429E  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  7325   0042A2  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  7326   0042A6  C015  F005         	movff	___flsub@a,___fladd@a
  7327   0042AA  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  7328   0042AE  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  7329   0042B2  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  7330   0042B6  ECBB  F00C         	call	___fladd	;wreg free
  7331   0042BA  C001  F011         	movff	?___fladd,?___flsub
  7332   0042BE  C002  F012         	movff	?___fladd+1,?___flsub+1
  7333   0042C2  C003  F013         	movff	?___fladd+2,?___flsub+2
  7334   0042C6  C004  F014         	movff	?___fladd+3,?___flsub+3
  7335   0042CA  0012               	return		;funcret
  7336   0042CC                     __end_of___flsub:
  7337                           	callstack 0
  7338                           
  7339 ;; *************** function ___fladd *****************
  7340 ;; Defined at:
  7341 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;  b               4    0[COMRAM] unsigned char 
  7344 ;;  a               4    4[COMRAM] unsigned char 
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;  grs             1   15[COMRAM] unsigned char 
  7347 ;;  bexp            1   14[COMRAM] unsigned char 
  7348 ;;  aexp            1   13[COMRAM] unsigned char 
  7349 ;;  signs           1   12[COMRAM] unsigned char 
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  4    0[COMRAM] unsigned char 
  7352 ;; Registers used:
  7353 ;;		wreg, status,2, status,0
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7359 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7360 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7361 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7362 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7363 ;;Total ram usage:       16 bytes
  7364 ;; Hardware stack levels used: 1
  7365 ;; Hardware stack levels required when called: 1
  7366 ;; This function calls:
  7367 ;;		Nothing
  7368 ;; This function is called by:
  7369 ;;		_colour_rel
  7370 ;;		_Colour_decider
  7371 ;;		___flsub
  7372 ;; This function uses a non-reentrant model
  7373 ;;
  7374                           
  7375                           	psect	text45
  7376   001976                     __ptext45:
  7377                           	callstack 0
  7378   001976                     ___fladd:
  7379                           	callstack 28
  7380   001976  5004               	movf	(___fladd@b+3)^0,w,c
  7381   001978  0B80               	andlw	128
  7382   00197A  6E0D               	movwf	___fladd@signs^0,c
  7383   00197C  5004               	movf	(___fladd@b+3)^0,w,c
  7384   00197E  2404               	addwf	(___fladd@b+3)^0,w,c
  7385   001980  6E0F               	movwf	___fladd@bexp^0,c
  7386   001982  AE03               	btfss	(___fladd@b+2)^0,7,c
  7387   001984  EFC6  F00C         	goto	u2531
  7388   001988  EFC8  F00C         	goto	u2530
  7389   00198C                     u2531:
  7390   00198C  EFC9  F00C         	goto	l3043
  7391   001990                     u2530:
  7392   001990  800F               	bsf	___fladd@bexp^0,0,c
  7393   001992                     l3043:
  7394   001992  500F               	movf	___fladd@bexp^0,w,c
  7395   001994  B4D8               	btfsc	status,2,c
  7396   001996  EFCF  F00C         	goto	u2541
  7397   00199A  EFD1  F00C         	goto	u2540
  7398   00199E                     u2541:
  7399   00199E  EFE6  F00C         	goto	l3053
  7400   0019A2                     u2540:
  7401   0019A2  280F               	incf	___fladd@bexp^0,w,c
  7402   0019A4  A4D8               	btfss	status,2,c
  7403   0019A6  EFD7  F00C         	goto	u2551
  7404   0019AA  EFD9  F00C         	goto	u2550
  7405   0019AE                     u2551:
  7406   0019AE  EFE1  F00C         	goto	l3049
  7407   0019B2                     u2550:
  7408   0019B2  0E00               	movlw	0
  7409   0019B4  6E01               	movwf	___fladd@b^0,c
  7410   0019B6  0E00               	movlw	0
  7411   0019B8  6E02               	movwf	(___fladd@b+1)^0,c
  7412   0019BA  0E00               	movlw	0
  7413   0019BC  6E03               	movwf	(___fladd@b+2)^0,c
  7414   0019BE  0E00               	movlw	0
  7415   0019C0  6E04               	movwf	(___fladd@b+3)^0,c
  7416   0019C2                     l3049:
  7417   0019C2  8E03               	bsf	(___fladd@b+2)^0,7,c
  7418   0019C4  0E00               	movlw	0
  7419   0019C6  6E04               	movwf	(___fladd@b+3)^0,c
  7420   0019C8  EFEE  F00C         	goto	l3055
  7421   0019CC                     l3053:
  7422   0019CC  0E00               	movlw	0
  7423   0019CE  6E01               	movwf	___fladd@b^0,c
  7424   0019D0  0E00               	movlw	0
  7425   0019D2  6E02               	movwf	(___fladd@b+1)^0,c
  7426   0019D4  0E00               	movlw	0
  7427   0019D6  6E03               	movwf	(___fladd@b+2)^0,c
  7428   0019D8  0E00               	movlw	0
  7429   0019DA  6E04               	movwf	(___fladd@b+3)^0,c
  7430   0019DC                     l3055:
  7431   0019DC  5008               	movf	(___fladd@a+3)^0,w,c
  7432   0019DE  0B80               	andlw	128
  7433   0019E0  6E0E               	movwf	___fladd@aexp^0,c
  7434   0019E2  500D               	movf	___fladd@signs^0,w,c
  7435   0019E4  180E               	xorwf	___fladd@aexp^0,w,c
  7436   0019E6  B4D8               	btfsc	status,2,c
  7437   0019E8  EFF8  F00C         	goto	u2561
  7438   0019EC  EFFA  F00C         	goto	u2560
  7439   0019F0                     u2561:
  7440   0019F0  EFFB  F00C         	goto	l3061
  7441   0019F4                     u2560:
  7442   0019F4  8C0D               	bsf	___fladd@signs^0,6,c
  7443   0019F6                     l3061:
  7444   0019F6  5008               	movf	(___fladd@a+3)^0,w,c
  7445   0019F8  2408               	addwf	(___fladd@a+3)^0,w,c
  7446   0019FA  6E0E               	movwf	___fladd@aexp^0,c
  7447   0019FC  AE07               	btfss	(___fladd@a+2)^0,7,c
  7448   0019FE  EF03  F00D         	goto	u2571
  7449   001A02  EF05  F00D         	goto	u2570
  7450   001A06                     u2571:
  7451   001A06  EF06  F00D         	goto	l3067
  7452   001A0A                     u2570:
  7453   001A0A  800E               	bsf	___fladd@aexp^0,0,c
  7454   001A0C                     l3067:
  7455   001A0C  500E               	movf	___fladd@aexp^0,w,c
  7456   001A0E  B4D8               	btfsc	status,2,c
  7457   001A10  EF0C  F00D         	goto	u2581
  7458   001A14  EF0E  F00D         	goto	u2580
  7459   001A18                     u2581:
  7460   001A18  EF23  F00D         	goto	l3077
  7461   001A1C                     u2580:
  7462   001A1C  280E               	incf	___fladd@aexp^0,w,c
  7463   001A1E  A4D8               	btfss	status,2,c
  7464   001A20  EF14  F00D         	goto	u2591
  7465   001A24  EF16  F00D         	goto	u2590
  7466   001A28                     u2591:
  7467   001A28  EF1E  F00D         	goto	l3073
  7468   001A2C                     u2590:
  7469   001A2C  0E00               	movlw	0
  7470   001A2E  6E05               	movwf	___fladd@a^0,c
  7471   001A30  0E00               	movlw	0
  7472   001A32  6E06               	movwf	(___fladd@a+1)^0,c
  7473   001A34  0E00               	movlw	0
  7474   001A36  6E07               	movwf	(___fladd@a+2)^0,c
  7475   001A38  0E00               	movlw	0
  7476   001A3A  6E08               	movwf	(___fladd@a+3)^0,c
  7477   001A3C                     l3073:
  7478   001A3C  8E07               	bsf	(___fladd@a+2)^0,7,c
  7479   001A3E  0E00               	movlw	0
  7480   001A40  6E08               	movwf	(___fladd@a+3)^0,c
  7481   001A42  EF2B  F00D         	goto	l3079
  7482   001A46                     l3077:
  7483   001A46  0E00               	movlw	0
  7484   001A48  6E05               	movwf	___fladd@a^0,c
  7485   001A4A  0E00               	movlw	0
  7486   001A4C  6E06               	movwf	(___fladd@a+1)^0,c
  7487   001A4E  0E00               	movlw	0
  7488   001A50  6E07               	movwf	(___fladd@a+2)^0,c
  7489   001A52  0E00               	movlw	0
  7490   001A54  6E08               	movwf	(___fladd@a+3)^0,c
  7491   001A56                     l3079:
  7492   001A56  500F               	movf	___fladd@bexp^0,w,c
  7493   001A58  5C0E               	subwf	___fladd@aexp^0,w,c
  7494   001A5A  B0D8               	btfsc	status,0,c
  7495   001A5C  EF32  F00D         	goto	u2601
  7496   001A60  EF34  F00D         	goto	u2600
  7497   001A64                     u2601:
  7498   001A64  EF5B  F00D         	goto	l3115
  7499   001A68                     u2600:
  7500   001A68  AC0D               	btfss	___fladd@signs^0,6,c
  7501   001A6A  EF39  F00D         	goto	u2611
  7502   001A6E  EF3B  F00D         	goto	u2610
  7503   001A72                     u2611:
  7504   001A72  EF3D  F00D         	goto	l3085
  7505   001A76                     u2610:
  7506   001A76  0E80               	movlw	128
  7507   001A78  1A0D               	xorwf	___fladd@signs^0,f,c
  7508   001A7A                     l3085:
  7509   001A7A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7510   001A7E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7511   001A82  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7512   001A86  C001  F010         	movff	___fladd@b,___fladd@grs
  7513   001A8A  C005  F001         	movff	___fladd@a,___fladd@b
  7514   001A8E  C010  F005         	movff	___fladd@grs,___fladd@a
  7515   001A92  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7516   001A96  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7517   001A9A  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7518   001A9E  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7519   001AA2  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7520   001AA6  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7521   001AAA  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7522   001AAE  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7523   001AB2  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7524   001AB6                     l3115:
  7525   001AB6  0E00               	movlw	0
  7526   001AB8  6E10               	movwf	___fladd@grs^0,c
  7527   001ABA  500F               	movf	___fladd@bexp^0,w,c
  7528   001ABC  C00E  F009         	movff	___fladd@aexp,??___fladd
  7529   001AC0  6A0A               	clrf	(??___fladd+1)^0,c
  7530   001AC2  5E09               	subwf	??___fladd^0,f,c
  7531   001AC4  0E00               	movlw	0
  7532   001AC6  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7533   001AC8  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7534   001ACA  EF70  F00D         	goto	u2621
  7535   001ACE  500A               	movf	(??___fladd+1)^0,w,c
  7536   001AD0  E109               	bnz	u2620
  7537   001AD2  0E1A               	movlw	26
  7538   001AD4  5C09               	subwf	??___fladd^0,w,c
  7539   001AD6  A0D8               	btfss	status,0,c
  7540   001AD8  EF70  F00D         	goto	u2621
  7541   001ADC  EF72  F00D         	goto	u2620
  7542   001AE0                     u2621:
  7543   001AE0  EFA9  F00D         	goto	l1042
  7544   001AE4                     u2620:
  7545   001AE4  5001               	movf	___fladd@b^0,w,c
  7546   001AE6  1002               	iorwf	(___fladd@b+1)^0,w,c
  7547   001AE8  1003               	iorwf	(___fladd@b+2)^0,w,c
  7548   001AEA  1004               	iorwf	(___fladd@b+3)^0,w,c
  7549   001AEC  A4D8               	btfss	status,2,c
  7550   001AEE  EF7B  F00D         	goto	u2631
  7551   001AF2  EF7E  F00D         	goto	u2630
  7552   001AF6                     u2631:
  7553   001AF6  0E01               	movlw	1
  7554   001AF8  EF7F  F00D         	goto	u2640
  7555   001AFC                     u2630:
  7556   001AFC  0E00               	movlw	0
  7557   001AFE                     u2640:
  7558   001AFE  6E10               	movwf	___fladd@grs^0,c
  7559   001B00  0E00               	movlw	0
  7560   001B02  6E01               	movwf	___fladd@b^0,c
  7561   001B04  0E00               	movlw	0
  7562   001B06  6E02               	movwf	(___fladd@b+1)^0,c
  7563   001B08  0E00               	movlw	0
  7564   001B0A  6E03               	movwf	(___fladd@b+2)^0,c
  7565   001B0C  0E00               	movlw	0
  7566   001B0E  6E04               	movwf	(___fladd@b+3)^0,c
  7567   001B10  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7568   001B14  EFB2  F00D         	goto	l1041
  7569   001B18                     l1043:
  7570   001B18  A010               	btfss	___fladd@grs^0,0,c
  7571   001B1A  EF91  F00D         	goto	u2651
  7572   001B1E  EF93  F00D         	goto	u2650
  7573   001B22                     u2651:
  7574   001B22  EF99  F00D         	goto	l3127
  7575   001B26                     u2650:
  7576   001B26  90D8               	bcf	status,0,c
  7577   001B28  3010               	rrcf	___fladd@grs^0,w,c
  7578   001B2A  0901               	iorlw	1
  7579   001B2C  6E10               	movwf	___fladd@grs^0,c
  7580   001B2E  EF9B  F00D         	goto	l3129
  7581   001B32                     l3127:
  7582   001B32  90D8               	bcf	status,0,c
  7583   001B34  3210               	rrcf	___fladd@grs^0,f,c
  7584   001B36                     l3129:
  7585   001B36  A001               	btfss	___fladd@b^0,0,c
  7586   001B38  EFA0  F00D         	goto	u2661
  7587   001B3C  EFA2  F00D         	goto	u2660
  7588   001B40                     u2661:
  7589   001B40  EFA3  F00D         	goto	l3133
  7590   001B44                     u2660:
  7591   001B44  8E10               	bsf	___fladd@grs^0,7,c
  7592   001B46                     l3133:
  7593   001B46  3404               	rlcf	(___fladd@b+3)^0,w,c
  7594   001B48  3204               	rrcf	(___fladd@b+3)^0,f,c
  7595   001B4A  3203               	rrcf	(___fladd@b+2)^0,f,c
  7596   001B4C  3202               	rrcf	(___fladd@b+1)^0,f,c
  7597   001B4E  3201               	rrcf	___fladd@b^0,f,c
  7598   001B50  2A0F               	incf	___fladd@bexp^0,f,c
  7599   001B52                     l1042:
  7600   001B52  500E               	movf	___fladd@aexp^0,w,c
  7601   001B54  5C0F               	subwf	___fladd@bexp^0,w,c
  7602   001B56  A0D8               	btfss	status,0,c
  7603   001B58  EFB0  F00D         	goto	u2671
  7604   001B5C  EFB2  F00D         	goto	u2670
  7605   001B60                     u2671:
  7606   001B60  EF8C  F00D         	goto	l1043
  7607   001B64                     u2670:
  7608   001B64                     l1041:
  7609   001B64  BC0D               	btfsc	___fladd@signs^0,6,c
  7610   001B66  EFB7  F00D         	goto	u2681
  7611   001B6A  EFB9  F00D         	goto	u2680
  7612   001B6E                     u2681:
  7613   001B6E  EFF9  F00D         	goto	l3161
  7614   001B72                     u2680:
  7615   001B72  500F               	movf	___fladd@bexp^0,w,c
  7616   001B74  A4D8               	btfss	status,2,c
  7617   001B76  EFBF  F00D         	goto	u2691
  7618   001B7A  EFC1  F00D         	goto	u2690
  7619   001B7E                     u2691:
  7620   001B7E  EFCB  F00D         	goto	l3143
  7621   001B82                     u2690:
  7622   001B82  0E00               	movlw	0
  7623   001B84  6E01               	movwf	?___fladd^0,c
  7624   001B86  0E00               	movlw	0
  7625   001B88  6E02               	movwf	(?___fladd+1)^0,c
  7626   001B8A  0E00               	movlw	0
  7627   001B8C  6E03               	movwf	(?___fladd+2)^0,c
  7628   001B8E  0E00               	movlw	0
  7629   001B90  6E04               	movwf	(?___fladd+3)^0,c
  7630   001B92  EF1A  F00F         	goto	l1050
  7631   001B96                     l3143:
  7632   001B96  5005               	movf	___fladd@a^0,w,c
  7633   001B98  2601               	addwf	___fladd@b^0,f,c
  7634   001B9A  5006               	movf	(___fladd@a+1)^0,w,c
  7635   001B9C  2202               	addwfc	(___fladd@b+1)^0,f,c
  7636   001B9E  5007               	movf	(___fladd@a+2)^0,w,c
  7637   001BA0  2203               	addwfc	(___fladd@b+2)^0,f,c
  7638   001BA2  5008               	movf	(___fladd@a+3)^0,w,c
  7639   001BA4  2204               	addwfc	(___fladd@b+3)^0,f,c
  7640   001BA6  A004               	btfss	(___fladd@b+3)^0,0,c
  7641   001BA8  EFD8  F00D         	goto	u2701
  7642   001BAC  EFDA  F00D         	goto	u2700
  7643   001BB0                     u2701:
  7644   001BB0  EF86  F00E         	goto	l3197
  7645   001BB4                     u2700:
  7646   001BB4  A010               	btfss	___fladd@grs^0,0,c
  7647   001BB6  EFDF  F00D         	goto	u2711
  7648   001BBA  EFE1  F00D         	goto	u2710
  7649   001BBE                     u2711:
  7650   001BBE  EFE7  F00D         	goto	l3151
  7651   001BC2                     u2710:
  7652   001BC2  90D8               	bcf	status,0,c
  7653   001BC4  3010               	rrcf	___fladd@grs^0,w,c
  7654   001BC6  0901               	iorlw	1
  7655   001BC8  6E10               	movwf	___fladd@grs^0,c
  7656   001BCA  EFE9  F00D         	goto	l3153
  7657   001BCE                     l3151:
  7658   001BCE  90D8               	bcf	status,0,c
  7659   001BD0  3210               	rrcf	___fladd@grs^0,f,c
  7660   001BD2                     l3153:
  7661   001BD2  A001               	btfss	___fladd@b^0,0,c
  7662   001BD4  EFEE  F00D         	goto	u2721
  7663   001BD8  EFF0  F00D         	goto	u2720
  7664   001BDC                     u2721:
  7665   001BDC  EFF1  F00D         	goto	l3157
  7666   001BE0                     u2720:
  7667   001BE0  8E10               	bsf	___fladd@grs^0,7,c
  7668   001BE2                     l3157:
  7669   001BE2  3404               	rlcf	(___fladd@b+3)^0,w,c
  7670   001BE4  3204               	rrcf	(___fladd@b+3)^0,f,c
  7671   001BE6  3203               	rrcf	(___fladd@b+2)^0,f,c
  7672   001BE8  3202               	rrcf	(___fladd@b+1)^0,f,c
  7673   001BEA  3201               	rrcf	___fladd@b^0,f,c
  7674   001BEC  2A0F               	incf	___fladd@bexp^0,f,c
  7675   001BEE  EF86  F00E         	goto	l3197
  7676   001BF2                     l3161:
  7677   001BF2  5005               	movf	___fladd@a^0,w,c
  7678   001BF4  5C01               	subwf	___fladd@b^0,w,c
  7679   001BF6  5006               	movf	(___fladd@a+1)^0,w,c
  7680   001BF8  5802               	subwfb	(___fladd@b+1)^0,w,c
  7681   001BFA  5007               	movf	(___fladd@a+2)^0,w,c
  7682   001BFC  5803               	subwfb	(___fladd@b+2)^0,w,c
  7683   001BFE  5004               	movf	(___fladd@b+3)^0,w,c
  7684   001C00  0A80               	xorlw	128
  7685   001C02  6E09               	movwf	??___fladd^0,c
  7686   001C04  5008               	movf	(___fladd@a+3)^0,w,c
  7687   001C06  0A80               	xorlw	128
  7688   001C08  5809               	subwfb	??___fladd^0,w,c
  7689   001C0A  B0D8               	btfsc	status,0,c
  7690   001C0C  EF0A  F00E         	goto	u2731
  7691   001C10  EF0C  F00E         	goto	u2730
  7692   001C14                     u2731:
  7693   001C14  EF37  F00E         	goto	l3171
  7694   001C18                     u2730:
  7695   001C18  5001               	movf	___fladd@b^0,w,c
  7696   001C1A  5C05               	subwf	___fladd@a^0,w,c
  7697   001C1C  6E09               	movwf	??___fladd^0,c
  7698   001C1E  5002               	movf	(___fladd@b+1)^0,w,c
  7699   001C20  5806               	subwfb	(___fladd@a+1)^0,w,c
  7700   001C22  6E0A               	movwf	(??___fladd+1)^0,c
  7701   001C24  5003               	movf	(___fladd@b+2)^0,w,c
  7702   001C26  5807               	subwfb	(___fladd@a+2)^0,w,c
  7703   001C28  6E0B               	movwf	(??___fladd+2)^0,c
  7704   001C2A  5004               	movf	(___fladd@b+3)^0,w,c
  7705   001C2C  5808               	subwfb	(___fladd@a+3)^0,w,c
  7706   001C2E  6E0C               	movwf	(??___fladd+3)^0,c
  7707   001C30  0EFF               	movlw	255
  7708   001C32  2409               	addwf	??___fladd^0,w,c
  7709   001C34  6E01               	movwf	___fladd@b^0,c
  7710   001C36  0EFF               	movlw	255
  7711   001C38  200A               	addwfc	(??___fladd+1)^0,w,c
  7712   001C3A  6E02               	movwf	(___fladd@b+1)^0,c
  7713   001C3C  0EFF               	movlw	255
  7714   001C3E  200B               	addwfc	(??___fladd+2)^0,w,c
  7715   001C40  6E03               	movwf	(___fladd@b+2)^0,c
  7716   001C42  0EFF               	movlw	255
  7717   001C44  200C               	addwfc	(??___fladd+3)^0,w,c
  7718   001C46  6E04               	movwf	(___fladd@b+3)^0,c
  7719   001C48  0E80               	movlw	128
  7720   001C4A  1A0D               	xorwf	___fladd@signs^0,f,c
  7721   001C4C  6C10               	negf	___fladd@grs^0,c
  7722   001C4E  5010               	movf	___fladd@grs^0,w,c
  7723   001C50  A4D8               	btfss	status,2,c
  7724   001C52  EF2D  F00E         	goto	u2741
  7725   001C56  EF2F  F00E         	goto	u2740
  7726   001C5A                     u2741:
  7727   001C5A  EF3F  F00E         	goto	l1058
  7728   001C5E                     u2740:
  7729   001C5E  0E01               	movlw	1
  7730   001C60  2601               	addwf	___fladd@b^0,f,c
  7731   001C62  0E00               	movlw	0
  7732   001C64  2202               	addwfc	(___fladd@b+1)^0,f,c
  7733   001C66  2203               	addwfc	(___fladd@b+2)^0,f,c
  7734   001C68  2204               	addwfc	(___fladd@b+3)^0,f,c
  7735   001C6A  EF3F  F00E         	goto	l1058
  7736   001C6E                     l3171:
  7737   001C6E  5005               	movf	___fladd@a^0,w,c
  7738   001C70  5E01               	subwf	___fladd@b^0,f,c
  7739   001C72  5006               	movf	(___fladd@a+1)^0,w,c
  7740   001C74  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7741   001C76  5007               	movf	(___fladd@a+2)^0,w,c
  7742   001C78  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7743   001C7A  5008               	movf	(___fladd@a+3)^0,w,c
  7744   001C7C  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7745   001C7E                     l1058:
  7746   001C7E  5001               	movf	___fladd@b^0,w,c
  7747   001C80  1002               	iorwf	(___fladd@b+1)^0,w,c
  7748   001C82  1003               	iorwf	(___fladd@b+2)^0,w,c
  7749   001C84  1004               	iorwf	(___fladd@b+3)^0,w,c
  7750   001C86  A4D8               	btfss	status,2,c
  7751   001C88  EF48  F00E         	goto	u2751
  7752   001C8C  EF4A  F00E         	goto	u2750
  7753   001C90                     u2751:
  7754   001C90  EF7F  F00E         	goto	l3195
  7755   001C94                     u2750:
  7756   001C94  5010               	movf	___fladd@grs^0,w,c
  7757   001C96  A4D8               	btfss	status,2,c
  7758   001C98  EF50  F00E         	goto	u2761
  7759   001C9C  EF52  F00E         	goto	u2760
  7760   001CA0                     u2761:
  7761   001CA0  EF7F  F00E         	goto	l3195
  7762   001CA4                     u2760:
  7763   001CA4  0E00               	movlw	0
  7764   001CA6  6E01               	movwf	?___fladd^0,c
  7765   001CA8  0E00               	movlw	0
  7766   001CAA  6E02               	movwf	(?___fladd+1)^0,c
  7767   001CAC  0E00               	movlw	0
  7768   001CAE  6E03               	movwf	(?___fladd+2)^0,c
  7769   001CB0  0E00               	movlw	0
  7770   001CB2  6E04               	movwf	(?___fladd+3)^0,c
  7771   001CB4  EF1A  F00F         	goto	l1050
  7772   001CB8                     l3179:
  7773   001CB8  90D8               	bcf	status,0,c
  7774   001CBA  3601               	rlcf	___fladd@b^0,f,c
  7775   001CBC  3602               	rlcf	(___fladd@b+1)^0,f,c
  7776   001CBE  3603               	rlcf	(___fladd@b+2)^0,f,c
  7777   001CC0  3604               	rlcf	(___fladd@b+3)^0,f,c
  7778   001CC2  AE10               	btfss	___fladd@grs^0,7,c
  7779   001CC4  EF66  F00E         	goto	u2771
  7780   001CC8  EF68  F00E         	goto	u2770
  7781   001CCC                     u2771:
  7782   001CCC  EF69  F00E         	goto	l3185
  7783   001CD0                     u2770:
  7784   001CD0  8001               	bsf	___fladd@b^0,0,c
  7785   001CD2                     l3185:
  7786   001CD2  A010               	btfss	___fladd@grs^0,0,c
  7787   001CD4  EF6E  F00E         	goto	u2781
  7788   001CD8  EF70  F00E         	goto	u2780
  7789   001CDC                     u2781:
  7790   001CDC  EF74  F00E         	goto	l3189
  7791   001CE0                     u2780:
  7792   001CE0  80D8               	bsf	status,0,c
  7793   001CE2  3610               	rlcf	___fladd@grs^0,f,c
  7794   001CE4  EF76  F00E         	goto	l3191
  7795   001CE8                     l3189:
  7796   001CE8  90D8               	bcf	status,0,c
  7797   001CEA  3610               	rlcf	___fladd@grs^0,f,c
  7798   001CEC                     l3191:
  7799   001CEC  500F               	movf	___fladd@bexp^0,w,c
  7800   001CEE  B4D8               	btfsc	status,2,c
  7801   001CF0  EF7C  F00E         	goto	u2791
  7802   001CF4  EF7E  F00E         	goto	u2790
  7803   001CF8                     u2791:
  7804   001CF8  EF7F  F00E         	goto	l3195
  7805   001CFC                     u2790:
  7806   001CFC  060F               	decf	___fladd@bexp^0,f,c
  7807   001CFE                     l3195:
  7808   001CFE  AE03               	btfss	(___fladd@b+2)^0,7,c
  7809   001D00  EF84  F00E         	goto	u2801
  7810   001D04  EF86  F00E         	goto	u2800
  7811   001D08                     u2801:
  7812   001D08  EF5C  F00E         	goto	l3179
  7813   001D0C                     u2800:
  7814   001D0C                     l3197:
  7815   001D0C  0E00               	movlw	0
  7816   001D0E  6E0E               	movwf	___fladd@aexp^0,c
  7817   001D10  AE10               	btfss	___fladd@grs^0,7,c
  7818   001D12  EF8D  F00E         	goto	u2811
  7819   001D16  EF8F  F00E         	goto	u2810
  7820   001D1A                     u2811:
  7821   001D1A  EFA7  F00E         	goto	l1067
  7822   001D1E                     u2810:
  7823   001D1E  C010  F009         	movff	___fladd@grs,??___fladd
  7824   001D22  0E7F               	movlw	127
  7825   001D24  1609               	andwf	??___fladd^0,f,c
  7826   001D26  B4D8               	btfsc	status,2,c
  7827   001D28  EF98  F00E         	goto	u2821
  7828   001D2C  EF9A  F00E         	goto	u2820
  7829   001D30                     u2821:
  7830   001D30  EF9E  F00E         	goto	l1068
  7831   001D34                     u2820:
  7832   001D34                     l3203:
  7833   001D34  0E01               	movlw	1
  7834   001D36  6E0E               	movwf	___fladd@aexp^0,c
  7835   001D38  EFA7  F00E         	goto	l1067
  7836   001D3C                     l1068:
  7837   001D3C  A001               	btfss	___fladd@b^0,0,c
  7838   001D3E  EFA3  F00E         	goto	u2831
  7839   001D42  EFA5  F00E         	goto	u2830
  7840   001D46                     u2831:
  7841   001D46  EFA7  F00E         	goto	l1067
  7842   001D4A                     u2830:
  7843   001D4A  EF9A  F00E         	goto	l3203
  7844   001D4E                     l1067:
  7845   001D4E  500E               	movf	___fladd@aexp^0,w,c
  7846   001D50  B4D8               	btfsc	status,2,c
  7847   001D52  EFAD  F00E         	goto	u2841
  7848   001D56  EFAF  F00E         	goto	u2840
  7849   001D5A                     u2841:
  7850   001D5A  EFDA  F00E         	goto	l3215
  7851   001D5E                     u2840:
  7852   001D5E  0E01               	movlw	1
  7853   001D60  2601               	addwf	___fladd@b^0,f,c
  7854   001D62  0E00               	movlw	0
  7855   001D64  2202               	addwfc	(___fladd@b+1)^0,f,c
  7856   001D66  2203               	addwfc	(___fladd@b+2)^0,f,c
  7857   001D68  2204               	addwfc	(___fladd@b+3)^0,f,c
  7858   001D6A  A004               	btfss	(___fladd@b+3)^0,0,c
  7859   001D6C  EFBA  F00E         	goto	u2851
  7860   001D70  EFBC  F00E         	goto	u2850
  7861   001D74                     u2851:
  7862   001D74  EFDA  F00E         	goto	l3215
  7863   001D78                     u2850:
  7864   001D78  C001  F009         	movff	___fladd@b,??___fladd
  7865   001D7C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7866   001D80  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7867   001D84  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7868   001D88  340C               	rlcf	(??___fladd+3)^0,w,c
  7869   001D8A  320C               	rrcf	(??___fladd+3)^0,f,c
  7870   001D8C  320B               	rrcf	(??___fladd+2)^0,f,c
  7871   001D8E  320A               	rrcf	(??___fladd+1)^0,f,c
  7872   001D90  3209               	rrcf	??___fladd^0,f,c
  7873   001D92  C009  F001         	movff	??___fladd,___fladd@b
  7874   001D96  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7875   001D9A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7876   001D9E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7877   001DA2  280F               	incf	___fladd@bexp^0,w,c
  7878   001DA4  B4D8               	btfsc	status,2,c
  7879   001DA6  EFD7  F00E         	goto	u2861
  7880   001DAA  EFD9  F00E         	goto	u2860
  7881   001DAE                     u2861:
  7882   001DAE  EFDA  F00E         	goto	l3215
  7883   001DB2                     u2860:
  7884   001DB2  2A0F               	incf	___fladd@bexp^0,f,c
  7885   001DB4                     l3215:
  7886   001DB4  280F               	incf	___fladd@bexp^0,w,c
  7887   001DB6  B4D8               	btfsc	status,2,c
  7888   001DB8  EFE0  F00E         	goto	u2871
  7889   001DBC  EFE2  F00E         	goto	u2870
  7890   001DC0                     u2871:
  7891   001DC0  EFEA  F00E         	goto	l3219
  7892   001DC4                     u2870:
  7893   001DC4  500F               	movf	___fladd@bexp^0,w,c
  7894   001DC6  A4D8               	btfss	status,2,c
  7895   001DC8  EFE8  F00E         	goto	u2881
  7896   001DCC  EFEA  F00E         	goto	u2880
  7897   001DD0                     u2881:
  7898   001DD0  EFFC  F00E         	goto	l3223
  7899   001DD4                     u2880:
  7900   001DD4                     l3219:
  7901   001DD4  0E00               	movlw	0
  7902   001DD6  6E01               	movwf	___fladd@b^0,c
  7903   001DD8  0E00               	movlw	0
  7904   001DDA  6E02               	movwf	(___fladd@b+1)^0,c
  7905   001DDC  0E00               	movlw	0
  7906   001DDE  6E03               	movwf	(___fladd@b+2)^0,c
  7907   001DE0  0E00               	movlw	0
  7908   001DE2  6E04               	movwf	(___fladd@b+3)^0,c
  7909   001DE4  500F               	movf	___fladd@bexp^0,w,c
  7910   001DE6  A4D8               	btfss	status,2,c
  7911   001DE8  EFF8  F00E         	goto	u2891
  7912   001DEC  EFFA  F00E         	goto	u2890
  7913   001DF0                     u2891:
  7914   001DF0  EFFC  F00E         	goto	l3223
  7915   001DF4                     u2890:
  7916   001DF4  0E00               	movlw	0
  7917   001DF6  6E0D               	movwf	___fladd@signs^0,c
  7918   001DF8                     l3223:
  7919   001DF8  A00F               	btfss	___fladd@bexp^0,0,c
  7920   001DFA  EF01  F00F         	goto	u2901
  7921   001DFE  EF03  F00F         	goto	u2900
  7922   001E02                     u2901:
  7923   001E02  EF06  F00F         	goto	l3227
  7924   001E06                     u2900:
  7925   001E06  8E03               	bsf	(___fladd@b+2)^0,7,c
  7926   001E08  EF07  F00F         	goto	l3229
  7927   001E0C                     l3227:
  7928   001E0C  9E03               	bcf	(___fladd@b+2)^0,7,c
  7929   001E0E                     l3229:
  7930   001E0E  90D8               	bcf	status,0,c
  7931   001E10  300F               	rrcf	___fladd@bexp^0,w,c
  7932   001E12  6E04               	movwf	(___fladd@b+3)^0,c
  7933   001E14  AE0D               	btfss	___fladd@signs^0,7,c
  7934   001E16  EF0F  F00F         	goto	u2911
  7935   001E1A  EF11  F00F         	goto	u2910
  7936   001E1E                     u2911:
  7937   001E1E  EF12  F00F         	goto	l3235
  7938   001E22                     u2910:
  7939   001E22  8E04               	bsf	(___fladd@b+3)^0,7,c
  7940   001E24                     l3235:
  7941   001E24  C001  F001         	movff	___fladd@b,?___fladd
  7942   001E28  C002  F002         	movff	___fladd@b+1,?___fladd+1
  7943   001E2C  C003  F003         	movff	___fladd@b+2,?___fladd+2
  7944   001E30  C004  F004         	movff	___fladd@b+3,?___fladd+3
  7945   001E34                     l1050:
  7946   001E34  0012               	return		;funcret
  7947   001E36                     __end_of___fladd:
  7948                           	callstack 0
  7949                           
  7950 ;; *************** function ___flmul *****************
  7951 ;; Defined at:
  7952 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;  b               4   49[COMRAM] unsigned char 
  7955 ;;  a               4   53[COMRAM] unsigned char 
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;  prod            4   68[COMRAM] struct .
  7958 ;;  grs             4   62[COMRAM] unsigned long 
  7959 ;;  temp            2   72[COMRAM] struct .
  7960 ;;  bexp            1   67[COMRAM] unsigned char 
  7961 ;;  aexp            1   66[COMRAM] unsigned char 
  7962 ;;  sign            1   61[COMRAM] unsigned char 
  7963 ;; Return value:  Size  Location     Type
  7964 ;;                  4   49[COMRAM] unsigned char 
  7965 ;; Registers used:
  7966 ;;		wreg, status,2, status,0, prodl, prodh
  7967 ;; Tracked objects:
  7968 ;;		On entry : 0/0
  7969 ;;		On exit  : 0/0
  7970 ;;		Unchanged: 0/0
  7971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7972 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7973 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7974 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7975 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7976 ;;Total ram usage:       25 bytes
  7977 ;; Hardware stack levels used: 1
  7978 ;; Hardware stack levels required when called: 1
  7979 ;; This function calls:
  7980 ;;		Nothing
  7981 ;; This function is called by:
  7982 ;;		_Colour_decider
  7983 ;; This function uses a non-reentrant model
  7984 ;;
  7985                           
  7986                           	psect	text46
  7987   001E36                     __ptext46:
  7988                           	callstack 0
  7989   001E36                     ___flmul:
  7990                           	callstack 28
  7991   001E36  5035               	movf	(___flmul@b+3)^0,w,c
  7992   001E38  0B80               	andlw	128
  7993   001E3A  6E3E               	movwf	___flmul@sign^0,c
  7994   001E3C  5035               	movf	(___flmul@b+3)^0,w,c
  7995   001E3E  2435               	addwf	(___flmul@b+3)^0,w,c
  7996   001E40  6E44               	movwf	___flmul@bexp^0,c
  7997   001E42  AE34               	btfss	(___flmul@b+2)^0,7,c
  7998   001E44  EF26  F00F         	goto	u3191
  7999   001E48  EF28  F00F         	goto	u3190
  8000   001E4C                     u3191:
  8001   001E4C  EF29  F00F         	goto	l3479
  8002   001E50                     u3190:
  8003   001E50  8044               	bsf	___flmul@bexp^0,0,c
  8004   001E52                     l3479:
  8005   001E52  5044               	movf	___flmul@bexp^0,w,c
  8006   001E54  B4D8               	btfsc	status,2,c
  8007   001E56  EF2F  F00F         	goto	u3201
  8008   001E5A  EF31  F00F         	goto	u3200
  8009   001E5E                     u3201:
  8010   001E5E  EF44  F00F         	goto	l3487
  8011   001E62                     u3200:
  8012   001E62  2844               	incf	___flmul@bexp^0,w,c
  8013   001E64  A4D8               	btfss	status,2,c
  8014   001E66  EF37  F00F         	goto	u3211
  8015   001E6A  EF39  F00F         	goto	u3210
  8016   001E6E                     u3211:
  8017   001E6E  EF41  F00F         	goto	l3485
  8018   001E72                     u3210:
  8019   001E72  0E00               	movlw	0
  8020   001E74  6E32               	movwf	___flmul@b^0,c
  8021   001E76  0E00               	movlw	0
  8022   001E78  6E33               	movwf	(___flmul@b+1)^0,c
  8023   001E7A  0E00               	movlw	0
  8024   001E7C  6E34               	movwf	(___flmul@b+2)^0,c
  8025   001E7E  0E00               	movlw	0
  8026   001E80  6E35               	movwf	(___flmul@b+3)^0,c
  8027   001E82                     l3485:
  8028   001E82  8E34               	bsf	(___flmul@b+2)^0,7,c
  8029   001E84  EF4C  F00F         	goto	l3489
  8030   001E88                     l3487:
  8031   001E88  0E00               	movlw	0
  8032   001E8A  6E32               	movwf	___flmul@b^0,c
  8033   001E8C  0E00               	movlw	0
  8034   001E8E  6E33               	movwf	(___flmul@b+1)^0,c
  8035   001E90  0E00               	movlw	0
  8036   001E92  6E34               	movwf	(___flmul@b+2)^0,c
  8037   001E94  0E00               	movlw	0
  8038   001E96  6E35               	movwf	(___flmul@b+3)^0,c
  8039   001E98                     l3489:
  8040   001E98  5039               	movf	(___flmul@a+3)^0,w,c
  8041   001E9A  0B80               	andlw	128
  8042   001E9C  1A3E               	xorwf	___flmul@sign^0,f,c
  8043   001E9E  5039               	movf	(___flmul@a+3)^0,w,c
  8044   001EA0  2439               	addwf	(___flmul@a+3)^0,w,c
  8045   001EA2  6E43               	movwf	___flmul@aexp^0,c
  8046   001EA4  AE38               	btfss	(___flmul@a+2)^0,7,c
  8047   001EA6  EF57  F00F         	goto	u3221
  8048   001EAA  EF59  F00F         	goto	u3220
  8049   001EAE                     u3221:
  8050   001EAE  EF5A  F00F         	goto	l3497
  8051   001EB2                     u3220:
  8052   001EB2  8043               	bsf	___flmul@aexp^0,0,c
  8053   001EB4                     l3497:
  8054   001EB4  5043               	movf	___flmul@aexp^0,w,c
  8055   001EB6  B4D8               	btfsc	status,2,c
  8056   001EB8  EF60  F00F         	goto	u3231
  8057   001EBC  EF62  F00F         	goto	u3230
  8058   001EC0                     u3231:
  8059   001EC0  EF75  F00F         	goto	l3505
  8060   001EC4                     u3230:
  8061   001EC4  2843               	incf	___flmul@aexp^0,w,c
  8062   001EC6  A4D8               	btfss	status,2,c
  8063   001EC8  EF68  F00F         	goto	u3241
  8064   001ECC  EF6A  F00F         	goto	u3240
  8065   001ED0                     u3241:
  8066   001ED0  EF72  F00F         	goto	l3503
  8067   001ED4                     u3240:
  8068   001ED4  0E00               	movlw	0
  8069   001ED6  6E36               	movwf	___flmul@a^0,c
  8070   001ED8  0E00               	movlw	0
  8071   001EDA  6E37               	movwf	(___flmul@a+1)^0,c
  8072   001EDC  0E00               	movlw	0
  8073   001EDE  6E38               	movwf	(___flmul@a+2)^0,c
  8074   001EE0  0E00               	movlw	0
  8075   001EE2  6E39               	movwf	(___flmul@a+3)^0,c
  8076   001EE4                     l3503:
  8077   001EE4  8E38               	bsf	(___flmul@a+2)^0,7,c
  8078   001EE6  EF7D  F00F         	goto	l1127
  8079   001EEA                     l3505:
  8080   001EEA  0E00               	movlw	0
  8081   001EEC  6E36               	movwf	___flmul@a^0,c
  8082   001EEE  0E00               	movlw	0
  8083   001EF0  6E37               	movwf	(___flmul@a+1)^0,c
  8084   001EF2  0E00               	movlw	0
  8085   001EF4  6E38               	movwf	(___flmul@a+2)^0,c
  8086   001EF6  0E00               	movlw	0
  8087   001EF8  6E39               	movwf	(___flmul@a+3)^0,c
  8088   001EFA                     l1127:
  8089   001EFA  5043               	movf	___flmul@aexp^0,w,c
  8090   001EFC  B4D8               	btfsc	status,2,c
  8091   001EFE  EF83  F00F         	goto	u3251
  8092   001F02  EF85  F00F         	goto	u3250
  8093   001F06                     u3251:
  8094   001F06  EF8D  F00F         	goto	l3509
  8095   001F0A                     u3250:
  8096   001F0A  5044               	movf	___flmul@bexp^0,w,c
  8097   001F0C  A4D8               	btfss	status,2,c
  8098   001F0E  EF8B  F00F         	goto	u3261
  8099   001F12  EF8D  F00F         	goto	u3260
  8100   001F16                     u3261:
  8101   001F16  EF97  F00F         	goto	l3513
  8102   001F1A                     u3260:
  8103   001F1A                     l3509:
  8104   001F1A  0E00               	movlw	0
  8105   001F1C  6E32               	movwf	?___flmul^0,c
  8106   001F1E  0E00               	movlw	0
  8107   001F20  6E33               	movwf	(?___flmul+1)^0,c
  8108   001F22  0E00               	movlw	0
  8109   001F24  6E34               	movwf	(?___flmul+2)^0,c
  8110   001F26  0E00               	movlw	0
  8111   001F28  6E35               	movwf	(?___flmul+3)^0,c
  8112   001F2A  EF2F  F011         	goto	l1131
  8113   001F2E                     l3513:
  8114   001F2E  5038               	movf	(___flmul@a+2)^0,w,c
  8115   001F30  0232               	mulwf	___flmul@b^0,c
  8116   001F32  CFF3 F049          	movff	prodl,___flmul@temp
  8117   001F36  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8118   001F3A  5049               	movf	___flmul@temp^0,w,c
  8119   001F3C  6E3F               	movwf	___flmul@grs^0,c
  8120   001F3E  6A40               	clrf	(___flmul@grs+1)^0,c
  8121   001F40  6A41               	clrf	(___flmul@grs+2)^0,c
  8122   001F42  6A42               	clrf	(___flmul@grs+3)^0,c
  8123   001F44  504A               	movf	(___flmul@temp+1)^0,w,c
  8124   001F46  6E45               	movwf	___flmul@prod^0,c
  8125   001F48  6A46               	clrf	(___flmul@prod+1)^0,c
  8126   001F4A  6A47               	clrf	(___flmul@prod+2)^0,c
  8127   001F4C  6A48               	clrf	(___flmul@prod+3)^0,c
  8128   001F4E  5037               	movf	(___flmul@a+1)^0,w,c
  8129   001F50  0233               	mulwf	(___flmul@b+1)^0,c
  8130   001F52  CFF3 F049          	movff	prodl,___flmul@temp
  8131   001F56  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8132   001F5A  5049               	movf	___flmul@temp^0,w,c
  8133   001F5C  263F               	addwf	___flmul@grs^0,f,c
  8134   001F5E  0E00               	movlw	0
  8135   001F60  2240               	addwfc	(___flmul@grs+1)^0,f,c
  8136   001F62  2241               	addwfc	(___flmul@grs+2)^0,f,c
  8137   001F64  2242               	addwfc	(___flmul@grs+3)^0,f,c
  8138   001F66  504A               	movf	(___flmul@temp+1)^0,w,c
  8139   001F68  2645               	addwf	___flmul@prod^0,f,c
  8140   001F6A  0E00               	movlw	0
  8141   001F6C  2246               	addwfc	(___flmul@prod+1)^0,f,c
  8142   001F6E  2247               	addwfc	(___flmul@prod+2)^0,f,c
  8143   001F70  2248               	addwfc	(___flmul@prod+3)^0,f,c
  8144   001F72  5036               	movf	___flmul@a^0,w,c
  8145   001F74  0234               	mulwf	(___flmul@b+2)^0,c
  8146   001F76  CFF3 F049          	movff	prodl,___flmul@temp
  8147   001F7A  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8148   001F7E  5049               	movf	___flmul@temp^0,w,c
  8149   001F80  263F               	addwf	___flmul@grs^0,f,c
  8150   001F82  0E00               	movlw	0
  8151   001F84  2240               	addwfc	(___flmul@grs+1)^0,f,c
  8152   001F86  2241               	addwfc	(___flmul@grs+2)^0,f,c
  8153   001F88  2242               	addwfc	(___flmul@grs+3)^0,f,c
  8154   001F8A  504A               	movf	(___flmul@temp+1)^0,w,c
  8155   001F8C  2645               	addwf	___flmul@prod^0,f,c
  8156   001F8E  0E00               	movlw	0
  8157   001F90  2246               	addwfc	(___flmul@prod+1)^0,f,c
  8158   001F92  2247               	addwfc	(___flmul@prod+2)^0,f,c
  8159   001F94  2248               	addwfc	(___flmul@prod+3)^0,f,c
  8160   001F96  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
  8161   001F9A  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
  8162   001F9E  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
  8163   001FA2  6A3F               	clrf	___flmul@grs^0,c
  8164   001FA4  5036               	movf	___flmul@a^0,w,c
  8165   001FA6  0233               	mulwf	(___flmul@b+1)^0,c
  8166   001FA8  CFF3 F049          	movff	prodl,___flmul@temp
  8167   001FAC  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8168   001FB0  5049               	movf	___flmul@temp^0,w,c
  8169   001FB2  263F               	addwf	___flmul@grs^0,f,c
  8170   001FB4  504A               	movf	(___flmul@temp+1)^0,w,c
  8171   001FB6  2240               	addwfc	(___flmul@grs+1)^0,f,c
  8172   001FB8  0E00               	movlw	0
  8173   001FBA  2241               	addwfc	(___flmul@grs+2)^0,f,c
  8174   001FBC  0E00               	movlw	0
  8175   001FBE  2242               	addwfc	(___flmul@grs+3)^0,f,c
  8176   001FC0  5037               	movf	(___flmul@a+1)^0,w,c
  8177   001FC2  0232               	mulwf	___flmul@b^0,c
  8178   001FC4  CFF3 F049          	movff	prodl,___flmul@temp
  8179   001FC8  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8180   001FCC  5049               	movf	___flmul@temp^0,w,c
  8181   001FCE  263F               	addwf	___flmul@grs^0,f,c
  8182   001FD0  504A               	movf	(___flmul@temp+1)^0,w,c
  8183   001FD2  2240               	addwfc	(___flmul@grs+1)^0,f,c
  8184   001FD4  0E00               	movlw	0
  8185   001FD6  2241               	addwfc	(___flmul@grs+2)^0,f,c
  8186   001FD8  0E00               	movlw	0
  8187   001FDA  2242               	addwfc	(___flmul@grs+3)^0,f,c
  8188   001FDC  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
  8189   001FE0  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
  8190   001FE4  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
  8191   001FE8  6A3F               	clrf	___flmul@grs^0,c
  8192   001FEA  5036               	movf	___flmul@a^0,w,c
  8193   001FEC  0232               	mulwf	___flmul@b^0,c
  8194   001FEE  CFF3 F049          	movff	prodl,___flmul@temp
  8195   001FF2  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8196   001FF6  5049               	movf	___flmul@temp^0,w,c
  8197   001FF8  263F               	addwf	___flmul@grs^0,f,c
  8198   001FFA  504A               	movf	(___flmul@temp+1)^0,w,c
  8199   001FFC  2240               	addwfc	(___flmul@grs+1)^0,f,c
  8200   001FFE  0E00               	movlw	0
  8201   002000  2241               	addwfc	(___flmul@grs+2)^0,f,c
  8202   002002  0E00               	movlw	0
  8203   002004  2242               	addwfc	(___flmul@grs+3)^0,f,c
  8204   002006  5038               	movf	(___flmul@a+2)^0,w,c
  8205   002008  0233               	mulwf	(___flmul@b+1)^0,c
  8206   00200A  CFF3 F049          	movff	prodl,___flmul@temp
  8207   00200E  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8208   002012  5049               	movf	___flmul@temp^0,w,c
  8209   002014  2645               	addwf	___flmul@prod^0,f,c
  8210   002016  504A               	movf	(___flmul@temp+1)^0,w,c
  8211   002018  2246               	addwfc	(___flmul@prod+1)^0,f,c
  8212   00201A  0E00               	movlw	0
  8213   00201C  2247               	addwfc	(___flmul@prod+2)^0,f,c
  8214   00201E  0E00               	movlw	0
  8215   002020  2248               	addwfc	(___flmul@prod+3)^0,f,c
  8216   002022  5037               	movf	(___flmul@a+1)^0,w,c
  8217   002024  0234               	mulwf	(___flmul@b+2)^0,c
  8218   002026  CFF3 F049          	movff	prodl,___flmul@temp
  8219   00202A  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8220   00202E  5049               	movf	___flmul@temp^0,w,c
  8221   002030  2645               	addwf	___flmul@prod^0,f,c
  8222   002032  504A               	movf	(___flmul@temp+1)^0,w,c
  8223   002034  2246               	addwfc	(___flmul@prod+1)^0,f,c
  8224   002036  0E00               	movlw	0
  8225   002038  2247               	addwfc	(___flmul@prod+2)^0,f,c
  8226   00203A  0E00               	movlw	0
  8227   00203C  2248               	addwfc	(___flmul@prod+3)^0,f,c
  8228   00203E  5038               	movf	(___flmul@a+2)^0,w,c
  8229   002040  0234               	mulwf	(___flmul@b+2)^0,c
  8230   002042  CFF3 F049          	movff	prodl,___flmul@temp
  8231   002046  CFF4 F04A          	movff	prodh,___flmul@temp+1
  8232   00204A  5049               	movf	___flmul@temp^0,w,c
  8233   00204C  6E3A               	movwf	??___flmul^0,c
  8234   00204E  504A               	movf	(___flmul@temp+1)^0,w,c
  8235   002050  6E3B               	movwf	(??___flmul+1)^0,c
  8236   002052  6A3C               	clrf	(??___flmul+2)^0,c
  8237   002054  6A3D               	clrf	(??___flmul+3)^0,c
  8238   002056  C03C  F03D         	movff	??___flmul+2,??___flmul+3
  8239   00205A  C03B  F03C         	movff	??___flmul+1,??___flmul+2
  8240   00205E  C03A  F03B         	movff	??___flmul,??___flmul+1
  8241   002062  6A3A               	clrf	??___flmul^0,c
  8242   002064  503A               	movf	??___flmul^0,w,c
  8243   002066  2645               	addwf	___flmul@prod^0,f,c
  8244   002068  503B               	movf	(??___flmul+1)^0,w,c
  8245   00206A  2246               	addwfc	(___flmul@prod+1)^0,f,c
  8246   00206C  503C               	movf	(??___flmul+2)^0,w,c
  8247   00206E  2247               	addwfc	(___flmul@prod+2)^0,f,c
  8248   002070  503D               	movf	(??___flmul+3)^0,w,c
  8249   002072  2248               	addwfc	(___flmul@prod+3)^0,f,c
  8250   002074  C03F  F03A         	movff	___flmul@grs,??___flmul
  8251   002078  C040  F03B         	movff	___flmul@grs+1,??___flmul+1
  8252   00207C  C041  F03C         	movff	___flmul@grs+2,??___flmul+2
  8253   002080  C042  F03D         	movff	___flmul@grs+3,??___flmul+3
  8254   002084  0E19               	movlw	25
  8255   002086  EF4A  F010         	goto	u3270
  8256   00208A                     u3275:
  8257   00208A  90D8               	bcf	status,0,c
  8258   00208C  323D               	rrcf	(??___flmul+3)^0,f,c
  8259   00208E  323C               	rrcf	(??___flmul+2)^0,f,c
  8260   002090  323B               	rrcf	(??___flmul+1)^0,f,c
  8261   002092  323A               	rrcf	??___flmul^0,f,c
  8262   002094                     u3270:
  8263   002094  2EE8               	decfsz	wreg,f,c
  8264   002096  EF45  F010         	goto	u3275
  8265   00209A  503A               	movf	??___flmul^0,w,c
  8266   00209C  2645               	addwf	___flmul@prod^0,f,c
  8267   00209E  503B               	movf	(??___flmul+1)^0,w,c
  8268   0020A0  2246               	addwfc	(___flmul@prod+1)^0,f,c
  8269   0020A2  503C               	movf	(??___flmul+2)^0,w,c
  8270   0020A4  2247               	addwfc	(___flmul@prod+2)^0,f,c
  8271   0020A6  503D               	movf	(??___flmul+3)^0,w,c
  8272   0020A8  2248               	addwfc	(___flmul@prod+3)^0,f,c
  8273   0020AA  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
  8274   0020AE  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
  8275   0020B2  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
  8276   0020B6  6A3F               	clrf	___flmul@grs^0,c
  8277   0020B8  5043               	movf	___flmul@aexp^0,w,c
  8278   0020BA  C044  F03A         	movff	___flmul@bexp,??___flmul
  8279   0020BE  6A3B               	clrf	(??___flmul+1)^0,c
  8280   0020C0  263A               	addwf	??___flmul^0,f,c
  8281   0020C2  0E00               	movlw	0
  8282   0020C4  223B               	addwfc	(??___flmul+1)^0,f,c
  8283   0020C6  0E82               	movlw	130
  8284   0020C8  243A               	addwf	??___flmul^0,w,c
  8285   0020CA  6E49               	movwf	___flmul@temp^0,c
  8286   0020CC  0EFF               	movlw	255
  8287   0020CE  203B               	addwfc	(??___flmul+1)^0,w,c
  8288   0020D0  6E4A               	movwf	(___flmul@temp+1)^0,c
  8289   0020D2  EF80  F010         	goto	l3561
  8290   0020D6                     l3555:
  8291   0020D6  90D8               	bcf	status,0,c
  8292   0020D8  3645               	rlcf	___flmul@prod^0,f,c
  8293   0020DA  3646               	rlcf	(___flmul@prod+1)^0,f,c
  8294   0020DC  3647               	rlcf	(___flmul@prod+2)^0,f,c
  8295   0020DE  3648               	rlcf	(___flmul@prod+3)^0,f,c
  8296   0020E0  AE42               	btfss	(___flmul@grs+3)^0,7,c
  8297   0020E2  EF75  F010         	goto	u3281
  8298   0020E6  EF77  F010         	goto	u3280
  8299   0020EA                     u3281:
  8300   0020EA  EF78  F010         	goto	l1134
  8301   0020EE                     u3280:
  8302   0020EE  8045               	bsf	___flmul@prod^0,0,c
  8303   0020F0                     l1134:
  8304   0020F0  90D8               	bcf	status,0,c
  8305   0020F2  363F               	rlcf	___flmul@grs^0,f,c
  8306   0020F4  3640               	rlcf	(___flmul@grs+1)^0,f,c
  8307   0020F6  3641               	rlcf	(___flmul@grs+2)^0,f,c
  8308   0020F8  3642               	rlcf	(___flmul@grs+3)^0,f,c
  8309   0020FA  0649               	decf	___flmul@temp^0,f,c
  8310   0020FC  A0D8               	btfss	status,0,c
  8311   0020FE  064A               	decf	(___flmul@temp+1)^0,f,c
  8312   002100                     l3561:
  8313   002100  AE47               	btfss	(___flmul@prod+2)^0,7,c
  8314   002102  EF85  F010         	goto	u3291
  8315   002106  EF87  F010         	goto	u3290
  8316   00210A                     u3291:
  8317   00210A  EF6B  F010         	goto	l3555
  8318   00210E                     u3290:
  8319   00210E  0E00               	movlw	0
  8320   002110  6E43               	movwf	___flmul@aexp^0,c
  8321   002112  AE42               	btfss	(___flmul@grs+3)^0,7,c
  8322   002114  EF8E  F010         	goto	u3301
  8323   002118  EF90  F010         	goto	u3300
  8324   00211C                     u3301:
  8325   00211C  EFB4  F010         	goto	l1136
  8326   002120                     u3300:
  8327   002120  0EFF               	movlw	255
  8328   002122  143F               	andwf	___flmul@grs^0,w,c
  8329   002124  6E3A               	movwf	??___flmul^0,c
  8330   002126  0EFF               	movlw	255
  8331   002128  1440               	andwf	(___flmul@grs+1)^0,w,c
  8332   00212A  6E3B               	movwf	(??___flmul+1)^0,c
  8333   00212C  0EFF               	movlw	255
  8334   00212E  1441               	andwf	(___flmul@grs+2)^0,w,c
  8335   002130  6E3C               	movwf	(??___flmul+2)^0,c
  8336   002132  0E7F               	movlw	127
  8337   002134  1442               	andwf	(___flmul@grs+3)^0,w,c
  8338   002136  6E3D               	movwf	(??___flmul+3)^0,c
  8339   002138  503A               	movf	??___flmul^0,w,c
  8340   00213A  103B               	iorwf	(??___flmul+1)^0,w,c
  8341   00213C  103C               	iorwf	(??___flmul+2)^0,w,c
  8342   00213E  103D               	iorwf	(??___flmul+3)^0,w,c
  8343   002140  B4D8               	btfsc	status,2,c
  8344   002142  EFA5  F010         	goto	u3311
  8345   002146  EFA7  F010         	goto	u3310
  8346   00214A                     u3311:
  8347   00214A  EFAB  F010         	goto	l1137
  8348   00214E                     u3310:
  8349   00214E                     l3569:
  8350   00214E  0E01               	movlw	1
  8351   002150  6E43               	movwf	___flmul@aexp^0,c
  8352   002152  EFB4  F010         	goto	l1136
  8353   002156                     l1137:
  8354   002156  A045               	btfss	___flmul@prod^0,0,c
  8355   002158  EFB0  F010         	goto	u3321
  8356   00215C  EFB2  F010         	goto	u3320
  8357   002160                     u3321:
  8358   002160  EFB4  F010         	goto	l1136
  8359   002164                     u3320:
  8360   002164  EFA7  F010         	goto	l3569
  8361   002168                     l1136:
  8362   002168  5043               	movf	___flmul@aexp^0,w,c
  8363   00216A  B4D8               	btfsc	status,2,c
  8364   00216C  EFBA  F010         	goto	u3331
  8365   002170  EFBC  F010         	goto	u3330
  8366   002174                     u3331:
  8367   002174  EFE0  F010         	goto	l3581
  8368   002178                     u3330:
  8369   002178  0E01               	movlw	1
  8370   00217A  2645               	addwf	___flmul@prod^0,f,c
  8371   00217C  0E00               	movlw	0
  8372   00217E  2246               	addwfc	(___flmul@prod+1)^0,f,c
  8373   002180  2247               	addwfc	(___flmul@prod+2)^0,f,c
  8374   002182  2248               	addwfc	(___flmul@prod+3)^0,f,c
  8375   002184  A048               	btfss	(___flmul@prod+3)^0,0,c
  8376   002186  EFC7  F010         	goto	u3341
  8377   00218A  EFC9  F010         	goto	u3340
  8378   00218E                     u3341:
  8379   00218E  EFE0  F010         	goto	l3581
  8380   002192                     u3340:
  8381   002192  C045  F03A         	movff	___flmul@prod,??___flmul
  8382   002196  C046  F03B         	movff	___flmul@prod+1,??___flmul+1
  8383   00219A  C047  F03C         	movff	___flmul@prod+2,??___flmul+2
  8384   00219E  C048  F03D         	movff	___flmul@prod+3,??___flmul+3
  8385   0021A2  343D               	rlcf	(??___flmul+3)^0,w,c
  8386   0021A4  323D               	rrcf	(??___flmul+3)^0,f,c
  8387   0021A6  323C               	rrcf	(??___flmul+2)^0,f,c
  8388   0021A8  323B               	rrcf	(??___flmul+1)^0,f,c
  8389   0021AA  323A               	rrcf	??___flmul^0,f,c
  8390   0021AC  C03A  F045         	movff	??___flmul,___flmul@prod
  8391   0021B0  C03B  F046         	movff	??___flmul+1,___flmul@prod+1
  8392   0021B4  C03C  F047         	movff	??___flmul+2,___flmul@prod+2
  8393   0021B8  C03D  F048         	movff	??___flmul+3,___flmul@prod+3
  8394   0021BC  4A49               	infsnz	___flmul@temp^0,f,c
  8395   0021BE  2A4A               	incf	(___flmul@temp+1)^0,f,c
  8396   0021C0                     l3581:
  8397   0021C0  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
  8398   0021C2  EFEB  F010         	goto	u3351
  8399   0021C6  504A               	movf	(___flmul@temp+1)^0,w,c
  8400   0021C8  E108               	bnz	u3350
  8401   0021CA  2849               	incf	___flmul@temp^0,w,c
  8402   0021CC  A0D8               	btfss	status,0,c
  8403   0021CE  EFEB  F010         	goto	u3351
  8404   0021D2  EFED  F010         	goto	u3350
  8405   0021D6                     u3351:
  8406   0021D6  EFF7  F010         	goto	l3585
  8407   0021DA                     u3350:
  8408   0021DA  0E00               	movlw	0
  8409   0021DC  6E45               	movwf	___flmul@prod^0,c
  8410   0021DE  0E00               	movlw	0
  8411   0021E0  6E46               	movwf	(___flmul@prod+1)^0,c
  8412   0021E2  0E80               	movlw	128
  8413   0021E4  6E47               	movwf	(___flmul@prod+2)^0,c
  8414   0021E6  0E7F               	movlw	127
  8415   0021E8  6E48               	movwf	(___flmul@prod+3)^0,c
  8416   0021EA  EF25  F011         	goto	l3597
  8417   0021EE                     l3585:
  8418   0021EE  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
  8419   0021F0  EF04  F011         	goto	u3360
  8420   0021F4  504A               	movf	(___flmul@temp+1)^0,w,c
  8421   0021F6  E106               	bnz	u3361
  8422   0021F8  0449               	decf	___flmul@temp^0,w,c
  8423   0021FA  B0D8               	btfsc	status,0,c
  8424   0021FC  EF02  F011         	goto	u3361
  8425   002200  EF04  F011         	goto	u3360
  8426   002204                     u3361:
  8427   002204  EF10  F011         	goto	l1144
  8428   002208                     u3360:
  8429   002208  0E00               	movlw	0
  8430   00220A  6E45               	movwf	___flmul@prod^0,c
  8431   00220C  0E00               	movlw	0
  8432   00220E  6E46               	movwf	(___flmul@prod+1)^0,c
  8433   002210  0E00               	movlw	0
  8434   002212  6E47               	movwf	(___flmul@prod+2)^0,c
  8435   002214  0E00               	movlw	0
  8436   002216  6E48               	movwf	(___flmul@prod+3)^0,c
  8437   002218  0E00               	movlw	0
  8438   00221A  6E3E               	movwf	___flmul@sign^0,c
  8439   00221C  EF25  F011         	goto	l3597
  8440   002220                     l1144:
  8441   002220  C049  F044         	movff	___flmul@temp,___flmul@bexp
  8442   002224  0EFF               	movlw	255
  8443   002226  1645               	andwf	___flmul@prod^0,f,c
  8444   002228  0EFF               	movlw	255
  8445   00222A  1646               	andwf	(___flmul@prod+1)^0,f,c
  8446   00222C  0E7F               	movlw	127
  8447   00222E  1647               	andwf	(___flmul@prod+2)^0,f,c
  8448   002230  0E00               	movlw	0
  8449   002232  1648               	andwf	(___flmul@prod+3)^0,f,c
  8450   002234  A044               	btfss	___flmul@bexp^0,0,c
  8451   002236  EF1F  F011         	goto	u3371
  8452   00223A  EF21  F011         	goto	u3370
  8453   00223E                     u3371:
  8454   00223E  EF22  F011         	goto	l3595
  8455   002242                     u3370:
  8456   002242  8E47               	bsf	(___flmul@prod+2)^0,7,c
  8457   002244                     l3595:
  8458   002244  90D8               	bcf	status,0,c
  8459   002246  3044               	rrcf	___flmul@bexp^0,w,c
  8460   002248  6E48               	movwf	(___flmul@prod+3)^0,c
  8461   00224A                     l3597:
  8462   00224A  503E               	movf	___flmul@sign^0,w,c
  8463   00224C  1248               	iorwf	(___flmul@prod+3)^0,f,c
  8464   00224E  C045  F032         	movff	___flmul@prod,?___flmul
  8465   002252  C046  F033         	movff	___flmul@prod+1,?___flmul+1
  8466   002256  C047  F034         	movff	___flmul@prod+2,?___flmul+2
  8467   00225A  C048  F035         	movff	___flmul@prod+3,?___flmul+3
  8468   00225E                     l1131:
  8469   00225E  0012               	return		;funcret
  8470   002260                     __end_of___flmul:
  8471                           	callstack 0
  8472                           
  8473 ;; *************** function ___flge *****************
  8474 ;; Defined at:
  8475 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  8476 ;; Parameters:    Size  Location     Type
  8477 ;;  ff1             4    0[COMRAM] unsigned char 
  8478 ;;  ff2             4    4[COMRAM] unsigned char 
  8479 ;; Auto vars:     Size  Location     Type
  8480 ;;		None
  8481 ;; Return value:  Size  Location     Type
  8482 ;;		None               void
  8483 ;; Registers used:
  8484 ;;		wreg, status,2, status,0
  8485 ;; Tracked objects:
  8486 ;;		On entry : 0/0
  8487 ;;		On exit  : 0/0
  8488 ;;		Unchanged: 0/0
  8489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8490 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8492 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8493 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8494 ;;Total ram usage:       12 bytes
  8495 ;; Hardware stack levels used: 1
  8496 ;; Hardware stack levels required when called: 1
  8497 ;; This function calls:
  8498 ;;		Nothing
  8499 ;; This function is called by:
  8500 ;;		_Colour_decider
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504                           	psect	text47
  8505   0035CC                     __ptext47:
  8506                           	callstack 0
  8507   0035CC                     ___flge:
  8508                           	callstack 28
  8509   0035CC  0E00               	movlw	0
  8510   0035CE  1401               	andwf	___flge@ff1^0,w,c
  8511   0035D0  6E09               	movwf	??___flge^0,c
  8512   0035D2  0E00               	movlw	0
  8513   0035D4  1402               	andwf	(___flge@ff1+1)^0,w,c
  8514   0035D6  6E0A               	movwf	(??___flge+1)^0,c
  8515   0035D8  0E80               	movlw	128
  8516   0035DA  1403               	andwf	(___flge@ff1+2)^0,w,c
  8517   0035DC  6E0B               	movwf	(??___flge+2)^0,c
  8518   0035DE  0E7F               	movlw	127
  8519   0035E0  1404               	andwf	(___flge@ff1+3)^0,w,c
  8520   0035E2  6E0C               	movwf	(??___flge+3)^0,c
  8521   0035E4  5009               	movf	??___flge^0,w,c
  8522   0035E6  100A               	iorwf	(??___flge+1)^0,w,c
  8523   0035E8  100B               	iorwf	(??___flge+2)^0,w,c
  8524   0035EA  100C               	iorwf	(??___flge+3)^0,w,c
  8525   0035EC  A4D8               	btfss	status,2,c
  8526   0035EE  EFFB  F01A         	goto	u3411
  8527   0035F2  EFFD  F01A         	goto	u3410
  8528   0035F6                     u3411:
  8529   0035F6  EF05  F01B         	goto	l3629
  8530   0035FA                     u3410:
  8531   0035FA  0E00               	movlw	0
  8532   0035FC  6E01               	movwf	___flge@ff1^0,c
  8533   0035FE  0E00               	movlw	0
  8534   003600  6E02               	movwf	(___flge@ff1+1)^0,c
  8535   003602  0E00               	movlw	0
  8536   003604  6E03               	movwf	(___flge@ff1+2)^0,c
  8537   003606  0E00               	movlw	0
  8538   003608  6E04               	movwf	(___flge@ff1+3)^0,c
  8539   00360A                     l3629:
  8540   00360A  0E00               	movlw	0
  8541   00360C  1405               	andwf	___flge@ff2^0,w,c
  8542   00360E  6E09               	movwf	??___flge^0,c
  8543   003610  0E00               	movlw	0
  8544   003612  1406               	andwf	(___flge@ff2+1)^0,w,c
  8545   003614  6E0A               	movwf	(??___flge+1)^0,c
  8546   003616  0E80               	movlw	128
  8547   003618  1407               	andwf	(___flge@ff2+2)^0,w,c
  8548   00361A  6E0B               	movwf	(??___flge+2)^0,c
  8549   00361C  0E7F               	movlw	127
  8550   00361E  1408               	andwf	(___flge@ff2+3)^0,w,c
  8551   003620  6E0C               	movwf	(??___flge+3)^0,c
  8552   003622  5009               	movf	??___flge^0,w,c
  8553   003624  100A               	iorwf	(??___flge+1)^0,w,c
  8554   003626  100B               	iorwf	(??___flge+2)^0,w,c
  8555   003628  100C               	iorwf	(??___flge+3)^0,w,c
  8556   00362A  A4D8               	btfss	status,2,c
  8557   00362C  EF1A  F01B         	goto	u3421
  8558   003630  EF1C  F01B         	goto	u3420
  8559   003634                     u3421:
  8560   003634  EF24  F01B         	goto	l3633
  8561   003638                     u3420:
  8562   003638  0E00               	movlw	0
  8563   00363A  6E05               	movwf	___flge@ff2^0,c
  8564   00363C  0E00               	movlw	0
  8565   00363E  6E06               	movwf	(___flge@ff2+1)^0,c
  8566   003640  0E00               	movlw	0
  8567   003642  6E07               	movwf	(___flge@ff2+2)^0,c
  8568   003644  0E00               	movlw	0
  8569   003646  6E08               	movwf	(___flge@ff2+3)^0,c
  8570   003648                     l3633:
  8571   003648  AE04               	btfss	(___flge@ff1+3)^0,7,c
  8572   00364A  EF29  F01B         	goto	u3431
  8573   00364E  EF2B  F01B         	goto	u3430
  8574   003652                     u3431:
  8575   003652  EF34  F01B         	goto	l3637
  8576   003656                     u3430:
  8577   003656  6C01               	negf	___flge@ff1^0,c
  8578   003658  1E02               	comf	(___flge@ff1+1)^0,f,c
  8579   00365A  B0D8               	btfsc	status,0,c
  8580   00365C  2A02               	incf	(___flge@ff1+1)^0,f,c
  8581   00365E  1E03               	comf	(___flge@ff1+2)^0,f,c
  8582   003660  B0D8               	btfsc	status,0,c
  8583   003662  2A03               	incf	(___flge@ff1+2)^0,f,c
  8584   003664  0E80               	movlw	128
  8585   003666  5604               	subfwb	(___flge@ff1+3)^0,f,c
  8586   003668                     l3637:
  8587   003668  AE08               	btfss	(___flge@ff2+3)^0,7,c
  8588   00366A  EF39  F01B         	goto	u3441
  8589   00366E  EF3B  F01B         	goto	u3440
  8590   003672                     u3441:
  8591   003672  EF44  F01B         	goto	l778
  8592   003676                     u3440:
  8593   003676  6C05               	negf	___flge@ff2^0,c
  8594   003678  1E06               	comf	(___flge@ff2+1)^0,f,c
  8595   00367A  B0D8               	btfsc	status,0,c
  8596   00367C  2A06               	incf	(___flge@ff2+1)^0,f,c
  8597   00367E  1E07               	comf	(___flge@ff2+2)^0,f,c
  8598   003680  B0D8               	btfsc	status,0,c
  8599   003682  2A07               	incf	(___flge@ff2+2)^0,f,c
  8600   003684  0E80               	movlw	128
  8601   003686  5608               	subfwb	(___flge@ff2+3)^0,f,c
  8602   003688                     l778:
  8603   003688  0E00               	movlw	0
  8604   00368A  1A01               	xorwf	___flge@ff1^0,f,c
  8605   00368C  0E00               	movlw	0
  8606   00368E  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  8607   003690  0E00               	movlw	0
  8608   003692  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  8609   003694  0E80               	movlw	128
  8610   003696  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  8611   003698  0E00               	movlw	0
  8612   00369A  1A05               	xorwf	___flge@ff2^0,f,c
  8613   00369C  0E00               	movlw	0
  8614   00369E  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  8615   0036A0  0E00               	movlw	0
  8616   0036A2  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  8617   0036A4  0E80               	movlw	128
  8618   0036A6  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  8619   0036A8  5005               	movf	___flge@ff2^0,w,c
  8620   0036AA  5C01               	subwf	___flge@ff1^0,w,c
  8621   0036AC  5006               	movf	(___flge@ff2+1)^0,w,c
  8622   0036AE  5802               	subwfb	(___flge@ff1+1)^0,w,c
  8623   0036B0  5007               	movf	(___flge@ff2+2)^0,w,c
  8624   0036B2  5803               	subwfb	(___flge@ff1+2)^0,w,c
  8625   0036B4  5008               	movf	(___flge@ff2+3)^0,w,c
  8626   0036B6  5804               	subwfb	(___flge@ff1+3)^0,w,c
  8627   0036B8  B0D8               	btfsc	status,0,c
  8628   0036BA  EF61  F01B         	goto	u3451
  8629   0036BE  EF63  F01B         	goto	u3450
  8630   0036C2                     u3451:
  8631   0036C2  EF66  F01B         	goto	l3643
  8632   0036C6                     u3450:
  8633   0036C6  90D8               	bcf	status,0,c
  8634   0036C8  EF67  F01B         	goto	l783
  8635   0036CC                     l3643:
  8636   0036CC  80D8               	bsf	status,0,c
  8637   0036CE                     l783:
  8638   0036CE  0012               	return		;funcret
  8639   0036D0                     __end_of___flge:
  8640                           	callstack 0
  8641                           
  8642 ;; *************** function ___fleq *****************
  8643 ;; Defined at:
  8644 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;  ff1             4   24[COMRAM] unsigned char 
  8647 ;;  ff2             4   28[COMRAM] unsigned char 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;		None
  8650 ;; Return value:  Size  Location     Type
  8651 ;;		None               void
  8652 ;; Registers used:
  8653 ;;		wreg, status,2, status,0
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8659 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8661 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8662 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8663 ;;Total ram usage:       12 bytes
  8664 ;; Hardware stack levels used: 1
  8665 ;; Hardware stack levels required when called: 1
  8666 ;; This function calls:
  8667 ;;		Nothing
  8668 ;; This function is called by:
  8669 ;;		_Colour_decider
  8670 ;; This function uses a non-reentrant model
  8671 ;;
  8672                           
  8673                           	psect	text48
  8674   00379A                     __ptext48:
  8675                           	callstack 0
  8676   00379A                     ___fleq:
  8677                           	callstack 28
  8678   00379A  0E00               	movlw	0
  8679   00379C  1419               	andwf	___fleq@ff1^0,w,c
  8680   00379E  6E21               	movwf	??___fleq^0,c
  8681   0037A0  0E00               	movlw	0
  8682   0037A2  141A               	andwf	(___fleq@ff1+1)^0,w,c
  8683   0037A4  6E22               	movwf	(??___fleq+1)^0,c
  8684   0037A6  0E80               	movlw	128
  8685   0037A8  141B               	andwf	(___fleq@ff1+2)^0,w,c
  8686   0037AA  6E23               	movwf	(??___fleq+2)^0,c
  8687   0037AC  0E7F               	movlw	127
  8688   0037AE  141C               	andwf	(___fleq@ff1+3)^0,w,c
  8689   0037B0  6E24               	movwf	(??___fleq+3)^0,c
  8690   0037B2  5021               	movf	??___fleq^0,w,c
  8691   0037B4  1022               	iorwf	(??___fleq+1)^0,w,c
  8692   0037B6  1023               	iorwf	(??___fleq+2)^0,w,c
  8693   0037B8  1024               	iorwf	(??___fleq+3)^0,w,c
  8694   0037BA  A4D8               	btfss	status,2,c
  8695   0037BC  EFE2  F01B         	goto	u3381
  8696   0037C0  EFE4  F01B         	goto	u3380
  8697   0037C4                     u3381:
  8698   0037C4  EFEC  F01B         	goto	l3613
  8699   0037C8                     u3380:
  8700   0037C8  0E00               	movlw	0
  8701   0037CA  6E19               	movwf	___fleq@ff1^0,c
  8702   0037CC  0E00               	movlw	0
  8703   0037CE  6E1A               	movwf	(___fleq@ff1+1)^0,c
  8704   0037D0  0E00               	movlw	0
  8705   0037D2  6E1B               	movwf	(___fleq@ff1+2)^0,c
  8706   0037D4  0E00               	movlw	0
  8707   0037D6  6E1C               	movwf	(___fleq@ff1+3)^0,c
  8708   0037D8                     l3613:
  8709   0037D8  0E00               	movlw	0
  8710   0037DA  141D               	andwf	___fleq@ff2^0,w,c
  8711   0037DC  6E21               	movwf	??___fleq^0,c
  8712   0037DE  0E00               	movlw	0
  8713   0037E0  141E               	andwf	(___fleq@ff2+1)^0,w,c
  8714   0037E2  6E22               	movwf	(??___fleq+1)^0,c
  8715   0037E4  0E80               	movlw	128
  8716   0037E6  141F               	andwf	(___fleq@ff2+2)^0,w,c
  8717   0037E8  6E23               	movwf	(??___fleq+2)^0,c
  8718   0037EA  0E7F               	movlw	127
  8719   0037EC  1420               	andwf	(___fleq@ff2+3)^0,w,c
  8720   0037EE  6E24               	movwf	(??___fleq+3)^0,c
  8721   0037F0  5021               	movf	??___fleq^0,w,c
  8722   0037F2  1022               	iorwf	(??___fleq+1)^0,w,c
  8723   0037F4  1023               	iorwf	(??___fleq+2)^0,w,c
  8724   0037F6  1024               	iorwf	(??___fleq+3)^0,w,c
  8725   0037F8  A4D8               	btfss	status,2,c
  8726   0037FA  EF01  F01C         	goto	u3391
  8727   0037FE  EF03  F01C         	goto	u3390
  8728   003802                     u3391:
  8729   003802  EF0B  F01C         	goto	l3617
  8730   003806                     u3390:
  8731   003806  0E00               	movlw	0
  8732   003808  6E1D               	movwf	___fleq@ff2^0,c
  8733   00380A  0E00               	movlw	0
  8734   00380C  6E1E               	movwf	(___fleq@ff2+1)^0,c
  8735   00380E  0E00               	movlw	0
  8736   003810  6E1F               	movwf	(___fleq@ff2+2)^0,c
  8737   003812  0E00               	movlw	0
  8738   003814  6E20               	movwf	(___fleq@ff2+3)^0,c
  8739   003816                     l3617:
  8740   003816  501D               	movf	___fleq@ff2^0,w,c
  8741   003818  1819               	xorwf	___fleq@ff1^0,w,c
  8742   00381A  E10F               	bnz	u3400
  8743   00381C  501E               	movf	(___fleq@ff2+1)^0,w,c
  8744   00381E  181A               	xorwf	(___fleq@ff1+1)^0,w,c
  8745   003820  E10C               	bnz	u3400
  8746   003822  501F               	movf	(___fleq@ff2+2)^0,w,c
  8747   003824  181B               	xorwf	(___fleq@ff1+2)^0,w,c
  8748   003826  E109               	bnz	u3400
  8749   003828  5020               	movf	(___fleq@ff2+3)^0,w,c
  8750   00382A  181C               	xorwf	(___fleq@ff1+3)^0,w,c
  8751   00382C  B4D8               	btfsc	status,2,c
  8752   00382E  EF1B  F01C         	goto	u3401
  8753   003832  EF1D  F01C         	goto	u3400
  8754   003836                     u3401:
  8755   003836  EF20  F01C         	goto	l3621
  8756   00383A                     u3400:
  8757   00383A  90D8               	bcf	status,0,c
  8758   00383C  EF21  F01C         	goto	l772
  8759   003840                     l3621:
  8760   003840  80D8               	bsf	status,0,c
  8761   003842                     l772:
  8762   003842  0012               	return		;funcret
  8763   003844                     __end_of___fleq:
  8764                           	callstack 0
  8765                           
  8766 ;; *************** function ___fldiv *****************
  8767 ;; Defined at:
  8768 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  8769 ;; Parameters:    Size  Location     Type
  8770 ;;  b               4   24[COMRAM] unsigned char 
  8771 ;;  a               4   28[COMRAM] unsigned char 
  8772 ;; Auto vars:     Size  Location     Type
  8773 ;;  grs             4   43[COMRAM] unsigned long 
  8774 ;;  rem             4   36[COMRAM] unsigned long 
  8775 ;;  new_exp         2   41[COMRAM] short 
  8776 ;;  aexp            1   48[COMRAM] unsigned char 
  8777 ;;  bexp            1   47[COMRAM] unsigned char 
  8778 ;;  sign            1   40[COMRAM] unsigned char 
  8779 ;; Return value:  Size  Location     Type
  8780 ;;                  4   24[COMRAM] unsigned char 
  8781 ;; Registers used:
  8782 ;;		wreg, status,2, status,0
  8783 ;; Tracked objects:
  8784 ;;		On entry : 0/0
  8785 ;;		On exit  : 0/0
  8786 ;;		Unchanged: 0/0
  8787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8788 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8789 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8790 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8791 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8792 ;;Total ram usage:       25 bytes
  8793 ;; Hardware stack levels used: 1
  8794 ;; Hardware stack levels required when called: 1
  8795 ;; This function calls:
  8796 ;;		Nothing
  8797 ;; This function is called by:
  8798 ;;		_colour_rel
  8799 ;;		_Colour_decider
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           	psect	text49
  8804   002260                     __ptext49:
  8805                           	callstack 0
  8806   002260                     ___fldiv:
  8807                           	callstack 28
  8808   002260  501C               	movf	(___fldiv@b+3)^0,w,c
  8809   002262  0B80               	andlw	128
  8810   002264  6E29               	movwf	___fldiv@sign^0,c
  8811   002266  501C               	movf	(___fldiv@b+3)^0,w,c
  8812   002268  241C               	addwf	(___fldiv@b+3)^0,w,c
  8813   00226A  6E30               	movwf	___fldiv@bexp^0,c
  8814   00226C  AE1B               	btfss	(___fldiv@b+2)^0,7,c
  8815   00226E  EF3B  F011         	goto	u2961
  8816   002272  EF3D  F011         	goto	u2960
  8817   002276                     u2961:
  8818   002276  EF3E  F011         	goto	l3341
  8819   00227A                     u2960:
  8820   00227A  8030               	bsf	___fldiv@bexp^0,0,c
  8821   00227C                     l3341:
  8822   00227C  5030               	movf	___fldiv@bexp^0,w,c
  8823   00227E  B4D8               	btfsc	status,2,c
  8824   002280  EF44  F011         	goto	u2971
  8825   002284  EF46  F011         	goto	u2970
  8826   002288                     u2971:
  8827   002288  EF5B  F011         	goto	l3351
  8828   00228C                     u2970:
  8829   00228C  2830               	incf	___fldiv@bexp^0,w,c
  8830   00228E  A4D8               	btfss	status,2,c
  8831   002290  EF4C  F011         	goto	u2981
  8832   002294  EF4E  F011         	goto	u2980
  8833   002298                     u2981:
  8834   002298  EF56  F011         	goto	l3347
  8835   00229C                     u2980:
  8836   00229C  0E00               	movlw	0
  8837   00229E  6E19               	movwf	___fldiv@b^0,c
  8838   0022A0  0E00               	movlw	0
  8839   0022A2  6E1A               	movwf	(___fldiv@b+1)^0,c
  8840   0022A4  0E00               	movlw	0
  8841   0022A6  6E1B               	movwf	(___fldiv@b+2)^0,c
  8842   0022A8  0E00               	movlw	0
  8843   0022AA  6E1C               	movwf	(___fldiv@b+3)^0,c
  8844   0022AC                     l3347:
  8845   0022AC  8E1B               	bsf	(___fldiv@b+2)^0,7,c
  8846   0022AE  0E00               	movlw	0
  8847   0022B0  6E1C               	movwf	(___fldiv@b+3)^0,c
  8848   0022B2  EF63  F011         	goto	l3353
  8849   0022B6                     l3351:
  8850   0022B6  0E00               	movlw	0
  8851   0022B8  6E19               	movwf	___fldiv@b^0,c
  8852   0022BA  0E00               	movlw	0
  8853   0022BC  6E1A               	movwf	(___fldiv@b+1)^0,c
  8854   0022BE  0E00               	movlw	0
  8855   0022C0  6E1B               	movwf	(___fldiv@b+2)^0,c
  8856   0022C2  0E00               	movlw	0
  8857   0022C4  6E1C               	movwf	(___fldiv@b+3)^0,c
  8858   0022C6                     l3353:
  8859   0022C6  5020               	movf	(___fldiv@a+3)^0,w,c
  8860   0022C8  0B80               	andlw	128
  8861   0022CA  1A29               	xorwf	___fldiv@sign^0,f,c
  8862   0022CC  5020               	movf	(___fldiv@a+3)^0,w,c
  8863   0022CE  2420               	addwf	(___fldiv@a+3)^0,w,c
  8864   0022D0  6E31               	movwf	___fldiv@aexp^0,c
  8865   0022D2  AE1F               	btfss	(___fldiv@a+2)^0,7,c
  8866   0022D4  EF6E  F011         	goto	u2991
  8867   0022D8  EF70  F011         	goto	u2990
  8868   0022DC                     u2991:
  8869   0022DC  EF71  F011         	goto	l3361
  8870   0022E0                     u2990:
  8871   0022E0  8031               	bsf	___fldiv@aexp^0,0,c
  8872   0022E2                     l3361:
  8873   0022E2  5031               	movf	___fldiv@aexp^0,w,c
  8874   0022E4  B4D8               	btfsc	status,2,c
  8875   0022E6  EF77  F011         	goto	u3001
  8876   0022EA  EF79  F011         	goto	u3000
  8877   0022EE                     u3001:
  8878   0022EE  EF8E  F011         	goto	l3371
  8879   0022F2                     u3000:
  8880   0022F2  2831               	incf	___fldiv@aexp^0,w,c
  8881   0022F4  A4D8               	btfss	status,2,c
  8882   0022F6  EF7F  F011         	goto	u3011
  8883   0022FA  EF81  F011         	goto	u3010
  8884   0022FE                     u3011:
  8885   0022FE  EF89  F011         	goto	l3367
  8886   002302                     u3010:
  8887   002302  0E00               	movlw	0
  8888   002304  6E1D               	movwf	___fldiv@a^0,c
  8889   002306  0E00               	movlw	0
  8890   002308  6E1E               	movwf	(___fldiv@a+1)^0,c
  8891   00230A  0E00               	movlw	0
  8892   00230C  6E1F               	movwf	(___fldiv@a+2)^0,c
  8893   00230E  0E00               	movlw	0
  8894   002310  6E20               	movwf	(___fldiv@a+3)^0,c
  8895   002312                     l3367:
  8896   002312  8E1F               	bsf	(___fldiv@a+2)^0,7,c
  8897   002314  0E00               	movlw	0
  8898   002316  6E20               	movwf	(___fldiv@a+3)^0,c
  8899   002318  EF96  F011         	goto	l3373
  8900   00231C                     l3371:
  8901   00231C  0E00               	movlw	0
  8902   00231E  6E1D               	movwf	___fldiv@a^0,c
  8903   002320  0E00               	movlw	0
  8904   002322  6E1E               	movwf	(___fldiv@a+1)^0,c
  8905   002324  0E00               	movlw	0
  8906   002326  6E1F               	movwf	(___fldiv@a+2)^0,c
  8907   002328  0E00               	movlw	0
  8908   00232A  6E20               	movwf	(___fldiv@a+3)^0,c
  8909   00232C                     l3373:
  8910   00232C  501D               	movf	___fldiv@a^0,w,c
  8911   00232E  101E               	iorwf	(___fldiv@a+1)^0,w,c
  8912   002330  101F               	iorwf	(___fldiv@a+2)^0,w,c
  8913   002332  1020               	iorwf	(___fldiv@a+3)^0,w,c
  8914   002334  A4D8               	btfss	status,2,c
  8915   002336  EF9F  F011         	goto	u3021
  8916   00233A  EFA1  F011         	goto	u3020
  8917   00233E                     u3021:
  8918   00233E  EFB9  F011         	goto	l3385
  8919   002342                     u3020:
  8920   002342  0E00               	movlw	0
  8921   002344  6E19               	movwf	___fldiv@b^0,c
  8922   002346  0E00               	movlw	0
  8923   002348  6E1A               	movwf	(___fldiv@b+1)^0,c
  8924   00234A  0E00               	movlw	0
  8925   00234C  6E1B               	movwf	(___fldiv@b+2)^0,c
  8926   00234E  0E00               	movlw	0
  8927   002350  6E1C               	movwf	(___fldiv@b+3)^0,c
  8928   002352  0E80               	movlw	128
  8929   002354  121B               	iorwf	(___fldiv@b+2)^0,f,c
  8930   002356  0E7F               	movlw	127
  8931   002358  121C               	iorwf	(___fldiv@b+3)^0,f,c
  8932   00235A                     l3379:
  8933   00235A  5029               	movf	___fldiv@sign^0,w,c
  8934   00235C  121C               	iorwf	(___fldiv@b+3)^0,f,c
  8935   00235E  C019  F019         	movff	___fldiv@b,?___fldiv
  8936   002362  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
  8937   002366  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
  8938   00236A  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
  8939   00236E  EFFC  F012         	goto	l1095
  8940   002372                     l3385:
  8941   002372  5030               	movf	___fldiv@bexp^0,w,c
  8942   002374  A4D8               	btfss	status,2,c
  8943   002376  EFBF  F011         	goto	u3031
  8944   00237A  EFC1  F011         	goto	u3030
  8945   00237E                     u3031:
  8946   00237E  EFCB  F011         	goto	l3393
  8947   002382                     u3030:
  8948   002382  0E00               	movlw	0
  8949   002384  6E19               	movwf	?___fldiv^0,c
  8950   002386  0E00               	movlw	0
  8951   002388  6E1A               	movwf	(?___fldiv+1)^0,c
  8952   00238A  0E00               	movlw	0
  8953   00238C  6E1B               	movwf	(?___fldiv+2)^0,c
  8954   00238E  0E00               	movlw	0
  8955   002390  6E1C               	movwf	(?___fldiv+3)^0,c
  8956   002392  EFFC  F012         	goto	l1095
  8957   002396                     l3393:
  8958   002396  5031               	movf	___fldiv@aexp^0,w,c
  8959   002398  C030  F021         	movff	___fldiv@bexp,??___fldiv
  8960   00239C  6A22               	clrf	(??___fldiv+1)^0,c
  8961   00239E  5E21               	subwf	??___fldiv^0,f,c
  8962   0023A0  0E00               	movlw	0
  8963   0023A2  5A22               	subwfb	(??___fldiv+1)^0,f,c
  8964   0023A4  0E7F               	movlw	127
  8965   0023A6  2421               	addwf	??___fldiv^0,w,c
  8966   0023A8  6E2A               	movwf	___fldiv@new_exp^0,c
  8967   0023AA  0E00               	movlw	0
  8968   0023AC  2022               	addwfc	(??___fldiv+1)^0,w,c
  8969   0023AE  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  8970   0023B0  C019  F025         	movff	___fldiv@b,___fldiv@rem
  8971   0023B4  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
  8972   0023B8  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
  8973   0023BC  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
  8974   0023C0  0E00               	movlw	0
  8975   0023C2  6E19               	movwf	___fldiv@b^0,c
  8976   0023C4  0E00               	movlw	0
  8977   0023C6  6E1A               	movwf	(___fldiv@b+1)^0,c
  8978   0023C8  0E00               	movlw	0
  8979   0023CA  6E1B               	movwf	(___fldiv@b+2)^0,c
  8980   0023CC  0E00               	movlw	0
  8981   0023CE  6E1C               	movwf	(___fldiv@b+3)^0,c
  8982   0023D0  0E00               	movlw	0
  8983   0023D2  6E2C               	movwf	___fldiv@grs^0,c
  8984   0023D4  0E00               	movlw	0
  8985   0023D6  6E2D               	movwf	(___fldiv@grs+1)^0,c
  8986   0023D8  0E00               	movlw	0
  8987   0023DA  6E2E               	movwf	(___fldiv@grs+2)^0,c
  8988   0023DC  0E00               	movlw	0
  8989   0023DE  6E2F               	movwf	(___fldiv@grs+3)^0,c
  8990   0023E0  0E00               	movlw	0
  8991   0023E2  6E31               	movwf	___fldiv@aexp^0,c
  8992   0023E4  EF2C  F012         	goto	l1097
  8993   0023E8                     l3403:
  8994   0023E8  5031               	movf	___fldiv@aexp^0,w,c
  8995   0023EA  B4D8               	btfsc	status,2,c
  8996   0023EC  EFFA  F011         	goto	u3041
  8997   0023F0  EFFC  F011         	goto	u3040
  8998   0023F4                     u3041:
  8999   0023F4  EF13  F012         	goto	l3411
  9000   0023F8                     u3040:
  9001   0023F8  90D8               	bcf	status,0,c
  9002   0023FA  3625               	rlcf	___fldiv@rem^0,f,c
  9003   0023FC  3626               	rlcf	(___fldiv@rem+1)^0,f,c
  9004   0023FE  3627               	rlcf	(___fldiv@rem+2)^0,f,c
  9005   002400  3628               	rlcf	(___fldiv@rem+3)^0,f,c
  9006   002402  90D8               	bcf	status,0,c
  9007   002404  3619               	rlcf	___fldiv@b^0,f,c
  9008   002406  361A               	rlcf	(___fldiv@b+1)^0,f,c
  9009   002408  361B               	rlcf	(___fldiv@b+2)^0,f,c
  9010   00240A  361C               	rlcf	(___fldiv@b+3)^0,f,c
  9011   00240C  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  9012   00240E  EF0B  F012         	goto	u3051
  9013   002412  EF0D  F012         	goto	u3050
  9014   002416                     u3051:
  9015   002416  EF0E  F012         	goto	l1100
  9016   00241A                     u3050:
  9017   00241A  8019               	bsf	___fldiv@b^0,0,c
  9018   00241C                     l1100:
  9019   00241C  90D8               	bcf	status,0,c
  9020   00241E  362C               	rlcf	___fldiv@grs^0,f,c
  9021   002420  362D               	rlcf	(___fldiv@grs+1)^0,f,c
  9022   002422  362E               	rlcf	(___fldiv@grs+2)^0,f,c
  9023   002424  362F               	rlcf	(___fldiv@grs+3)^0,f,c
  9024   002426                     l3411:
  9025   002426  501D               	movf	___fldiv@a^0,w,c
  9026   002428  5C25               	subwf	___fldiv@rem^0,w,c
  9027   00242A  501E               	movf	(___fldiv@a+1)^0,w,c
  9028   00242C  5826               	subwfb	(___fldiv@rem+1)^0,w,c
  9029   00242E  501F               	movf	(___fldiv@a+2)^0,w,c
  9030   002430  5827               	subwfb	(___fldiv@rem+2)^0,w,c
  9031   002432  5020               	movf	(___fldiv@a+3)^0,w,c
  9032   002434  5828               	subwfb	(___fldiv@rem+3)^0,w,c
  9033   002436  A0D8               	btfss	status,0,c
  9034   002438  EF20  F012         	goto	u3061
  9035   00243C  EF22  F012         	goto	u3060
  9036   002440                     u3061:
  9037   002440  EF2B  F012         	goto	l3417
  9038   002444                     u3060:
  9039   002444  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
  9040   002446  501D               	movf	___fldiv@a^0,w,c
  9041   002448  5E25               	subwf	___fldiv@rem^0,f,c
  9042   00244A  501E               	movf	(___fldiv@a+1)^0,w,c
  9043   00244C  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
  9044   00244E  501F               	movf	(___fldiv@a+2)^0,w,c
  9045   002450  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
  9046   002452  5020               	movf	(___fldiv@a+3)^0,w,c
  9047   002454  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
  9048   002456                     l3417:
  9049   002456  2A31               	incf	___fldiv@aexp^0,f,c
  9050   002458                     l1097:
  9051   002458  0E19               	movlw	25
  9052   00245A  6431               	cpfsgt	___fldiv@aexp^0,c
  9053   00245C  EF32  F012         	goto	u3071
  9054   002460  EF34  F012         	goto	u3070
  9055   002464                     u3071:
  9056   002464  EFF4  F011         	goto	l3403
  9057   002468                     u3070:
  9058   002468  5025               	movf	___fldiv@rem^0,w,c
  9059   00246A  1026               	iorwf	(___fldiv@rem+1)^0,w,c
  9060   00246C  1027               	iorwf	(___fldiv@rem+2)^0,w,c
  9061   00246E  1028               	iorwf	(___fldiv@rem+3)^0,w,c
  9062   002470  B4D8               	btfsc	status,2,c
  9063   002472  EF3D  F012         	goto	u3081
  9064   002476  EF3F  F012         	goto	u3080
  9065   00247A                     u3081:
  9066   00247A  EF57  F012         	goto	l3429
  9067   00247E                     u3080:
  9068   00247E  802C               	bsf	___fldiv@grs^0,0,c
  9069   002480  EF57  F012         	goto	l3429
  9070   002484                     l3423:
  9071   002484  90D8               	bcf	status,0,c
  9072   002486  3619               	rlcf	___fldiv@b^0,f,c
  9073   002488  361A               	rlcf	(___fldiv@b+1)^0,f,c
  9074   00248A  361B               	rlcf	(___fldiv@b+2)^0,f,c
  9075   00248C  361C               	rlcf	(___fldiv@b+3)^0,f,c
  9076   00248E  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  9077   002490  EF4C  F012         	goto	u3091
  9078   002494  EF4E  F012         	goto	u3090
  9079   002498                     u3091:
  9080   002498  EF4F  F012         	goto	l1106
  9081   00249C                     u3090:
  9082   00249C  8019               	bsf	___fldiv@b^0,0,c
  9083   00249E                     l1106:
  9084   00249E  90D8               	bcf	status,0,c
  9085   0024A0  362C               	rlcf	___fldiv@grs^0,f,c
  9086   0024A2  362D               	rlcf	(___fldiv@grs+1)^0,f,c
  9087   0024A4  362E               	rlcf	(___fldiv@grs+2)^0,f,c
  9088   0024A6  362F               	rlcf	(___fldiv@grs+3)^0,f,c
  9089   0024A8  062A               	decf	___fldiv@new_exp^0,f,c
  9090   0024AA  A0D8               	btfss	status,0,c
  9091   0024AC  062B               	decf	(___fldiv@new_exp+1)^0,f,c
  9092   0024AE                     l3429:
  9093   0024AE  AE1B               	btfss	(___fldiv@b+2)^0,7,c
  9094   0024B0  EF5C  F012         	goto	u3101
  9095   0024B4  EF5E  F012         	goto	u3100
  9096   0024B8                     u3101:
  9097   0024B8  EF42  F012         	goto	l3423
  9098   0024BC                     u3100:
  9099   0024BC  0E00               	movlw	0
  9100   0024BE  6E31               	movwf	___fldiv@aexp^0,c
  9101   0024C0  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  9102   0024C2  EF65  F012         	goto	u3111
  9103   0024C6  EF67  F012         	goto	u3110
  9104   0024CA                     u3111:
  9105   0024CA  EF8B  F012         	goto	l1108
  9106   0024CE                     u3110:
  9107   0024CE  0EFF               	movlw	255
  9108   0024D0  142C               	andwf	___fldiv@grs^0,w,c
  9109   0024D2  6E21               	movwf	??___fldiv^0,c
  9110   0024D4  0EFF               	movlw	255
  9111   0024D6  142D               	andwf	(___fldiv@grs+1)^0,w,c
  9112   0024D8  6E22               	movwf	(??___fldiv+1)^0,c
  9113   0024DA  0EFF               	movlw	255
  9114   0024DC  142E               	andwf	(___fldiv@grs+2)^0,w,c
  9115   0024DE  6E23               	movwf	(??___fldiv+2)^0,c
  9116   0024E0  0E7F               	movlw	127
  9117   0024E2  142F               	andwf	(___fldiv@grs+3)^0,w,c
  9118   0024E4  6E24               	movwf	(??___fldiv+3)^0,c
  9119   0024E6  5021               	movf	??___fldiv^0,w,c
  9120   0024E8  1022               	iorwf	(??___fldiv+1)^0,w,c
  9121   0024EA  1023               	iorwf	(??___fldiv+2)^0,w,c
  9122   0024EC  1024               	iorwf	(??___fldiv+3)^0,w,c
  9123   0024EE  B4D8               	btfsc	status,2,c
  9124   0024F0  EF7C  F012         	goto	u3121
  9125   0024F4  EF7E  F012         	goto	u3120
  9126   0024F8                     u3121:
  9127   0024F8  EF82  F012         	goto	l1109
  9128   0024FC                     u3120:
  9129   0024FC                     l3437:
  9130   0024FC  0E01               	movlw	1
  9131   0024FE  6E31               	movwf	___fldiv@aexp^0,c
  9132   002500  EF8B  F012         	goto	l1108
  9133   002504                     l1109:
  9134   002504  A019               	btfss	___fldiv@b^0,0,c
  9135   002506  EF87  F012         	goto	u3131
  9136   00250A  EF89  F012         	goto	u3130
  9137   00250E                     u3131:
  9138   00250E  EF8B  F012         	goto	l1108
  9139   002512                     u3130:
  9140   002512  EF7E  F012         	goto	l3437
  9141   002516                     l1108:
  9142   002516  5031               	movf	___fldiv@aexp^0,w,c
  9143   002518  B4D8               	btfsc	status,2,c
  9144   00251A  EF91  F012         	goto	u3141
  9145   00251E  EF93  F012         	goto	u3140
  9146   002522                     u3141:
  9147   002522  EFB7  F012         	goto	l3449
  9148   002526                     u3140:
  9149   002526  0E01               	movlw	1
  9150   002528  2619               	addwf	___fldiv@b^0,f,c
  9151   00252A  0E00               	movlw	0
  9152   00252C  221A               	addwfc	(___fldiv@b+1)^0,f,c
  9153   00252E  221B               	addwfc	(___fldiv@b+2)^0,f,c
  9154   002530  221C               	addwfc	(___fldiv@b+3)^0,f,c
  9155   002532  A01C               	btfss	(___fldiv@b+3)^0,0,c
  9156   002534  EF9E  F012         	goto	u3151
  9157   002538  EFA0  F012         	goto	u3150
  9158   00253C                     u3151:
  9159   00253C  EFB7  F012         	goto	l3449
  9160   002540                     u3150:
  9161   002540  C019  F021         	movff	___fldiv@b,??___fldiv
  9162   002544  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
  9163   002548  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
  9164   00254C  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
  9165   002550  3424               	rlcf	(??___fldiv+3)^0,w,c
  9166   002552  3224               	rrcf	(??___fldiv+3)^0,f,c
  9167   002554  3223               	rrcf	(??___fldiv+2)^0,f,c
  9168   002556  3222               	rrcf	(??___fldiv+1)^0,f,c
  9169   002558  3221               	rrcf	??___fldiv^0,f,c
  9170   00255A  C021  F019         	movff	??___fldiv,___fldiv@b
  9171   00255E  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
  9172   002562  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
  9173   002566  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
  9174   00256A  4A2A               	infsnz	___fldiv@new_exp^0,f,c
  9175   00256C  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
  9176   00256E                     l3449:
  9177   00256E  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9178   002570  EFC2  F012         	goto	u3161
  9179   002574  502B               	movf	(___fldiv@new_exp+1)^0,w,c
  9180   002576  E108               	bnz	u3160
  9181   002578  282A               	incf	___fldiv@new_exp^0,w,c
  9182   00257A  A0D8               	btfss	status,0,c
  9183   00257C  EFC2  F012         	goto	u3161
  9184   002580  EFC4  F012         	goto	u3160
  9185   002584                     u3161:
  9186   002584  EFCF  F012         	goto	l3453
  9187   002588                     u3160:
  9188   002588  0E00               	movlw	0
  9189   00258A  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  9190   00258C  682A               	setf	___fldiv@new_exp^0,c
  9191   00258E  0E00               	movlw	0
  9192   002590  6E19               	movwf	___fldiv@b^0,c
  9193   002592  0E00               	movlw	0
  9194   002594  6E1A               	movwf	(___fldiv@b+1)^0,c
  9195   002596  0E00               	movlw	0
  9196   002598  6E1B               	movwf	(___fldiv@b+2)^0,c
  9197   00259A  0E00               	movlw	0
  9198   00259C  6E1C               	movwf	(___fldiv@b+3)^0,c
  9199   00259E                     l3453:
  9200   00259E  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9201   0025A0  EFDC  F012         	goto	u3170
  9202   0025A4  502B               	movf	(___fldiv@new_exp+1)^0,w,c
  9203   0025A6  E106               	bnz	u3171
  9204   0025A8  042A               	decf	___fldiv@new_exp^0,w,c
  9205   0025AA  B0D8               	btfsc	status,0,c
  9206   0025AC  EFDA  F012         	goto	u3171
  9207   0025B0  EFDC  F012         	goto	u3170
  9208   0025B4                     u3171:
  9209   0025B4  EFEA  F012         	goto	l3457
  9210   0025B8                     u3170:
  9211   0025B8  0E00               	movlw	0
  9212   0025BA  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  9213   0025BC  0E00               	movlw	0
  9214   0025BE  6E2A               	movwf	___fldiv@new_exp^0,c
  9215   0025C0  0E00               	movlw	0
  9216   0025C2  6E19               	movwf	___fldiv@b^0,c
  9217   0025C4  0E00               	movlw	0
  9218   0025C6  6E1A               	movwf	(___fldiv@b+1)^0,c
  9219   0025C8  0E00               	movlw	0
  9220   0025CA  6E1B               	movwf	(___fldiv@b+2)^0,c
  9221   0025CC  0E00               	movlw	0
  9222   0025CE  6E1C               	movwf	(___fldiv@b+3)^0,c
  9223   0025D0  0E00               	movlw	0
  9224   0025D2  6E29               	movwf	___fldiv@sign^0,c
  9225   0025D4                     l3457:
  9226   0025D4  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
  9227   0025D8  A030               	btfss	___fldiv@bexp^0,0,c
  9228   0025DA  EFF1  F012         	goto	u3181
  9229   0025DE  EFF3  F012         	goto	u3180
  9230   0025E2                     u3181:
  9231   0025E2  EFF6  F012         	goto	l3463
  9232   0025E6                     u3180:
  9233   0025E6  8E1B               	bsf	(___fldiv@b+2)^0,7,c
  9234   0025E8  EFF7  F012         	goto	l3465
  9235   0025EC                     l3463:
  9236   0025EC  9E1B               	bcf	(___fldiv@b+2)^0,7,c
  9237   0025EE                     l3465:
  9238   0025EE  90D8               	bcf	status,0,c
  9239   0025F0  3030               	rrcf	___fldiv@bexp^0,w,c
  9240   0025F2  6E1C               	movwf	(___fldiv@b+3)^0,c
  9241   0025F4  EFAD  F011         	goto	l3379
  9242   0025F8                     l1095:
  9243   0025F8  0012               	return		;funcret
  9244   0025FA                     __end_of___fldiv:
  9245                           	callstack 0
  9246                           
  9247 ;; *************** function _BlueMove *****************
  9248 ;; Defined at:
  9249 ;;		line 229 in file "dc_motor.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  9252 ;;		 -> motorL(9), 
  9253 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  9254 ;;		 -> motorR(9), 
  9255 ;; Auto vars:     Size  Location     Type
  9256 ;;		None
  9257 ;; Return value:  Size  Location     Type
  9258 ;;                  1    wreg      void 
  9259 ;; Registers used:
  9260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9261 ;; Tracked objects:
  9262 ;;		On entry : 0/0
  9263 ;;		On exit  : 0/0
  9264 ;;		Unchanged: 0/0
  9265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9266 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9269 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9270 ;;Total ram usage:        4 bytes
  9271 ;; Hardware stack levels used: 1
  9272 ;; Hardware stack levels required when called: 5
  9273 ;; This function calls:
  9274 ;;		_reverseDetect
  9275 ;;		_turnRight45
  9276 ;; This function is called by:
  9277 ;;		_main
  9278 ;; This function uses a non-reentrant model
  9279 ;;
  9280                           
  9281                           	psect	text50
  9282   003C88                     __ptext50:
  9283                           	callstack 0
  9284   003C88                     _BlueMove:
  9285                           	callstack 25
  9286   003C88                     
  9287                           ;dc_motor.c: 230:     reverseDetect(&motorL, &motorR);
  9288   003C88  0EF6               	movlw	low _motorL
  9289   003C8A  6E19               	movwf	reverseDetect@mL^0,c
  9290   003C8C  0E00               	movlw	high _motorL
  9291   003C8E  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  9292   003C90  0EED               	movlw	low _motorR
  9293   003C92  6E1B               	movwf	reverseDetect@mR^0,c
  9294   003C94  0E00               	movlw	high _motorR
  9295   003C96  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  9296   003C98  EC01  F01F         	call	_reverseDetect	;wreg free
  9297                           
  9298                           ;dc_motor.c: 232:     turnRight45(&motorL, &motorR);
  9299   003C9C  0EF6               	movlw	low _motorL
  9300   003C9E  6E19               	movwf	turnRight45@mL^0,c
  9301   003CA0  0E00               	movlw	high _motorL
  9302   003CA2  6E1A               	movwf	(turnRight45@mL+1)^0,c
  9303   003CA4  0EED               	movlw	low _motorR
  9304   003CA6  6E1B               	movwf	turnRight45@mR^0,c
  9305   003CA8  0E00               	movlw	high _motorR
  9306   003CAA  6E1C               	movwf	(turnRight45@mR+1)^0,c
  9307   003CAC  EC5A  F01F         	call	_turnRight45	;wreg free
  9308                           
  9309                           ;dc_motor.c: 233:     turnRight45(&motorL, &motorR);
  9310   003CB0  0EF6               	movlw	low _motorL
  9311   003CB2  6E19               	movwf	turnRight45@mL^0,c
  9312   003CB4  0E00               	movlw	high _motorL
  9313   003CB6  6E1A               	movwf	(turnRight45@mL+1)^0,c
  9314   003CB8  0EED               	movlw	low _motorR
  9315   003CBA  6E1B               	movwf	turnRight45@mR^0,c
  9316   003CBC  0E00               	movlw	high _motorR
  9317   003CBE  6E1C               	movwf	(turnRight45@mR+1)^0,c
  9318   003CC0  EC5A  F01F         	call	_turnRight45	;wreg free
  9319                           
  9320                           ;dc_motor.c: 234:     turnRight45(&motorL, &motorR);
  9321   003CC4  0EF6               	movlw	low _motorL
  9322   003CC6  6E19               	movwf	turnRight45@mL^0,c
  9323   003CC8  0E00               	movlw	high _motorL
  9324   003CCA  6E1A               	movwf	(turnRight45@mL+1)^0,c
  9325   003CCC  0EED               	movlw	low _motorR
  9326   003CCE  6E1B               	movwf	turnRight45@mR^0,c
  9327   003CD0  0E00               	movlw	high _motorR
  9328   003CD2  6E1C               	movwf	(turnRight45@mR+1)^0,c
  9329   003CD4  EC5A  F01F         	call	_turnRight45	;wreg free
  9330                           
  9331                           ;dc_motor.c: 235:     turnRight45(&motorL, &motorR);
  9332   003CD8  0EF6               	movlw	low _motorL
  9333   003CDA  6E19               	movwf	turnRight45@mL^0,c
  9334   003CDC  0E00               	movlw	high _motorL
  9335   003CDE  6E1A               	movwf	(turnRight45@mL+1)^0,c
  9336   003CE0  0EED               	movlw	low _motorR
  9337   003CE2  6E1B               	movwf	turnRight45@mR^0,c
  9338   003CE4  0E00               	movlw	high _motorR
  9339   003CE6  6E1C               	movwf	(turnRight45@mR+1)^0,c
  9340   003CE8  EC5A  F01F         	call	_turnRight45	;wreg free
  9341   003CEC  0012               	return		;funcret
  9342   003CEE                     __end_of_BlueMove:
  9343                           	callstack 0
  9344                           
  9345 ;; *************** function _turnRight45 *****************
  9346 ;; Defined at:
  9347 ;;		line 181 in file "dc_motor.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9350 ;;		 -> motorL(9), 
  9351 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9352 ;;		 -> motorR(9), 
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;		None
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  1    wreg      void 
  9357 ;; Registers used:
  9358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9364 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9366 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9367 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9368 ;;Total ram usage:        6 bytes
  9369 ;; Hardware stack levels used: 1
  9370 ;; Hardware stack levels required when called: 4
  9371 ;; This function calls:
  9372 ;;		_stop
  9373 ;;		_turnRight
  9374 ;; This function is called by:
  9375 ;;		_Colour_decider
  9376 ;;		_RedMove
  9377 ;;		_BlueMove
  9378 ;;		_YellowMove
  9379 ;;		_OrangeMove
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383                           	psect	text51
  9384   003EB4                     __ptext51:
  9385                           	callstack 0
  9386   003EB4                     _turnRight45:
  9387                           	callstack 25
  9388   003EB4                     
  9389                           ;dc_motor.c: 182:     turnRight(mL,mR);
  9390   003EB4  C019  F014         	movff	turnRight45@mL,turnRight@mL
  9391   003EB8  C01A  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  9392   003EBC  C01B  F016         	movff	turnRight45@mR,turnRight@mR
  9393   003EC0  C01C  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  9394   003EC4  ECB8  F01C         	call	_turnRight	;wreg free
  9395   003EC8                     
  9396                           ;dc_motor.c: 183:     _delay((unsigned long)((220)*(64000000/4000.0)));
  9397   003EC8  0E12               	movlw	18
  9398   003ECA  6E1E               	movwf	(??_turnRight45+1)^0,c
  9399   003ECC  0EDC               	movlw	220
  9400   003ECE  6E1D               	movwf	??_turnRight45^0,c
  9401   003ED0  0E60               	movlw	96
  9402   003ED2                     u4167:
  9403   003ED2  2EE8               	decfsz	wreg,f,c
  9404   003ED4  D7FE               	bra	u4167
  9405   003ED6  2E1D               	decfsz	??_turnRight45^0,f,c
  9406   003ED8  D7FC               	bra	u4167
  9407   003EDA  2E1E               	decfsz	(??_turnRight45+1)^0,f,c
  9408   003EDC  D7FA               	bra	u4167
  9409   003EDE                     
  9410                           ;dc_motor.c: 184:     stop(&motorL, &motorR);
  9411   003EDE  0EF6               	movlw	low _motorL
  9412   003EE0  6E14               	movwf	stop@mL^0,c
  9413   003EE2  0E00               	movlw	high _motorL
  9414   003EE4  6E15               	movwf	(stop@mL+1)^0,c
  9415   003EE6  0EED               	movlw	low _motorR
  9416   003EE8  6E16               	movwf	stop@mR^0,c
  9417   003EEA  0E00               	movlw	high _motorR
  9418   003EEC  6E17               	movwf	(stop@mR+1)^0,c
  9419   003EEE  ECCF  F01D         	call	_stop	;wreg free
  9420                           
  9421                           ;dc_motor.c: 185:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9422   003EF2  0E52               	movlw	82
  9423   003EF4  6E1E               	movwf	(??_turnRight45+1)^0,c
  9424   003EF6  0E2B               	movlw	43
  9425   003EF8  6E1D               	movwf	??_turnRight45^0,c
  9426   003EFA  0E00               	movlw	0
  9427   003EFC                     u4177:
  9428   003EFC  2EE8               	decfsz	wreg,f,c
  9429   003EFE  D7FE               	bra	u4177
  9430   003F00  2E1D               	decfsz	??_turnRight45^0,f,c
  9431   003F02  D7FC               	bra	u4177
  9432   003F04  2E1E               	decfsz	(??_turnRight45+1)^0,f,c
  9433   003F06  D7FA               	bra	u4177
  9434   003F08  D000               	nop2	
  9435   003F0A  0012               	return		;funcret
  9436   003F0C                     __end_of_turnRight45:
  9437                           	callstack 0
  9438                           
  9439 ;; *************** function _turnRight *****************
  9440 ;; Defined at:
  9441 ;;		line 128 in file "dc_motor.c"
  9442 ;; Parameters:    Size  Location     Type
  9443 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9444 ;;		 -> motorL(9), 
  9445 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9446 ;;		 -> motorR(9), 
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;		None
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  1    wreg      void 
  9451 ;; Registers used:
  9452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9460 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9461 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9462 ;;Total ram usage:        5 bytes
  9463 ;; Hardware stack levels used: 1
  9464 ;; Hardware stack levels required when called: 3
  9465 ;; This function calls:
  9466 ;;		_setMotorPWM
  9467 ;; This function is called by:
  9468 ;;		_turnRight45
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           	psect	text52
  9473   003970                     __ptext52:
  9474                           	callstack 0
  9475   003970                     _turnRight:
  9476                           	callstack 25
  9477   003970                     
  9478                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  9479   003970  EE20 F001          	lfsr	2,1
  9480   003974  5014               	movf	turnRight@mL^0,w,c
  9481   003976  26D9               	addwf	fsr2l,f,c
  9482   003978  5015               	movf	(turnRight@mL+1)^0,w,c
  9483   00397A  22DA               	addwfc	fsr2h,f,c
  9484   00397C  0E01               	movlw	1
  9485   00397E  6EDF               	movwf	indf2,c
  9486                           
  9487                           ;dc_motor.c: 131:     mR->direction =0;
  9488   003980  EE20 F001          	lfsr	2,1
  9489   003984  5016               	movf	turnRight@mR^0,w,c
  9490   003986  26D9               	addwf	fsr2l,f,c
  9491   003988  5017               	movf	(turnRight@mR+1)^0,w,c
  9492   00398A  22DA               	addwfc	fsr2h,f,c
  9493   00398C  0E00               	movlw	0
  9494   00398E  6EDF               	movwf	indf2,c
  9495                           
  9496                           ;dc_motor.c: 133:     while(mL->power<70 && mR->power<70){
  9497   003990  EFEA  F01C         	goto	l3019
  9498   003994                     l3011:
  9499                           
  9500                           ;dc_motor.c: 135:         mL->power+=10;
  9501   003994  C014  FFD9         	movff	turnRight@mL,fsr2l
  9502   003998  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9503   00399C  0E0A               	movlw	10
  9504   00399E  26DF               	addwf	indf2,f,c
  9505                           
  9506                           ;dc_motor.c: 136:         mR->power+=10;
  9507   0039A0  C016  FFD9         	movff	turnRight@mR,fsr2l
  9508   0039A4  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9509   0039A8  0E0A               	movlw	10
  9510   0039AA  26DF               	addwf	indf2,f,c
  9511   0039AC                     
  9512                           ;dc_motor.c: 138:         setMotorPWM(mL);
  9513   0039AC  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  9514   0039B0  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  9515   0039B4  ECD7  F018         	call	_setMotorPWM	;wreg free
  9516   0039B8                     
  9517                           ;dc_motor.c: 139:         setMotorPWM(mR);
  9518   0039B8  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  9519   0039BC  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  9520   0039C0  ECD7  F018         	call	_setMotorPWM	;wreg free
  9521   0039C4                     
  9522                           ;dc_motor.c: 141:         _delay((unsigned long)((1)*(64000000/4000.0)));
  9523   0039C4  0E15               	movlw	21
  9524   0039C6  6E18               	movwf	??_turnRight^0,c
  9525   0039C8  0EC6               	movlw	198
  9526   0039CA                     u4187:
  9527   0039CA  2EE8               	decfsz	wreg,f,c
  9528   0039CC  D7FE               	bra	u4187
  9529   0039CE  2E18               	decfsz	??_turnRight^0,f,c
  9530   0039D0  D7FC               	bra	u4187
  9531   0039D2  D000               	nop2	
  9532   0039D4                     l3019:
  9533                           
  9534                           ;dc_motor.c: 133:     while(mL->power<70 && mR->power<70){
  9535   0039D4  C014  FFD9         	movff	turnRight@mL,fsr2l
  9536   0039D8  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9537   0039DC  0E46               	movlw	70
  9538   0039DE  60DF               	cpfslt	indf2,c
  9539   0039E0  EFF4  F01C         	goto	u2491
  9540   0039E4  EFF6  F01C         	goto	u2490
  9541   0039E8                     u2491:
  9542   0039E8  EF02  F01D         	goto	l461
  9543   0039EC                     u2490:
  9544   0039EC  C016  FFD9         	movff	turnRight@mR,fsr2l
  9545   0039F0  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9546   0039F4  0E45               	movlw	69
  9547   0039F6  64DF               	cpfsgt	indf2,c
  9548   0039F8  EF00  F01D         	goto	u2501
  9549   0039FC  EF02  F01D         	goto	u2500
  9550   003A00                     u2501:
  9551   003A00  EFCA  F01C         	goto	l3011
  9552   003A04                     u2500:
  9553   003A04                     l461:
  9554   003A04  0012               	return		;funcret
  9555   003A06                     __end_of_turnRight:
  9556                           	callstack 0
  9557                           
  9558 ;; *************** function _reverseDetect *****************
  9559 ;; Defined at:
  9560 ;;		line 195 in file "dc_motor.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9563 ;;		 -> motorL(9), 
  9564 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9565 ;;		 -> motorR(9), 
  9566 ;; Auto vars:     Size  Location     Type
  9567 ;;		None
  9568 ;; Return value:  Size  Location     Type
  9569 ;;                  1    wreg      void 
  9570 ;; Registers used:
  9571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9572 ;; Tracked objects:
  9573 ;;		On entry : 0/0
  9574 ;;		On exit  : 0/0
  9575 ;;		Unchanged: 0/0
  9576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9580 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9581 ;;Total ram usage:        6 bytes
  9582 ;; Hardware stack levels used: 1
  9583 ;; Hardware stack levels required when called: 4
  9584 ;; This function calls:
  9585 ;;		_fullSpeedBack
  9586 ;;		_stop
  9587 ;; This function is called by:
  9588 ;;		_Colour_decider
  9589 ;;		_RedMove
  9590 ;;		_GreenMove
  9591 ;;		_BlueMove
  9592 ;;		_YellowMove
  9593 ;;		_PinkMove
  9594 ;;		_OrangeMove
  9595 ;;		_LightBlueMove
  9596 ;; This function uses a non-reentrant model
  9597 ;;
  9598                           
  9599                           	psect	text53
  9600   003E02                     __ptext53:
  9601                           	callstack 0
  9602   003E02                     _reverseDetect:
  9603                           	callstack 25
  9604   003E02                     
  9605                           ;dc_motor.c: 196:     fullSpeedBack(mL,mR);
  9606   003E02  C019  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
  9607   003E06  C01A  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
  9608   003E0A  C01B  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
  9609   003E0E  C01C  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
  9610   003E12  EC03  F01D         	call	_fullSpeedBack	;wreg free
  9611   003E16                     
  9612                           ;dc_motor.c: 197:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9613   003E16  0E11               	movlw	17
  9614   003E18  6E1E               	movwf	(??_reverseDetect+1)^0,c
  9615   003E1A  0E3C               	movlw	60
  9616   003E1C  6E1D               	movwf	??_reverseDetect^0,c
  9617   003E1E  0ECB               	movlw	203
  9618   003E20                     u4197:
  9619   003E20  2EE8               	decfsz	wreg,f,c
  9620   003E22  D7FE               	bra	u4197
  9621   003E24  2E1D               	decfsz	??_reverseDetect^0,f,c
  9622   003E26  D7FC               	bra	u4197
  9623   003E28  2E1E               	decfsz	(??_reverseDetect+1)^0,f,c
  9624   003E2A  D7FA               	bra	u4197
  9625   003E2C  F000               	nop	
  9626   003E2E                     
  9627                           ;dc_motor.c: 198:     stop(&motorL, &motorR);
  9628   003E2E  0EF6               	movlw	low _motorL
  9629   003E30  6E14               	movwf	stop@mL^0,c
  9630   003E32  0E00               	movlw	high _motorL
  9631   003E34  6E15               	movwf	(stop@mL+1)^0,c
  9632   003E36  0EED               	movlw	low _motorR
  9633   003E38  6E16               	movwf	stop@mR^0,c
  9634   003E3A  0E00               	movlw	high _motorR
  9635   003E3C  6E17               	movwf	(stop@mR+1)^0,c
  9636   003E3E  ECCF  F01D         	call	_stop	;wreg free
  9637                           
  9638                           ;dc_motor.c: 199:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9639   003E42  0E52               	movlw	82
  9640   003E44  6E1E               	movwf	(??_reverseDetect+1)^0,c
  9641   003E46  0E2B               	movlw	43
  9642   003E48  6E1D               	movwf	??_reverseDetect^0,c
  9643   003E4A  0E00               	movlw	0
  9644   003E4C                     u4207:
  9645   003E4C  2EE8               	decfsz	wreg,f,c
  9646   003E4E  D7FE               	bra	u4207
  9647   003E50  2E1D               	decfsz	??_reverseDetect^0,f,c
  9648   003E52  D7FC               	bra	u4207
  9649   003E54  2E1E               	decfsz	(??_reverseDetect+1)^0,f,c
  9650   003E56  D7FA               	bra	u4207
  9651   003E58  D000               	nop2	
  9652   003E5A  0012               	return		;funcret
  9653   003E5C                     __end_of_reverseDetect:
  9654                           	callstack 0
  9655                           
  9656 ;; *************** function _stop *****************
  9657 ;; Defined at:
  9658 ;;		line 92 in file "dc_motor.c"
  9659 ;; Parameters:    Size  Location     Type
  9660 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9661 ;;		 -> motorL(9), 
  9662 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9663 ;;		 -> motorR(9), 
  9664 ;; Auto vars:     Size  Location     Type
  9665 ;;		None
  9666 ;; Return value:  Size  Location     Type
  9667 ;;                  1    wreg      void 
  9668 ;; Registers used:
  9669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9670 ;; Tracked objects:
  9671 ;;		On entry : 0/0
  9672 ;;		On exit  : 0/0
  9673 ;;		Unchanged: 0/0
  9674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9677 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9678 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9679 ;;Total ram usage:        5 bytes
  9680 ;; Hardware stack levels used: 1
  9681 ;; Hardware stack levels required when called: 3
  9682 ;; This function calls:
  9683 ;;		_setMotorPWM
  9684 ;; This function is called by:
  9685 ;;		_main
  9686 ;;		_turnRight45
  9687 ;;		_turnLeft45
  9688 ;;		_reverseDetect
  9689 ;;		_reverseOneBlock
  9690 ;; This function uses a non-reentrant model
  9691 ;;
  9692                           
  9693                           	psect	text54
  9694   003B9E                     __ptext54:
  9695                           	callstack 0
  9696   003B9E                     _stop:
  9697                           	callstack 27
  9698   003B9E                     
  9699                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
  9700   003B9E  EFF1  F01D         	goto	l2991
  9701   003BA2                     l2983:
  9702                           
  9703                           ;dc_motor.c: 96:         mL->power-=10;
  9704   003BA2  C014  FFD9         	movff	stop@mL,fsr2l
  9705   003BA6  C015  FFDA         	movff	stop@mL+1,fsr2h
  9706   003BAA  0E0A               	movlw	10
  9707   003BAC  5EDF               	subwf	indf2,f,c
  9708                           
  9709                           ;dc_motor.c: 97:         mR->power-=10;
  9710   003BAE  C016  FFD9         	movff	stop@mR,fsr2l
  9711   003BB2  C017  FFDA         	movff	stop@mR+1,fsr2h
  9712   003BB6  0E0A               	movlw	10
  9713   003BB8  5EDF               	subwf	indf2,f,c
  9714   003BBA                     
  9715                           ;dc_motor.c: 102:         setMotorPWM(mL);
  9716   003BBA  C014  F00E         	movff	stop@mL,setMotorPWM@m
  9717   003BBE  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  9718   003BC2  ECD7  F018         	call	_setMotorPWM	;wreg free
  9719   003BC6                     
  9720                           ;dc_motor.c: 103:         setMotorPWM(mR);
  9721   003BC6  C016  F00E         	movff	stop@mR,setMotorPWM@m
  9722   003BCA  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  9723   003BCE  ECD7  F018         	call	_setMotorPWM	;wreg free
  9724   003BD2                     
  9725                           ;dc_motor.c: 105:         _delay((unsigned long)((1)*(64000000/4000.0)));
  9726   003BD2  0E15               	movlw	21
  9727   003BD4  6E18               	movwf	??_stop^0,c
  9728   003BD6  0EC6               	movlw	198
  9729   003BD8                     u4217:
  9730   003BD8  2EE8               	decfsz	wreg,f,c
  9731   003BDA  D7FE               	bra	u4217
  9732   003BDC  2E18               	decfsz	??_stop^0,f,c
  9733   003BDE  D7FC               	bra	u4217
  9734   003BE0  D000               	nop2	
  9735   003BE2                     l2991:
  9736                           
  9737                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
  9738   003BE2  C014  FFD9         	movff	stop@mL,fsr2l
  9739   003BE6  C015  FFDA         	movff	stop@mL+1,fsr2h
  9740   003BEA  50DF               	movf	indf2,w,c
  9741   003BEC  A4D8               	btfss	status,2,c
  9742   003BEE  EFFB  F01D         	goto	u2451
  9743   003BF2  EFFD  F01D         	goto	u2450
  9744   003BF6                     u2451:
  9745   003BF6  EFD1  F01D         	goto	l2983
  9746   003BFA                     u2450:
  9747   003BFA  C016  FFD9         	movff	stop@mR,fsr2l
  9748   003BFE  C017  FFDA         	movff	stop@mR+1,fsr2h
  9749   003C02  50DF               	movf	indf2,w,c
  9750   003C04  A4D8               	btfss	status,2,c
  9751   003C06  EF07  F01E         	goto	u2461
  9752   003C0A  EF09  F01E         	goto	u2460
  9753   003C0E                     u2461:
  9754   003C0E  EFD1  F01D         	goto	l2983
  9755   003C12                     u2460:
  9756   003C12  0012               	return		;funcret
  9757   003C14                     __end_of_stop:
  9758                           	callstack 0
  9759                           
  9760 ;; *************** function _fullSpeedBack *****************
  9761 ;; Defined at:
  9762 ;;		line 164 in file "dc_motor.c"
  9763 ;; Parameters:    Size  Location     Type
  9764 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9765 ;;		 -> motorL(9), 
  9766 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9767 ;;		 -> motorR(9), 
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;		None
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  1    wreg      void 
  9772 ;; Registers used:
  9773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9782 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9783 ;;Total ram usage:        5 bytes
  9784 ;; Hardware stack levels used: 1
  9785 ;; Hardware stack levels required when called: 3
  9786 ;; This function calls:
  9787 ;;		_setMotorPWM
  9788 ;; This function is called by:
  9789 ;;		_reverseDetect
  9790 ;;		_reverseOneBlock
  9791 ;; This function uses a non-reentrant model
  9792 ;;
  9793                           
  9794                           	psect	text55
  9795   003A06                     __ptext55:
  9796                           	callstack 0
  9797   003A06                     _fullSpeedBack:
  9798                           	callstack 25
  9799   003A06                     
  9800                           ;dc_motor.c: 164: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 165: {;dc_motor.c: 167:     mL->direction =0;
  9801   003A06  EE20 F001          	lfsr	2,1
  9802   003A0A  5014               	movf	fullSpeedBack@mL^0,w,c
  9803   003A0C  26D9               	addwf	fsr2l,f,c
  9804   003A0E  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
  9805   003A10  22DA               	addwfc	fsr2h,f,c
  9806   003A12  0E00               	movlw	0
  9807   003A14  6EDF               	movwf	indf2,c
  9808                           
  9809                           ;dc_motor.c: 168:     mR->direction =0;
  9810   003A16  EE20 F001          	lfsr	2,1
  9811   003A1A  5016               	movf	fullSpeedBack@mR^0,w,c
  9812   003A1C  26D9               	addwf	fsr2l,f,c
  9813   003A1E  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
  9814   003A20  22DA               	addwfc	fsr2h,f,c
  9815   003A22  0E00               	movlw	0
  9816   003A24  6EDF               	movwf	indf2,c
  9817                           
  9818                           ;dc_motor.c: 169:     while (mL->power < 50 && mR->power <50){
  9819   003A26  EF35  F01D         	goto	l3033
  9820   003A2A                     l3025:
  9821                           
  9822                           ;dc_motor.c: 171:         mL->power+=10;
  9823   003A2A  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  9824   003A2E  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  9825   003A32  0E0A               	movlw	10
  9826   003A34  26DF               	addwf	indf2,f,c
  9827                           
  9828                           ;dc_motor.c: 172:         mR->power+=10;
  9829   003A36  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  9830   003A3A  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  9831   003A3E  0E0A               	movlw	10
  9832   003A40  26DF               	addwf	indf2,f,c
  9833   003A42                     
  9834                           ;dc_motor.c: 174:         setMotorPWM(mL);
  9835   003A42  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
  9836   003A46  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  9837   003A4A  ECD7  F018         	call	_setMotorPWM	;wreg free
  9838   003A4E                     
  9839                           ;dc_motor.c: 175:         setMotorPWM(mR);
  9840   003A4E  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
  9841   003A52  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  9842   003A56  ECD7  F018         	call	_setMotorPWM	;wreg free
  9843   003A5A                     
  9844                           ;dc_motor.c: 177:         _delay((unsigned long)((1)*(64000000/4000.0)));
  9845   003A5A  0E15               	movlw	21
  9846   003A5C  6E18               	movwf	??_fullSpeedBack^0,c
  9847   003A5E  0EC6               	movlw	198
  9848   003A60                     u4227:
  9849   003A60  2EE8               	decfsz	wreg,f,c
  9850   003A62  D7FE               	bra	u4227
  9851   003A64  2E18               	decfsz	??_fullSpeedBack^0,f,c
  9852   003A66  D7FC               	bra	u4227
  9853   003A68  D000               	nop2	
  9854   003A6A                     l3033:
  9855                           
  9856                           ;dc_motor.c: 169:     while (mL->power < 50 && mR->power <50){
  9857   003A6A  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  9858   003A6E  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  9859   003A72  0E32               	movlw	50
  9860   003A74  60DF               	cpfslt	indf2,c
  9861   003A76  EF3F  F01D         	goto	u2511
  9862   003A7A  EF41  F01D         	goto	u2510
  9863   003A7E                     u2511:
  9864   003A7E  EF4D  F01D         	goto	l477
  9865   003A82                     u2510:
  9866   003A82  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  9867   003A86  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  9868   003A8A  0E31               	movlw	49
  9869   003A8C  64DF               	cpfsgt	indf2,c
  9870   003A8E  EF4B  F01D         	goto	u2521
  9871   003A92  EF4D  F01D         	goto	u2520
  9872   003A96                     u2521:
  9873   003A96  EF15  F01D         	goto	l3025
  9874   003A9A                     u2520:
  9875   003A9A                     l477:
  9876   003A9A  0012               	return		;funcret
  9877   003A9C                     __end_of_fullSpeedBack:
  9878                           	callstack 0
  9879                           
  9880 ;; *************** function _setMotorPWM *****************
  9881 ;; Defined at:
  9882 ;;		line 67 in file "dc_motor.c"
  9883 ;; Parameters:    Size  Location     Type
  9884 ;;  m               2   13[COMRAM] PTR struct DC_motor
  9885 ;;		 -> motorR(9), motorL(9), 
  9886 ;; Auto vars:     Size  Location     Type
  9887 ;;  negDuty         1   18[COMRAM] unsigned char 
  9888 ;;  posDuty         1   17[COMRAM] unsigned char 
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  1    wreg      void 
  9891 ;; Registers used:
  9892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9893 ;; Tracked objects:
  9894 ;;		On entry : 0/0
  9895 ;;		On exit  : 0/0
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9899 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9900 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9901 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9902 ;;Total ram usage:        6 bytes
  9903 ;; Hardware stack levels used: 1
  9904 ;; Hardware stack levels required when called: 2
  9905 ;; This function calls:
  9906 ;;		___lwdiv
  9907 ;;		___wmul
  9908 ;; This function is called by:
  9909 ;;		_stop
  9910 ;;		_turnLeft
  9911 ;;		_turnRight
  9912 ;;		_fullSpeedAhead
  9913 ;;		_fullSpeedBack
  9914 ;; This function uses a non-reentrant model
  9915 ;;
  9916                           
  9917                           	psect	text56
  9918   0031AE                     __ptext56:
  9919                           	callstack 0
  9920   0031AE                     _setMotorPWM:
  9921                           	callstack 27
  9922   0031AE                     
  9923                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
  9924   0031AE  EE20 F002          	lfsr	2,2
  9925   0031B2  500E               	movf	setMotorPWM@m^0,w,c
  9926   0031B4  26D9               	addwf	fsr2l,f,c
  9927   0031B6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9928   0031B8  22DA               	addwfc	fsr2h,f,c
  9929   0031BA  50DF               	movf	indf2,w,c
  9930   0031BC  B4D8               	btfsc	status,2,c
  9931   0031BE  EFE3  F018         	goto	u2311
  9932   0031C2  EFE5  F018         	goto	u2310
  9933   0031C6                     u2311:
  9934   0031C6  EF19  F019         	goto	l2889
  9935   0031CA                     u2310:
  9936   0031CA                     
  9937                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  9938   0031CA  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9939   0031CE  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9940   0031D2  50DF               	movf	indf2,w,c
  9941   0031D4  6E10               	movwf	??_setMotorPWM^0,c
  9942   0031D6  5010               	movf	??_setMotorPWM^0,w,c
  9943   0031D8  6E01               	movwf	___wmul@multiplier^0,c
  9944   0031DA  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9945   0031DC  EE20 F003          	lfsr	2,3
  9946   0031E0  500E               	movf	setMotorPWM@m^0,w,c
  9947   0031E2  26D9               	addwf	fsr2l,f,c
  9948   0031E4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9949   0031E6  22DA               	addwfc	fsr2h,f,c
  9950   0031E8  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9951   0031EC  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9952   0031F0  EC48  F022         	call	___wmul	;wreg free
  9953   0031F4  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9954   0031F8  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9955   0031FC  0E00               	movlw	0
  9956   0031FE  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9957   003200  0E64               	movlw	100
  9958   003202  6E09               	movwf	___lwdiv@divisor^0,c
  9959   003204  EC0A  F01E         	call	___lwdiv	;wreg free
  9960   003208  EE20 F003          	lfsr	2,3
  9961   00320C  500E               	movf	setMotorPWM@m^0,w,c
  9962   00320E  26D9               	addwf	fsr2l,f,c
  9963   003210  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9964   003212  22DA               	addwfc	fsr2h,f,c
  9965   003214  50DF               	movf	indf2,w,c
  9966   003216  6E11               	movwf	(??_setMotorPWM+1)^0,c
  9967   003218  5007               	movf	?___lwdiv^0,w,c
  9968   00321A  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  9969   00321C  6E12               	movwf	setMotorPWM@posDuty^0,c
  9970   00321E                     
  9971                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
  9972   00321E  EE20 F003          	lfsr	2,3
  9973   003222  500E               	movf	setMotorPWM@m^0,w,c
  9974   003224  26D9               	addwf	fsr2l,f,c
  9975   003226  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9976   003228  22DA               	addwfc	fsr2h,f,c
  9977   00322A  50DF               	movf	indf2,w,c
  9978   00322C  6E13               	movwf	setMotorPWM@negDuty^0,c
  9979                           
  9980                           ;dc_motor.c: 74:     }
  9981   00322E  EF3C  F019         	goto	l2893
  9982   003232                     l2889:
  9983                           
  9984                           ;dc_motor.c: 76:         posDuty=0;
  9985   003232  0E00               	movlw	0
  9986   003234  6E12               	movwf	setMotorPWM@posDuty^0,c
  9987   003236                     
  9988                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9989   003236  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9990   00323A  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9991   00323E  50DF               	movf	indf2,w,c
  9992   003240  6E10               	movwf	??_setMotorPWM^0,c
  9993   003242  5010               	movf	??_setMotorPWM^0,w,c
  9994   003244  6E01               	movwf	___wmul@multiplier^0,c
  9995   003246  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9996   003248  EE20 F003          	lfsr	2,3
  9997   00324C  500E               	movf	setMotorPWM@m^0,w,c
  9998   00324E  26D9               	addwf	fsr2l,f,c
  9999   003250  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10000   003252  22DA               	addwfc	fsr2h,f,c
 10001   003254  CFDE F003          	movff	postinc2,___wmul@multiplicand
 10002   003258  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 10003   00325C  EC48  F022         	call	___wmul	;wreg free
 10004   003260  C001  F007         	movff	?___wmul,___lwdiv@dividend
 10005   003264  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 10006   003268  0E00               	movlw	0
 10007   00326A  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 10008   00326C  0E64               	movlw	100
 10009   00326E  6E09               	movwf	___lwdiv@divisor^0,c
 10010   003270  EC0A  F01E         	call	___lwdiv	;wreg free
 10011   003274  5007               	movf	?___lwdiv^0,w,c
 10012   003276  6E13               	movwf	setMotorPWM@negDuty^0,c
 10013   003278                     l2893:
 10014                           
 10015                           ;dc_motor.c: 80:     if (m->direction) {
 10016   003278  EE20 F001          	lfsr	2,1
 10017   00327C  500E               	movf	setMotorPWM@m^0,w,c
 10018   00327E  26D9               	addwf	fsr2l,f,c
 10019   003280  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10020   003282  22DA               	addwfc	fsr2h,f,c
 10021   003284  50DF               	movf	indf2,w,c
 10022   003286  B4D8               	btfsc	status,2,c
 10023   003288  EF48  F019         	goto	u2321
 10024   00328C  EF4A  F019         	goto	u2320
 10025   003290                     u2321:
 10026   003290  EF6C  F019         	goto	l2897
 10027   003294                     u2320:
 10028   003294                     
 10029                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=negDuty;
 10030   003294  EE20 F005          	lfsr	2,5
 10031   003298  500E               	movf	setMotorPWM@m^0,w,c
 10032   00329A  26D9               	addwf	fsr2l,f,c
 10033   00329C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10034   00329E  22DA               	addwfc	fsr2h,f,c
 10035   0032A0  CFDE F010          	movff	postinc2,??_setMotorPWM
 10036   0032A4  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10037   0032A8  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10038   0032AC  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10039   0032B0  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10040                           
 10041                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=posDuty;
 10042   0032B4  EE20 F007          	lfsr	2,7
 10043   0032B8  500E               	movf	setMotorPWM@m^0,w,c
 10044   0032BA  26D9               	addwf	fsr2l,f,c
 10045   0032BC  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10046   0032BE  22DA               	addwfc	fsr2h,f,c
 10047   0032C0  CFDE F010          	movff	postinc2,??_setMotorPWM
 10048   0032C4  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10049   0032C8  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10050   0032CC  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10051   0032D0  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10052                           
 10053                           ;dc_motor.c: 85:     } else {
 10054   0032D4  EF8C  F019         	goto	l439
 10055   0032D8                     l2897:
 10056                           
 10057                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=posDuty;
 10058   0032D8  EE20 F005          	lfsr	2,5
 10059   0032DC  500E               	movf	setMotorPWM@m^0,w,c
 10060   0032DE  26D9               	addwf	fsr2l,f,c
 10061   0032E0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10062   0032E2  22DA               	addwfc	fsr2h,f,c
 10063   0032E4  CFDE F010          	movff	postinc2,??_setMotorPWM
 10064   0032E8  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10065   0032EC  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10066   0032F0  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10067   0032F4  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10068                           
 10069                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=negDuty;
 10070   0032F8  EE20 F007          	lfsr	2,7
 10071   0032FC  500E               	movf	setMotorPWM@m^0,w,c
 10072   0032FE  26D9               	addwf	fsr2l,f,c
 10073   003300  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10074   003302  22DA               	addwfc	fsr2h,f,c
 10075   003304  CFDE F010          	movff	postinc2,??_setMotorPWM
 10076   003308  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10077   00330C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10078   003310  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10079   003314  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10080   003318                     l439:
 10081   003318  0012               	return		;funcret
 10082   00331A                     __end_of_setMotorPWM:
 10083                           	callstack 0
 10084                           
 10085 ;; *************** function ___wmul *****************
 10086 ;; Defined at:
 10087 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 10088 ;; Parameters:    Size  Location     Type
 10089 ;;  multiplier      2    0[COMRAM] unsigned int 
 10090 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10091 ;; Auto vars:     Size  Location     Type
 10092 ;;  product         2    4[COMRAM] unsigned int 
 10093 ;; Return value:  Size  Location     Type
 10094 ;;                  2    0[COMRAM] unsigned int 
 10095 ;; Registers used:
 10096 ;;		wreg, status,2, status,0, prodl, prodh
 10097 ;; Tracked objects:
 10098 ;;		On entry : 0/0
 10099 ;;		On exit  : 0/0
 10100 ;;		Unchanged: 0/0
 10101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10102 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10105 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10106 ;;Total ram usage:        6 bytes
 10107 ;; Hardware stack levels used: 1
 10108 ;; Hardware stack levels required when called: 1
 10109 ;; This function calls:
 10110 ;;		Nothing
 10111 ;; This function is called by:
 10112 ;;		_setMotorPWM
 10113 ;; This function uses a non-reentrant model
 10114 ;;
 10115                           
 10116                           	psect	text57
 10117   004490                     __ptext57:
 10118                           	callstack 0
 10119   004490                     ___wmul:
 10120                           	callstack 27
 10121   004490  5001               	movf	___wmul@multiplier^0,w,c
 10122   004492  0203               	mulwf	___wmul@multiplicand^0,c
 10123   004494  CFF3 F005          	movff	prodl,___wmul@product
 10124   004498  CFF4 F006          	movff	prodh,___wmul@product+1
 10125   00449C  5001               	movf	___wmul@multiplier^0,w,c
 10126   00449E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10127   0044A0  50F3               	movf	243,w,c
 10128   0044A2  2606               	addwf	(___wmul@product+1)^0,f,c
 10129   0044A4  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10130   0044A6  0203               	mulwf	___wmul@multiplicand^0,c
 10131   0044A8  50F3               	movf	243,w,c
 10132   0044AA  2606               	addwf	(___wmul@product+1)^0,f,c
 10133   0044AC  C005  F001         	movff	___wmul@product,?___wmul
 10134   0044B0  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10135   0044B4  0012               	return		;funcret
 10136   0044B6                     __end_of___wmul:
 10137                           	callstack 0
 10138                           
 10139 ;; *************** function ___lwdiv *****************
 10140 ;; Defined at:
 10141 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 10142 ;; Parameters:    Size  Location     Type
 10143 ;;  dividend        2    6[COMRAM] unsigned int 
 10144 ;;  divisor         2    8[COMRAM] unsigned int 
 10145 ;; Auto vars:     Size  Location     Type
 10146 ;;  quotient        2   10[COMRAM] unsigned int 
 10147 ;;  counter         1   12[COMRAM] unsigned char 
 10148 ;; Return value:  Size  Location     Type
 10149 ;;                  2    6[COMRAM] unsigned int 
 10150 ;; Registers used:
 10151 ;;		wreg, status,2, status,0
 10152 ;; Tracked objects:
 10153 ;;		On entry : 0/0
 10154 ;;		On exit  : 0/0
 10155 ;;		Unchanged: 0/0
 10156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10157 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10158 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10160 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10161 ;;Total ram usage:        7 bytes
 10162 ;; Hardware stack levels used: 1
 10163 ;; Hardware stack levels required when called: 1
 10164 ;; This function calls:
 10165 ;;		Nothing
 10166 ;; This function is called by:
 10167 ;;		_setMotorPWM
 10168 ;; This function uses a non-reentrant model
 10169 ;;
 10170                           
 10171                           	psect	text58
 10172   003C14                     __ptext58:
 10173                           	callstack 0
 10174   003C14                     ___lwdiv:
 10175                           	callstack 27
 10176   003C14  0E00               	movlw	0
 10177   003C16  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 10178   003C18  0E00               	movlw	0
 10179   003C1A  6E0B               	movwf	___lwdiv@quotient^0,c
 10180   003C1C  5009               	movf	___lwdiv@divisor^0,w,c
 10181   003C1E  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10182   003C20  B4D8               	btfsc	status,2,c
 10183   003C22  EF15  F01E         	goto	u2231
 10184   003C26  EF17  F01E         	goto	u2230
 10185   003C2A                     u2231:
 10186   003C2A  EF3F  F01E         	goto	l1004
 10187   003C2E                     u2230:
 10188   003C2E  0E01               	movlw	1
 10189   003C30  6E0D               	movwf	___lwdiv@counter^0,c
 10190   003C32  EF1F  F01E         	goto	l2847
 10191   003C36                     l2845:
 10192   003C36  90D8               	bcf	status,0,c
 10193   003C38  3609               	rlcf	___lwdiv@divisor^0,f,c
 10194   003C3A  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10195   003C3C  2A0D               	incf	___lwdiv@counter^0,f,c
 10196   003C3E                     l2847:
 10197   003C3E  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 10198   003C40  EF24  F01E         	goto	u2241
 10199   003C44  EF26  F01E         	goto	u2240
 10200   003C48                     u2241:
 10201   003C48  EF1B  F01E         	goto	l2845
 10202   003C4C                     u2240:
 10203   003C4C                     l2849:
 10204   003C4C  90D8               	bcf	status,0,c
 10205   003C4E  360B               	rlcf	___lwdiv@quotient^0,f,c
 10206   003C50  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10207   003C52  5009               	movf	___lwdiv@divisor^0,w,c
 10208   003C54  5C07               	subwf	___lwdiv@dividend^0,w,c
 10209   003C56  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10210   003C58  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10211   003C5A  A0D8               	btfss	status,0,c
 10212   003C5C  EF32  F01E         	goto	u2251
 10213   003C60  EF34  F01E         	goto	u2250
 10214   003C64                     u2251:
 10215   003C64  EF39  F01E         	goto	l2857
 10216   003C68                     u2250:
 10217   003C68  5009               	movf	___lwdiv@divisor^0,w,c
 10218   003C6A  5E07               	subwf	___lwdiv@dividend^0,f,c
 10219   003C6C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10220   003C6E  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10221   003C70  800B               	bsf	___lwdiv@quotient^0,0,c
 10222   003C72                     l2857:
 10223   003C72  90D8               	bcf	status,0,c
 10224   003C74  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10225   003C76  3209               	rrcf	___lwdiv@divisor^0,f,c
 10226   003C78  2E0D               	decfsz	___lwdiv@counter^0,f,c
 10227   003C7A  EF26  F01E         	goto	l2849
 10228   003C7E                     l1004:
 10229   003C7E  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 10230   003C82  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10231   003C86  0012               	return		;funcret
 10232   003C88                     __end_of___lwdiv:
 10233                           	callstack 0
 10234                           
 10235 ;; *************** function _HighISR *****************
 10236 ;; Defined at:
 10237 ;;		line 59 in file "interrupts.c"
 10238 ;; Parameters:    Size  Location     Type
 10239 ;;		None
 10240 ;; Auto vars:     Size  Location     Type
 10241 ;;		None
 10242 ;; Return value:  Size  Location     Type
 10243 ;;                  1    wreg      void 
 10244 ;; Registers used:
 10245 ;;		None
 10246 ;; Tracked objects:
 10247 ;;		On entry : 0/0
 10248 ;;		On exit  : 0/0
 10249 ;;		Unchanged: 0/0
 10250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10255 ;;Total ram usage:        0 bytes
 10256 ;; Hardware stack levels used: 1
 10257 ;; This function calls:
 10258 ;;		Nothing
 10259 ;; This function is called by:
 10260 ;;		Interrupt level 2
 10261 ;; This function uses a non-reentrant model
 10262 ;;
 10263                           
 10264                           	psect	intcode
 10265   000008                     __pintcode:
 10266                           	callstack 0
 10267   000008                     _HighISR:
 10268                           	callstack 22
 10269                           
 10270                           ;incstack = 0
 10271   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10272   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10273   00000C  0011               	retfie		f
 10274   00000E                     __end_of_HighISR:
 10275                           	callstack 0
 10276                           
 10277                           	psect	rparam
 10278   000000                     
 10279                           	psect	temp
 10280   00005F                     btemp:
 10281                           	callstack 0
 10282   00005F                     	ds	1
 10283   000000                     int$flags	set	btemp
 10284   000000                     wtemp8	set	btemp+1
 10285   000000                     ttemp5	set	btemp+1
 10286   000000                     ttemp6	set	btemp+4
 10287   000000                     ttemp7	set	btemp+8
 10288                           
 10289                           	psect	idloc
 10290                           
 10291                           ;Config register IDLOC0 @ 0x200000
 10292                           ;	unspecified, using default values
 10293   200000                     	org	2097152
 10294   200000  0FFF               	dw	4095
 10295                           
 10296                           ;Config register IDLOC1 @ 0x200002
 10297                           ;	unspecified, using default values
 10298   200002                     	org	2097154
 10299   200002  0FFF               	dw	4095
 10300                           
 10301                           ;Config register IDLOC2 @ 0x200004
 10302                           ;	unspecified, using default values
 10303   200004                     	org	2097156
 10304   200004  0FFF               	dw	4095
 10305                           
 10306                           ;Config register IDLOC3 @ 0x200006
 10307                           ;	unspecified, using default values
 10308   200006                     	org	2097158
 10309   200006  0FFF               	dw	4095
 10310                           
 10311                           ;Config register IDLOC4 @ 0x200008
 10312                           ;	unspecified, using default values
 10313   200008                     	org	2097160
 10314   200008  0FFF               	dw	4095
 10315                           
 10316                           ;Config register IDLOC5 @ 0x20000A
 10317                           ;	unspecified, using default values
 10318   20000A                     	org	2097162
 10319   20000A  0FFF               	dw	4095
 10320                           
 10321                           ;Config register IDLOC6 @ 0x20000C
 10322                           ;	unspecified, using default values
 10323   20000C                     	org	2097164
 10324   20000C  0FFF               	dw	4095
 10325                           
 10326                           ;Config register IDLOC7 @ 0x20000E
 10327                           ;	unspecified, using default values
 10328   20000E                     	org	2097166
 10329   20000E  0FFF               	dw	4095
 10330                           
 10331                           	psect	config
 10332                           
 10333                           ;Config register CONFIG1L @ 0x300000
 10334                           ;	External Oscillator mode Selection bits
 10335                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10336                           ;	Power-up default value for COSC bits
 10337                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10338   300000                     	org	3145728
 10339   300000  AA                 	db	170
 10340                           
 10341                           ;Config register CONFIG1H @ 0x300001
 10342                           ;	unspecified, using default values
 10343                           ;	Clock Out Enable bit
 10344                           ;	CLKOUTEN = 0x1, unprogrammed default
 10345                           ;	Clock Switch Enable bit
 10346                           ;	CSWEN = 0x1, unprogrammed default
 10347                           ;	Fail-Safe Clock Monitor Enable bit
 10348                           ;	FCMEN = 0x1, unprogrammed default
 10349   300001                     	org	3145729
 10350   300001  FF                 	db	255
 10351                           
 10352                           ;Config register CONFIG2L @ 0x300002
 10353                           ;	unspecified, using default values
 10354                           ;	Master Clear Enable bit
 10355                           ;	MCLRE = 0x1, unprogrammed default
 10356                           ;	Power-up Timer Enable bit
 10357                           ;	PWRTE = 0x1, unprogrammed default
 10358                           ;	Low-power BOR enable bit
 10359                           ;	LPBOREN = 0x1, unprogrammed default
 10360                           ;	Brown-out Reset Enable bits
 10361                           ;	BOREN = 0x3, unprogrammed default
 10362   300002                     	org	3145730
 10363   300002  FF                 	db	255
 10364                           
 10365                           ;Config register CONFIG2H @ 0x300003
 10366                           ;	unspecified, using default values
 10367                           ;	Brown Out Reset Voltage selection bits
 10368                           ;	BORV = 0x3, unprogrammed default
 10369                           ;	ZCD Disable bit
 10370                           ;	ZCD = 0x1, unprogrammed default
 10371                           ;	PPSLOCK bit One-Way Set Enable bit
 10372                           ;	PPS1WAY = 0x1, unprogrammed default
 10373                           ;	Stack Full/Underflow Reset Enable bit
 10374                           ;	STVREN = 0x1, unprogrammed default
 10375                           ;	Debugger Enable bit
 10376                           ;	DEBUG = 0x1, unprogrammed default
 10377                           ;	Extended Instruction Set Enable bit
 10378                           ;	XINST = 0x1, unprogrammed default
 10379   300003                     	org	3145731
 10380   300003  FF                 	db	255
 10381                           
 10382                           ;Config register CONFIG3L @ 0x300004
 10383                           ;	WDT Period Select bits
 10384                           ;	WDTCPS = 0x1F, unprogrammed default
 10385                           ;	WDT operating mode
 10386                           ;	WDTE = OFF, WDT Disabled
 10387   300004                     	org	3145732
 10388   300004  9F                 	db	159
 10389                           
 10390                           ;Config register CONFIG3H @ 0x300005
 10391                           ;	unspecified, using default values
 10392                           ;	WDT Window Select bits
 10393                           ;	WDTCWS = 0x7, unprogrammed default
 10394                           ;	WDT input clock selector
 10395                           ;	WDTCCS = 0x7, unprogrammed default
 10396   300005                     	org	3145733
 10397   300005  FF                 	db	255
 10398                           
 10399                           ;Config register CONFIG4L @ 0x300006
 10400                           ;	unspecified, using default values
 10401                           ;	Write Protection Block 0
 10402                           ;	WRT0 = 0x1, unprogrammed default
 10403                           ;	Write Protection Block 1
 10404                           ;	WRT1 = 0x1, unprogrammed default
 10405                           ;	Write Protection Block 2
 10406                           ;	WRT2 = 0x1, unprogrammed default
 10407                           ;	Write Protection Block 3
 10408                           ;	WRT3 = 0x1, unprogrammed default
 10409                           ;	Write Protection Block 3
 10410                           ;	WRT4 = 0x1, unprogrammed default
 10411                           ;	Write Protection Block 3
 10412                           ;	WRT5 = 0x1, unprogrammed default
 10413                           ;	Write Protection Block 3
 10414                           ;	WRT6 = 0x1, unprogrammed default
 10415                           ;	Write Protection Block 3
 10416                           ;	WRT7 = 0x1, unprogrammed default
 10417   300006                     	org	3145734
 10418   300006  FF                 	db	255
 10419                           
 10420                           ;Config register CONFIG4H @ 0x300007
 10421                           ;	unspecified, using default values
 10422                           ;	Configuration Register Write Protection bit
 10423                           ;	WRTC = 0x1, unprogrammed default
 10424                           ;	Boot Block Write Protection bit
 10425                           ;	WRTB = 0x1, unprogrammed default
 10426                           ;	Data EEPROM Write Protection bit
 10427                           ;	WRTD = 0x1, unprogrammed default
 10428                           ;	Scanner Enable bit
 10429                           ;	SCANE = 0x1, unprogrammed default
 10430                           ;	Low Voltage Programming Enable bit
 10431                           ;	LVP = 0x1, unprogrammed default
 10432   300007                     	org	3145735
 10433   300007  FF                 	db	255
 10434                           
 10435                           ;Config register CONFIG5L @ 0x300008
 10436                           ;	unspecified, using default values
 10437                           ;	UserNVM Program Memory Code Protection bit
 10438                           ;	CP = 0x1, unprogrammed default
 10439                           ;	DataNVM Memory Code Protection bit
 10440                           ;	CPD = 0x1, unprogrammed default
 10441   300008                     	org	3145736
 10442   300008  FF                 	db	255
 10443                           
 10444                           ;Config register CONFIG5H @ 0x300009
 10445                           ;	unspecified, using default values
 10446   300009                     	org	3145737
 10447   300009  FF                 	db	255
 10448                           
 10449                           ;Config register CONFIG6L @ 0x30000A
 10450                           ;	unspecified, using default values
 10451                           ;	Table Read Protection Block 0
 10452                           ;	EBTR0 = 0x1, unprogrammed default
 10453                           ;	Table Read Protection Block 1
 10454                           ;	EBTR1 = 0x1, unprogrammed default
 10455                           ;	Table Read Protection Block 2
 10456                           ;	EBTR2 = 0x1, unprogrammed default
 10457                           ;	Table Read Protection Block 3
 10458                           ;	EBTR3 = 0x1, unprogrammed default
 10459                           ;	Table Read Protection Block 4
 10460                           ;	EBTR4 = 0x1, unprogrammed default
 10461                           ;	Table Read Protection Block 5
 10462                           ;	EBTR5 = 0x1, unprogrammed default
 10463                           ;	Table Read Protection Block 6
 10464                           ;	EBTR6 = 0x1, unprogrammed default
 10465                           ;	Table Read Protection Block 7
 10466                           ;	EBTR7 = 0x1, unprogrammed default
 10467   30000A                     	org	3145738
 10468   30000A  FF                 	db	255
 10469                           
 10470                           ;Config register CONFIG6H @ 0x30000B
 10471                           ;	unspecified, using default values
 10472                           ;	Boot Block Table Read Protection bit
 10473                           ;	EBTRB = 0x1, unprogrammed default
 10474   30000B                     	org	3145739
 10475   30000B  FF                 	db	255
 10476                           tosu	equ	0xFFF
 10477                           tosh	equ	0xFFE
 10478                           tosl	equ	0xFFD
 10479                           stkptr	equ	0xFFC
 10480                           pclatu	equ	0xFFB
 10481                           pclath	equ	0xFFA
 10482                           pcl	equ	0xFF9
 10483                           tblptru	equ	0xFF8
 10484                           tblptrh	equ	0xFF7
 10485                           tblptrl	equ	0xFF6
 10486                           tablat	equ	0xFF5
 10487                           prodh	equ	0xFF4
 10488                           prodl	equ	0xFF3
 10489                           indf0	equ	0xFEF
 10490                           postinc0	equ	0xFEE
 10491                           postdec0	equ	0xFED
 10492                           preinc0	equ	0xFEC
 10493                           plusw0	equ	0xFEB
 10494                           fsr0h	equ	0xFEA
 10495                           fsr0l	equ	0xFE9
 10496                           wreg	equ	0xFE8
 10497                           indf1	equ	0xFE7
 10498                           postinc1	equ	0xFE6
 10499                           postdec1	equ	0xFE5
 10500                           preinc1	equ	0xFE4
 10501                           plusw1	equ	0xFE3
 10502                           fsr1h	equ	0xFE2
 10503                           fsr1l	equ	0xFE1
 10504                           bsr	equ	0xFE0
 10505                           indf2	equ	0xFDF
 10506                           postinc2	equ	0xFDE
 10507                           postdec2	equ	0xFDD
 10508                           preinc2	equ	0xFDC
 10509                           plusw2	equ	0xFDB
 10510                           fsr2h	equ	0xFDA
 10511                           fsr2l	equ	0xFD9
 10512                           status	equ	0xFD8

Data Sizes:
    Strings     78
    Constant    0
    Data        3
    BSS         173
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160    134     160
    BANK1           256      0     146
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_2(CODE[34]), STR_1(CODE[44]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 44
		 -> STR_2(CODE[34]), STR_1(CODE[44]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 44
		 -> STR_2(CODE[34]), STR_1(CODE[44]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2207$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_2(CODE[34]), STR_1(CODE[44]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2154$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2154$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _fullSpeedAhead->_setMotorPWM
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _Colour_decider->___flmul
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fleq->___flsub
    ___fldiv->___flsub
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Colour_decider

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               104   104      0  172723
                                             88 COMRAM     2     2      0
                                             32 BANK0    102   102      0
                           _BlueMove
                     _Colour_decider
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    15     14    5722
                                              0 BANK0     27    13     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    2157
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    7688
                                             49 COMRAM    28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   20694
                                             30 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _RedMove                                              4     0      4   15316
                                             30 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   18566
                                             30 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    5378
                                             24 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _OrangeMove                                           4     0      4   15316
                                             30 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _LightBlueMove                                        4     0      4   13188
                                             30 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GreenMove                                            4     0      4   13188
                                             30 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   41375
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                      _reverseDetect
                         _turnLeft45
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    6290
                                             24 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             5     1      4    2157
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     665
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5321
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    4086
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2048
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3604
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     494
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2159
                                             24 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _BlueMove                                             4     0      4   15316
                                             30 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _turnRight45                                          6     2      4    8418
                                             24 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _turnRight                                            5     1      4    2157
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    6746
                                             24 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    2721
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        5     1      4    2309
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
     ___fleq
       ___flsub (ARG)
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
     ___flsub
     ___xxtofl
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
     _turnRight45
   _GreenMove
     _reverseDetect
     _turnLeft45
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
     _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      92       7       57.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      41        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      43        0.0%
BITBIGSFRllllll     2D      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllll     1E      0       0      47        0.0%
BITBIGSFRhll        1E      0       0      36        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRllllll      F      0       0      55        0.0%
BITBIGSFRhhlh        E      0       0      33        0.0%
BITBIGSFRllllll      9      0       0      54        0.0%
BITBIGSFRllllhl      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRllllhh      2      0       0      42        0.0%
BITBIGSFRhlh         2      0       0      35        0.0%
BITBIGSFRlllhl       2      0       0      40        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRhhll        1      0       0      34        0.0%
BITBIGSFRlllllh      1      0       0      45        0.0%
BITBIGSFRlllhh       1      0       0      39        0.0%
BITBIGSFRllh         1      0       0      38        0.0%
BITBIGSFRlhl         1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     190      58        0.0%
DATA                 0      0     190       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 09 17:14:50 2023

               _color_read_Red 4148                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
               _color_read_lum 40F8                   ___fldiv@sign 0029                _color_read_Blue 41E8  
                           l51 4146                             l60 4236                             l45 3FAE  
                           l54 4196                             l63 3D4A                             l48 44D4  
                           l57 41E6                             l66 2926                             l76 1974  
          ___wmul@multiplicand 0003               _color_read_Green 4198                readColours@vals 000C  
            ??_Interrupts_init 0001                            l140 4468                            l206 44F6  
                          l143 448E                            l215 443C                            l152 452A  
                          l137 4466                            l209 450A                            l146 4534  
                          l155 4516                            l501 4000                            l149 4520  
                          l510 40F6                            l158 4350                            l504 4052  
                          l432 3B22                            l513 44B4                            l507 40A4  
                          l445 3C12                            l461 3A04                            l453 396E  
                          l269 453A                            l197 44F2                            l374 2B68  
                          l439 3318                            l480 3F0A                            l640 347C  
                          l483 3EB2                            l627 31AC                            l492 43CE  
                          l477 3A9A                            l469 38D8                            l486 3E5A  
                          l495 440C                            l489 3E00                            l498 3CEC  
                          l772 3842                            l783 36CE                            l778 3688  
                          _abs 4352                            _pad 3B24                            _rel 017C  
                          wreg 000FE8                   ___flmul@aexp 0043                   ___flmul@bexp 0044  
                 ___flmul@sign 003E                   ___flmul@temp 0049                   ___flmul@prod 0045  
              Colour_decider@i 007A                           l1011 3C86                           l1004 3C7E  
                         l1100 241C                           l1041 1B64                           l1106 249E  
                         l1050 1E34                           l1042 1B52                           l1131 225E  
                         l1043 1B18                           ?_abs 0013                           l1108 2516  
                         l1109 2504                           l1213 3B46                           l1134 20F0  
                         l1222 2C80                           l1127 1EFA                           l1144 2220  
                         l1136 2168                           l1224 2C88                           l1137 2156  
                         l3001 3922                           l1217 3B9C                           l1225 2CCE  
                         l1058 1C7E                           l3011 3994                           l1067 1D4E  
                         l1083 42CA                           l1171 3024                           l3003 392E  
                         l1243 35CA                           l1068 1D3C                           l1236 2E70  
                         l3021 39EC                           l3013 39AC                           l3101 1A9A  
                         l3005 393E                           l1253 4388                           l1182 2FBC  
                         l3031 3A5A                           l3023 3A06                           l3015 39B8  
                         l1095 25F8                           l3111 1AAE                           l3103 1A9E  
                         l1175 2F60                           l3007 3956                           l1191 3F5C  
                         l1168 2EC8                           l1256 4390                           l3025 3A2A  
                         l3033 3A6A                           l3017 39C4                           l3009 3970  
                         l1097 2458                           l3201 1D1E                           l3121 1B00  
                         l3113 1AB2                           l3105 1AA2                           l3041 1990  
                         l4001 388C                           l1249 4284                           l3035 3A82  
                         l3027 3A42                           l3019 39D4                           l3211 1D78  
                         l3203 1D34                           l3131 1B44                           l3123 1B10  
                         l3107 1AA6                           l3115 1AB6                           l3051 19C4  
                         l3043 1992                           l4011 4054                           l4003 3898  
                         l1268 3798                           l1276 430E                           l3029 3A4E  
                         l3221 1DF4                           l3213 1DB2                           l3133 1B46  
                         l3125 1B26                           l3117 1ABA                           l3109 1AAA  
                         l3061 19F6                           l3045 19A2                           l3053 19CC  
                         l3037 1976                           l4021 4002                           l4013 3FB0  
                         l4005 38A8                           l3301 41E8                           l4101 2950  
                         l3311 3E2E                           l4015 3C88                           l3231 1E14  
                         l3223 1DF8                           l3207 1D5E                           l3215 1DB4  
                         l3151 1BCE                           l3143 1B96                           l3135 1B50  
                         l3127 1B32                           l3119 1AE4                           l3071 1A2C  
                         l3063 19FC                           l3055 19DC                           l3047 19B2  
                         l3039 1982                           l4007 38C0                           l3303 422E  
                         l1279 4538                           l4031 3F4A                           l4023 3F0C  
                         l4111 296E                           l4103 2956                           l3321 3EC8  
                         l3401 23E0                           l3233 1E22                           l3225 1E06  
                         l3217 1DC4                           l3209 1D6A                           l3153 1BD2  
                         l3145 1BA6                           l3137 1B72                           l3161 1BF2  
                         l3129 1B36                           l3081 1A68                           l3073 1A3C  
                         l3065 1A0A                           l3057 19E2                           l3049 19C2  
                         l3313 3E5C                           l4017 43D0                           l4009 4392  
                         l3241 34A2                           l4025 3F1E                           l4121 298A  
                         l4113 2976                           l4105 295A                           l3307 3E02  
                         l3323 3EDE                           l3411 2426                           l3403 23E8  
                         l3235 1E24                           l3227 1E0C                           l3219 1DD4  
                         l3163 1C18                           l3171 1C6E                           l3155 1BE0  
                         l3147 1BB4                           l3139 1B82                           l3091 1A86  
                         l3083 1A76                           l3075 1A3E                           l3067 1A0C  
                         l3059 19F4                           l3315 3E70                           l4019 40A6  
                         l3331 3DBC                           l3251 34EE                           l3243 34B0  
                         l4027 3F26                           l4131 29CE                           l4123 2992  
                         l4115 297A                           l4107 295E                           l3309 3E16  
                         l3421 247E                           l3413 2444                           l3405 23F8  
                         l3341 227C                           l3501 1ED4                           l3229 1E0E  
                         l3181 1CC2                           l3173 1C94                           l3165 1C4C  
                         l3157 1BE2                           l3149 1BC2                           l3093 1A8A  
                         l3085 1A7A                           l3069 1A1C                           l3077 1A46  
                         l3317 3E86                           l3333 3DD4                           l3325 44F6  
                         l3253 350A                           l3245 34BE                           l4029 3F2E  
                         l4141 2A48                           l4133 29EC                           l4125 299A  
                         l4117 297E                           l4109 2966                           l3319 3EB4  
                         l3431 24BC                           l3423 2484                           l3415 2446  
                         l3407 240C                           l3343 228C                           l3351 22B6  
                         l3335 2260                           l3503 1EE4                           l3191 1CEC  
                         l3183 1CD0                           l3175 1CA4                           l3167 1C4E  
                         l3159 1BEC                           l3095 1A8E                           l3087 1A7E  
                         l3079 1A56                           l3271 4448                           l3327 4506  
                         l3255 3560                           l3247 34C2                           l3263 35A2  
                         l3239 347E                           l4151 2AB8                           l4143 2A60  
                         l4135 2A00                           l4127 29AE                           l4119 2982  
                         l3441 2526                           l3433 24C0                           l3425 248E  
                         l3417 2456                           l3409 241A                           l3361 22E2  
                         l3353 22C6                           l3345 229C                           l3337 226C  
                         l3521 1F66                           l3513 1F2E                           l3505 1EEA  
                         l3193 1CFC                           l3185 1CD2                           l3169 1C5E  
                         l3097 1A92                           l3089 1A82                           l3329 3DA8  
                         l3273 444E                           l3281 44B8                           l3249 34D2  
                         l4161 2B24                           l4153 2ACC                           l4145 2A74  
                         l4137 2A18                           l4129 29BA                           l4081 292C  
                         l3451 2588                           l3443 2532                           l3435 24CE  
                         l3427 249C                           l3419 2468                           l3363 22F2  
                         l3371 231C                           l3355 22CC                           l3347 22AC  
                         l3339 227A                           l3611 37C8                           l3531 1FB0  
                         l3523 1F7E                           l3515 1F3A                           l3507 1F0A  
                         l3187 1CE0                           l3179 1CB8                           l3195 1CFE  
                         l3099 1A96                           l3603 4286                           l3275 4450  
                         l3291 418E                           l3283 40F8                           l2811 3350  
                         l2803 331A                           l2731 36D0                           l3259 3590  
                         l4171 2BE0                           l4163 2B3C                           l4155 2AE4  
                         l4147 2A8C                           l4139 2A34                           l4091 2946  
                         l4083 2930                           l3461 25E6                           l3453 259E  
                         l3445 2540                           l3437 24FC                           l3429 24AE  
                         l3381 235E                           l3373 232C                           l3365 2302  
                         l3357 22D2                           l3349 22AE                           l3621 3840  
                         l3613 37D8                           l3541 2006                           l3533 1FC0  
                         l3525 1F8A                           l3517 1F44                           l3509 1F1A  
                         l3189 1CE8                           l3197 1D0C                           l3605 4296  
                         l3277 4452                           l3269 443E                           l3285 413E  
                         l2821 33B8                           l2813 335E                           l2805 331E  
                         l2741 3752                           l2733 36E2                           l2901 2C14  
                         l4165 2B50                           l4157 2AF8                           l4149 2AA0  
                         l4093 2948                           l4085 2934                           l3463 25EC  
                         l3455 25B8                           l3447 256A                           l3375 2342  
                         l3367 2312                           l3359 22E0                           l3615 3806  
                         l3631 3638                           l3551 20AA                           l3543 2022  
                         l3535 1FCC                           l3527 1F96                           l3519 1F5A  
                         l3199 1D10                           l3279 4454                           l3711 3F86  
                         l3703 3F5E                           l3295 4198                           l2823 33C6  
                         l2831 342C                           l2815 337E                           l2807 332C  
                         l2735 36F4                           l2751 42EE                           l2911 2C90  
                         l2903 2C28                           l4159 2B10                           l4167 2B68  
                         l4095 294A                           l4087 2938                           l4079 2928  
                         l2841 3C1C                           l2753 4490                           l3465 25EE  
                         l3457 25D4                           l3449 256E                           l3393 2396  
                         l3377 2352                           l3385 2372                           l3369 2314  
                         l3617 3816                           l3609 379A                           l3641 36C6  
                         l3633 3648                           l3625 35CC                           l3561 2100  
                         l3553 20B8                           l3545 202E                           l3537 1FDC  
                         l3529 1FA4                           l3481 1E62                           l3473 1E36  
                         l3801 12A4                           l3721 3FA0                           l3713 3F90  
                         l3705 3F62                           l3297 41DE                           l3289 4148  
                         l2761 302A                           l2833 343C                           l2825 33F4  
                         l2817 339C                           l2809 334C                           l2737 36FE  
                         l2745 42CC                           l2921 2CCA                           l2913 2CA0  
                         l2905 2C38                           l4169 2BAA                           l4097 294C  
                         l4089 2944                           l2851 3C52                           l2843 3C2E  
                         l2755 44AC                           l3459 25D8                           l3395 23B0  
                         l3387 2382                           l3379 235A                           l3619 383A  
                         l3643 36CC                           l3635 3656                           l3627 35FA  
                         l3563 210E                           l3555 20D6                           l3547 204A  
                         l3539 1FF6                           l3491 1E9E                           l3483 1E72  
                         l3475 1E42                           l3651 2E92                           l3803 1320  
                         l3731 3FAA                           l3723 3FA2                           l3715 3F9A  
                         l3707 3F6C                           l2771 308A                           l2763 3038  
                         l2835 345C                           l2827 3414                           l2819 33A4  
                         l2739 371C                           l2747 42D8                           l2931 2D6E  
                         l2923 2CD6                           l2915 2CA6                           l2907 2C58  
                         l4099 294E                           l2853 3C68                           l2845 3C36  
                         l3397 23C0                           l3389 2382                           l3637 3668  
                         l3629 360A                           l3573 2178                           l3581 21C0  
                         l3565 2112                           l3557 20E0                           l3549 2074  
                         l3493 1EA4                           l3485 1E82                           l3477 1E50  
                         l3661 2F0A                           l3653 2ED8                           l3901 1842  
                         l3805 1378                           l3733 3FAC                           l3725 3FA4  
                         l3717 3F9C                           l3709 3F7C                           l3741 26FA  
                         l2781 30D4                           l2773 308E                           l2765 3058  
                         l2829 3426                           l2749 42EA                           l2861 3B24  
                         l2941 2E2A                           l2933 2D74                           l2925 2CE0  
                         l2917 2CB6                           l2909 2C74                           ?_pad 0011  
                         l2855 3C70                           l2847 3C3E                           l2839 3C14  
                         l3399 23D0                           l3639 3676                           l3591 2234  
                         l3583 21DA                           l3575 2184                           l3567 2120  
                         l3559 20EE                           l3495 1EB2                           l3487 1E88  
                         l3479 1E52                           l3671 2F92                           l3663 2F16  
                         l3655 2EEE                           l3647 2E74                           l3903 1874  
                         l3831 14F6                           l3807 13AA                           l3815 13E8  
                         l3751 0E50                           l2951 452C                           l3727 3FA6  
                         l3719 3F9E                           l3743 278E                           l3735 3CEE  
                         l2791 3144                           l2783 30E2                           l2775 309A  
                         l2767 305C                           l2759 3026                           l2871 3B6A  
                         l2863 3B32                           l2943 2E3A                           l2927 2CE6  
                         l2935 2DD8                           l2919 2CC2                           l2857 3C72  
                         l2849 3C4C                           l3593 2242                           l3585 21EE  
                         l3577 2192                           l3569 214E                           l3497 1EB4  
                         l3489 1E98                           l3681 2FD0                           l3673 2F9E  
                         l3665 2F48                           l3649 2E84                           l3905 18A6  
                         l3817 141A                           l3825 1458                           l3809 13DC  
                         l3761 0F1E                           l3753 0E7A                           l2881 4478  
                         l2953 4530                           l2961 4526                           l3729 3FA8  
                         l3745 27C2                           l3737 25FA                           l2793 3156  
                         l2785 30F4                           l2777 30B8                           l2769 306A  
                         l2873 3B88                           l2865 3B3E                           l2945 2E40  
                         l2937 2DF2                           l2929 2D68                           l2859 3C78  
                         l2891 3236                           l2883 31AE                           l3595 2244  
                         l3587 2208                           l3579 21BC                           l3499 1EC4  
                         l3683 2FF4                           l3675 2FAC                           l3667 2F4A  
                         l3659 2F02                           l3907 18E0                           l3915 191E  
                         l3851 15A4                           l3827 148A                           l3819 144C  
                         l3771 0FAC                           l3755 0E86                           l2955 450E  
                         l3747 285A                           l3739 26C6                           l2971 431E  
                         l2963 4518                           l2787 3122                           l2779 30C0  
                         l2795 315C                           l2875 4352                           l2867 3B52  
                         l2947 2E50                           l2939 2E10                           l2893 3278  
                         l2885 31CA                           l2981 3B9E                           l3589 2224  
                         l3597 224A                           l3685 3004                           l3677 2FCA  
                         l3669 2F56                           l3925 1960                           l3861 1618  
                         l3853 15D6                           l3845 1566                           l3837 1534  
                         l3829 14BC                           l3781 105C                           l3773 0FB4  
                         l3757 0EB6                           l2957 4512                           l3749 288E  
                         l3941 44EE                           l3933 44D6                           l2973 4326  
                         l2965 451C                           l2797 316C                           l2789 3142  
                         l2877 436C                           l2869 3B66                           l3693 4238  
                         l2895 3294                           l2887 321E                           l2983 3BA2  
                         l2991 3BE2                           l3599 224E                           l3687 3012  
                         l3679 2FCC                           l3871 16C4                           l3863 1654  
                         l3839 155A                           l3791 1172                           l3783 10B2  
                         l3775 1008                           l3767 0F28                           l3759 0EEA  
                         l2879 4468                           l2959 4522                           l3943 44F0  
                         l3935 44E0                           l2975 434C                           l2967 4312  
                         l3951 4424                           l2799 318C                           l3695 4244  
                         l2897 32D8                           l2889 3232                           l2993 3BFA  
                         l2985 3BBA                           l3689 3014                           l3929 196C  
                         l3873 1702                           l3881 176A                           l3849 1572  
                         l3793 1182                           l3777 103A                           l3769 0F7A  
                         l3937 44E2                           l2977 434E                           l2969 4316  
                         l3945 440E                           l3697 4260                           l2987 3BC6  
                         l2995 38DA                           l3891 180C                           l3867 1660  
                         l3795 11BA                           l3787 10BE                           l3779 1040  
                         l3971 3AB2                           l3939 44EC                           l3947 4412  
                         l2899 2BF4                           l3699 427C                           l2989 3BD2  
                         l2997 38FE                           l3869 1692                           l3885 1776  
                         l3797 11CC                           l3789 10D2                           l3981 3AFC  
                         l3973 3AB4                           l3965 3A9C                           l3949 4420  
                         l2999 3916                           l3887 17A8                           l3799 1248  
                         l3991 3B16                           l3983 3AFE                           l3975 3ACA  
                         l3967 3AAE                           l3889 17DA                           l3993 3B20  
                         l3985 3B08                           l3977 3ACE                           l3969 3AB0  
                         l3995 3844                           l3987 3B0A                           l3979 3AF2  
                         l3997 3868                           l3989 3B14                           l3999 3880  
                  GreenMove@mL 001F                    GreenMove@mR 0021                           STR_1 0E01  
                         STR_2 0E2D                           u2100 3038                           u2101 3034  
                         u2110 306A                           u2111 3066                           u3000 22F2  
                         u2200 33C6                           u3001 22EE                           u2121 3094  
                         u2201 33C2                           u3010 2302                           u2130 30B8  
                         u2210 33F4                           u2050 36E2                           u3011 22FE  
                         u2131 30B4                           u2211 33F0                           u2051 36DE  
                         u3100 24BC                           u3020 2342                           u2300 448E  
                         u2140 30E2                           u2220 343C                           u2060 36F4  
                         u3101 24B8                           u3021 233E                           u2301 448A  
                         u2141 30DE                           u2221 3438                           u2061 36F0  
                         u2230 3C2E                           u2310 31CA                           u3110 24CE  
                         u3030 2382                           u2150 3122                           u2070 371C  
                         u2231 3C2A                           u2311 31C6                           u3111 24CA  
                         u3031 237E                           u2151 311E                           u2071 3718  
                         u2240 3C4C                           u2320 3294                           u3120 24FC  
                         u3040 23F8                           u3200 1E62                           u2160 316C  
                         u2080 3752                           u2400 2E10                           u4000 29EC  
                 _BAUD4CONbits 000EE9                           u2241 3C48                           u2321 3290  
                         u3121 24F8                           u3041 23F4                           u3201 1E5E  
                         u2161 3168                           u2081 374E                           u2401 2E0C  
                         u4001 29E8                           u2250 3C68                           u3130 2512  
                         u3050 241A                           u3210 1E72                           u2170 332C  
                         u2090 430E                           u2410 2E2A                           u2330 2C24  
                         u4010 2A48                           u2251 3C64                           u3131 250E  
                         u3051 2416                           u3211 1E6E                           u2171 3328  
                         u2091 430A                           u2411 2E26                           u2331 2C1E  
                         u4011 2A44                           u2500 3A04                           u3140 2526  
                         u3060 2444                           u3300 2120                           u3220 1EB2  
                         u2180 335E                           u2260 3B32                           u2420 2E3A  
                         u2340 2C26                           u4020 2A74                           u2501 3A00  
                         u3141 2522                           u3061 2440                           u3301 211C  
                         u3221 1EAE                           u2181 335A                           u2261 3B2E  
                         u2421 2E36                           u4021 2A70                           u2510 3A82  
                         u3150 2540                           u3070 2468                           u3310 214E  
                         u3230 1EC4                           u2430 433A                           u2190 339C  
                         u2270 3B88                           u2350 2C38                           u4030 2AA0  
                         u2511 3A7E                           u3151 253C                           u3071 2464  
                         u3311 214A                           u3231 1EC0                           u2431 4332  
                         u2191 3398                           u2271 3B84                           u2351 2C34  
                         u4031 2A9C                           u2520 3A9A                           u3160 2588  
                         u3080 247E                           u3400 383A                           u3320 2164  
                         u3240 1ED4                           u2600 1A68                           u2280 436C  
                         u2360 2C74                           u4040 2ACC                           u2521 3A96  
                         u3161 2584                           u3081 247A                           u3401 3836  
                         u3321 2160                           u3241 1ED0                           u2601 1A64  
                         u2281 4368                           u2361 2C70                           u4041 2AC8  
                         u2450 3BFA                           u3170 25B8                           u3090 249C  
                         u3410 35FA                           u3330 2178                           u3250 1F0A  
                         u2610 1A76                           u2530 1990                           u2290 4478  
                         u2370 2CA0                           u4050 2AF8                           _T2PR 000FBC  
                         u2451 3BF6                           u3171 25B4                           u3091 2498  
                         u3411 35F6                           u3331 2174                           u3251 1F06  
                         u2611 1A72                           u2531 198C                           u2291 4474  
                         u4107 3F72                           u2371 2C9C                           u4051 2AF4  
                         u2460 3C12                           u3180 25E6                           u3420 3638  
                         u3340 2192                           u3260 1F1A                           u2700 1BB4  
                         u2620 1AE4                           u2540 19A2                           u3500 2F8E  
                         u2380 2CB6                           u4060 2B24                           u2461 3C0E  
                         u3181 25E2                           u3421 3634                           u3341 218E  
                         u3261 1F16                           u2701 1BB0                           u2621 1AE0  
                         u2541 199E                           u3501 2F8A                           u4117 3DC6  
                         u2381 2CB2                           u4061 2B20                           u3430 3656  
                         u3350 21DA                           u3270 2094                           u3190 1E50  
                         u2710 1BC2                           u2630 1AFC                           u2550 19B2  
                         u3510 2FAC                           u2470 3956                           u2390 2DF2  
                         u4070 2B50                           u4207 3E4C                           u3431 3652  
                         u3351 21D6                           u3191 1E4C                           u2711 1BBE  
                         u2631 1AF6                           u2551 19AE                           u3511 2FA8  
                         u2471 3952                           u4127 3DF2                           u2391 2DEE  
                         u4071 2B4C                           u3440 3676                           u3360 2208  
                         u3280 20EE                           u2800 1D0C                           u2720 1BE0  
                         u2640 1AFE                           u2560 19F4                           u3520 2FBC  
                         u2480 396E                           u3600 105C                           u2448 433C  
                         u4217 3BD8                           u3441 3672                           u3361 2204  
                         u3281 20EA                           u2801 1D08                           u2721 1BDC  
                         u2561 19F0                           u3521 2FB8                           u2481 396A  
                         u4137 3E7A                           u3601 1058                           u2490 39EC  
                         u3450 36C6                           u3370 2242                           u3290 210E  
                         u2810 1D1E                           u2730 1C18                           u2650 1B26  
                         u2570 1A0A                           u3530 2FCA                           u3610 10B2  
                         u4227 3A60                           u2491 39E8                           u3451 36C2  
                         u3371 223E                           u3291 210A                           u3275 208A  
                         u2811 1D1A                           u2731 1C14                           u2651 1B22  
                         u2571 1A06                           u3531 2FC6                           u4147 3EA4  
                         u3611 10AE                           u3380 37C8                           u2900 1E06  
                         u2820 1D34                           u2740 1C5E                           u2660 1B44  
                         u2580 1A1C                           u3540 3004                           u3460 2E84  
                         u3700 14BC                           u3620 10D2                           u3381 37C4  
                         u2901 1E02                           u2821 1D30                           u2741 1C5A  
                         u2661 1B40                           u2581 1A18                           u3541 3000  
                         u3461 2E80                           u4157 3934                           u3701 14B8  
                         u3621 10CE                           u3390 3806                           u2910 1E22  
                         u2830 1D4A                           u2750 1C94                           u2670 1B64  
                         u2590 1A2C                           u3550 3012                           u3470 2E92  
                         u3710 14F6                           u3630 1182                           u4167 3ED2  
                         u3391 3802                           u2911 1E1E                           u2831 1D46  
                         u2751 1C90                           u2671 1B60                           u2591 1A28  
                         u3551 300E                           u3471 2E8E                           u3711 14F2  
                         u3631 117E                           u4087 2A0A                           u2840 1D5E  
                         u2760 1CA4                           u2680 1B72                           u3480 2EEE  
                         u3800 17A8                           u3720 1530                           u3640 11CC  
                         u2920 34A2                           u3560 427C                           u4177 3EFC  
                         u2841 1D5A                           u2761 1CA0                           u2681 1B6E  
                         u3481 2EEA                           u3801 17A4                           u3721 152C  
                         u3641 11C8                           u4097 389E                           u2921 349E  
                         u3561 4278                           u2850 1D78                           u2770 1CD0  
                         u2690 1B82                           u3490 2F44                           u3810 17DA  
                         u3730 155A                           u3650 13AA                           u2930 34EE  
                         u4187 39CA                           u2851 1D74                           u2771 1CCC  
                         u2691 1B7E                           u3491 2F40                           u3811 17D6  
                         u3731 1556                           u3651 13A6                           u3571 0E80  
                         u2931 34EA                           u2860 1DB2                           u2780 1CE0  
                         u3820 180C                           u3740 15A4                           u3660 13DC  
                         u3580 0F7A                           u2940 350A                           u4197 3E20  
                         u2861 1DAE                           u2781 1CDC                           u3821 1808  
                         u3741 15A0                           u3661 13D8                           u3581 0F76  
                         u2941 3506                           u2870 1DC4                           u2790 1CFC  
                         u3830 183E                           u3750 15D6                           u3670 141A  
                         u3590 1008                           u2950 4506                           u2871 1DC0  
                         u2791 1CF8                           u3831 183A                           u3751 15D2  
                         u3671 1416                           u3591 1004                           u2951 4502  
                         u2960 227A                           u2880 1DD4                           u3840 1874  
                         u3760 1614                           u3680 144C                           u2961 2276  
                         u2881 1DD0                           u3841 1870                           u3761 1610  
                         u3681 1448                           u2970 228C                           u2890 1DF4  
                         u3850 18A6                           u3770 1692                           u3690 148A  
                         u3930 38C0                           u2971 2288                           u2891 1DF0  
                         u3851 18A2                           u3771 168E                           u3691 1486  
                         u3931 38BC                           u2980 229C                           u3860 18E0  
                         u3780 16C4                           u3940 38D8                           u2981 2298  
                         u3861 18DC                           u3781 16C0                           u3941 38D4  
                         u2990 22E0                           u3870 191A                           u3790 1702  
                         u2991 22DC                           u3871 1916                           u3791 16FE  
                         u3880 195C                           u3881 1958                           u3890 443C  
                         u3891 4438                  _LightBlueMove 40A6                           abs@a 0013  
                         _dbuf 015C                           _main 2928                           _dtoa 2BF4  
                         _prec 00E8                           _vals 0188                           pad@i 0018  
                         pad@p 0015                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           btemp 005F                           _stop 3B9E  
                         prodh 000FF4                           prodl 000FF3                           start 000E  
              ___fldiv@new_exp 002A         __end_of_color_read_Red 4198                __end_of_HighISR 000E  
       __end_of_color_read_lum 4148                   ___param_bank 000000                __end_of_RedMove 43D0  
                        ??_abs 0015                          ??_pad 0017                   ?_readColours 000C  
                  _turnRight45 3EB4                __end_of___aodiv 31AE                __end_of___fladd 1E36  
                        ?_main 0001                          ?_dtoa 001C                __end_of___aomod 347E  
              __end_of___fldiv 25FA                __end_of___flmul 2260                __end_of___flsub 42CC  
                  colour_rel@B 004A                    colour_rel@G 0046                          ?_stop 0014  
                  colour_rel@L 0036                    colour_rel@R 0042                __end_of___lwdiv 3C88  
                        i2l274 000A                   vfpfcnvrt@fmt 0041        __end_of_sendCharSerial4 450C  
   __end_of_I2C_2_Master_Start 4536     __end_of_I2C_2_Master_Write 4518                   YellowMove@mL 001F  
                        _flags 00EC                   YellowMove@mR 0021                          _fputc 36D0  
                        _fputs 42CC                          pad@fp 0011                          _width 00E6  
                        _putch 4538                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 001F                          tablat 000FF5  
                        plusw2 000FDB               ??_Colour_decider 004F                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                          status 000FD8  
                        wtemp8 0060                __end_of_sprintf 3F5E        __end_of_color_read_Blue 4238  
        _I2C_2_Master_RepStart 4518               __end_of_BlueMove 3CEE                     PinkMove@mL 001F  
                   PinkMove@mR 0021                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 3D4C                _reverseOneBlock 3DA8                   __end_of_main 2BF4  
                 __end_of_dtoa 2E72                   __end_of_stop 3C14                _colour_rel$2540 003A  
              _colour_rel$2541 003E                         ??_main 0059                         ??_dtoa 0026  
             __end_of_PinkMove 4054                         ??_stop 0018                  __activetblptr 000001  
            Colour_decider@Hue 007C              Colour_decider@rel 004D                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         ?_fputs 000A                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         _RG6PPS 000E88  
                    ??_HighISR 0001       __end_of_color_click_init 3FB0                         _RX4PPS 000E15  
                       _TX4REG 000EE4                     _OrangeMove 4054               __end_of___xxtofl 3026  
                    ??_RedMove 0023                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0057  
                       ___flge 35CC                         ___fleq 379A                      ??___aodiv 0011  
                    ??___fladd 0009                      ??___aomod 0011                         ___wmul 4490  
                    ??___fldiv 0021                      ??___flmul 003A                      ??___flsub 0019  
                    ??___lwdiv 000B                         clear_0 3D7C                         clear_1 3D88  
                       _motorL 00F6                         _motorR 00ED                         isa$std 000001  
                       pad@buf 0013                         dtoa@fp 001C                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001                         putch@c 0001  
              ??_LightBlueMove 0023               __end_of_vfprintf 4286                         stop@mL 0014  
                       stop@mR 0016              ??_initDCmotorsPWM 0003                      ??_sprintf 0059  
             __end_of_turnLeft 3970                     ___flge@ff1 0001                     _YellowMove 3FB0  
                   ___flge@ff2 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0019                     ___fleq@ff2 001D  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 3D96        __end_of_reverseOneBlock 3E02       __end_of_color_read_Green 41E8  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_Blue 0005  
              _Interrupts_init 453A                 __pcstackCOMRAM 0001                  _fullSpeedBack 3A06  
                 __pidataBANK0 453C                   __pidataBANK1 4536                  __end_of_fputc 379A  
                __end_of_fputs 4310                  __end_of_putch 453A              __end_of_GreenMove 440E  
                    ?_BlueMove 001F                        ??_fputc 0005                        ??_fputs 000E  
         Colour_decider@F14330 0150          __end_of_reverseDetect 3E5C                        ??_putch 0001  
                   __pbssBANK0 00E6                     __pbssBANK1 0100                reverseDetect@mL 0019  
              reverseDetect@mR 001B                    ?_OrangeMove 001F                      ?_PinkMove 001F  
            _color_writetoaddr 44B6                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 0001                        ?___fleq 0019             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                   ?_turnRight45 0019  
          ??_color_writetoaddr 0004                  colour_rel@rel 0034                      ?___xxtofl 0001  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                     ??_BlueMove 0023  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5                    ?_YellowMove 001F  
                   _colour_rel 25FA        __end_of_Interrupts_init 453C         color_writetoaddr@value 0003  
             ??_color_read_Red 0007                        _HighISR 0008               ??_color_read_lum 0007  
             ?_reverseOneBlock 0019      __end_of_color_writetoaddr 44D6                        _RedMove 4392  
           _I2C_2_Master_Start 452C                     ??_PinkMove 0023                     _initUSART4 44D6  
           _I2C_2_Master_Write 450C                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A        sendStringSerial4@string 0002              reverseOneBlock@mL 0019  
            reverseOneBlock@mR 001B                        ___aodiv 3026                        ___fladd 1976  
                      ___aomod 331A                        ___fldiv 2260                        ___flmul 1E36  
                      ___flsub 4286            ?_I2C_2_Master_Start 0001                        ___lwdiv 3C14  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 0051                   __psmallconst 0E00  
                 turnLeft45@mL 0019                   turnLeft45@mR 001B                        __pcinit 3D4C  
                      __ramtop 0E00                      ?_turnLeft 0014                        __ptext0 2928  
                      __ptext1 3F0C                        __ptext2 4238                        __ptext3 347E  
                      __ptext4 2BF4                        __ptext5 3B24                        __ptext6 42CC  
                      __ptext7 36D0                        __ptext8 4538                        __ptext9 4352  
                    _T2CONbits 000FBD                     ??___xxtofl 0005                      _T2HLTbits 000FBE  
                _RxBufWriteCnt 005E              color_read_lum@tmp 000A                        main@buf 0080  
                      _sprintf 3F0C           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 3D96                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                LightBlueMove@mL 001F                LightBlueMove@mR 0021  
              ??_fullSpeedBack 0018             ??_color_click_init 0005              __end_of_vfpfcnvrt 35CC  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 0047                     ??_vfprintf 0057  
              _initDCmotorsPWM 3A9C                     ??_turnLeft 0018             setMotorPWM@negDuty 0013  
            __end_of_turnRight 3A06                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                    ___fldiv@grs 002C                    ___fldiv@rem 0025  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 0032               ?_Interrupts_init 0001  
                  ___flmul@grs 003F                    _CCP1CONbits 000FAB                     main@colour 00E4  
                 _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001                      RedMove@mL 001F  
                    RedMove@mR 0021             ??_color_read_Green 0007                     _turnLeft45 3E5C  
               __end_of___flge 36D0                 __end_of___fleq 3844                 _fullSpeedAhead 3844  
                  vfpfcnvrt@ap 0043                    vfpfcnvrt@cp 004F                    vfpfcnvrt@fp 003F  
               __end_of___wmul 44B6                      _GreenMove 43D0            start_initialization 3D4C  
                  __end_of_abs 4392                    __end_of_pad 3B9E                  _TxBufWriteCnt 005C  
        __end_of_LightBlueMove 40F8                   ??_OrangeMove 0023            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 3B24                    vfprintf@fmt 0053         __end_of_fullSpeedAhead 38DA  
                     ??___flge 0009                       ??___fleq 0021                       ??___wmul 0005  
                ??_readColours 000E                    __pdataBANK0 00FF                    __pdataBANK1 0190  
                    ___fladd@a 0005                      ___fladd@b 0001                      ___fldiv@a 001D  
                    ___fldiv@b 0019                     ?_GreenMove 001F                   OrangeMove@mL 001F  
                 OrangeMove@mR 0021             __end_of_OrangeMove 40A6                      ___flmul@a 0036  
                    ___flmul@b 0032                    __pbssCOMRAM 005B                      ___flsub@a 0015  
                    ___flsub@b 0011                  __pcstackBANK0 0060               ___aodiv@dividend 0001  
                 ??_YellowMove 0023                       ?_HighISR 0001          Colour_decider@RGB_col 0066  
                     ?_RedMove 001F               ___lwdiv@dividend 0007                      _dtoa$2235 002E  
                  ?_turnLeft45 0019                ?_fullSpeedAhead 0014                      __pintcode 0008  
                     ?___aodiv 0001                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0019               ___aodiv@quotient 0013                       ?___flmul 0032  
                     ?___flsub 0011            _Colour_decider$2542 0060                       ?___lwdiv 0007  
         I2C_2_Master_Read@ack 0003             __end_of_YellowMove 4002           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00            __end_of_readColours 3D4C              _I2C_2_Master_Idle 4468  
            _I2C_2_Master_Init 443E              _I2C_2_Master_Read 4310              _I2C_2_Master_Stop 4522  
                _low_threshold 00EA                   _RxBufReadCnt 005D             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 0060                 colour_rel@vals 0032              _sendStringSerial4 440E  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
           ?_sendStringSerial4 0002                       _PIE4bits 000E2D                    turnRight@mL 0014  
                  turnRight@mR 0016                       _PIR4bits 000E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 000EDA                 _Colour_decider 0E50  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 347E  
    __end_of_I2C_2_Master_Idle 4490      __end_of_I2C_2_Master_Init 4468      __end_of_I2C_2_Master_Read 4352  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 452C                   setMotorPWM@m 000E  
                     _DataFlag 00FF    I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0023  
            ??_color_read_Blue 0007                   _TxBufReadCnt 005B                       _BlueMove 3C88  
                    _turnRight 3970      __end_of_sendStringSerial4 443E                   ??_colour_rel 0036  
                _reverseDetect 3E02  __end_of_I2C_2_Master_RepStart 4522             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 331A                   ??_initUSART4 0001                       _PinkMove 4002  
                     __Hrparam 0000         __end_of_Colour_decider 1976                     vfprintf@ap 0055  
                     __Lrparam 0000                     vfprintf@fp 0051          __end_of_fullSpeedBack 3A9C  
                 __Lsmallconst 0E00                    _readColours 3CEE                     ?_vfpfcnvrt 003F  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 2928  
                   _ANSELDbits 000EA7                     sprintf@fmt 0062                       ___xxtofl 2E72  
              ___lwdiv@divisor 0009             __end_of_initUSART4 44F4                ___lwdiv@counter 000D  
                   ?_turnRight 0014                       __ptext10 331A                       __ptext11 3026  
                     __ptext20 4310                       __ptext12 440E                       __ptext21 44D6  
                     __ptext13 44F4                       __ptext30 4468                       __ptext22 3A9C  
                     __ptext14 3CEE                       __ptext31 443E                       __ptext23 3844  
                     __ptext15 40F8                       __ptext40 0E50                       __ptext32 3FB0  
                     __ptext24 25FA                       __ptext16 4148                       __ptext41 3E5C  
                     __ptext33 4392                       __ptext25 3F5E                       __ptext17 4198  
                     __ptext50 3C88                       __ptext42 38DA                       __ptext34 4002  
                     __ptext26 44B6                       __ptext18 41E8                       __ptext51 3EB4  
                     __ptext43 2E72                       __ptext35 3DA8                       __ptext27 450C  
                     __ptext19 4518                       __ptext52 3970                       __ptext44 4286  
                     __ptext36 4054                       __ptext28 4522                       __ptext53 3E02  
                     __ptext45 1976                       __ptext37 40A6                       __ptext29 452C  
                     __ptext54 3B9E                       __ptext46 1E36                       __ptext38 453A  
                     __ptext55 3A06                       __ptext47 35CC                       __ptext39 43D0  
                     __ptext56 31AE                       __ptext48 379A                       __ptext57 4490  
                     __ptext49 2260                       __ptext58 3C14                 ?_reverseDetect 0019  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     turnLeft@mL 0014  
                   turnLeft@mR 0016                ?_Colour_decider 004B                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005F                       _vfprintf 4238  
                ??_turnRight45 001D                       _turnLeft 38DA               ___aomod@dividend 0001  
            ??_reverseOneBlock 001D                    _setMotorPWM 31AE                  turnRight45@mL 0019  
                turnRight45@mR 001B                       intlevel2 0000                      sprintf@ap 006E  
               _high_threshold 0190               ??_fullSpeedAhead 0018                   ??_turnLeft45 001D  
                   BlueMove@mL 001F                     BlueMove@mR 0021                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 0045                ___aomod@counter 0011               _color_click_init 3F5E  
                     sprintf@f 0070                       sprintf@s 0060                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C            __end_of_turnRight45 3F0C                ??_reverseDetect 001D  
                  ??_turnRight 0018                  ___fladd@signs 000D             __end_of_turnLeft45 3EB4  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0012                _sendCharSerial4 44F4  
                 ___fladd@aexp 000E                   ___fladd@bexp 000F                   ___aomod@sign 0012  
