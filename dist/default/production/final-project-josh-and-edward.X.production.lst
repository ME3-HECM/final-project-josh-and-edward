

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Mar 12 21:19:34 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    98                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    99                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   100                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   101   000000                     
   102                           ; Generated 06/04/2022 GMT
   103                           ; 
   104                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution. Publication is not required when
   118                           ;        this file is used in an embedded application.
   119                           ; 
   120                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   121                           ;        software without specific prior written permission.
   122                           ; 
   123                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   124                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   125                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   126                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   127                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   128                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   129                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   130                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   131                           ; 
   132                           ; 
   133                           ; Code-generator required, PIC18F67K40 Definitions
   134                           ; 
   135                           ; SFR Addresses
   136   000000                     
   137                           	psect	idataBANK0
   138   0061BA                     __pidataBANK0:
   139                           	callstack 0
   140                           
   141                           ;initializer for _RunOneBlockTime
   142   0061BA  07D0               	dw	2000
   143                           
   144                           ;initializer for _Turn45Delay
   145   0061BC  00DC               	dw	220
   146                           
   147                           ;initializer for _power
   148   0061BE  001E               	dw	30
   149                           
   150                           ;initializer for _DataFlag
   151   0061C0  01                 	db	1
   152                           
   153                           	psect	idataBANK1
   154   0061C1                     __pidataBANK1:
   155                           	callstack 0
   156                           
   157                           ;initializer for _run_flag
   158   0061C1  0001               	dw	1
   159   000000                     _TRISEbits	set	3973
   160   000000                     _LATHbits	set	3968
   161   000000                     _TX4REG	set	3812
   162   000000                     _RC4STAbits	set	3815
   163   000000                     _SP4BRGH	set	3814
   164   000000                     _SSP2CON2bits	set	3802
   165   000000                     _RX4PPS	set	3605
   166   000000                     _SSP2CLKPPS	set	3612
   167   000000                     _SSP2DATPPS	set	3613
   168   000000                     _ANSELDbits	set	3751
   169   000000                     _SSP2ADD	set	3798
   170   000000                     _SSP2CON1bits	set	3801
   171   000000                     _LATAbits	set	3961
   172   000000                     _LATFbits	set	3966
   173   000000                     _LATGbits	set	3967
   174   000000                     _TRISAbits	set	3969
   175   000000                     _TRISGbits	set	3975
   176   000000                     _PORTFbits	set	3982
   177   000000                     _TRISHbits	set	3976
   178   000000                     _CCPR2H	set	4006
   179   000000                     _CCPR1H	set	4010
   180   000000                     _TRISCbits	set	3971
   181   000000                     _TRISDbits	set	3972
   182   000000                     _TRISFbits	set	3974
   183   000000                     _LATDbits	set	3964
   184   000000                     _RC4REG	set	3811
   185   000000                     _SP4BRGL	set	3813
   186   000000                     _TX4STAbits	set	3816
   187   000000                     _BAUD4CONbits	set	3817
   188   000000                     _SSP2CON2	set	3802
   189   000000                     _SSP2STAT	set	3800
   190   000000                     _ANSELFbits	set	3764
   191   000000                     _SSP2BUF	set	3797
   192   000000                     _PIE4bits	set	3629
   193   000000                     _PIR4bits	set	3639
   194   000000                     _RC0PPS	set	3682
   195   000000                     _RD5PPS	set	3695
   196   000000                     _RE2PPS	set	3700
   197   000000                     _RD6PPS	set	3696
   198   000000                     _RC7PPS	set	3689
   199   000000                     _CCPR4H	set	3873
   200   000000                     _CCPR3H	set	3877
   201   000000                     _CCP1CONbits	set	4011
   202   000000                     _CCPTMRS0bits	set	4013
   203   000000                     _T2PR	set	4028
   204   000000                     _T2CONbits	set	4029
   205   000000                     _TMR0L	set	4051
   206   000000                     _TMR0H	set	4052
   207   000000                     _CCP2CONbits	set	4007
   208   000000                     _CCP3CONbits	set	3878
   209   000000                     _CCP4CONbits	set	3874
   210   000000                     _T0CON1bits	set	4054
   211   000000                     _T0CON0bits	set	4053
   212   000000                     _RE4PPS	set	3702
   213   000000                     _RG6PPS	set	3720
   214   000000                     _T2CLKCONbits	set	4031
   215   000000                     _T2HLTbits	set	4030
   216                           
   217                           	psect	smallconst
   218   000E00                     __psmallconst:
   219                           	callstack 0
   220   000E00  00                 	db	0
   221   000E01                     STR_1:
   222   000E01  72                 	db	114	;'r'
   223   000E02  65                 	db	101	;'e'
   224   000E03  64                 	db	100	;'d'
   225   000E04  3D                 	db	61	;'='
   226   000E05  25                 	db	37
   227   000E06  64                 	db	100	;'d'
   228   000E07  20                 	db	32
   229   000E08  67                 	db	103	;'g'
   230   000E09  72                 	db	114	;'r'
   231   000E0A  65                 	db	101	;'e'
   232   000E0B  65                 	db	101	;'e'
   233   000E0C  6E                 	db	110	;'n'
   234   000E0D  3D                 	db	61	;'='
   235   000E0E  25                 	db	37
   236   000E0F  64                 	db	100	;'d'
   237   000E10  20                 	db	32
   238   000E11  62                 	db	98	;'b'
   239   000E12  6C                 	db	108	;'l'
   240   000E13  75                 	db	117	;'u'
   241   000E14  65                 	db	101	;'e'
   242   000E15  3D                 	db	61	;'='
   243   000E16  25                 	db	37
   244   000E17  64                 	db	100	;'d'
   245   000E18  20                 	db	32
   246   000E19  63                 	db	99	;'c'
   247   000E1A  6F                 	db	111	;'o'
   248   000E1B  6C                 	db	108	;'l'
   249   000E1C  6F                 	db	111	;'o'
   250   000E1D  75                 	db	117	;'u'
   251   000E1E  72                 	db	114	;'r'
   252   000E1F  3D                 	db	61	;'='
   253   000E20  25                 	db	37
   254   000E21  64                 	db	100	;'d'
   255   000E22  20                 	db	32
   256   000E23  0D                 	db	13
   257   000E24  0A                 	db	10
   258   000E25  00                 	db	0
   259   000E26                     STR_2:
   260   000E26  72                 	db	114	;'r'
   261   000E27  65                 	db	101	;'e'
   262   000E28  64                 	db	100	;'d'
   263   000E29  3D                 	db	61	;'='
   264   000E2A  25                 	db	37
   265   000E2B  66                 	db	102	;'f'
   266   000E2C  20                 	db	32
   267   000E2D  67                 	db	103	;'g'
   268   000E2E  72                 	db	114	;'r'
   269   000E2F  65                 	db	101	;'e'
   270   000E30  65                 	db	101	;'e'
   271   000E31  6E                 	db	110	;'n'
   272   000E32  3D                 	db	61	;'='
   273   000E33  25                 	db	37
   274   000E34  66                 	db	102	;'f'
   275   000E35  20                 	db	32
   276   000E36  62                 	db	98	;'b'
   277   000E37  6C                 	db	108	;'l'
   278   000E38  75                 	db	117	;'u'
   279   000E39  65                 	db	101	;'e'
   280   000E3A  3D                 	db	61	;'='
   281   000E3B  25                 	db	37
   282   000E3C  66                 	db	102	;'f'
   283   000E3D  20                 	db	32
   284   000E3E  6C                 	db	108	;'l'
   285   000E3F  75                 	db	117	;'u'
   286   000E40  6D                 	db	109	;'m'
   287   000E41  3D                 	db	61	;'='
   288   000E42  25                 	db	37
   289   000E43  64                 	db	100	;'d'
   290   000E44  20                 	db	32
   291   000E45  20                 	db	32
   292   000E46  0D                 	db	13
   293   000E47  0A                 	db	10
   294   000E48  00                 	db	0
   295   000E49                     STR_3:
   296   000E49  69                 	db	105	;'i'
   297   000E4A  6E                 	db	110	;'n'
   298   000E4B  66                 	db	102	;'f'
   299   000E4C  00                 	db	0
   300   000E4D                     STR_6:
   301   000E4D  6E                 	db	110	;'n'
   302   000E4E  61                 	db	97	;'a'
   303   000E4F  6E                 	db	110	;'n'
   304   000E50  00                 	db	0
   305   000E51  00                 	db	0	; dummy byte at the end
   306   000000                     
   307                           ; #config settings
   308                           
   309                           	psect	cinit
   310   005742                     __pcinit:
   311                           	callstack 0
   312   005742                     start_initialization:
   313                           	callstack 0
   314   005742                     __initialization:
   315                           	callstack 0
   316                           
   317                           ; Initialize objects allocated to BANK1 (2 bytes)
   318                           ; load TBLPTR registers with __pidataBANK1
   319   005742  0EC1               	movlw	low __pidataBANK1
   320   005744  6EF6               	movwf	tblptrl,c
   321   005746  0E61               	movlw	high __pidataBANK1
   322   005748  6EF7               	movwf	tblptrh,c
   323   00574A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   324   00574C  6EF8               	movwf	tblptru,c
   325   00574E  0009               	tblrd		*+	;fetch initializer
   326   005750  CFF5 F1D6          	movff	tablat,__pdataBANK1
   327   005754  0009               	tblrd		*+	;fetch initializer
   328   005756  CFF5 F1D7          	movff	tablat,__pdataBANK1+1
   329                           
   330                           ; Initialize objects allocated to BANK0 (7 bytes)
   331                           ; load TBLPTR registers with __pidataBANK0
   332   00575A  0EBA               	movlw	low __pidataBANK0
   333   00575C  6EF6               	movwf	tblptrl,c
   334   00575E  0E61               	movlw	high __pidataBANK0
   335   005760  6EF7               	movwf	tblptrh,c
   336   005762  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   337   005764  6EF8               	movwf	tblptru,c
   338   005766  EE00  F0F7         	lfsr	0,__pdataBANK0
   339   00576A  EE10 F007          	lfsr	1,7
   340   00576E                     copy_data0:
   341   00576E  0009               	tblrd		*+
   342   005770  CFF5 FFEE          	movff	tablat,postinc0
   343   005774  50E5               	movf	postdec1,w,c
   344   005776  50E1               	movf	fsr1l,w,c
   345   005778  E1FA               	bnz	copy_data0
   346                           
   347                           ; Clear objects allocated to BANK2 (240 bytes)
   348   00577A  EE02  F000         	lfsr	0,__pbssBANK2
   349   00577E  0EF0               	movlw	240
   350   005780                     clear_0:
   351   005780  6AEE               	clrf	postinc0,c
   352   005782  06E8               	decf	wreg,f,c
   353   005784  E1FD               	bnz	clear_0
   354                           
   355                           ; Clear objects allocated to BANK1 (102 bytes)
   356   005786  EE01  F070         	lfsr	0,__pbssBANK1
   357   00578A  0E66               	movlw	102
   358   00578C                     clear_1:
   359   00578C  6AEE               	clrf	postinc0,c
   360   00578E  06E8               	decf	wreg,f,c
   361   005790  E1FD               	bnz	clear_1
   362                           
   363                           ; Clear objects allocated to BANK0 (38 bytes)
   364   005792  EE00  F0D1         	lfsr	0,__pbssBANK0
   365   005796  0E26               	movlw	38
   366   005798                     clear_2:
   367   005798  6AEE               	clrf	postinc0,c
   368   00579A  06E8               	decf	wreg,f,c
   369   00579C  E1FD               	bnz	clear_2
   370                           
   371                           ; Clear objects allocated to COMRAM (1 bytes)
   372   00579E  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   373   0057A0                     end_of_initialization:
   374                           	callstack 0
   375   0057A0                     __end_of__initialization:
   376                           	callstack 0
   377   0057A0  0100               	movlb	0
   378   0057A2  EF94  F011         	goto	_main	;jump to C main() function
   379                           
   380                           	psect	bssCOMRAM
   381   00005F                     __pbssCOMRAM:
   382                           	callstack 0
   383   00005F                     _TxBufWriteCnt:
   384                           	callstack 0
   385   00005F                     	ds	1
   386                           
   387                           	psect	bssBANK0
   388   0000D1                     __pbssBANK0:
   389                           	callstack 0
   390   0000D1                     _EUSART4RXbuf:
   391                           	callstack 0
   392   0000D1                     	ds	20
   393   0000E5                     floorf@F526:
   394                           	callstack 0
   395   0000E5                     	ds	4
   396   0000E9                     ___fpclassifyf@F465:
   397                           	callstack 0
   398   0000E9                     	ds	4
   399   0000ED                     _width:
   400                           	callstack 0
   401   0000ED                     	ds	2
   402   0000EF                     _prec:
   403                           	callstack 0
   404   0000EF                     	ds	2
   405   0000F1                     _lost_flag:
   406                           	callstack 0
   407   0000F1                     	ds	2
   408   0000F3                     _flags:
   409                           	callstack 0
   410   0000F3                     	ds	1
   411   0000F4                     _TxBufReadCnt:
   412                           	callstack 0
   413   0000F4                     	ds	1
   414   0000F5                     _RxBufReadCnt:
   415                           	callstack 0
   416   0000F5                     	ds	1
   417   0000F6                     _RxBufWriteCnt:
   418                           	callstack 0
   419   0000F6                     	ds	1
   420                           
   421                           	psect	dataBANK0
   422   0000F7                     __pdataBANK0:
   423                           	callstack 0
   424   0000F7                     _RunOneBlockTime:
   425                           	callstack 0
   426   0000F7                     	ds	2
   427   0000F9                     _Turn45Delay:
   428                           	callstack 0
   429   0000F9                     	ds	2
   430   0000FB                     _power:
   431                           	callstack 0
   432   0000FB                     	ds	2
   433   0000FD                     _DataFlag:
   434                           	callstack 0
   435   0000FD                     	ds	1
   436                           
   437                           	psect	bssBANK1
   438   000170                     __pbssBANK1:
   439                           	callstack 0
   440   000170                     	ds	12
   441   00017C                     _move_count:
   442                           	callstack 0
   443   00017C                     	ds	2
   444   00017E                     _WayBack:
   445                           	callstack 0
   446   00017E                     	ds	50
   447   0001B0                     _rel:
   448                           	callstack 0
   449   0001B0                     	ds	12
   450   0001BC                     _motorR:
   451                           	callstack 0
   452   0001BC                     	ds	9
   453   0001C5                     _motorL:
   454                           	callstack 0
   455   0001C5                     	ds	9
   456   0001CE                     _vals:
   457                           	callstack 0
   458   0001CE                     	ds	8
   459                           
   460                           	psect	dataBANK1
   461   0001D6                     __pdataBANK1:
   462                           	callstack 0
   463   0001D6                     _run_flag:
   464                           	callstack 0
   465   0001D6                     	ds	2
   466                           
   467                           	psect	bssBANK2
   468   000200                     __pbssBANK2:
   469                           	callstack 0
   470   000200                     _EUSART4TXbuf:
   471                           	callstack 0
   472   000200                     	ds	60
   473   00023C                     _Time_forward:
   474                           	callstack 0
   475   00023C                     	ds	100
   476   0002A0                     _dbuf:
   477                           	callstack 0
   478   0002A0                     	ds	80
   479                           
   480                           	psect	cstackBANK1
   481   000100                     __pcstackBANK1:
   482                           	callstack 0
   483   000100                     main@buf:
   484                           	callstack 0
   485                           
   486                           ; 100 bytes @ 0x0
   487   000100                     	ds	100
   488   000164                     main@temp:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x64
   492   000164                     	ds	2
   493   000166                     main@colour_1291:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x66
   497   000166                     	ds	2
   498   000168                     main@lost_count:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x68
   502   000168                     	ds	2
   503   00016A                     main@consecuitive:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x6A
   507   00016A                     	ds	2
   508   00016C                     main@colour:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x6C
   512   00016C                     	ds	2
   513   00016E                     main@prev_colour:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x6E
   517   00016E                     	ds	2
   518                           
   519                           	psect	cstackBANK0
   520   000060                     __pcstackBANK0:
   521                           	callstack 0
   522   000060                     efgtoa@fp:
   523                           	callstack 0
   524   000060                     colour_rel@L:
   525                           	callstack 0
   526   000060                     _Colour_decider$3146:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x0
   530   000060                     	ds	2
   531   000062                     efgtoa@f:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x2
   535   000062                     	ds	2
   536   000064                     Colour_decider@Cmax_i:
   537                           	callstack 0
   538   000064                     _colour_rel$3144:
   539                           	callstack 0
   540                           
   541                           ; 4 bytes @ 0x4
   542   000064                     	ds	2
   543   000066                     efgtoa@c:
   544                           	callstack 0
   545   000066                     Colour_decider@RGB_col:
   546                           	callstack 0
   547                           
   548                           ; 12 bytes @ 0x6
   549   000066                     	ds	1
   550   000067                     ??_efgtoa:
   551                           
   552                           ; 1 bytes @ 0x7
   553   000067                     	ds	1
   554   000068                     _colour_rel$3145:
   555                           	callstack 0
   556                           
   557                           ; 4 bytes @ 0x8
   558   000068                     	ds	1
   559   000069                     efgtoa@ne:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x9
   563   000069                     	ds	2
   564   00006B                     efgtoa@p:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0xB
   568   00006B                     	ds	1
   569   00006C                     colour_rel@R:
   570                           	callstack 0
   571                           
   572                           ; 4 bytes @ 0xC
   573   00006C                     	ds	1
   574   00006D                     efgtoa@t:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0xD
   578   00006D                     	ds	2
   579   00006F                     _efgtoa$2774:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0xF
   583   00006F                     	ds	1
   584   000070                     colour_rel@G:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x10
   588   000070                     	ds	1
   589   000071                     efgtoa@pp:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x11
   593   000071                     	ds	1
   594   000072                     efgtoa@mode:
   595                           	callstack 0
   596   000072                     Colour_decider@Cmax:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0x12
   600   000072                     	ds	1
   601   000073                     efgtoa@nmode:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x13
   605   000073                     	ds	1
   606   000074                     efgtoa@d:
   607                           	callstack 0
   608   000074                     colour_rel@B:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0x14
   612   000074                     	ds	2
   613   000076                     efgtoa@m:
   614                           	callstack 0
   615   000076                     Colour_decider@Cmin:
   616                           	callstack 0
   617                           
   618                           ; 4 bytes @ 0x16
   619   000076                     	ds	2
   620   000078                     efgtoa@e:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x18
   624   000078                     	ds	2
   625   00007A                     Colour_decider@i:
   626                           	callstack 0
   627   00007A                     efgtoa@w:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x1A
   631   00007A                     	ds	2
   632   00007C                     Colour_decider@Hue:
   633                           	callstack 0
   634   00007C                     efgtoa@ou:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x1C
   638   00007C                     	ds	4
   639   000080                     efgtoa@i:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x20
   643   000080                     	ds	2
   644   000082                     efgtoa@h:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x22
   648   000082                     	ds	4
   649   000086                     efgtoa@l:
   650                           	callstack 0
   651                           
   652                           ; 4 bytes @ 0x26
   653   000086                     	ds	4
   654   00008A                     efgtoa@sign:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0x2A
   658   00008A                     	ds	1
   659   00008B                     efgtoa@n:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x2B
   663   00008B                     	ds	2
   664   00008D                     efgtoa@g:
   665                           	callstack 0
   666                           
   667                           ; 4 bytes @ 0x2D
   668   00008D                     	ds	4
   669   000091                     efgtoa@u:
   670                           	callstack 0
   671                           
   672                           ; 4 bytes @ 0x31
   673   000091                     	ds	4
   674   000095                     vfpfcnvrt@fp:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x35
   678   000095                     	ds	2
   679   000097                     vfpfcnvrt@fmt:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x37
   683   000097                     	ds	2
   684   000099                     vfpfcnvrt@ap:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x39
   688   000099                     	ds	2
   689   00009B                     ??_vfpfcnvrt:
   690                           
   691                           ; 1 bytes @ 0x3B
   692   00009B                     	ds	2
   693   00009D                     vfpfcnvrt@convarg:
   694                           	callstack 0
   695                           
   696                           ; 8 bytes @ 0x3D
   697   00009D                     	ds	8
   698   0000A5                     vfpfcnvrt@c:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x45
   702   0000A5                     	ds	1
   703   0000A6                     vfpfcnvrt@cp:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x46
   707   0000A6                     	ds	2
   708   0000A8                     ?_vfprintf:
   709                           	callstack 0
   710   0000A8                     vfprintf@fp:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x48
   714   0000A8                     	ds	2
   715   0000AA                     vfprintf@fmt:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x4A
   719   0000AA                     	ds	2
   720   0000AC                     vfprintf@ap:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x4C
   724   0000AC                     	ds	2
   725   0000AE                     vfprintf@cfmt:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x4E
   729   0000AE                     	ds	2
   730   0000B0                     ?_sprintf:
   731                           	callstack 0
   732   0000B0                     sprintf@s:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x50
   736   0000B0                     	ds	2
   737   0000B2                     sprintf@fmt:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x52
   741   0000B2                     	ds	16
   742   0000C2                     sprintf@ap:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x62
   746   0000C2                     	ds	2
   747   0000C4                     sprintf@f:
   748                           	callstack 0
   749                           
   750                           ; 11 bytes @ 0x64
   751   0000C4                     	ds	11
   752   0000CF                     ??_main:
   753                           
   754                           ; 1 bytes @ 0x6F
   755   0000CF                     	ds	2
   756                           
   757                           	psect	cstackCOMRAM
   758   000001                     __pcstackCOMRAM:
   759                           	callstack 0
   760   000001                     ??_I2C_2_Master_Idle:
   761   000001                     ?___fpclassifyf:
   762                           	callstack 0
   763   000001                     ?___wmul:
   764                           	callstack 0
   765   000001                     ?___fladd:
   766                           	callstack 0
   767   000001                     ?_labs:
   768                           	callstack 0
   769   000001                     ?___flneg:
   770                           	callstack 0
   771   000001                     ?___fltol:
   772                           	callstack 0
   773   000001                     ?___xxtofl:
   774                           	callstack 0
   775   000001                     ?___aodiv:
   776                           	callstack 0
   777   000001                     ?___aomod:
   778                           	callstack 0
   779   000001                     sendCharSerial4@charToSend:
   780                           	callstack 0
   781   000001                     initDCmotorsPWM@PWMperiod:
   782                           	callstack 0
   783   000001                     TurnDelay@Turn45Delay:
   784                           	callstack 0
   785   000001                     getTMR0val@moving:
   786                           	callstack 0
   787   000001                     delayed_ms@time:
   788                           	callstack 0
   789   000001                     ___wmul@multiplier:
   790                           	callstack 0
   791   000001                     memcpy@d1:
   792                           	callstack 0
   793   000001                     fputc@c:
   794                           	callstack 0
   795   000001                     strcpy@dest:
   796                           	callstack 0
   797   000001                     ___flneg@f1:
   798                           	callstack 0
   799   000001                     ___fltol@f1:
   800                           	callstack 0
   801   000001                     ___fladd@b:
   802                           	callstack 0
   803   000001                     ___xxtofl@val:
   804                           	callstack 0
   805   000001                     ___fpclassifyf@x:
   806                           	callstack 0
   807   000001                     labs@a:
   808                           	callstack 0
   809   000001                     ___aodiv@dividend:
   810                           	callstack 0
   811   000001                     ___aomod@dividend:
   812                           	callstack 0
   813                           
   814                           ; 8 bytes @ 0x0
   815   000001                     	ds	1
   816   000002                     ??_I2C_2_Master_Read:
   817   000002                     I2C_2_Master_Write@data_byte:
   818                           	callstack 0
   819   000002                     sendStringSerial4@string:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x1
   823   000002                     	ds	1
   824   000003                     ??_delayed_ms:
   825   000003                     ??_TurnDelay:
   826   000003                     color_writetoaddr@value:
   827                           	callstack 0
   828   000003                     I2C_2_Master_Read@ack:
   829                           	callstack 0
   830   000003                     ___wmul@multiplicand:
   831                           	callstack 0
   832   000003                     memcpy@s1:
   833                           	callstack 0
   834   000003                     fputc@fp:
   835                           	callstack 0
   836   000003                     strcpy@src:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x2
   840   000003                     	ds	1
   841   000004                     color_writetoaddr@address:
   842                           	callstack 0
   843   000004                     I2C_2_Master_Read@tmp:
   844                           	callstack 0
   845   000004                     delayed_ms@i:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x3
   849   000004                     	ds	1
   850   000005                     ??_fputc:
   851   000005                     ??___fpclassifyf:
   852   000005                     ??_labs:
   853   000005                     ??_color_click_init:
   854   000005                     ??___fltol:
   855   000005                     ??___xxtofl:
   856   000005                     ?_color_read_lum:
   857                           	callstack 0
   858   000005                     ?_color_read_Red:
   859                           	callstack 0
   860   000005                     ?_color_read_Green:
   861                           	callstack 0
   862   000005                     ?_color_read_Blue:
   863                           	callstack 0
   864   000005                     ___wmul@product:
   865                           	callstack 0
   866   000005                     memcpy@n:
   867                           	callstack 0
   868   000005                     strcpy@s:
   869                           	callstack 0
   870   000005                     ___fladd@a:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0x4
   874   000005                     	ds	2
   875   000007                     ??_color_read_lum:
   876   000007                     ??_color_read_Red:
   877   000007                     ??_color_read_Green:
   878   000007                     ??_color_read_Blue:
   879   000007                     ?___lwdiv:
   880                           	callstack 0
   881   000007                     ___lwdiv@dividend:
   882                           	callstack 0
   883   000007                     memcpy@d:
   884                           	callstack 0
   885   000007                     strcpy@d:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x6
   889   000007                     	ds	2
   890   000009                     ??___fladd:
   891   000009                     ___fltol@sign1:
   892                           	callstack 0
   893   000009                     ___xxtofl@sign:
   894                           	callstack 0
   895   000009                     ___lwdiv@divisor:
   896                           	callstack 0
   897   000009                     ___fpclassifyf@e:
   898                           	callstack 0
   899   000009                     memcpy@s:
   900                           	callstack 0
   901   000009                     ___aodiv@divisor:
   902                           	callstack 0
   903   000009                     ___aomod@divisor:
   904                           	callstack 0
   905                           
   906                           ; 8 bytes @ 0x8
   907   000009                     	ds	1
   908   00000A                     ___fltol@exp1:
   909                           	callstack 0
   910   00000A                     ___xxtofl@exp:
   911                           	callstack 0
   912   00000A                     color_read_lum@tmp:
   913                           	callstack 0
   914   00000A                     color_read_Red@tmp:
   915                           	callstack 0
   916   00000A                     color_read_Green@tmp:
   917                           	callstack 0
   918   00000A                     color_read_Blue@tmp:
   919                           	callstack 0
   920   00000A                     fputs@s:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x9
   924   00000A                     	ds	1
   925   00000B                     memcpy@tmp:
   926                           	callstack 0
   927   00000B                     ___lwdiv@quotient:
   928                           	callstack 0
   929   00000B                     ___xxtofl@arg:
   930                           	callstack 0
   931   00000B                     ___fpclassifyf@u:
   932                           	callstack 0
   933                           
   934                           ; 4 bytes @ 0xA
   935   00000B                     	ds	1
   936   00000C                     readColours@vals:
   937                           	callstack 0
   938   00000C                     fputs@fp:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0xB
   942   00000C                     	ds	1
   943   00000D                     ___lwdiv@counter:
   944                           	callstack 0
   945   00000D                     ___fladd@signs:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0xC
   949   00000D                     	ds	1
   950   00000E                     ___fladd@aexp:
   951                           	callstack 0
   952   00000E                     fputs@c:
   953                           	callstack 0
   954   00000E                     setMotorPWM@m:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0xD
   958   00000E                     	ds	1
   959   00000F                     ___fladd@bexp:
   960                           	callstack 0
   961   00000F                     fputs@i:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0xE
   965   00000F                     	ds	1
   966   000010                     ??_setMotorPWM:
   967   000010                     ___fladd@grs:
   968                           	callstack 0
   969                           
   970                           ; 1 bytes @ 0xF
   971   000010                     	ds	1
   972   000011                     ?___flmul:
   973                           	callstack 0
   974   000011                     ___aodiv@counter:
   975                           	callstack 0
   976   000011                     ___aomod@counter:
   977                           	callstack 0
   978   000011                     pad@fp:
   979                           	callstack 0
   980   000011                     ___flmul@b:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x10
   984   000011                     	ds	1
   985   000012                     setMotorPWM@posDuty:
   986                           	callstack 0
   987   000012                     ___aodiv@sign:
   988                           	callstack 0
   989   000012                     ___aomod@sign:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x11
   993   000012                     	ds	1
   994   000013                     ?_abs:
   995                           	callstack 0
   996   000013                     setMotorPWM@negDuty:
   997                           	callstack 0
   998   000013                     pad@buf:
   999                           	callstack 0
  1000   000013                     abs@a:
  1001                           	callstack 0
  1002   000013                     ___aodiv@quotient:
  1003                           	callstack 0
  1004                           
  1005                           ; 8 bytes @ 0x12
  1006   000013                     	ds	1
  1007   000014                     stop@mL:
  1008                           	callstack 0
  1009   000014                     turnLeft@mL:
  1010                           	callstack 0
  1011   000014                     turnRight@mL:
  1012                           	callstack 0
  1013   000014                     fullSpeedAhead@mL:
  1014                           	callstack 0
  1015   000014                     timed_forward@mL:
  1016                           	callstack 0
  1017   000014                     fullSpeedBack@mL:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x13
  1021   000014                     	ds	1
  1022   000015                     ??_abs:
  1023   000015                     pad@p:
  1024                           	callstack 0
  1025   000015                     ___flmul@a:
  1026                           	callstack 0
  1027                           
  1028                           ; 4 bytes @ 0x14
  1029   000015                     	ds	1
  1030   000016                     stop@mR:
  1031                           	callstack 0
  1032   000016                     turnLeft@mR:
  1033                           	callstack 0
  1034   000016                     turnRight@mR:
  1035                           	callstack 0
  1036   000016                     fullSpeedAhead@mR:
  1037                           	callstack 0
  1038   000016                     timed_forward@mR:
  1039                           	callstack 0
  1040   000016                     fullSpeedBack@mR:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x15
  1044   000016                     	ds	1
  1045   000017                     ??_pad:
  1046                           
  1047                           ; 1 bytes @ 0x16
  1048   000017                     	ds	1
  1049   000018                     ??_fullSpeedAhead:
  1050   000018                     ??_stop:
  1051   000018                     ??_turnLeft:
  1052   000018                     ??_turnRight:
  1053   000018                     ??_fullSpeedBack:
  1054   000018                     timed_forward@time:
  1055                           	callstack 0
  1056   000018                     pad@i:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x17
  1060   000018                     	ds	1
  1061   000019                     ??___flmul:
  1062                           
  1063                           ; 1 bytes @ 0x18
  1064   000019                     	ds	1
  1065   00001A                     ??_timed_forward:
  1066   00001A                     turnRight45@mL:
  1067                           	callstack 0
  1068   00001A                     turnLeft45@mL:
  1069                           	callstack 0
  1070   00001A                     reverseDetect@mL:
  1071                           	callstack 0
  1072   00001A                     reverseOneBlock@mL:
  1073                           	callstack 0
  1074   00001A                     ForwardOneBlock@mL:
  1075                           	callstack 0
  1076   00001A                     Forwardhalfblock@mL:
  1077                           	callstack 0
  1078   00001A                     RetryMove@mL:
  1079                           	callstack 0
  1080   00001A                     pad@w:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x19
  1084   00001A                     	ds	2
  1085   00001C                     turnRight45@mR:
  1086                           	callstack 0
  1087   00001C                     turnLeft45@mR:
  1088                           	callstack 0
  1089   00001C                     reverseDetect@mR:
  1090                           	callstack 0
  1091   00001C                     reverseOneBlock@mR:
  1092                           	callstack 0
  1093   00001C                     ForwardOneBlock@mR:
  1094                           	callstack 0
  1095   00001C                     Forwardhalfblock@mR:
  1096                           	callstack 0
  1097   00001C                     RetryMove@mR:
  1098                           	callstack 0
  1099   00001C                     dtoa@fp:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x1B
  1103   00001C                     	ds	1
  1104   00001D                     ___flmul@sign:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x1C
  1108   00001D                     	ds	1
  1109   00001E                     ??_Forwardhalfblock:
  1110   00001E                     ??_RetryMove:
  1111   00001E                     ??_turnRight45:
  1112   00001E                     ??_turnLeft45:
  1113   00001E                     ??_reverseDetect:
  1114   00001E                     ??_reverseOneBlock:
  1115   00001E                     ??_ForwardOneBlock:
  1116   00001E                     ___flmul@grs:
  1117                           	callstack 0
  1118   00001E                     dtoa@d:
  1119                           	callstack 0
  1120                           
  1121                           ; 8 bytes @ 0x1D
  1122   00001E                     	ds	2
  1123   000020                     RedMove@mL:
  1124                           	callstack 0
  1125   000020                     GreenMove@mL:
  1126                           	callstack 0
  1127   000020                     BlueMove@mL:
  1128                           	callstack 0
  1129   000020                     YellowMove@mL:
  1130                           	callstack 0
  1131   000020                     PinkMove@mL:
  1132                           	callstack 0
  1133   000020                     OrangeMove@mL:
  1134                           	callstack 0
  1135   000020                     LightBlueMove@mL:
  1136                           	callstack 0
  1137   000020                     ReverseYellow@mL:
  1138                           	callstack 0
  1139   000020                     ReversePink@mL:
  1140                           	callstack 0
  1141   000020                     turnCalibration@mL:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x1F
  1145   000020                     	ds	2
  1146   000022                     ___flmul@aexp:
  1147                           	callstack 0
  1148   000022                     RedMove@mR:
  1149                           	callstack 0
  1150   000022                     GreenMove@mR:
  1151                           	callstack 0
  1152   000022                     BlueMove@mR:
  1153                           	callstack 0
  1154   000022                     YellowMove@mR:
  1155                           	callstack 0
  1156   000022                     PinkMove@mR:
  1157                           	callstack 0
  1158   000022                     OrangeMove@mR:
  1159                           	callstack 0
  1160   000022                     LightBlueMove@mR:
  1161                           	callstack 0
  1162   000022                     ReverseYellow@mR:
  1163                           	callstack 0
  1164   000022                     ReversePink@mR:
  1165                           	callstack 0
  1166   000022                     turnCalibration@mR:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x21
  1170   000022                     	ds	1
  1171   000023                     ___flmul@bexp:
  1172                           	callstack 0
  1173                           
  1174                           ; 1 bytes @ 0x22
  1175   000023                     	ds	1
  1176   000024                     ??_turnCalibration:
  1177   000024                     go_Home@WayBack:
  1178                           	callstack 0
  1179   000024                     ___flmul@prod:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x23
  1183   000024                     	ds	2
  1184   000026                     ??_dtoa:
  1185   000026                     go_Home@Time_forward:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x25
  1189   000026                     	ds	2
  1190   000028                     ??_go_Home:
  1191   000028                     ___flmul@temp:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x27
  1195   000028                     	ds	2
  1196   00002A                     ?___flsub:
  1197                           	callstack 0
  1198   00002A                     ___flge@ff1:
  1199                           	callstack 0
  1200   00002A                     ___flsub@b:
  1201                           	callstack 0
  1202                           
  1203                           ; 4 bytes @ 0x29
  1204   00002A                     	ds	1
  1205   00002B                     go_Home@i:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x2A
  1209   00002B                     	ds	3
  1210   00002E                     _dtoa$2743:
  1211                           	callstack 0
  1212   00002E                     ___flge@ff2:
  1213                           	callstack 0
  1214   00002E                     ___flsub@a:
  1215                           	callstack 0
  1216                           
  1217                           ; 4 bytes @ 0x2D
  1218   00002E                     	ds	2
  1219   000030                     dtoa@p:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x2F
  1223   000030                     	ds	2
  1224   000032                     ??___flge:
  1225   000032                     ?___fldiv:
  1226                           	callstack 0
  1227   000032                     dtoa@w:
  1228                           	callstack 0
  1229   000032                     ___fleq@ff1:
  1230                           	callstack 0
  1231   000032                     ___fldiv@b:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x31
  1235   000032                     	ds	2
  1236   000034                     dtoa@n:
  1237                           	callstack 0
  1238                           
  1239                           ; 8 bytes @ 0x33
  1240   000034                     	ds	2
  1241   000036                     ___fleq@ff2:
  1242                           	callstack 0
  1243   000036                     ___fldiv@a:
  1244                           	callstack 0
  1245                           
  1246                           ; 4 bytes @ 0x35
  1247   000036                     	ds	4
  1248   00003A                     ??___fldiv:
  1249   00003A                     ??___fleq:
  1250                           
  1251                           ; 1 bytes @ 0x39
  1252   00003A                     	ds	2
  1253   00003C                     dtoa@i:
  1254                           	callstack 0
  1255                           
  1256                           ; 2 bytes @ 0x3B
  1257   00003C                     	ds	2
  1258   00003E                     dtoa@s:
  1259                           	callstack 0
  1260   00003E                     ___fldiv@rem:
  1261                           	callstack 0
  1262                           
  1263                           ; 4 bytes @ 0x3D
  1264   00003E                     	ds	4
  1265   000042                     ___fldiv@sign:
  1266                           	callstack 0
  1267                           
  1268                           ; 1 bytes @ 0x41
  1269   000042                     	ds	1
  1270   000043                     ___fldiv@new_exp:
  1271                           	callstack 0
  1272                           
  1273                           ; 2 bytes @ 0x42
  1274   000043                     	ds	2
  1275   000045                     ___fldiv@grs:
  1276                           	callstack 0
  1277                           
  1278                           ; 4 bytes @ 0x44
  1279   000045                     	ds	4
  1280   000049                     ___fldiv@bexp:
  1281                           	callstack 0
  1282                           
  1283                           ; 1 bytes @ 0x48
  1284   000049                     	ds	1
  1285   00004A                     ___fldiv@aexp:
  1286                           	callstack 0
  1287                           
  1288                           ; 1 bytes @ 0x49
  1289   00004A                     	ds	1
  1290   00004B                     ?_Colour_decider:
  1291                           	callstack 0
  1292   00004B                     ?_floorf:
  1293                           	callstack 0
  1294   00004B                     colour_rel@vals:
  1295                           	callstack 0
  1296   00004B                     Colour_decider@vals:
  1297                           	callstack 0
  1298   00004B                     floorf@x:
  1299                           	callstack 0
  1300                           
  1301                           ; 4 bytes @ 0x4A
  1302   00004B                     	ds	2
  1303   00004D                     colour_rel@rel:
  1304                           	callstack 0
  1305   00004D                     Colour_decider@rel:
  1306                           	callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x4C
  1309   00004D                     	ds	2
  1310   00004F                     ??_floorf:
  1311   00004F                     ??_Colour_decider:
  1312                           
  1313                           ; 1 bytes @ 0x4E
  1314   00004F                     	ds	6
  1315   000055                     floorf@m:
  1316                           	callstack 0
  1317                           
  1318                           ; 4 bytes @ 0x54
  1319   000055                     	ds	4
  1320   000059                     floorf@e:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x58
  1324   000059                     	ds	2
  1325   00005B                     floorf@u:
  1326                           	callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x5A
  1329   00005B                     	ds	4
  1330   00005F                     
  1331                           ; 1 bytes @ 0x5E
  1332 ;;
  1333 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1334 ;;
  1335 ;; *************** function _main *****************
  1336 ;; Defined at:
  1337 ;;		line 30 in file "main.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  colour          2  108[BANK1 ] int 
  1342 ;;  colour          2  102[BANK1 ] int 
  1343 ;;  temp            2  100[BANK1 ] int 
  1344 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1345 ;;  prev_colour     2  110[BANK1 ] int 
  1346 ;;  consecuitive    2  106[BANK1 ] int 
  1347 ;;  lost_count      2  104[BANK1 ] int 
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1358 ;;      Locals:         0       0     112       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1359 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1360 ;;      Totals:         0       2     112       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1361 ;;Total ram usage:      114 bytes
  1362 ;; Hardware stack levels required when called: 8
  1363 ;; This function calls:
  1364 ;;		_BlueMove
  1365 ;;		_Colour_decider
  1366 ;;		_Forwardhalfblock
  1367 ;;		_GreenMove
  1368 ;;		_I2C_2_Master_Init
  1369 ;;		_Interrupts_init
  1370 ;;		_LightBlueMove
  1371 ;;		_OrangeMove
  1372 ;;		_PinkMove
  1373 ;;		_RedMove
  1374 ;;		_RetryMove
  1375 ;;		_Timer0_init
  1376 ;;		_YellowMove
  1377 ;;		_color_click_init
  1378 ;;		_colour_rel
  1379 ;;		_fullSpeedAhead
  1380 ;;		_getTMR0val
  1381 ;;		_go_Home
  1382 ;;		_initDCmotorsPWM
  1383 ;;		_initUSART4
  1384 ;;		_readColours
  1385 ;;		_sendStringSerial4
  1386 ;;		_sprintf
  1387 ;;		_stop
  1388 ;;		_turnCalibration
  1389 ;; This function is called by:
  1390 ;;		Startup code after reset
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text0
  1395   002328                     __ptext0:
  1396                           	callstack 0
  1397   002328                     _main:
  1398                           	callstack 23
  1399   002328                     
  1400                           ;main.c: 31:     initUSART4();
  1401   002328  ECAD  F030         	call	_initUSART4	;wreg free
  1402   00232C                     
  1403                           ;main.c: 32:     Interrupts_init();
  1404   00232C  ECE3  F030         	call	_Interrupts_init	;wreg free
  1405   002330                     
  1406                           ;main.c: 33:     color_click_init();
  1407   002330  EC5C  F02D         	call	_color_click_init	;wreg free
  1408   002334                     
  1409                           ;main.c: 34:     I2C_2_Master_Init();
  1410   002334  EC3E  F030         	call	_I2C_2_Master_Init	;wreg free
  1411   002338                     
  1412                           ;main.c: 35:     initDCmotorsPWM(200);
  1413   002338  0E00               	movlw	0
  1414   00233A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1415   00233C  0EC8               	movlw	200
  1416   00233E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1417   002340  EC00  F02A         	call	_initDCmotorsPWM	;wreg free
  1418   002344                     
  1419                           ;main.c: 36:     char buf[100];;main.c: 38:     TRISGbits.TRISG1 = 0;
  1420   002344  9287               	bcf	135,1,c	;volatile
  1421   002346                     
  1422                           ;main.c: 39:     TRISAbits.TRISA4 = 0;
  1423   002346  9881               	bcf	129,4,c	;volatile
  1424   002348                     
  1425                           ;main.c: 40:     TRISFbits.TRISF7 = 0;
  1426   002348  9E86               	bcf	134,7,c	;volatile
  1427   00234A                     
  1428                           ;main.c: 41:     TRISFbits.TRISF2 = 1;
  1429   00234A  8486               	bsf	134,2,c	;volatile
  1430   00234C                     
  1431                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1432   00234C  010E               	movlb	14	; () banked
  1433   00234E  95B4               	bcf	180,2,b	;volatile
  1434   002350                     
  1435                           ; BSR set to: 14
  1436                           ;main.c: 43:     TRISFbits.TRISF3 = 1;
  1437   002350  8686               	bsf	134,3,c	;volatile
  1438   002352                     
  1439                           ; BSR set to: 14
  1440                           ;main.c: 44:     ANSELFbits.ANSELF3=0;
  1441   002352  97B4               	bcf	180,3,b	;volatile
  1442   002354                     
  1443                           ; BSR set to: 14
  1444                           ;main.c: 45:     LATGbits.LATG1=1;
  1445   002354  827F               	bsf	127,1,c	;volatile
  1446   002356                     
  1447                           ; BSR set to: 14
  1448                           ;main.c: 46:     LATAbits.LATA4=1;
  1449   002356  8879               	bsf	121,4,c	;volatile
  1450   002358                     
  1451                           ; BSR set to: 14
  1452                           ;main.c: 47:     LATFbits.LATF7=1;
  1453   002358  8E7E               	bsf	126,7,c	;volatile
  1454   00235A                     
  1455                           ; BSR set to: 14
  1456                           ;main.c: 50:     LATDbits.LATD7=0;
  1457   00235A  9E7C               	bcf	124,7,c	;volatile
  1458   00235C                     
  1459                           ; BSR set to: 14
  1460                           ;main.c: 51:     TRISDbits.TRISD7=0;
  1461   00235C  9E84               	bcf	132,7,c	;volatile
  1462   00235E                     
  1463                           ; BSR set to: 14
  1464                           ;main.c: 52:     LATHbits.LATH3=0;
  1465   00235E  9680               	bcf	128,3,c	;volatile
  1466   002360                     
  1467                           ; BSR set to: 14
  1468                           ;main.c: 53:     TRISHbits.TRISH3=0;
  1469   002360  9688               	bcf	136,3,c	;volatile
  1470   002362                     
  1471                           ; BSR set to: 14
  1472                           ;main.c: 56:     LATHbits.LATH0=0;
  1473   002362  9080               	bcf	128,0,c	;volatile
  1474   002364                     
  1475                           ; BSR set to: 14
  1476                           ;main.c: 57:     TRISHbits.TRISH0=0;
  1477   002364  9088               	bcf	136,0,c	;volatile
  1478   002366                     
  1479                           ; BSR set to: 14
  1480                           ;main.c: 60:     LATFbits.LATF0=0;
  1481   002366  907E               	bcf	126,0,c	;volatile
  1482   002368                     
  1483                           ; BSR set to: 14
  1484                           ;main.c: 61:     TRISFbits.TRISF0=0;
  1485   002368  9086               	bcf	134,0,c	;volatile
  1486   00236A                     
  1487                           ; BSR set to: 14
  1488                           ;main.c: 64:     LATDbits.LATD4=0;
  1489   00236A  987C               	bcf	124,4,c	;volatile
  1490   00236C                     
  1491                           ; BSR set to: 14
  1492                           ;main.c: 65:     TRISDbits.TRISD4=0;
  1493   00236C  9884               	bcf	132,4,c	;volatile
  1494   00236E                     
  1495                           ; BSR set to: 14
  1496                           ;main.c: 68:     LATDbits.LATD3=0;
  1497   00236E  967C               	bcf	124,3,c	;volatile
  1498   002370                     
  1499                           ; BSR set to: 14
  1500                           ;main.c: 69:     TRISDbits.TRISD3=0;
  1501   002370  9684               	bcf	132,3,c	;volatile
  1502   002372                     
  1503                           ; BSR set to: 14
  1504                           ;main.c: 74:     motorL.power=0;
  1505   002372  0E00               	movlw	0
  1506   002374  0101               	movlb	1	; () banked
  1507   002376  6FC5               	movwf	_motorL& (0+255),b
  1508   002378                     
  1509                           ; BSR set to: 1
  1510                           ;main.c: 75:     motorL.direction=1;
  1511   002378  0E01               	movlw	1
  1512   00237A  6FC6               	movwf	(_motorL+1)& (0+255),b
  1513   00237C                     
  1514                           ; BSR set to: 1
  1515                           ;main.c: 76:     motorL.brakemode=1;
  1516   00237C  0E01               	movlw	1
  1517   00237E  6FC7               	movwf	(_motorL+2)& (0+255),b
  1518   002380                     
  1519                           ; BSR set to: 1
  1520                           ;main.c: 77:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1521   002380  0EAA               	movlw	170
  1522   002382  6FCA               	movwf	(_motorL+5)& (0+255),b
  1523   002384  0E0F               	movlw	15
  1524   002386  6FCB               	movwf	(_motorL+6)& (0+255),b
  1525   002388                     
  1526                           ; BSR set to: 1
  1527                           ;main.c: 78:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1528   002388  0EA6               	movlw	166
  1529   00238A  6FCC               	movwf	(_motorL+7)& (0+255),b
  1530   00238C  0E0F               	movlw	15
  1531   00238E  6FCD               	movwf	(_motorL+8)& (0+255),b
  1532   002390                     
  1533                           ; BSR set to: 1
  1534                           ;main.c: 79:     motorL.PWMperiod=200;
  1535   002390  0E00               	movlw	0
  1536   002392  6FC9               	movwf	(_motorL+4)& (0+255),b
  1537   002394  0EC8               	movlw	200
  1538   002396  6FC8               	movwf	(_motorL+3)& (0+255),b
  1539   002398                     
  1540                           ; BSR set to: 1
  1541                           ;main.c: 80:     motorR.power=0;
  1542   002398  0E00               	movlw	0
  1543   00239A  6FBC               	movwf	_motorR& (0+255),b
  1544   00239C                     
  1545                           ; BSR set to: 1
  1546                           ;main.c: 81:     motorR.direction=1;
  1547   00239C  0E01               	movlw	1
  1548   00239E  6FBD               	movwf	(_motorR+1)& (0+255),b
  1549   0023A0                     
  1550                           ; BSR set to: 1
  1551                           ;main.c: 82:     motorR.brakemode=1;
  1552   0023A0  0E01               	movlw	1
  1553   0023A2  6FBE               	movwf	(_motorR+2)& (0+255),b
  1554   0023A4                     
  1555                           ; BSR set to: 1
  1556                           ;main.c: 83:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1557   0023A4  0E25               	movlw	37
  1558   0023A6  6FC1               	movwf	(_motorR+5)& (0+255),b
  1559   0023A8  0E0F               	movlw	15
  1560   0023AA  6FC2               	movwf	(_motorR+6)& (0+255),b
  1561   0023AC                     
  1562                           ; BSR set to: 1
  1563                           ;main.c: 84:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1564   0023AC  0E21               	movlw	33
  1565   0023AE  6FC3               	movwf	(_motorR+7)& (0+255),b
  1566   0023B0  0E0F               	movlw	15
  1567   0023B2  6FC4               	movwf	(_motorR+8)& (0+255),b
  1568   0023B4                     
  1569                           ; BSR set to: 1
  1570                           ;main.c: 85:     motorR.PWMperiod=200;
  1571   0023B4  0E00               	movlw	0
  1572   0023B6  6FC0               	movwf	(_motorR+4)& (0+255),b
  1573   0023B8  0EC8               	movlw	200
  1574   0023BA  6FBF               	movwf	(_motorR+3)& (0+255),b
  1575   0023BC                     
  1576                           ; BSR set to: 1
  1577                           ;main.c: 87:     int consecuitive=0;
  1578   0023BC  0E00               	movlw	0
  1579   0023BE  6F6B               	movwf	(main@consecuitive+1)& (0+255),b
  1580   0023C0  0E00               	movlw	0
  1581   0023C2  6F6A               	movwf	main@consecuitive& (0+255),b
  1582   0023C4                     
  1583                           ; BSR set to: 1
  1584                           ;main.c: 88:     int prev_colour =0;
  1585   0023C4  0E00               	movlw	0
  1586   0023C6  6F6F               	movwf	(main@prev_colour+1)& (0+255),b
  1587   0023C8  0E00               	movlw	0
  1588   0023CA  6F6E               	movwf	main@prev_colour& (0+255),b
  1589   0023CC                     
  1590                           ; BSR set to: 1
  1591                           ;main.c: 89:     move_count=-1;
  1592   0023CC  697C               	setf	_move_count& (0+255),b	;volatile
  1593   0023CE  697D               	setf	(_move_count+1)& (0+255),b	;volatile
  1594   0023D0                     
  1595                           ; BSR set to: 1
  1596                           ;main.c: 91:     turnCalibration(&motorL,&motorR);
  1597   0023D0  0EC5               	movlw	low _motorL
  1598   0023D2  6E20               	movwf	turnCalibration@mL^0,c
  1599   0023D4  0E01               	movlw	high _motorL
  1600   0023D6  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1601   0023D8  0EBC               	movlw	low _motorR
  1602   0023DA  6E22               	movwf	turnCalibration@mR^0,c
  1603   0023DC  0E01               	movlw	high _motorR
  1604   0023DE  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1605   0023E0  EC85  F021         	call	_turnCalibration	;wreg free
  1606   0023E4                     
  1607                           ;main.c: 93:     LATFbits.LATF0=0;
  1608   0023E4  907E               	bcf	126,0,c	;volatile
  1609   0023E6                     
  1610                           ;main.c: 94:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1611   0023E6  0E52               	movlw	82
  1612   0023E8  0100               	movlb	0	; () banked
  1613   0023EA  6FD0               	movwf	(??_main+1)& (0+255),b
  1614   0023EC  0E2B               	movlw	43
  1615   0023EE  6FCF               	movwf	??_main& (0+255),b
  1616   0023F0  0E00               	movlw	0
  1617   0023F2                     u6027:
  1618   0023F2  2EE8               	decfsz	wreg,f,c
  1619   0023F4  D7FE               	bra	u6027
  1620   0023F6  2FCF               	decfsz	??_main& (0+255),f,b
  1621   0023F8  D7FC               	bra	u6027
  1622   0023FA  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1623   0023FC  D7FA               	bra	u6027
  1624   0023FE  F000               	nop	
  1625   002400                     l389:
  1626   002400  B48E               	btfsc	142,2,c	;volatile
  1627   002402  EF05  F012         	goto	u5811
  1628   002406  EF07  F012         	goto	u5810
  1629   00240A                     u5811:
  1630   00240A  EF00  F012         	goto	l389
  1631   00240E                     u5810:
  1632   00240E                     
  1633                           ;main.c: 97:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1634   00240E  0E52               	movlw	82
  1635   002410  0100               	movlb	0	; () banked
  1636   002412  6FD0               	movwf	(??_main+1)& (0+255),b
  1637   002414  0E2B               	movlw	43
  1638   002416  6FCF               	movwf	??_main& (0+255),b
  1639   002418  0E00               	movlw	0
  1640   00241A                     u6037:
  1641   00241A  2EE8               	decfsz	wreg,f,c
  1642   00241C  D7FE               	bra	u6037
  1643   00241E  2FCF               	decfsz	??_main& (0+255),f,b
  1644   002420  D7FC               	bra	u6037
  1645   002422  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1646   002424  D7FA               	bra	u6037
  1647   002426  F000               	nop	
  1648   002428                     
  1649                           ;main.c: 98:     Timer0_init();
  1650   002428  EC9D  F030         	call	_Timer0_init	;wreg free
  1651                           
  1652                           ;main.c: 99:     while (run_flag)
  1653   00242C  EF7F  F014         	goto	l6007
  1654   002430                     l5867:
  1655                           
  1656                           ; BSR set to: 1
  1657                           ;main.c: 100:     {;main.c: 101:         TMR0H=0;
  1658   002430  0E00               	movlw	0
  1659   002432  6ED4               	movwf	212,c	;volatile
  1660                           
  1661                           ;main.c: 102:         TMR0L=0;
  1662   002434  0E00               	movlw	0
  1663   002436  6ED3               	movwf	211,c	;volatile
  1664                           
  1665                           ;main.c: 103:         lost_count=0;
  1666   002438  0E00               	movlw	0
  1667   00243A  6F69               	movwf	(main@lost_count+1)& (0+255),b
  1668   00243C  0E00               	movlw	0
  1669   00243E  6F68               	movwf	main@lost_count& (0+255),b
  1670   002440                     
  1671                           ; BSR set to: 1
  1672                           ;main.c: 104:         fullSpeedAhead(&motorL,&motorR);
  1673   002440  0EC5               	movlw	low _motorL
  1674   002442  6E14               	movwf	fullSpeedAhead@mL^0,c
  1675   002444  0E01               	movlw	high _motorL
  1676   002446  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1677   002448  0EBC               	movlw	low _motorR
  1678   00244A  6E16               	movwf	fullSpeedAhead@mR^0,c
  1679   00244C  0E01               	movlw	high _motorR
  1680   00244E  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1681   002450  ECB1  F029         	call	_fullSpeedAhead	;wreg free
  1682   002454                     
  1683                           ;main.c: 106:         readColours(&vals);
  1684   002454  0ECE               	movlw	low _vals
  1685   002456  6E0C               	movwf	readColours@vals^0,c
  1686   002458  0E01               	movlw	high _vals
  1687   00245A  6E0D               	movwf	(readColours@vals+1)^0,c
  1688   00245C  ECD3  F02B         	call	_readColours	;wreg free
  1689   002460                     
  1690                           ;main.c: 109:         colour_rel(&vals, &rel);
  1691   002460  0ECE               	movlw	low _vals
  1692   002462  6E4B               	movwf	colour_rel@vals^0,c
  1693   002464  0E01               	movlw	high _vals
  1694   002466  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1695   002468  0EB0               	movlw	low _rel
  1696   00246A  6E4D               	movwf	colour_rel@rel^0,c
  1697   00246C  0E01               	movlw	high _rel
  1698   00246E  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1699   002470  ECCD  F01A         	call	_colour_rel	;wreg free
  1700   002474                     
  1701                           ;main.c: 112:         if (vals.L>=500){
  1702   002474  0101               	movlb	1	; () banked
  1703   002476  BFD5               	btfsc	(_vals+7)& (0+255),7,b
  1704   002478  EF47  F012         	goto	u5821
  1705   00247C  0EF4               	movlw	244
  1706   00247E  5DD4               	subwf	(_vals+6)& (0+255),w,b
  1707   002480  0E01               	movlw	1
  1708   002482  59D5               	subwfb	(_vals+7)& (0+255),w,b
  1709   002484  A0D8               	btfss	status,0,c
  1710   002486  EF47  F012         	goto	u5821
  1711   00248A  EF49  F012         	goto	u5820
  1712   00248E                     u5821:
  1713   00248E  EF44  F014         	goto	l6001
  1714   002492                     u5820:
  1715   002492                     
  1716                           ; BSR set to: 1
  1717                           ;main.c: 113:             move_count++;
  1718   002492  4B7C               	infsnz	_move_count& (0+255),f,b	;volatile
  1719   002494  2B7D               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1720   002496                     
  1721                           ; BSR set to: 1
  1722                           ;main.c: 114:             getTMR0val();
  1723   002496  EC67  F030         	call	_getTMR0val	;wreg free
  1724   00249A                     
  1725                           ;main.c: 116:             Forwardhalfblock(&motorL,&motorR);
  1726   00249A  0EC5               	movlw	low _motorL
  1727   00249C  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1728   00249E  0E01               	movlw	high _motorL
  1729   0024A0  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1730   0024A2  0EBC               	movlw	low _motorR
  1731   0024A4  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1732   0024A6  0E01               	movlw	high _motorR
  1733   0024A8  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1734   0024AA  EC89  F02C         	call	_Forwardhalfblock	;wreg free
  1735   0024AE                     
  1736                           ;main.c: 118:             stop(&motorL, &motorR);
  1737   0024AE  0EC5               	movlw	low _motorL
  1738   0024B0  6E14               	movwf	stop@mL^0,c
  1739   0024B2  0E01               	movlw	high _motorL
  1740   0024B4  6E15               	movwf	(stop@mL+1)^0,c
  1741   0024B6  0EBC               	movlw	low _motorR
  1742   0024B8  6E16               	movwf	stop@mR^0,c
  1743   0024BA  0E01               	movlw	high _motorR
  1744   0024BC  6E17               	movwf	(stop@mR+1)^0,c
  1745   0024BE  EC85  F02A         	call	_stop	;wreg free
  1746   0024C2                     
  1747                           ;main.c: 119:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1748   0024C2  0E11               	movlw	17
  1749   0024C4  0100               	movlb	0	; () banked
  1750   0024C6  6FD0               	movwf	(??_main+1)& (0+255),b
  1751   0024C8  0E3C               	movlw	60
  1752   0024CA  6FCF               	movwf	??_main& (0+255),b
  1753   0024CC  0ECB               	movlw	203
  1754   0024CE                     u6047:
  1755   0024CE  2EE8               	decfsz	wreg,f,c
  1756   0024D0  D7FE               	bra	u6047
  1757   0024D2  2FCF               	decfsz	??_main& (0+255),f,b
  1758   0024D4  D7FC               	bra	u6047
  1759   0024D6  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1760   0024D8  D7FA               	bra	u6047
  1761                           
  1762                           ;main.c: 126:             while (consecuitive<20){
  1763   0024DA  EFA2  F012         	goto	l5899
  1764   0024DE                     l5887:
  1765                           
  1766                           ; BSR set to: 1
  1767                           ;main.c: 127:                 int colour = Colour_decider(&vals, &rel);
  1768   0024DE  0ECE               	movlw	low _vals
  1769   0024E0  6E4B               	movwf	Colour_decider@vals^0,c
  1770   0024E2  0E01               	movlw	high _vals
  1771   0024E4  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1772   0024E6  0EB0               	movlw	low _rel
  1773   0024E8  6E4D               	movwf	Colour_decider@rel^0,c
  1774   0024EA  0E01               	movlw	high _rel
  1775   0024EC  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1776   0024EE  EC29  F007         	call	_Colour_decider	;wreg free
  1777   0024F2  C04B  F16C         	movff	?_Colour_decider,main@colour
  1778   0024F6  C04C  F16D         	movff	?_Colour_decider+1,main@colour+1
  1779   0024FA                     
  1780                           ;main.c: 128:                 if (colour==prev_colour){
  1781   0024FA  0101               	movlb	1	; () banked
  1782   0024FC  516E               	movf	main@prev_colour& (0+255),w,b
  1783   0024FE  196C               	xorwf	main@colour& (0+255),w,b
  1784   002500  E107               	bnz	u5831
  1785   002502  516F               	movf	(main@prev_colour+1)& (0+255),w,b
  1786   002504  196D               	xorwf	(main@colour+1)& (0+255),w,b
  1787   002506  A4D8               	btfss	status,2,c
  1788   002508  EF88  F012         	goto	u5831
  1789   00250C  EF8A  F012         	goto	u5830
  1790   002510                     u5831:
  1791   002510  EF8E  F012         	goto	l5893
  1792   002514                     u5830:
  1793   002514                     
  1794                           ; BSR set to: 1
  1795                           ;main.c: 129:                     consecuitive++;
  1796   002514  4B6A               	infsnz	main@consecuitive& (0+255),f,b
  1797   002516  2B6B               	incf	(main@consecuitive+1)& (0+255),f,b
  1798                           
  1799                           ;main.c: 130:                 }
  1800   002518  EF92  F012         	goto	l5895
  1801   00251C                     l5893:
  1802                           
  1803                           ; BSR set to: 1
  1804                           ;main.c: 132:                     consecuitive=0;
  1805   00251C  0E00               	movlw	0
  1806   00251E  6F6B               	movwf	(main@consecuitive+1)& (0+255),b
  1807   002520  0E00               	movlw	0
  1808   002522  6F6A               	movwf	main@consecuitive& (0+255),b
  1809   002524                     l5895:
  1810                           
  1811                           ; BSR set to: 1
  1812                           ;main.c: 134:                 prev_colour=colour;
  1813   002524  C16C  F16E         	movff	main@colour,main@prev_colour
  1814   002528  C16D  F16F         	movff	main@colour+1,main@prev_colour+1
  1815   00252C                     
  1816                           ; BSR set to: 1
  1817                           ;main.c: 135:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1818   00252C  0E05               	movlw	5
  1819   00252E  0100               	movlb	0	; () banked
  1820   002530  6FD0               	movwf	(??_main+1)& (0+255),b
  1821   002532  0E0F               	movlw	15
  1822   002534  6FCF               	movwf	??_main& (0+255),b
  1823   002536  0EF1               	movlw	241
  1824   002538                     u6057:
  1825   002538  2EE8               	decfsz	wreg,f,c
  1826   00253A  D7FE               	bra	u6057
  1827   00253C  2FCF               	decfsz	??_main& (0+255),f,b
  1828   00253E  D7FC               	bra	u6057
  1829   002540  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1830   002542  D7FA               	bra	u6057
  1831   002544                     l5899:
  1832                           
  1833                           ;main.c: 126:             while (consecuitive<20){
  1834   002544  0101               	movlb	1	; () banked
  1835   002546  BF6B               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1836   002548  EFAF  F012         	goto	u5841
  1837   00254C  516B               	movf	(main@consecuitive+1)& (0+255),w,b
  1838   00254E  E109               	bnz	u5840
  1839   002550  0E14               	movlw	20
  1840   002552  5D6A               	subwf	main@consecuitive& (0+255),w,b
  1841   002554  A0D8               	btfss	status,0,c
  1842   002556  EFAF  F012         	goto	u5841
  1843   00255A  EFB1  F012         	goto	u5840
  1844   00255E                     u5841:
  1845   00255E  EF6F  F012         	goto	l5887
  1846   002562                     u5840:
  1847   002562                     
  1848                           ; BSR set to: 1
  1849                           ;main.c: 137:             consecuitive=0;
  1850   002562  0E00               	movlw	0
  1851   002564  6F6B               	movwf	(main@consecuitive+1)& (0+255),b
  1852   002566  0E00               	movlw	0
  1853   002568  6F6A               	movwf	main@consecuitive& (0+255),b
  1854   00256A                     
  1855                           ; BSR set to: 1
  1856                           ;main.c: 138:             int temp=TMR0L;
  1857   00256A  CFD3 F164          	movff	4051,main@temp	;volatile
  1858   00256E  6B65               	clrf	(main@temp+1)& (0+255),b
  1859   002570                     
  1860                           ; BSR set to: 1
  1861                           ;main.c: 139:             sprintf(buf,"red=%d green=%d blue=%d colour=%d \r\n",vals.R, v
      +                          als.G,vals.B,TMR0H);
  1862   002570  0E00               	movlw	low main@buf
  1863   002572  0100               	movlb	0	; () banked
  1864   002574  6FB0               	movwf	sprintf@s& (0+255),b
  1865   002576  0E01               	movlw	high main@buf
  1866   002578  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1867   00257A  0E01               	movlw	low STR_1
  1868   00257C  6FB2               	movwf	sprintf@fmt& (0+255),b
  1869   00257E  0E0E               	movlw	high STR_1
  1870   002580  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1871   002582  C1CE  F0B4         	movff	_vals,?_sprintf+4
  1872   002586  C1CF  F0B5         	movff	_vals+1,?_sprintf+5
  1873   00258A  C1D0  F0B6         	movff	_vals+2,?_sprintf+6
  1874   00258E  C1D1  F0B7         	movff	_vals+3,?_sprintf+7
  1875   002592  C1D2  F0B8         	movff	_vals+4,?_sprintf+8
  1876   002596  C1D3  F0B9         	movff	_vals+5,?_sprintf+9
  1877   00259A  CFD4 F0BA          	movff	4052,?_sprintf+10	;volatile
  1878   00259E  6BBB               	clrf	(?_sprintf+11)& (0+255),b
  1879   0025A0  ECE1  F02C         	call	_sprintf	;wreg free
  1880   0025A4                     
  1881                           ;main.c: 142:             sendStringSerial4(buf);
  1882   0025A4  0E00               	movlw	low main@buf
  1883   0025A6  6E02               	movwf	sendStringSerial4@string^0,c
  1884   0025A8  0E01               	movlw	high main@buf
  1885   0025AA  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1886   0025AC  EC26  F030         	call	_sendStringSerial4	;wreg free
  1887   0025B0                     
  1888                           ;main.c: 144:             if (prev_colour==1){
  1889   0025B0  0101               	movlb	1	; () banked
  1890   0025B2  056E               	decf	main@prev_colour& (0+255),w,b
  1891   0025B4  116F               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1892   0025B6  A4D8               	btfss	status,2,c
  1893   0025B8  EFE0  F012         	goto	u5851
  1894   0025BC  EFE2  F012         	goto	u5850
  1895   0025C0                     u5851:
  1896   0025C0  EFFB  F012         	goto	l5919
  1897   0025C4                     u5850:
  1898   0025C4                     
  1899                           ; BSR set to: 1
  1900                           ;main.c: 145:                 RedMove(&motorL, &motorR);
  1901   0025C4  0EC5               	movlw	low _motorL
  1902   0025C6  6E20               	movwf	RedMove@mL^0,c
  1903   0025C8  0E01               	movlw	high _motorL
  1904   0025CA  6E21               	movwf	(RedMove@mL+1)^0,c
  1905   0025CC  0EBC               	movlw	low _motorR
  1906   0025CE  6E22               	movwf	RedMove@mR^0,c
  1907   0025D0  0E01               	movlw	high _motorR
  1908   0025D2  6E23               	movwf	(RedMove@mR+1)^0,c
  1909   0025D4  EC95  F02F         	call	_RedMove	;wreg free
  1910   0025D8                     
  1911                           ;main.c: 146:                 TMR0H=0;
  1912   0025D8  0E00               	movlw	0
  1913   0025DA  6ED4               	movwf	212,c	;volatile
  1914   0025DC                     
  1915                           ;main.c: 147:                 TMR0L=0;
  1916   0025DC  0E00               	movlw	0
  1917   0025DE  6ED3               	movwf	211,c	;volatile
  1918   0025E0                     
  1919                           ;main.c: 148:                 WayBack[move_count]=1;
  1920   0025E0  0E7E               	movlw	low _WayBack
  1921   0025E2  0101               	movlb	1	; () banked
  1922   0025E4  257C               	addwf	_move_count& (0+255),w,b	;volatile
  1923   0025E6  6ED9               	movwf	fsr2l,c
  1924   0025E8  0E01               	movlw	high _WayBack
  1925   0025EA  217D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1926   0025EC  6EDA               	movwf	fsr2h,c
  1927   0025EE  0E01               	movlw	1
  1928   0025F0  6EDF               	movwf	indf2,c
  1929                           
  1930                           ;main.c: 149:             }
  1931   0025F2  EF7F  F014         	goto	l6007
  1932   0025F6                     l5919:
  1933                           
  1934                           ; BSR set to: 1
  1935   0025F6  0E02               	movlw	2
  1936   0025F8  196E               	xorwf	main@prev_colour& (0+255),w,b
  1937   0025FA  116F               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1938   0025FC  A4D8               	btfss	status,2,c
  1939   0025FE  EF03  F013         	goto	u5861
  1940   002602  EF05  F013         	goto	u5860
  1941   002606                     u5861:
  1942   002606  EF1E  F013         	goto	l5929
  1943   00260A                     u5860:
  1944   00260A                     
  1945                           ; BSR set to: 1
  1946                           ;main.c: 151:                 OrangeMove(&motorL, &motorR);
  1947   00260A  0EC5               	movlw	low _motorL
  1948   00260C  6E20               	movwf	OrangeMove@mL^0,c
  1949   00260E  0E01               	movlw	high _motorL
  1950   002610  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1951   002612  0EBC               	movlw	low _motorR
  1952   002614  6E22               	movwf	OrangeMove@mR^0,c
  1953   002616  0E01               	movlw	high _motorR
  1954   002618  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1955   00261A  EC0A  F02D         	call	_OrangeMove	;wreg free
  1956   00261E                     
  1957                           ;main.c: 152:                 TMR0H=0;
  1958   00261E  0E00               	movlw	0
  1959   002620  6ED4               	movwf	212,c	;volatile
  1960   002622                     
  1961                           ;main.c: 153:                 TMR0L=0;
  1962   002622  0E00               	movlw	0
  1963   002624  6ED3               	movwf	211,c	;volatile
  1964   002626                     
  1965                           ;main.c: 154:                 WayBack[move_count]=2;
  1966   002626  0E7E               	movlw	low _WayBack
  1967   002628  0101               	movlb	1	; () banked
  1968   00262A  257C               	addwf	_move_count& (0+255),w,b	;volatile
  1969   00262C  6ED9               	movwf	fsr2l,c
  1970   00262E  0E01               	movlw	high _WayBack
  1971   002630  217D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1972   002632  6EDA               	movwf	fsr2h,c
  1973   002634  0E02               	movlw	2
  1974   002636  6EDF               	movwf	indf2,c
  1975                           
  1976                           ;main.c: 155:             }
  1977   002638  EF7F  F014         	goto	l6007
  1978   00263C                     l5929:
  1979                           
  1980                           ; BSR set to: 1
  1981   00263C  0E03               	movlw	3
  1982   00263E  196E               	xorwf	main@prev_colour& (0+255),w,b
  1983   002640  116F               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1984   002642  A4D8               	btfss	status,2,c
  1985   002644  EF26  F013         	goto	u5871
  1986   002648  EF28  F013         	goto	u5870
  1987   00264C                     u5871:
  1988   00264C  EF41  F013         	goto	l5939
  1989   002650                     u5870:
  1990   002650                     
  1991                           ; BSR set to: 1
  1992                           ;main.c: 157:                 YellowMove(&motorL, &motorR);
  1993   002650  0EC5               	movlw	low _motorL
  1994   002652  6E20               	movwf	YellowMove@mL^0,c
  1995   002654  0E01               	movlw	high _motorL
  1996   002656  6E21               	movwf	(YellowMove@mL+1)^0,c
  1997   002658  0EBC               	movlw	low _motorR
  1998   00265A  6E22               	movwf	YellowMove@mR^0,c
  1999   00265C  0E01               	movlw	high _motorR
  2000   00265E  6E23               	movwf	(YellowMove@mR+1)^0,c
  2001   002660  EC85  F02D         	call	_YellowMove	;wreg free
  2002   002664                     
  2003                           ;main.c: 158:                 TMR0H=0;
  2004   002664  0E00               	movlw	0
  2005   002666  6ED4               	movwf	212,c	;volatile
  2006   002668                     
  2007                           ;main.c: 159:                 TMR0L=0;
  2008   002668  0E00               	movlw	0
  2009   00266A  6ED3               	movwf	211,c	;volatile
  2010   00266C                     
  2011                           ;main.c: 160:                 WayBack[move_count]=3;
  2012   00266C  0E7E               	movlw	low _WayBack
  2013   00266E  0101               	movlb	1	; () banked
  2014   002670  257C               	addwf	_move_count& (0+255),w,b	;volatile
  2015   002672  6ED9               	movwf	fsr2l,c
  2016   002674  0E01               	movlw	high _WayBack
  2017   002676  217D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2018   002678  6EDA               	movwf	fsr2h,c
  2019   00267A  0E03               	movlw	3
  2020   00267C  6EDF               	movwf	indf2,c
  2021                           
  2022                           ;main.c: 161:             }
  2023   00267E  EF7F  F014         	goto	l6007
  2024   002682                     l5939:
  2025                           
  2026                           ; BSR set to: 1
  2027   002682  0E04               	movlw	4
  2028   002684  196E               	xorwf	main@prev_colour& (0+255),w,b
  2029   002686  116F               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2030   002688  A4D8               	btfss	status,2,c
  2031   00268A  EF49  F013         	goto	u5881
  2032   00268E  EF4B  F013         	goto	u5880
  2033   002692                     u5881:
  2034   002692  EF64  F013         	goto	l5949
  2035   002696                     u5880:
  2036   002696                     
  2037                           ; BSR set to: 1
  2038                           ;main.c: 163:                 BlueMove(&motorL, &motorR);
  2039   002696  0EC5               	movlw	low _motorL
  2040   002698  6E20               	movwf	BlueMove@mL^0,c
  2041   00269A  0E01               	movlw	high _motorL
  2042   00269C  6E21               	movwf	(BlueMove@mL+1)^0,c
  2043   00269E  0EBC               	movlw	low _motorR
  2044   0026A0  6E22               	movwf	BlueMove@mR^0,c
  2045   0026A2  0E01               	movlw	high _motorR
  2046   0026A4  6E23               	movwf	(BlueMove@mR+1)^0,c
  2047   0026A6  EC6E  F02B         	call	_BlueMove	;wreg free
  2048   0026AA                     
  2049                           ;main.c: 164:                 TMR0H=0;
  2050   0026AA  0E00               	movlw	0
  2051   0026AC  6ED4               	movwf	212,c	;volatile
  2052   0026AE                     
  2053                           ;main.c: 165:                 TMR0L=0;
  2054   0026AE  0E00               	movlw	0
  2055   0026B0  6ED3               	movwf	211,c	;volatile
  2056   0026B2                     
  2057                           ;main.c: 166:                 WayBack[move_count]=4;
  2058   0026B2  0E7E               	movlw	low _WayBack
  2059   0026B4  0101               	movlb	1	; () banked
  2060   0026B6  257C               	addwf	_move_count& (0+255),w,b	;volatile
  2061   0026B8  6ED9               	movwf	fsr2l,c
  2062   0026BA  0E01               	movlw	high _WayBack
  2063   0026BC  217D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2064   0026BE  6EDA               	movwf	fsr2h,c
  2065   0026C0  0E04               	movlw	4
  2066   0026C2  6EDF               	movwf	indf2,c
  2067                           
  2068                           ;main.c: 167:             }
  2069   0026C4  EF7F  F014         	goto	l6007
  2070   0026C8                     l5949:
  2071                           
  2072                           ; BSR set to: 1
  2073   0026C8  0E05               	movlw	5
  2074   0026CA  196E               	xorwf	main@prev_colour& (0+255),w,b
  2075   0026CC  116F               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2076   0026CE  A4D8               	btfss	status,2,c
  2077   0026D0  EF6C  F013         	goto	u5891
  2078   0026D4  EF6E  F013         	goto	u5890
  2079   0026D8                     u5891:
  2080   0026D8  EF87  F013         	goto	l5959
  2081   0026DC                     u5890:
  2082   0026DC                     
  2083                           ; BSR set to: 1
  2084                           ;main.c: 169:                 GreenMove(&motorL, &motorR);
  2085   0026DC  0EC5               	movlw	low _motorL
  2086   0026DE  6E20               	movwf	GreenMove@mL^0,c
  2087   0026E0  0E01               	movlw	high _motorL
  2088   0026E2  6E21               	movwf	(GreenMove@mL+1)^0,c
  2089   0026E4  0EBC               	movlw	low _motorR
  2090   0026E6  6E22               	movwf	GreenMove@mR^0,c
  2091   0026E8  0E01               	movlw	high _motorR
  2092   0026EA  6E23               	movwf	(GreenMove@mR+1)^0,c
  2093   0026EC  ECB4  F02F         	call	_GreenMove	;wreg free
  2094   0026F0                     
  2095                           ;main.c: 170:                 TMR0H=0;
  2096   0026F0  0E00               	movlw	0
  2097   0026F2  6ED4               	movwf	212,c	;volatile
  2098   0026F4                     
  2099                           ;main.c: 171:                 TMR0L=0;
  2100   0026F4  0E00               	movlw	0
  2101   0026F6  6ED3               	movwf	211,c	;volatile
  2102   0026F8                     
  2103                           ;main.c: 172:                 WayBack[move_count]=5;
  2104   0026F8  0E7E               	movlw	low _WayBack
  2105   0026FA  0101               	movlb	1	; () banked
  2106   0026FC  257C               	addwf	_move_count& (0+255),w,b	;volatile
  2107   0026FE  6ED9               	movwf	fsr2l,c
  2108   002700  0E01               	movlw	high _WayBack
  2109   002702  217D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2110   002704  6EDA               	movwf	fsr2h,c
  2111   002706  0E05               	movlw	5
  2112   002708  6EDF               	movwf	indf2,c
  2113                           
  2114                           ;main.c: 173:             }
  2115   00270A  EF7F  F014         	goto	l6007
  2116   00270E                     l5959:
  2117                           
  2118                           ; BSR set to: 1
  2119   00270E  0E06               	movlw	6
  2120   002710  196E               	xorwf	main@prev_colour& (0+255),w,b
  2121   002712  116F               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2122   002714  A4D8               	btfss	status,2,c
  2123   002716  EF8F  F013         	goto	u5901
  2124   00271A  EF91  F013         	goto	u5900
  2125   00271E                     u5901:
  2126   00271E  EFAA  F013         	goto	l5969
  2127   002722                     u5900:
  2128   002722                     
  2129                           ; BSR set to: 1
  2130                           ;main.c: 175:                 LightBlueMove(&motorL, &motorR);
  2131   002722  0EC5               	movlw	low _motorL
  2132   002724  6E20               	movwf	LightBlueMove@mL^0,c
  2133   002726  0E01               	movlw	high _motorL
  2134   002728  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  2135   00272A  0EBC               	movlw	low _motorR
  2136   00272C  6E22               	movwf	LightBlueMove@mR^0,c
  2137   00272E  0E01               	movlw	high _motorR
  2138   002730  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  2139   002732  EC33  F02D         	call	_LightBlueMove	;wreg free
  2140   002736                     
  2141                           ;main.c: 176:                 TMR0H=0;
  2142   002736  0E00               	movlw	0
  2143   002738  6ED4               	movwf	212,c	;volatile
  2144   00273A                     
  2145                           ;main.c: 177:                 TMR0L=0;
  2146   00273A  0E00               	movlw	0
  2147   00273C  6ED3               	movwf	211,c	;volatile
  2148   00273E                     
  2149                           ;main.c: 178:                 WayBack[move_count]=6;
  2150   00273E  0E7E               	movlw	low _WayBack
  2151   002740  0101               	movlb	1	; () banked
  2152   002742  257C               	addwf	_move_count& (0+255),w,b	;volatile
  2153   002744  6ED9               	movwf	fsr2l,c
  2154   002746  0E01               	movlw	high _WayBack
  2155   002748  217D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2156   00274A  6EDA               	movwf	fsr2h,c
  2157   00274C  0E06               	movlw	6
  2158   00274E  6EDF               	movwf	indf2,c
  2159                           
  2160                           ;main.c: 179:             }
  2161   002750  EF7F  F014         	goto	l6007
  2162   002754                     l5969:
  2163                           
  2164                           ; BSR set to: 1
  2165   002754  0E07               	movlw	7
  2166   002756  196E               	xorwf	main@prev_colour& (0+255),w,b
  2167   002758  116F               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2168   00275A  A4D8               	btfss	status,2,c
  2169   00275C  EFB2  F013         	goto	u5911
  2170   002760  EFB4  F013         	goto	u5910
  2171   002764                     u5911:
  2172   002764  EFCD  F013         	goto	l5979
  2173   002768                     u5910:
  2174   002768                     
  2175                           ; BSR set to: 1
  2176                           ;main.c: 181:                 PinkMove(&motorL, &motorR);
  2177   002768  0EC5               	movlw	low _motorL
  2178   00276A  6E20               	movwf	PinkMove@mL^0,c
  2179   00276C  0E01               	movlw	high _motorL
  2180   00276E  6E21               	movwf	(PinkMove@mL+1)^0,c
  2181   002770  0EBC               	movlw	low _motorR
  2182   002772  6E22               	movwf	PinkMove@mR^0,c
  2183   002774  0E01               	movlw	high _motorR
  2184   002776  6E23               	movwf	(PinkMove@mR+1)^0,c
  2185   002778  ECAE  F02D         	call	_PinkMove	;wreg free
  2186   00277C                     
  2187                           ;main.c: 182:                 TMR0H=0;
  2188   00277C  0E00               	movlw	0
  2189   00277E  6ED4               	movwf	212,c	;volatile
  2190   002780                     
  2191                           ;main.c: 183:                 TMR0L=0;
  2192   002780  0E00               	movlw	0
  2193   002782  6ED3               	movwf	211,c	;volatile
  2194   002784                     
  2195                           ;main.c: 184:                 WayBack[move_count]=7;
  2196   002784  0E7E               	movlw	low _WayBack
  2197   002786  0101               	movlb	1	; () banked
  2198   002788  257C               	addwf	_move_count& (0+255),w,b	;volatile
  2199   00278A  6ED9               	movwf	fsr2l,c
  2200   00278C  0E01               	movlw	high _WayBack
  2201   00278E  217D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2202   002790  6EDA               	movwf	fsr2h,c
  2203   002792  0E07               	movlw	7
  2204   002794  6EDF               	movwf	indf2,c
  2205                           
  2206                           ;main.c: 185:             }
  2207   002796  EF7F  F014         	goto	l6007
  2208   00279A                     l5979:
  2209                           
  2210                           ; BSR set to: 1
  2211   00279A  0E0A               	movlw	10
  2212   00279C  196E               	xorwf	main@prev_colour& (0+255),w,b
  2213   00279E  116F               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2214   0027A0  A4D8               	btfss	status,2,c
  2215   0027A2  EFD5  F013         	goto	u5921
  2216   0027A6  EFD7  F013         	goto	u5920
  2217   0027AA                     u5921:
  2218   0027AA  EF13  F014         	goto	l5993
  2219   0027AE                     u5920:
  2220   0027AE                     
  2221                           ; BSR set to: 1
  2222                           ;main.c: 187:                 lost_count++;
  2223   0027AE  4B68               	infsnz	main@lost_count& (0+255),f,b
  2224   0027B0  2B69               	incf	(main@lost_count+1)& (0+255),f,b
  2225   0027B2                     
  2226                           ; BSR set to: 1
  2227                           ;main.c: 188:                 if (lost_count==4){
  2228   0027B2  0E04               	movlw	4
  2229   0027B4  1968               	xorwf	main@lost_count& (0+255),w,b
  2230   0027B6  1169               	iorwf	(main@lost_count+1)& (0+255),w,b
  2231   0027B8  A4D8               	btfss	status,2,c
  2232   0027BA  EFE1  F013         	goto	u5931
  2233   0027BE  EFE3  F013         	goto	u5930
  2234   0027C2                     u5931:
  2235   0027C2  EF07  F014         	goto	l5991
  2236   0027C6                     u5930:
  2237   0027C6                     
  2238                           ; BSR set to: 1
  2239                           ;main.c: 189:                     BlueMove(&motorL, &motorR);
  2240   0027C6  0EC5               	movlw	low _motorL
  2241   0027C8  6E20               	movwf	BlueMove@mL^0,c
  2242   0027CA  0E01               	movlw	high _motorL
  2243   0027CC  6E21               	movwf	(BlueMove@mL+1)^0,c
  2244   0027CE  0EBC               	movlw	low _motorR
  2245   0027D0  6E22               	movwf	BlueMove@mR^0,c
  2246   0027D2  0E01               	movlw	high _motorR
  2247   0027D4  6E23               	movwf	(BlueMove@mR+1)^0,c
  2248   0027D6  EC6E  F02B         	call	_BlueMove	;wreg free
  2249   0027DA                     
  2250                           ;main.c: 190:                     T0CON0bits.T0EN=0;
  2251   0027DA  9ED5               	bcf	213,7,c	;volatile
  2252                           
  2253                           ;main.c: 191:                     go_Home(WayBack, Time_forward);
  2254   0027DC  0E7E               	movlw	low _WayBack
  2255   0027DE  6E24               	movwf	go_Home@WayBack^0,c
  2256   0027E0  0E01               	movlw	high _WayBack
  2257   0027E2  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2258   0027E4  0E3C               	movlw	low _Time_forward
  2259   0027E6  6E26               	movwf	go_Home@Time_forward^0,c
  2260   0027E8  0E02               	movlw	high _Time_forward
  2261   0027EA  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2262   0027EC  ECE7  F01D         	call	_go_Home	;wreg free
  2263                           
  2264                           ;main.c: 192:                     stop(&motorL, &motorR);
  2265   0027F0  0EC5               	movlw	low _motorL
  2266   0027F2  6E14               	movwf	stop@mL^0,c
  2267   0027F4  0E01               	movlw	high _motorL
  2268   0027F6  6E15               	movwf	(stop@mL+1)^0,c
  2269   0027F8  0EBC               	movlw	low _motorR
  2270   0027FA  6E16               	movwf	stop@mR^0,c
  2271   0027FC  0E01               	movlw	high _motorR
  2272   0027FE  6E17               	movwf	(stop@mR+1)^0,c
  2273   002800  EC85  F02A         	call	_stop	;wreg free
  2274   002804                     
  2275                           ;main.c: 193:                     run_flag=0;
  2276   002804  0E00               	movlw	0
  2277   002806  0101               	movlb	1	; () banked
  2278   002808  6FD7               	movwf	(_run_flag+1)& (0+255),b
  2279   00280A  0E00               	movlw	0
  2280   00280C  6FD6               	movwf	_run_flag& (0+255),b
  2281   00280E                     l5991:
  2282                           
  2283                           ; BSR set to: 1
  2284                           ;main.c: 195:                 RetryMove(&motorL, &motorR);
  2285   00280E  0EC5               	movlw	low _motorL
  2286   002810  6E1A               	movwf	RetryMove@mL^0,c
  2287   002812  0E01               	movlw	high _motorL
  2288   002814  6E1B               	movwf	(RetryMove@mL+1)^0,c
  2289   002816  0EBC               	movlw	low _motorR
  2290   002818  6E1C               	movwf	RetryMove@mR^0,c
  2291   00281A  0E01               	movlw	high _motorR
  2292   00281C  6E1D               	movwf	(RetryMove@mR+1)^0,c
  2293   00281E  EC44  F02A         	call	_RetryMove	;wreg free
  2294                           
  2295                           ;main.c: 196:             }
  2296   002822  EF7F  F014         	goto	l6007
  2297   002826                     l5993:
  2298                           
  2299                           ; BSR set to: 1
  2300   002826  516E               	movf	main@prev_colour& (0+255),w,b
  2301   002828  116F               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2302   00282A  A4D8               	btfss	status,2,c
  2303   00282C  EF1A  F014         	goto	u5941
  2304   002830  EF1C  F014         	goto	u5940
  2305   002834                     u5941:
  2306   002834  EF42  F014         	goto	l411
  2307   002838                     u5940:
  2308   002838                     
  2309                           ; BSR set to: 1
  2310                           ;main.c: 198:                 BlueMove(&motorL, &motorR);
  2311   002838  0EC5               	movlw	low _motorL
  2312   00283A  6E20               	movwf	BlueMove@mL^0,c
  2313   00283C  0E01               	movlw	high _motorL
  2314   00283E  6E21               	movwf	(BlueMove@mL+1)^0,c
  2315   002840  0EBC               	movlw	low _motorR
  2316   002842  6E22               	movwf	BlueMove@mR^0,c
  2317   002844  0E01               	movlw	high _motorR
  2318   002846  6E23               	movwf	(BlueMove@mR+1)^0,c
  2319   002848  EC6E  F02B         	call	_BlueMove	;wreg free
  2320   00284C                     
  2321                           ;main.c: 199:                 T0CON0bits.T0EN=0;
  2322   00284C  9ED5               	bcf	213,7,c	;volatile
  2323                           
  2324                           ;main.c: 200:                 go_Home(WayBack, Time_forward);
  2325   00284E  0E7E               	movlw	low _WayBack
  2326   002850  6E24               	movwf	go_Home@WayBack^0,c
  2327   002852  0E01               	movlw	high _WayBack
  2328   002854  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2329   002856  0E3C               	movlw	low _Time_forward
  2330   002858  6E26               	movwf	go_Home@Time_forward^0,c
  2331   00285A  0E02               	movlw	high _Time_forward
  2332   00285C  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2333   00285E  ECE7  F01D         	call	_go_Home	;wreg free
  2334                           
  2335                           ;main.c: 201:                 stop(&motorL, &motorR);
  2336   002862  0EC5               	movlw	low _motorL
  2337   002864  6E14               	movwf	stop@mL^0,c
  2338   002866  0E01               	movlw	high _motorL
  2339   002868  6E15               	movwf	(stop@mL+1)^0,c
  2340   00286A  0EBC               	movlw	low _motorR
  2341   00286C  6E16               	movwf	stop@mR^0,c
  2342   00286E  0E01               	movlw	high _motorR
  2343   002870  6E17               	movwf	(stop@mR+1)^0,c
  2344   002872  EC85  F02A         	call	_stop	;wreg free
  2345   002876                     
  2346                           ;main.c: 202:                 run_flag=0;
  2347   002876  0E00               	movlw	0
  2348   002878  0101               	movlb	1	; () banked
  2349   00287A  6FD7               	movwf	(_run_flag+1)& (0+255),b
  2350   00287C  0E00               	movlw	0
  2351   00287E  6FD6               	movwf	_run_flag& (0+255),b
  2352   002880  EF7F  F014         	goto	l6007
  2353   002884                     l411:
  2354                           
  2355                           ; BSR set to: 1
  2356   002884  EF7F  F014         	goto	l6007
  2357   002888                     l6001:
  2358                           
  2359                           ; BSR set to: 1
  2360                           ;main.c: 205:                 int colour = Colour_decider(&vals, &rel);
  2361   002888  0ECE               	movlw	low _vals
  2362   00288A  6E4B               	movwf	Colour_decider@vals^0,c
  2363   00288C  0E01               	movlw	high _vals
  2364   00288E  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  2365   002890  0EB0               	movlw	low _rel
  2366   002892  6E4D               	movwf	Colour_decider@rel^0,c
  2367   002894  0E01               	movlw	high _rel
  2368   002896  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  2369   002898  EC29  F007         	call	_Colour_decider	;wreg free
  2370   00289C  C04B  F166         	movff	?_Colour_decider,main@colour_1291
  2371   0028A0  C04C  F167         	movff	?_Colour_decider+1,main@colour_1291+1
  2372   0028A4                     
  2373                           ;main.c: 206:                 sprintf(buf,"red=%f green=%f blue=%f lum=%d  \r\n",rel.R, 
      +                          rel.G,rel.B,vals.L);
  2374   0028A4  0E00               	movlw	low main@buf
  2375   0028A6  0100               	movlb	0	; () banked
  2376   0028A8  6FB0               	movwf	sprintf@s& (0+255),b
  2377   0028AA  0E01               	movlw	high main@buf
  2378   0028AC  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2379   0028AE  0E26               	movlw	low STR_2
  2380   0028B0  6FB2               	movwf	sprintf@fmt& (0+255),b
  2381   0028B2  0E0E               	movlw	high STR_2
  2382   0028B4  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2383   0028B6  C1B0  F0B4         	movff	_rel,?_sprintf+4
  2384   0028BA  C1B1  F0B5         	movff	_rel+1,?_sprintf+5
  2385   0028BE  C1B2  F0B6         	movff	_rel+2,?_sprintf+6
  2386   0028C2  C1B3  F0B7         	movff	_rel+3,?_sprintf+7
  2387   0028C6  C1B4  F0B8         	movff	_rel+4,?_sprintf+8
  2388   0028CA  C1B5  F0B9         	movff	_rel+5,?_sprintf+9
  2389   0028CE  C1B6  F0BA         	movff	_rel+6,?_sprintf+10
  2390   0028D2  C1B7  F0BB         	movff	_rel+7,?_sprintf+11
  2391   0028D6  C1B8  F0BC         	movff	_rel+8,?_sprintf+12
  2392   0028DA  C1B9  F0BD         	movff	_rel+9,?_sprintf+13
  2393   0028DE  C1BA  F0BE         	movff	_rel+10,?_sprintf+14
  2394   0028E2  C1BB  F0BF         	movff	_rel+11,?_sprintf+15
  2395   0028E6  C1D4  F0C0         	movff	_vals+6,?_sprintf+16
  2396   0028EA  C1D5  F0C1         	movff	_vals+7,?_sprintf+17
  2397   0028EE  ECE1  F02C         	call	_sprintf	;wreg free
  2398   0028F2                     
  2399                           ;main.c: 207:                 sendStringSerial4(buf);
  2400   0028F2  0E00               	movlw	low main@buf
  2401   0028F4  6E02               	movwf	sendStringSerial4@string^0,c
  2402   0028F6  0E01               	movlw	high main@buf
  2403   0028F8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2404   0028FA  EC26  F030         	call	_sendStringSerial4	;wreg free
  2405   0028FE                     l6007:
  2406                           
  2407                           ;main.c: 99:     while (run_flag)
  2408   0028FE  0101               	movlb	1	; () banked
  2409   002900  51D6               	movf	_run_flag& (0+255),w,b
  2410   002902  11D7               	iorwf	(_run_flag+1)& (0+255),w,b
  2411   002904  A4D8               	btfss	status,2,c
  2412   002906  EF87  F014         	goto	u5951
  2413   00290A  EF89  F014         	goto	u5950
  2414   00290E                     u5951:
  2415   00290E  EF18  F012         	goto	l5867
  2416   002912                     u5950:
  2417   002912                     
  2418                           ; BSR set to: 1
  2419   002912  EF00  F000         	goto	start
  2420   002916                     __end_of_main:
  2421                           	callstack 0
  2422                           
  2423 ;; *************** function _turnCalibration *****************
  2424 ;; Defined at:
  2425 ;;		line 357 in file "dc_motor.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2428 ;;		 -> motorL(9), 
  2429 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2430 ;;		 -> motorR(9), 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2444 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2445 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2446 ;;Total ram usage:        6 bytes
  2447 ;; Hardware stack levels used: 1
  2448 ;; Hardware stack levels required when called: 4
  2449 ;; This function calls:
  2450 ;;		_turnLeft45
  2451 ;; This function is called by:
  2452 ;;		_main
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text1
  2457   00430A                     __ptext1:
  2458                           	callstack 0
  2459   00430A                     _turnCalibration:
  2460                           	callstack 26
  2461   00430A                     
  2462                           ;dc_motor.c: 358:     LATFbits.LATF0=1;
  2463   00430A  807E               	bsf	126,0,c	;volatile
  2464   00430C                     
  2465                           ;dc_motor.c: 359:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2466   00430C  0E52               	movlw	82
  2467   00430E  6E25               	movwf	(??_turnCalibration+1)^0,c
  2468   004310  0E2B               	movlw	43
  2469   004312  6E24               	movwf	??_turnCalibration^0,c
  2470   004314  0E00               	movlw	0
  2471   004316                     u6067:
  2472   004316  2EE8               	decfsz	wreg,f,c
  2473   004318  D7FE               	bra	u6067
  2474   00431A  2E24               	decfsz	??_turnCalibration^0,f,c
  2475   00431C  D7FC               	bra	u6067
  2476   00431E  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2477   004320  D7FA               	bra	u6067
  2478   004322  D000               	nop2	
  2479                           
  2480                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2481   004324  EF4C  F022         	goto	l598
  2482   004328                     l599:
  2483                           
  2484                           ;dc_motor.c: 362:         LATDbits.LATD3=1;
  2485   004328  867C               	bsf	124,3,c	;volatile
  2486   00432A                     
  2487                           ;dc_motor.c: 364:         turnLeft45(&motorL, &motorR);
  2488   00432A  0EC5               	movlw	low _motorL
  2489   00432C  6E1A               	movwf	turnLeft45@mL^0,c
  2490   00432E  0E01               	movlw	high _motorL
  2491   004330  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2492   004332  0EBC               	movlw	low _motorR
  2493   004334  6E1C               	movwf	turnLeft45@mR^0,c
  2494   004336  0E01               	movlw	high _motorR
  2495   004338  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2496   00433A  ECC6  F02E         	call	_turnLeft45	;wreg free
  2497                           
  2498                           ;dc_motor.c: 365:         turnLeft45(&motorL, &motorR);
  2499   00433E  0EC5               	movlw	low _motorL
  2500   004340  6E1A               	movwf	turnLeft45@mL^0,c
  2501   004342  0E01               	movlw	high _motorL
  2502   004344  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2503   004346  0EBC               	movlw	low _motorR
  2504   004348  6E1C               	movwf	turnLeft45@mR^0,c
  2505   00434A  0E01               	movlw	high _motorR
  2506   00434C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2507   00434E  ECC6  F02E         	call	_turnLeft45	;wreg free
  2508                           
  2509                           ;dc_motor.c: 366:         turnLeft45(&motorL, &motorR);
  2510   004352  0EC5               	movlw	low _motorL
  2511   004354  6E1A               	movwf	turnLeft45@mL^0,c
  2512   004356  0E01               	movlw	high _motorL
  2513   004358  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2514   00435A  0EBC               	movlw	low _motorR
  2515   00435C  6E1C               	movwf	turnLeft45@mR^0,c
  2516   00435E  0E01               	movlw	high _motorR
  2517   004360  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2518   004362  ECC6  F02E         	call	_turnLeft45	;wreg free
  2519                           
  2520                           ;dc_motor.c: 367:         turnLeft45(&motorL, &motorR);
  2521   004366  0EC5               	movlw	low _motorL
  2522   004368  6E1A               	movwf	turnLeft45@mL^0,c
  2523   00436A  0E01               	movlw	high _motorL
  2524   00436C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2525   00436E  0EBC               	movlw	low _motorR
  2526   004370  6E1C               	movwf	turnLeft45@mR^0,c
  2527   004372  0E01               	movlw	high _motorR
  2528   004374  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2529   004376  ECC6  F02E         	call	_turnLeft45	;wreg free
  2530                           
  2531                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2532   00437A  EF31  F022         	goto	l5633
  2533   00437E                     l601:
  2534                           
  2535                           ;dc_motor.c: 372:               LATDbits.LATD4=1;
  2536   00437E  887C               	bsf	124,4,c	;volatile
  2537   004380                     
  2538                           ;dc_motor.c: 373:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2539   004380  0EA3               	movlw	163
  2540   004382  6E25               	movwf	(??_turnCalibration+1)^0,c
  2541   004384  0E57               	movlw	87
  2542   004386  6E24               	movwf	??_turnCalibration^0,c
  2543   004388  0E02               	movlw	2
  2544   00438A                     u6077:
  2545   00438A  2EE8               	decfsz	wreg,f,c
  2546   00438C  D7FE               	bra	u6077
  2547   00438E  2E24               	decfsz	??_turnCalibration^0,f,c
  2548   004390  D7FC               	bra	u6077
  2549   004392  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2550   004394  D7FA               	bra	u6077
  2551   004396  D000               	nop2	
  2552                           
  2553                           ;dc_motor.c: 374:             if(!PORTFbits.RF3 & !PORTFbits.RF2){
  2554   004398  A48E               	btfss	142,2,c	;volatile
  2555   00439A  EFD1  F021         	goto	u5581
  2556   00439E  EFD4  F021         	goto	u5580
  2557   0043A2                     u5581:
  2558   0043A2  0E01               	movlw	1
  2559   0043A4  EFD5  F021         	goto	u5582
  2560   0043A8                     u5580:
  2561   0043A8  0E00               	movlw	0
  2562   0043AA                     u5582:
  2563   0043AA  6E24               	movwf	??_turnCalibration^0,c
  2564   0043AC  A68E               	btfss	142,3,c	;volatile
  2565   0043AE  EFDB  F021         	goto	u5591
  2566   0043B2  EFDE  F021         	goto	u5590
  2567   0043B6                     u5591:
  2568   0043B6  0E01               	movlw	1
  2569   0043B8  EFDF  F021         	goto	u5592
  2570   0043BC                     u5590:
  2571   0043BC  0E00               	movlw	0
  2572   0043BE                     u5592:
  2573   0043BE  1424               	andwf	??_turnCalibration^0,w,c
  2574   0043C0  A0E8               	btfss	wreg,0,c
  2575   0043C2  EFE5  F021         	goto	u5601
  2576   0043C6  EFE7  F021         	goto	u5600
  2577   0043CA                     u5601:
  2578   0043CA  EFF9  F021         	goto	l602
  2579   0043CE                     u5600:
  2580   0043CE                     
  2581                           ;dc_motor.c: 375:                 LATHbits.LATH3=1;
  2582   0043CE  8680               	bsf	128,3,c	;volatile
  2583                           
  2584                           ;dc_motor.c: 376:                 LATDbits.LATD7=1;
  2585   0043D0  8E7C               	bsf	124,7,c	;volatile
  2586   0043D2                     
  2587                           ;dc_motor.c: 377:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2588   0043D2  0E52               	movlw	82
  2589   0043D4  6E25               	movwf	(??_turnCalibration+1)^0,c
  2590   0043D6  0E2B               	movlw	43
  2591   0043D8  6E24               	movwf	??_turnCalibration^0,c
  2592   0043DA  0E00               	movlw	0
  2593   0043DC                     u6087:
  2594   0043DC  2EE8               	decfsz	wreg,f,c
  2595   0043DE  D7FE               	bra	u6087
  2596   0043E0  2E24               	decfsz	??_turnCalibration^0,f,c
  2597   0043E2  D7FC               	bra	u6087
  2598   0043E4  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2599   0043E6  D7FA               	bra	u6087
  2600   0043E8  D000               	nop2	
  2601   0043EA                     
  2602                           ;dc_motor.c: 378:                 LATHbits.LATH3=0;
  2603   0043EA  9680               	bcf	128,3,c	;volatile
  2604   0043EC                     
  2605                           ;dc_motor.c: 379:                 LATDbits.LATD7=0;
  2606   0043EC  9E7C               	bcf	124,7,c	;volatile
  2607                           
  2608                           ;dc_motor.c: 380:             }
  2609   0043EE  EF31  F022         	goto	l5633
  2610   0043F2                     l602:
  2611   0043F2  B68E               	btfsc	142,3,c	;volatile
  2612   0043F4  EFFE  F021         	goto	u5611
  2613   0043F8  EF00  F022         	goto	u5610
  2614   0043FC                     u5611:
  2615   0043FC  EF15  F022         	goto	l604
  2616   004400                     u5610:
  2617   004400                     
  2618                           ;dc_motor.c: 383:                 Turn45Delay+=10;
  2619   004400  0E0A               	movlw	10
  2620   004402  0100               	movlb	0	; () banked
  2621   004404  27F9               	addwf	_Turn45Delay& (0+255),f,b
  2622   004406  0E00               	movlw	0
  2623   004408  23FA               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2624   00440A                     
  2625                           ; BSR set to: 0
  2626                           ;dc_motor.c: 384:                 LATHbits.LATH3=1;
  2627   00440A  8680               	bsf	128,3,c	;volatile
  2628   00440C                     
  2629                           ; BSR set to: 0
  2630                           ;dc_motor.c: 385:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2631   00440C  0E52               	movlw	82
  2632   00440E  6E25               	movwf	(??_turnCalibration+1)^0,c
  2633   004410  0E2B               	movlw	43
  2634   004412  6E24               	movwf	??_turnCalibration^0,c
  2635   004414  0E00               	movlw	0
  2636   004416                     u6097:
  2637   004416  2EE8               	decfsz	wreg,f,c
  2638   004418  D7FE               	bra	u6097
  2639   00441A  2E24               	decfsz	??_turnCalibration^0,f,c
  2640   00441C  D7FC               	bra	u6097
  2641   00441E  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2642   004420  D7FA               	bra	u6097
  2643   004422  D000               	nop2	
  2644   004424                     
  2645                           ;dc_motor.c: 386:                 LATHbits.LATH3=0;
  2646   004424  9680               	bcf	128,3,c	;volatile
  2647                           
  2648                           ;dc_motor.c: 387:             }
  2649   004426  EF31  F022         	goto	l5633
  2650   00442A                     l604:
  2651   00442A  B48E               	btfsc	142,2,c	;volatile
  2652   00442C  EF1A  F022         	goto	u5621
  2653   004430  EF1C  F022         	goto	u5620
  2654   004434                     u5621:
  2655   004434  EF31  F022         	goto	l603
  2656   004438                     u5620:
  2657   004438                     
  2658                           ;dc_motor.c: 390:                 Turn45Delay-=10;
  2659   004438  0100               	movlb	0	; () banked
  2660   00443A  0EF6               	movlw	246
  2661   00443C  27F9               	addwf	_Turn45Delay& (0+255),f,b
  2662   00443E  0EFF               	movlw	255
  2663   004440  23FA               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2664   004442                     
  2665                           ; BSR set to: 0
  2666                           ;dc_motor.c: 391:                 LATDbits.LATD7=1;
  2667   004442  8E7C               	bsf	124,7,c	;volatile
  2668   004444                     
  2669                           ; BSR set to: 0
  2670                           ;dc_motor.c: 392:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2671   004444  0E52               	movlw	82
  2672   004446  6E25               	movwf	(??_turnCalibration+1)^0,c
  2673   004448  0E2B               	movlw	43
  2674   00444A  6E24               	movwf	??_turnCalibration^0,c
  2675   00444C  0E00               	movlw	0
  2676   00444E                     u6107:
  2677   00444E  2EE8               	decfsz	wreg,f,c
  2678   004450  D7FE               	bra	u6107
  2679   004452  2E24               	decfsz	??_turnCalibration^0,f,c
  2680   004454  D7FC               	bra	u6107
  2681   004456  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2682   004458  D7FA               	bra	u6107
  2683   00445A  D000               	nop2	
  2684   00445C                     
  2685                           ;dc_motor.c: 393:                 LATDbits.LATD7=0;
  2686   00445C  9E7C               	bcf	124,7,c	;volatile
  2687   00445E  EF31  F022         	goto	l5633
  2688   004462                     l603:
  2689   004462                     l5633:
  2690                           
  2691                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2692   004462  A48E               	btfss	142,2,c	;volatile
  2693   004464  EF36  F022         	goto	u5631
  2694   004468  EF38  F022         	goto	u5630
  2695   00446C                     u5631:
  2696   00446C  EF3F  F022         	goto	l609
  2697   004470                     u5630:
  2698   004470  B68E               	btfsc	142,3,c	;volatile
  2699   004472  EF3D  F022         	goto	u5641
  2700   004476  EF3F  F022         	goto	u5640
  2701   00447A                     u5641:
  2702   00447A  EFBF  F021         	goto	l601
  2703   00447E                     u5640:
  2704   00447E                     l609:
  2705                           
  2706                           ;dc_motor.c: 396:         LATDbits.LATD4=0;
  2707   00447E  987C               	bcf	124,4,c	;volatile
  2708   004480                     
  2709                           ;dc_motor.c: 397:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2710   004480  0EA3               	movlw	163
  2711   004482  6E25               	movwf	(??_turnCalibration+1)^0,c
  2712   004484  0E57               	movlw	87
  2713   004486  6E24               	movwf	??_turnCalibration^0,c
  2714   004488  0E02               	movlw	2
  2715   00448A                     u6117:
  2716   00448A  2EE8               	decfsz	wreg,f,c
  2717   00448C  D7FE               	bra	u6117
  2718   00448E  2E24               	decfsz	??_turnCalibration^0,f,c
  2719   004490  D7FC               	bra	u6117
  2720   004492  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2721   004494  D7FA               	bra	u6117
  2722   004496  D000               	nop2	
  2723   004498                     l598:
  2724                           
  2725                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2726   004498  A68E               	btfss	142,3,c	;volatile
  2727   00449A  EF51  F022         	goto	u5651
  2728   00449E  EF54  F022         	goto	u5650
  2729   0044A2                     u5651:
  2730   0044A2  0E01               	movlw	1
  2731   0044A4  EF55  F022         	goto	u5652
  2732   0044A8                     u5650:
  2733   0044A8  0E00               	movlw	0
  2734   0044AA                     u5652:
  2735   0044AA  6E24               	movwf	??_turnCalibration^0,c
  2736   0044AC  A48E               	btfss	142,2,c	;volatile
  2737   0044AE  EF5B  F022         	goto	u5661
  2738   0044B2  EF5E  F022         	goto	u5660
  2739   0044B6                     u5661:
  2740   0044B6  0E01               	movlw	1
  2741   0044B8  EF5F  F022         	goto	u5662
  2742   0044BC                     u5660:
  2743   0044BC  0E00               	movlw	0
  2744   0044BE                     u5662:
  2745   0044BE  1424               	andwf	??_turnCalibration^0,w,c
  2746   0044C0  A0E8               	btfss	wreg,0,c
  2747   0044C2  EF65  F022         	goto	u5671
  2748   0044C6  EF67  F022         	goto	u5670
  2749   0044CA                     u5671:
  2750   0044CA  EF94  F021         	goto	l599
  2751   0044CE                     u5670:
  2752   0044CE                     
  2753                           ;dc_motor.c: 399:     LATDbits.LATD3=0;
  2754   0044CE  967C               	bcf	124,3,c	;volatile
  2755   0044D0                     
  2756                           ;dc_motor.c: 400:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2757   0044D0  0EA3               	movlw	163
  2758   0044D2  6E25               	movwf	(??_turnCalibration+1)^0,c
  2759   0044D4  0E57               	movlw	87
  2760   0044D6  6E24               	movwf	??_turnCalibration^0,c
  2761   0044D8  0E02               	movlw	2
  2762   0044DA                     u6127:
  2763   0044DA  2EE8               	decfsz	wreg,f,c
  2764   0044DC  D7FE               	bra	u6127
  2765   0044DE  2E24               	decfsz	??_turnCalibration^0,f,c
  2766   0044E0  D7FC               	bra	u6127
  2767   0044E2  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2768   0044E4  D7FA               	bra	u6127
  2769   0044E6  D000               	nop2	
  2770   0044E8  0012               	return		;funcret
  2771   0044EA                     __end_of_turnCalibration:
  2772                           	callstack 0
  2773                           
  2774 ;; *************** function _sprintf *****************
  2775 ;; Defined at:
  2776 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2779 ;;		 -> main@buf(100), 
  2780 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2781 ;;		 -> STR_2(35), STR_1(37), 
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  f              11  100[BANK0 ] struct _IO_FILE
  2784 ;;  ap              2   98[BANK0 ] PTR void [1]
  2785 ;;		 -> ?_sprintf(2), 
  2786 ;;  ret             2    0        int 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  2   80[BANK0 ] int 
  2789 ;; Registers used:
  2790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2796 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2797 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2799 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2800 ;;Total ram usage:       31 bytes
  2801 ;; Hardware stack levels used: 1
  2802 ;; Hardware stack levels required when called: 7
  2803 ;; This function calls:
  2804 ;;		_vfprintf
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text2
  2811   0059C2                     __ptext2:
  2812                           	callstack 0
  2813   0059C2                     _sprintf:
  2814                           	callstack 23
  2815   0059C2  0EB4               	movlw	low (?_sprintf+4)
  2816   0059C4  0100               	movlb	0	; () banked
  2817   0059C6  6FC2               	movwf	sprintf@ap& (0+255),b
  2818   0059C8  0E00               	movlw	high (?_sprintf+4)
  2819   0059CA  6FC3               	movwf	(sprintf@ap+1)& (0+255),b
  2820   0059CC  C0B0  F0C4         	movff	sprintf@s,sprintf@f
  2821   0059D0  C0B1  F0C5         	movff	sprintf@s+1,sprintf@f+1
  2822   0059D4                     
  2823                           ; BSR set to: 0
  2824   0059D4  0E00               	movlw	0
  2825   0059D6  6FC8               	movwf	(sprintf@f+4)& (0+255),b
  2826   0059D8  0E00               	movlw	0
  2827   0059DA  6FC7               	movwf	(sprintf@f+3)& (0+255),b
  2828   0059DC                     
  2829                           ; BSR set to: 0
  2830   0059DC  0E00               	movlw	0
  2831   0059DE  6FCE               	movwf	(sprintf@f+10)& (0+255),b
  2832   0059E0  0E00               	movlw	0
  2833   0059E2  6FCD               	movwf	(sprintf@f+9)& (0+255),b
  2834   0059E4                     
  2835                           ; BSR set to: 0
  2836   0059E4  0EC4               	movlw	low sprintf@f
  2837   0059E6  6FA8               	movwf	vfprintf@fp& (0+255),b
  2838   0059E8  0E00               	movlw	high sprintf@f
  2839   0059EA  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2840   0059EC  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2841   0059F0  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2842   0059F4  0EC2               	movlw	low sprintf@ap
  2843   0059F6  6FAC               	movwf	vfprintf@ap& (0+255),b
  2844   0059F8  0E00               	movlw	high sprintf@ap
  2845   0059FA  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2846   0059FC  ECB6  F02C         	call	_vfprintf	;wreg free
  2847   005A00  0100               	movlb	0	; () banked
  2848   005A02  51C7               	movf	(sprintf@f+3)& (0+255),w,b
  2849   005A04  25B0               	addwf	sprintf@s& (0+255),w,b
  2850   005A06  6ED9               	movwf	fsr2l,c
  2851   005A08  51C8               	movf	(sprintf@f+4)& (0+255),w,b
  2852   005A0A  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2853   005A0C  6EDA               	movwf	fsr2h,c
  2854   005A0E  0E00               	movlw	0
  2855   005A10  6EDF               	movwf	indf2,c
  2856   005A12                     
  2857                           ; BSR set to: 0
  2858   005A12  0012               	return		;funcret
  2859   005A14                     __end_of_sprintf:
  2860                           	callstack 0
  2861                           
  2862 ;; *************** function _vfprintf *****************
  2863 ;; Defined at:
  2864 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2867 ;;		 -> sprintf@f(11), 
  2868 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2869 ;;		 -> STR_2(35), STR_1(37), 
  2870 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2871 ;;		 -> sprintf@ap(2), 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2874 ;;		 -> STR_2(35), STR_1(37), 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  2   72[BANK0 ] int 
  2877 ;; Registers used:
  2878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2884 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2885 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2887 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2888 ;;Total ram usage:        8 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; Hardware stack levels required when called: 6
  2891 ;; This function calls:
  2892 ;;		_vfpfcnvrt
  2893 ;; This function is called by:
  2894 ;;		_sprintf
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text3
  2899   00596C                     __ptext3:
  2900                           	callstack 0
  2901   00596C                     _vfprintf:
  2902                           	callstack 23
  2903   00596C                     
  2904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2905   00596C  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2906   005970  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2907                           
  2908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2909   005974  EFCB  F02C         	goto	l5301
  2910   005978                     l5299:
  2911                           
  2912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2913   005978  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2914   00597C  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2915   005980  0EAE               	movlw	low vfprintf@cfmt
  2916   005982  0100               	movlb	0	; () banked
  2917   005984  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2918   005986  0E00               	movlw	high vfprintf@cfmt
  2919   005988  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2920   00598A  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2921   00598E  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2922   005992  EC64  F01C         	call	_vfpfcnvrt	;wreg free
  2923   005996                     l5301:
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2926   005996  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2927   00599A  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2928   00599E                     	if	0	;tblptru may be non-zero
  2929   00599E                     	endif
  2930   00599E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2931   00599E  0E00               	movlw	low (__mediumconst shr (0+16))
  2932   0059A0  6EF8               	movwf	tblptru,c
  2933   0059A2                     	endif
  2934   0059A2  0008               	tblrd		*
  2935   0059A4  50F5               	movf	tablat,w,c
  2936   0059A6  0900               	iorlw	0
  2937   0059A8  A4D8               	btfss	status,2,c
  2938   0059AA  EFD9  F02C         	goto	u5201
  2939   0059AE  EFDB  F02C         	goto	u5200
  2940   0059B2                     u5201:
  2941   0059B2  EFBC  F02C         	goto	l5299
  2942   0059B6                     u5200:
  2943   0059B6                     
  2944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2945   0059B6  0E00               	movlw	0
  2946   0059B8  0100               	movlb	0	; () banked
  2947   0059BA  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2948   0059BC  0E00               	movlw	0
  2949   0059BE  6FA8               	movwf	?_vfprintf& (0+255),b
  2950   0059C0                     
  2951                           ; BSR set to: 0
  2952   0059C0  0012               	return		;funcret
  2953   0059C2                     __end_of_vfprintf:
  2954                           	callstack 0
  2955                           
  2956 ;; *************** function _vfpfcnvrt *****************
  2957 ;; Defined at:
  2958 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2961 ;;		 -> sprintf@f(11), 
  2962 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2963 ;;		 -> vfprintf@cfmt(2), 
  2964 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2965 ;;		 -> sprintf@ap(2), 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  convarg         8   61[BANK0 ] struct .
  2968 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2969 ;;		 -> STR_2(35), STR_1(37), 
  2970 ;;  i               2    0        int 
  2971 ;;  done            2    0        int 
  2972 ;;  c               1   69[BANK0 ] unsigned char 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2982 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2983 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2984 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2985 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2986 ;;Total ram usage:       19 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; Hardware stack levels required when called: 5
  2989 ;; This function calls:
  2990 ;;		_dtoa
  2991 ;;		_efgtoa
  2992 ;;		_fputc
  2993 ;; This function is called by:
  2994 ;;		_vfprintf
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text4
  2999   0038C8                     __ptext4:
  3000                           	callstack 0
  3001   0038C8                     _vfpfcnvrt:
  3002                           	callstack 23
  3003   0038C8                     
  3004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3005   0038C8  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3006   0038CC  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3007   0038D0  CFDE FFF6          	movff	postinc2,tblptrl
  3008   0038D4  CFDD FFF7          	movff	postdec2,tblptrh
  3009   0038D8                     	if	0	;tblptru may be non-zero
  3010   0038D8                     	endif
  3011   0038D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3012   0038D8  0E00               	movlw	low (__mediumconst shr (0+16))
  3013   0038DA  6EF8               	movwf	tblptru,c
  3014   0038DC                     	endif
  3015   0038DC  0008               	tblrd		*
  3016   0038DE  50F5               	movf	tablat,w,c
  3017   0038E0  0A25               	xorlw	37
  3018   0038E2  A4D8               	btfss	status,2,c
  3019   0038E4  EF76  F01C         	goto	u5031
  3020   0038E8  EF78  F01C         	goto	u5030
  3021   0038EC                     u5031:
  3022   0038EC  EFD0  F01D         	goto	l5149
  3023   0038F0                     u5030:
  3024   0038F0                     
  3025                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3026   0038F0  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3027   0038F4  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3028   0038F8  2ADE               	incf	postinc2,f,c
  3029   0038FA  0E00               	movlw	0
  3030   0038FC  22DD               	addwfc	postdec2,f,c
  3031   0038FE                     
  3032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3033   0038FE  0E00               	movlw	0
  3034   003900  0100               	movlb	0	; () banked
  3035   003902  6FEE               	movwf	(_width+1)& (0+255),b
  3036   003904  0E00               	movlw	0
  3037   003906  6FED               	movwf	_width& (0+255),b
  3038   003908  C0ED  F0F3         	movff	_width,_flags
  3039   00390C                     
  3040                           ; BSR set to: 0
  3041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3042   00390C  69EF               	setf	_prec& (0+255),b
  3043   00390E  69F0               	setf	(_prec+1)& (0+255),b
  3044   003910                     
  3045                           ; BSR set to: 0
  3046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  3047   003910  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3048   003914  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3049   003918  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  3050   00391C  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  3051   003920                     
  3052                           ; BSR set to: 0
  3053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3054   003920  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3055   003924  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3056   003928                     	if	0	;tblptru may be non-zero
  3057   003928                     	endif
  3058   003928                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3059   003928  0E00               	movlw	low (__mediumconst shr (0+16))
  3060   00392A  6EF8               	movwf	tblptru,c
  3061   00392C                     	endif
  3062   00392C  0008               	tblrd		*
  3063   00392E  50F5               	movf	tablat,w,c
  3064   003930  0A64               	xorlw	100
  3065   003932  B4D8               	btfsc	status,2,c
  3066   003934  EF9E  F01C         	goto	u5041
  3067   003938  EFA0  F01C         	goto	u5040
  3068   00393C                     u5041:
  3069   00393C  EFB0  F01C         	goto	l5105
  3070   003940                     u5040:
  3071   003940                     
  3072                           ; BSR set to: 0
  3073   003940  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3074   003944  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3075   003948                     	if	0	;tblptru may be non-zero
  3076   003948                     	endif
  3077   003948                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3078   003948  0E00               	movlw	low (__mediumconst shr (0+16))
  3079   00394A  6EF8               	movwf	tblptru,c
  3080   00394C                     	endif
  3081   00394C  0008               	tblrd		*
  3082   00394E  50F5               	movf	tablat,w,c
  3083   003950  0A69               	xorlw	105
  3084   003952  A4D8               	btfss	status,2,c
  3085   003954  EFAE  F01C         	goto	u5051
  3086   003958  EFB0  F01C         	goto	u5050
  3087   00395C                     u5051:
  3088   00395C  EFF3  F01C         	goto	l5111
  3089   003960                     u5050:
  3090   003960                     l5105:
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3094   003960  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3095   003964  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3096   003968  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3097   00396C  0E02               	movlw	2
  3098   00396E  26DE               	addwf	postinc2,f,c
  3099   003970  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3100   003974  0E00               	movlw	0
  3101   003976  22DD               	addwfc	postdec2,f,c
  3102   003978  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3103   00397C  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3104   003980  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3105   003984  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  3106   003988  0E00               	movlw	0
  3107   00398A  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  3108   00398C  0EFF               	movlw	-1
  3109   00398E  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  3110   003990  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  3111   003992  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  3112   003994  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  3113   003996  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  3114   003998  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  3115                           
  3116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3117   00399A  0E01               	movlw	1
  3118   00399C  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3119   00399E  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3120   0039A0  0E00               	movlw	0
  3121   0039A2  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3122   0039A4  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3123   0039A6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3124   0039AA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3125   0039AE  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3126   0039B2  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3127   0039B6                     
  3128                           ; BSR set to: 0
  3129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3130   0039B6  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3131   0039BA  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3132   0039BE  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  3133   0039C2  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3134   0039C6  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3135   0039CA  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3136   0039CE  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3137   0039D2  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3138   0039D6  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3139   0039DA  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3140   0039DE  EC3D  F01F         	call	_dtoa	;wreg free
  3141   0039E2  EFE6  F01D         	goto	l1492
  3142   0039E6                     l5111:
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3146   0039E6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3147   0039EA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3148   0039EE  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  3149   0039F2  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  3150   0039F6                     
  3151                           ; BSR set to: 0
  3152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3153   0039F6  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3154   0039FA  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3155   0039FE                     	if	0	;tblptru may be non-zero
  3156   0039FE                     	endif
  3157   0039FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3158   0039FE  0E00               	movlw	low (__mediumconst shr (0+16))
  3159   003A00  6EF8               	movwf	tblptru,c
  3160   003A02                     	endif
  3161   003A02  0008               	tblrd		*
  3162   003A04  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  3163                           
  3164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3165   003A08  EF12  F01D         	goto	l5123
  3166   003A0C                     l5115:
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3170   003A0C  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3171   003A0E  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3174   003A10  EF2B  F01D         	goto	l5125
  3175   003A14                     l5117:
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3179   003A14  0E6C               	movlw	108
  3180   003A16  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3181                           
  3182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3183   003A18  EF2B  F01D         	goto	l5125
  3184   003A1C                     l5119:
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3188   003A1C  0E00               	movlw	0
  3189   003A1E  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3190                           
  3191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3192   003A20  EF2B  F01D         	goto	l5125
  3193   003A24                     l5123:
  3194                           
  3195                           ; BSR set to: 0
  3196   003A24  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3197   003A26  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3198   003A28  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3199                           
  3200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3201                           ; Switch size 1, requested type "simple"
  3202                           ; Number of cases is 1, Range of values is 0 to 0
  3203                           ; switch strategies available:
  3204                           ; Name         Instructions Cycles
  3205                           ; simple_byte            4     3 (average)
  3206                           ;	Chosen strategy is simple_byte
  3207   003A2A  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3208   003A2C  0A00               	xorlw	0	; case 0
  3209   003A2E  B4D8               	btfsc	status,2,c
  3210   003A30  EF1C  F01D         	goto	l6149
  3211   003A34  EF0E  F01D         	goto	l5119
  3212   003A38                     l6149:
  3213                           
  3214                           ; BSR set to: 0
  3215                           ; Switch size 1, requested type "simple"
  3216                           ; Number of cases is 3, Range of values is 76 to 108
  3217                           ; switch strategies available:
  3218                           ; Name         Instructions Cycles
  3219                           ; simple_byte           10     6 (average)
  3220                           ;	Chosen strategy is simple_byte
  3221   003A38  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3222   003A3A  0A4C               	xorlw	76	; case 76
  3223   003A3C  B4D8               	btfsc	status,2,c
  3224   003A3E  EF06  F01D         	goto	l5115
  3225   003A42  0A2A               	xorlw	42	; case 102
  3226   003A44  B4D8               	btfsc	status,2,c
  3227   003A46  EF0A  F01D         	goto	l5117
  3228   003A4A  0A0A               	xorlw	10	; case 108
  3229   003A4C  B4D8               	btfsc	status,2,c
  3230   003A4E  EF06  F01D         	goto	l5115
  3231   003A52  EF0E  F01D         	goto	l5119
  3232   003A56                     l5125:
  3233                           
  3234                           ; BSR set to: 0
  3235   003A56  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3236   003A5A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3237   003A5E                     	if	0	;tblptru may be non-zero
  3238   003A5E                     	endif
  3239   003A5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3240   003A5E  0E00               	movlw	low (__mediumconst shr (0+16))
  3241   003A60  6EF8               	movwf	tblptru,c
  3242   003A62                     	endif
  3243   003A62  0008               	tblrd		*
  3244   003A64  50F5               	movf	tablat,w,c
  3245   003A66  0A66               	xorlw	102
  3246   003A68  A4D8               	btfss	status,2,c
  3247   003A6A  EF39  F01D         	goto	u5061
  3248   003A6E  EF3B  F01D         	goto	u5060
  3249   003A72                     u5061:
  3250   003A72  EFC7  F01D         	goto	l5145
  3251   003A76                     u5060:
  3252   003A76  EF71  F01D         	goto	l5133
  3253   003A7A                     l5127:
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3257   003A7A  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3258   003A7E  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3259   003A82  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3260   003A86  0E04               	movlw	4
  3261   003A88  26DE               	addwf	postinc2,f,c
  3262   003A8A  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3263   003A8E  0E00               	movlw	0
  3264   003A90  22DD               	addwfc	postdec2,f,c
  3265   003A92  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3266   003A96  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3267   003A9A  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3268   003A9E  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3269   003AA2  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3270   003AA6  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3271                           
  3272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3273   003AAA  EF86  F01D         	goto	l5135
  3274   003AAE                     l5129:
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3278   003AAE  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3279   003AB2  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3280   003AB6  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3281   003ABA  0E04               	movlw	4
  3282   003ABC  26DE               	addwf	postinc2,f,c
  3283   003ABE  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3284   003AC2  0E00               	movlw	0
  3285   003AC4  22DD               	addwfc	postdec2,f,c
  3286   003AC6  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3287   003ACA  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3288   003ACE  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3289   003AD2  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3290   003AD6  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3291   003ADA  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3292                           
  3293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3294   003ADE  EF86  F01D         	goto	l5135
  3295   003AE2                     l5133:
  3296                           
  3297                           ; BSR set to: 0
  3298   003AE2  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3299   003AE4  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3300   003AE6  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3301                           
  3302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3303                           ; Switch size 1, requested type "simple"
  3304                           ; Number of cases is 1, Range of values is 0 to 0
  3305                           ; switch strategies available:
  3306                           ; Name         Instructions Cycles
  3307                           ; simple_byte            4     3 (average)
  3308                           ;	Chosen strategy is simple_byte
  3309   003AE8  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3310   003AEA  0A00               	xorlw	0	; case 0
  3311   003AEC  B4D8               	btfsc	status,2,c
  3312   003AEE  EF7B  F01D         	goto	l6151
  3313   003AF2  EF86  F01D         	goto	l5135
  3314   003AF6                     l6151:
  3315                           
  3316                           ; BSR set to: 0
  3317                           ; Switch size 1, requested type "simple"
  3318                           ; Number of cases is 2, Range of values is 76 to 108
  3319                           ; switch strategies available:
  3320                           ; Name         Instructions Cycles
  3321                           ; simple_byte            7     4 (average)
  3322                           ;	Chosen strategy is simple_byte
  3323   003AF6  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3324   003AF8  0A4C               	xorlw	76	; case 76
  3325   003AFA  B4D8               	btfsc	status,2,c
  3326   003AFC  EF57  F01D         	goto	l5129
  3327   003B00  0A20               	xorlw	32	; case 108
  3328   003B02  B4D8               	btfsc	status,2,c
  3329   003B04  EF3D  F01D         	goto	l5127
  3330   003B08  EF86  F01D         	goto	l5135
  3331   003B0C                     l5135:
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3335   003B0C  0E01               	movlw	1
  3336   003B0E  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3337   003B10  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3338   003B12  0E00               	movlw	0
  3339   003B14  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3340   003B16  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3341   003B18  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3342   003B1C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3343   003B20  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3344   003B24  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3345                           
  3346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3347   003B28  EFAF  F01D         	goto	l5143
  3348   003B2C                     l5137:
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3352   003B2C  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3353   003B30  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3354   003B34  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  3355   003B38  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3356   003B3C  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3357   003B40  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3358   003B44  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3359   003B48  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3360   003B4C                     	if	0	;tblptru may be non-zero
  3361   003B4C                     	endif
  3362   003B4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3363   003B4C  0E00               	movlw	low (__mediumconst shr (0+16))
  3364   003B4E  6EF8               	movwf	tblptru,c
  3365   003B50                     	endif
  3366   003B50  0008               	tblrd		*
  3367   003B52  CFF5 F066          	movff	tablat,efgtoa@c
  3368   003B56  EC97  F00C         	call	_efgtoa	;wreg free
  3369   003B5A  EFE6  F01D         	goto	l1492
  3370   003B5E                     l5143:
  3371                           
  3372                           ; BSR set to: 0
  3373   003B5E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3374   003B62  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3375   003B66                     	if	0	;tblptru may be non-zero
  3376   003B66                     	endif
  3377   003B66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3378   003B66  0E00               	movlw	low (__mediumconst shr (0+16))
  3379   003B68  6EF8               	movwf	tblptru,c
  3380   003B6A                     	endif
  3381   003B6A  0008               	tblrd		*
  3382   003B6C  50F5               	movf	tablat,w,c
  3383   003B6E  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3384   003B70  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3385                           
  3386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3387                           ; Switch size 1, requested type "simple"
  3388                           ; Number of cases is 1, Range of values is 0 to 0
  3389                           ; switch strategies available:
  3390                           ; Name         Instructions Cycles
  3391                           ; simple_byte            4     3 (average)
  3392                           ;	Chosen strategy is simple_byte
  3393   003B72  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3394   003B74  0A00               	xorlw	0	; case 0
  3395   003B76  B4D8               	btfsc	status,2,c
  3396   003B78  EFC0  F01D         	goto	l6153
  3397   003B7C  EFC7  F01D         	goto	l5145
  3398   003B80                     l6153:
  3399                           
  3400                           ; BSR set to: 0
  3401                           ; Switch size 1, requested type "simple"
  3402                           ; Number of cases is 1, Range of values is 102 to 102
  3403                           ; switch strategies available:
  3404                           ; Name         Instructions Cycles
  3405                           ; simple_byte            4     3 (average)
  3406                           ;	Chosen strategy is simple_byte
  3407   003B80  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3408   003B82  0A66               	xorlw	102	; case 102
  3409   003B84  B4D8               	btfsc	status,2,c
  3410   003B86  EF96  F01D         	goto	l5137
  3411   003B8A  EFC7  F01D         	goto	l5145
  3412   003B8E                     l5145:
  3413                           
  3414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3415   003B8E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3416   003B92  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3417   003B96  2ADE               	incf	postinc2,f,c
  3418   003B98  0E00               	movlw	0
  3419   003B9A  22DD               	addwfc	postdec2,f,c
  3420   003B9C  EFE6  F01D         	goto	l1492
  3421   003BA0                     l5149:
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3424   003BA0  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3425   003BA4  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3426   003BA8  CFDE FFF6          	movff	postinc2,tblptrl
  3427   003BAC  CFDD FFF7          	movff	postdec2,tblptrh
  3428   003BB0                     	if	0	;tblptru may be non-zero
  3429   003BB0                     	endif
  3430   003BB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3431   003BB0  0E00               	movlw	low (__mediumconst shr (0+16))
  3432   003BB2  6EF8               	movwf	tblptru,c
  3433   003BB4                     	endif
  3434   003BB4  0008               	tblrd		*
  3435   003BB6  50F5               	movf	tablat,w,c
  3436   003BB8  6E01               	movwf	fputc@c^0,c
  3437   003BBA  6A02               	clrf	(fputc@c+1)^0,c
  3438   003BBC  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3439   003BC0  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3440   003BC4  ECFF  F026         	call	_fputc	;wreg free
  3441   003BC8  EFC7  F01D         	goto	l5145
  3442   003BCC                     l1492:
  3443   003BCC  0012               	return		;funcret
  3444   003BCE                     __end_of_vfpfcnvrt:
  3445                           	callstack 0
  3446                           
  3447 ;; *************** function _efgtoa *****************
  3448 ;; Defined at:
  3449 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3452 ;;		 -> sprintf@f(11), 
  3453 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  3454 ;;  c               1    6[BANK0 ] unsigned char 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  u               4   49[BANK0 ] struct flui
  3457 ;;  g               4   45[BANK0 ] struct flui
  3458 ;;  l               4   38[BANK0 ] struct flui
  3459 ;;  h               4   34[BANK0 ] struct flui
  3460 ;;  ou              4   28[BANK0 ] struct flui
  3461 ;;  n               2   43[BANK0 ] int 
  3462 ;;  i               2   32[BANK0 ] int 
  3463 ;;  w               2   26[BANK0 ] int 
  3464 ;;  e               2   24[BANK0 ] int 
  3465 ;;  m               2   22[BANK0 ] int 
  3466 ;;  d               2   20[BANK0 ] int 
  3467 ;;  t               2   13[BANK0 ] int 
  3468 ;;  p               2   11[BANK0 ] int 
  3469 ;;  ne              2    9[BANK0 ] int 
  3470 ;;  sign            1   42[BANK0 ] unsigned char 
  3471 ;;  nmode           1   19[BANK0 ] unsigned char 
  3472 ;;  mode            1   18[BANK0 ] unsigned char 
  3473 ;;  pp              1   17[BANK0 ] unsigned char 
  3474 ;;  esign           1    0        unsigned char 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3484 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3485 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3486 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3487 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3488 ;;Total ram usage:       53 bytes
  3489 ;; Hardware stack levels used: 1
  3490 ;; Hardware stack levels required when called: 4
  3491 ;; This function calls:
  3492 ;;		___fladd
  3493 ;;		___fldiv
  3494 ;;		___fleq
  3495 ;;		___flge
  3496 ;;		___flmul
  3497 ;;		___flneg
  3498 ;;		___flsub
  3499 ;;		___fltol
  3500 ;;		___fpclassifyf
  3501 ;;		_floorf
  3502 ;;		_labs
  3503 ;;		_memcpy
  3504 ;;		_pad
  3505 ;;		_strcpy
  3506 ;; This function is called by:
  3507 ;;		_vfpfcnvrt
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text5
  3512   00192E                     __ptext5:
  3513                           	callstack 0
  3514   00192E                     _efgtoa:
  3515                           	callstack 23
  3516   00192E                     
  3517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3518   00192E  0E00               	movlw	0
  3519   001930  0100               	movlb	0	; () banked
  3520   001932  6F8A               	movwf	efgtoa@sign& (0+255),b
  3521   001934                     
  3522                           ; BSR set to: 0
  3523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3524   001934  C062  F08D         	movff	efgtoa@f,efgtoa@g
  3525   001938  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  3526   00193C  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  3527   001940  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  3528   001944                     
  3529                           ; BSR set to: 0
  3530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3531   001944  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3532   001946  EFA9  F00C         	goto	u4680
  3533   00194A  EFA7  F00C         	goto	u4681
  3534   00194E                     u4681:
  3535   00194E  EFBD  F00C         	goto	l4815
  3536   001952                     u4680:
  3537   001952                     
  3538                           ; BSR set to: 0
  3539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3540   001952  0E01               	movlw	1
  3541   001954  6F8A               	movwf	efgtoa@sign& (0+255),b
  3542   001956                     
  3543                           ; BSR set to: 0
  3544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3545   001956  C08D  F001         	movff	efgtoa@g,___flneg@f1
  3546   00195A  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3547   00195E  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3548   001962  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3549   001966  ECD3  F02F         	call	___flneg	;wreg free
  3550   00196A  C001  F08D         	movff	?___flneg,efgtoa@g
  3551   00196E  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  3552   001972  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  3553   001976  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  3554   00197A                     l4815:
  3555                           
  3556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3557   00197A  0E00               	movlw	0
  3558   00197C  0100               	movlb	0	; () banked
  3559   00197E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3560   001980  0E00               	movlw	0
  3561   001982  6F8B               	movwf	efgtoa@n& (0+255),b
  3562   001984                     
  3563                           ; BSR set to: 0
  3564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3565   001984  C0ED  F07A         	movff	_width,efgtoa@w
  3566   001988  C0EE  F07B         	movff	_width+1,efgtoa@w+1
  3567   00198C                     
  3568                           ; BSR set to: 0
  3569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3570   00198C  518A               	movf	efgtoa@sign& (0+255),w,b
  3571   00198E  B4D8               	btfsc	status,2,c
  3572   001990  EFCC  F00C         	goto	u4691
  3573   001994  EFCE  F00C         	goto	u4690
  3574   001998                     u4691:
  3575   001998  EFE2  F00C         	goto	l4829
  3576   00199C                     u4690:
  3577   00199C                     
  3578                           ; BSR set to: 0
  3579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3580   00199C  518A               	movf	efgtoa@sign& (0+255),w,b
  3581   00199E  A4D8               	btfss	status,2,c
  3582   0019A0  EFD4  F00C         	goto	u4701
  3583   0019A4  EFD6  F00C         	goto	u4700
  3584   0019A8                     u4701:
  3585   0019A8  EFDC  F00C         	goto	l4825
  3586   0019AC                     u4700:
  3587   0019AC                     
  3588                           ; BSR set to: 0
  3589   0019AC  0E00               	movlw	0
  3590   0019AE  6F70               	movwf	(_efgtoa$2774+1)& (0+255),b
  3591   0019B0  0E2B               	movlw	43
  3592   0019B2  6F6F               	movwf	_efgtoa$2774& (0+255),b
  3593   0019B4  EFE0  F00C         	goto	l4827
  3594   0019B8                     l4825:
  3595                           
  3596                           ; BSR set to: 0
  3597   0019B8  0E00               	movlw	0
  3598   0019BA  6F70               	movwf	(_efgtoa$2774+1)& (0+255),b
  3599   0019BC  0E2D               	movlw	45
  3600   0019BE  6F6F               	movwf	_efgtoa$2774& (0+255),b
  3601   0019C0                     l4827:
  3602                           
  3603                           ; BSR set to: 0
  3604   0019C0  C06F  F08A         	movff	_efgtoa$2774,efgtoa@sign
  3605   0019C4                     l4829:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3609   0019C4  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3610   0019C8  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3611   0019CC  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3612   0019D0  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3613   0019D4  EC80  F026         	call	___fpclassifyf	;wreg free
  3614   0019D8  0401               	decf	?___fpclassifyf^0,w,c
  3615   0019DA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3616   0019DC  A4D8               	btfss	status,2,c
  3617   0019DE  EFF3  F00C         	goto	u4711
  3618   0019E2  EFF5  F00C         	goto	u4710
  3619   0019E6                     u4711:
  3620   0019E6  EF28  F00D         	goto	l4847
  3621   0019EA                     u4710:
  3622   0019EA                     
  3623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3624   0019EA  0100               	movlb	0	; () banked
  3625   0019EC  518A               	movf	efgtoa@sign& (0+255),w,b
  3626   0019EE  B4D8               	btfsc	status,2,c
  3627   0019F0  EFFC  F00C         	goto	u4721
  3628   0019F4  EFFE  F00C         	goto	u4720
  3629   0019F8                     u4721:
  3630   0019F8  EF07  F00D         	goto	l4839
  3631   0019FC                     u4720:
  3632   0019FC                     
  3633                           ; BSR set to: 0
  3634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3635   0019FC  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3636   001A00                     
  3637                           ; BSR set to: 0
  3638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3639   001A00  077A               	decf	efgtoa@w& (0+255),f,b
  3640   001A02  A0D8               	btfss	status,0,c
  3641   001A04  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3642   001A06                     
  3643                           ; BSR set to: 0
  3644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3645   001A06  0E00               	movlw	0
  3646   001A08  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3647   001A0A  0E01               	movlw	1
  3648   001A0C  6F8B               	movwf	efgtoa@n& (0+255),b
  3649   001A0E                     l4839:
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3653   001A0E  0EA0               	movlw	low _dbuf
  3654   001A10  258B               	addwf	efgtoa@n& (0+255),w,b
  3655   001A12  6E01               	movwf	strcpy@dest^0,c
  3656   001A14  0E02               	movlw	high _dbuf
  3657   001A16  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3658   001A18  6E02               	movwf	(strcpy@dest+1)^0,c
  3659   001A1A  0E49               	movlw	low STR_3
  3660   001A1C  6E03               	movwf	strcpy@src^0,c
  3661   001A1E  0E0E               	movlw	high STR_3
  3662   001A20  6E04               	movwf	(strcpy@src+1)^0,c
  3663   001A22  EC10  F02F         	call	_strcpy	;wreg free
  3664   001A26                     l4841:
  3665                           
  3666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3667   001A26  0100               	movlb	0	; () banked
  3668   001A28  0EFD               	movlw	253
  3669   001A2A  277A               	addwf	efgtoa@w& (0+255),f,b
  3670   001A2C  0EFF               	movlw	255
  3671   001A2E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3672   001A30                     
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3675   001A30  C060  F011         	movff	efgtoa@fp,pad@fp
  3676   001A34  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3677   001A38  0EA0               	movlw	low _dbuf
  3678   001A3A  6E13               	movwf	pad@buf^0,c
  3679   001A3C  0E02               	movlw	high _dbuf
  3680   001A3E  6E14               	movwf	(pad@buf+1)^0,c
  3681   001A40  C07A  F015         	movff	efgtoa@w,pad@p
  3682   001A44  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3683   001A48  ECC4  F02A         	call	_pad	;wreg free
  3684   001A4C  EF93  F011         	goto	l1444
  3685   001A50                     l4847:
  3686                           
  3687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3688   001A50  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3689   001A54  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3690   001A58  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3691   001A5C  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3692   001A60  EC80  F026         	call	___fpclassifyf	;wreg free
  3693   001A64  5001               	movf	?___fpclassifyf^0,w,c
  3694   001A66  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3695   001A68  A4D8               	btfss	status,2,c
  3696   001A6A  EF39  F00D         	goto	u4731
  3697   001A6E  EF3B  F00D         	goto	u4730
  3698   001A72                     u4731:
  3699   001A72  EF5B  F00D         	goto	l4865
  3700   001A76                     u4730:
  3701   001A76                     
  3702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3703   001A76  0100               	movlb	0	; () banked
  3704   001A78  518A               	movf	efgtoa@sign& (0+255),w,b
  3705   001A7A  B4D8               	btfsc	status,2,c
  3706   001A7C  EF42  F00D         	goto	u4741
  3707   001A80  EF44  F00D         	goto	u4740
  3708   001A84                     u4741:
  3709   001A84  EF4D  F00D         	goto	l4857
  3710   001A88                     u4740:
  3711   001A88                     
  3712                           ; BSR set to: 0
  3713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3714   001A88  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3715   001A8C                     
  3716                           ; BSR set to: 0
  3717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3718   001A8C  077A               	decf	efgtoa@w& (0+255),f,b
  3719   001A8E  A0D8               	btfss	status,0,c
  3720   001A90  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3721   001A92                     
  3722                           ; BSR set to: 0
  3723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3724   001A92  0E00               	movlw	0
  3725   001A94  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3726   001A96  0E01               	movlw	1
  3727   001A98  6F8B               	movwf	efgtoa@n& (0+255),b
  3728   001A9A                     l4857:
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3732   001A9A  0EA0               	movlw	low _dbuf
  3733   001A9C  258B               	addwf	efgtoa@n& (0+255),w,b
  3734   001A9E  6E01               	movwf	strcpy@dest^0,c
  3735   001AA0  0E02               	movlw	high _dbuf
  3736   001AA2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3737   001AA4  6E02               	movwf	(strcpy@dest+1)^0,c
  3738   001AA6  0E4D               	movlw	low STR_6
  3739   001AA8  6E03               	movwf	strcpy@src^0,c
  3740   001AAA  0E0E               	movlw	high STR_6
  3741   001AAC  6E04               	movwf	(strcpy@src+1)^0,c
  3742   001AAE  EC10  F02F         	call	_strcpy	;wreg free
  3743   001AB2  EF13  F00D         	goto	l4841
  3744   001AB6                     l4865:
  3745                           
  3746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3747   001AB6  0E00               	movlw	0
  3748   001AB8  0100               	movlb	0	; () banked
  3749   001ABA  6F91               	movwf	efgtoa@u& (0+255),b
  3750   001ABC  0E00               	movlw	0
  3751   001ABE  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3752   001AC0  0E80               	movlw	128
  3753   001AC2  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3754   001AC4  0E3F               	movlw	63
  3755   001AC6  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3756                           
  3757                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3758   001AC8  0E00               	movlw	0
  3759   001ACA  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3760   001ACC  0E00               	movlw	0
  3761   001ACE  6F78               	movwf	efgtoa@e& (0+255),b
  3762   001AD0                     
  3763                           ; BSR set to: 0
  3764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3765   001AD0  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3766   001AD4  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3767   001AD8  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3768   001ADC  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3769   001AE0  0E00               	movlw	0
  3770   001AE2  6E36               	movwf	___fleq@ff2^0,c
  3771   001AE4  0E00               	movlw	0
  3772   001AE6  6E37               	movwf	(___fleq@ff2+1)^0,c
  3773   001AE8  0E00               	movlw	0
  3774   001AEA  6E38               	movwf	(___fleq@ff2+2)^0,c
  3775   001AEC  0E00               	movlw	0
  3776   001AEE  6E39               	movwf	(___fleq@ff2+3)^0,c
  3777   001AF0  EC6F  F028         	call	___fleq	;wreg free
  3778   001AF4  B0D8               	btfsc	status,0,c
  3779   001AF6  EF7F  F00D         	goto	u4751
  3780   001AFA  EF81  F00D         	goto	u4750
  3781   001AFE                     u4751:
  3782   001AFE  EF60  F00E         	goto	l1447
  3783   001B02                     u4750:
  3784   001B02  EF8E  F00D         	goto	l4873
  3785   001B06                     l1449:
  3786                           
  3787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3788   001B06  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3789   001B0A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3790   001B0E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3791   001B12  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3792   001B16                     
  3793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3794   001B16  0100               	movlb	0	; () banked
  3795   001B18  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3796   001B1A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3797   001B1C                     l4873:
  3798                           
  3799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3800   001B1C  C091  F011         	movff	efgtoa@u,___flmul@b
  3801   001B20  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3802   001B24  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3803   001B28  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3804   001B2C  0E00               	movlw	0
  3805   001B2E  6E15               	movwf	___flmul@a^0,c
  3806   001B30  0E00               	movlw	0
  3807   001B32  6E16               	movwf	(___flmul@a+1)^0,c
  3808   001B34  0E20               	movlw	32
  3809   001B36  6E17               	movwf	(___flmul@a+2)^0,c
  3810   001B38  0E41               	movlw	65
  3811   001B3A  6E18               	movwf	(___flmul@a+3)^0,c
  3812   001B3C  ECEB  F016         	call	___flmul	;wreg free
  3813   001B40  C011  F07C         	movff	?___flmul,efgtoa@ou
  3814   001B44  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3815   001B48  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3816   001B4C  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3817   001B50  0100               	movlb	0	; () banked
  3818   001B52  517C               	movf	efgtoa@ou& (0+255),w,b
  3819   001B54  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3820   001B56  6E01               	movwf	labs@a^0,c
  3821   001B58  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3822   001B5A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3823   001B5C  6E02               	movwf	(labs@a+1)^0,c
  3824   001B5E  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3825   001B60  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3826   001B62  6E03               	movwf	(labs@a+2)^0,c
  3827   001B64  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3828   001B66  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3829   001B68  6E04               	movwf	(labs@a+3)^0,c
  3830   001B6A  EC3B  F02B         	call	_labs	;wreg free
  3831   001B6E  BE04               	btfsc	(?_labs+3)^0,7,c
  3832   001B70  EFC5  F00D         	goto	u4761
  3833   001B74  5004               	movf	(?_labs+3)^0,w,c
  3834   001B76  1003               	iorwf	(?_labs+2)^0,w,c
  3835   001B78  1002               	iorwf	(?_labs+1)^0,w,c
  3836   001B7A  E109               	bnz	u4760
  3837   001B7C  0E02               	movlw	2
  3838   001B7E  5C01               	subwf	?_labs^0,w,c
  3839   001B80  A0D8               	btfss	status,0,c
  3840   001B82  EFC5  F00D         	goto	u4761
  3841   001B86  EFC7  F00D         	goto	u4760
  3842   001B8A                     u4761:
  3843   001B8A  EF83  F00D         	goto	l1449
  3844   001B8E                     u4760:
  3845   001B8E  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3846   001B92  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3847   001B96  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3848   001B9A  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3849   001B9E  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3850   001BA2  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3851   001BA6  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3852   001BAA  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3853   001BAE  ECFE  F025         	call	___flge	;wreg free
  3854   001BB2  A0D8               	btfss	status,0,c
  3855   001BB4  EFDE  F00D         	goto	u4771
  3856   001BB8  EFE0  F00D         	goto	u4770
  3857   001BBC                     u4771:
  3858   001BBC  EF83  F00D         	goto	l1449
  3859   001BC0                     u4770:
  3860   001BC0                     
  3861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3862   001BC0  0100               	movlb	0	; () banked
  3863   001BC2  5191               	movf	efgtoa@u& (0+255),w,b
  3864   001BC4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3865   001BC6  6E01               	movwf	labs@a^0,c
  3866   001BC8  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3867   001BCA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3868   001BCC  6E02               	movwf	(labs@a+1)^0,c
  3869   001BCE  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3870   001BD0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3871   001BD2  6E03               	movwf	(labs@a+2)^0,c
  3872   001BD4  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3873   001BD6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3874   001BD8  6E04               	movwf	(labs@a+3)^0,c
  3875   001BDA  EC3B  F02B         	call	_labs	;wreg free
  3876   001BDE  BE04               	btfsc	(?_labs+3)^0,7,c
  3877   001BE0  EFFF  F00D         	goto	u4780
  3878   001BE4  5004               	movf	(?_labs+3)^0,w,c
  3879   001BE6  1003               	iorwf	(?_labs+2)^0,w,c
  3880   001BE8  1002               	iorwf	(?_labs+1)^0,w,c
  3881   001BEA  E107               	bnz	u4781
  3882   001BEC  0E02               	movlw	2
  3883   001BEE  5C01               	subwf	?_labs^0,w,c
  3884   001BF0  B0D8               	btfsc	status,0,c
  3885   001BF2  EFFD  F00D         	goto	u4781
  3886   001BF6  EFFF  F00D         	goto	u4780
  3887   001BFA                     u4781:
  3888   001BFA  EF47  F00E         	goto	l4891
  3889   001BFE                     u4780:
  3890   001BFE                     l4881:
  3891                           
  3892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3893   001BFE  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3894   001C02  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3895   001C06  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3896   001C0A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3897                           
  3898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3899   001C0E  EF60  F00E         	goto	l1447
  3900   001C12                     l4883:
  3901                           
  3902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3903   001C12  C091  F032         	movff	efgtoa@u,___fldiv@b
  3904   001C16  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3905   001C1A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3906   001C1E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3907   001C22  0E00               	movlw	0
  3908   001C24  6E36               	movwf	___fldiv@a^0,c
  3909   001C26  0E00               	movlw	0
  3910   001C28  6E37               	movwf	(___fldiv@a+1)^0,c
  3911   001C2A  0E20               	movlw	32
  3912   001C2C  6E38               	movwf	(___fldiv@a+2)^0,c
  3913   001C2E  0E41               	movlw	65
  3914   001C30  6E39               	movwf	(___fldiv@a+3)^0,c
  3915   001C32  EC00  F019         	call	___fldiv	;wreg free
  3916   001C36  C032  F091         	movff	?___fldiv,efgtoa@u
  3917   001C3A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3918   001C3E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3919   001C42  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3920   001C46                     
  3921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3922   001C46  0100               	movlb	0	; () banked
  3923   001C48  0778               	decf	efgtoa@e& (0+255),f,b
  3924   001C4A  A0D8               	btfss	status,0,c
  3925   001C4C  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3926   001C4E                     
  3927                           ; BSR set to: 0
  3928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3929   001C4E  5191               	movf	efgtoa@u& (0+255),w,b
  3930   001C50  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3931   001C52  6E01               	movwf	labs@a^0,c
  3932   001C54  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3933   001C56  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3934   001C58  6E02               	movwf	(labs@a+1)^0,c
  3935   001C5A  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3936   001C5C  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3937   001C5E  6E03               	movwf	(labs@a+2)^0,c
  3938   001C60  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3939   001C62  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3940   001C64  6E04               	movwf	(labs@a+3)^0,c
  3941   001C66  EC3B  F02B         	call	_labs	;wreg free
  3942   001C6A  BE04               	btfsc	(?_labs+3)^0,7,c
  3943   001C6C  EF45  F00E         	goto	u4790
  3944   001C70  5004               	movf	(?_labs+3)^0,w,c
  3945   001C72  1003               	iorwf	(?_labs+2)^0,w,c
  3946   001C74  1002               	iorwf	(?_labs+1)^0,w,c
  3947   001C76  E107               	bnz	u4791
  3948   001C78  0E02               	movlw	2
  3949   001C7A  5C01               	subwf	?_labs^0,w,c
  3950   001C7C  B0D8               	btfsc	status,0,c
  3951   001C7E  EF43  F00E         	goto	u4791
  3952   001C82  EF45  F00E         	goto	u4790
  3953   001C86                     u4791:
  3954   001C86  EF47  F00E         	goto	l4891
  3955   001C8A                     u4790:
  3956   001C8A  EFFF  F00D         	goto	l4881
  3957   001C8E                     l4891:
  3958                           
  3959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3960   001C8E  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3961   001C92  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3962   001C96  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3963   001C9A  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3964   001C9E  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3965   001CA2  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3966   001CA6  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3967   001CAA  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3968   001CAE  ECFE  F025         	call	___flge	;wreg free
  3969   001CB2  A0D8               	btfss	status,0,c
  3970   001CB4  EF5E  F00E         	goto	u4801
  3971   001CB8  EF60  F00E         	goto	u4800
  3972   001CBC                     u4801:
  3973   001CBC  EF09  F00E         	goto	l4883
  3974   001CC0                     u4800:
  3975   001CC0                     l1447:
  3976                           
  3977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3978   001CC0  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3979                           
  3980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3981   001CC4  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3982   001CC8                     
  3983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3984   001CC8  0100               	movlb	0	; () banked
  3985   001CCA  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  3986   001CCC  EF6A  F00E         	goto	u4811
  3987   001CD0  EF6C  F00E         	goto	u4810
  3988   001CD4                     u4811:
  3989   001CD4  EF72  F00E         	goto	l4897
  3990   001CD8                     u4810:
  3991   001CD8                     
  3992                           ; BSR set to: 0
  3993   001CD8  C0EF  F06B         	movff	_prec,efgtoa@p
  3994   001CDC  C0F0  F06C         	movff	_prec+1,efgtoa@p+1
  3995   001CE0  EF76  F00E         	goto	l4899
  3996   001CE4                     l4897:
  3997                           
  3998                           ; BSR set to: 0
  3999   001CE4  0E00               	movlw	0
  4000   001CE6  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  4001   001CE8  0E06               	movlw	6
  4002   001CEA  6F6B               	movwf	efgtoa@p& (0+255),b
  4003   001CEC                     l4899:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  4007   001CEC  C06B  F076         	movff	efgtoa@p,efgtoa@m
  4008   001CF0  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  4009   001CF4                     
  4010                           ; BSR set to: 0
  4011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  4012   001CF4  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4013   001CF6  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4014   001CF8                     
  4015                           ; BSR set to: 0
  4016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  4017   001CF8  0E66               	movlw	102
  4018   001CFA  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4019   001CFC  A4D8               	btfss	status,2,c
  4020   001CFE  EF83  F00E         	goto	u4821
  4021   001D02  EF85  F00E         	goto	u4820
  4022   001D06                     u4821:
  4023   001D06  EFA5  F00E         	goto	l4913
  4024   001D0A                     u4820:
  4025   001D0A                     
  4026                           ; BSR set to: 0
  4027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  4028   001D0A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4029   001D0C  EF8C  F00E         	goto	u4830
  4030   001D10  EF8A  F00E         	goto	u4831
  4031   001D14                     u4831:
  4032   001D14  EF98  F00E         	goto	l4909
  4033   001D18                     u4830:
  4034   001D18                     
  4035                           ; BSR set to: 0
  4036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  4037   001D18  0E00               	movlw	0
  4038   001D1A  6F91               	movwf	efgtoa@u& (0+255),b
  4039   001D1C  0E00               	movlw	0
  4040   001D1E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  4041   001D20  0E80               	movlw	128
  4042   001D22  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  4043   001D24  0E3F               	movlw	63
  4044   001D26  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  4045                           
  4046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  4047   001D28  0E00               	movlw	0
  4048   001D2A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  4049   001D2C  0E00               	movlw	0
  4050   001D2E  6F78               	movwf	efgtoa@e& (0+255),b
  4051   001D30                     l4909:
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  4055   001D30  0E67               	movlw	103
  4056   001D32  1972               	xorwf	efgtoa@mode& (0+255),w,b
  4057   001D34  B4D8               	btfsc	status,2,c
  4058   001D36  EF9F  F00E         	goto	u4841
  4059   001D3A  EFA1  F00E         	goto	u4840
  4060   001D3E                     u4841:
  4061   001D3E  EFA5  F00E         	goto	l4913
  4062   001D42                     u4840:
  4063   001D42                     
  4064                           ; BSR set to: 0
  4065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  4066   001D42  5178               	movf	efgtoa@e& (0+255),w,b
  4067   001D44  2776               	addwf	efgtoa@m& (0+255),f,b
  4068   001D46  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  4069   001D48  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4070   001D4A                     l4913:
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  4074   001D4A  0E00               	movlw	0
  4075   001D4C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4076   001D4E  0E00               	movlw	0
  4077   001D50  6F80               	movwf	efgtoa@i& (0+255),b
  4078   001D52                     
  4079                           ; BSR set to: 0
  4080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  4081   001D52  C08D  F082         	movff	efgtoa@g,efgtoa@h
  4082   001D56  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  4083   001D5A  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  4084   001D5E  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  4085   001D62                     
  4086                           ; BSR set to: 0
  4087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  4088   001D62  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  4089   001D66  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  4090   001D6A  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  4091   001D6E  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  4092                           
  4093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4094   001D72  EF36  F00F         	goto	l4927
  4095   001D76                     l4919:
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  4099   001D76  C082  F032         	movff	efgtoa@h,___fldiv@b
  4100   001D7A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4101   001D7E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4102   001D82  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4103   001D86  C091  F036         	movff	efgtoa@u,___fldiv@a
  4104   001D8A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4105   001D8E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4106   001D92  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4107   001D96  EC00  F019         	call	___fldiv	;wreg free
  4108   001D9A  C032  F04B         	movff	?___fldiv,floorf@x
  4109   001D9E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4110   001DA2  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4111   001DA6  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4112   001DAA  EC7C  F020         	call	_floorf	;wreg free
  4113   001DAE  C04B  F086         	movff	?_floorf,efgtoa@l
  4114   001DB2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4115   001DB6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4116   001DBA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4117                           
  4118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  4119   001DBE  C086  F001         	movff	efgtoa@l,___fltol@f1
  4120   001DC2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4121   001DC6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4122   001DCA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4123   001DCE  EC7B  F025         	call	___fltol	;wreg free
  4124   001DD2  C001  F074         	movff	?___fltol,efgtoa@d
  4125   001DD6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4126   001DDA                     
  4127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  4128   001DDA  C082  F02A         	movff	efgtoa@h,___flsub@b
  4129   001DDE  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4130   001DE2  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4131   001DE6  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4132   001DEA  C086  F015         	movff	efgtoa@l,___flmul@a
  4133   001DEE  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4134   001DF2  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4135   001DF6  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4136   001DFA  C091  F011         	movff	efgtoa@u,___flmul@b
  4137   001DFE  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4138   001E02  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4139   001E06  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4140   001E0A  ECEB  F016         	call	___flmul	;wreg free
  4141   001E0E  C011  F02E         	movff	?___flmul,___flsub@a
  4142   001E12  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4143   001E16  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4144   001E1A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4145   001E1E  ECED  F02E         	call	___flsub	;wreg free
  4146   001E22  C02A  F082         	movff	?___flsub,efgtoa@h
  4147   001E26  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4148   001E2A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4149   001E2E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4150   001E32                     
  4151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4152   001E32  C091  F032         	movff	efgtoa@u,___fldiv@b
  4153   001E36  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4154   001E3A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4155   001E3E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4156   001E42  0E00               	movlw	0
  4157   001E44  6E36               	movwf	___fldiv@a^0,c
  4158   001E46  0E00               	movlw	0
  4159   001E48  6E37               	movwf	(___fldiv@a+1)^0,c
  4160   001E4A  0E20               	movlw	32
  4161   001E4C  6E38               	movwf	(___fldiv@a+2)^0,c
  4162   001E4E  0E41               	movlw	65
  4163   001E50  6E39               	movwf	(___fldiv@a+3)^0,c
  4164   001E52  EC00  F019         	call	___fldiv	;wreg free
  4165   001E56  C032  F091         	movff	?___fldiv,efgtoa@u
  4166   001E5A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4167   001E5E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4168   001E62  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4169   001E66                     
  4170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4171   001E66  0100               	movlb	0	; () banked
  4172   001E68  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4173   001E6A  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4174   001E6C                     l4927:
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4178   001E6C  5176               	movf	efgtoa@m& (0+255),w,b
  4179   001E6E  5D80               	subwf	efgtoa@i& (0+255),w,b
  4180   001E70  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4181   001E72  0A80               	xorlw	128
  4182   001E74  6F67               	movwf	??_efgtoa& (0+255),b
  4183   001E76  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4184   001E78  0A80               	xorlw	128
  4185   001E7A  5967               	subwfb	??_efgtoa& (0+255),w,b
  4186   001E7C  A0D8               	btfss	status,0,c
  4187   001E7E  EF43  F00F         	goto	u4851
  4188   001E82  EF45  F00F         	goto	u4850
  4189   001E86                     u4851:
  4190   001E86  EFBB  F00E         	goto	l4919
  4191   001E8A                     u4850:
  4192   001E8A                     
  4193                           ; BSR set to: 0
  4194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4195   001E8A  C091  F011         	movff	efgtoa@u,___flmul@b
  4196   001E8E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4197   001E92  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4198   001E96  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4199   001E9A  0E00               	movlw	0
  4200   001E9C  6E15               	movwf	___flmul@a^0,c
  4201   001E9E  0E00               	movlw	0
  4202   001EA0  6E16               	movwf	(___flmul@a+1)^0,c
  4203   001EA2  0EA0               	movlw	160
  4204   001EA4  6E17               	movwf	(___flmul@a+2)^0,c
  4205   001EA6  0E40               	movlw	64
  4206   001EA8  6E18               	movwf	(___flmul@a+3)^0,c
  4207   001EAA  ECEB  F016         	call	___flmul	;wreg free
  4208   001EAE  C011  F086         	movff	?___flmul,efgtoa@l
  4209   001EB2  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  4210   001EB6  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  4211   001EBA  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  4212   001EBE                     
  4213                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4214   001EBE  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4215   001EC2  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4216   001EC6  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4217   001ECA  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4218   001ECE  C086  F02E         	movff	efgtoa@l,___flge@ff2
  4219   001ED2  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  4220   001ED6  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  4221   001EDA  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  4222   001EDE  ECFE  F025         	call	___flge	;wreg free
  4223   001EE2  B0D8               	btfsc	status,0,c
  4224   001EE4  EF76  F00F         	goto	u4861
  4225   001EE8  EF78  F00F         	goto	u4860
  4226   001EEC                     u4861:
  4227   001EEC  EF83  F00F         	goto	l4935
  4228   001EF0                     u4860:
  4229   001EF0                     
  4230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4231   001EF0  0E00               	movlw	0
  4232   001EF2  0100               	movlb	0	; () banked
  4233   001EF4  6F86               	movwf	efgtoa@l& (0+255),b
  4234   001EF6  0E00               	movlw	0
  4235   001EF8  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4236   001EFA  0E00               	movlw	0
  4237   001EFC  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4238   001EFE  0E00               	movlw	0
  4239   001F00  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4240                           
  4241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4242   001F02  EFAC  F00F         	goto	l4941
  4243   001F06                     l4935:
  4244                           
  4245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4246   001F06  C082  F032         	movff	efgtoa@h,___fleq@ff1
  4247   001F0A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  4248   001F0E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  4249   001F12  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  4250   001F16  C086  F036         	movff	efgtoa@l,___fleq@ff2
  4251   001F1A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  4252   001F1E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  4253   001F22  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  4254   001F26  EC6F  F028         	call	___fleq	;wreg free
  4255   001F2A  A0D8               	btfss	status,0,c
  4256   001F2C  EF9A  F00F         	goto	u4871
  4257   001F30  EF9C  F00F         	goto	u4870
  4258   001F34                     u4871:
  4259   001F34  EFAC  F00F         	goto	l4941
  4260   001F38                     u4870:
  4261   001F38  0100               	movlb	0	; () banked
  4262   001F3A  B174               	btfsc	efgtoa@d& (0+255),0,b
  4263   001F3C  EFA2  F00F         	goto	u4881
  4264   001F40  EFA4  F00F         	goto	u4880
  4265   001F44                     u4881:
  4266   001F44  EFAC  F00F         	goto	l4941
  4267   001F48                     u4880:
  4268   001F48                     
  4269                           ; BSR set to: 0
  4270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4271   001F48  0E00               	movlw	0
  4272   001F4A  6F86               	movwf	efgtoa@l& (0+255),b
  4273   001F4C  0E00               	movlw	0
  4274   001F4E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4275   001F50  0E00               	movlw	0
  4276   001F52  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4277   001F54  0E00               	movlw	0
  4278   001F56  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4279   001F58                     l4941:
  4280                           
  4281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4282   001F58  C08D  F001         	movff	efgtoa@g,___fladd@b
  4283   001F5C  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  4284   001F60  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  4285   001F64  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  4286   001F68  C086  F005         	movff	efgtoa@l,___fladd@a
  4287   001F6C  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4288   001F70  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4289   001F74  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4290   001F78  EC8B  F014         	call	___fladd	;wreg free
  4291   001F7C  C001  F082         	movff	?___fladd,efgtoa@h
  4292   001F80  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4293   001F84  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4294   001F88  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4295   001F8C                     
  4296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4297   001F8C  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4298   001F90  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4299   001F94  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4300   001F98  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4301   001F9C  0E00               	movlw	0
  4302   001F9E  6E15               	movwf	___flmul@a^0,c
  4303   001FA0  0E00               	movlw	0
  4304   001FA2  6E16               	movwf	(___flmul@a+1)^0,c
  4305   001FA4  0E20               	movlw	32
  4306   001FA6  6E17               	movwf	(___flmul@a+2)^0,c
  4307   001FA8  0E41               	movlw	65
  4308   001FAA  6E18               	movwf	(___flmul@a+3)^0,c
  4309   001FAC  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4310   001FB0  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4311   001FB4  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4312   001FB8  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4313   001FBC  ECEB  F016         	call	___flmul	;wreg free
  4314   001FC0  C011  F02E         	movff	?___flmul,___flge@ff2
  4315   001FC4  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  4316   001FC8  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  4317   001FCC  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  4318   001FD0  ECFE  F025         	call	___flge	;wreg free
  4319   001FD4  A0D8               	btfss	status,0,c
  4320   001FD6  EFEF  F00F         	goto	u4891
  4321   001FDA  EFF1  F00F         	goto	u4890
  4322   001FDE                     u4891:
  4323   001FDE  EF1A  F010         	goto	l4953
  4324   001FE2                     u4890:
  4325   001FE2                     
  4326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4327   001FE2  0100               	movlb	0	; () banked
  4328   001FE4  4B78               	infsnz	efgtoa@e& (0+255),f,b
  4329   001FE6  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  4330   001FE8                     
  4331                           ; BSR set to: 0
  4332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4333   001FE8  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4334   001FEC  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4335   001FF0  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4336   001FF4  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4337   001FF8  0E00               	movlw	0
  4338   001FFA  6E15               	movwf	___flmul@a^0,c
  4339   001FFC  0E00               	movlw	0
  4340   001FFE  6E16               	movwf	(___flmul@a+1)^0,c
  4341   002000  0E20               	movlw	32
  4342   002002  6E17               	movwf	(___flmul@a+2)^0,c
  4343   002004  0E41               	movlw	65
  4344   002006  6E18               	movwf	(___flmul@a+3)^0,c
  4345   002008  ECEB  F016         	call	___flmul	;wreg free
  4346   00200C  C011  F07C         	movff	?___flmul,efgtoa@ou
  4347   002010  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  4348   002014  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  4349   002018  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  4350   00201C                     
  4351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4352   00201C  0E66               	movlw	102
  4353   00201E  0100               	movlb	0	; () banked
  4354   002020  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4355   002022  A4D8               	btfss	status,2,c
  4356   002024  EF16  F010         	goto	u4901
  4357   002028  EF18  F010         	goto	u4900
  4358   00202C                     u4901:
  4359   00202C  EF1A  F010         	goto	l4953
  4360   002030                     u4900:
  4361   002030                     
  4362                           ; BSR set to: 0
  4363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4364   002030  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4365   002032  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4366   002034                     l4953:
  4367                           
  4368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4369   002034  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  4370   002038  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  4371   00203C  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  4372   002040  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  4373   002044                     
  4374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4375   002044  C078  F069         	movff	efgtoa@e,efgtoa@ne
  4376   002048  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  4377   00204C                     
  4378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4379   00204C  0E00               	movlw	0
  4380   00204E  0100               	movlb	0	; () banked
  4381   002050  6F71               	movwf	efgtoa@pp& (0+255),b
  4382   002052                     
  4383                           ; BSR set to: 0
  4384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4385   002052  0E00               	movlw	0
  4386   002054  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  4387   002056  0E00               	movlw	0
  4388   002058  6F6D               	movwf	efgtoa@t& (0+255),b
  4389   00205A                     
  4390                           ; BSR set to: 0
  4391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4392   00205A  0E00               	movlw	0
  4393   00205C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4394   00205E  0E00               	movlw	0
  4395   002060  6F80               	movwf	efgtoa@i& (0+255),b
  4396                           
  4397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4398   002062  EF18  F011         	goto	l5003
  4399   002066                     l4963:
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4403   002066  C082  F032         	movff	efgtoa@h,___fldiv@b
  4404   00206A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4405   00206E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4406   002072  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4407   002076  C091  F036         	movff	efgtoa@u,___fldiv@a
  4408   00207A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4409   00207E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4410   002082  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4411   002086  EC00  F019         	call	___fldiv	;wreg free
  4412   00208A  C032  F04B         	movff	?___fldiv,floorf@x
  4413   00208E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4414   002092  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4415   002096  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4416   00209A  EC7C  F020         	call	_floorf	;wreg free
  4417   00209E  C04B  F086         	movff	?_floorf,efgtoa@l
  4418   0020A2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4419   0020A6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4420   0020AA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4421                           
  4422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4423   0020AE  C086  F001         	movff	efgtoa@l,___fltol@f1
  4424   0020B2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4425   0020B6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4426   0020BA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4427   0020BE  EC7B  F025         	call	___fltol	;wreg free
  4428   0020C2  BE02               	btfsc	(?___fltol+1)^0,7,c
  4429   0020C4  EF6F  F010         	goto	u4910
  4430   0020C8  5002               	movf	(?___fltol+1)^0,w,c
  4431   0020CA  E107               	bnz	u4911
  4432   0020CC  0E0A               	movlw	10
  4433   0020CE  5C01               	subwf	?___fltol^0,w,c
  4434   0020D0  B0D8               	btfsc	status,0,c
  4435   0020D2  EF6D  F010         	goto	u4911
  4436   0020D6  EF6F  F010         	goto	u4910
  4437   0020DA                     u4911:
  4438   0020DA  EF7F  F010         	goto	l4967
  4439   0020DE                     u4910:
  4440   0020DE  C086  F001         	movff	efgtoa@l,___fltol@f1
  4441   0020E2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4442   0020E6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4443   0020EA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4444   0020EE  EC7B  F025         	call	___fltol	;wreg free
  4445   0020F2  C001  F074         	movff	?___fltol,efgtoa@d
  4446   0020F6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4447   0020FA  EF84  F010         	goto	l1477
  4448   0020FE                     l4967:
  4449   0020FE  0E00               	movlw	0
  4450   002100  0100               	movlb	0	; () banked
  4451   002102  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  4452   002104  0E09               	movlw	9
  4453   002106  6F74               	movwf	efgtoa@d& (0+255),b
  4454   002108                     l1477:
  4455                           
  4456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4457   002108  0100               	movlb	0	; () banked
  4458   00210A  5171               	movf	efgtoa@pp& (0+255),w,b
  4459   00210C  A4D8               	btfss	status,2,c
  4460   00210E  EF8B  F010         	goto	u4921
  4461   002112  EF8D  F010         	goto	u4920
  4462   002116                     u4921:
  4463   002116  EFB5  F010         	goto	l4987
  4464   00211A                     u4920:
  4465   00211A                     
  4466                           ; BSR set to: 0
  4467   00211A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4468   00211C  EF94  F010         	goto	u4930
  4469   002120  EF92  F010         	goto	u4931
  4470   002124                     u4931:
  4471   002124  EFB5  F010         	goto	l4987
  4472   002128                     u4930:
  4473   002128                     
  4474                           ; BSR set to: 0
  4475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4476   002128  0EA0               	movlw	low _dbuf
  4477   00212A  258B               	addwf	efgtoa@n& (0+255),w,b
  4478   00212C  6ED9               	movwf	fsr2l,c
  4479   00212E  0E02               	movlw	high _dbuf
  4480   002130  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4481   002132  6EDA               	movwf	fsr2h,c
  4482   002134  0E2E               	movlw	46
  4483   002136  6EDF               	movwf	indf2,c
  4484   002138                     
  4485                           ; BSR set to: 0
  4486   002138  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4487   00213A  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4488   00213C                     
  4489                           ; BSR set to: 0
  4490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4491   00213C  077A               	decf	efgtoa@w& (0+255),f,b
  4492   00213E  A0D8               	btfss	status,0,c
  4493   002140  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4494   002142                     
  4495                           ; BSR set to: 0
  4496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4497   002142  0E01               	movlw	1
  4498   002144  6F71               	movwf	efgtoa@pp& (0+255),b
  4499   002146  EFB5  F010         	goto	l4987
  4500   00214A                     l4979:
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4504   00214A  0EA0               	movlw	low _dbuf
  4505   00214C  258B               	addwf	efgtoa@n& (0+255),w,b
  4506   00214E  6ED9               	movwf	fsr2l,c
  4507   002150  0E02               	movlw	high _dbuf
  4508   002152  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4509   002154  6EDA               	movwf	fsr2h,c
  4510   002156  0E30               	movlw	48
  4511   002158  6EDF               	movwf	indf2,c
  4512   00215A                     
  4513                           ; BSR set to: 0
  4514   00215A  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4515   00215C  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4516   00215E                     
  4517                           ; BSR set to: 0
  4518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4519   00215E  077A               	decf	efgtoa@w& (0+255),f,b
  4520   002160  A0D8               	btfss	status,0,c
  4521   002162  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4522   002164                     
  4523                           ; BSR set to: 0
  4524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4525   002164  076D               	decf	efgtoa@t& (0+255),f,b
  4526   002166  A0D8               	btfss	status,0,c
  4527   002168  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  4528   00216A                     l4987:
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4532   00216A  516D               	movf	efgtoa@t& (0+255),w,b
  4533   00216C  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4534   00216E  A4D8               	btfss	status,2,c
  4535   002170  EFBC  F010         	goto	u4941
  4536   002174  EFBE  F010         	goto	u4940
  4537   002178                     u4941:
  4538   002178  EFA5  F010         	goto	l4979
  4539   00217C                     u4940:
  4540   00217C                     
  4541                           ; BSR set to: 0
  4542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4543   00217C  0EA0               	movlw	low _dbuf
  4544   00217E  258B               	addwf	efgtoa@n& (0+255),w,b
  4545   002180  6ED9               	movwf	fsr2l,c
  4546   002182  0E02               	movlw	high _dbuf
  4547   002184  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4548   002186  6EDA               	movwf	fsr2h,c
  4549   002188  5174               	movf	efgtoa@d& (0+255),w,b
  4550   00218A  0F30               	addlw	48
  4551   00218C  6EDF               	movwf	indf2,c
  4552   00218E                     
  4553                           ; BSR set to: 0
  4554   00218E  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4555   002190  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4556   002192                     
  4557                           ; BSR set to: 0
  4558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4559   002192  077A               	decf	efgtoa@w& (0+255),f,b
  4560   002194  A0D8               	btfss	status,0,c
  4561   002196  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4562   002198                     
  4563                           ; BSR set to: 0
  4564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4565   002198  C082  F02A         	movff	efgtoa@h,___flsub@b
  4566   00219C  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4567   0021A0  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4568   0021A4  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4569   0021A8  C086  F015         	movff	efgtoa@l,___flmul@a
  4570   0021AC  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4571   0021B0  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4572   0021B4  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4573   0021B8  C091  F011         	movff	efgtoa@u,___flmul@b
  4574   0021BC  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4575   0021C0  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4576   0021C4  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4577   0021C8  ECEB  F016         	call	___flmul	;wreg free
  4578   0021CC  C011  F02E         	movff	?___flmul,___flsub@a
  4579   0021D0  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4580   0021D4  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4581   0021D8  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4582   0021DC  ECED  F02E         	call	___flsub	;wreg free
  4583   0021E0  C02A  F082         	movff	?___flsub,efgtoa@h
  4584   0021E4  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4585   0021E8  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4586   0021EC  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4587   0021F0                     
  4588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4589   0021F0  C091  F032         	movff	efgtoa@u,___fldiv@b
  4590   0021F4  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4591   0021F8  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4592   0021FC  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4593   002200  0E00               	movlw	0
  4594   002202  6E36               	movwf	___fldiv@a^0,c
  4595   002204  0E00               	movlw	0
  4596   002206  6E37               	movwf	(___fldiv@a+1)^0,c
  4597   002208  0E20               	movlw	32
  4598   00220A  6E38               	movwf	(___fldiv@a+2)^0,c
  4599   00220C  0E41               	movlw	65
  4600   00220E  6E39               	movwf	(___fldiv@a+3)^0,c
  4601   002210  EC00  F019         	call	___fldiv	;wreg free
  4602   002214  C032  F091         	movff	?___fldiv,efgtoa@u
  4603   002218  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4604   00221C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4605   002220  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4606   002224                     
  4607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4608   002224  0100               	movlb	0	; () banked
  4609   002226  0769               	decf	efgtoa@ne& (0+255),f,b
  4610   002228  A0D8               	btfss	status,0,c
  4611   00222A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4612   00222C                     
  4613                           ; BSR set to: 0
  4614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4615   00222C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4616   00222E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4617   002230                     l5003:
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4621   002230  5176               	movf	efgtoa@m& (0+255),w,b
  4622   002232  5D80               	subwf	efgtoa@i& (0+255),w,b
  4623   002234  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4624   002236  0A80               	xorlw	128
  4625   002238  6F67               	movwf	??_efgtoa& (0+255),b
  4626   00223A  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4627   00223C  0A80               	xorlw	128
  4628   00223E  5967               	subwfb	??_efgtoa& (0+255),w,b
  4629   002240  B0D8               	btfsc	status,0,c
  4630   002242  EF25  F011         	goto	u4951
  4631   002246  EF27  F011         	goto	u4950
  4632   00224A                     u4951:
  4633   00224A  EF35  F011         	goto	l5007
  4634   00224E                     u4950:
  4635   00224E                     
  4636                           ; BSR set to: 0
  4637   00224E  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4638   002250  EF33  F011         	goto	u4961
  4639   002254  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4640   002256  E109               	bnz	u4960
  4641   002258  0E4B               	movlw	75
  4642   00225A  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4643   00225C  A0D8               	btfss	status,0,c
  4644   00225E  EF33  F011         	goto	u4961
  4645   002262  EF35  F011         	goto	u4960
  4646   002266                     u4961:
  4647   002266  EF33  F010         	goto	l4963
  4648   00226A                     u4960:
  4649   00226A                     l5007:
  4650                           
  4651                           ; BSR set to: 0
  4652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4653   00226A  0E00               	movlw	0
  4654   00226C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4655   00226E  0E4F               	movlw	79
  4656   002270  6F80               	movwf	efgtoa@i& (0+255),b
  4657   002272                     
  4658                           ; BSR set to: 0
  4659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4660   002272  0EA0               	movlw	low _dbuf
  4661   002274  2580               	addwf	efgtoa@i& (0+255),w,b
  4662   002276  6ED9               	movwf	fsr2l,c
  4663   002278  0E02               	movlw	high _dbuf
  4664   00227A  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4665   00227C  6EDA               	movwf	fsr2h,c
  4666   00227E  0E00               	movlw	0
  4667   002280  6EDF               	movwf	indf2,c
  4668   002282                     
  4669                           ; BSR set to: 0
  4670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4671   002282  0EA0               	movlw	low _dbuf
  4672   002284  6F67               	movwf	??_efgtoa& (0+255),b
  4673   002286  0E02               	movlw	high _dbuf
  4674   002288  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4675   00228A  518B               	movf	efgtoa@n& (0+255),w,b
  4676   00228C  5F67               	subwf	??_efgtoa& (0+255),f,b
  4677   00228E  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4678   002290  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4679   002292  5180               	movf	efgtoa@i& (0+255),w,b
  4680   002294  2567               	addwf	??_efgtoa& (0+255),w,b
  4681   002296  6E01               	movwf	memcpy@d1^0,c
  4682   002298  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4683   00229A  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4684   00229C  6E02               	movwf	(memcpy@d1+1)^0,c
  4685   00229E  0EA0               	movlw	low _dbuf
  4686   0022A0  6E03               	movwf	memcpy@s1^0,c
  4687   0022A2  0E02               	movlw	high _dbuf
  4688   0022A4  6E04               	movwf	(memcpy@s1+1)^0,c
  4689   0022A6  C08B  F005         	movff	efgtoa@n,memcpy@n
  4690   0022AA  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4691   0022AE  ECD7  F02D         	call	_memcpy	;wreg free
  4692   0022B2                     
  4693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4694   0022B2  0100               	movlb	0	; () banked
  4695   0022B4  518B               	movf	efgtoa@n& (0+255),w,b
  4696   0022B6  5D80               	subwf	efgtoa@i& (0+255),w,b
  4697   0022B8  6F8B               	movwf	efgtoa@n& (0+255),b
  4698   0022BA  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4699   0022BC  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4700   0022BE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4701   0022C0                     
  4702                           ; BSR set to: 0
  4703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4704   0022C0  518A               	movf	efgtoa@sign& (0+255),w,b
  4705   0022C2  A4D8               	btfss	status,2,c
  4706   0022C4  EF66  F011         	goto	u4971
  4707   0022C8  EF69  F011         	goto	u4970
  4708   0022CC                     u4971:
  4709   0022CC  0E01               	movlw	1
  4710   0022CE  EF6A  F011         	goto	u4980
  4711   0022D2                     u4970:
  4712   0022D2  0E00               	movlw	0
  4713   0022D4                     u4980:
  4714   0022D4  6F80               	movwf	efgtoa@i& (0+255),b
  4715   0022D6  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4716   0022D8                     
  4717                           ; BSR set to: 0
  4718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4719   0022D8  518A               	movf	efgtoa@sign& (0+255),w,b
  4720   0022DA  B4D8               	btfsc	status,2,c
  4721   0022DC  EF72  F011         	goto	u4991
  4722   0022E0  EF74  F011         	goto	u4990
  4723   0022E4                     u4991:
  4724   0022E4  EF7F  F011         	goto	l5021
  4725   0022E8                     u4990:
  4726   0022E8                     
  4727                           ; BSR set to: 0
  4728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4729   0022E8  078B               	decf	efgtoa@n& (0+255),f,b
  4730   0022EA  A0D8               	btfss	status,0,c
  4731   0022EC  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4732   0022EE  0EA0               	movlw	low _dbuf
  4733   0022F0  258B               	addwf	efgtoa@n& (0+255),w,b
  4734   0022F2  6ED9               	movwf	fsr2l,c
  4735   0022F4  0E02               	movlw	high _dbuf
  4736   0022F6  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4737   0022F8  6EDA               	movwf	fsr2h,c
  4738   0022FA  C08A  FFDF         	movff	efgtoa@sign,indf2
  4739   0022FE                     l5021:
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4743   0022FE  5180               	movf	efgtoa@i& (0+255),w,b
  4744   002300  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4745   002302  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4746   002304  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4747   002306                     
  4748                           ; BSR set to: 0
  4749                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4750   002306  C060  F011         	movff	efgtoa@fp,pad@fp
  4751   00230A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4752   00230E  0EA0               	movlw	low _dbuf
  4753   002310  258B               	addwf	efgtoa@n& (0+255),w,b
  4754   002312  6E13               	movwf	pad@buf^0,c
  4755   002314  0E02               	movlw	high _dbuf
  4756   002316  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4757   002318  6E14               	movwf	(pad@buf+1)^0,c
  4758   00231A  C07A  F015         	movff	efgtoa@w,pad@p
  4759   00231E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4760   002322  ECC4  F02A         	call	_pad	;wreg free
  4761   002326                     l1444:
  4762   002326  0012               	return		;funcret
  4763   002328                     __end_of_efgtoa:
  4764                           	callstack 0
  4765                           
  4766 ;; *************** function _strcpy *****************
  4767 ;; Defined at:
  4768 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4771 ;;		 -> dbuf(80), 
  4772 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4773 ;;		 -> STR_6(4), STR_3(4), 
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;  d               2    6[COMRAM] PTR unsigned char 
  4776 ;;		 -> dbuf(80), 
  4777 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4778 ;;		 -> STR_6(4), STR_3(4), 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  2    0[COMRAM] PTR unsigned char 
  4781 ;; Registers used:
  4782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4788 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4789 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4791 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4792 ;;Total ram usage:        8 bytes
  4793 ;; Hardware stack levels used: 1
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_efgtoa
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text6
  4802   005E20                     __ptext6:
  4803                           	callstack 0
  4804   005E20                     _strcpy:
  4805                           	callstack 26
  4806   005E20  C003  F005         	movff	strcpy@src,strcpy@s
  4807   005E24  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4808   005E28  C001  F007         	movff	strcpy@dest,strcpy@d
  4809   005E2C  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4810   005E30                     l4627:
  4811   005E30  C005  FFF6         	movff	strcpy@s,tblptrl
  4812   005E34  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4813   005E38  4A05               	infsnz	strcpy@s^0,f,c
  4814   005E3A  2A06               	incf	(strcpy@s+1)^0,f,c
  4815   005E3C                     	if	0	;tblptru may be non-zero
  4816   005E3C                     	endif
  4817   005E3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4818   005E3C  0E00               	movlw	low (__mediumconst shr (0+16))
  4819   005E3E  6EF8               	movwf	tblptru,c
  4820   005E40                     	endif
  4821   005E40  C007  FFD9         	movff	strcpy@d,fsr2l
  4822   005E44  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4823   005E48  4A07               	infsnz	strcpy@d^0,f,c
  4824   005E4A  2A08               	incf	(strcpy@d+1)^0,f,c
  4825   005E4C  0008               	tblrd		*
  4826   005E4E  CFF5 FFDF          	movff	tablat,indf2
  4827   005E52  50DF               	movf	indf2,w,c
  4828   005E54  A4D8               	btfss	status,2,c
  4829   005E56  EF2F  F02F         	goto	u4321
  4830   005E5A  EF31  F02F         	goto	u4320
  4831   005E5E                     u4321:
  4832   005E5E  EF18  F02F         	goto	l4627
  4833   005E62                     u4320:
  4834   005E62  0012               	return		;funcret
  4835   005E64                     __end_of_strcpy:
  4836                           	callstack 0
  4837                           
  4838 ;; *************** function _memcpy *****************
  4839 ;; Defined at:
  4840 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  d1              2    0[COMRAM] PTR void 
  4843 ;;		 -> dbuf(80), 
  4844 ;;  s1              2    2[COMRAM] PTR const void 
  4845 ;;		 -> dbuf(80), 
  4846 ;;  n               2    4[COMRAM] unsigned int 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4849 ;;		 -> dbuf(80), 
  4850 ;;  d               2    6[COMRAM] PTR unsigned char 
  4851 ;;		 -> dbuf(80), 
  4852 ;;  tmp             1   10[COMRAM] unsigned char 
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  2    0[COMRAM] PTR void 
  4855 ;; Registers used:
  4856 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4862 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4863 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4865 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4866 ;;Total ram usage:       11 bytes
  4867 ;; Hardware stack levels used: 1
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_efgtoa
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text7
  4876   005BAE                     __ptext7:
  4877                           	callstack 0
  4878   005BAE                     _memcpy:
  4879                           	callstack 26
  4880   005BAE  C003  F009         	movff	memcpy@s1,memcpy@s
  4881   005BB2  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4882   005BB6  C001  F007         	movff	memcpy@d1,memcpy@d
  4883   005BBA  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4884   005BBE  EFF1  F02D         	goto	l4671
  4885   005BC2                     l4663:
  4886   005BC2  C009  FFD9         	movff	memcpy@s,fsr2l
  4887   005BC6  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4888   005BCA  50DF               	movf	indf2,w,c
  4889   005BCC  6E0B               	movwf	memcpy@tmp^0,c
  4890   005BCE  4A09               	infsnz	memcpy@s^0,f,c
  4891   005BD0  2A0A               	incf	(memcpy@s+1)^0,f,c
  4892   005BD2  C007  FFD9         	movff	memcpy@d,fsr2l
  4893   005BD6  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4894   005BDA  C00B  FFDF         	movff	memcpy@tmp,indf2
  4895   005BDE  4A07               	infsnz	memcpy@d^0,f,c
  4896   005BE0  2A08               	incf	(memcpy@d+1)^0,f,c
  4897   005BE2                     l4671:
  4898   005BE2  0605               	decf	memcpy@n^0,f,c
  4899   005BE4  A0D8               	btfss	status,0,c
  4900   005BE6  0606               	decf	(memcpy@n+1)^0,f,c
  4901   005BE8  2805               	incf	memcpy@n^0,w,c
  4902   005BEA  E106               	bnz	u4441
  4903   005BEC  2806               	incf	(memcpy@n+1)^0,w,c
  4904   005BEE  A4D8               	btfss	status,2,c
  4905   005BF0  EFFC  F02D         	goto	u4441
  4906   005BF4  EFFE  F02D         	goto	u4440
  4907   005BF8                     u4441:
  4908   005BF8  EFE1  F02D         	goto	l4663
  4909   005BFC                     u4440:
  4910   005BFC  0012               	return		;funcret
  4911   005BFE                     __end_of_memcpy:
  4912                           	callstack 0
  4913                           
  4914 ;; *************** function _labs *****************
  4915 ;; Defined at:
  4916 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  a               4    0[COMRAM] long 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;		None
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  4    0[COMRAM] long 
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4932 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4933 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4934 ;;Total ram usage:        8 bytes
  4935 ;; Hardware stack levels used: 1
  4936 ;; This function calls:
  4937 ;;		Nothing
  4938 ;; This function is called by:
  4939 ;;		_efgtoa
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           	psect	text8
  4944   005676                     __ptext8:
  4945                           	callstack 0
  4946   005676                     _labs:
  4947                           	callstack 26
  4948   005676  BE04               	btfsc	(labs@a+3)^0,7,c
  4949   005678  EF4A  F02B         	goto	u4330
  4950   00567C  5004               	movf	(labs@a+3)^0,w,c
  4951   00567E  1003               	iorwf	(labs@a+2)^0,w,c
  4952   005680  1002               	iorwf	(labs@a+1)^0,w,c
  4953   005682  E106               	bnz	u4331
  4954   005684  0401               	decf	labs@a^0,w,c
  4955   005686  B0D8               	btfsc	status,0,c
  4956   005688  EF48  F02B         	goto	u4331
  4957   00568C  EF4A  F02B         	goto	u4330
  4958   005690                     u4331:
  4959   005690  EF65  F02B         	goto	l1549
  4960   005694                     u4330:
  4961   005694  C001  F005         	movff	labs@a,??_labs
  4962   005698  C002  F006         	movff	labs@a+1,??_labs+1
  4963   00569C  C003  F007         	movff	labs@a+2,??_labs+2
  4964   0056A0  C004  F008         	movff	labs@a+3,??_labs+3
  4965   0056A4  1E05               	comf	??_labs^0,f,c
  4966   0056A6  1E06               	comf	(??_labs+1)^0,f,c
  4967   0056A8  1E07               	comf	(??_labs+2)^0,f,c
  4968   0056AA  1E08               	comf	(??_labs+3)^0,f,c
  4969   0056AC  2A05               	incf	??_labs^0,f,c
  4970   0056AE  0E00               	movlw	0
  4971   0056B0  2206               	addwfc	(??_labs+1)^0,f,c
  4972   0056B2  2207               	addwfc	(??_labs+2)^0,f,c
  4973   0056B4  2208               	addwfc	(??_labs+3)^0,f,c
  4974   0056B6  C005  F001         	movff	??_labs,?_labs
  4975   0056BA  C006  F002         	movff	??_labs+1,?_labs+1
  4976   0056BE  C007  F003         	movff	??_labs+2,?_labs+2
  4977   0056C2  C008  F004         	movff	??_labs+3,?_labs+3
  4978   0056C6  EF6D  F02B         	goto	l1552
  4979   0056CA                     l1549:
  4980   0056CA  C001  F001         	movff	labs@a,?_labs
  4981   0056CE  C002  F002         	movff	labs@a+1,?_labs+1
  4982   0056D2  C003  F003         	movff	labs@a+2,?_labs+2
  4983   0056D6  C004  F004         	movff	labs@a+3,?_labs+3
  4984   0056DA                     l1552:
  4985   0056DA  0012               	return		;funcret
  4986   0056DC                     __end_of_labs:
  4987                           	callstack 0
  4988                           
  4989 ;; *************** function _floorf *****************
  4990 ;; Defined at:
  4991 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  x               4   74[COMRAM] float 
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;  u               4   90[COMRAM] struct .
  4996 ;;  m               4   84[COMRAM] unsigned long 
  4997 ;;  e               2   88[COMRAM] int 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  4   74[COMRAM] float 
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5007 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5008 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5009 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5010 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5011 ;;Total ram usage:       20 bytes
  5012 ;; Hardware stack levels used: 1
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_efgtoa
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text9
  5021   0040F8                     __ptext9:
  5022                           	callstack 0
  5023   0040F8                     _floorf:
  5024                           	callstack 26
  5025   0040F8  C0E5  F05B         	movff	floorf@F526,floorf@u
  5026   0040FC  C0E6  F05C         	movff	floorf@F526+1,floorf@u+1
  5027   004100  C0E7  F05D         	movff	floorf@F526+2,floorf@u+2
  5028   004104  C0E8  F05E         	movff	floorf@F526+3,floorf@u+3
  5029   004108  C04B  F05B         	movff	floorf@x,floorf@u
  5030   00410C  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  5031   004110  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  5032   004114  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  5033   004118  0E81               	movlw	129
  5034   00411A  6E4F               	movwf	??_floorf^0,c
  5035   00411C  0EFF               	movlw	255
  5036   00411E  6E50               	movwf	(??_floorf+1)^0,c
  5037   004120  C05B  F051         	movff	floorf@u,??_floorf+2
  5038   004124  C05C  F052         	movff	floorf@u+1,??_floorf+3
  5039   004128  C05D  F053         	movff	floorf@u+2,??_floorf+4
  5040   00412C  C05E  F054         	movff	floorf@u+3,??_floorf+5
  5041   004130  0E18               	movlw	24
  5042   004132  EFA0  F020         	goto	u4340
  5043   004136                     u4345:
  5044   004136  90D8               	bcf	status,0,c
  5045   004138  3254               	rrcf	(??_floorf+5)^0,f,c
  5046   00413A  3253               	rrcf	(??_floorf+4)^0,f,c
  5047   00413C  3252               	rrcf	(??_floorf+3)^0,f,c
  5048   00413E  3251               	rrcf	(??_floorf+2)^0,f,c
  5049   004140                     u4340:
  5050   004140  2EE8               	decfsz	wreg,f,c
  5051   004142  EF9B  F020         	goto	u4345
  5052   004146  5051               	movf	(??_floorf+2)^0,w,c
  5053   004148  244F               	addwf	??_floorf^0,w,c
  5054   00414A  6E59               	movwf	floorf@e^0,c
  5055   00414C  0E00               	movlw	0
  5056   00414E  2050               	addwfc	(??_floorf+1)^0,w,c
  5057   004150  6E5A               	movwf	(floorf@e+1)^0,c
  5058   004152  BE5A               	btfsc	(floorf@e+1)^0,7,c
  5059   004154  EFB5  F020         	goto	u4351
  5060   004158  505A               	movf	(floorf@e+1)^0,w,c
  5061   00415A  E109               	bnz	u4350
  5062   00415C  0E17               	movlw	23
  5063   00415E  5C59               	subwf	floorf@e^0,w,c
  5064   004160  A0D8               	btfss	status,0,c
  5065   004162  EFB5  F020         	goto	u4351
  5066   004166  EFB7  F020         	goto	u4350
  5067   00416A                     u4351:
  5068   00416A  EFC1  F020         	goto	l4639
  5069   00416E                     u4350:
  5070   00416E                     l4637:
  5071   00416E  C04B  F04B         	movff	floorf@x,?_floorf
  5072   004172  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  5073   004176  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  5074   00417A  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  5075   00417E  EF84  F021         	goto	l1538
  5076   004182                     l4639:
  5077   004182  BE5A               	btfsc	(floorf@e+1)^0,7,c
  5078   004184  EFC6  F020         	goto	u4361
  5079   004188  EFC8  F020         	goto	u4360
  5080   00418C                     u4361:
  5081   00418C  EF38  F021         	goto	l4649
  5082   004190                     u4360:
  5083   004190  C059  F04F         	movff	floorf@e,??_floorf
  5084   004194  0EFF               	movlw	255
  5085   004196  6E50               	movwf	(??_floorf+1)^0,c
  5086   004198  0EFF               	movlw	255
  5087   00419A  6E51               	movwf	(??_floorf+2)^0,c
  5088   00419C  0E7F               	movlw	127
  5089   00419E  6E52               	movwf	(??_floorf+3)^0,c
  5090   0041A0  0E00               	movlw	0
  5091   0041A2  6E53               	movwf	(??_floorf+4)^0,c
  5092   0041A4                     u4375:
  5093   0041A4  664F               	tstfsz	??_floorf^0,c
  5094   0041A6  EFD7  F020         	goto	u4376
  5095   0041AA  EFDF  F020         	goto	u4377
  5096   0041AE                     u4376:
  5097   0041AE  3453               	rlcf	(??_floorf+4)^0,w,c
  5098   0041B0  3253               	rrcf	(??_floorf+4)^0,f,c
  5099   0041B2  3252               	rrcf	(??_floorf+3)^0,f,c
  5100   0041B4  3251               	rrcf	(??_floorf+2)^0,f,c
  5101   0041B6  3250               	rrcf	(??_floorf+1)^0,f,c
  5102   0041B8  2E4F               	decfsz	??_floorf^0,f,c
  5103   0041BA  EFD2  F020         	goto	u4375
  5104   0041BE                     u4377:
  5105   0041BE  C050  F055         	movff	??_floorf+1,floorf@m
  5106   0041C2  C051  F056         	movff	??_floorf+2,floorf@m+1
  5107   0041C6  C052  F057         	movff	??_floorf+3,floorf@m+2
  5108   0041CA  C053  F058         	movff	??_floorf+4,floorf@m+3
  5109   0041CE  5055               	movf	floorf@m^0,w,c
  5110   0041D0  145B               	andwf	floorf@u^0,w,c
  5111   0041D2  6E4F               	movwf	??_floorf^0,c
  5112   0041D4  5056               	movf	(floorf@m+1)^0,w,c
  5113   0041D6  145C               	andwf	(floorf@u+1)^0,w,c
  5114   0041D8  6E50               	movwf	(??_floorf+1)^0,c
  5115   0041DA  5057               	movf	(floorf@m+2)^0,w,c
  5116   0041DC  145D               	andwf	(floorf@u+2)^0,w,c
  5117   0041DE  6E51               	movwf	(??_floorf+2)^0,c
  5118   0041E0  5058               	movf	(floorf@m+3)^0,w,c
  5119   0041E2  145E               	andwf	(floorf@u+3)^0,w,c
  5120   0041E4  6E52               	movwf	(??_floorf+3)^0,c
  5121   0041E6  504F               	movf	??_floorf^0,w,c
  5122   0041E8  1050               	iorwf	(??_floorf+1)^0,w,c
  5123   0041EA  1051               	iorwf	(??_floorf+2)^0,w,c
  5124   0041EC  1052               	iorwf	(??_floorf+3)^0,w,c
  5125   0041EE  A4D8               	btfss	status,2,c
  5126   0041F0  EFFC  F020         	goto	u4381
  5127   0041F4  EFFE  F020         	goto	u4380
  5128   0041F8                     u4381:
  5129   0041F8  EF00  F021         	goto	l4645
  5130   0041FC                     u4380:
  5131   0041FC  EFB7  F020         	goto	l4637
  5132   004200                     l4645:
  5133   004200  C05B  F04F         	movff	floorf@u,??_floorf
  5134   004204  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5135   004208  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5136   00420C  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5137   004210  0E20               	movlw	32
  5138   004212  EF10  F021         	goto	u4390
  5139   004216                     u4395:
  5140   004216  90D8               	bcf	status,0,c
  5141   004218  3252               	rrcf	(??_floorf+3)^0,f,c
  5142   00421A  3251               	rrcf	(??_floorf+2)^0,f,c
  5143   00421C  3250               	rrcf	(??_floorf+1)^0,f,c
  5144   00421E  324F               	rrcf	??_floorf^0,f,c
  5145   004220                     u4390:
  5146   004220  2EE8               	decfsz	wreg,f,c
  5147   004222  EF0B  F021         	goto	u4395
  5148   004226  504F               	movf	??_floorf^0,w,c
  5149   004228  1050               	iorwf	(??_floorf+1)^0,w,c
  5150   00422A  1051               	iorwf	(??_floorf+2)^0,w,c
  5151   00422C  1052               	iorwf	(??_floorf+3)^0,w,c
  5152   00422E  B4D8               	btfsc	status,2,c
  5153   004230  EF1C  F021         	goto	u4401
  5154   004234  EF1E  F021         	goto	u4400
  5155   004238                     u4401:
  5156   004238  EF26  F021         	goto	l1541
  5157   00423C                     u4400:
  5158   00423C  5055               	movf	floorf@m^0,w,c
  5159   00423E  265B               	addwf	floorf@u^0,f,c
  5160   004240  5056               	movf	(floorf@m+1)^0,w,c
  5161   004242  225C               	addwfc	(floorf@u+1)^0,f,c
  5162   004244  5057               	movf	(floorf@m+2)^0,w,c
  5163   004246  225D               	addwfc	(floorf@u+2)^0,f,c
  5164   004248  5058               	movf	(floorf@m+3)^0,w,c
  5165   00424A  225E               	addwfc	(floorf@u+3)^0,f,c
  5166   00424C                     l1541:
  5167   00424C  1C55               	comf	floorf@m^0,w,c
  5168   00424E  6E4F               	movwf	??_floorf^0,c
  5169   004250  1C56               	comf	(floorf@m+1)^0,w,c
  5170   004252  6E50               	movwf	(??_floorf+1)^0,c
  5171   004254  1C57               	comf	(floorf@m+2)^0,w,c
  5172   004256  6E51               	movwf	(??_floorf+2)^0,c
  5173   004258  1C58               	comf	(floorf@m+3)^0,w,c
  5174   00425A  6E52               	movwf	(??_floorf+3)^0,c
  5175   00425C  504F               	movf	??_floorf^0,w,c
  5176   00425E  165B               	andwf	floorf@u^0,f,c
  5177   004260  5050               	movf	(??_floorf+1)^0,w,c
  5178   004262  165C               	andwf	(floorf@u+1)^0,f,c
  5179   004264  5051               	movf	(??_floorf+2)^0,w,c
  5180   004266  165D               	andwf	(floorf@u+2)^0,f,c
  5181   004268  5052               	movf	(??_floorf+3)^0,w,c
  5182   00426A  165E               	andwf	(floorf@u+3)^0,f,c
  5183   00426C  EF7C  F021         	goto	l4657
  5184   004270                     l4649:
  5185   004270  C05B  F04F         	movff	floorf@u,??_floorf
  5186   004274  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5187   004278  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5188   00427C  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5189   004280  0E20               	movlw	32
  5190   004282  EF48  F021         	goto	u4410
  5191   004286                     u4415:
  5192   004286  90D8               	bcf	status,0,c
  5193   004288  3252               	rrcf	(??_floorf+3)^0,f,c
  5194   00428A  3251               	rrcf	(??_floorf+2)^0,f,c
  5195   00428C  3250               	rrcf	(??_floorf+1)^0,f,c
  5196   00428E  324F               	rrcf	??_floorf^0,f,c
  5197   004290                     u4410:
  5198   004290  2EE8               	decfsz	wreg,f,c
  5199   004292  EF43  F021         	goto	u4415
  5200   004296  504F               	movf	??_floorf^0,w,c
  5201   004298  1050               	iorwf	(??_floorf+1)^0,w,c
  5202   00429A  1051               	iorwf	(??_floorf+2)^0,w,c
  5203   00429C  1052               	iorwf	(??_floorf+3)^0,w,c
  5204   00429E  A4D8               	btfss	status,2,c
  5205   0042A0  EF54  F021         	goto	u4421
  5206   0042A4  EF56  F021         	goto	u4420
  5207   0042A8                     u4421:
  5208   0042A8  EF60  F021         	goto	l4653
  5209   0042AC                     u4420:
  5210   0042AC  0E00               	movlw	0
  5211   0042AE  6E5B               	movwf	floorf@u^0,c
  5212   0042B0  0E00               	movlw	0
  5213   0042B2  6E5C               	movwf	(floorf@u+1)^0,c
  5214   0042B4  0E00               	movlw	0
  5215   0042B6  6E5D               	movwf	(floorf@u+2)^0,c
  5216   0042B8  0E00               	movlw	0
  5217   0042BA  6E5E               	movwf	(floorf@u+3)^0,c
  5218   0042BC  EF7C  F021         	goto	l4657
  5219   0042C0                     l4653:
  5220   0042C0  90D8               	bcf	status,0,c
  5221   0042C2  345B               	rlcf	floorf@u^0,w,c
  5222   0042C4  6E4F               	movwf	??_floorf^0,c
  5223   0042C6  345C               	rlcf	(floorf@u+1)^0,w,c
  5224   0042C8  6E50               	movwf	(??_floorf+1)^0,c
  5225   0042CA  345D               	rlcf	(floorf@u+2)^0,w,c
  5226   0042CC  6E51               	movwf	(??_floorf+2)^0,c
  5227   0042CE  345E               	rlcf	(floorf@u+3)^0,w,c
  5228   0042D0  6E52               	movwf	(??_floorf+3)^0,c
  5229   0042D2  504F               	movf	??_floorf^0,w,c
  5230   0042D4  1050               	iorwf	(??_floorf+1)^0,w,c
  5231   0042D6  1051               	iorwf	(??_floorf+2)^0,w,c
  5232   0042D8  1052               	iorwf	(??_floorf+3)^0,w,c
  5233   0042DA  B4D8               	btfsc	status,2,c
  5234   0042DC  EF72  F021         	goto	u4431
  5235   0042E0  EF74  F021         	goto	u4430
  5236   0042E4                     u4431:
  5237   0042E4  EF7C  F021         	goto	l4657
  5238   0042E8                     u4430:
  5239   0042E8  0E00               	movlw	0
  5240   0042EA  6E5B               	movwf	floorf@u^0,c
  5241   0042EC  0E00               	movlw	0
  5242   0042EE  6E5C               	movwf	(floorf@u+1)^0,c
  5243   0042F0  0E80               	movlw	128
  5244   0042F2  6E5D               	movwf	(floorf@u+2)^0,c
  5245   0042F4  0EBF               	movlw	191
  5246   0042F6  6E5E               	movwf	(floorf@u+3)^0,c
  5247   0042F8                     l4657:
  5248   0042F8  C05B  F04B         	movff	floorf@u,?_floorf
  5249   0042FC  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  5250   004300  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  5251   004304  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  5252   004308                     l1538:
  5253   004308  0012               	return		;funcret
  5254   00430A                     __end_of_floorf:
  5255                           	callstack 0
  5256                           
  5257 ;; *************** function ___fpclassifyf *****************
  5258 ;; Defined at:
  5259 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;  x               4    0[COMRAM] float 
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;  u               4   10[COMRAM] struct .
  5264 ;;  e               2    8[COMRAM] int 
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  2    0[COMRAM] int 
  5267 ;; Registers used:
  5268 ;;		wreg, status,2, status,0
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5274 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5275 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5276 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5277 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5278 ;;Total ram usage:       14 bytes
  5279 ;; Hardware stack levels used: 1
  5280 ;; This function calls:
  5281 ;;		Nothing
  5282 ;; This function is called by:
  5283 ;;		_efgtoa
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           	psect	text10
  5288   004D00                     __ptext10:
  5289                           	callstack 0
  5290   004D00                     ___fpclassifyf:
  5291                           	callstack 26
  5292   004D00  C0E9  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5293   004D04  C0EA  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5294   004D08  C0EB  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5295   004D0C  C0EC  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5296   004D10  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5297   004D14  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5298   004D18  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5299   004D1C  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5300   004D20  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5301   004D24  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5302   004D28  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5303   004D2C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5304   004D30  0E18               	movlw	24
  5305   004D32  EFA0  F026         	goto	u4250
  5306   004D36                     u4255:
  5307   004D36  90D8               	bcf	status,0,c
  5308   004D38  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5309   004D3A  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5310   004D3C  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5311   004D3E  3205               	rrcf	??___fpclassifyf^0,f,c
  5312   004D40                     u4250:
  5313   004D40  2EE8               	decfsz	wreg,f,c
  5314   004D42  EF9B  F026         	goto	u4255
  5315   004D46  5005               	movf	??___fpclassifyf^0,w,c
  5316   004D48  6E09               	movwf	___fpclassifyf@e^0,c
  5317   004D4A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5318   004D4C  5009               	movf	___fpclassifyf@e^0,w,c
  5319   004D4E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5320   004D50  A4D8               	btfss	status,2,c
  5321   004D52  EFAD  F026         	goto	u4261
  5322   004D56  EFAF  F026         	goto	u4260
  5323   004D5A                     u4261:
  5324   004D5A  EFCF  F026         	goto	l4615
  5325   004D5E                     u4260:
  5326   004D5E  90D8               	bcf	status,0,c
  5327   004D60  340B               	rlcf	___fpclassifyf@u^0,w,c
  5328   004D62  6E05               	movwf	??___fpclassifyf^0,c
  5329   004D64  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5330   004D66  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5331   004D68  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5332   004D6A  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5333   004D6C  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5334   004D6E  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5335   004D70  5005               	movf	??___fpclassifyf^0,w,c
  5336   004D72  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5337   004D74  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5338   004D76  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5339   004D78  A4D8               	btfss	status,2,c
  5340   004D7A  EFC1  F026         	goto	u4271
  5341   004D7E  EFC3  F026         	goto	u4270
  5342   004D82                     u4271:
  5343   004D82  EFC9  F026         	goto	l4611
  5344   004D86                     u4270:
  5345   004D86  0E00               	movlw	0
  5346   004D88  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5347   004D8A  0E02               	movlw	2
  5348   004D8C  6E01               	movwf	?___fpclassifyf^0,c
  5349   004D8E  EFFE  F026         	goto	l1524
  5350   004D92                     l4611:
  5351   004D92  0E00               	movlw	0
  5352   004D94  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5353   004D96  0E03               	movlw	3
  5354   004D98  6E01               	movwf	?___fpclassifyf^0,c
  5355   004D9A  EFFE  F026         	goto	l1524
  5356   004D9E                     l4615:
  5357   004D9E  2809               	incf	___fpclassifyf@e^0,w,c
  5358   004DA0  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5359   004DA2  A4D8               	btfss	status,2,c
  5360   004DA4  EFD6  F026         	goto	u4281
  5361   004DA8  EFD8  F026         	goto	u4280
  5362   004DAC                     u4281:
  5363   004DAC  EFFA  F026         	goto	l4621
  5364   004DB0                     u4280:
  5365   004DB0  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5366   004DB4  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5367   004DB8  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5368   004DBC  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5369   004DC0  0E09               	movlw	9
  5370   004DC2                     u4295:
  5371   004DC2  90D8               	bcf	status,0,c
  5372   004DC4  3605               	rlcf	??___fpclassifyf^0,f,c
  5373   004DC6  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5374   004DC8  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5375   004DCA  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5376   004DCC  2EE8               	decfsz	wreg,f,c
  5377   004DCE  EFE1  F026         	goto	u4295
  5378   004DD2  5005               	movf	??___fpclassifyf^0,w,c
  5379   004DD4  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5380   004DD6  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5381   004DD8  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5382   004DDA  B4D8               	btfsc	status,2,c
  5383   004DDC  EFF2  F026         	goto	u4301
  5384   004DE0  EFF5  F026         	goto	u4300
  5385   004DE4                     u4301:
  5386   004DE4  0E01               	movlw	1
  5387   004DE6  EFF6  F026         	goto	u4310
  5388   004DEA                     u4300:
  5389   004DEA  0E00               	movlw	0
  5390   004DEC                     u4310:
  5391   004DEC  6E01               	movwf	?___fpclassifyf^0,c
  5392   004DEE  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5393   004DF0  EFFE  F026         	goto	l1524
  5394   004DF4                     l4621:
  5395   004DF4  0E00               	movlw	0
  5396   004DF6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5397   004DF8  0E04               	movlw	4
  5398   004DFA  6E01               	movwf	?___fpclassifyf^0,c
  5399   004DFC                     l1524:
  5400   004DFC  0012               	return		;funcret
  5401   004DFE                     __end_of___fpclassifyf:
  5402                           	callstack 0
  5403                           
  5404 ;; *************** function ___fltol *****************
  5405 ;; Defined at:
  5406 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  f1              4    0[COMRAM] int 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;  exp1            1    9[COMRAM] unsigned char 
  5411 ;;  sign1           1    8[COMRAM] unsigned char 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  4    0[COMRAM] long 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5423 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5424 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5425 ;;Total ram usage:       10 bytes
  5426 ;; Hardware stack levels used: 1
  5427 ;; This function calls:
  5428 ;;		Nothing
  5429 ;; This function is called by:
  5430 ;;		_reverseOneBlock
  5431 ;;		_ForwardOneBlock
  5432 ;;		_Forwardhalfblock
  5433 ;;		_efgtoa
  5434 ;;		_Backhalfblock
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text11
  5439   004AF6                     __ptext11:
  5440                           	callstack 0
  5441   004AF6                     ___fltol:
  5442                           	callstack 26
  5443   004AF6  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5444   004AF8  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5445   004AFA  6E0A               	movwf	___fltol@exp1^0,c
  5446   004AFC  500A               	movf	___fltol@exp1^0,w,c
  5447   004AFE  A4D8               	btfss	status,2,c
  5448   004B00  EF84  F025         	goto	u4151
  5449   004B04  EF86  F025         	goto	u4150
  5450   004B08                     u4151:
  5451   004B08  EF90  F025         	goto	l4547
  5452   004B0C                     u4150:
  5453   004B0C                     l4543:
  5454   004B0C  0E00               	movlw	0
  5455   004B0E  6E01               	movwf	?___fltol^0,c
  5456   004B10  0E00               	movlw	0
  5457   004B12  6E02               	movwf	(?___fltol+1)^0,c
  5458   004B14  0E00               	movlw	0
  5459   004B16  6E03               	movwf	(?___fltol+2)^0,c
  5460   004B18  0E00               	movlw	0
  5461   004B1A  6E04               	movwf	(?___fltol+3)^0,c
  5462   004B1C  EFFD  F025         	goto	l997
  5463   004B20                     l4547:
  5464   004B20  C001  F005         	movff	___fltol@f1,??___fltol
  5465   004B24  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5466   004B28  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5467   004B2C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5468   004B30  0E20               	movlw	32
  5469   004B32  EFA0  F025         	goto	u4160
  5470   004B36                     u4165:
  5471   004B36  90D8               	bcf	status,0,c
  5472   004B38  3208               	rrcf	(??___fltol+3)^0,f,c
  5473   004B3A  3207               	rrcf	(??___fltol+2)^0,f,c
  5474   004B3C  3206               	rrcf	(??___fltol+1)^0,f,c
  5475   004B3E  3205               	rrcf	??___fltol^0,f,c
  5476   004B40                     u4160:
  5477   004B40  2EE8               	decfsz	wreg,f,c
  5478   004B42  EF9B  F025         	goto	u4165
  5479   004B46  5005               	movf	??___fltol^0,w,c
  5480   004B48  6E09               	movwf	___fltol@sign1^0,c
  5481   004B4A  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5482   004B4C  0EFF               	movlw	255
  5483   004B4E  1601               	andwf	___fltol@f1^0,f,c
  5484   004B50  0EFF               	movlw	255
  5485   004B52  1602               	andwf	(___fltol@f1+1)^0,f,c
  5486   004B54  0EFF               	movlw	255
  5487   004B56  1603               	andwf	(___fltol@f1+2)^0,f,c
  5488   004B58  0E00               	movlw	0
  5489   004B5A  1604               	andwf	(___fltol@f1+3)^0,f,c
  5490   004B5C  0E96               	movlw	150
  5491   004B5E  5E0A               	subwf	___fltol@exp1^0,f,c
  5492   004B60  BE0A               	btfsc	___fltol@exp1^0,7,c
  5493   004B62  EFB7  F025         	goto	u4170
  5494   004B66  EFB5  F025         	goto	u4171
  5495   004B6A                     u4171:
  5496   004B6A  EFCD  F025         	goto	l4567
  5497   004B6E                     u4170:
  5498   004B6E  500A               	movf	___fltol@exp1^0,w,c
  5499   004B70  0A80               	xorlw	128
  5500   004B72  0F97               	addlw	151
  5501   004B74  B0D8               	btfsc	status,0,c
  5502   004B76  EFBF  F025         	goto	u4181
  5503   004B7A  EFC1  F025         	goto	u4180
  5504   004B7E                     u4181:
  5505   004B7E  EFC3  F025         	goto	l4563
  5506   004B82                     u4180:
  5507   004B82  EF86  F025         	goto	l4543
  5508   004B86                     l4563:
  5509   004B86  90D8               	bcf	status,0,c
  5510   004B88  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5511   004B8A  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5512   004B8C  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5513   004B8E  3201               	rrcf	___fltol@f1^0,f,c
  5514   004B90  3E0A               	incfsz	___fltol@exp1^0,f,c
  5515   004B92  EFC3  F025         	goto	l4563
  5516   004B96  EFE5  F025         	goto	l4577
  5517   004B9A                     l4567:
  5518   004B9A  0E1F               	movlw	31
  5519   004B9C  640A               	cpfsgt	___fltol@exp1^0,c
  5520   004B9E  EFD3  F025         	goto	u4191
  5521   004BA2  EFD5  F025         	goto	u4190
  5522   004BA6                     u4191:
  5523   004BA6  EFDD  F025         	goto	l4575
  5524   004BAA                     u4190:
  5525   004BAA  EF86  F025         	goto	l4543
  5526   004BAE                     l4573:
  5527   004BAE  90D8               	bcf	status,0,c
  5528   004BB0  3601               	rlcf	___fltol@f1^0,f,c
  5529   004BB2  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5530   004BB4  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5531   004BB6  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5532   004BB8  060A               	decf	___fltol@exp1^0,f,c
  5533   004BBA                     l4575:
  5534   004BBA  500A               	movf	___fltol@exp1^0,w,c
  5535   004BBC  A4D8               	btfss	status,2,c
  5536   004BBE  EFE3  F025         	goto	u4201
  5537   004BC2  EFE5  F025         	goto	u4200
  5538   004BC6                     u4201:
  5539   004BC6  EFD7  F025         	goto	l4573
  5540   004BCA                     u4200:
  5541   004BCA                     l4577:
  5542   004BCA  5009               	movf	___fltol@sign1^0,w,c
  5543   004BCC  B4D8               	btfsc	status,2,c
  5544   004BCE  EFEB  F025         	goto	u4211
  5545   004BD2  EFED  F025         	goto	u4210
  5546   004BD6                     u4211:
  5547   004BD6  EFF5  F025         	goto	l4581
  5548   004BDA                     u4210:
  5549   004BDA  1E04               	comf	(___fltol@f1+3)^0,f,c
  5550   004BDC  1E03               	comf	(___fltol@f1+2)^0,f,c
  5551   004BDE  1E02               	comf	(___fltol@f1+1)^0,f,c
  5552   004BE0  6C01               	negf	___fltol@f1^0,c
  5553   004BE2  0E00               	movlw	0
  5554   004BE4  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5555   004BE6  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5556   004BE8  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5557   004BEA                     l4581:
  5558   004BEA  C001  F001         	movff	___fltol@f1,?___fltol
  5559   004BEE  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5560   004BF2  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5561   004BF6  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5562   004BFA                     l997:
  5563   004BFA  0012               	return		;funcret
  5564   004BFC                     __end_of___fltol:
  5565                           	callstack 0
  5566                           
  5567 ;; *************** function ___flneg *****************
  5568 ;; Defined at:
  5569 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  f1              4    0[COMRAM] long 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;		None
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  4    0[COMRAM] long 
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5583 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5586 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5587 ;;Total ram usage:        4 bytes
  5588 ;; Hardware stack levels used: 1
  5589 ;; This function calls:
  5590 ;;		Nothing
  5591 ;; This function is called by:
  5592 ;;		_efgtoa
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text12
  5597   005FA6                     __ptext12:
  5598                           	callstack 0
  5599   005FA6                     ___flneg:
  5600                           	callstack 26
  5601   005FA6  5001               	movf	___flneg@f1^0,w,c
  5602   005FA8  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5603   005FAA  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5604   005FAC  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5605   005FAE  B4D8               	btfsc	status,2,c
  5606   005FB0  EFDC  F02F         	goto	u4141
  5607   005FB4  EFDE  F02F         	goto	u4140
  5608   005FB8                     u4141:
  5609   005FB8  EFE6  F02F         	goto	l4537
  5610   005FBC                     u4140:
  5611   005FBC  0E00               	movlw	0
  5612   005FBE  1A01               	xorwf	___flneg@f1^0,f,c
  5613   005FC0  0E00               	movlw	0
  5614   005FC2  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5615   005FC4  0E00               	movlw	0
  5616   005FC6  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5617   005FC8  0E80               	movlw	128
  5618   005FCA  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5619   005FCC                     l4537:
  5620   005FCC  C001  F001         	movff	___flneg@f1,?___flneg
  5621   005FD0  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5622   005FD4  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5623   005FD8  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5624   005FDC  0012               	return		;funcret
  5625   005FDE                     __end_of___flneg:
  5626                           	callstack 0
  5627                           
  5628 ;; *************** function _dtoa *****************
  5629 ;; Defined at:
  5630 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5633 ;;		 -> sprintf@f(11), 
  5634 ;;  d               8   29[COMRAM] long long 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  n               8   51[COMRAM] long long 
  5637 ;;  i               2   59[COMRAM] int 
  5638 ;;  w               2   49[COMRAM] int 
  5639 ;;  p               2   47[COMRAM] int 
  5640 ;;  s               1   61[COMRAM] unsigned char 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  1    wreg      void 
  5643 ;; Registers used:
  5644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5650 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5651 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5652 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5653 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5654 ;;Total ram usage:       35 bytes
  5655 ;; Hardware stack levels used: 1
  5656 ;; Hardware stack levels required when called: 4
  5657 ;; This function calls:
  5658 ;;		___aodiv
  5659 ;;		___aomod
  5660 ;;		_abs
  5661 ;;		_pad
  5662 ;; This function is called by:
  5663 ;;		_vfpfcnvrt
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           	psect	text13
  5668   003E7A                     __ptext13:
  5669                           	callstack 0
  5670   003E7A                     _dtoa:
  5671                           	callstack 23
  5672   003E7A                     
  5673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5674   003E7A  C01E  F034         	movff	dtoa@d,dtoa@n
  5675   003E7E  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5676   003E82  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5677   003E86  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5678   003E8A  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5679   003E8E  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5680   003E92  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5681   003E96  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5682   003E9A                     
  5683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5684   003E9A  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5685   003E9C  EF52  F01F         	goto	u4581
  5686   003EA0  EF55  F01F         	goto	u4580
  5687   003EA4                     u4581:
  5688   003EA4  0E01               	movlw	1
  5689   003EA6  EF56  F01F         	goto	u4590
  5690   003EAA                     u4580:
  5691   003EAA  0E00               	movlw	0
  5692   003EAC                     u4590:
  5693   003EAC  6E3E               	movwf	dtoa@s^0,c
  5694   003EAE                     
  5695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5696   003EAE  503E               	movf	dtoa@s^0,w,c
  5697   003EB0  B4D8               	btfsc	status,2,c
  5698   003EB2  EF5D  F01F         	goto	u4601
  5699   003EB6  EF5F  F01F         	goto	u4600
  5700   003EBA                     u4601:
  5701   003EBA  EF6F  F01F         	goto	l4761
  5702   003EBE                     u4600:
  5703   003EBE                     
  5704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5705   003EBE  1E3B               	comf	(dtoa@n+7)^0,f,c
  5706   003EC0  1E3A               	comf	(dtoa@n+6)^0,f,c
  5707   003EC2  1E39               	comf	(dtoa@n+5)^0,f,c
  5708   003EC4  1E38               	comf	(dtoa@n+4)^0,f,c
  5709   003EC6  1E37               	comf	(dtoa@n+3)^0,f,c
  5710   003EC8  1E36               	comf	(dtoa@n+2)^0,f,c
  5711   003ECA  1E35               	comf	(dtoa@n+1)^0,f,c
  5712   003ECC  6C34               	negf	dtoa@n^0,c
  5713   003ECE  0E00               	movlw	0
  5714   003ED0  2235               	addwfc	(dtoa@n+1)^0,f,c
  5715   003ED2  2236               	addwfc	(dtoa@n+2)^0,f,c
  5716   003ED4  2237               	addwfc	(dtoa@n+3)^0,f,c
  5717   003ED6  2238               	addwfc	(dtoa@n+4)^0,f,c
  5718   003ED8  2239               	addwfc	(dtoa@n+5)^0,f,c
  5719   003EDA  223A               	addwfc	(dtoa@n+6)^0,f,c
  5720   003EDC  223B               	addwfc	(dtoa@n+7)^0,f,c
  5721   003EDE                     l4761:
  5722                           
  5723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5724   003EDE  0100               	movlb	0	; () banked
  5725   003EE0  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  5726   003EE2  EF7D  F01F         	goto	u4610
  5727   003EE6  51F0               	movf	(_prec+1)& (0+255),w,b
  5728   003EE8  E106               	bnz	u4611
  5729   003EEA  05EF               	decf	_prec& (0+255),w,b
  5730   003EEC  B0D8               	btfsc	status,0,c
  5731   003EEE  EF7B  F01F         	goto	u4611
  5732   003EF2  EF7D  F01F         	goto	u4610
  5733   003EF6                     u4611:
  5734   003EF6  EF83  F01F         	goto	l1419
  5735   003EFA                     u4610:
  5736   003EFA                     
  5737                           ; BSR set to: 0
  5738   003EFA  0E00               	movlw	0
  5739   003EFC  6E31               	movwf	(dtoa@p+1)^0,c
  5740   003EFE  0E01               	movlw	1
  5741   003F00  6E30               	movwf	dtoa@p^0,c
  5742   003F02  EF87  F01F         	goto	l1421
  5743   003F06                     l1419:
  5744                           
  5745                           ; BSR set to: 0
  5746   003F06  C0EF  F030         	movff	_prec,dtoa@p
  5747   003F0A  C0F0  F031         	movff	_prec+1,dtoa@p+1
  5748   003F0E                     l1421:
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5752   003F0E  C0ED  F032         	movff	_width,dtoa@w
  5753   003F12  C0EE  F033         	movff	_width+1,dtoa@w+1
  5754   003F16                     
  5755                           ; BSR set to: 0
  5756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5757   003F16  503E               	movf	dtoa@s^0,w,c
  5758   003F18  B4D8               	btfsc	status,2,c
  5759   003F1A  EF91  F01F         	goto	u4621
  5760   003F1E  EF93  F01F         	goto	u4620
  5761   003F22                     u4621:
  5762   003F22  EFAA  F01F         	goto	l1422
  5763   003F26                     u4620:
  5764   003F26                     
  5765                           ; BSR set to: 0
  5766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5767   003F26  0632               	decf	dtoa@w^0,f,c
  5768   003F28  A0D8               	btfss	status,0,c
  5769   003F2A  0633               	decf	(dtoa@w+1)^0,f,c
  5770   003F2C                     
  5771                           ; BSR set to: 0
  5772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5773   003F2C  503E               	movf	dtoa@s^0,w,c
  5774   003F2E  A4D8               	btfss	status,2,c
  5775   003F30  EF9C  F01F         	goto	u4631
  5776   003F34  EF9E  F01F         	goto	u4630
  5777   003F38                     u4631:
  5778   003F38  EFA4  F01F         	goto	l4773
  5779   003F3C                     u4630:
  5780   003F3C                     
  5781                           ; BSR set to: 0
  5782   003F3C  0E00               	movlw	0
  5783   003F3E  6E2F               	movwf	(_dtoa$2743+1)^0,c
  5784   003F40  0E2B               	movlw	43
  5785   003F42  6E2E               	movwf	_dtoa$2743^0,c
  5786   003F44  EFA8  F01F         	goto	l4775
  5787   003F48                     l4773:
  5788                           
  5789                           ; BSR set to: 0
  5790   003F48  0E00               	movlw	0
  5791   003F4A  6E2F               	movwf	(_dtoa$2743+1)^0,c
  5792   003F4C  0E2D               	movlw	45
  5793   003F4E  6E2E               	movwf	_dtoa$2743^0,c
  5794   003F50                     l4775:
  5795                           
  5796                           ; BSR set to: 0
  5797   003F50  C02E  F03E         	movff	_dtoa$2743,dtoa@s
  5798   003F54                     l1422:
  5799                           
  5800                           ; BSR set to: 0
  5801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5802   003F54  0E00               	movlw	0
  5803   003F56  6E3D               	movwf	(dtoa@i+1)^0,c
  5804   003F58  0E4F               	movlw	79
  5805   003F5A  6E3C               	movwf	dtoa@i^0,c
  5806   003F5C                     
  5807                           ; BSR set to: 0
  5808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5809   003F5C  0E00               	movlw	0
  5810   003F5E  0102               	movlb	2	; () banked
  5811   003F60  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5812                           
  5813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5814   003F62  EF2F  F020         	goto	l4789
  5815   003F66                     l4779:
  5816                           
  5817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5818   003F66  063C               	decf	dtoa@i^0,f,c
  5819   003F68  A0D8               	btfss	status,0,c
  5820   003F6A  063D               	decf	(dtoa@i+1)^0,f,c
  5821   003F6C                     
  5822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5823   003F6C  0EA0               	movlw	low _dbuf
  5824   003F6E  243C               	addwf	dtoa@i^0,w,c
  5825   003F70  6ED9               	movwf	fsr2l,c
  5826   003F72  0E02               	movlw	high _dbuf
  5827   003F74  203D               	addwfc	(dtoa@i+1)^0,w,c
  5828   003F76  6EDA               	movwf	fsr2h,c
  5829   003F78  C034  F001         	movff	dtoa@n,___aomod@dividend
  5830   003F7C  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5831   003F80  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5832   003F84  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5833   003F88  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5834   003F8C  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5835   003F90  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5836   003F94  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5837   003F98  0E0A               	movlw	10
  5838   003F9A  6E09               	movwf	___aomod@divisor^0,c
  5839   003F9C  0E00               	movlw	0
  5840   003F9E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5841   003FA0  0E00               	movlw	0
  5842   003FA2  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5843   003FA4  0E00               	movlw	0
  5844   003FA6  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5845   003FA8  0E00               	movlw	0
  5846   003FAA  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5847   003FAC  0E00               	movlw	0
  5848   003FAE  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5849   003FB0  0E00               	movlw	0
  5850   003FB2  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5851   003FB4  0E00               	movlw	0
  5852   003FB6  6E10               	movwf	(___aomod@divisor+7)^0,c
  5853   003FB8  ECC9  F024         	call	___aomod	;wreg free
  5854   003FBC  C001  F026         	movff	?___aomod,??_dtoa
  5855   003FC0  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5856   003FC4  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5857   003FC8  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5858   003FCC  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5859   003FD0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5860   003FD4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5861   003FD8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5862   003FDC  C026  F013         	movff	??_dtoa,abs@a
  5863   003FE0  C027  F014         	movff	??_dtoa+1,abs@a+1
  5864   003FE4  EC75  F02F         	call	_abs	;wreg free
  5865   003FE8  5013               	movf	?_abs^0,w,c
  5866   003FEA  0F30               	addlw	48
  5867   003FEC  6EDF               	movwf	indf2,c
  5868   003FEE                     
  5869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5870   003FEE  0630               	decf	dtoa@p^0,f,c
  5871   003FF0  A0D8               	btfss	status,0,c
  5872   003FF2  0631               	decf	(dtoa@p+1)^0,f,c
  5873   003FF4                     
  5874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5875   003FF4  0632               	decf	dtoa@w^0,f,c
  5876   003FF6  A0D8               	btfss	status,0,c
  5877   003FF8  0633               	decf	(dtoa@w+1)^0,f,c
  5878   003FFA                     
  5879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5880   003FFA  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5881   003FFE  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5882   004002  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5883   004006  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5884   00400A  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5885   00400E  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5886   004012  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5887   004016  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5888   00401A  0E0A               	movlw	10
  5889   00401C  6E09               	movwf	___aodiv@divisor^0,c
  5890   00401E  0E00               	movlw	0
  5891   004020  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5892   004022  0E00               	movlw	0
  5893   004024  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5894   004026  0E00               	movlw	0
  5895   004028  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5896   00402A  0E00               	movlw	0
  5897   00402C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5898   00402E  0E00               	movlw	0
  5899   004030  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5900   004032  0E00               	movlw	0
  5901   004034  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5902   004036  0E00               	movlw	0
  5903   004038  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5904   00403A  EC4F  F023         	call	___aodiv	;wreg free
  5905   00403E  C001  F034         	movff	?___aodiv,dtoa@n
  5906   004042  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5907   004046  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5908   00404A  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5909   00404E  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5910   004052  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5911   004056  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5912   00405A  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5913   00405E                     l4789:
  5914                           
  5915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5916   00405E  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5917   004060  EF3A  F020         	goto	u4641
  5918   004064  503D               	movf	(dtoa@i+1)^0,w,c
  5919   004066  E108               	bnz	u4640
  5920   004068  043C               	decf	dtoa@i^0,w,c
  5921   00406A  A0D8               	btfss	status,0,c
  5922   00406C  EF3A  F020         	goto	u4641
  5923   004070  EF3C  F020         	goto	u4640
  5924   004074                     u4641:
  5925   004074  EF58  F020         	goto	l4795
  5926   004078                     u4640:
  5927   004078  5034               	movf	dtoa@n^0,w,c
  5928   00407A  1035               	iorwf	(dtoa@n+1)^0,w,c
  5929   00407C  1036               	iorwf	(dtoa@n+2)^0,w,c
  5930   00407E  1037               	iorwf	(dtoa@n+3)^0,w,c
  5931   004080  1038               	iorwf	(dtoa@n+4)^0,w,c
  5932   004082  1039               	iorwf	(dtoa@n+5)^0,w,c
  5933   004084  103A               	iorwf	(dtoa@n+6)^0,w,c
  5934   004086  103B               	iorwf	(dtoa@n+7)^0,w,c
  5935   004088  A4D8               	btfss	status,2,c
  5936   00408A  EF49  F020         	goto	u4651
  5937   00408E  EF4B  F020         	goto	u4650
  5938   004092                     u4651:
  5939   004092  EFB3  F01F         	goto	l4779
  5940   004096                     u4650:
  5941   004096  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5942   004098  EF58  F020         	goto	u4660
  5943   00409C  5031               	movf	(dtoa@p+1)^0,w,c
  5944   00409E  E106               	bnz	u4661
  5945   0040A0  0430               	decf	dtoa@p^0,w,c
  5946   0040A2  B0D8               	btfsc	status,0,c
  5947   0040A4  EF56  F020         	goto	u4661
  5948   0040A8  EF58  F020         	goto	u4660
  5949   0040AC                     u4661:
  5950   0040AC  EFB3  F01F         	goto	l4779
  5951   0040B0                     u4660:
  5952   0040B0                     l4795:
  5953                           
  5954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5955   0040B0  503E               	movf	dtoa@s^0,w,c
  5956   0040B2  B4D8               	btfsc	status,2,c
  5957   0040B4  EF5E  F020         	goto	u4671
  5958   0040B8  EF60  F020         	goto	u4670
  5959   0040BC                     u4671:
  5960   0040BC  EF6B  F020         	goto	l4801
  5961   0040C0                     u4670:
  5962   0040C0                     
  5963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5964   0040C0  063C               	decf	dtoa@i^0,f,c
  5965   0040C2  A0D8               	btfss	status,0,c
  5966   0040C4  063D               	decf	(dtoa@i+1)^0,f,c
  5967   0040C6                     
  5968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5969   0040C6  0EA0               	movlw	low _dbuf
  5970   0040C8  243C               	addwf	dtoa@i^0,w,c
  5971   0040CA  6ED9               	movwf	fsr2l,c
  5972   0040CC  0E02               	movlw	high _dbuf
  5973   0040CE  203D               	addwfc	(dtoa@i+1)^0,w,c
  5974   0040D0  6EDA               	movwf	fsr2h,c
  5975   0040D2  C03E  FFDF         	movff	dtoa@s,indf2
  5976   0040D6                     l4801:
  5977                           
  5978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5979   0040D6  C01C  F011         	movff	dtoa@fp,pad@fp
  5980   0040DA  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5981   0040DE  0EA0               	movlw	low _dbuf
  5982   0040E0  243C               	addwf	dtoa@i^0,w,c
  5983   0040E2  6E13               	movwf	pad@buf^0,c
  5984   0040E4  0E02               	movlw	high _dbuf
  5985   0040E6  203D               	addwfc	(dtoa@i+1)^0,w,c
  5986   0040E8  6E14               	movwf	(pad@buf+1)^0,c
  5987   0040EA  C032  F015         	movff	dtoa@w,pad@p
  5988   0040EE  C033  F016         	movff	dtoa@w+1,pad@p+1
  5989   0040F2  ECC4  F02A         	call	_pad	;wreg free
  5990   0040F6  0012               	return		;funcret
  5991   0040F8                     __end_of_dtoa:
  5992                           	callstack 0
  5993                           
  5994 ;; *************** function _pad *****************
  5995 ;; Defined at:
  5996 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5999 ;;		 -> sprintf@f(11), 
  6000 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6001 ;;		 -> dbuf(80), 
  6002 ;;  p               2   20[COMRAM] int 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;  w               2   25[COMRAM] int 
  6005 ;;  i               2   23[COMRAM] int 
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  1    wreg      void 
  6008 ;; Registers used:
  6009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6015 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6016 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6017 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6018 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6019 ;;Total ram usage:       11 bytes
  6020 ;; Hardware stack levels used: 1
  6021 ;; Hardware stack levels required when called: 3
  6022 ;; This function calls:
  6023 ;;		_fputc
  6024 ;;		_fputs
  6025 ;; This function is called by:
  6026 ;;		_dtoa
  6027 ;;		_efgtoa
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           	psect	text14
  6032   005588                     __ptext14:
  6033                           	callstack 0
  6034   005588                     _pad:
  6035                           	callstack 23
  6036   005588                     
  6037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  6038   005588  BE16               	btfsc	(pad@p+1)^0,7,c
  6039   00558A  EFC9  F02A         	goto	u4221
  6040   00558E  EFCB  F02A         	goto	u4220
  6041   005592                     u4221:
  6042   005592  EFD1  F02A         	goto	l4589
  6043   005596                     u4220:
  6044   005596  C015  F01A         	movff	pad@p,pad@w
  6045   00559A  C016  F01B         	movff	pad@p+1,pad@w+1
  6046   00559E  EFD5  F02A         	goto	l1410
  6047   0055A2                     l4589:
  6048   0055A2  0E00               	movlw	0
  6049   0055A4  6E1B               	movwf	(pad@w+1)^0,c
  6050   0055A6  0E00               	movlw	0
  6051   0055A8  6E1A               	movwf	pad@w^0,c
  6052   0055AA                     l1410:
  6053                           
  6054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  6055   0055AA  0E00               	movlw	0
  6056   0055AC  6E19               	movwf	(pad@i+1)^0,c
  6057   0055AE  0E00               	movlw	0
  6058   0055B0  6E18               	movwf	pad@i^0,c
  6059                           
  6060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6061   0055B2  EFE7  F02A         	goto	l4595
  6062   0055B6                     l4591:
  6063                           
  6064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  6065   0055B6  0E00               	movlw	0
  6066   0055B8  6E02               	movwf	(fputc@c+1)^0,c
  6067   0055BA  0E20               	movlw	32
  6068   0055BC  6E01               	movwf	fputc@c^0,c
  6069   0055BE  C011  F003         	movff	pad@fp,fputc@fp
  6070   0055C2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6071   0055C6  ECFF  F026         	call	_fputc	;wreg free
  6072   0055CA                     
  6073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  6074   0055CA  4A18               	infsnz	pad@i^0,f,c
  6075   0055CC  2A19               	incf	(pad@i+1)^0,f,c
  6076   0055CE                     l4595:
  6077                           
  6078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6079   0055CE  501A               	movf	pad@w^0,w,c
  6080   0055D0  5C18               	subwf	pad@i^0,w,c
  6081   0055D2  5019               	movf	(pad@i+1)^0,w,c
  6082   0055D4  0A80               	xorlw	128
  6083   0055D6  6E17               	movwf	??_pad^0,c
  6084   0055D8  501B               	movf	(pad@w+1)^0,w,c
  6085   0055DA  0A80               	xorlw	128
  6086   0055DC  5817               	subwfb	??_pad^0,w,c
  6087   0055DE  A0D8               	btfss	status,0,c
  6088   0055E0  EFF4  F02A         	goto	u4231
  6089   0055E4  EFF6  F02A         	goto	u4230
  6090   0055E8                     u4231:
  6091   0055E8  EFDB  F02A         	goto	l4591
  6092   0055EC                     u4230:
  6093   0055EC                     
  6094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  6095   0055EC  C013  F00A         	movff	pad@buf,fputs@s
  6096   0055F0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6097   0055F4  C011  F00C         	movff	pad@fp,fputs@fp
  6098   0055F8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6099   0055FC  EC32  F02F         	call	_fputs	;wreg free
  6100   005600  0012               	return		;funcret
  6101   005602                     __end_of_pad:
  6102                           	callstack 0
  6103                           
  6104 ;; *************** function _fputs *****************
  6105 ;; Defined at:
  6106 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6109 ;;		 -> dbuf(80), 
  6110 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6111 ;;		 -> sprintf@f(11), 
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;  i               2   14[COMRAM] int 
  6114 ;;  c               1   13[COMRAM] unsigned char 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  2    9[COMRAM] int 
  6117 ;; Registers used:
  6118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6124 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6125 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6127 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6128 ;;Total ram usage:        7 bytes
  6129 ;; Hardware stack levels used: 1
  6130 ;; Hardware stack levels required when called: 2
  6131 ;; This function calls:
  6132 ;;		_fputc
  6133 ;; This function is called by:
  6134 ;;		_pad
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           	psect	text15
  6139   005E64                     __ptext15:
  6140                           	callstack 0
  6141   005E64                     _fputs:
  6142                           	callstack 23
  6143   005E64  0E00               	movlw	0
  6144   005E66  6E10               	movwf	(fputs@i+1)^0,c
  6145   005E68  0E00               	movlw	0
  6146   005E6A  6E0F               	movwf	fputs@i^0,c
  6147   005E6C  EF43  F02F         	goto	l4123
  6148   005E70                     l4119:
  6149   005E70  C00E  F001         	movff	fputs@c,fputc@c
  6150   005E74  6A02               	clrf	(fputc@c+1)^0,c
  6151   005E76  C00C  F003         	movff	fputs@fp,fputc@fp
  6152   005E7A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6153   005E7E  ECFF  F026         	call	_fputc	;wreg free
  6154   005E82  4A0F               	infsnz	fputs@i^0,f,c
  6155   005E84  2A10               	incf	(fputs@i+1)^0,f,c
  6156   005E86                     l4123:
  6157   005E86  500F               	movf	fputs@i^0,w,c
  6158   005E88  240A               	addwf	fputs@s^0,w,c
  6159   005E8A  6ED9               	movwf	fsr2l,c
  6160   005E8C  5010               	movf	(fputs@i+1)^0,w,c
  6161   005E8E  200B               	addwfc	(fputs@s+1)^0,w,c
  6162   005E90  6EDA               	movwf	fsr2h,c
  6163   005E92  50DF               	movf	indf2,w,c
  6164   005E94  6E0E               	movwf	fputs@c^0,c
  6165   005E96  500E               	movf	fputs@c^0,w,c
  6166   005E98  A4D8               	btfss	status,2,c
  6167   005E9A  EF51  F02F         	goto	u3481
  6168   005E9E  EF53  F02F         	goto	u3480
  6169   005EA2                     u3481:
  6170   005EA2  EF38  F02F         	goto	l4119
  6171   005EA6                     u3480:
  6172   005EA6  0012               	return		;funcret
  6173   005EA8                     __end_of_fputs:
  6174                           	callstack 0
  6175                           
  6176 ;; *************** function _fputc *****************
  6177 ;; Defined at:
  6178 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  c               2    0[COMRAM] int 
  6181 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6182 ;;		 -> sprintf@f(11), 
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;		None
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  2    0[COMRAM] int 
  6187 ;; Registers used:
  6188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6194 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6196 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6197 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6198 ;;Total ram usage:        9 bytes
  6199 ;; Hardware stack levels used: 1
  6200 ;; Hardware stack levels required when called: 1
  6201 ;; This function calls:
  6202 ;;		_putch
  6203 ;; This function is called by:
  6204 ;;		_pad
  6205 ;;		_vfpfcnvrt
  6206 ;;		_fputs
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text16
  6211   004DFE                     __ptext16:
  6212                           	callstack 0
  6213   004DFE                     _fputc:
  6214                           	callstack 26
  6215   004DFE  5003               	movf	fputc@fp^0,w,c
  6216   004E00  1004               	iorwf	(fputc@fp+1)^0,w,c
  6217   004E02  B4D8               	btfsc	status,2,c
  6218   004E04  EF06  F027         	goto	u3021
  6219   004E08  EF08  F027         	goto	u3020
  6220   004E0C                     u3021:
  6221   004E0C  EF11  F027         	goto	l3877
  6222   004E10                     u3020:
  6223   004E10  5003               	movf	fputc@fp^0,w,c
  6224   004E12  1004               	iorwf	(fputc@fp+1)^0,w,c
  6225   004E14  A4D8               	btfss	status,2,c
  6226   004E16  EF0F  F027         	goto	u3031
  6227   004E1A  EF11  F027         	goto	u3030
  6228   004E1E                     u3031:
  6229   004E1E  EF16  F027         	goto	l3879
  6230   004E22                     u3030:
  6231   004E22                     l3877:
  6232   004E22  5001               	movf	fputc@c^0,w,c
  6233   004E24  ECE2  F030         	call	_putch
  6234   004E28  EF63  F027         	goto	l1570
  6235   004E2C                     l3879:
  6236   004E2C  EE20 F009          	lfsr	2,9
  6237   004E30  5003               	movf	fputc@fp^0,w,c
  6238   004E32  26D9               	addwf	fsr2l,f,c
  6239   004E34  5004               	movf	(fputc@fp+1)^0,w,c
  6240   004E36  22DA               	addwfc	fsr2h,f,c
  6241   004E38  50DE               	movf	postinc2,w,c
  6242   004E3A  10DE               	iorwf	postinc2,w,c
  6243   004E3C  B4D8               	btfsc	status,2,c
  6244   004E3E  EF23  F027         	goto	u3041
  6245   004E42  EF25  F027         	goto	u3040
  6246   004E46                     u3041:
  6247   004E46  EF40  F027         	goto	l3883
  6248   004E4A                     u3040:
  6249   004E4A  EE20 F009          	lfsr	2,9
  6250   004E4E  5003               	movf	fputc@fp^0,w,c
  6251   004E50  26D9               	addwf	fsr2l,f,c
  6252   004E52  5004               	movf	(fputc@fp+1)^0,w,c
  6253   004E54  22DA               	addwfc	fsr2h,f,c
  6254   004E56  EE10 F003          	lfsr	1,3
  6255   004E5A  5003               	movf	fputc@fp^0,w,c
  6256   004E5C  26E1               	addwf	fsr1l,f,c
  6257   004E5E  5004               	movf	(fputc@fp+1)^0,w,c
  6258   004E60  22E2               	addwfc	fsr1h,f,c
  6259   004E62  50DE               	movf	postinc2,w,c
  6260   004E64  5CE6               	subwf	postinc1,w,c
  6261   004E66  50E6               	movf	postinc1,w,c
  6262   004E68  0A80               	xorlw	128
  6263   004E6A  6E09               	movwf	(??_fputc+4)^0,c
  6264   004E6C  50DE               	movf	postinc2,w,c
  6265   004E6E  0A80               	xorlw	128
  6266   004E70  5809               	subwfb	(??_fputc+4)^0,w,c
  6267   004E72  B0D8               	btfsc	status,0,c
  6268   004E74  EF3E  F027         	goto	u3051
  6269   004E78  EF40  F027         	goto	u3050
  6270   004E7C                     u3051:
  6271   004E7C  EF63  F027         	goto	l1570
  6272   004E80                     u3050:
  6273   004E80                     l3883:
  6274   004E80  EE20 F003          	lfsr	2,3
  6275   004E84  5003               	movf	fputc@fp^0,w,c
  6276   004E86  26D9               	addwf	fsr2l,f,c
  6277   004E88  5004               	movf	(fputc@fp+1)^0,w,c
  6278   004E8A  22DA               	addwfc	fsr2h,f,c
  6279   004E8C  CFDE F005          	movff	postinc2,??_fputc
  6280   004E90  CFDD F006          	movff	postdec2,??_fputc+1
  6281   004E94  C003  FFD9         	movff	fputc@fp,fsr2l
  6282   004E98  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6283   004E9C  CFDE F007          	movff	postinc2,??_fputc+2
  6284   004EA0  CFDD F008          	movff	postdec2,??_fputc+3
  6285   004EA4  5005               	movf	??_fputc^0,w,c
  6286   004EA6  2407               	addwf	(??_fputc+2)^0,w,c
  6287   004EA8  6ED9               	movwf	fsr2l,c
  6288   004EAA  5006               	movf	(??_fputc+1)^0,w,c
  6289   004EAC  2008               	addwfc	(??_fputc+3)^0,w,c
  6290   004EAE  6EDA               	movwf	fsr2h,c
  6291   004EB0  C001  FFDF         	movff	fputc@c,indf2
  6292   004EB4  EE20 F003          	lfsr	2,3
  6293   004EB8  5003               	movf	fputc@fp^0,w,c
  6294   004EBA  26D9               	addwf	fsr2l,f,c
  6295   004EBC  5004               	movf	(fputc@fp+1)^0,w,c
  6296   004EBE  22DA               	addwfc	fsr2h,f,c
  6297   004EC0  2ADE               	incf	postinc2,f,c
  6298   004EC2  0E00               	movlw	0
  6299   004EC4  22DD               	addwfc	postdec2,f,c
  6300   004EC6                     l1570:
  6301   004EC6  0012               	return		;funcret
  6302   004EC8                     __end_of_fputc:
  6303                           	callstack 0
  6304                           
  6305 ;; *************** function _putch *****************
  6306 ;; Defined at:
  6307 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;  c               1    wreg     unsigned char 
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;  c               1    0[COMRAM] unsigned char 
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  1    wreg      void 
  6314 ;; Registers used:
  6315 ;;		wreg
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6325 ;;Total ram usage:        0 bytes
  6326 ;; Hardware stack levels used: 1
  6327 ;; This function calls:
  6328 ;;		Nothing
  6329 ;; This function is called by:
  6330 ;;		_fputc
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text17
  6335   0061C4                     __ptext17:
  6336                           	callstack 0
  6337   0061C4                     _putch:
  6338                           	callstack 26
  6339   0061C4  0012               	return		;funcret
  6340   0061C6                     __end_of_putch:
  6341                           	callstack 0
  6342                           
  6343 ;; *************** function _abs *****************
  6344 ;; Defined at:
  6345 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  a               2   18[COMRAM] int 
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  2   18[COMRAM] int 
  6352 ;; Registers used:
  6353 ;;		wreg, status,2, status,0
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6361 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6362 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6363 ;;Total ram usage:        4 bytes
  6364 ;; Hardware stack levels used: 1
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		_dtoa
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           	psect	text18
  6373   005EEA                     __ptext18:
  6374                           	callstack 0
  6375   005EEA                     _abs:
  6376                           	callstack 26
  6377   005EEA  BE14               	btfsc	(abs@a+1)^0,7,c
  6378   005EEC  EF82  F02F         	goto	u4240
  6379   005EF0  5014               	movf	(abs@a+1)^0,w,c
  6380   005EF2  E106               	bnz	u4241
  6381   005EF4  0413               	decf	abs@a^0,w,c
  6382   005EF6  B0D8               	btfsc	status,0,c
  6383   005EF8  EF80  F02F         	goto	u4241
  6384   005EFC  EF82  F02F         	goto	u4240
  6385   005F00                     u4241:
  6386   005F00  EF90  F02F         	goto	l1529
  6387   005F04                     u4240:
  6388   005F04  C013  F015         	movff	abs@a,??_abs
  6389   005F08  C014  F016         	movff	abs@a+1,??_abs+1
  6390   005F0C  1E15               	comf	??_abs^0,f,c
  6391   005F0E  1E16               	comf	(??_abs+1)^0,f,c
  6392   005F10  4A15               	infsnz	??_abs^0,f,c
  6393   005F12  2A16               	incf	(??_abs+1)^0,f,c
  6394   005F14  C015  F013         	movff	??_abs,?_abs
  6395   005F18  C016  F014         	movff	??_abs+1,?_abs+1
  6396   005F1C  EF94  F02F         	goto	l1532
  6397   005F20                     l1529:
  6398   005F20  C013  F013         	movff	abs@a,?_abs
  6399   005F24  C014  F014         	movff	abs@a+1,?_abs+1
  6400   005F28                     l1532:
  6401   005F28  0012               	return		;funcret
  6402   005F2A                     __end_of_abs:
  6403                           	callstack 0
  6404                           
  6405 ;; *************** function ___aomod *****************
  6406 ;; Defined at:
  6407 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  dividend        8    0[COMRAM] long long 
  6410 ;;  divisor         8    8[COMRAM] long long 
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;  sign            1   17[COMRAM] unsigned char 
  6413 ;;  counter         1   16[COMRAM] unsigned char 
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  8    0[COMRAM] long long 
  6416 ;; Registers used:
  6417 ;;		wreg, status,2, status,0
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6423 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6424 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6426 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6427 ;;Total ram usage:       18 bytes
  6428 ;; Hardware stack levels used: 1
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_dtoa
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text19
  6437   004992                     __ptext19:
  6438                           	callstack 0
  6439   004992                     ___aomod:
  6440                           	callstack 26
  6441   004992  0E00               	movlw	0
  6442   004994  6E12               	movwf	___aomod@sign^0,c
  6443   004996  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6444   004998  EFD2  F024         	goto	u3580
  6445   00499C  EFD0  F024         	goto	u3581
  6446   0049A0                     u3581:
  6447   0049A0  EFE4  F024         	goto	l4193
  6448   0049A4                     u3580:
  6449   0049A4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6450   0049A6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6451   0049A8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6452   0049AA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6453   0049AC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6454   0049AE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6455   0049B0  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6456   0049B2  6C01               	negf	___aomod@dividend^0,c
  6457   0049B4  0E00               	movlw	0
  6458   0049B6  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6459   0049B8  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6460   0049BA  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6461   0049BC  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6462   0049BE  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6463   0049C0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6464   0049C2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6465   0049C4  0E01               	movlw	1
  6466   0049C6  6E12               	movwf	___aomod@sign^0,c
  6467   0049C8                     l4193:
  6468   0049C8  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6469   0049CA  EFEB  F024         	goto	u3590
  6470   0049CE  EFE9  F024         	goto	u3591
  6471   0049D2                     u3591:
  6472   0049D2  EFFB  F024         	goto	l4197
  6473   0049D6                     u3590:
  6474   0049D6  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6475   0049D8  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6476   0049DA  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6477   0049DC  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6478   0049DE  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6479   0049E0  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6480   0049E2  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6481   0049E4  6C09               	negf	___aomod@divisor^0,c
  6482   0049E6  0E00               	movlw	0
  6483   0049E8  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6484   0049EA  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6485   0049EC  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6486   0049EE  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6487   0049F0  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6488   0049F2  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6489   0049F4  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6490   0049F6                     l4197:
  6491   0049F6  5009               	movf	___aomod@divisor^0,w,c
  6492   0049F8  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6493   0049FA  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6494   0049FC  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6495   0049FE  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6496   004A00  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6497   004A02  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6498   004A04  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6499   004A06  B4D8               	btfsc	status,2,c
  6500   004A08  EF08  F025         	goto	u3601
  6501   004A0C  EF0A  F025         	goto	u3600
  6502   004A10                     u3601:
  6503   004A10  EF52  F025         	goto	l4213
  6504   004A14                     u3600:
  6505   004A14  0E01               	movlw	1
  6506   004A16  6E11               	movwf	___aomod@counter^0,c
  6507   004A18  EF18  F025         	goto	l4203
  6508   004A1C                     l4201:
  6509   004A1C  90D8               	bcf	status,0,c
  6510   004A1E  3609               	rlcf	___aomod@divisor^0,f,c
  6511   004A20  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6512   004A22  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6513   004A24  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6514   004A26  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6515   004A28  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6516   004A2A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6517   004A2C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6518   004A2E  2A11               	incf	___aomod@counter^0,f,c
  6519   004A30                     l4203:
  6520   004A30  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6521   004A32  EF1D  F025         	goto	u3611
  6522   004A36  EF1F  F025         	goto	u3610
  6523   004A3A                     u3611:
  6524   004A3A  EF0E  F025         	goto	l4201
  6525   004A3E                     u3610:
  6526   004A3E                     l4205:
  6527   004A3E  5009               	movf	___aomod@divisor^0,w,c
  6528   004A40  5C01               	subwf	___aomod@dividend^0,w,c
  6529   004A42  500A               	movf	(___aomod@divisor+1)^0,w,c
  6530   004A44  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6531   004A46  500B               	movf	(___aomod@divisor+2)^0,w,c
  6532   004A48  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6533   004A4A  500C               	movf	(___aomod@divisor+3)^0,w,c
  6534   004A4C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6535   004A4E  500D               	movf	(___aomod@divisor+4)^0,w,c
  6536   004A50  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6537   004A52  500E               	movf	(___aomod@divisor+5)^0,w,c
  6538   004A54  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6539   004A56  500F               	movf	(___aomod@divisor+6)^0,w,c
  6540   004A58  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6541   004A5A  5010               	movf	(___aomod@divisor+7)^0,w,c
  6542   004A5C  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6543   004A5E  A0D8               	btfss	status,0,c
  6544   004A60  EF34  F025         	goto	u3621
  6545   004A64  EF36  F025         	goto	u3620
  6546   004A68                     u3621:
  6547   004A68  EF46  F025         	goto	l4209
  6548   004A6C                     u3620:
  6549   004A6C  5009               	movf	___aomod@divisor^0,w,c
  6550   004A6E  5E01               	subwf	___aomod@dividend^0,f,c
  6551   004A70  500A               	movf	(___aomod@divisor+1)^0,w,c
  6552   004A72  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6553   004A74  500B               	movf	(___aomod@divisor+2)^0,w,c
  6554   004A76  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6555   004A78  500C               	movf	(___aomod@divisor+3)^0,w,c
  6556   004A7A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6557   004A7C  500D               	movf	(___aomod@divisor+4)^0,w,c
  6558   004A7E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6559   004A80  500E               	movf	(___aomod@divisor+5)^0,w,c
  6560   004A82  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6561   004A84  500F               	movf	(___aomod@divisor+6)^0,w,c
  6562   004A86  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6563   004A88  5010               	movf	(___aomod@divisor+7)^0,w,c
  6564   004A8A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6565   004A8C                     l4209:
  6566   004A8C  90D8               	bcf	status,0,c
  6567   004A8E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6568   004A90  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6569   004A92  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6570   004A94  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6571   004A96  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6572   004A98  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6573   004A9A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6574   004A9C  3209               	rrcf	___aomod@divisor^0,f,c
  6575   004A9E  2E11               	decfsz	___aomod@counter^0,f,c
  6576   004AA0  EF1F  F025         	goto	l4205
  6577   004AA4                     l4213:
  6578   004AA4  5012               	movf	___aomod@sign^0,w,c
  6579   004AA6  B4D8               	btfsc	status,2,c
  6580   004AA8  EF58  F025         	goto	u3631
  6581   004AAC  EF5A  F025         	goto	u3630
  6582   004AB0                     u3631:
  6583   004AB0  EF6A  F025         	goto	l4217
  6584   004AB4                     u3630:
  6585   004AB4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6586   004AB6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6587   004AB8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6588   004ABA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6589   004ABC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6590   004ABE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6591   004AC0  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6592   004AC2  6C01               	negf	___aomod@dividend^0,c
  6593   004AC4  0E00               	movlw	0
  6594   004AC6  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6595   004AC8  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6596   004ACA  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6597   004ACC  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6598   004ACE  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6599   004AD0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6600   004AD2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6601   004AD4                     l4217:
  6602   004AD4  C001  F001         	movff	___aomod@dividend,?___aomod
  6603   004AD8  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6604   004ADC  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6605   004AE0  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6606   004AE4  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6607   004AE8  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6608   004AEC  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6609   004AF0  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6610   004AF4  0012               	return		;funcret
  6611   004AF6                     __end_of___aomod:
  6612                           	callstack 0
  6613                           
  6614 ;; *************** function ___aodiv *****************
  6615 ;; Defined at:
  6616 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;  dividend        8    0[COMRAM] long long 
  6619 ;;  divisor         8    8[COMRAM] long long 
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;  quotient        8   18[COMRAM] long long 
  6622 ;;  sign            1   17[COMRAM] unsigned char 
  6623 ;;  counter         1   16[COMRAM] unsigned char 
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  8    0[COMRAM] long long 
  6626 ;; Registers used:
  6627 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6633 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6634 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6636 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6637 ;;Total ram usage:       26 bytes
  6638 ;; Hardware stack levels used: 1
  6639 ;; This function calls:
  6640 ;;		Nothing
  6641 ;; This function is called by:
  6642 ;;		_dtoa
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           	psect	text20
  6647   00469E                     __ptext20:
  6648                           	callstack 0
  6649   00469E                     ___aodiv:
  6650                           	callstack 26
  6651   00469E  0E00               	movlw	0
  6652   0046A0  6E12               	movwf	___aodiv@sign^0,c
  6653   0046A2  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6654   0046A4  EF58  F023         	goto	u3510
  6655   0046A8  EF56  F023         	goto	u3511
  6656   0046AC                     u3511:
  6657   0046AC  EF6A  F023         	goto	l4149
  6658   0046B0                     u3510:
  6659   0046B0  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6660   0046B2  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6661   0046B4  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6662   0046B6  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6663   0046B8  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6664   0046BA  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6665   0046BC  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6666   0046BE  6C09               	negf	___aodiv@divisor^0,c
  6667   0046C0  0E00               	movlw	0
  6668   0046C2  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6669   0046C4  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6670   0046C6  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6671   0046C8  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6672   0046CA  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6673   0046CC  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6674   0046CE  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6675   0046D0  0E01               	movlw	1
  6676   0046D2  6E12               	movwf	___aodiv@sign^0,c
  6677   0046D4                     l4149:
  6678   0046D4  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6679   0046D6  EF71  F023         	goto	u3520
  6680   0046DA  EF6F  F023         	goto	u3521
  6681   0046DE                     u3521:
  6682   0046DE  EF83  F023         	goto	l4155
  6683   0046E2                     u3520:
  6684   0046E2  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6685   0046E4  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6686   0046E6  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6687   0046E8  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6688   0046EA  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6689   0046EC  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6690   0046EE  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6691   0046F0  6C01               	negf	___aodiv@dividend^0,c
  6692   0046F2  0E00               	movlw	0
  6693   0046F4  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6694   0046F6  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6695   0046F8  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6696   0046FA  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6697   0046FC  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6698   0046FE  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6699   004700  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6700   004702  0E01               	movlw	1
  6701   004704  1A12               	xorwf	___aodiv@sign^0,f,c
  6702   004706                     l4155:
  6703   004706  EE20  F013         	lfsr	2,___aodiv@quotient
  6704   00470A  0E07               	movlw	7
  6705   00470C                     u3531:
  6706   00470C  6ADE               	clrf	postinc2,c
  6707   00470E  06E8               	decf	wreg,f,c
  6708   004710  E2FD               	bc	u3531
  6709   004712  5009               	movf	___aodiv@divisor^0,w,c
  6710   004714  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6711   004716  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6712   004718  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6713   00471A  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6714   00471C  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6715   00471E  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6716   004720  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6717   004722  B4D8               	btfsc	status,2,c
  6718   004724  EF96  F023         	goto	u3541
  6719   004728  EF98  F023         	goto	u3540
  6720   00472C                     u3541:
  6721   00472C  EFEA  F023         	goto	l4177
  6722   004730                     u3540:
  6723   004730  0E01               	movlw	1
  6724   004732  6E11               	movwf	___aodiv@counter^0,c
  6725   004734  EFA6  F023         	goto	l4163
  6726   004738                     l4161:
  6727   004738  90D8               	bcf	status,0,c
  6728   00473A  3609               	rlcf	___aodiv@divisor^0,f,c
  6729   00473C  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6730   00473E  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6731   004740  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6732   004742  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6733   004744  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6734   004746  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6735   004748  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6736   00474A  2A11               	incf	___aodiv@counter^0,f,c
  6737   00474C                     l4163:
  6738   00474C  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6739   00474E  EFAB  F023         	goto	u3551
  6740   004752  EFAD  F023         	goto	u3550
  6741   004756                     u3551:
  6742   004756  EF9C  F023         	goto	l4161
  6743   00475A                     u3550:
  6744   00475A                     l4165:
  6745   00475A  90D8               	bcf	status,0,c
  6746   00475C  3613               	rlcf	___aodiv@quotient^0,f,c
  6747   00475E  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6748   004760  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6749   004762  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6750   004764  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6751   004766  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6752   004768  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6753   00476A  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6754   00476C  5009               	movf	___aodiv@divisor^0,w,c
  6755   00476E  5C01               	subwf	___aodiv@dividend^0,w,c
  6756   004770  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6757   004772  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6758   004774  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6759   004776  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6760   004778  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6761   00477A  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6762   00477C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6763   00477E  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6764   004780  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6765   004782  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6766   004784  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6767   004786  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6768   004788  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6769   00478A  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6770   00478C  A0D8               	btfss	status,0,c
  6771   00478E  EFCB  F023         	goto	u3561
  6772   004792  EFCD  F023         	goto	u3560
  6773   004796                     u3561:
  6774   004796  EFDE  F023         	goto	l4173
  6775   00479A                     u3560:
  6776   00479A  5009               	movf	___aodiv@divisor^0,w,c
  6777   00479C  5E01               	subwf	___aodiv@dividend^0,f,c
  6778   00479E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6779   0047A0  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6780   0047A2  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6781   0047A4  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6782   0047A6  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6783   0047A8  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6784   0047AA  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6785   0047AC  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6786   0047AE  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6787   0047B0  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6788   0047B2  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6789   0047B4  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6790   0047B6  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6791   0047B8  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6792   0047BA  8013               	bsf	___aodiv@quotient^0,0,c
  6793   0047BC                     l4173:
  6794   0047BC  90D8               	bcf	status,0,c
  6795   0047BE  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6796   0047C0  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6797   0047C2  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6798   0047C4  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6799   0047C6  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6800   0047C8  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6801   0047CA  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6802   0047CC  3209               	rrcf	___aodiv@divisor^0,f,c
  6803   0047CE  2E11               	decfsz	___aodiv@counter^0,f,c
  6804   0047D0  EFAD  F023         	goto	l4165
  6805   0047D4                     l4177:
  6806   0047D4  5012               	movf	___aodiv@sign^0,w,c
  6807   0047D6  B4D8               	btfsc	status,2,c
  6808   0047D8  EFF0  F023         	goto	u3571
  6809   0047DC  EFF2  F023         	goto	u3570
  6810   0047E0                     u3571:
  6811   0047E0  EF02  F024         	goto	l4181
  6812   0047E4                     u3570:
  6813   0047E4  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6814   0047E6  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6815   0047E8  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6816   0047EA  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6817   0047EC  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6818   0047EE  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6819   0047F0  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6820   0047F2  6C13               	negf	___aodiv@quotient^0,c
  6821   0047F4  0E00               	movlw	0
  6822   0047F6  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6823   0047F8  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6824   0047FA  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6825   0047FC  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6826   0047FE  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6827   004800  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6828   004802  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6829   004804                     l4181:
  6830   004804  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6831   004808  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6832   00480C  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6833   004810  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6834   004814  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6835   004818  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6836   00481C  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6837   004820  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6838   004824  0012               	return		;funcret
  6839   004826                     __end_of___aodiv:
  6840                           	callstack 0
  6841                           
  6842 ;; *************** function _sendStringSerial4 *****************
  6843 ;; Defined at:
  6844 ;;		line 33 in file "serial.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  string          2    1[COMRAM] PTR unsigned char 
  6847 ;;		 -> main@buf(100), 
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;		None
  6850 ;; Return value:  Size  Location     Type
  6851 ;;                  1    wreg      void 
  6852 ;; Registers used:
  6853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6854 ;; Tracked objects:
  6855 ;;		On entry : 0/0
  6856 ;;		On exit  : 0/0
  6857 ;;		Unchanged: 0/0
  6858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6862 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6863 ;;Total ram usage:        2 bytes
  6864 ;; Hardware stack levels used: 1
  6865 ;; Hardware stack levels required when called: 1
  6866 ;; This function calls:
  6867 ;;		_sendCharSerial4
  6868 ;; This function is called by:
  6869 ;;		_main
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           
  6873                           	psect	text21
  6874   00604C                     __ptext21:
  6875                           	callstack 0
  6876   00604C                     _sendStringSerial4:
  6877                           	callstack 29
  6878   00604C                     
  6879                           ;serial.c: 34:     while (*string!=0){
  6880   00604C  EF31  F030         	goto	l5557
  6881   006050                     l5553:
  6882                           
  6883                           ;serial.c: 35:         sendCharSerial4(*string++);
  6884   006050  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6885   006054  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6886   006058  50DF               	movf	indf2,w,c
  6887   00605A  ECBC  F030         	call	_sendCharSerial4
  6888   00605E  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6889   006060  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6890   006062                     l5557:
  6891                           
  6892                           ;serial.c: 34:     while (*string!=0){
  6893   006062  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6894   006066  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6895   00606A  50DF               	movf	indf2,w,c
  6896   00606C  A4D8               	btfss	status,2,c
  6897   00606E  EF3B  F030         	goto	u5541
  6898   006072  EF3D  F030         	goto	u5540
  6899   006076                     u5541:
  6900   006076  EF28  F030         	goto	l5553
  6901   00607A                     u5540:
  6902   00607A  0012               	return		;funcret
  6903   00607C                     __end_of_sendStringSerial4:
  6904                           	callstack 0
  6905                           
  6906 ;; *************** function _sendCharSerial4 *****************
  6907 ;; Defined at:
  6908 ;;		line 26 in file "serial.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;  charToSend      1    wreg     unsigned char 
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;  charToSend      1    0[COMRAM] unsigned char 
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  1    wreg      void 
  6915 ;; Registers used:
  6916 ;;		wreg
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6925 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6926 ;;Total ram usage:        1 bytes
  6927 ;; Hardware stack levels used: 1
  6928 ;; This function calls:
  6929 ;;		Nothing
  6930 ;; This function is called by:
  6931 ;;		_sendStringSerial4
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935                           	psect	text22
  6936   006178                     __ptext22:
  6937                           	callstack 0
  6938   006178                     _sendCharSerial4:
  6939                           	callstack 29
  6940                           
  6941                           ;incstack = 0
  6942                           ;sendCharSerial4@charToSend stored from wreg
  6943   006178  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6944   00617A                     l209:
  6945   00617A  010E               	movlb	14	; () banked
  6946   00617C  A537               	btfss	55,2,b	;volatile
  6947   00617E  EFC3  F030         	goto	u5071
  6948   006182  EFC5  F030         	goto	u5070
  6949   006186                     u5071:
  6950   006186  EFBD  F030         	goto	l209
  6951   00618A                     u5070:
  6952   00618A                     
  6953                           ; BSR set to: 14
  6954                           ;serial.c: 28:     TX4REG = charToSend;
  6955   00618A  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6956   00618E                     
  6957                           ; BSR set to: 14
  6958   00618E  0012               	return		;funcret
  6959   006190                     __end_of_sendCharSerial4:
  6960                           	callstack 0
  6961                           
  6962 ;; *************** function _readColours *****************
  6963 ;; Defined at:
  6964 ;;		line 105 in file "color.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  vals            2   11[COMRAM] PTR struct RGB
  6967 ;;		 -> vals(8), 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;		None
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  1    wreg      void 
  6972 ;; Registers used:
  6973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6983 ;;Total ram usage:        2 bytes
  6984 ;; Hardware stack levels used: 1
  6985 ;; Hardware stack levels required when called: 3
  6986 ;; This function calls:
  6987 ;;		_color_read_Blue
  6988 ;;		_color_read_Green
  6989 ;;		_color_read_Red
  6990 ;;		_color_read_lum
  6991 ;; This function is called by:
  6992 ;;		_main
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           	psect	text23
  6997   0057A6                     __ptext23:
  6998                           	callstack 0
  6999   0057A6                     _readColours:
  7000                           	callstack 27
  7001   0057A6                     
  7002                           ;color.c: 107:     vals ->R = color_read_Red();
  7003   0057A6  EC27  F02E         	call	_color_read_Red	;wreg free
  7004   0057AA  C00C  FFD9         	movff	readColours@vals,fsr2l
  7005   0057AE  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  7006   0057B2  C005  FFDE         	movff	?_color_read_Red,postinc2
  7007   0057B6  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  7008                           
  7009                           ;color.c: 108:     vals ->B = color_read_Blue();
  7010   0057BA  EC77  F02E         	call	_color_read_Blue	;wreg free
  7011   0057BE  EE20 F004          	lfsr	2,4
  7012   0057C2  500C               	movf	readColours@vals^0,w,c
  7013   0057C4  26D9               	addwf	fsr2l,f,c
  7014   0057C6  500D               	movf	(readColours@vals+1)^0,w,c
  7015   0057C8  22DA               	addwfc	fsr2h,f,c
  7016   0057CA  C005  FFDE         	movff	?_color_read_Blue,postinc2
  7017   0057CE  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  7018                           
  7019                           ;color.c: 109:     vals ->G = color_read_Green();
  7020   0057D2  EC4F  F02E         	call	_color_read_Green	;wreg free
  7021   0057D6  EE20 F002          	lfsr	2,2
  7022   0057DA  500C               	movf	readColours@vals^0,w,c
  7023   0057DC  26D9               	addwf	fsr2l,f,c
  7024   0057DE  500D               	movf	(readColours@vals+1)^0,w,c
  7025   0057E0  22DA               	addwfc	fsr2h,f,c
  7026   0057E2  C005  FFDE         	movff	?_color_read_Green,postinc2
  7027   0057E6  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  7028                           
  7029                           ;color.c: 110:     vals ->L = color_read_lum();
  7030   0057EA  ECFF  F02D         	call	_color_read_lum	;wreg free
  7031   0057EE  EE20 F006          	lfsr	2,6
  7032   0057F2  500C               	movf	readColours@vals^0,w,c
  7033   0057F4  26D9               	addwf	fsr2l,f,c
  7034   0057F6  500D               	movf	(readColours@vals+1)^0,w,c
  7035   0057F8  22DA               	addwfc	fsr2h,f,c
  7036   0057FA  C005  FFDE         	movff	?_color_read_lum,postinc2
  7037   0057FE  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  7038   005802  0012               	return		;funcret
  7039   005804                     __end_of_readColours:
  7040                           	callstack 0
  7041                           
  7042 ;; *************** function _color_read_lum *****************
  7043 ;; Defined at:
  7044 ;;		line 49 in file "color.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;		None
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;  tmp             2    9[COMRAM] unsigned int 
  7049 ;; Return value:  Size  Location     Type
  7050 ;;                  2    4[COMRAM] unsigned int 
  7051 ;; Registers used:
  7052 ;;		wreg, status,2, status,0, cstack
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7060 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7061 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7062 ;;Total ram usage:        7 bytes
  7063 ;; Hardware stack levels used: 1
  7064 ;; Hardware stack levels required when called: 2
  7065 ;; This function calls:
  7066 ;;		_I2C_2_Master_Read
  7067 ;;		_I2C_2_Master_RepStart
  7068 ;;		_I2C_2_Master_Start
  7069 ;;		_I2C_2_Master_Stop
  7070 ;;		_I2C_2_Master_Write
  7071 ;; This function is called by:
  7072 ;;		_readColours
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text24
  7077   005BFE                     __ptext24:
  7078                           	callstack 0
  7079   005BFE                     _color_read_lum:
  7080                           	callstack 27
  7081   005BFE                     
  7082                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  7083   005BFE  ECD8  F030         	call	_I2C_2_Master_Start	;wreg free
  7084                           
  7085                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  7086   005C02  0E52               	movlw	82
  7087   005C04  ECC8  F030         	call	_I2C_2_Master_Write
  7088                           
  7089                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  7090   005C08  0EB4               	movlw	180
  7091   005C0A  ECC8  F030         	call	_I2C_2_Master_Write
  7092                           
  7093                           ;color.c: 55:  I2C_2_Master_RepStart();
  7094   005C0E  ECCE  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7095                           
  7096                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  7097   005C12  0E53               	movlw	83
  7098   005C14  ECC8  F030         	call	_I2C_2_Master_Write
  7099                           
  7100                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  7101   005C18  0E01               	movlw	1
  7102   005C1A  EC54  F02F         	call	_I2C_2_Master_Read
  7103   005C1E  6E07               	movwf	??_color_read_lum^0,c
  7104   005C20  5007               	movf	??_color_read_lum^0,w,c
  7105   005C22  6E0A               	movwf	color_read_lum@tmp^0,c
  7106   005C24  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  7107                           
  7108                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7109   005C26  0E00               	movlw	0
  7110   005C28  EC54  F02F         	call	_I2C_2_Master_Read
  7111   005C2C  6E07               	movwf	??_color_read_lum^0,c
  7112   005C2E  5007               	movf	??_color_read_lum^0,w,c
  7113   005C30  6E09               	movwf	(??_color_read_lum+2)^0,c
  7114   005C32  6A08               	clrf	(??_color_read_lum+1)^0,c
  7115   005C34  500A               	movf	color_read_lum@tmp^0,w,c
  7116   005C36  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  7117   005C38  6E0A               	movwf	color_read_lum@tmp^0,c
  7118   005C3A  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  7119   005C3C  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  7120   005C3E  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  7121                           
  7122                           ;color.c: 59:  I2C_2_Master_Stop();
  7123   005C40  ECD3  F030         	call	_I2C_2_Master_Stop	;wreg free
  7124   005C44                     
  7125                           ;color.c: 60:  return tmp;
  7126   005C44  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  7127   005C48  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  7128   005C4C  0012               	return		;funcret
  7129   005C4E                     __end_of_color_read_lum:
  7130                           	callstack 0
  7131                           
  7132 ;; *************** function _color_read_Red *****************
  7133 ;; Defined at:
  7134 ;;		line 63 in file "color.c"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;		None
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;  tmp             2    9[COMRAM] unsigned int 
  7139 ;; Return value:  Size  Location     Type
  7140 ;;                  2    4[COMRAM] unsigned int 
  7141 ;; Registers used:
  7142 ;;		wreg, status,2, status,0, cstack
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7150 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7151 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7152 ;;Total ram usage:        7 bytes
  7153 ;; Hardware stack levels used: 1
  7154 ;; Hardware stack levels required when called: 2
  7155 ;; This function calls:
  7156 ;;		_I2C_2_Master_Read
  7157 ;;		_I2C_2_Master_RepStart
  7158 ;;		_I2C_2_Master_Start
  7159 ;;		_I2C_2_Master_Stop
  7160 ;;		_I2C_2_Master_Write
  7161 ;; This function is called by:
  7162 ;;		_readColours
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text25
  7167   005C4E                     __ptext25:
  7168                           	callstack 0
  7169   005C4E                     _color_read_Red:
  7170                           	callstack 27
  7171   005C4E                     
  7172                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  7173   005C4E  ECD8  F030         	call	_I2C_2_Master_Start	;wreg free
  7174                           
  7175                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  7176   005C52  0E52               	movlw	82
  7177   005C54  ECC8  F030         	call	_I2C_2_Master_Write
  7178                           
  7179                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  7180   005C58  0EB6               	movlw	182
  7181   005C5A  ECC8  F030         	call	_I2C_2_Master_Write
  7182                           
  7183                           ;color.c: 69:  I2C_2_Master_RepStart();
  7184   005C5E  ECCE  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7185                           
  7186                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  7187   005C62  0E53               	movlw	83
  7188   005C64  ECC8  F030         	call	_I2C_2_Master_Write
  7189                           
  7190                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  7191   005C68  0E01               	movlw	1
  7192   005C6A  EC54  F02F         	call	_I2C_2_Master_Read
  7193   005C6E  6E07               	movwf	??_color_read_Red^0,c
  7194   005C70  5007               	movf	??_color_read_Red^0,w,c
  7195   005C72  6E0A               	movwf	color_read_Red@tmp^0,c
  7196   005C74  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7197                           
  7198                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7199   005C76  0E00               	movlw	0
  7200   005C78  EC54  F02F         	call	_I2C_2_Master_Read
  7201   005C7C  6E07               	movwf	??_color_read_Red^0,c
  7202   005C7E  5007               	movf	??_color_read_Red^0,w,c
  7203   005C80  6E09               	movwf	(??_color_read_Red+2)^0,c
  7204   005C82  6A08               	clrf	(??_color_read_Red+1)^0,c
  7205   005C84  500A               	movf	color_read_Red@tmp^0,w,c
  7206   005C86  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7207   005C88  6E0A               	movwf	color_read_Red@tmp^0,c
  7208   005C8A  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7209   005C8C  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7210   005C8E  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7211                           
  7212                           ;color.c: 73:  I2C_2_Master_Stop();
  7213   005C90  ECD3  F030         	call	_I2C_2_Master_Stop	;wreg free
  7214   005C94                     
  7215                           ;color.c: 74:  return tmp;
  7216   005C94  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7217   005C98  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7218   005C9C  0012               	return		;funcret
  7219   005C9E                     __end_of_color_read_Red:
  7220                           	callstack 0
  7221                           
  7222 ;; *************** function _color_read_Green *****************
  7223 ;; Defined at:
  7224 ;;		line 76 in file "color.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;		None
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;  tmp             2    9[COMRAM] unsigned int 
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  2    4[COMRAM] unsigned int 
  7231 ;; Registers used:
  7232 ;;		wreg, status,2, status,0, cstack
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7239 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7240 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7241 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7242 ;;Total ram usage:        7 bytes
  7243 ;; Hardware stack levels used: 1
  7244 ;; Hardware stack levels required when called: 2
  7245 ;; This function calls:
  7246 ;;		_I2C_2_Master_Read
  7247 ;;		_I2C_2_Master_RepStart
  7248 ;;		_I2C_2_Master_Start
  7249 ;;		_I2C_2_Master_Stop
  7250 ;;		_I2C_2_Master_Write
  7251 ;; This function is called by:
  7252 ;;		_readColours
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text26
  7257   005C9E                     __ptext26:
  7258                           	callstack 0
  7259   005C9E                     _color_read_Green:
  7260                           	callstack 27
  7261   005C9E                     
  7262                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  7263   005C9E  ECD8  F030         	call	_I2C_2_Master_Start	;wreg free
  7264                           
  7265                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  7266   005CA2  0E52               	movlw	82
  7267   005CA4  ECC8  F030         	call	_I2C_2_Master_Write
  7268                           
  7269                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  7270   005CA8  0EB8               	movlw	184
  7271   005CAA  ECC8  F030         	call	_I2C_2_Master_Write
  7272                           
  7273                           ;color.c: 82:  I2C_2_Master_RepStart();
  7274   005CAE  ECCE  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7275                           
  7276                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  7277   005CB2  0E53               	movlw	83
  7278   005CB4  ECC8  F030         	call	_I2C_2_Master_Write
  7279                           
  7280                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  7281   005CB8  0E01               	movlw	1
  7282   005CBA  EC54  F02F         	call	_I2C_2_Master_Read
  7283   005CBE  6E07               	movwf	??_color_read_Green^0,c
  7284   005CC0  5007               	movf	??_color_read_Green^0,w,c
  7285   005CC2  6E0A               	movwf	color_read_Green@tmp^0,c
  7286   005CC4  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7287                           
  7288                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7289   005CC6  0E00               	movlw	0
  7290   005CC8  EC54  F02F         	call	_I2C_2_Master_Read
  7291   005CCC  6E07               	movwf	??_color_read_Green^0,c
  7292   005CCE  5007               	movf	??_color_read_Green^0,w,c
  7293   005CD0  6E09               	movwf	(??_color_read_Green+2)^0,c
  7294   005CD2  6A08               	clrf	(??_color_read_Green+1)^0,c
  7295   005CD4  500A               	movf	color_read_Green@tmp^0,w,c
  7296   005CD6  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7297   005CD8  6E0A               	movwf	color_read_Green@tmp^0,c
  7298   005CDA  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7299   005CDC  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7300   005CDE  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7301                           
  7302                           ;color.c: 86:  I2C_2_Master_Stop();
  7303   005CE0  ECD3  F030         	call	_I2C_2_Master_Stop	;wreg free
  7304   005CE4                     
  7305                           ;color.c: 87:  return tmp;
  7306   005CE4  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7307   005CE8  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7308   005CEC  0012               	return		;funcret
  7309   005CEE                     __end_of_color_read_Green:
  7310                           	callstack 0
  7311                           
  7312 ;; *************** function _color_read_Blue *****************
  7313 ;; Defined at:
  7314 ;;		line 90 in file "color.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;		None
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;  tmp             2    9[COMRAM] unsigned int 
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  2    4[COMRAM] unsigned int 
  7321 ;; Registers used:
  7322 ;;		wreg, status,2, status,0, cstack
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7329 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7330 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7331 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7332 ;;Total ram usage:        7 bytes
  7333 ;; Hardware stack levels used: 1
  7334 ;; Hardware stack levels required when called: 2
  7335 ;; This function calls:
  7336 ;;		_I2C_2_Master_Read
  7337 ;;		_I2C_2_Master_RepStart
  7338 ;;		_I2C_2_Master_Start
  7339 ;;		_I2C_2_Master_Stop
  7340 ;;		_I2C_2_Master_Write
  7341 ;; This function is called by:
  7342 ;;		_readColours
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346                           	psect	text27
  7347   005CEE                     __ptext27:
  7348                           	callstack 0
  7349   005CEE                     _color_read_Blue:
  7350                           	callstack 27
  7351   005CEE                     
  7352                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  7353   005CEE  ECD8  F030         	call	_I2C_2_Master_Start	;wreg free
  7354                           
  7355                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  7356   005CF2  0E52               	movlw	82
  7357   005CF4  ECC8  F030         	call	_I2C_2_Master_Write
  7358                           
  7359                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  7360   005CF8  0EBA               	movlw	186
  7361   005CFA  ECC8  F030         	call	_I2C_2_Master_Write
  7362                           
  7363                           ;color.c: 96:  I2C_2_Master_RepStart();
  7364   005CFE  ECCE  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7365                           
  7366                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  7367   005D02  0E53               	movlw	83
  7368   005D04  ECC8  F030         	call	_I2C_2_Master_Write
  7369                           
  7370                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  7371   005D08  0E01               	movlw	1
  7372   005D0A  EC54  F02F         	call	_I2C_2_Master_Read
  7373   005D0E  6E07               	movwf	??_color_read_Blue^0,c
  7374   005D10  5007               	movf	??_color_read_Blue^0,w,c
  7375   005D12  6E0A               	movwf	color_read_Blue@tmp^0,c
  7376   005D14  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7377                           
  7378                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7379   005D16  0E00               	movlw	0
  7380   005D18  EC54  F02F         	call	_I2C_2_Master_Read
  7381   005D1C  6E07               	movwf	??_color_read_Blue^0,c
  7382   005D1E  5007               	movf	??_color_read_Blue^0,w,c
  7383   005D20  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7384   005D22  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7385   005D24  500A               	movf	color_read_Blue@tmp^0,w,c
  7386   005D26  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7387   005D28  6E0A               	movwf	color_read_Blue@tmp^0,c
  7388   005D2A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7389   005D2C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7390   005D2E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7391                           
  7392                           ;color.c: 100:  I2C_2_Master_Stop();
  7393   005D30  ECD3  F030         	call	_I2C_2_Master_Stop	;wreg free
  7394   005D34                     
  7395                           ;color.c: 101:  return tmp;
  7396   005D34  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7397   005D38  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7398   005D3C  0012               	return		;funcret
  7399   005D3E                     __end_of_color_read_Blue:
  7400                           	callstack 0
  7401                           
  7402 ;; *************** function _I2C_2_Master_RepStart *****************
  7403 ;; Defined at:
  7404 ;;		line 33 in file "i2c.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;		None
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;		None
  7409 ;; Return value:  Size  Location     Type
  7410 ;;                  1    wreg      void 
  7411 ;; Registers used:
  7412 ;;		wreg, status,2, status,0, cstack
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7422 ;;Total ram usage:        0 bytes
  7423 ;; Hardware stack levels used: 1
  7424 ;; Hardware stack levels required when called: 1
  7425 ;; This function calls:
  7426 ;;		_I2C_2_Master_Idle
  7427 ;; This function is called by:
  7428 ;;		_color_read_lum
  7429 ;;		_color_read_Red
  7430 ;;		_color_read_Green
  7431 ;;		_color_read_Blue
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435                           	psect	text28
  7436   00619C                     __ptext28:
  7437                           	callstack 0
  7438   00619C                     _I2C_2_Master_RepStart:
  7439                           	callstack 27
  7440   00619C                     
  7441                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7442   00619C  EC53  F030         	call	_I2C_2_Master_Idle	;wreg free
  7443   0061A0                     
  7444                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7445   0061A0  010E               	movlb	14	; () banked
  7446   0061A2  83DA               	bsf	218,1,b	;volatile
  7447   0061A4                     
  7448                           ; BSR set to: 14
  7449   0061A4  0012               	return		;funcret
  7450   0061A6                     __end_of_I2C_2_Master_RepStart:
  7451                           	callstack 0
  7452                           
  7453 ;; *************** function _I2C_2_Master_Read *****************
  7454 ;; Defined at:
  7455 ;;		line 51 in file "i2c.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  ack             1    wreg     unsigned char 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  ack             1    2[COMRAM] unsigned char 
  7460 ;;  tmp             1    3[COMRAM] unsigned char 
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  1    wreg      unsigned char 
  7463 ;; Registers used:
  7464 ;;		wreg, status,2, status,0, cstack
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7471 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7472 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7473 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7474 ;;Total ram usage:        3 bytes
  7475 ;; Hardware stack levels used: 1
  7476 ;; Hardware stack levels required when called: 1
  7477 ;; This function calls:
  7478 ;;		_I2C_2_Master_Idle
  7479 ;; This function is called by:
  7480 ;;		_color_read_lum
  7481 ;;		_color_read_Red
  7482 ;;		_color_read_Green
  7483 ;;		_color_read_Blue
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           	psect	text29
  7488   005EA8                     __ptext29:
  7489                           	callstack 0
  7490   005EA8                     _I2C_2_Master_Read:
  7491                           	callstack 27
  7492                           
  7493                           ; BSR set to: 14
  7494                           ;incstack = 0
  7495                           ;I2C_2_Master_Read@ack stored from wreg
  7496   005EA8  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7497   005EAA                     
  7498                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7499   005EAA  EC53  F030         	call	_I2C_2_Master_Idle	;wreg free
  7500   005EAE                     
  7501                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7502   005EAE  010E               	movlb	14	; () banked
  7503   005EB0  87DA               	bsf	218,3,b	;volatile
  7504                           
  7505                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7506   005EB2  EC53  F030         	call	_I2C_2_Master_Idle	;wreg free
  7507   005EB6                     
  7508                           ;i2c.c: 57:   tmp = SSP2BUF;
  7509   005EB6  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7510                           
  7511                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7512   005EBA  EC53  F030         	call	_I2C_2_Master_Idle	;wreg free
  7513   005EBE                     
  7514                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7515   005EBE  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7516   005EC0  B4D8               	btfsc	status,2,c
  7517   005EC2  EF65  F02F         	goto	u5001
  7518   005EC6  EF69  F02F         	goto	u5000
  7519   005ECA                     u5001:
  7520   005ECA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7521   005ECC  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7522   005ECE  EF6A  F02F         	goto	u5018
  7523   005ED2                     u5000:
  7524   005ED2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7525   005ED4                     u5018:
  7526   005ED4  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7527   005ED6  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7528   005ED8  010E               	movlb	14	; () banked
  7529   005EDA  51DA               	movf	218,w,b	;volatile
  7530   005EDC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7531   005EDE  0BDF               	andlw	-33
  7532   005EE0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7533   005EE2  6FDA               	movwf	218,b	;volatile
  7534   005EE4                     
  7535                           ; BSR set to: 14
  7536                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7537   005EE4  89DA               	bsf	218,4,b	;volatile
  7538   005EE6                     
  7539                           ; BSR set to: 14
  7540                           ;i2c.c: 61:   return tmp;
  7541   005EE6  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7542   005EE8                     
  7543                           ; BSR set to: 14
  7544   005EE8  0012               	return		;funcret
  7545   005EEA                     __end_of_I2C_2_Master_Read:
  7546                           	callstack 0
  7547                           
  7548 ;; *************** function _initUSART4 *****************
  7549 ;; Defined at:
  7550 ;;		line 4 in file "serial.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;		None
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;		None
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  1    wreg      void 
  7557 ;; Registers used:
  7558 ;;		wreg, status,2
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7568 ;;Total ram usage:        0 bytes
  7569 ;; Hardware stack levels used: 1
  7570 ;; This function calls:
  7571 ;;		Nothing
  7572 ;; This function is called by:
  7573 ;;		_main
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           
  7577                           	psect	text30
  7578   00615A                     __ptext30:
  7579                           	callstack 0
  7580   00615A                     _initUSART4:
  7581                           	callstack 30
  7582   00615A                     
  7583                           ;serial.c: 5:     RC0PPS = 0x12;
  7584   00615A  0E12               	movlw	18
  7585   00615C  010E               	movlb	14	; () banked
  7586   00615E  6F62               	movwf	98,b	;volatile
  7587                           
  7588                           ;serial.c: 6:     RX4PPS = 0x11;
  7589   006160  0E11               	movlw	17
  7590   006162  6F15               	movwf	21,b	;volatile
  7591   006164                     
  7592                           ; BSR set to: 14
  7593                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7594   006164  97E9               	bcf	233,3,b	;volatile
  7595   006166                     
  7596                           ; BSR set to: 14
  7597                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7598   006166  95E8               	bcf	232,2,b	;volatile
  7599                           
  7600                           ;serial.c: 9:     SP4BRGL = 51;
  7601   006168  0E33               	movlw	51
  7602   00616A  6FE5               	movwf	229,b	;volatile
  7603                           
  7604                           ;serial.c: 10:     SP4BRGH = 0;
  7605   00616C  0E00               	movlw	0
  7606   00616E  6FE6               	movwf	230,b	;volatile
  7607   006170                     
  7608                           ; BSR set to: 14
  7609                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7610   006170  89E7               	bsf	231,4,b	;volatile
  7611   006172                     
  7612                           ; BSR set to: 14
  7613                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7614   006172  8BE8               	bsf	232,5,b	;volatile
  7615   006174                     
  7616                           ; BSR set to: 14
  7617                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7618   006174  8FE7               	bsf	231,7,b	;volatile
  7619   006176                     
  7620                           ; BSR set to: 14
  7621   006176  0012               	return		;funcret
  7622   006178                     __end_of_initUSART4:
  7623                           	callstack 0
  7624                           
  7625 ;; *************** function _initDCmotorsPWM *****************
  7626 ;; Defined at:
  7627 ;;		line 6 in file "dc_motor.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1    wreg      void 
  7634 ;; Registers used:
  7635 ;;		wreg, status,2
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7644 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7645 ;;Total ram usage:        2 bytes
  7646 ;; Hardware stack levels used: 1
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_main
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text31
  7655   005400                     __ptext31:
  7656                           	callstack 0
  7657   005400                     _initDCmotorsPWM:
  7658                           	callstack 30
  7659   005400                     
  7660                           ;dc_motor.c: 10:     RE2PPS=0x05;
  7661   005400  0E05               	movlw	5
  7662   005402  010E               	movlb	14	; () banked
  7663   005404  6F74               	movwf	116,b	;volatile
  7664                           
  7665                           ;dc_motor.c: 11:     RE4PPS=0x06;
  7666   005406  0E06               	movlw	6
  7667   005408  6F76               	movwf	118,b	;volatile
  7668                           
  7669                           ;dc_motor.c: 12:     RC7PPS=0x07;
  7670   00540A  0E07               	movlw	7
  7671   00540C  6F69               	movwf	105,b	;volatile
  7672                           
  7673                           ;dc_motor.c: 13:     RG6PPS=0x08;
  7674   00540E  0E08               	movlw	8
  7675   005410  6F88               	movwf	136,b	;volatile
  7676   005412                     
  7677                           ; BSR set to: 14
  7678                           ;dc_motor.c: 16:     TRISEbits.TRISE2=0;
  7679   005412  9485               	bcf	133,2,c	;volatile
  7680   005414                     
  7681                           ; BSR set to: 14
  7682                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  7683   005414  9885               	bcf	133,4,c	;volatile
  7684   005416                     
  7685                           ; BSR set to: 14
  7686                           ;dc_motor.c: 18:     TRISCbits.TRISC7=0;
  7687   005416  9E83               	bcf	131,7,c	;volatile
  7688   005418                     
  7689                           ; BSR set to: 14
  7690                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  7691   005418  9C87               	bcf	135,6,c	;volatile
  7692                           
  7693                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  7694   00541A  50BD               	movf	189,w,c	;volatile
  7695   00541C  0B8F               	andlw	-113
  7696   00541E  0930               	iorlw	48
  7697   005420  6EBD               	movwf	189,c	;volatile
  7698                           
  7699                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  7700   005422  0EE0               	movlw	-32
  7701   005424  16BE               	andwf	190,f,c	;volatile
  7702                           
  7703                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  7704   005426  50BF               	movf	191,w,c	;volatile
  7705   005428  0BF0               	andlw	-16
  7706   00542A  0901               	iorlw	1
  7707   00542C  6EBF               	movwf	191,c	;volatile
  7708   00542E                     
  7709                           ; BSR set to: 14
  7710                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  7711   00542E  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7712   005432                     
  7713                           ; BSR set to: 14
  7714                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  7715   005432  8EBD               	bsf	189,7,c	;volatile
  7716                           
  7717                           ;dc_motor.c: 34:     CCPR1H=0;
  7718   005434  0E00               	movlw	0
  7719   005436  6EAA               	movwf	170,c	;volatile
  7720                           
  7721                           ;dc_motor.c: 35:     CCPR2H=0;
  7722   005438  0E00               	movlw	0
  7723   00543A  6EA6               	movwf	166,c	;volatile
  7724                           
  7725                           ;dc_motor.c: 36:     CCPR3H=0;
  7726   00543C  0E00               	movlw	0
  7727   00543E  010F               	movlb	15	; () banked
  7728   005440  6F25               	movwf	37,b	;volatile
  7729                           
  7730                           ;dc_motor.c: 37:     CCPR4H=0;
  7731   005442  0E00               	movlw	0
  7732   005444  6F21               	movwf	33,b	;volatile
  7733                           
  7734                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  7735   005446  0EFC               	movlw	-4
  7736   005448  16AD               	andwf	173,f,c	;volatile
  7737                           
  7738                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  7739   00544A  0EF3               	movlw	-13
  7740   00544C  16AD               	andwf	173,f,c	;volatile
  7741                           
  7742                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  7743   00544E  0ECF               	movlw	-49
  7744   005450  16AD               	andwf	173,f,c	;volatile
  7745                           
  7746                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  7747   005452  0E3F               	movlw	-193
  7748   005454  16AD               	andwf	173,f,c	;volatile
  7749   005456                     
  7750                           ; BSR set to: 15
  7751                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  7752   005456  88AB               	bsf	171,4,c	;volatile
  7753                           
  7754                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  7755   005458  50AB               	movf	171,w,c	;volatile
  7756   00545A  0BF0               	andlw	-16
  7757   00545C  090C               	iorlw	12
  7758   00545E  6EAB               	movwf	171,c	;volatile
  7759   005460                     
  7760                           ; BSR set to: 15
  7761                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  7762   005460  8EAB               	bsf	171,7,c	;volatile
  7763   005462                     
  7764                           ; BSR set to: 15
  7765                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  7766   005462  88A7               	bsf	167,4,c	;volatile
  7767                           
  7768                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  7769   005464  50A7               	movf	167,w,c	;volatile
  7770   005466  0BF0               	andlw	-16
  7771   005468  090C               	iorlw	12
  7772   00546A  6EA7               	movwf	167,c	;volatile
  7773   00546C                     
  7774                           ; BSR set to: 15
  7775                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  7776   00546C  8EA7               	bsf	167,7,c	;volatile
  7777   00546E                     
  7778                           ; BSR set to: 15
  7779                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  7780   00546E  8926               	bsf	38,4,b	;volatile
  7781                           
  7782                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  7783   005470  5126               	movf	38,w,b	;volatile
  7784   005472  0BF0               	andlw	-16
  7785   005474  090C               	iorlw	12
  7786   005476  6F26               	movwf	38,b	;volatile
  7787   005478                     
  7788                           ; BSR set to: 15
  7789                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  7790   005478  8F26               	bsf	38,7,b	;volatile
  7791   00547A                     
  7792                           ; BSR set to: 15
  7793                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  7794   00547A  8922               	bsf	34,4,b	;volatile
  7795                           
  7796                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  7797   00547C  5122               	movf	34,w,b	;volatile
  7798   00547E  0BF0               	andlw	-16
  7799   005480  090C               	iorlw	12
  7800   005482  6F22               	movwf	34,b	;volatile
  7801   005484                     
  7802                           ; BSR set to: 15
  7803                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  7804   005484  8F22               	bsf	34,7,b	;volatile
  7805   005486                     
  7806                           ; BSR set to: 15
  7807   005486  0012               	return		;funcret
  7808   005488                     __end_of_initDCmotorsPWM:
  7809                           	callstack 0
  7810                           
  7811 ;; *************** function _go_Home *****************
  7812 ;; Defined at:
  7813 ;;		line 4 in file "Memory.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  7816 ;;		 -> WayBack(50), 
  7817 ;;  Time_forward    2   37[COMRAM] PTR int 
  7818 ;;		 -> Time_forward(100), 
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;  i               2   42[COMRAM] int 
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      void 
  7823 ;; Registers used:
  7824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7830 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7832 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7833 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7834 ;;Total ram usage:        9 bytes
  7835 ;; Hardware stack levels used: 1
  7836 ;; Hardware stack levels required when called: 5
  7837 ;; This function calls:
  7838 ;;		_BlueMove
  7839 ;;		_GreenMove
  7840 ;;		_LightBlueMove
  7841 ;;		_OrangeMove
  7842 ;;		_RedMove
  7843 ;;		_ReversePink
  7844 ;;		_ReverseYellow
  7845 ;;		_reverseDetect
  7846 ;;		_timed_forward
  7847 ;; This function is called by:
  7848 ;;		_main
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           	psect	text32
  7853   003BCE                     __ptext32:
  7854                           	callstack 0
  7855   003BCE                     _go_Home:
  7856                           	callstack 25
  7857   003BCE                     
  7858                           ;Memory.c: 5:     int i;;Memory.c: 6:         for (i = move_count; i >= 0; i--){
  7859   003BCE  C17C  F02B         	movff	_move_count,go_Home@i	;volatile
  7860   003BD2  C17D  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  7861   003BD6                     l5679:
  7862   003BD6  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  7863   003BD8  EFF2  F01D         	goto	u5680
  7864   003BDC  EFF0  F01D         	goto	u5681
  7865   003BE0                     u5681:
  7866   003BE0  EFF4  F01D         	goto	l5683
  7867   003BE4                     u5680:
  7868   003BE4  EF3C  F01F         	goto	l665
  7869   003BE8                     l5683:
  7870                           
  7871                           ;Memory.c: 9:             timed_forward(&motorL, &motorR,Time_forward[i]);
  7872   003BE8  0EC5               	movlw	low _motorL
  7873   003BEA  6E14               	movwf	timed_forward@mL^0,c
  7874   003BEC  0E01               	movlw	high _motorL
  7875   003BEE  6E15               	movwf	(timed_forward@mL+1)^0,c
  7876   003BF0  0EBC               	movlw	low _motorR
  7877   003BF2  6E16               	movwf	timed_forward@mR^0,c
  7878   003BF4  0E01               	movlw	high _motorR
  7879   003BF6  6E17               	movwf	(timed_forward@mR+1)^0,c
  7880   003BF8  90D8               	bcf	status,0,c
  7881   003BFA  342B               	rlcf	go_Home@i^0,w,c
  7882   003BFC  6ED9               	movwf	fsr2l,c
  7883   003BFE  342C               	rlcf	(go_Home@i+1)^0,w,c
  7884   003C00  6EDA               	movwf	fsr2h,c
  7885   003C02  5026               	movf	go_Home@Time_forward^0,w,c
  7886   003C04  26D9               	addwf	fsr2l,f,c
  7887   003C06  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  7888   003C08  22DA               	addwfc	fsr2h,f,c
  7889   003C0A  CFDE F018          	movff	postinc2,timed_forward@time
  7890   003C0E  CFDD F019          	movff	postdec2,timed_forward@time+1
  7891   003C12  EC1A  F028         	call	_timed_forward	;wreg free
  7892   003C16                     
  7893                           ;Memory.c: 12:             if (WayBack[i-1]==1){
  7894   003C16  502B               	movf	go_Home@i^0,w,c
  7895   003C18  2424               	addwf	go_Home@WayBack^0,w,c
  7896   003C1A  6E28               	movwf	??_go_Home^0,c
  7897   003C1C  502C               	movf	(go_Home@i+1)^0,w,c
  7898   003C1E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7899   003C20  6E29               	movwf	(??_go_Home+1)^0,c
  7900   003C22  0EFF               	movlw	255
  7901   003C24  2428               	addwf	??_go_Home^0,w,c
  7902   003C26  6ED9               	movwf	fsr2l,c
  7903   003C28  0EFF               	movlw	255
  7904   003C2A  2029               	addwfc	(??_go_Home+1)^0,w,c
  7905   003C2C  6EDA               	movwf	fsr2h,c
  7906   003C2E  04DE               	decf	postinc2,w,c
  7907   003C30  A4D8               	btfss	status,2,c
  7908   003C32  EF1D  F01E         	goto	u5691
  7909   003C36  EF1F  F01E         	goto	u5690
  7910   003C3A                     u5691:
  7911   003C3A  EF35  F01E         	goto	l5689
  7912   003C3E                     u5690:
  7913   003C3E                     
  7914                           ;Memory.c: 13:                 reverseDetect(&motorL, &motorR);
  7915   003C3E  0EC5               	movlw	low _motorL
  7916   003C40  6E1A               	movwf	reverseDetect@mL^0,c
  7917   003C42  0E01               	movlw	high _motorL
  7918   003C44  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7919   003C46  0EBC               	movlw	low _motorR
  7920   003C48  6E1C               	movwf	reverseDetect@mR^0,c
  7921   003C4A  0E01               	movlw	high _motorR
  7922   003C4C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7923   003C4E  EC5C  F02C         	call	_reverseDetect	;wreg free
  7924                           
  7925                           ;Memory.c: 14:                 GreenMove(&motorL, &motorR);
  7926   003C52  0EC5               	movlw	low _motorL
  7927   003C54  6E20               	movwf	GreenMove@mL^0,c
  7928   003C56  0E01               	movlw	high _motorL
  7929   003C58  6E21               	movwf	(GreenMove@mL+1)^0,c
  7930   003C5A  0EBC               	movlw	low _motorR
  7931   003C5C  6E22               	movwf	GreenMove@mR^0,c
  7932   003C5E  0E01               	movlw	high _motorR
  7933   003C60  6E23               	movwf	(GreenMove@mR+1)^0,c
  7934   003C62  ECB4  F02F         	call	_GreenMove	;wreg free
  7935                           
  7936                           ;Memory.c: 15:             }
  7937   003C66  EF37  F01F         	goto	l5713
  7938   003C6A                     l5689:
  7939   003C6A  502B               	movf	go_Home@i^0,w,c
  7940   003C6C  2424               	addwf	go_Home@WayBack^0,w,c
  7941   003C6E  6E28               	movwf	??_go_Home^0,c
  7942   003C70  502C               	movf	(go_Home@i+1)^0,w,c
  7943   003C72  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7944   003C74  6E29               	movwf	(??_go_Home+1)^0,c
  7945   003C76  0EFF               	movlw	255
  7946   003C78  2428               	addwf	??_go_Home^0,w,c
  7947   003C7A  6ED9               	movwf	fsr2l,c
  7948   003C7C  0EFF               	movlw	255
  7949   003C7E  2029               	addwfc	(??_go_Home+1)^0,w,c
  7950   003C80  6EDA               	movwf	fsr2h,c
  7951   003C82  0E02               	movlw	2
  7952   003C84  18DE               	xorwf	postinc2,w,c
  7953   003C86  A4D8               	btfss	status,2,c
  7954   003C88  EF48  F01E         	goto	u5701
  7955   003C8C  EF4A  F01E         	goto	u5700
  7956   003C90                     u5701:
  7957   003C90  EF60  F01E         	goto	l5693
  7958   003C94                     u5700:
  7959   003C94                     
  7960                           ;Memory.c: 17:                 reverseDetect(&motorL, &motorR);
  7961   003C94  0EC5               	movlw	low _motorL
  7962   003C96  6E1A               	movwf	reverseDetect@mL^0,c
  7963   003C98  0E01               	movlw	high _motorL
  7964   003C9A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7965   003C9C  0EBC               	movlw	low _motorR
  7966   003C9E  6E1C               	movwf	reverseDetect@mR^0,c
  7967   003CA0  0E01               	movlw	high _motorR
  7968   003CA2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7969   003CA4  EC5C  F02C         	call	_reverseDetect	;wreg free
  7970                           
  7971                           ;Memory.c: 18:                 LightBlueMove(&motorL, &motorR);
  7972   003CA8  0EC5               	movlw	low _motorL
  7973   003CAA  6E20               	movwf	LightBlueMove@mL^0,c
  7974   003CAC  0E01               	movlw	high _motorL
  7975   003CAE  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7976   003CB0  0EBC               	movlw	low _motorR
  7977   003CB2  6E22               	movwf	LightBlueMove@mR^0,c
  7978   003CB4  0E01               	movlw	high _motorR
  7979   003CB6  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7980   003CB8  EC33  F02D         	call	_LightBlueMove	;wreg free
  7981                           
  7982                           ;Memory.c: 19:             }
  7983   003CBC  EF37  F01F         	goto	l5713
  7984   003CC0                     l5693:
  7985   003CC0  502B               	movf	go_Home@i^0,w,c
  7986   003CC2  2424               	addwf	go_Home@WayBack^0,w,c
  7987   003CC4  6E28               	movwf	??_go_Home^0,c
  7988   003CC6  502C               	movf	(go_Home@i+1)^0,w,c
  7989   003CC8  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7990   003CCA  6E29               	movwf	(??_go_Home+1)^0,c
  7991   003CCC  0EFF               	movlw	255
  7992   003CCE  2428               	addwf	??_go_Home^0,w,c
  7993   003CD0  6ED9               	movwf	fsr2l,c
  7994   003CD2  0EFF               	movlw	255
  7995   003CD4  2029               	addwfc	(??_go_Home+1)^0,w,c
  7996   003CD6  6EDA               	movwf	fsr2h,c
  7997   003CD8  0E03               	movlw	3
  7998   003CDA  18DE               	xorwf	postinc2,w,c
  7999   003CDC  A4D8               	btfss	status,2,c
  8000   003CDE  EF73  F01E         	goto	u5711
  8001   003CE2  EF75  F01E         	goto	u5710
  8002   003CE6                     u5711:
  8003   003CE6  EF8B  F01E         	goto	l5697
  8004   003CEA                     u5710:
  8005   003CEA                     
  8006                           ;Memory.c: 21:                 reverseDetect(&motorL, &motorR);
  8007   003CEA  0EC5               	movlw	low _motorL
  8008   003CEC  6E1A               	movwf	reverseDetect@mL^0,c
  8009   003CEE  0E01               	movlw	high _motorL
  8010   003CF0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8011   003CF2  0EBC               	movlw	low _motorR
  8012   003CF4  6E1C               	movwf	reverseDetect@mR^0,c
  8013   003CF6  0E01               	movlw	high _motorR
  8014   003CF8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8015   003CFA  EC5C  F02C         	call	_reverseDetect	;wreg free
  8016                           
  8017                           ;Memory.c: 22:                 ReverseYellow(&motorL, &motorR);
  8018   003CFE  0EC5               	movlw	low _motorL
  8019   003D00  6E20               	movwf	ReverseYellow@mL^0,c
  8020   003D02  0E01               	movlw	high _motorL
  8021   003D04  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  8022   003D06  0EBC               	movlw	low _motorR
  8023   003D08  6E22               	movwf	ReverseYellow@mR^0,c
  8024   003D0A  0E01               	movlw	high _motorR
  8025   003D0C  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  8026   003D0E  EC64  F027         	call	_ReverseYellow	;wreg free
  8027                           
  8028                           ;Memory.c: 23:             }
  8029   003D12  EF37  F01F         	goto	l5713
  8030   003D16                     l5697:
  8031   003D16  502B               	movf	go_Home@i^0,w,c
  8032   003D18  2424               	addwf	go_Home@WayBack^0,w,c
  8033   003D1A  6E28               	movwf	??_go_Home^0,c
  8034   003D1C  502C               	movf	(go_Home@i+1)^0,w,c
  8035   003D1E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8036   003D20  6E29               	movwf	(??_go_Home+1)^0,c
  8037   003D22  0EFF               	movlw	255
  8038   003D24  2428               	addwf	??_go_Home^0,w,c
  8039   003D26  6ED9               	movwf	fsr2l,c
  8040   003D28  0EFF               	movlw	255
  8041   003D2A  2029               	addwfc	(??_go_Home+1)^0,w,c
  8042   003D2C  6EDA               	movwf	fsr2h,c
  8043   003D2E  0E04               	movlw	4
  8044   003D30  18DE               	xorwf	postinc2,w,c
  8045   003D32  A4D8               	btfss	status,2,c
  8046   003D34  EF9E  F01E         	goto	u5721
  8047   003D38  EFA0  F01E         	goto	u5720
  8048   003D3C                     u5721:
  8049   003D3C  EFB6  F01E         	goto	l5701
  8050   003D40                     u5720:
  8051   003D40                     
  8052                           ;Memory.c: 25:                 reverseDetect(&motorL, &motorR);
  8053   003D40  0EC5               	movlw	low _motorL
  8054   003D42  6E1A               	movwf	reverseDetect@mL^0,c
  8055   003D44  0E01               	movlw	high _motorL
  8056   003D46  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8057   003D48  0EBC               	movlw	low _motorR
  8058   003D4A  6E1C               	movwf	reverseDetect@mR^0,c
  8059   003D4C  0E01               	movlw	high _motorR
  8060   003D4E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8061   003D50  EC5C  F02C         	call	_reverseDetect	;wreg free
  8062                           
  8063                           ;Memory.c: 26:                 BlueMove(&motorL, &motorR);
  8064   003D54  0EC5               	movlw	low _motorL
  8065   003D56  6E20               	movwf	BlueMove@mL^0,c
  8066   003D58  0E01               	movlw	high _motorL
  8067   003D5A  6E21               	movwf	(BlueMove@mL+1)^0,c
  8068   003D5C  0EBC               	movlw	low _motorR
  8069   003D5E  6E22               	movwf	BlueMove@mR^0,c
  8070   003D60  0E01               	movlw	high _motorR
  8071   003D62  6E23               	movwf	(BlueMove@mR+1)^0,c
  8072   003D64  EC6E  F02B         	call	_BlueMove	;wreg free
  8073                           
  8074                           ;Memory.c: 27:             }
  8075   003D68  EF37  F01F         	goto	l5713
  8076   003D6C                     l5701:
  8077   003D6C  502B               	movf	go_Home@i^0,w,c
  8078   003D6E  2424               	addwf	go_Home@WayBack^0,w,c
  8079   003D70  6E28               	movwf	??_go_Home^0,c
  8080   003D72  502C               	movf	(go_Home@i+1)^0,w,c
  8081   003D74  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8082   003D76  6E29               	movwf	(??_go_Home+1)^0,c
  8083   003D78  0EFF               	movlw	255
  8084   003D7A  2428               	addwf	??_go_Home^0,w,c
  8085   003D7C  6ED9               	movwf	fsr2l,c
  8086   003D7E  0EFF               	movlw	255
  8087   003D80  2029               	addwfc	(??_go_Home+1)^0,w,c
  8088   003D82  6EDA               	movwf	fsr2h,c
  8089   003D84  0E05               	movlw	5
  8090   003D86  18DE               	xorwf	postinc2,w,c
  8091   003D88  A4D8               	btfss	status,2,c
  8092   003D8A  EFC9  F01E         	goto	u5731
  8093   003D8E  EFCB  F01E         	goto	u5730
  8094   003D92                     u5731:
  8095   003D92  EFE1  F01E         	goto	l5705
  8096   003D96                     u5730:
  8097   003D96                     
  8098                           ;Memory.c: 29:                 reverseDetect(&motorL, &motorR);
  8099   003D96  0EC5               	movlw	low _motorL
  8100   003D98  6E1A               	movwf	reverseDetect@mL^0,c
  8101   003D9A  0E01               	movlw	high _motorL
  8102   003D9C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8103   003D9E  0EBC               	movlw	low _motorR
  8104   003DA0  6E1C               	movwf	reverseDetect@mR^0,c
  8105   003DA2  0E01               	movlw	high _motorR
  8106   003DA4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8107   003DA6  EC5C  F02C         	call	_reverseDetect	;wreg free
  8108                           
  8109                           ;Memory.c: 30:                 RedMove(&motorL, &motorR);
  8110   003DAA  0EC5               	movlw	low _motorL
  8111   003DAC  6E20               	movwf	RedMove@mL^0,c
  8112   003DAE  0E01               	movlw	high _motorL
  8113   003DB0  6E21               	movwf	(RedMove@mL+1)^0,c
  8114   003DB2  0EBC               	movlw	low _motorR
  8115   003DB4  6E22               	movwf	RedMove@mR^0,c
  8116   003DB6  0E01               	movlw	high _motorR
  8117   003DB8  6E23               	movwf	(RedMove@mR+1)^0,c
  8118   003DBA  EC95  F02F         	call	_RedMove	;wreg free
  8119                           
  8120                           ;Memory.c: 31:             }
  8121   003DBE  EF37  F01F         	goto	l5713
  8122   003DC2                     l5705:
  8123   003DC2  502B               	movf	go_Home@i^0,w,c
  8124   003DC4  2424               	addwf	go_Home@WayBack^0,w,c
  8125   003DC6  6E28               	movwf	??_go_Home^0,c
  8126   003DC8  502C               	movf	(go_Home@i+1)^0,w,c
  8127   003DCA  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8128   003DCC  6E29               	movwf	(??_go_Home+1)^0,c
  8129   003DCE  0EFF               	movlw	255
  8130   003DD0  2428               	addwf	??_go_Home^0,w,c
  8131   003DD2  6ED9               	movwf	fsr2l,c
  8132   003DD4  0EFF               	movlw	255
  8133   003DD6  2029               	addwfc	(??_go_Home+1)^0,w,c
  8134   003DD8  6EDA               	movwf	fsr2h,c
  8135   003DDA  0E06               	movlw	6
  8136   003DDC  18DE               	xorwf	postinc2,w,c
  8137   003DDE  A4D8               	btfss	status,2,c
  8138   003DE0  EFF4  F01E         	goto	u5741
  8139   003DE4  EFF6  F01E         	goto	u5740
  8140   003DE8                     u5741:
  8141   003DE8  EF0C  F01F         	goto	l5709
  8142   003DEC                     u5740:
  8143   003DEC                     
  8144                           ;Memory.c: 33:                 reverseDetect(&motorL, &motorR);
  8145   003DEC  0EC5               	movlw	low _motorL
  8146   003DEE  6E1A               	movwf	reverseDetect@mL^0,c
  8147   003DF0  0E01               	movlw	high _motorL
  8148   003DF2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8149   003DF4  0EBC               	movlw	low _motorR
  8150   003DF6  6E1C               	movwf	reverseDetect@mR^0,c
  8151   003DF8  0E01               	movlw	high _motorR
  8152   003DFA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8153   003DFC  EC5C  F02C         	call	_reverseDetect	;wreg free
  8154                           
  8155                           ;Memory.c: 34:                 OrangeMove(&motorL, &motorR);
  8156   003E00  0EC5               	movlw	low _motorL
  8157   003E02  6E20               	movwf	OrangeMove@mL^0,c
  8158   003E04  0E01               	movlw	high _motorL
  8159   003E06  6E21               	movwf	(OrangeMove@mL+1)^0,c
  8160   003E08  0EBC               	movlw	low _motorR
  8161   003E0A  6E22               	movwf	OrangeMove@mR^0,c
  8162   003E0C  0E01               	movlw	high _motorR
  8163   003E0E  6E23               	movwf	(OrangeMove@mR+1)^0,c
  8164   003E10  EC0A  F02D         	call	_OrangeMove	;wreg free
  8165                           
  8166                           ;Memory.c: 35:             }
  8167   003E14  EF37  F01F         	goto	l5713
  8168   003E18                     l5709:
  8169   003E18  502B               	movf	go_Home@i^0,w,c
  8170   003E1A  2424               	addwf	go_Home@WayBack^0,w,c
  8171   003E1C  6E28               	movwf	??_go_Home^0,c
  8172   003E1E  502C               	movf	(go_Home@i+1)^0,w,c
  8173   003E20  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8174   003E22  6E29               	movwf	(??_go_Home+1)^0,c
  8175   003E24  0EFF               	movlw	255
  8176   003E26  2428               	addwf	??_go_Home^0,w,c
  8177   003E28  6ED9               	movwf	fsr2l,c
  8178   003E2A  0EFF               	movlw	255
  8179   003E2C  2029               	addwfc	(??_go_Home+1)^0,w,c
  8180   003E2E  6EDA               	movwf	fsr2h,c
  8181   003E30  0E07               	movlw	7
  8182   003E32  18DE               	xorwf	postinc2,w,c
  8183   003E34  A4D8               	btfss	status,2,c
  8184   003E36  EF1F  F01F         	goto	u5751
  8185   003E3A  EF21  F01F         	goto	u5750
  8186   003E3E                     u5751:
  8187   003E3E  EF37  F01F         	goto	l659
  8188   003E42                     u5750:
  8189   003E42                     
  8190                           ;Memory.c: 37:                 reverseDetect(&motorL, &motorR);
  8191   003E42  0EC5               	movlw	low _motorL
  8192   003E44  6E1A               	movwf	reverseDetect@mL^0,c
  8193   003E46  0E01               	movlw	high _motorL
  8194   003E48  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8195   003E4A  0EBC               	movlw	low _motorR
  8196   003E4C  6E1C               	movwf	reverseDetect@mR^0,c
  8197   003E4E  0E01               	movlw	high _motorR
  8198   003E50  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8199   003E52  EC5C  F02C         	call	_reverseDetect	;wreg free
  8200                           
  8201                           ;Memory.c: 38:                 ReversePink(&motorL, &motorR);
  8202   003E56  0EC5               	movlw	low _motorL
  8203   003E58  6E20               	movwf	ReversePink@mL^0,c
  8204   003E5A  0E01               	movlw	high _motorL
  8205   003E5C  6E21               	movwf	(ReversePink@mL+1)^0,c
  8206   003E5E  0EBC               	movlw	low _motorR
  8207   003E60  6E22               	movwf	ReversePink@mR^0,c
  8208   003E62  0E01               	movlw	high _motorR
  8209   003E64  6E23               	movwf	(ReversePink@mR+1)^0,c
  8210   003E66  ECBF  F027         	call	_ReversePink	;wreg free
  8211   003E6A  EF37  F01F         	goto	l5713
  8212   003E6E                     l659:
  8213   003E6E                     l5713:
  8214                           
  8215                           ;Memory.c: 42:       }
  8216   003E6E  062B               	decf	go_Home@i^0,f,c
  8217   003E70  A0D8               	btfss	status,0,c
  8218   003E72  062C               	decf	(go_Home@i+1)^0,f,c
  8219   003E74  EFEB  F01D         	goto	l5679
  8220   003E78                     l665:
  8221   003E78  0012               	return		;funcret
  8222   003E7A                     __end_of_go_Home:
  8223                           	callstack 0
  8224                           
  8225 ;; *************** function _timed_forward *****************
  8226 ;; Defined at:
  8227 ;;		line 165 in file "dc_motor.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8230 ;;		 -> motorL(9), 
  8231 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8232 ;;		 -> motorR(9), 
  8233 ;;  time            2   23[COMRAM] int 
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;		None
  8236 ;; Return value:  Size  Location     Type
  8237 ;;                  1    wreg      void 
  8238 ;; Registers used:
  8239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8240 ;; Tracked objects:
  8241 ;;		On entry : 0/0
  8242 ;;		On exit  : 0/0
  8243 ;;		Unchanged: 0/0
  8244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8245 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8247 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8248 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8249 ;;Total ram usage:        8 bytes
  8250 ;; Hardware stack levels used: 1
  8251 ;; Hardware stack levels required when called: 2
  8252 ;; This function calls:
  8253 ;;		_delayed_ms
  8254 ;;		_setMotorPWM
  8255 ;; This function is called by:
  8256 ;;		_go_Home
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           	psect	text33
  8261   005034                     __ptext33:
  8262                           	callstack 0
  8263   005034                     _timed_forward:
  8264                           	callstack 27
  8265   005034                     
  8266                           ;dc_motor.c: 165: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 166: {;dc_motor.c: 168:     mL->direction =1;
  8267   005034  EE20 F001          	lfsr	2,1
  8268   005038  5014               	movf	timed_forward@mL^0,w,c
  8269   00503A  26D9               	addwf	fsr2l,f,c
  8270   00503C  5015               	movf	(timed_forward@mL+1)^0,w,c
  8271   00503E  22DA               	addwfc	fsr2h,f,c
  8272   005040  0E01               	movlw	1
  8273   005042  6EDF               	movwf	indf2,c
  8274                           
  8275                           ;dc_motor.c: 169:     mR->direction =1;
  8276   005044  EE20 F001          	lfsr	2,1
  8277   005048  5016               	movf	timed_forward@mR^0,w,c
  8278   00504A  26D9               	addwf	fsr2l,f,c
  8279   00504C  5017               	movf	(timed_forward@mR+1)^0,w,c
  8280   00504E  22DA               	addwfc	fsr2h,f,c
  8281   005050  0E01               	movlw	1
  8282   005052  6EDF               	movwf	indf2,c
  8283                           
  8284                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
  8285   005054  EF50  F028         	goto	l5235
  8286   005058                     l5227:
  8287                           
  8288                           ;dc_motor.c: 172:         mL->power+=10;
  8289   005058  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8290   00505C  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8291   005060  0E0A               	movlw	10
  8292   005062  26DF               	addwf	indf2,f,c
  8293                           
  8294                           ;dc_motor.c: 173:         mR->power+=10;
  8295   005064  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8296   005068  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8297   00506C  0E0A               	movlw	10
  8298   00506E  26DF               	addwf	indf2,f,c
  8299   005070                     
  8300                           ;dc_motor.c: 175:         setMotorPWM(mL);
  8301   005070  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8302   005074  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8303   005078  EC13  F024         	call	_setMotorPWM	;wreg free
  8304   00507C                     
  8305                           ;dc_motor.c: 176:         setMotorPWM(mR);
  8306   00507C  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8307   005080  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8308   005084  EC13  F024         	call	_setMotorPWM	;wreg free
  8309   005088                     
  8310                           ;dc_motor.c: 179:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8311   005088  0E02               	movlw	2
  8312   00508A  6E1B               	movwf	(??_timed_forward+1)^0,c
  8313   00508C  0EA0               	movlw	160
  8314   00508E  6E1A               	movwf	??_timed_forward^0,c
  8315   005090  0E92               	movlw	146
  8316   005092                     u6137:
  8317   005092  2EE8               	decfsz	wreg,f,c
  8318   005094  D7FE               	bra	u6137
  8319   005096  2E1A               	decfsz	??_timed_forward^0,f,c
  8320   005098  D7FC               	bra	u6137
  8321   00509A  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8322   00509C  D7FA               	bra	u6137
  8323   00509E  D000               	nop2	
  8324   0050A0                     l5235:
  8325   0050A0  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8326   0050A4  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8327   0050A8  0E1E               	movlw	30
  8328   0050AA  60DF               	cpfslt	indf2,c
  8329   0050AC  EF5A  F028         	goto	u5081
  8330   0050B0  EF5C  F028         	goto	u5080
  8331   0050B4                     u5081:
  8332   0050B4  EF68  F028         	goto	l5239
  8333   0050B8                     u5080:
  8334   0050B8  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8335   0050BC  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8336   0050C0  0E1D               	movlw	29
  8337   0050C2  64DF               	cpfsgt	indf2,c
  8338   0050C4  EF66  F028         	goto	u5091
  8339   0050C8  EF68  F028         	goto	u5090
  8340   0050CC                     u5091:
  8341   0050CC  EF2C  F028         	goto	l5227
  8342   0050D0                     u5090:
  8343   0050D0                     l5239:
  8344                           
  8345                           ;dc_motor.c: 181:     delayed_ms(time);
  8346   0050D0  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8347   0050D4  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8348   0050D8  ECEF  F02F         	call	_delayed_ms	;wreg free
  8349   0050DC  0012               	return		;funcret
  8350   0050DE                     __end_of_timed_forward:
  8351                           	callstack 0
  8352                           
  8353 ;; *************** function _delayed_ms *****************
  8354 ;; Defined at:
  8355 ;;		line 39 in file "timers.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;  time            2    0[COMRAM] int 
  8358 ;; Auto vars:     Size  Location     Type
  8359 ;;  i               2    3[COMRAM] unsigned int 
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  1    wreg      void 
  8362 ;; Registers used:
  8363 ;;		wreg, status,2, status,0
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/0
  8366 ;;		On exit  : 0/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8370 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8372 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8373 ;;Total ram usage:        5 bytes
  8374 ;; Hardware stack levels used: 1
  8375 ;; This function calls:
  8376 ;;		Nothing
  8377 ;; This function is called by:
  8378 ;;		_timed_forward
  8379 ;; This function uses a non-reentrant model
  8380 ;;
  8381                           
  8382                           	psect	text34
  8383   005FDE                     __ptext34:
  8384                           	callstack 0
  8385   005FDE                     _delayed_ms:
  8386                           	callstack 28
  8387   005FDE                     
  8388                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  8389   005FDE  0E00               	movlw	0
  8390   005FE0  6E05               	movwf	(delayed_ms@i+1)^0,c
  8391   005FE2  0E00               	movlw	0
  8392   005FE4  6E04               	movwf	delayed_ms@i^0,c
  8393   005FE6  EFFF  F02F         	goto	l694
  8394   005FEA                     l5059:
  8395                           
  8396                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
  8397   005FEA  0E15               	movlw	21
  8398   005FEC  6E03               	movwf	??_delayed_ms^0,c
  8399   005FEE  0EC6               	movlw	198
  8400   005FF0                     u6147:
  8401   005FF0  2EE8               	decfsz	wreg,f,c
  8402   005FF2  D7FE               	bra	u6147
  8403   005FF4  2E03               	decfsz	??_delayed_ms^0,f,c
  8404   005FF6  D7FC               	bra	u6147
  8405   005FF8  D000               	nop2	
  8406   005FFA                     
  8407                           ;timers.c: 42:     }
  8408   005FFA  4A04               	infsnz	delayed_ms@i^0,f,c
  8409   005FFC  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8410   005FFE                     l694:
  8411   005FFE  5001               	movf	delayed_ms@time^0,w,c
  8412   006000  5C04               	subwf	delayed_ms@i^0,w,c
  8413   006002  5002               	movf	(delayed_ms@time+1)^0,w,c
  8414   006004  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8415   006006  A0D8               	btfss	status,0,c
  8416   006008  EF08  F030         	goto	u5021
  8417   00600C  EF0A  F030         	goto	u5020
  8418   006010                     u5021:
  8419   006010  EFF5  F02F         	goto	l5059
  8420   006014                     u5020:
  8421   006014  0012               	return		;funcret
  8422   006016                     __end_of_delayed_ms:
  8423                           	callstack 0
  8424                           
  8425 ;; *************** function _ReverseYellow *****************
  8426 ;; Defined at:
  8427 ;;		line 334 in file "dc_motor.c"
  8428 ;; Parameters:    Size  Location     Type
  8429 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8430 ;;		 -> motorL(9), 
  8431 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8432 ;;		 -> motorR(9), 
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;		None
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  1    wreg      void 
  8437 ;; Registers used:
  8438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8444 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8447 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8448 ;;Total ram usage:        4 bytes
  8449 ;; Hardware stack levels used: 1
  8450 ;; Hardware stack levels required when called: 4
  8451 ;; This function calls:
  8452 ;;		_ForwardOneBlock
  8453 ;;		_reverseDetect
  8454 ;;		_turnRight45
  8455 ;; This function is called by:
  8456 ;;		_go_Home
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460                           	psect	text35
  8461   004EC8                     __ptext35:
  8462                           	callstack 0
  8463   004EC8                     _ReverseYellow:
  8464                           	callstack 25
  8465   004EC8                     
  8466                           ;dc_motor.c: 335:     reverseDetect(&motorL, &motorR);
  8467   004EC8  0EC5               	movlw	low _motorL
  8468   004ECA  6E1A               	movwf	reverseDetect@mL^0,c
  8469   004ECC  0E01               	movlw	high _motorL
  8470   004ECE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8471   004ED0  0EBC               	movlw	low _motorR
  8472   004ED2  6E1C               	movwf	reverseDetect@mR^0,c
  8473   004ED4  0E01               	movlw	high _motorR
  8474   004ED6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8475   004ED8  EC5C  F02C         	call	_reverseDetect	;wreg free
  8476                           
  8477                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
  8478   004EDC  0EC5               	movlw	low _motorL
  8479   004EDE  6E1A               	movwf	turnRight45@mL^0,c
  8480   004EE0  0E01               	movlw	high _motorL
  8481   004EE2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8482   004EE4  0EBC               	movlw	low _motorR
  8483   004EE6  6E1C               	movwf	turnRight45@mR^0,c
  8484   004EE8  0E01               	movlw	high _motorR
  8485   004EEA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8486   004EEC  EC9F  F02E         	call	_turnRight45	;wreg free
  8487                           
  8488                           ;dc_motor.c: 337:     turnRight45(&motorL, &motorR);
  8489   004EF0  0EC5               	movlw	low _motorL
  8490   004EF2  6E1A               	movwf	turnRight45@mL^0,c
  8491   004EF4  0E01               	movlw	high _motorL
  8492   004EF6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8493   004EF8  0EBC               	movlw	low _motorR
  8494   004EFA  6E1C               	movwf	turnRight45@mR^0,c
  8495   004EFC  0E01               	movlw	high _motorR
  8496   004EFE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8497   004F00  EC9F  F02E         	call	_turnRight45	;wreg free
  8498                           
  8499                           ;dc_motor.c: 338:     ForwardOneBlock(&motorL, &motorR);
  8500   004F04  0EC5               	movlw	low _motorL
  8501   004F06  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8502   004F08  0E01               	movlw	high _motorL
  8503   004F0A  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8504   004F0C  0EBC               	movlw	low _motorR
  8505   004F0E  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8506   004F10  0E01               	movlw	high _motorR
  8507   004F12  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8508   004F14  EC02  F02C         	call	_ForwardOneBlock	;wreg free
  8509                           
  8510                           ;dc_motor.c: 339:     reverseDetect(&motorL, &motorR);
  8511   004F18  0EC5               	movlw	low _motorL
  8512   004F1A  6E1A               	movwf	reverseDetect@mL^0,c
  8513   004F1C  0E01               	movlw	high _motorL
  8514   004F1E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8515   004F20  0EBC               	movlw	low _motorR
  8516   004F22  6E1C               	movwf	reverseDetect@mR^0,c
  8517   004F24  0E01               	movlw	high _motorR
  8518   004F26  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8519   004F28  EC5C  F02C         	call	_reverseDetect	;wreg free
  8520                           
  8521                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  8522   004F2C  0EC5               	movlw	low _motorL
  8523   004F2E  6E1A               	movwf	turnRight45@mL^0,c
  8524   004F30  0E01               	movlw	high _motorL
  8525   004F32  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8526   004F34  0EBC               	movlw	low _motorR
  8527   004F36  6E1C               	movwf	turnRight45@mR^0,c
  8528   004F38  0E01               	movlw	high _motorR
  8529   004F3A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8530   004F3C  EC9F  F02E         	call	_turnRight45	;wreg free
  8531                           
  8532                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  8533   004F40  0EC5               	movlw	low _motorL
  8534   004F42  6E1A               	movwf	turnRight45@mL^0,c
  8535   004F44  0E01               	movlw	high _motorL
  8536   004F46  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8537   004F48  0EBC               	movlw	low _motorR
  8538   004F4A  6E1C               	movwf	turnRight45@mR^0,c
  8539   004F4C  0E01               	movlw	high _motorR
  8540   004F4E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8541   004F50  EC9F  F02E         	call	_turnRight45	;wreg free
  8542                           
  8543                           ;dc_motor.c: 342:     turnRight45(&motorL, &motorR);
  8544   004F54  0EC5               	movlw	low _motorL
  8545   004F56  6E1A               	movwf	turnRight45@mL^0,c
  8546   004F58  0E01               	movlw	high _motorL
  8547   004F5A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8548   004F5C  0EBC               	movlw	low _motorR
  8549   004F5E  6E1C               	movwf	turnRight45@mR^0,c
  8550   004F60  0E01               	movlw	high _motorR
  8551   004F62  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8552   004F64  EC9F  F02E         	call	_turnRight45	;wreg free
  8553                           
  8554                           ;dc_motor.c: 343:     turnRight45(&motorL, &motorR);
  8555   004F68  0EC5               	movlw	low _motorL
  8556   004F6A  6E1A               	movwf	turnRight45@mL^0,c
  8557   004F6C  0E01               	movlw	high _motorL
  8558   004F6E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8559   004F70  0EBC               	movlw	low _motorR
  8560   004F72  6E1C               	movwf	turnRight45@mR^0,c
  8561   004F74  0E01               	movlw	high _motorR
  8562   004F76  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8563   004F78  EC9F  F02E         	call	_turnRight45	;wreg free
  8564   004F7C  0012               	return		;funcret
  8565   004F7E                     __end_of_ReverseYellow:
  8566                           	callstack 0
  8567                           
  8568 ;; *************** function _ReversePink *****************
  8569 ;; Defined at:
  8570 ;;		line 345 in file "dc_motor.c"
  8571 ;; Parameters:    Size  Location     Type
  8572 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8573 ;;		 -> motorL(9), 
  8574 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8575 ;;		 -> motorR(9), 
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;		None
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  1    wreg      void 
  8580 ;; Registers used:
  8581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8587 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8590 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8591 ;;Total ram usage:        4 bytes
  8592 ;; Hardware stack levels used: 1
  8593 ;; Hardware stack levels required when called: 4
  8594 ;; This function calls:
  8595 ;;		_ForwardOneBlock
  8596 ;;		_reverseDetect
  8597 ;;		_turnLeft45
  8598 ;; This function is called by:
  8599 ;;		_go_Home
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           	psect	text36
  8604   004F7E                     __ptext36:
  8605                           	callstack 0
  8606   004F7E                     _ReversePink:
  8607                           	callstack 25
  8608   004F7E                     
  8609                           ;dc_motor.c: 346:     reverseDetect(&motorL, &motorR);
  8610   004F7E  0EC5               	movlw	low _motorL
  8611   004F80  6E1A               	movwf	reverseDetect@mL^0,c
  8612   004F82  0E01               	movlw	high _motorL
  8613   004F84  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8614   004F86  0EBC               	movlw	low _motorR
  8615   004F88  6E1C               	movwf	reverseDetect@mR^0,c
  8616   004F8A  0E01               	movlw	high _motorR
  8617   004F8C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8618   004F8E  EC5C  F02C         	call	_reverseDetect	;wreg free
  8619                           
  8620                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
  8621   004F92  0EC5               	movlw	low _motorL
  8622   004F94  6E1A               	movwf	turnLeft45@mL^0,c
  8623   004F96  0E01               	movlw	high _motorL
  8624   004F98  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8625   004F9A  0EBC               	movlw	low _motorR
  8626   004F9C  6E1C               	movwf	turnLeft45@mR^0,c
  8627   004F9E  0E01               	movlw	high _motorR
  8628   004FA0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8629   004FA2  ECC6  F02E         	call	_turnLeft45	;wreg free
  8630                           
  8631                           ;dc_motor.c: 348:     turnLeft45(&motorL, &motorR);
  8632   004FA6  0EC5               	movlw	low _motorL
  8633   004FA8  6E1A               	movwf	turnLeft45@mL^0,c
  8634   004FAA  0E01               	movlw	high _motorL
  8635   004FAC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8636   004FAE  0EBC               	movlw	low _motorR
  8637   004FB0  6E1C               	movwf	turnLeft45@mR^0,c
  8638   004FB2  0E01               	movlw	high _motorR
  8639   004FB4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8640   004FB6  ECC6  F02E         	call	_turnLeft45	;wreg free
  8641                           
  8642                           ;dc_motor.c: 349:     ForwardOneBlock(&motorL, &motorR);
  8643   004FBA  0EC5               	movlw	low _motorL
  8644   004FBC  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8645   004FBE  0E01               	movlw	high _motorL
  8646   004FC0  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8647   004FC2  0EBC               	movlw	low _motorR
  8648   004FC4  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8649   004FC6  0E01               	movlw	high _motorR
  8650   004FC8  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8651   004FCA  EC02  F02C         	call	_ForwardOneBlock	;wreg free
  8652                           
  8653                           ;dc_motor.c: 350:     reverseDetect(&motorL, &motorR);
  8654   004FCE  0EC5               	movlw	low _motorL
  8655   004FD0  6E1A               	movwf	reverseDetect@mL^0,c
  8656   004FD2  0E01               	movlw	high _motorL
  8657   004FD4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8658   004FD6  0EBC               	movlw	low _motorR
  8659   004FD8  6E1C               	movwf	reverseDetect@mR^0,c
  8660   004FDA  0E01               	movlw	high _motorR
  8661   004FDC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8662   004FDE  EC5C  F02C         	call	_reverseDetect	;wreg free
  8663                           
  8664                           ;dc_motor.c: 351:     turnLeft45(&motorL, &motorR);
  8665   004FE2  0EC5               	movlw	low _motorL
  8666   004FE4  6E1A               	movwf	turnLeft45@mL^0,c
  8667   004FE6  0E01               	movlw	high _motorL
  8668   004FE8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8669   004FEA  0EBC               	movlw	low _motorR
  8670   004FEC  6E1C               	movwf	turnLeft45@mR^0,c
  8671   004FEE  0E01               	movlw	high _motorR
  8672   004FF0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8673   004FF2  ECC6  F02E         	call	_turnLeft45	;wreg free
  8674                           
  8675                           ;dc_motor.c: 352:     turnLeft45(&motorL, &motorR);
  8676   004FF6  0EC5               	movlw	low _motorL
  8677   004FF8  6E1A               	movwf	turnLeft45@mL^0,c
  8678   004FFA  0E01               	movlw	high _motorL
  8679   004FFC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8680   004FFE  0EBC               	movlw	low _motorR
  8681   005000  6E1C               	movwf	turnLeft45@mR^0,c
  8682   005002  0E01               	movlw	high _motorR
  8683   005004  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8684   005006  ECC6  F02E         	call	_turnLeft45	;wreg free
  8685                           
  8686                           ;dc_motor.c: 353:     turnLeft45(&motorL, &motorR);
  8687   00500A  0EC5               	movlw	low _motorL
  8688   00500C  6E1A               	movwf	turnLeft45@mL^0,c
  8689   00500E  0E01               	movlw	high _motorL
  8690   005010  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8691   005012  0EBC               	movlw	low _motorR
  8692   005014  6E1C               	movwf	turnLeft45@mR^0,c
  8693   005016  0E01               	movlw	high _motorR
  8694   005018  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8695   00501A  ECC6  F02E         	call	_turnLeft45	;wreg free
  8696                           
  8697                           ;dc_motor.c: 354:     turnLeft45(&motorL, &motorR);
  8698   00501E  0EC5               	movlw	low _motorL
  8699   005020  6E1A               	movwf	turnLeft45@mL^0,c
  8700   005022  0E01               	movlw	high _motorL
  8701   005024  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8702   005026  0EBC               	movlw	low _motorR
  8703   005028  6E1C               	movwf	turnLeft45@mR^0,c
  8704   00502A  0E01               	movlw	high _motorR
  8705   00502C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8706   00502E  ECC6  F02E         	call	_turnLeft45	;wreg free
  8707   005032  0012               	return		;funcret
  8708   005034                     __end_of_ReversePink:
  8709                           	callstack 0
  8710                           
  8711 ;; *************** function _ForwardOneBlock *****************
  8712 ;; Defined at:
  8713 ;;		line 238 in file "dc_motor.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8716 ;;		 -> motorL(9), 
  8717 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8718 ;;		 -> motorR(9), 
  8719 ;; Auto vars:     Size  Location     Type
  8720 ;;		None
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  1    wreg      void 
  8723 ;; Registers used:
  8724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8732 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8733 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8734 ;;Total ram usage:        6 bytes
  8735 ;; Hardware stack levels used: 1
  8736 ;; Hardware stack levels required when called: 3
  8737 ;; This function calls:
  8738 ;;		_fullSpeedAhead
  8739 ;;		_stop
  8740 ;; This function is called by:
  8741 ;;		_ReverseYellow
  8742 ;;		_ReversePink
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           	psect	text37
  8747   005804                     __ptext37:
  8748                           	callstack 0
  8749   005804                     _ForwardOneBlock:
  8750                           	callstack 25
  8751   005804                     
  8752                           ;dc_motor.c: 239:     fullSpeedAhead(mL,mR);
  8753   005804  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  8754   005808  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  8755   00580C  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  8756   005810  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  8757   005814  ECB1  F029         	call	_fullSpeedAhead	;wreg free
  8758   005818                     
  8759                           ;dc_motor.c: 240:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  8760   005818  0EA3               	movlw	163
  8761   00581A  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8762   00581C  0E57               	movlw	87
  8763   00581E  6E1E               	movwf	??_ForwardOneBlock^0,c
  8764   005820  0E02               	movlw	2
  8765   005822                     u6157:
  8766   005822  2EE8               	decfsz	wreg,f,c
  8767   005824  D7FE               	bra	u6157
  8768   005826  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8769   005828  D7FC               	bra	u6157
  8770   00582A  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8771   00582C  D7FA               	bra	u6157
  8772   00582E  D000               	nop2	
  8773   005830                     
  8774                           ;dc_motor.c: 241:     stop(&motorL, &motorR);
  8775   005830  0EC5               	movlw	low _motorL
  8776   005832  6E14               	movwf	stop@mL^0,c
  8777   005834  0E01               	movlw	high _motorL
  8778   005836  6E15               	movwf	(stop@mL+1)^0,c
  8779   005838  0EBC               	movlw	low _motorR
  8780   00583A  6E16               	movwf	stop@mR^0,c
  8781   00583C  0E01               	movlw	high _motorR
  8782   00583E  6E17               	movwf	(stop@mR+1)^0,c
  8783   005840  EC85  F02A         	call	_stop	;wreg free
  8784                           
  8785                           ;dc_motor.c: 242:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8786   005844  0E05               	movlw	5
  8787   005846  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8788   005848  0E0F               	movlw	15
  8789   00584A  6E1E               	movwf	??_ForwardOneBlock^0,c
  8790   00584C  0EF1               	movlw	241
  8791   00584E                     u6167:
  8792   00584E  2EE8               	decfsz	wreg,f,c
  8793   005850  D7FE               	bra	u6167
  8794   005852  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8795   005854  D7FC               	bra	u6167
  8796   005856  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8797   005858  D7FA               	bra	u6167
  8798   00585A  F000               	nop	
  8799   00585C  0012               	return		;funcret
  8800   00585E                     __end_of_ForwardOneBlock:
  8801                           	callstack 0
  8802                           
  8803 ;; *************** function _RedMove *****************
  8804 ;; Defined at:
  8805 ;;		line 262 in file "dc_motor.c"
  8806 ;; Parameters:    Size  Location     Type
  8807 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8808 ;;		 -> motorL(9), 
  8809 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8810 ;;		 -> motorR(9), 
  8811 ;; Auto vars:     Size  Location     Type
  8812 ;;		None
  8813 ;; Return value:  Size  Location     Type
  8814 ;;                  1    wreg      void 
  8815 ;; Registers used:
  8816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8817 ;; Tracked objects:
  8818 ;;		On entry : 0/0
  8819 ;;		On exit  : 0/0
  8820 ;;		Unchanged: 0/0
  8821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8822 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8825 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8826 ;;Total ram usage:        4 bytes
  8827 ;; Hardware stack levels used: 1
  8828 ;; Hardware stack levels required when called: 4
  8829 ;; This function calls:
  8830 ;;		_reverseDetect
  8831 ;;		_turnRight45
  8832 ;; This function is called by:
  8833 ;;		_main
  8834 ;;		_go_Home
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text38
  8839   005F2A                     __ptext38:
  8840                           	callstack 0
  8841   005F2A                     _RedMove:
  8842                           	callstack 25
  8843   005F2A                     
  8844                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
  8845   005F2A  0EC5               	movlw	low _motorL
  8846   005F2C  6E1A               	movwf	reverseDetect@mL^0,c
  8847   005F2E  0E01               	movlw	high _motorL
  8848   005F30  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8849   005F32  0EBC               	movlw	low _motorR
  8850   005F34  6E1C               	movwf	reverseDetect@mR^0,c
  8851   005F36  0E01               	movlw	high _motorR
  8852   005F38  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8853   005F3A  EC5C  F02C         	call	_reverseDetect	;wreg free
  8854                           
  8855                           ;dc_motor.c: 265:     turnRight45(&motorL, &motorR);
  8856   005F3E  0EC5               	movlw	low _motorL
  8857   005F40  6E1A               	movwf	turnRight45@mL^0,c
  8858   005F42  0E01               	movlw	high _motorL
  8859   005F44  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8860   005F46  0EBC               	movlw	low _motorR
  8861   005F48  6E1C               	movwf	turnRight45@mR^0,c
  8862   005F4A  0E01               	movlw	high _motorR
  8863   005F4C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8864   005F4E  EC9F  F02E         	call	_turnRight45	;wreg free
  8865                           
  8866                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  8867   005F52  0EC5               	movlw	low _motorL
  8868   005F54  6E1A               	movwf	turnRight45@mL^0,c
  8869   005F56  0E01               	movlw	high _motorL
  8870   005F58  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8871   005F5A  0EBC               	movlw	low _motorR
  8872   005F5C  6E1C               	movwf	turnRight45@mR^0,c
  8873   005F5E  0E01               	movlw	high _motorR
  8874   005F60  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8875   005F62  EC9F  F02E         	call	_turnRight45	;wreg free
  8876   005F66  0012               	return		;funcret
  8877   005F68                     __end_of_RedMove:
  8878                           	callstack 0
  8879                           
  8880 ;; *************** function _OrangeMove *****************
  8881 ;; Defined at:
  8882 ;;		line 308 in file "dc_motor.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8885 ;;		 -> motorL(9), 
  8886 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8887 ;;		 -> motorR(9), 
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;		None
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  1    wreg      void 
  8892 ;; Registers used:
  8893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8903 ;;Total ram usage:        4 bytes
  8904 ;; Hardware stack levels used: 1
  8905 ;; Hardware stack levels required when called: 4
  8906 ;; This function calls:
  8907 ;;		_reverseDetect
  8908 ;;		_turnRight45
  8909 ;; This function is called by:
  8910 ;;		_main
  8911 ;;		_go_Home
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           	psect	text39
  8916   005A14                     __ptext39:
  8917                           	callstack 0
  8918   005A14                     _OrangeMove:
  8919                           	callstack 25
  8920   005A14                     
  8921                           ;dc_motor.c: 309:     reverseDetect(&motorL, &motorR);
  8922   005A14  0EC5               	movlw	low _motorL
  8923   005A16  6E1A               	movwf	reverseDetect@mL^0,c
  8924   005A18  0E01               	movlw	high _motorL
  8925   005A1A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8926   005A1C  0EBC               	movlw	low _motorR
  8927   005A1E  6E1C               	movwf	reverseDetect@mR^0,c
  8928   005A20  0E01               	movlw	high _motorR
  8929   005A22  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8930   005A24  EC5C  F02C         	call	_reverseDetect	;wreg free
  8931                           
  8932                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  8933   005A28  0EC5               	movlw	low _motorL
  8934   005A2A  6E1A               	movwf	turnRight45@mL^0,c
  8935   005A2C  0E01               	movlw	high _motorL
  8936   005A2E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8937   005A30  0EBC               	movlw	low _motorR
  8938   005A32  6E1C               	movwf	turnRight45@mR^0,c
  8939   005A34  0E01               	movlw	high _motorR
  8940   005A36  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8941   005A38  EC9F  F02E         	call	_turnRight45	;wreg free
  8942                           
  8943                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  8944   005A3C  0EC5               	movlw	low _motorL
  8945   005A3E  6E1A               	movwf	turnRight45@mL^0,c
  8946   005A40  0E01               	movlw	high _motorL
  8947   005A42  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8948   005A44  0EBC               	movlw	low _motorR
  8949   005A46  6E1C               	movwf	turnRight45@mR^0,c
  8950   005A48  0E01               	movlw	high _motorR
  8951   005A4A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8952   005A4C  EC9F  F02E         	call	_turnRight45	;wreg free
  8953                           
  8954                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  8955   005A50  0EC5               	movlw	low _motorL
  8956   005A52  6E1A               	movwf	turnRight45@mL^0,c
  8957   005A54  0E01               	movlw	high _motorL
  8958   005A56  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8959   005A58  0EBC               	movlw	low _motorR
  8960   005A5A  6E1C               	movwf	turnRight45@mR^0,c
  8961   005A5C  0E01               	movlw	high _motorR
  8962   005A5E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8963   005A60  EC9F  F02E         	call	_turnRight45	;wreg free
  8964   005A64  0012               	return		;funcret
  8965   005A66                     __end_of_OrangeMove:
  8966                           	callstack 0
  8967                           
  8968 ;; *************** function _LightBlueMove *****************
  8969 ;; Defined at:
  8970 ;;		line 317 in file "dc_motor.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8973 ;;		 -> motorL(9), 
  8974 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8975 ;;		 -> motorR(9), 
  8976 ;; Auto vars:     Size  Location     Type
  8977 ;;		None
  8978 ;; Return value:  Size  Location     Type
  8979 ;;                  1    wreg      void 
  8980 ;; Registers used:
  8981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 0/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8990 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8991 ;;Total ram usage:        4 bytes
  8992 ;; Hardware stack levels used: 1
  8993 ;; Hardware stack levels required when called: 4
  8994 ;; This function calls:
  8995 ;;		_reverseDetect
  8996 ;;		_turnLeft45
  8997 ;; This function is called by:
  8998 ;;		_main
  8999 ;;		_go_Home
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003                           	psect	text40
  9004   005A66                     __ptext40:
  9005                           	callstack 0
  9006   005A66                     _LightBlueMove:
  9007                           	callstack 25
  9008   005A66                     
  9009                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  9010   005A66  0EC5               	movlw	low _motorL
  9011   005A68  6E1A               	movwf	reverseDetect@mL^0,c
  9012   005A6A  0E01               	movlw	high _motorL
  9013   005A6C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9014   005A6E  0EBC               	movlw	low _motorR
  9015   005A70  6E1C               	movwf	reverseDetect@mR^0,c
  9016   005A72  0E01               	movlw	high _motorR
  9017   005A74  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9018   005A76  EC5C  F02C         	call	_reverseDetect	;wreg free
  9019                           
  9020                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  9021   005A7A  0EC5               	movlw	low _motorL
  9022   005A7C  6E1A               	movwf	turnLeft45@mL^0,c
  9023   005A7E  0E01               	movlw	high _motorL
  9024   005A80  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9025   005A82  0EBC               	movlw	low _motorR
  9026   005A84  6E1C               	movwf	turnLeft45@mR^0,c
  9027   005A86  0E01               	movlw	high _motorR
  9028   005A88  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9029   005A8A  ECC6  F02E         	call	_turnLeft45	;wreg free
  9030                           
  9031                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  9032   005A8E  0EC5               	movlw	low _motorL
  9033   005A90  6E1A               	movwf	turnLeft45@mL^0,c
  9034   005A92  0E01               	movlw	high _motorL
  9035   005A94  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9036   005A96  0EBC               	movlw	low _motorR
  9037   005A98  6E1C               	movwf	turnLeft45@mR^0,c
  9038   005A9A  0E01               	movlw	high _motorR
  9039   005A9C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9040   005A9E  ECC6  F02E         	call	_turnLeft45	;wreg free
  9041                           
  9042                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  9043   005AA2  0EC5               	movlw	low _motorL
  9044   005AA4  6E1A               	movwf	turnLeft45@mL^0,c
  9045   005AA6  0E01               	movlw	high _motorL
  9046   005AA8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9047   005AAA  0EBC               	movlw	low _motorR
  9048   005AAC  6E1C               	movwf	turnLeft45@mR^0,c
  9049   005AAE  0E01               	movlw	high _motorR
  9050   005AB0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9051   005AB2  ECC6  F02E         	call	_turnLeft45	;wreg free
  9052   005AB6  0012               	return		;funcret
  9053   005AB8                     __end_of_LightBlueMove:
  9054                           	callstack 0
  9055                           
  9056 ;; *************** function _GreenMove *****************
  9057 ;; Defined at:
  9058 ;;		line 270 in file "dc_motor.c"
  9059 ;; Parameters:    Size  Location     Type
  9060 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9061 ;;		 -> motorL(9), 
  9062 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9063 ;;		 -> motorR(9), 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;		None
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  1    wreg      void 
  9068 ;; Registers used:
  9069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9078 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9079 ;;Total ram usage:        4 bytes
  9080 ;; Hardware stack levels used: 1
  9081 ;; Hardware stack levels required when called: 4
  9082 ;; This function calls:
  9083 ;;		_reverseDetect
  9084 ;;		_turnLeft45
  9085 ;; This function is called by:
  9086 ;;		_main
  9087 ;;		_go_Home
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           	psect	text41
  9092   005F68                     __ptext41:
  9093                           	callstack 0
  9094   005F68                     _GreenMove:
  9095                           	callstack 25
  9096   005F68                     
  9097                           ;dc_motor.c: 271:     reverseDetect(&motorL, &motorR);
  9098   005F68  0EC5               	movlw	low _motorL
  9099   005F6A  6E1A               	movwf	reverseDetect@mL^0,c
  9100   005F6C  0E01               	movlw	high _motorL
  9101   005F6E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9102   005F70  0EBC               	movlw	low _motorR
  9103   005F72  6E1C               	movwf	reverseDetect@mR^0,c
  9104   005F74  0E01               	movlw	high _motorR
  9105   005F76  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9106   005F78  EC5C  F02C         	call	_reverseDetect	;wreg free
  9107                           
  9108                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  9109   005F7C  0EC5               	movlw	low _motorL
  9110   005F7E  6E1A               	movwf	turnLeft45@mL^0,c
  9111   005F80  0E01               	movlw	high _motorL
  9112   005F82  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9113   005F84  0EBC               	movlw	low _motorR
  9114   005F86  6E1C               	movwf	turnLeft45@mR^0,c
  9115   005F88  0E01               	movlw	high _motorR
  9116   005F8A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9117   005F8C  ECC6  F02E         	call	_turnLeft45	;wreg free
  9118                           
  9119                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9120   005F90  0EC5               	movlw	low _motorL
  9121   005F92  6E1A               	movwf	turnLeft45@mL^0,c
  9122   005F94  0E01               	movlw	high _motorL
  9123   005F96  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9124   005F98  0EBC               	movlw	low _motorR
  9125   005F9A  6E1C               	movwf	turnLeft45@mR^0,c
  9126   005F9C  0E01               	movlw	high _motorR
  9127   005F9E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9128   005FA0  ECC6  F02E         	call	_turnLeft45	;wreg free
  9129   005FA4  0012               	return		;funcret
  9130   005FA6                     __end_of_GreenMove:
  9131                           	callstack 0
  9132                           
  9133 ;; *************** function _BlueMove *****************
  9134 ;; Defined at:
  9135 ;;		line 278 in file "dc_motor.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9138 ;;		 -> motorL(9), 
  9139 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9140 ;;		 -> motorR(9), 
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;		None
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  1    wreg      void 
  9145 ;; Registers used:
  9146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9155 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9156 ;;Total ram usage:        4 bytes
  9157 ;; Hardware stack levels used: 1
  9158 ;; Hardware stack levels required when called: 4
  9159 ;; This function calls:
  9160 ;;		_reverseDetect
  9161 ;;		_turnRight45
  9162 ;; This function is called by:
  9163 ;;		_main
  9164 ;;		_go_Home
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           	psect	text42
  9169   0056DC                     __ptext42:
  9170                           	callstack 0
  9171   0056DC                     _BlueMove:
  9172                           	callstack 25
  9173   0056DC                     
  9174                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  9175   0056DC  0EC5               	movlw	low _motorL
  9176   0056DE  6E1A               	movwf	reverseDetect@mL^0,c
  9177   0056E0  0E01               	movlw	high _motorL
  9178   0056E2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9179   0056E4  0EBC               	movlw	low _motorR
  9180   0056E6  6E1C               	movwf	reverseDetect@mR^0,c
  9181   0056E8  0E01               	movlw	high _motorR
  9182   0056EA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9183   0056EC  EC5C  F02C         	call	_reverseDetect	;wreg free
  9184                           
  9185                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  9186   0056F0  0EC5               	movlw	low _motorL
  9187   0056F2  6E1A               	movwf	turnRight45@mL^0,c
  9188   0056F4  0E01               	movlw	high _motorL
  9189   0056F6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9190   0056F8  0EBC               	movlw	low _motorR
  9191   0056FA  6E1C               	movwf	turnRight45@mR^0,c
  9192   0056FC  0E01               	movlw	high _motorR
  9193   0056FE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9194   005700  EC9F  F02E         	call	_turnRight45	;wreg free
  9195                           
  9196                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  9197   005704  0EC5               	movlw	low _motorL
  9198   005706  6E1A               	movwf	turnRight45@mL^0,c
  9199   005708  0E01               	movlw	high _motorL
  9200   00570A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9201   00570C  0EBC               	movlw	low _motorR
  9202   00570E  6E1C               	movwf	turnRight45@mR^0,c
  9203   005710  0E01               	movlw	high _motorR
  9204   005712  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9205   005714  EC9F  F02E         	call	_turnRight45	;wreg free
  9206                           
  9207                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  9208   005718  0EC5               	movlw	low _motorL
  9209   00571A  6E1A               	movwf	turnRight45@mL^0,c
  9210   00571C  0E01               	movlw	high _motorL
  9211   00571E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9212   005720  0EBC               	movlw	low _motorR
  9213   005722  6E1C               	movwf	turnRight45@mR^0,c
  9214   005724  0E01               	movlw	high _motorR
  9215   005726  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9216   005728  EC9F  F02E         	call	_turnRight45	;wreg free
  9217                           
  9218                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  9219   00572C  0EC5               	movlw	low _motorL
  9220   00572E  6E1A               	movwf	turnRight45@mL^0,c
  9221   005730  0E01               	movlw	high _motorL
  9222   005732  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9223   005734  0EBC               	movlw	low _motorR
  9224   005736  6E1C               	movwf	turnRight45@mR^0,c
  9225   005738  0E01               	movlw	high _motorR
  9226   00573A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9227   00573C  EC9F  F02E         	call	_turnRight45	;wreg free
  9228   005740  0012               	return		;funcret
  9229   005742                     __end_of_BlueMove:
  9230                           	callstack 0
  9231                           
  9232 ;; *************** function _getTMR0val *****************
  9233 ;; Defined at:
  9234 ;;		line 28 in file "timers.c"
  9235 ;; Parameters:    Size  Location     Type
  9236 ;;		None
  9237 ;; Auto vars:     Size  Location     Type
  9238 ;;  moving          2    0[COMRAM] int 
  9239 ;;  temp            2    0        unsigned int 
  9240 ;; Return value:  Size  Location     Type
  9241 ;;                  1    wreg      void 
  9242 ;; Registers used:
  9243 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9244 ;; Tracked objects:
  9245 ;;		On entry : 0/0
  9246 ;;		On exit  : 0/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9252 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9253 ;;Total ram usage:        2 bytes
  9254 ;; Hardware stack levels used: 1
  9255 ;; This function calls:
  9256 ;;		Nothing
  9257 ;; This function is called by:
  9258 ;;		_main
  9259 ;; This function uses a non-reentrant model
  9260 ;;
  9261                           
  9262                           	psect	text43
  9263   0060CE                     __ptext43:
  9264                           	callstack 0
  9265   0060CE                     _getTMR0val:
  9266                           	callstack 30
  9267   0060CE  50D3               	movf	211,w,c	;volatile
  9268   0060D0                     
  9269                           ;timers.c: 32:     int moving=TMR0H<<8;
  9270   0060D0  50D4               	movf	212,w,c	;volatile
  9271   0060D2  6E02               	movwf	(getTMR0val@moving+1)^0,c
  9272   0060D4  6A01               	clrf	getTMR0val@moving^0,c
  9273   0060D6                     
  9274                           ;timers.c: 33:     Time_forward[move_count]=moving;
  9275   0060D6  90D8               	bcf	status,0,c
  9276   0060D8  0101               	movlb	1	; () banked
  9277   0060DA  357C               	rlcf	_move_count& (0+255),w,b	;volatile
  9278   0060DC  6ED9               	movwf	fsr2l,c
  9279   0060DE  357D               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  9280   0060E0  6EDA               	movwf	fsr2h,c
  9281   0060E2  0E3C               	movlw	low _Time_forward
  9282   0060E4  26D9               	addwf	fsr2l,f,c
  9283   0060E6  0E02               	movlw	high _Time_forward
  9284   0060E8  22DA               	addwfc	fsr2h,f,c
  9285   0060EA  C001  FFDE         	movff	getTMR0val@moving,postinc2
  9286   0060EE  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  9287   0060F2                     
  9288                           ; BSR set to: 1
  9289   0060F2  0012               	return		;funcret
  9290   0060F4                     __end_of_getTMR0val:
  9291                           	callstack 0
  9292                           
  9293 ;; *************** function _colour_rel *****************
  9294 ;; Defined at:
  9295 ;;		line 114 in file "color.c"
  9296 ;; Parameters:    Size  Location     Type
  9297 ;;  vals            2   74[COMRAM] PTR struct RGB
  9298 ;;		 -> vals(8), 
  9299 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  9300 ;;		 -> rel(12), 
  9301 ;; Auto vars:     Size  Location     Type
  9302 ;;  B               4   20[BANK0 ] float 
  9303 ;;  G               4   16[BANK0 ] float 
  9304 ;;  R               4   12[BANK0 ] float 
  9305 ;;  L               4    0[BANK0 ] float 
  9306 ;; Return value:  Size  Location     Type
  9307 ;;                  1    wreg      void 
  9308 ;; Registers used:
  9309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9310 ;; Tracked objects:
  9311 ;;		On entry : 0/0
  9312 ;;		On exit  : 0/0
  9313 ;;		Unchanged: 0/0
  9314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9316 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9318 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9319 ;;Total ram usage:       28 bytes
  9320 ;; Hardware stack levels used: 1
  9321 ;; Hardware stack levels required when called: 1
  9322 ;; This function calls:
  9323 ;;		___fladd
  9324 ;;		___fldiv
  9325 ;;		___xxtofl
  9326 ;; This function is called by:
  9327 ;;		_main
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331                           	psect	text44
  9332   00359A                     __ptext44:
  9333                           	callstack 0
  9334   00359A                     _colour_rel:
  9335                           	callstack 29
  9336   00359A                     
  9337                           ;color.c: 115:     float R = vals->R;
  9338   00359A  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  9339   00359E  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  9340   0035A2  CFDE F001          	movff	postinc2,___xxtofl@val
  9341   0035A6  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9342   0035AA  0E00               	movlw	0
  9343   0035AC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9344   0035AE  0EFF               	movlw	-1
  9345   0035B0  6E03               	movwf	(___xxtofl@val+2)^0,c
  9346   0035B2  6E04               	movwf	(___xxtofl@val+3)^0,c
  9347   0035B4  0E01               	movlw	1
  9348   0035B6  EC75  F022         	call	___xxtofl
  9349   0035BA  C001  F06C         	movff	?___xxtofl,colour_rel@R
  9350   0035BE  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  9351   0035C2  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  9352   0035C6  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  9353                           
  9354                           ;color.c: 116:     float G = vals->G;
  9355   0035CA  EE20 F002          	lfsr	2,2
  9356   0035CE  504B               	movf	colour_rel@vals^0,w,c
  9357   0035D0  26D9               	addwf	fsr2l,f,c
  9358   0035D2  504C               	movf	(colour_rel@vals+1)^0,w,c
  9359   0035D4  22DA               	addwfc	fsr2h,f,c
  9360   0035D6  CFDE F001          	movff	postinc2,___xxtofl@val
  9361   0035DA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9362   0035DE  0E00               	movlw	0
  9363   0035E0  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9364   0035E2  0EFF               	movlw	-1
  9365   0035E4  6E03               	movwf	(___xxtofl@val+2)^0,c
  9366   0035E6  6E04               	movwf	(___xxtofl@val+3)^0,c
  9367   0035E8  0E01               	movlw	1
  9368   0035EA  EC75  F022         	call	___xxtofl
  9369   0035EE  C001  F070         	movff	?___xxtofl,colour_rel@G
  9370   0035F2  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  9371   0035F6  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  9372   0035FA  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  9373                           
  9374                           ;color.c: 117:     float B = vals->B;
  9375   0035FE  EE20 F004          	lfsr	2,4
  9376   003602  504B               	movf	colour_rel@vals^0,w,c
  9377   003604  26D9               	addwf	fsr2l,f,c
  9378   003606  504C               	movf	(colour_rel@vals+1)^0,w,c
  9379   003608  22DA               	addwfc	fsr2h,f,c
  9380   00360A  CFDE F001          	movff	postinc2,___xxtofl@val
  9381   00360E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9382   003612  0E00               	movlw	0
  9383   003614  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9384   003616  0EFF               	movlw	-1
  9385   003618  6E03               	movwf	(___xxtofl@val+2)^0,c
  9386   00361A  6E04               	movwf	(___xxtofl@val+3)^0,c
  9387   00361C  0E01               	movlw	1
  9388   00361E  EC75  F022         	call	___xxtofl
  9389   003622  C001  F074         	movff	?___xxtofl,colour_rel@B
  9390   003626  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  9391   00362A  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  9392   00362E  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  9393                           
  9394                           ;color.c: 118:     float L = vals->L;
  9395   003632  EE20 F006          	lfsr	2,6
  9396   003636  504B               	movf	colour_rel@vals^0,w,c
  9397   003638  26D9               	addwf	fsr2l,f,c
  9398   00363A  504C               	movf	(colour_rel@vals+1)^0,w,c
  9399   00363C  22DA               	addwfc	fsr2h,f,c
  9400   00363E  CFDE F001          	movff	postinc2,___xxtofl@val
  9401   003642  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9402   003646  0E00               	movlw	0
  9403   003648  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9404   00364A  0EFF               	movlw	-1
  9405   00364C  6E03               	movwf	(___xxtofl@val+2)^0,c
  9406   00364E  6E04               	movwf	(___xxtofl@val+3)^0,c
  9407   003650  0E01               	movlw	1
  9408   003652  EC75  F022         	call	___xxtofl
  9409   003656  C001  F060         	movff	?___xxtofl,colour_rel@L
  9410   00365A  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  9411   00365E  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  9412   003662  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  9413   003666                     
  9414                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9415   003666  C070  F005         	movff	colour_rel@G,___fladd@a
  9416   00366A  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9417   00366E  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9418   003672  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9419   003676  C06C  F001         	movff	colour_rel@R,___fladd@b
  9420   00367A  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9421   00367E  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9422   003682  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9423   003686  EC8B  F014         	call	___fladd	;wreg free
  9424   00368A  C001  F064         	movff	?___fladd,_colour_rel$3144
  9425   00368E  C002  F065         	movff	?___fladd+1,_colour_rel$3144+1
  9426   003692  C003  F066         	movff	?___fladd+2,_colour_rel$3144+2
  9427   003696  C004  F067         	movff	?___fladd+3,_colour_rel$3144+3
  9428   00369A                     
  9429                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9430   00369A  C074  F005         	movff	colour_rel@B,___fladd@a
  9431   00369E  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9432   0036A2  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9433   0036A6  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9434   0036AA  C064  F001         	movff	_colour_rel$3144,___fladd@b
  9435   0036AE  C065  F002         	movff	_colour_rel$3144+1,___fladd@b+1
  9436   0036B2  C066  F003         	movff	_colour_rel$3144+2,___fladd@b+2
  9437   0036B6  C067  F004         	movff	_colour_rel$3144+3,___fladd@b+3
  9438   0036BA  EC8B  F014         	call	___fladd	;wreg free
  9439   0036BE  C001  F068         	movff	?___fladd,_colour_rel$3145
  9440   0036C2  C002  F069         	movff	?___fladd+1,_colour_rel$3145+1
  9441   0036C6  C003  F06A         	movff	?___fladd+2,_colour_rel$3145+2
  9442   0036CA  C004  F06B         	movff	?___fladd+3,_colour_rel$3145+3
  9443                           
  9444                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9445   0036CE  C06C  F032         	movff	colour_rel@R,___fldiv@b
  9446   0036D2  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  9447   0036D6  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  9448   0036DA  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  9449   0036DE  C060  F005         	movff	colour_rel@L,___fladd@a
  9450   0036E2  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9451   0036E6  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9452   0036EA  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9453   0036EE  C068  F001         	movff	_colour_rel$3145,___fladd@b
  9454   0036F2  C069  F002         	movff	_colour_rel$3145+1,___fladd@b+1
  9455   0036F6  C06A  F003         	movff	_colour_rel$3145+2,___fladd@b+2
  9456   0036FA  C06B  F004         	movff	_colour_rel$3145+3,___fladd@b+3
  9457   0036FE  EC8B  F014         	call	___fladd	;wreg free
  9458   003702  C001  F036         	movff	?___fladd,___fldiv@a
  9459   003706  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9460   00370A  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9461   00370E  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9462   003712  EC00  F019         	call	___fldiv	;wreg free
  9463   003716  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  9464   00371A  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  9465   00371E  C032  FFDE         	movff	?___fldiv,postinc2
  9466   003722  C033  FFDE         	movff	?___fldiv+1,postinc2
  9467   003726  C034  FFDE         	movff	?___fldiv+2,postinc2
  9468   00372A  C035  FFDE         	movff	?___fldiv+3,postinc2
  9469   00372E                     
  9470                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9471   00372E  C070  F005         	movff	colour_rel@G,___fladd@a
  9472   003732  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9473   003736  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9474   00373A  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9475   00373E  C06C  F001         	movff	colour_rel@R,___fladd@b
  9476   003742  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9477   003746  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9478   00374A  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9479   00374E  EC8B  F014         	call	___fladd	;wreg free
  9480   003752  C001  F064         	movff	?___fladd,_colour_rel$3144
  9481   003756  C002  F065         	movff	?___fladd+1,_colour_rel$3144+1
  9482   00375A  C003  F066         	movff	?___fladd+2,_colour_rel$3144+2
  9483   00375E  C004  F067         	movff	?___fladd+3,_colour_rel$3144+3
  9484   003762                     
  9485                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9486   003762  C074  F005         	movff	colour_rel@B,___fladd@a
  9487   003766  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9488   00376A  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9489   00376E  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9490   003772  C064  F001         	movff	_colour_rel$3144,___fladd@b
  9491   003776  C065  F002         	movff	_colour_rel$3144+1,___fladd@b+1
  9492   00377A  C066  F003         	movff	_colour_rel$3144+2,___fladd@b+2
  9493   00377E  C067  F004         	movff	_colour_rel$3144+3,___fladd@b+3
  9494   003782  EC8B  F014         	call	___fladd	;wreg free
  9495   003786  C001  F068         	movff	?___fladd,_colour_rel$3145
  9496   00378A  C002  F069         	movff	?___fladd+1,_colour_rel$3145+1
  9497   00378E  C003  F06A         	movff	?___fladd+2,_colour_rel$3145+2
  9498   003792  C004  F06B         	movff	?___fladd+3,_colour_rel$3145+3
  9499                           
  9500                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9501   003796  C074  F032         	movff	colour_rel@B,___fldiv@b
  9502   00379A  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  9503   00379E  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  9504   0037A2  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  9505   0037A6  C060  F005         	movff	colour_rel@L,___fladd@a
  9506   0037AA  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9507   0037AE  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9508   0037B2  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9509   0037B6  C068  F001         	movff	_colour_rel$3145,___fladd@b
  9510   0037BA  C069  F002         	movff	_colour_rel$3145+1,___fladd@b+1
  9511   0037BE  C06A  F003         	movff	_colour_rel$3145+2,___fladd@b+2
  9512   0037C2  C06B  F004         	movff	_colour_rel$3145+3,___fladd@b+3
  9513   0037C6  EC8B  F014         	call	___fladd	;wreg free
  9514   0037CA  C001  F036         	movff	?___fladd,___fldiv@a
  9515   0037CE  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9516   0037D2  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9517   0037D6  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9518   0037DA  EC00  F019         	call	___fldiv	;wreg free
  9519   0037DE  EE20 F008          	lfsr	2,8
  9520   0037E2  504D               	movf	colour_rel@rel^0,w,c
  9521   0037E4  26D9               	addwf	fsr2l,f,c
  9522   0037E6  504E               	movf	(colour_rel@rel+1)^0,w,c
  9523   0037E8  22DA               	addwfc	fsr2h,f,c
  9524   0037EA  C032  FFDE         	movff	?___fldiv,postinc2
  9525   0037EE  C033  FFDE         	movff	?___fldiv+1,postinc2
  9526   0037F2  C034  FFDE         	movff	?___fldiv+2,postinc2
  9527   0037F6  C035  FFDE         	movff	?___fldiv+3,postinc2
  9528   0037FA                     
  9529                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9530   0037FA  C070  F005         	movff	colour_rel@G,___fladd@a
  9531   0037FE  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9532   003802  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9533   003806  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9534   00380A  C06C  F001         	movff	colour_rel@R,___fladd@b
  9535   00380E  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9536   003812  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9537   003816  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9538   00381A  EC8B  F014         	call	___fladd	;wreg free
  9539   00381E  C001  F064         	movff	?___fladd,_colour_rel$3144
  9540   003822  C002  F065         	movff	?___fladd+1,_colour_rel$3144+1
  9541   003826  C003  F066         	movff	?___fladd+2,_colour_rel$3144+2
  9542   00382A  C004  F067         	movff	?___fladd+3,_colour_rel$3144+3
  9543   00382E                     
  9544                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9545   00382E  C074  F005         	movff	colour_rel@B,___fladd@a
  9546   003832  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9547   003836  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9548   00383A  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9549   00383E  C064  F001         	movff	_colour_rel$3144,___fladd@b
  9550   003842  C065  F002         	movff	_colour_rel$3144+1,___fladd@b+1
  9551   003846  C066  F003         	movff	_colour_rel$3144+2,___fladd@b+2
  9552   00384A  C067  F004         	movff	_colour_rel$3144+3,___fladd@b+3
  9553   00384E  EC8B  F014         	call	___fladd	;wreg free
  9554   003852  C001  F068         	movff	?___fladd,_colour_rel$3145
  9555   003856  C002  F069         	movff	?___fladd+1,_colour_rel$3145+1
  9556   00385A  C003  F06A         	movff	?___fladd+2,_colour_rel$3145+2
  9557   00385E  C004  F06B         	movff	?___fladd+3,_colour_rel$3145+3
  9558                           
  9559                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9560   003862  C070  F032         	movff	colour_rel@G,___fldiv@b
  9561   003866  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  9562   00386A  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  9563   00386E  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  9564   003872  C060  F005         	movff	colour_rel@L,___fladd@a
  9565   003876  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9566   00387A  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9567   00387E  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9568   003882  C068  F001         	movff	_colour_rel$3145,___fladd@b
  9569   003886  C069  F002         	movff	_colour_rel$3145+1,___fladd@b+1
  9570   00388A  C06A  F003         	movff	_colour_rel$3145+2,___fladd@b+2
  9571   00388E  C06B  F004         	movff	_colour_rel$3145+3,___fladd@b+3
  9572   003892  EC8B  F014         	call	___fladd	;wreg free
  9573   003896  C001  F036         	movff	?___fladd,___fldiv@a
  9574   00389A  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9575   00389E  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9576   0038A2  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9577   0038A6  EC00  F019         	call	___fldiv	;wreg free
  9578   0038AA  EE20 F004          	lfsr	2,4
  9579   0038AE  504D               	movf	colour_rel@rel^0,w,c
  9580   0038B0  26D9               	addwf	fsr2l,f,c
  9581   0038B2  504E               	movf	(colour_rel@rel+1)^0,w,c
  9582   0038B4  22DA               	addwfc	fsr2h,f,c
  9583   0038B6  C032  FFDE         	movff	?___fldiv,postinc2
  9584   0038BA  C033  FFDE         	movff	?___fldiv+1,postinc2
  9585   0038BE  C034  FFDE         	movff	?___fldiv+2,postinc2
  9586   0038C2  C035  FFDE         	movff	?___fldiv+3,postinc2
  9587   0038C6  0012               	return		;funcret
  9588   0038C8                     __end_of_colour_rel:
  9589                           	callstack 0
  9590                           
  9591 ;; *************** function _color_click_init *****************
  9592 ;; Defined at:
  9593 ;;		line 7 in file "color.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;		None
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;		None
  9598 ;; Return value:  Size  Location     Type
  9599 ;;                  1    wreg      void 
  9600 ;; Registers used:
  9601 ;;		wreg, status,2, status,0, cstack
  9602 ;; Tracked objects:
  9603 ;;		On entry : 0/0
  9604 ;;		On exit  : 0/0
  9605 ;;		Unchanged: 0/0
  9606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9609 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9610 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9611 ;;Total ram usage:        1 bytes
  9612 ;; Hardware stack levels used: 1
  9613 ;; Hardware stack levels required when called: 3
  9614 ;; This function calls:
  9615 ;;		_I2C_2_Master_Init
  9616 ;;		_color_writetoaddr
  9617 ;; This function is called by:
  9618 ;;		_main
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622                           	psect	text45
  9623   005AB8                     __ptext45:
  9624                           	callstack 0
  9625   005AB8                     _color_click_init:
  9626                           	callstack 27
  9627   005AB8                     
  9628                           ;color.c: 10:     I2C_2_Master_Init();
  9629   005AB8  EC3E  F030         	call	_I2C_2_Master_Init	;wreg free
  9630   005ABC                     
  9631                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  9632   005ABC  0E01               	movlw	1
  9633   005ABE  6E03               	movwf	color_writetoaddr@value^0,c
  9634   005AC0  0E00               	movlw	0
  9635   005AC2  EC8D  F030         	call	_color_writetoaddr
  9636   005AC6                     
  9637                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9638   005AC6  0E3F               	movlw	63
  9639   005AC8  6E05               	movwf	??_color_click_init^0,c
  9640   005ACA  0E55               	movlw	85
  9641   005ACC                     u6177:
  9642   005ACC  2EE8               	decfsz	wreg,f,c
  9643   005ACE  D7FE               	bra	u6177
  9644   005AD0  2E05               	decfsz	??_color_click_init^0,f,c
  9645   005AD2  D7FC               	bra	u6177
  9646   005AD4  F000               	nop	
  9647   005AD6                     
  9648                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  9649   005AD6  0E03               	movlw	3
  9650   005AD8  6E03               	movwf	color_writetoaddr@value^0,c
  9651   005ADA  0E00               	movlw	0
  9652   005ADC  EC8D  F030         	call	_color_writetoaddr
  9653   005AE0                     
  9654                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  9655   005AE0  0ED5               	movlw	213
  9656   005AE2  6E03               	movwf	color_writetoaddr@value^0,c
  9657   005AE4  0E01               	movlw	1
  9658   005AE6  EC8D  F030         	call	_color_writetoaddr
  9659   005AEA                     
  9660                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  9661   005AEA  0E00               	movlw	0
  9662   005AEC  6E03               	movwf	color_writetoaddr@value^0,c
  9663   005AEE  0E0F               	movlw	15
  9664   005AF0  EC8D  F030         	call	_color_writetoaddr
  9665   005AF4                     
  9666                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  9667   005AF4  9287               	bcf	135,1,c	;volatile
  9668   005AF6                     
  9669                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  9670   005AF6  9881               	bcf	129,4,c	;volatile
  9671   005AF8                     
  9672                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  9673   005AF8  9E86               	bcf	134,7,c	;volatile
  9674   005AFA                     
  9675                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  9676   005AFA  9684               	bcf	132,3,c	;volatile
  9677   005AFC                     
  9678                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  9679   005AFC  9884               	bcf	132,4,c	;volatile
  9680   005AFE                     
  9681                           ;color.c: 28:     LATGbits.LATG1=0;
  9682   005AFE  927F               	bcf	127,1,c	;volatile
  9683   005B00                     
  9684                           ;color.c: 29:     LATFbits.LATF7=0;
  9685   005B00  9E7E               	bcf	126,7,c	;volatile
  9686   005B02                     
  9687                           ;color.c: 30:     LATAbits.LATA4=0;
  9688   005B02  9879               	bcf	121,4,c	;volatile
  9689   005B04                     
  9690                           ;color.c: 32:     LATDbits.LATD3=0;
  9691   005B04  967C               	bcf	124,3,c	;volatile
  9692   005B06                     
  9693                           ;color.c: 33:     LATDbits.LATD4=0;
  9694   005B06  987C               	bcf	124,4,c	;volatile
  9695   005B08  0012               	return		;funcret
  9696   005B0A                     __end_of_color_click_init:
  9697                           	callstack 0
  9698                           
  9699 ;; *************** function _color_writetoaddr *****************
  9700 ;; Defined at:
  9701 ;;		line 41 in file "color.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;  address         1    wreg     unsigned char 
  9704 ;;  value           1    2[COMRAM] unsigned char 
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;  address         1    3[COMRAM] unsigned char 
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  1    wreg      void 
  9709 ;; Registers used:
  9710 ;;		wreg, status,2, status,0, cstack
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9716 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9719 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9720 ;;Total ram usage:        2 bytes
  9721 ;; Hardware stack levels used: 1
  9722 ;; Hardware stack levels required when called: 2
  9723 ;; This function calls:
  9724 ;;		_I2C_2_Master_Start
  9725 ;;		_I2C_2_Master_Stop
  9726 ;;		_I2C_2_Master_Write
  9727 ;; This function is called by:
  9728 ;;		_color_click_init
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text46
  9733   00611A                     __ptext46:
  9734                           	callstack 0
  9735   00611A                     _color_writetoaddr:
  9736                           	callstack 27
  9737                           
  9738                           ;incstack = 0
  9739                           ;color_writetoaddr@address stored from wreg
  9740   00611A  6E04               	movwf	color_writetoaddr@address^0,c
  9741   00611C                     
  9742                           ;color.c: 42:     I2C_2_Master_Start();
  9743   00611C  ECD8  F030         	call	_I2C_2_Master_Start	;wreg free
  9744                           
  9745                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  9746   006120  0E52               	movlw	82
  9747   006122  ECC8  F030         	call	_I2C_2_Master_Write
  9748                           
  9749                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  9750   006126  5004               	movf	color_writetoaddr@address^0,w,c
  9751   006128  0980               	iorlw	128
  9752   00612A  ECC8  F030         	call	_I2C_2_Master_Write
  9753                           
  9754                           ;color.c: 45:     I2C_2_Master_Write(value);
  9755   00612E  5003               	movf	color_writetoaddr@value^0,w,c
  9756   006130  ECC8  F030         	call	_I2C_2_Master_Write
  9757                           
  9758                           ;color.c: 46:     I2C_2_Master_Stop();
  9759   006134  ECD3  F030         	call	_I2C_2_Master_Stop	;wreg free
  9760   006138  0012               	return		;funcret
  9761   00613A                     __end_of_color_writetoaddr:
  9762                           	callstack 0
  9763                           
  9764 ;; *************** function _I2C_2_Master_Write *****************
  9765 ;; Defined at:
  9766 ;;		line 45 in file "i2c.c"
  9767 ;; Parameters:    Size  Location     Type
  9768 ;;  data_byte       1    wreg     unsigned char 
  9769 ;; Auto vars:     Size  Location     Type
  9770 ;;  data_byte       1    1[COMRAM] unsigned char 
  9771 ;; Return value:  Size  Location     Type
  9772 ;;                  1    wreg      void 
  9773 ;; Registers used:
  9774 ;;		wreg, status,2, status,0, cstack
  9775 ;; Tracked objects:
  9776 ;;		On entry : 0/0
  9777 ;;		On exit  : 0/0
  9778 ;;		Unchanged: 0/0
  9779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9783 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9784 ;;Total ram usage:        1 bytes
  9785 ;; Hardware stack levels used: 1
  9786 ;; Hardware stack levels required when called: 1
  9787 ;; This function calls:
  9788 ;;		_I2C_2_Master_Idle
  9789 ;; This function is called by:
  9790 ;;		_color_writetoaddr
  9791 ;;		_color_read_lum
  9792 ;;		_color_read_Red
  9793 ;;		_color_read_Green
  9794 ;;		_color_read_Blue
  9795 ;; This function uses a non-reentrant model
  9796 ;;
  9797                           
  9798                           	psect	text47
  9799   006190                     __ptext47:
  9800                           	callstack 0
  9801   006190                     _I2C_2_Master_Write:
  9802                           	callstack 27
  9803                           
  9804                           ;incstack = 0
  9805                           ;I2C_2_Master_Write@data_byte stored from wreg
  9806   006190  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9807   006192                     
  9808                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9809   006192  EC53  F030         	call	_I2C_2_Master_Idle	;wreg free
  9810   006196                     
  9811                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9812   006196  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9813   00619A  0012               	return		;funcret
  9814   00619C                     __end_of_I2C_2_Master_Write:
  9815                           	callstack 0
  9816                           
  9817 ;; *************** function _I2C_2_Master_Stop *****************
  9818 ;; Defined at:
  9819 ;;		line 39 in file "i2c.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;		None
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;		None
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  1    wreg      void 
  9826 ;; Registers used:
  9827 ;;		wreg, status,2, status,0, cstack
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9837 ;;Total ram usage:        0 bytes
  9838 ;; Hardware stack levels used: 1
  9839 ;; Hardware stack levels required when called: 1
  9840 ;; This function calls:
  9841 ;;		_I2C_2_Master_Idle
  9842 ;; This function is called by:
  9843 ;;		_color_writetoaddr
  9844 ;;		_color_read_lum
  9845 ;;		_color_read_Red
  9846 ;;		_color_read_Green
  9847 ;;		_color_read_Blue
  9848 ;; This function uses a non-reentrant model
  9849 ;;
  9850                           
  9851                           	psect	text48
  9852   0061A6                     __ptext48:
  9853                           	callstack 0
  9854   0061A6                     _I2C_2_Master_Stop:
  9855                           	callstack 27
  9856   0061A6                     
  9857                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9858   0061A6  EC53  F030         	call	_I2C_2_Master_Idle	;wreg free
  9859   0061AA                     
  9860                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9861   0061AA  010E               	movlb	14	; () banked
  9862   0061AC  85DA               	bsf	218,2,b	;volatile
  9863   0061AE                     
  9864                           ; BSR set to: 14
  9865   0061AE  0012               	return		;funcret
  9866   0061B0                     __end_of_I2C_2_Master_Stop:
  9867                           	callstack 0
  9868                           
  9869 ;; *************** function _I2C_2_Master_Start *****************
  9870 ;; Defined at:
  9871 ;;		line 27 in file "i2c.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;		None
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;		None
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  1    wreg      void 
  9878 ;; Registers used:
  9879 ;;		wreg, status,2, status,0, cstack
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9889 ;;Total ram usage:        0 bytes
  9890 ;; Hardware stack levels used: 1
  9891 ;; Hardware stack levels required when called: 1
  9892 ;; This function calls:
  9893 ;;		_I2C_2_Master_Idle
  9894 ;; This function is called by:
  9895 ;;		_color_writetoaddr
  9896 ;;		_color_read_lum
  9897 ;;		_color_read_Red
  9898 ;;		_color_read_Green
  9899 ;;		_color_read_Blue
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           
  9903                           	psect	text49
  9904   0061B0                     __ptext49:
  9905                           	callstack 0
  9906   0061B0                     _I2C_2_Master_Start:
  9907                           	callstack 27
  9908   0061B0                     
  9909                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9910   0061B0  EC53  F030         	call	_I2C_2_Master_Idle	;wreg free
  9911   0061B4                     
  9912                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9913   0061B4  010E               	movlb	14	; () banked
  9914   0061B6  81DA               	bsf	218,0,b	;volatile
  9915   0061B8                     
  9916                           ; BSR set to: 14
  9917   0061B8  0012               	return		;funcret
  9918   0061BA                     __end_of_I2C_2_Master_Start:
  9919                           	callstack 0
  9920                           
  9921 ;; *************** function _I2C_2_Master_Idle *****************
  9922 ;; Defined at:
  9923 ;;		line 22 in file "i2c.c"
  9924 ;; Parameters:    Size  Location     Type
  9925 ;;		None
  9926 ;; Auto vars:     Size  Location     Type
  9927 ;;		None
  9928 ;; Return value:  Size  Location     Type
  9929 ;;                  1    wreg      void 
  9930 ;; Registers used:
  9931 ;;		wreg, status,2, status,0
  9932 ;; Tracked objects:
  9933 ;;		On entry : 0/0
  9934 ;;		On exit  : 0/0
  9935 ;;		Unchanged: 0/0
  9936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9940 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9941 ;;Total ram usage:        1 bytes
  9942 ;; Hardware stack levels used: 1
  9943 ;; This function calls:
  9944 ;;		Nothing
  9945 ;; This function is called by:
  9946 ;;		_I2C_2_Master_Start
  9947 ;;		_I2C_2_Master_RepStart
  9948 ;;		_I2C_2_Master_Stop
  9949 ;;		_I2C_2_Master_Write
  9950 ;;		_I2C_2_Master_Read
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954                           	psect	text50
  9955   0060A6                     __ptext50:
  9956                           	callstack 0
  9957   0060A6                     _I2C_2_Master_Idle:
  9958                           	callstack 27
  9959   0060A6                     l143:
  9960   0060A6  010E               	movlb	14	; () banked
  9961   0060A8  B5D8               	btfsc	216,2,b	;volatile
  9962   0060AA  EF59  F030         	goto	u4451
  9963   0060AE  EF5B  F030         	goto	u4450
  9964   0060B2                     u4451:
  9965   0060B2  EF53  F030         	goto	l143
  9966   0060B6                     u4450:
  9967   0060B6                     
  9968                           ; BSR set to: 14
  9969   0060B6  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9970   0060BA  0E1F               	movlw	31
  9971   0060BC  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9972   0060BE  A4D8               	btfss	status,2,c
  9973   0060C0  EF64  F030         	goto	u4461
  9974   0060C4  EF66  F030         	goto	u4460
  9975   0060C8                     u4461:
  9976   0060C8  EF53  F030         	goto	l143
  9977   0060CC                     u4460:
  9978   0060CC                     
  9979                           ; BSR set to: 14
  9980   0060CC  0012               	return		;funcret
  9981   0060CE                     __end_of_I2C_2_Master_Idle:
  9982                           	callstack 0
  9983                           
  9984 ;; *************** function _I2C_2_Master_Init *****************
  9985 ;; Defined at:
  9986 ;;		line 4 in file "i2c.c"
  9987 ;; Parameters:    Size  Location     Type
  9988 ;;		None
  9989 ;; Auto vars:     Size  Location     Type
  9990 ;;		None
  9991 ;; Return value:  Size  Location     Type
  9992 ;;                  1    wreg      void 
  9993 ;; Registers used:
  9994 ;;		wreg, status,2
  9995 ;; Tracked objects:
  9996 ;;		On entry : 0/0
  9997 ;;		On exit  : 0/0
  9998 ;;		Unchanged: 0/0
  9999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10004 ;;Total ram usage:        0 bytes
 10005 ;; Hardware stack levels used: 1
 10006 ;; This function calls:
 10007 ;;		Nothing
 10008 ;; This function is called by:
 10009 ;;		_color_click_init
 10010 ;;		_main
 10011 ;; This function uses a non-reentrant model
 10012 ;;
 10013                           
 10014                           	psect	text51
 10015   00607C                     __ptext51:
 10016                           	callstack 0
 10017   00607C                     _I2C_2_Master_Init:
 10018                           	callstack 29
 10019   00607C                     
 10020                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 10021   00607C  010E               	movlb	14	; () banked
 10022   00607E  51D9               	movf	217,w,b	;volatile
 10023   006080  0BF0               	andlw	-16
 10024   006082  0908               	iorlw	8
 10025   006084  6FD9               	movwf	217,b	;volatile
 10026   006086                     
 10027                           ; BSR set to: 14
 10028                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 10029   006086  8BD9               	bsf	217,5,b	;volatile
 10030                           
 10031                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 10032   006088  0E9F               	movlw	159
 10033   00608A  6FD6               	movwf	214,b	;volatile
 10034   00608C                     
 10035                           ; BSR set to: 14
 10036                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 10037   00608C  8A84               	bsf	132,5,c	;volatile
 10038   00608E                     
 10039                           ; BSR set to: 14
 10040                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 10041   00608E  8C84               	bsf	132,6,c	;volatile
 10042   006090                     
 10043                           ; BSR set to: 14
 10044                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 10045   006090  9BA7               	bcf	167,5,b	;volatile
 10046   006092                     
 10047                           ; BSR set to: 14
 10048                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 10049   006092  9DA7               	bcf	167,6,b	;volatile
 10050                           
 10051                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 10052   006094  0E1D               	movlw	29
 10053   006096  6F1D               	movwf	29,b	;volatile
 10054                           
 10055                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 10056   006098  0E1E               	movlw	30
 10057   00609A  6F1C               	movwf	28,b	;volatile
 10058                           
 10059                           ;i2c.c: 18:   RD5PPS=0x1C;
 10060   00609C  0E1C               	movlw	28
 10061   00609E  6F6F               	movwf	111,b	;volatile
 10062                           
 10063                           ;i2c.c: 19:   RD6PPS=0x1B;
 10064   0060A0  0E1B               	movlw	27
 10065   0060A2  6F70               	movwf	112,b	;volatile
 10066   0060A4                     
 10067                           ; BSR set to: 14
 10068   0060A4  0012               	return		;funcret
 10069   0060A6                     __end_of_I2C_2_Master_Init:
 10070                           	callstack 0
 10071                           
 10072 ;; *************** function _YellowMove *****************
 10073 ;; Defined at:
 10074 ;;		line 288 in file "dc_motor.c"
 10075 ;; Parameters:    Size  Location     Type
 10076 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10077 ;;		 -> motorL(9), 
 10078 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10079 ;;		 -> motorR(9), 
 10080 ;; Auto vars:     Size  Location     Type
 10081 ;;		None
 10082 ;; Return value:  Size  Location     Type
 10083 ;;                  1    wreg      void 
 10084 ;; Registers used:
 10085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10086 ;; Tracked objects:
 10087 ;;		On entry : 0/0
 10088 ;;		On exit  : 0/0
 10089 ;;		Unchanged: 0/0
 10090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10091 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10094 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10095 ;;Total ram usage:        4 bytes
 10096 ;; Hardware stack levels used: 1
 10097 ;; Hardware stack levels required when called: 4
 10098 ;; This function calls:
 10099 ;;		_reverseDetect
 10100 ;;		_reverseOneBlock
 10101 ;;		_turnRight45
 10102 ;; This function is called by:
 10103 ;;		_main
 10104 ;; This function uses a non-reentrant model
 10105 ;;
 10106                           
 10107                           	psect	text52
 10108   005B0A                     __ptext52:
 10109                           	callstack 0
 10110   005B0A                     _YellowMove:
 10111                           	callstack 26
 10112   005B0A                     
 10113                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
 10114   005B0A  0EC5               	movlw	low _motorL
 10115   005B0C  6E1A               	movwf	reverseDetect@mL^0,c
 10116   005B0E  0E01               	movlw	high _motorL
 10117   005B10  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10118   005B12  0EBC               	movlw	low _motorR
 10119   005B14  6E1C               	movwf	reverseDetect@mR^0,c
 10120   005B16  0E01               	movlw	high _motorR
 10121   005B18  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10122   005B1A  EC5C  F02C         	call	_reverseDetect	;wreg free
 10123                           
 10124                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
 10125   005B1E  0EC5               	movlw	low _motorL
 10126   005B20  6E1A               	movwf	reverseOneBlock@mL^0,c
 10127   005B22  0E01               	movlw	high _motorL
 10128   005B24  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10129   005B26  0EBC               	movlw	low _motorR
 10130   005B28  6E1C               	movwf	reverseOneBlock@mR^0,c
 10131   005B2A  0E01               	movlw	high _motorR
 10132   005B2C  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10133   005B2E  EC2F  F02C         	call	_reverseOneBlock	;wreg free
 10134                           
 10135                           ;dc_motor.c: 293:     turnRight45(&motorL, &motorR);
 10136   005B32  0EC5               	movlw	low _motorL
 10137   005B34  6E1A               	movwf	turnRight45@mL^0,c
 10138   005B36  0E01               	movlw	high _motorL
 10139   005B38  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10140   005B3A  0EBC               	movlw	low _motorR
 10141   005B3C  6E1C               	movwf	turnRight45@mR^0,c
 10142   005B3E  0E01               	movlw	high _motorR
 10143   005B40  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10144   005B42  EC9F  F02E         	call	_turnRight45	;wreg free
 10145                           
 10146                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
 10147   005B46  0EC5               	movlw	low _motorL
 10148   005B48  6E1A               	movwf	turnRight45@mL^0,c
 10149   005B4A  0E01               	movlw	high _motorL
 10150   005B4C  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10151   005B4E  0EBC               	movlw	low _motorR
 10152   005B50  6E1C               	movwf	turnRight45@mR^0,c
 10153   005B52  0E01               	movlw	high _motorR
 10154   005B54  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10155   005B56  EC9F  F02E         	call	_turnRight45	;wreg free
 10156   005B5A  0012               	return		;funcret
 10157   005B5C                     __end_of_YellowMove:
 10158                           	callstack 0
 10159                           
 10160 ;; *************** function _turnRight45 *****************
 10161 ;; Defined at:
 10162 ;;		line 211 in file "dc_motor.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10165 ;;		 -> motorL(9), 
 10166 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10167 ;;		 -> motorR(9), 
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;		None
 10170 ;; Return value:  Size  Location     Type
 10171 ;;                  1    wreg      void 
 10172 ;; Registers used:
 10173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10174 ;; Tracked objects:
 10175 ;;		On entry : 0/0
 10176 ;;		On exit  : 0/0
 10177 ;;		Unchanged: 0/0
 10178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10179 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10181 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10182 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10183 ;;Total ram usage:        6 bytes
 10184 ;; Hardware stack levels used: 1
 10185 ;; Hardware stack levels required when called: 3
 10186 ;; This function calls:
 10187 ;;		_TurnDelay
 10188 ;;		_stop
 10189 ;;		_turnRight
 10190 ;; This function is called by:
 10191 ;;		_RedMove
 10192 ;;		_BlueMove
 10193 ;;		_YellowMove
 10194 ;;		_OrangeMove
 10195 ;;		_ReverseYellow
 10196 ;; This function uses a non-reentrant model
 10197 ;;
 10198                           
 10199                           	psect	text53
 10200   005D3E                     __ptext53:
 10201                           	callstack 0
 10202   005D3E                     _turnRight45:
 10203                           	callstack 25
 10204   005D3E                     
 10205                           ;dc_motor.c: 212:     turnRight(mL,mR);
 10206   005D3E  C01A  F014         	movff	turnRight45@mL,turnRight@mL
 10207   005D42  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 10208   005D46  C01C  F016         	movff	turnRight45@mR,turnRight@mR
 10209   005D4A  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 10210   005D4E  ECC4  F028         	call	_turnRight	;wreg free
 10211   005D52                     
 10212                           ;dc_motor.c: 213:     TurnDelay(Turn45Delay);
 10213   005D52  C0F9  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10214   005D56  C0FA  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10215   005D5A  EC0B  F030         	call	_TurnDelay	;wreg free
 10216   005D5E                     
 10217                           ;dc_motor.c: 214:     stop(&motorL, &motorR);
 10218   005D5E  0EC5               	movlw	low _motorL
 10219   005D60  6E14               	movwf	stop@mL^0,c
 10220   005D62  0E01               	movlw	high _motorL
 10221   005D64  6E15               	movwf	(stop@mL+1)^0,c
 10222   005D66  0EBC               	movlw	low _motorR
 10223   005D68  6E16               	movwf	stop@mR^0,c
 10224   005D6A  0E01               	movlw	high _motorR
 10225   005D6C  6E17               	movwf	(stop@mR+1)^0,c
 10226   005D6E  EC85  F02A         	call	_stop	;wreg free
 10227   005D72                     
 10228                           ;dc_motor.c: 215:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10229   005D72  0E05               	movlw	5
 10230   005D74  6E1F               	movwf	(??_turnRight45+1)^0,c
 10231   005D76  0E0F               	movlw	15
 10232   005D78  6E1E               	movwf	??_turnRight45^0,c
 10233   005D7A  0EF1               	movlw	241
 10234   005D7C                     u6187:
 10235   005D7C  2EE8               	decfsz	wreg,f,c
 10236   005D7E  D7FE               	bra	u6187
 10237   005D80  2E1E               	decfsz	??_turnRight45^0,f,c
 10238   005D82  D7FC               	bra	u6187
 10239   005D84  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
 10240   005D86  D7FA               	bra	u6187
 10241   005D88  F000               	nop	
 10242   005D8A  0012               	return		;funcret
 10243   005D8C                     __end_of_turnRight45:
 10244                           	callstack 0
 10245                           
 10246 ;; *************** function _turnRight *****************
 10247 ;; Defined at:
 10248 ;;		line 129 in file "dc_motor.c"
 10249 ;; Parameters:    Size  Location     Type
 10250 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10251 ;;		 -> motorL(9), 
 10252 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10253 ;;		 -> motorR(9), 
 10254 ;; Auto vars:     Size  Location     Type
 10255 ;;		None
 10256 ;; Return value:  Size  Location     Type
 10257 ;;                  1    wreg      void 
 10258 ;; Registers used:
 10259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10260 ;; Tracked objects:
 10261 ;;		On entry : 0/0
 10262 ;;		On exit  : 0/0
 10263 ;;		Unchanged: 0/0
 10264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10265 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10267 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10268 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10269 ;;Total ram usage:        6 bytes
 10270 ;; Hardware stack levels used: 1
 10271 ;; Hardware stack levels required when called: 2
 10272 ;; This function calls:
 10273 ;;		_setMotorPWM
 10274 ;; This function is called by:
 10275 ;;		_turnRight45
 10276 ;; This function uses a non-reentrant model
 10277 ;;
 10278                           
 10279                           	psect	text54
 10280   005188                     __ptext54:
 10281                           	callstack 0
 10282   005188                     _turnRight:
 10283                           	callstack 25
 10284   005188                     
 10285                           ;dc_motor.c: 129: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          0: {;dc_motor.c: 131:     mL->direction =1;
 10286   005188  EE20 F001          	lfsr	2,1
 10287   00518C  5014               	movf	turnRight@mL^0,w,c
 10288   00518E  26D9               	addwf	fsr2l,f,c
 10289   005190  5015               	movf	(turnRight@mL+1)^0,w,c
 10290   005192  22DA               	addwfc	fsr2h,f,c
 10291   005194  0E01               	movlw	1
 10292   005196  6EDF               	movwf	indf2,c
 10293                           
 10294                           ;dc_motor.c: 132:     mR->direction =0;
 10295   005198  EE20 F001          	lfsr	2,1
 10296   00519C  5016               	movf	turnRight@mR^0,w,c
 10297   00519E  26D9               	addwf	fsr2l,f,c
 10298   0051A0  5017               	movf	(turnRight@mR+1)^0,w,c
 10299   0051A2  22DA               	addwfc	fsr2h,f,c
 10300   0051A4  0E00               	movlw	0
 10301   0051A6  6EDF               	movwf	indf2,c
 10302                           
 10303                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
 10304   0051A8  EFFA  F028         	goto	l4729
 10305   0051AC                     l4721:
 10306                           
 10307                           ;dc_motor.c: 136:         mL->power+=10;
 10308   0051AC  C014  FFD9         	movff	turnRight@mL,fsr2l
 10309   0051B0  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10310   0051B4  0E0A               	movlw	10
 10311   0051B6  26DF               	addwf	indf2,f,c
 10312                           
 10313                           ;dc_motor.c: 137:         mR->power+=10;
 10314   0051B8  C016  FFD9         	movff	turnRight@mR,fsr2l
 10315   0051BC  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10316   0051C0  0E0A               	movlw	10
 10317   0051C2  26DF               	addwf	indf2,f,c
 10318   0051C4                     
 10319                           ;dc_motor.c: 139:         setMotorPWM(mL);
 10320   0051C4  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 10321   0051C8  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 10322   0051CC  EC13  F024         	call	_setMotorPWM	;wreg free
 10323   0051D0                     
 10324                           ;dc_motor.c: 140:         setMotorPWM(mR);
 10325   0051D0  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 10326   0051D4  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 10327   0051D8  EC13  F024         	call	_setMotorPWM	;wreg free
 10328   0051DC                     
 10329                           ;dc_motor.c: 142:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10330   0051DC  0E02               	movlw	2
 10331   0051DE  6E19               	movwf	(??_turnRight+1)^0,c
 10332   0051E0  0EA0               	movlw	160
 10333   0051E2  6E18               	movwf	??_turnRight^0,c
 10334   0051E4  0E92               	movlw	146
 10335   0051E6                     u6197:
 10336   0051E6  2EE8               	decfsz	wreg,f,c
 10337   0051E8  D7FE               	bra	u6197
 10338   0051EA  2E18               	decfsz	??_turnRight^0,f,c
 10339   0051EC  D7FC               	bra	u6197
 10340   0051EE  2E19               	decfsz	(??_turnRight+1)^0,f,c
 10341   0051F0  D7FA               	bra	u6197
 10342   0051F2  D000               	nop2	
 10343   0051F4                     l4729:
 10344   0051F4  C014  FFD9         	movff	turnRight@mL,fsr2l
 10345   0051F8  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10346   0051FC  0E1E               	movlw	30
 10347   0051FE  60DF               	cpfslt	indf2,c
 10348   005200  EF04  F029         	goto	u4531
 10349   005204  EF06  F029         	goto	u4530
 10350   005208                     u4531:
 10351   005208  EF12  F029         	goto	l514
 10352   00520C                     u4530:
 10353   00520C  C016  FFD9         	movff	turnRight@mR,fsr2l
 10354   005210  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10355   005214  0E1D               	movlw	29
 10356   005216  64DF               	cpfsgt	indf2,c
 10357   005218  EF10  F029         	goto	u4541
 10358   00521C  EF12  F029         	goto	u4540
 10359   005220                     u4541:
 10360   005220  EFD6  F028         	goto	l4721
 10361   005224                     u4540:
 10362   005224                     l514:
 10363   005224  0012               	return		;funcret
 10364   005226                     __end_of_turnRight:
 10365                           	callstack 0
 10366                           
 10367 ;; *************** function _Timer0_init *****************
 10368 ;; Defined at:
 10369 ;;		line 8 in file "timers.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;		None
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;		None
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  1    wreg      void 
 10376 ;; Registers used:
 10377 ;;		wreg, status,2
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10387 ;;Total ram usage:        0 bytes
 10388 ;; Hardware stack levels used: 1
 10389 ;; This function calls:
 10390 ;;		Nothing
 10391 ;; This function is called by:
 10392 ;;		_main
 10393 ;; This function uses a non-reentrant model
 10394 ;;
 10395                           
 10396                           	psect	text55
 10397   00613A                     __ptext55:
 10398                           	callstack 0
 10399   00613A                     _Timer0_init:
 10400                           	callstack 30
 10401   00613A                     
 10402                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 10403   00613A  50D6               	movf	214,w,c	;volatile
 10404   00613C  0B1F               	andlw	-225
 10405   00613E  0940               	iorlw	64
 10406   006140  6ED6               	movwf	214,c	;volatile
 10407   006142                     
 10408                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 10409   006142  88D6               	bsf	214,4,c	;volatile
 10410                           
 10411                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
 10412   006144  50D6               	movf	214,w,c	;volatile
 10413   006146  0BF0               	andlw	-16
 10414   006148  090E               	iorlw	14
 10415   00614A  6ED6               	movwf	214,c	;volatile
 10416   00614C                     
 10417                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 10418   00614C  88D5               	bsf	213,4,c	;volatile
 10419                           
 10420                           ;timers.c: 16:     TMR0H=0;
 10421   00614E  0E00               	movlw	0
 10422   006150  6ED4               	movwf	212,c	;volatile
 10423                           
 10424                           ;timers.c: 17:     TMR0L=0;
 10425   006152  0E00               	movlw	0
 10426   006154  6ED3               	movwf	211,c	;volatile
 10427   006156                     
 10428                           ;timers.c: 18:     T0CON0bits.T0EN=1;
 10429   006156  8ED5               	bsf	213,7,c	;volatile
 10430   006158  0012               	return		;funcret
 10431   00615A                     __end_of_Timer0_init:
 10432                           	callstack 0
 10433                           
 10434 ;; *************** function _RetryMove *****************
 10435 ;; Defined at:
 10436 ;;		line 325 in file "dc_motor.c"
 10437 ;; Parameters:    Size  Location     Type
 10438 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10439 ;;		 -> motorL(9), 
 10440 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10441 ;;		 -> motorR(9), 
 10442 ;; Auto vars:     Size  Location     Type
 10443 ;;		None
 10444 ;; Return value:  Size  Location     Type
 10445 ;;                  1    wreg      void 
 10446 ;; Registers used:
 10447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10448 ;; Tracked objects:
 10449 ;;		On entry : 0/0
 10450 ;;		On exit  : 0/0
 10451 ;;		Unchanged: 0/0
 10452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10453 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10455 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10456 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10457 ;;Total ram usage:        6 bytes
 10458 ;; Hardware stack levels used: 1
 10459 ;; Hardware stack levels required when called: 3
 10460 ;; This function calls:
 10461 ;;		_fullSpeedAhead
 10462 ;;		_fullSpeedBack
 10463 ;;		_stop
 10464 ;; This function is called by:
 10465 ;;		_main
 10466 ;; This function uses a non-reentrant model
 10467 ;;
 10468                           
 10469                           	psect	text56
 10470   005488                     __ptext56:
 10471                           	callstack 0
 10472   005488                     _RetryMove:
 10473                           	callstack 27
 10474   005488                     
 10475                           ;dc_motor.c: 326:     fullSpeedBack(mL,mR);
 10476   005488  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
 10477   00548C  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
 10478   005490  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
 10479   005494  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
 10480   005498  EC62  F029         	call	_fullSpeedBack	;wreg free
 10481   00549C                     
 10482                           ;dc_motor.c: 327:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10483   00549C  0E29               	movlw	41
 10484   00549E  6E1F               	movwf	(??_RetryMove+1)^0,c
 10485   0054A0  0E96               	movlw	150
 10486   0054A2  6E1E               	movwf	??_RetryMove^0,c
 10487   0054A4  0E7F               	movlw	127
 10488   0054A6                     u6207:
 10489   0054A6  2EE8               	decfsz	wreg,f,c
 10490   0054A8  D7FE               	bra	u6207
 10491   0054AA  2E1E               	decfsz	??_RetryMove^0,f,c
 10492   0054AC  D7FC               	bra	u6207
 10493   0054AE  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
 10494   0054B0  D7FA               	bra	u6207
 10495   0054B2  F000               	nop	
 10496   0054B4                     
 10497                           ;dc_motor.c: 328:     stop(&motorL, &motorR);
 10498   0054B4  0EC5               	movlw	low _motorL
 10499   0054B6  6E14               	movwf	stop@mL^0,c
 10500   0054B8  0E01               	movlw	high _motorL
 10501   0054BA  6E15               	movwf	(stop@mL+1)^0,c
 10502   0054BC  0EBC               	movlw	low _motorR
 10503   0054BE  6E16               	movwf	stop@mR^0,c
 10504   0054C0  0E01               	movlw	high _motorR
 10505   0054C2  6E17               	movwf	(stop@mR+1)^0,c
 10506   0054C4  EC85  F02A         	call	_stop	;wreg free
 10507   0054C8                     
 10508                           ;dc_motor.c: 329:     fullSpeedAhead(mL,mR);
 10509   0054C8  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
 10510   0054CC  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
 10511   0054D0  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
 10512   0054D4  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
 10513   0054D8  ECB1  F029         	call	_fullSpeedAhead	;wreg free
 10514   0054DC                     
 10515                           ;dc_motor.c: 330:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10516   0054DC  0E29               	movlw	41
 10517   0054DE  6E1F               	movwf	(??_RetryMove+1)^0,c
 10518   0054E0  0E96               	movlw	150
 10519   0054E2  6E1E               	movwf	??_RetryMove^0,c
 10520   0054E4  0E7F               	movlw	127
 10521   0054E6                     u6217:
 10522   0054E6  2EE8               	decfsz	wreg,f,c
 10523   0054E8  D7FE               	bra	u6217
 10524   0054EA  2E1E               	decfsz	??_RetryMove^0,f,c
 10525   0054EC  D7FC               	bra	u6217
 10526   0054EE  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
 10527   0054F0  D7FA               	bra	u6217
 10528   0054F2  F000               	nop	
 10529                           
 10530                           ;dc_motor.c: 331:     stop(&motorL, &motorR);
 10531   0054F4  0EC5               	movlw	low _motorL
 10532   0054F6  6E14               	movwf	stop@mL^0,c
 10533   0054F8  0E01               	movlw	high _motorL
 10534   0054FA  6E15               	movwf	(stop@mL+1)^0,c
 10535   0054FC  0EBC               	movlw	low _motorR
 10536   0054FE  6E16               	movwf	stop@mR^0,c
 10537   005500  0E01               	movlw	high _motorR
 10538   005502  6E17               	movwf	(stop@mR+1)^0,c
 10539   005504  EC85  F02A         	call	_stop	;wreg free
 10540   005508  0012               	return		;funcret
 10541   00550A                     __end_of_RetryMove:
 10542                           	callstack 0
 10543                           
 10544 ;; *************** function _PinkMove *****************
 10545 ;; Defined at:
 10546 ;;		line 298 in file "dc_motor.c"
 10547 ;; Parameters:    Size  Location     Type
 10548 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10549 ;;		 -> motorL(9), 
 10550 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10551 ;;		 -> motorR(9), 
 10552 ;; Auto vars:     Size  Location     Type
 10553 ;;		None
 10554 ;; Return value:  Size  Location     Type
 10555 ;;                  1    wreg      void 
 10556 ;; Registers used:
 10557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10558 ;; Tracked objects:
 10559 ;;		On entry : 0/0
 10560 ;;		On exit  : 0/0
 10561 ;;		Unchanged: 0/0
 10562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10566 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10567 ;;Total ram usage:        4 bytes
 10568 ;; Hardware stack levels used: 1
 10569 ;; Hardware stack levels required when called: 4
 10570 ;; This function calls:
 10571 ;;		_reverseDetect
 10572 ;;		_reverseOneBlock
 10573 ;;		_turnLeft45
 10574 ;; This function is called by:
 10575 ;;		_main
 10576 ;; This function uses a non-reentrant model
 10577 ;;
 10578                           
 10579                           	psect	text57
 10580   005B5C                     __ptext57:
 10581                           	callstack 0
 10582   005B5C                     _PinkMove:
 10583                           	callstack 26
 10584   005B5C                     
 10585                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
 10586   005B5C  0EC5               	movlw	low _motorL
 10587   005B5E  6E1A               	movwf	reverseDetect@mL^0,c
 10588   005B60  0E01               	movlw	high _motorL
 10589   005B62  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10590   005B64  0EBC               	movlw	low _motorR
 10591   005B66  6E1C               	movwf	reverseDetect@mR^0,c
 10592   005B68  0E01               	movlw	high _motorR
 10593   005B6A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10594   005B6C  EC5C  F02C         	call	_reverseDetect	;wreg free
 10595                           
 10596                           ;dc_motor.c: 301:     reverseOneBlock(&motorL, &motorR);
 10597   005B70  0EC5               	movlw	low _motorL
 10598   005B72  6E1A               	movwf	reverseOneBlock@mL^0,c
 10599   005B74  0E01               	movlw	high _motorL
 10600   005B76  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10601   005B78  0EBC               	movlw	low _motorR
 10602   005B7A  6E1C               	movwf	reverseOneBlock@mR^0,c
 10603   005B7C  0E01               	movlw	high _motorR
 10604   005B7E  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10605   005B80  EC2F  F02C         	call	_reverseOneBlock	;wreg free
 10606                           
 10607                           ;dc_motor.c: 303:     turnLeft45(&motorL, &motorR);
 10608   005B84  0EC5               	movlw	low _motorL
 10609   005B86  6E1A               	movwf	turnLeft45@mL^0,c
 10610   005B88  0E01               	movlw	high _motorL
 10611   005B8A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10612   005B8C  0EBC               	movlw	low _motorR
 10613   005B8E  6E1C               	movwf	turnLeft45@mR^0,c
 10614   005B90  0E01               	movlw	high _motorR
 10615   005B92  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10616   005B94  ECC6  F02E         	call	_turnLeft45	;wreg free
 10617                           
 10618                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
 10619   005B98  0EC5               	movlw	low _motorL
 10620   005B9A  6E1A               	movwf	turnLeft45@mL^0,c
 10621   005B9C  0E01               	movlw	high _motorL
 10622   005B9E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10623   005BA0  0EBC               	movlw	low _motorR
 10624   005BA2  6E1C               	movwf	turnLeft45@mR^0,c
 10625   005BA4  0E01               	movlw	high _motorR
 10626   005BA6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10627   005BA8  ECC6  F02E         	call	_turnLeft45	;wreg free
 10628   005BAC  0012               	return		;funcret
 10629   005BAE                     __end_of_PinkMove:
 10630                           	callstack 0
 10631                           
 10632 ;; *************** function _turnLeft45 *****************
 10633 ;; Defined at:
 10634 ;;		line 218 in file "dc_motor.c"
 10635 ;; Parameters:    Size  Location     Type
 10636 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10637 ;;		 -> motorL(9), 
 10638 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10639 ;;		 -> motorR(9), 
 10640 ;; Auto vars:     Size  Location     Type
 10641 ;;		None
 10642 ;; Return value:  Size  Location     Type
 10643 ;;                  1    wreg      void 
 10644 ;; Registers used:
 10645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10646 ;; Tracked objects:
 10647 ;;		On entry : 0/0
 10648 ;;		On exit  : 0/0
 10649 ;;		Unchanged: 0/0
 10650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10651 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10653 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10654 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10655 ;;Total ram usage:        6 bytes
 10656 ;; Hardware stack levels used: 1
 10657 ;; Hardware stack levels required when called: 3
 10658 ;; This function calls:
 10659 ;;		_TurnDelay
 10660 ;;		_stop
 10661 ;;		_turnLeft
 10662 ;; This function is called by:
 10663 ;;		_GreenMove
 10664 ;;		_PinkMove
 10665 ;;		_LightBlueMove
 10666 ;;		_ReversePink
 10667 ;;		_turnCalibration
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671                           	psect	text58
 10672   005D8C                     __ptext58:
 10673                           	callstack 0
 10674   005D8C                     _turnLeft45:
 10675                           	callstack 26
 10676   005D8C                     
 10677                           ;dc_motor.c: 219:     turnLeft(mL,mR);
 10678   005D8C  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10679   005D90  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10680   005D94  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10681   005D98  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10682   005D9C  EC13  F029         	call	_turnLeft	;wreg free
 10683   005DA0                     
 10684                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
 10685   005DA0  C0F9  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10686   005DA4  C0FA  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10687   005DA8  EC0B  F030         	call	_TurnDelay	;wreg free
 10688   005DAC                     
 10689                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
 10690   005DAC  0EC5               	movlw	low _motorL
 10691   005DAE  6E14               	movwf	stop@mL^0,c
 10692   005DB0  0E01               	movlw	high _motorL
 10693   005DB2  6E15               	movwf	(stop@mL+1)^0,c
 10694   005DB4  0EBC               	movlw	low _motorR
 10695   005DB6  6E16               	movwf	stop@mR^0,c
 10696   005DB8  0E01               	movlw	high _motorR
 10697   005DBA  6E17               	movwf	(stop@mR+1)^0,c
 10698   005DBC  EC85  F02A         	call	_stop	;wreg free
 10699   005DC0                     
 10700                           ;dc_motor.c: 222:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10701   005DC0  0E05               	movlw	5
 10702   005DC2  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10703   005DC4  0E0F               	movlw	15
 10704   005DC6  6E1E               	movwf	??_turnLeft45^0,c
 10705   005DC8  0EF1               	movlw	241
 10706   005DCA                     u6227:
 10707   005DCA  2EE8               	decfsz	wreg,f,c
 10708   005DCC  D7FE               	bra	u6227
 10709   005DCE  2E1E               	decfsz	??_turnLeft45^0,f,c
 10710   005DD0  D7FC               	bra	u6227
 10711   005DD2  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10712   005DD4  D7FA               	bra	u6227
 10713   005DD6  F000               	nop	
 10714   005DD8  0012               	return		;funcret
 10715   005DDA                     __end_of_turnLeft45:
 10716                           	callstack 0
 10717                           
 10718 ;; *************** function _turnLeft *****************
 10719 ;; Defined at:
 10720 ;;		line 111 in file "dc_motor.c"
 10721 ;; Parameters:    Size  Location     Type
 10722 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10723 ;;		 -> motorL(9), 
 10724 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10725 ;;		 -> motorR(9), 
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;		None
 10728 ;; Return value:  Size  Location     Type
 10729 ;;                  1    wreg      void 
 10730 ;; Registers used:
 10731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10737 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10740 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10741 ;;Total ram usage:        6 bytes
 10742 ;; Hardware stack levels used: 1
 10743 ;; Hardware stack levels required when called: 2
 10744 ;; This function calls:
 10745 ;;		_setMotorPWM
 10746 ;; This function is called by:
 10747 ;;		_turnLeft45
 10748 ;; This function uses a non-reentrant model
 10749 ;;
 10750                           
 10751                           	psect	text59
 10752   005226                     __ptext59:
 10753                           	callstack 0
 10754   005226                     _turnLeft:
 10755                           	callstack 26
 10756   005226                     
 10757                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
 10758   005226  EE20 F001          	lfsr	2,1
 10759   00522A  5014               	movf	turnLeft@mL^0,w,c
 10760   00522C  26D9               	addwf	fsr2l,f,c
 10761   00522E  5015               	movf	(turnLeft@mL+1)^0,w,c
 10762   005230  22DA               	addwfc	fsr2h,f,c
 10763   005232  0E00               	movlw	0
 10764   005234  6EDF               	movwf	indf2,c
 10765                           
 10766                           ;dc_motor.c: 114:     mR->direction =1;
 10767   005236  EE20 F001          	lfsr	2,1
 10768   00523A  5016               	movf	turnLeft@mR^0,w,c
 10769   00523C  26D9               	addwf	fsr2l,f,c
 10770   00523E  5017               	movf	(turnLeft@mR+1)^0,w,c
 10771   005240  22DA               	addwfc	fsr2h,f,c
 10772   005242  0E01               	movlw	1
 10773   005244  6EDF               	movwf	indf2,c
 10774                           
 10775                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
 10776   005246  EF49  F029         	goto	l4715
 10777   00524A                     l4707:
 10778                           
 10779                           ;dc_motor.c: 118:         mL->power+=10;
 10780   00524A  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10781   00524E  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10782   005252  0E0A               	movlw	10
 10783   005254  26DF               	addwf	indf2,f,c
 10784                           
 10785                           ;dc_motor.c: 119:         mR->power+=10;
 10786   005256  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10787   00525A  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10788   00525E  0E0A               	movlw	10
 10789   005260  26DF               	addwf	indf2,f,c
 10790   005262                     
 10791                           ;dc_motor.c: 121:         setMotorPWM(mL);
 10792   005262  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10793   005266  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10794   00526A  EC13  F024         	call	_setMotorPWM	;wreg free
 10795   00526E                     
 10796                           ;dc_motor.c: 122:         setMotorPWM(mR);
 10797   00526E  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10798   005272  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10799   005276  EC13  F024         	call	_setMotorPWM	;wreg free
 10800   00527A                     
 10801                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10802   00527A  0E02               	movlw	2
 10803   00527C  6E19               	movwf	(??_turnLeft+1)^0,c
 10804   00527E  0EA0               	movlw	160
 10805   005280  6E18               	movwf	??_turnLeft^0,c
 10806   005282  0E92               	movlw	146
 10807   005284                     u6237:
 10808   005284  2EE8               	decfsz	wreg,f,c
 10809   005286  D7FE               	bra	u6237
 10810   005288  2E18               	decfsz	??_turnLeft^0,f,c
 10811   00528A  D7FC               	bra	u6237
 10812   00528C  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10813   00528E  D7FA               	bra	u6237
 10814   005290  D000               	nop2	
 10815   005292                     l4715:
 10816   005292  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10817   005296  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10818   00529A  0E1E               	movlw	30
 10819   00529C  60DF               	cpfslt	indf2,c
 10820   00529E  EF53  F029         	goto	u4511
 10821   0052A2  EF55  F029         	goto	u4510
 10822   0052A6                     u4511:
 10823   0052A6  EF61  F029         	goto	l506
 10824   0052AA                     u4510:
 10825   0052AA  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10826   0052AE  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10827   0052B2  0E1D               	movlw	29
 10828   0052B4  64DF               	cpfsgt	indf2,c
 10829   0052B6  EF5F  F029         	goto	u4521
 10830   0052BA  EF61  F029         	goto	u4520
 10831   0052BE                     u4521:
 10832   0052BE  EF25  F029         	goto	l4707
 10833   0052C2                     u4520:
 10834   0052C2                     l506:
 10835   0052C2  0012               	return		;funcret
 10836   0052C4                     __end_of_turnLeft:
 10837                           	callstack 0
 10838                           
 10839 ;; *************** function _TurnDelay *****************
 10840 ;; Defined at:
 10841 ;;		line 204 in file "dc_motor.c"
 10842 ;; Parameters:    Size  Location     Type
 10843 ;;  Turn45Delay     2    0[COMRAM] int 
 10844 ;; Auto vars:     Size  Location     Type
 10845 ;;		None
 10846 ;; Return value:  Size  Location     Type
 10847 ;;                  1    wreg      void 
 10848 ;; Registers used:
 10849 ;;		wreg, status,2, status,0
 10850 ;; Tracked objects:
 10851 ;;		On entry : 0/0
 10852 ;;		On exit  : 0/0
 10853 ;;		Unchanged: 0/0
 10854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10858 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10859 ;;Total ram usage:        3 bytes
 10860 ;; Hardware stack levels used: 1
 10861 ;; This function calls:
 10862 ;;		Nothing
 10863 ;; This function is called by:
 10864 ;;		_turnRight45
 10865 ;;		_turnLeft45
 10866 ;; This function uses a non-reentrant model
 10867 ;;
 10868                           
 10869                           	psect	text60
 10870   006016                     __ptext60:
 10871                           	callstack 0
 10872   006016                     _TurnDelay:
 10873                           	callstack 28
 10874   006016                     
 10875                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10876   006016  EF18  F030         	goto	l541
 10877   00601A                     l4749:
 10878                           
 10879                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10880   00601A  0E15               	movlw	21
 10881   00601C  6E03               	movwf	??_TurnDelay^0,c
 10882   00601E  0EC6               	movlw	198
 10883   006020                     u6247:
 10884   006020  2EE8               	decfsz	wreg,f,c
 10885   006022  D7FE               	bra	u6247
 10886   006024  2E03               	decfsz	??_TurnDelay^0,f,c
 10887   006026  D7FC               	bra	u6247
 10888   006028  D000               	nop2	
 10889   00602A                     
 10890                           ;dc_motor.c: 207:         Turn45Delay--;
 10891   00602A  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10892   00602C  A0D8               	btfss	status,0,c
 10893   00602E  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10894   006030                     l541:
 10895                           
 10896                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10897   006030  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10898   006032  EF25  F030         	goto	u4570
 10899   006036  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10900   006038  E106               	bnz	u4571
 10901   00603A  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10902   00603C  B0D8               	btfsc	status,0,c
 10903   00603E  EF23  F030         	goto	u4571
 10904   006042  EF25  F030         	goto	u4570
 10905   006046                     u4571:
 10906   006046  EF0D  F030         	goto	l4749
 10907   00604A                     u4570:
 10908   00604A  0012               	return		;funcret
 10909   00604C                     __end_of_TurnDelay:
 10910                           	callstack 0
 10911                           
 10912 ;; *************** function _reverseOneBlock *****************
 10913 ;; Defined at:
 10914 ;;		line 232 in file "dc_motor.c"
 10915 ;; Parameters:    Size  Location     Type
 10916 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10917 ;;		 -> motorL(9), 
 10918 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10919 ;;		 -> motorR(9), 
 10920 ;; Auto vars:     Size  Location     Type
 10921 ;;		None
 10922 ;; Return value:  Size  Location     Type
 10923 ;;                  1    wreg      void 
 10924 ;; Registers used:
 10925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10926 ;; Tracked objects:
 10927 ;;		On entry : 0/0
 10928 ;;		On exit  : 0/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10931 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10933 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10934 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10935 ;;Total ram usage:        6 bytes
 10936 ;; Hardware stack levels used: 1
 10937 ;; Hardware stack levels required when called: 3
 10938 ;; This function calls:
 10939 ;;		_fullSpeedBack
 10940 ;;		_stop
 10941 ;; This function is called by:
 10942 ;;		_YellowMove
 10943 ;;		_PinkMove
 10944 ;; This function uses a non-reentrant model
 10945 ;;
 10946                           
 10947                           	psect	text61
 10948   00585E                     __ptext61:
 10949                           	callstack 0
 10950   00585E                     _reverseOneBlock:
 10951                           	callstack 26
 10952   00585E                     
 10953                           ;dc_motor.c: 233:     fullSpeedBack(mL,mR);
 10954   00585E  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10955   005862  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10956   005866  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10957   00586A  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10958   00586E  EC62  F029         	call	_fullSpeedBack	;wreg free
 10959   005872                     
 10960                           ;dc_motor.c: 234:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10961   005872  0EA3               	movlw	163
 10962   005874  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10963   005876  0E57               	movlw	87
 10964   005878  6E1E               	movwf	??_reverseOneBlock^0,c
 10965   00587A  0E02               	movlw	2
 10966   00587C                     u6257:
 10967   00587C  2EE8               	decfsz	wreg,f,c
 10968   00587E  D7FE               	bra	u6257
 10969   005880  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10970   005882  D7FC               	bra	u6257
 10971   005884  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10972   005886  D7FA               	bra	u6257
 10973   005888  D000               	nop2	
 10974   00588A                     
 10975                           ;dc_motor.c: 235:     stop(&motorL, &motorR);
 10976   00588A  0EC5               	movlw	low _motorL
 10977   00588C  6E14               	movwf	stop@mL^0,c
 10978   00588E  0E01               	movlw	high _motorL
 10979   005890  6E15               	movwf	(stop@mL+1)^0,c
 10980   005892  0EBC               	movlw	low _motorR
 10981   005894  6E16               	movwf	stop@mR^0,c
 10982   005896  0E01               	movlw	high _motorR
 10983   005898  6E17               	movwf	(stop@mR+1)^0,c
 10984   00589A  EC85  F02A         	call	_stop	;wreg free
 10985                           
 10986                           ;dc_motor.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10987   00589E  0E05               	movlw	5
 10988   0058A0  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10989   0058A2  0E0F               	movlw	15
 10990   0058A4  6E1E               	movwf	??_reverseOneBlock^0,c
 10991   0058A6  0EF1               	movlw	241
 10992   0058A8                     u6267:
 10993   0058A8  2EE8               	decfsz	wreg,f,c
 10994   0058AA  D7FE               	bra	u6267
 10995   0058AC  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10996   0058AE  D7FC               	bra	u6267
 10997   0058B0  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10998   0058B2  D7FA               	bra	u6267
 10999   0058B4  F000               	nop	
 11000   0058B6  0012               	return		;funcret
 11001   0058B8                     __end_of_reverseOneBlock:
 11002                           	callstack 0
 11003                           
 11004 ;; *************** function _reverseDetect *****************
 11005 ;; Defined at:
 11006 ;;		line 225 in file "dc_motor.c"
 11007 ;; Parameters:    Size  Location     Type
 11008 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11009 ;;		 -> motorL(9), 
 11010 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11011 ;;		 -> motorR(9), 
 11012 ;; Auto vars:     Size  Location     Type
 11013 ;;		None
 11014 ;; Return value:  Size  Location     Type
 11015 ;;                  1    wreg      void 
 11016 ;; Registers used:
 11017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11018 ;; Tracked objects:
 11019 ;;		On entry : 0/0
 11020 ;;		On exit  : 0/0
 11021 ;;		Unchanged: 0/0
 11022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11025 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11026 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11027 ;;Total ram usage:        6 bytes
 11028 ;; Hardware stack levels used: 1
 11029 ;; Hardware stack levels required when called: 3
 11030 ;; This function calls:
 11031 ;;		_fullSpeedBack
 11032 ;;		_stop
 11033 ;; This function is called by:
 11034 ;;		_RedMove
 11035 ;;		_GreenMove
 11036 ;;		_BlueMove
 11037 ;;		_YellowMove
 11038 ;;		_PinkMove
 11039 ;;		_OrangeMove
 11040 ;;		_LightBlueMove
 11041 ;;		_ReverseYellow
 11042 ;;		_ReversePink
 11043 ;;		_go_Home
 11044 ;; This function uses a non-reentrant model
 11045 ;;
 11046                           
 11047                           	psect	text62
 11048   0058B8                     __ptext62:
 11049                           	callstack 0
 11050   0058B8                     _reverseDetect:
 11051                           	callstack 26
 11052   0058B8                     
 11053                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
 11054   0058B8  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 11055   0058BC  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 11056   0058C0  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 11057   0058C4  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 11058   0058C8  EC62  F029         	call	_fullSpeedBack	;wreg free
 11059   0058CC                     
 11060                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
 11061   0058CC  0E11               	movlw	17
 11062   0058CE  6E1F               	movwf	(??_reverseDetect+1)^0,c
 11063   0058D0  0E3C               	movlw	60
 11064   0058D2  6E1E               	movwf	??_reverseDetect^0,c
 11065   0058D4  0ECB               	movlw	203
 11066   0058D6                     u6277:
 11067   0058D6  2EE8               	decfsz	wreg,f,c
 11068   0058D8  D7FE               	bra	u6277
 11069   0058DA  2E1E               	decfsz	??_reverseDetect^0,f,c
 11070   0058DC  D7FC               	bra	u6277
 11071   0058DE  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 11072   0058E0  D7FA               	bra	u6277
 11073   0058E2  F000               	nop	
 11074   0058E4                     
 11075                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
 11076   0058E4  0EC5               	movlw	low _motorL
 11077   0058E6  6E14               	movwf	stop@mL^0,c
 11078   0058E8  0E01               	movlw	high _motorL
 11079   0058EA  6E15               	movwf	(stop@mL+1)^0,c
 11080   0058EC  0EBC               	movlw	low _motorR
 11081   0058EE  6E16               	movwf	stop@mR^0,c
 11082   0058F0  0E01               	movlw	high _motorR
 11083   0058F2  6E17               	movwf	(stop@mR+1)^0,c
 11084   0058F4  EC85  F02A         	call	_stop	;wreg free
 11085                           
 11086                           ;dc_motor.c: 229:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11087   0058F8  0E05               	movlw	5
 11088   0058FA  6E1F               	movwf	(??_reverseDetect+1)^0,c
 11089   0058FC  0E0F               	movlw	15
 11090   0058FE  6E1E               	movwf	??_reverseDetect^0,c
 11091   005900  0EF1               	movlw	241
 11092   005902                     u6287:
 11093   005902  2EE8               	decfsz	wreg,f,c
 11094   005904  D7FE               	bra	u6287
 11095   005906  2E1E               	decfsz	??_reverseDetect^0,f,c
 11096   005908  D7FC               	bra	u6287
 11097   00590A  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 11098   00590C  D7FA               	bra	u6287
 11099   00590E  F000               	nop	
 11100   005910  0012               	return		;funcret
 11101   005912                     __end_of_reverseDetect:
 11102                           	callstack 0
 11103                           
 11104 ;; *************** function _fullSpeedBack *****************
 11105 ;; Defined at:
 11106 ;;		line 185 in file "dc_motor.c"
 11107 ;; Parameters:    Size  Location     Type
 11108 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11109 ;;		 -> motorL(9), 
 11110 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11111 ;;		 -> motorR(9), 
 11112 ;; Auto vars:     Size  Location     Type
 11113 ;;		None
 11114 ;; Return value:  Size  Location     Type
 11115 ;;                  1    wreg      void 
 11116 ;; Registers used:
 11117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11118 ;; Tracked objects:
 11119 ;;		On entry : 0/0
 11120 ;;		On exit  : 0/0
 11121 ;;		Unchanged: 0/0
 11122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11126 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11127 ;;Total ram usage:        6 bytes
 11128 ;; Hardware stack levels used: 1
 11129 ;; Hardware stack levels required when called: 2
 11130 ;; This function calls:
 11131 ;;		_setMotorPWM
 11132 ;; This function is called by:
 11133 ;;		_reverseDetect
 11134 ;;		_reverseOneBlock
 11135 ;;		_RetryMove
 11136 ;;		_Backhalfblock
 11137 ;; This function uses a non-reentrant model
 11138 ;;
 11139                           
 11140                           	psect	text63
 11141   0052C4                     __ptext63:
 11142                           	callstack 0
 11143   0052C4                     _fullSpeedBack:
 11144                           	callstack 26
 11145   0052C4                     
 11146                           ;dc_motor.c: 185: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 186: {;dc_motor.c: 188:     mL->direction =0;
 11147   0052C4  EE20 F001          	lfsr	2,1
 11148   0052C8  5014               	movf	fullSpeedBack@mL^0,w,c
 11149   0052CA  26D9               	addwf	fsr2l,f,c
 11150   0052CC  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 11151   0052CE  22DA               	addwfc	fsr2h,f,c
 11152   0052D0  0E00               	movlw	0
 11153   0052D2  6EDF               	movwf	indf2,c
 11154                           
 11155                           ;dc_motor.c: 189:     mR->direction =0;
 11156   0052D4  EE20 F001          	lfsr	2,1
 11157   0052D8  5016               	movf	fullSpeedBack@mR^0,w,c
 11158   0052DA  26D9               	addwf	fsr2l,f,c
 11159   0052DC  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 11160   0052DE  22DA               	addwfc	fsr2h,f,c
 11161   0052E0  0E00               	movlw	0
 11162   0052E2  6EDF               	movwf	indf2,c
 11163                           
 11164                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
 11165   0052E4  EF98  F029         	goto	l4743
 11166   0052E8                     l4735:
 11167                           
 11168                           ;dc_motor.c: 192:         mL->power+=10;
 11169   0052E8  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11170   0052EC  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11171   0052F0  0E0A               	movlw	10
 11172   0052F2  26DF               	addwf	indf2,f,c
 11173                           
 11174                           ;dc_motor.c: 193:         mR->power+=10;
 11175   0052F4  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11176   0052F8  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11177   0052FC  0E0A               	movlw	10
 11178   0052FE  26DF               	addwf	indf2,f,c
 11179   005300                     
 11180                           ;dc_motor.c: 195:         setMotorPWM(mL);
 11181   005300  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 11182   005304  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11183   005308  EC13  F024         	call	_setMotorPWM	;wreg free
 11184   00530C                     
 11185                           ;dc_motor.c: 196:         setMotorPWM(mR);
 11186   00530C  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 11187   005310  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11188   005314  EC13  F024         	call	_setMotorPWM	;wreg free
 11189   005318                     
 11190                           ;dc_motor.c: 198:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11191   005318  0E02               	movlw	2
 11192   00531A  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 11193   00531C  0EA0               	movlw	160
 11194   00531E  6E18               	movwf	??_fullSpeedBack^0,c
 11195   005320  0E92               	movlw	146
 11196   005322                     u6297:
 11197   005322  2EE8               	decfsz	wreg,f,c
 11198   005324  D7FE               	bra	u6297
 11199   005326  2E18               	decfsz	??_fullSpeedBack^0,f,c
 11200   005328  D7FC               	bra	u6297
 11201   00532A  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11202   00532C  D7FA               	bra	u6297
 11203   00532E  D000               	nop2	
 11204   005330                     l4743:
 11205   005330  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11206   005334  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11207   005338  0E1E               	movlw	30
 11208   00533A  60DF               	cpfslt	indf2,c
 11209   00533C  EFA2  F029         	goto	u4551
 11210   005340  EFA4  F029         	goto	u4550
 11211   005344                     u4551:
 11212   005344  EFB0  F029         	goto	l538
 11213   005348                     u4550:
 11214   005348  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11215   00534C  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11216   005350  0E1D               	movlw	29
 11217   005352  64DF               	cpfsgt	indf2,c
 11218   005354  EFAE  F029         	goto	u4561
 11219   005358  EFB0  F029         	goto	u4560
 11220   00535C                     u4561:
 11221   00535C  EF74  F029         	goto	l4735
 11222   005360                     u4560:
 11223   005360                     l538:
 11224   005360  0012               	return		;funcret
 11225   005362                     __end_of_fullSpeedBack:
 11226                           	callstack 0
 11227                           
 11228 ;; *************** function _Interrupts_init *****************
 11229 ;; Defined at:
 11230 ;;		line 9 in file "interrupts.c"
 11231 ;; Parameters:    Size  Location     Type
 11232 ;;		None
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;		None
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  1    wreg      void 
 11237 ;; Registers used:
 11238 ;;		None
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/0
 11241 ;;		On exit  : 0/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11248 ;;Total ram usage:        0 bytes
 11249 ;; Hardware stack levels used: 1
 11250 ;; This function calls:
 11251 ;;		Nothing
 11252 ;; This function is called by:
 11253 ;;		_main
 11254 ;; This function uses a non-reentrant model
 11255 ;;
 11256                           
 11257                           	psect	text64
 11258   0061C6                     __ptext64:
 11259                           	callstack 0
 11260   0061C6                     _Interrupts_init:
 11261                           	callstack 30
 11262   0061C6  0012               	return		;funcret
 11263   0061C8                     __end_of_Interrupts_init:
 11264                           	callstack 0
 11265                           
 11266 ;; *************** function _Forwardhalfblock *****************
 11267 ;; Defined at:
 11268 ;;		line 245 in file "dc_motor.c"
 11269 ;; Parameters:    Size  Location     Type
 11270 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11271 ;;		 -> motorL(9), 
 11272 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11273 ;;		 -> motorR(9), 
 11274 ;; Auto vars:     Size  Location     Type
 11275 ;;		None
 11276 ;; Return value:  Size  Location     Type
 11277 ;;                  1    wreg      void 
 11278 ;; Registers used:
 11279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11280 ;; Tracked objects:
 11281 ;;		On entry : 0/0
 11282 ;;		On exit  : 0/0
 11283 ;;		Unchanged: 0/0
 11284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11285 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11287 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11288 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11289 ;;Total ram usage:        6 bytes
 11290 ;; Hardware stack levels used: 1
 11291 ;; Hardware stack levels required when called: 3
 11292 ;; This function calls:
 11293 ;;		_fullSpeedAhead
 11294 ;;		_stop
 11295 ;; This function is called by:
 11296 ;;		_main
 11297 ;; This function uses a non-reentrant model
 11298 ;;
 11299                           
 11300                           	psect	text65
 11301   005912                     __ptext65:
 11302                           	callstack 0
 11303   005912                     _Forwardhalfblock:
 11304                           	callstack 27
 11305   005912                     
 11306                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
 11307   005912  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11308   005916  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11309   00591A  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11310   00591E  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11311   005922  ECB1  F029         	call	_fullSpeedAhead	;wreg free
 11312   005926                     
 11313                           ;dc_motor.c: 247:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11314   005926  0E52               	movlw	82
 11315   005928  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11316   00592A  0E2B               	movlw	43
 11317   00592C  6E1E               	movwf	??_Forwardhalfblock^0,c
 11318   00592E  0E00               	movlw	0
 11319   005930                     u6307:
 11320   005930  2EE8               	decfsz	wreg,f,c
 11321   005932  D7FE               	bra	u6307
 11322   005934  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11323   005936  D7FC               	bra	u6307
 11324   005938  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11325   00593A  D7FA               	bra	u6307
 11326   00593C  D000               	nop2	
 11327   00593E                     
 11328                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
 11329   00593E  0EC5               	movlw	low _motorL
 11330   005940  6E14               	movwf	stop@mL^0,c
 11331   005942  0E01               	movlw	high _motorL
 11332   005944  6E15               	movwf	(stop@mL+1)^0,c
 11333   005946  0EBC               	movlw	low _motorR
 11334   005948  6E16               	movwf	stop@mR^0,c
 11335   00594A  0E01               	movlw	high _motorR
 11336   00594C  6E17               	movwf	(stop@mR+1)^0,c
 11337   00594E  EC85  F02A         	call	_stop	;wreg free
 11338                           
 11339                           ;dc_motor.c: 249:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11340   005952  0E05               	movlw	5
 11341   005954  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11342   005956  0E0F               	movlw	15
 11343   005958  6E1E               	movwf	??_Forwardhalfblock^0,c
 11344   00595A  0EF1               	movlw	241
 11345   00595C                     u6317:
 11346   00595C  2EE8               	decfsz	wreg,f,c
 11347   00595E  D7FE               	bra	u6317
 11348   005960  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11349   005962  D7FC               	bra	u6317
 11350   005964  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11351   005966  D7FA               	bra	u6317
 11352   005968  F000               	nop	
 11353   00596A  0012               	return		;funcret
 11354   00596C                     __end_of_Forwardhalfblock:
 11355                           	callstack 0
 11356                           
 11357 ;; *************** function _stop *****************
 11358 ;; Defined at:
 11359 ;;		line 93 in file "dc_motor.c"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11362 ;;		 -> motorL(9), 
 11363 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11364 ;;		 -> motorR(9), 
 11365 ;; Auto vars:     Size  Location     Type
 11366 ;;		None
 11367 ;; Return value:  Size  Location     Type
 11368 ;;                  1    wreg      void 
 11369 ;; Registers used:
 11370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11371 ;; Tracked objects:
 11372 ;;		On entry : 0/0
 11373 ;;		On exit  : 0/0
 11374 ;;		Unchanged: 0/0
 11375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11376 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11379 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11380 ;;Total ram usage:        6 bytes
 11381 ;; Hardware stack levels used: 1
 11382 ;; Hardware stack levels required when called: 2
 11383 ;; This function calls:
 11384 ;;		_setMotorPWM
 11385 ;; This function is called by:
 11386 ;;		_main
 11387 ;;		_turnRight45
 11388 ;;		_turnLeft45
 11389 ;;		_reverseDetect
 11390 ;;		_reverseOneBlock
 11391 ;;		_ForwardOneBlock
 11392 ;;		_Forwardhalfblock
 11393 ;;		_RetryMove
 11394 ;;		_Backhalfblock
 11395 ;; This function uses a non-reentrant model
 11396 ;;
 11397                           
 11398                           	psect	text66
 11399   00550A                     __ptext66:
 11400                           	callstack 0
 11401   00550A                     _stop:
 11402                           	callstack 26
 11403   00550A                     
 11404                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
 11405   00550A  EFAB  F02A         	goto	l4701
 11406   00550E                     l4693:
 11407                           
 11408                           ;dc_motor.c: 97:         mL->power-=10;
 11409   00550E  C014  FFD9         	movff	stop@mL,fsr2l
 11410   005512  C015  FFDA         	movff	stop@mL+1,fsr2h
 11411   005516  0E0A               	movlw	10
 11412   005518  5EDF               	subwf	indf2,f,c
 11413                           
 11414                           ;dc_motor.c: 98:         mR->power-=10;
 11415   00551A  C016  FFD9         	movff	stop@mR,fsr2l
 11416   00551E  C017  FFDA         	movff	stop@mR+1,fsr2h
 11417   005522  0E0A               	movlw	10
 11418   005524  5EDF               	subwf	indf2,f,c
 11419   005526                     
 11420                           ;dc_motor.c: 103:         setMotorPWM(mL);
 11421   005526  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11422   00552A  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11423   00552E  EC13  F024         	call	_setMotorPWM	;wreg free
 11424   005532                     
 11425                           ;dc_motor.c: 104:         setMotorPWM(mR);
 11426   005532  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11427   005536  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11428   00553A  EC13  F024         	call	_setMotorPWM	;wreg free
 11429   00553E                     
 11430                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11431   00553E  0E02               	movlw	2
 11432   005540  6E19               	movwf	(??_stop+1)^0,c
 11433   005542  0EA0               	movlw	160
 11434   005544  6E18               	movwf	??_stop^0,c
 11435   005546  0E92               	movlw	146
 11436   005548                     u6327:
 11437   005548  2EE8               	decfsz	wreg,f,c
 11438   00554A  D7FE               	bra	u6327
 11439   00554C  2E18               	decfsz	??_stop^0,f,c
 11440   00554E  D7FC               	bra	u6327
 11441   005550  2E19               	decfsz	(??_stop+1)^0,f,c
 11442   005552  D7FA               	bra	u6327
 11443   005554  D000               	nop2	
 11444   005556                     l4701:
 11445                           
 11446                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
 11447   005556  C014  FFD9         	movff	stop@mL,fsr2l
 11448   00555A  C015  FFDA         	movff	stop@mL+1,fsr2h
 11449   00555E  50DF               	movf	indf2,w,c
 11450   005560  A4D8               	btfss	status,2,c
 11451   005562  EFB5  F02A         	goto	u4491
 11452   005566  EFB7  F02A         	goto	u4490
 11453   00556A                     u4491:
 11454   00556A  EF87  F02A         	goto	l4693
 11455   00556E                     u4490:
 11456   00556E  C016  FFD9         	movff	stop@mR,fsr2l
 11457   005572  C017  FFDA         	movff	stop@mR+1,fsr2h
 11458   005576  50DF               	movf	indf2,w,c
 11459   005578  A4D8               	btfss	status,2,c
 11460   00557A  EFC1  F02A         	goto	u4501
 11461   00557E  EFC3  F02A         	goto	u4500
 11462   005582                     u4501:
 11463   005582  EF87  F02A         	goto	l4693
 11464   005586                     u4500:
 11465   005586  0012               	return		;funcret
 11466   005588                     __end_of_stop:
 11467                           	callstack 0
 11468                           
 11469 ;; *************** function _fullSpeedAhead *****************
 11470 ;; Defined at:
 11471 ;;		line 147 in file "dc_motor.c"
 11472 ;; Parameters:    Size  Location     Type
 11473 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11474 ;;		 -> motorL(9), 
 11475 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11476 ;;		 -> motorR(9), 
 11477 ;; Auto vars:     Size  Location     Type
 11478 ;;		None
 11479 ;; Return value:  Size  Location     Type
 11480 ;;                  1    wreg      void 
 11481 ;; Registers used:
 11482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11483 ;; Tracked objects:
 11484 ;;		On entry : 0/0
 11485 ;;		On exit  : 0/0
 11486 ;;		Unchanged: 0/0
 11487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11491 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11492 ;;Total ram usage:        6 bytes
 11493 ;; Hardware stack levels used: 1
 11494 ;; Hardware stack levels required when called: 2
 11495 ;; This function calls:
 11496 ;;		_setMotorPWM
 11497 ;; This function is called by:
 11498 ;;		_main
 11499 ;;		_ForwardOneBlock
 11500 ;;		_Forwardhalfblock
 11501 ;;		_RetryMove
 11502 ;; This function uses a non-reentrant model
 11503 ;;
 11504                           
 11505                           	psect	text67
 11506   005362                     __ptext67:
 11507                           	callstack 0
 11508   005362                     _fullSpeedAhead:
 11509                           	callstack 25
 11510   005362                     
 11511                           ;dc_motor.c: 147: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 148: {;dc_motor.c: 150:     mL->direction =1;
 11512   005362  EE20 F001          	lfsr	2,1
 11513   005366  5014               	movf	fullSpeedAhead@mL^0,w,c
 11514   005368  26D9               	addwf	fsr2l,f,c
 11515   00536A  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11516   00536C  22DA               	addwfc	fsr2h,f,c
 11517   00536E  0E01               	movlw	1
 11518   005370  6EDF               	movwf	indf2,c
 11519                           
 11520                           ;dc_motor.c: 151:     mR->direction =1;
 11521   005372  EE20 F001          	lfsr	2,1
 11522   005376  5016               	movf	fullSpeedAhead@mR^0,w,c
 11523   005378  26D9               	addwf	fsr2l,f,c
 11524   00537A  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11525   00537C  22DA               	addwfc	fsr2h,f,c
 11526   00537E  0E01               	movlw	1
 11527   005380  6EDF               	movwf	indf2,c
 11528                           
 11529                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
 11530   005382  EFE7  F029         	goto	l4687
 11531   005386                     l4679:
 11532                           
 11533                           ;dc_motor.c: 154:         mL->power+=10;
 11534   005386  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11535   00538A  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11536   00538E  0E0A               	movlw	10
 11537   005390  26DF               	addwf	indf2,f,c
 11538                           
 11539                           ;dc_motor.c: 155:         mR->power+=10;
 11540   005392  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11541   005396  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11542   00539A  0E0A               	movlw	10
 11543   00539C  26DF               	addwf	indf2,f,c
 11544   00539E                     
 11545                           ;dc_motor.c: 157:         setMotorPWM(mL);
 11546   00539E  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11547   0053A2  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11548   0053A6  EC13  F024         	call	_setMotorPWM	;wreg free
 11549   0053AA                     
 11550                           ;dc_motor.c: 158:         setMotorPWM(mR);
 11551   0053AA  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11552   0053AE  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11553   0053B2  EC13  F024         	call	_setMotorPWM	;wreg free
 11554   0053B6                     
 11555                           ;dc_motor.c: 161:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11556   0053B6  0E02               	movlw	2
 11557   0053B8  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11558   0053BA  0EA0               	movlw	160
 11559   0053BC  6E18               	movwf	??_fullSpeedAhead^0,c
 11560   0053BE  0E92               	movlw	146
 11561   0053C0                     u6337:
 11562   0053C0  2EE8               	decfsz	wreg,f,c
 11563   0053C2  D7FE               	bra	u6337
 11564   0053C4  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11565   0053C6  D7FC               	bra	u6337
 11566   0053C8  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11567   0053CA  D7FA               	bra	u6337
 11568   0053CC  D000               	nop2	
 11569   0053CE                     l4687:
 11570   0053CE  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11571   0053D2  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11572   0053D6  0E1E               	movlw	30
 11573   0053D8  60DF               	cpfslt	indf2,c
 11574   0053DA  EFF1  F029         	goto	u4471
 11575   0053DE  EFF3  F029         	goto	u4470
 11576   0053E2                     u4471:
 11577   0053E2  EFFF  F029         	goto	l522
 11578   0053E6                     u4470:
 11579   0053E6  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11580   0053EA  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11581   0053EE  0E1D               	movlw	29
 11582   0053F0  64DF               	cpfsgt	indf2,c
 11583   0053F2  EFFD  F029         	goto	u4481
 11584   0053F6  EFFF  F029         	goto	u4480
 11585   0053FA                     u4481:
 11586   0053FA  EFC3  F029         	goto	l4679
 11587   0053FE                     u4480:
 11588   0053FE                     l522:
 11589   0053FE  0012               	return		;funcret
 11590   005400                     __end_of_fullSpeedAhead:
 11591                           	callstack 0
 11592                           
 11593 ;; *************** function _setMotorPWM *****************
 11594 ;; Defined at:
 11595 ;;		line 68 in file "dc_motor.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11598 ;;		 -> motorR(9), motorL(9), 
 11599 ;; Auto vars:     Size  Location     Type
 11600 ;;  negDuty         1   18[COMRAM] unsigned char 
 11601 ;;  posDuty         1   17[COMRAM] unsigned char 
 11602 ;; Return value:  Size  Location     Type
 11603 ;;                  1    wreg      void 
 11604 ;; Registers used:
 11605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11606 ;; Tracked objects:
 11607 ;;		On entry : 0/0
 11608 ;;		On exit  : 0/0
 11609 ;;		Unchanged: 0/0
 11610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11612 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11613 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11614 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11615 ;;Total ram usage:        6 bytes
 11616 ;; Hardware stack levels used: 1
 11617 ;; Hardware stack levels required when called: 1
 11618 ;; This function calls:
 11619 ;;		___lwdiv
 11620 ;;		___wmul
 11621 ;; This function is called by:
 11622 ;;		_stop
 11623 ;;		_turnLeft
 11624 ;;		_turnRight
 11625 ;;		_fullSpeedAhead
 11626 ;;		_timed_forward
 11627 ;;		_fullSpeedBack
 11628 ;; This function uses a non-reentrant model
 11629 ;;
 11630                           
 11631                           	psect	text68
 11632   004826                     __ptext68:
 11633                           	callstack 0
 11634   004826                     _setMotorPWM:
 11635                           	callstack 26
 11636   004826                     
 11637                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 11638   004826  EE20 F002          	lfsr	2,2
 11639   00482A  500E               	movf	setMotorPWM@m^0,w,c
 11640   00482C  26D9               	addwf	fsr2l,f,c
 11641   00482E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11642   004830  22DA               	addwfc	fsr2h,f,c
 11643   004832  50DF               	movf	indf2,w,c
 11644   004834  B4D8               	btfsc	status,2,c
 11645   004836  EF1F  F024         	goto	u3491
 11646   00483A  EF21  F024         	goto	u3490
 11647   00483E                     u3491:
 11648   00483E  EF55  F024         	goto	l4131
 11649   004842                     u3490:
 11650   004842                     
 11651                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11652   004842  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11653   004846  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11654   00484A  50DF               	movf	indf2,w,c
 11655   00484C  6E10               	movwf	??_setMotorPWM^0,c
 11656   00484E  5010               	movf	??_setMotorPWM^0,w,c
 11657   004850  6E01               	movwf	___wmul@multiplier^0,c
 11658   004852  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11659   004854  EE20 F003          	lfsr	2,3
 11660   004858  500E               	movf	setMotorPWM@m^0,w,c
 11661   00485A  26D9               	addwf	fsr2l,f,c
 11662   00485C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11663   00485E  22DA               	addwfc	fsr2h,f,c
 11664   004860  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11665   004864  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11666   004868  EC7A  F030         	call	___wmul	;wreg free
 11667   00486C  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11668   004870  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11669   004874  0E00               	movlw	0
 11670   004876  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11671   004878  0E64               	movlw	100
 11672   00487A  6E09               	movwf	___lwdiv@divisor^0,c
 11673   00487C  EC01  F02B         	call	___lwdiv	;wreg free
 11674   004880  EE20 F003          	lfsr	2,3
 11675   004884  500E               	movf	setMotorPWM@m^0,w,c
 11676   004886  26D9               	addwf	fsr2l,f,c
 11677   004888  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11678   00488A  22DA               	addwfc	fsr2h,f,c
 11679   00488C  50DF               	movf	indf2,w,c
 11680   00488E  6E11               	movwf	(??_setMotorPWM+1)^0,c
 11681   004890  5007               	movf	?___lwdiv^0,w,c
 11682   004892  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 11683   004894  6E12               	movwf	setMotorPWM@posDuty^0,c
 11684   004896                     
 11685                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 11686   004896  EE20 F003          	lfsr	2,3
 11687   00489A  500E               	movf	setMotorPWM@m^0,w,c
 11688   00489C  26D9               	addwf	fsr2l,f,c
 11689   00489E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11690   0048A0  22DA               	addwfc	fsr2h,f,c
 11691   0048A2  50DF               	movf	indf2,w,c
 11692   0048A4  6E13               	movwf	setMotorPWM@negDuty^0,c
 11693                           
 11694                           ;dc_motor.c: 75:     }
 11695   0048A6  EF78  F024         	goto	l4135
 11696   0048AA                     l4131:
 11697                           
 11698                           ;dc_motor.c: 77:         posDuty=0;
 11699   0048AA  0E00               	movlw	0
 11700   0048AC  6E12               	movwf	setMotorPWM@posDuty^0,c
 11701   0048AE                     
 11702                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11703   0048AE  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11704   0048B2  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11705   0048B6  50DF               	movf	indf2,w,c
 11706   0048B8  6E10               	movwf	??_setMotorPWM^0,c
 11707   0048BA  5010               	movf	??_setMotorPWM^0,w,c
 11708   0048BC  6E01               	movwf	___wmul@multiplier^0,c
 11709   0048BE  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11710   0048C0  EE20 F003          	lfsr	2,3
 11711   0048C4  500E               	movf	setMotorPWM@m^0,w,c
 11712   0048C6  26D9               	addwf	fsr2l,f,c
 11713   0048C8  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11714   0048CA  22DA               	addwfc	fsr2h,f,c
 11715   0048CC  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11716   0048D0  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11717   0048D4  EC7A  F030         	call	___wmul	;wreg free
 11718   0048D8  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11719   0048DC  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11720   0048E0  0E00               	movlw	0
 11721   0048E2  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11722   0048E4  0E64               	movlw	100
 11723   0048E6  6E09               	movwf	___lwdiv@divisor^0,c
 11724   0048E8  EC01  F02B         	call	___lwdiv	;wreg free
 11725   0048EC  5007               	movf	?___lwdiv^0,w,c
 11726   0048EE  6E13               	movwf	setMotorPWM@negDuty^0,c
 11727   0048F0                     l4135:
 11728                           
 11729                           ;dc_motor.c: 81:     if (m->direction) {
 11730   0048F0  EE20 F001          	lfsr	2,1
 11731   0048F4  500E               	movf	setMotorPWM@m^0,w,c
 11732   0048F6  26D9               	addwf	fsr2l,f,c
 11733   0048F8  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11734   0048FA  22DA               	addwfc	fsr2h,f,c
 11735   0048FC  50DF               	movf	indf2,w,c
 11736   0048FE  B4D8               	btfsc	status,2,c
 11737   004900  EF84  F024         	goto	u3501
 11738   004904  EF86  F024         	goto	u3500
 11739   004908                     u3501:
 11740   004908  EFA8  F024         	goto	l4139
 11741   00490C                     u3500:
 11742   00490C                     
 11743                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
 11744   00490C  EE20 F005          	lfsr	2,5
 11745   004910  500E               	movf	setMotorPWM@m^0,w,c
 11746   004912  26D9               	addwf	fsr2l,f,c
 11747   004914  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11748   004916  22DA               	addwfc	fsr2h,f,c
 11749   004918  CFDE F010          	movff	postinc2,??_setMotorPWM
 11750   00491C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11751   004920  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11752   004924  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11753   004928  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11754                           
 11755                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
 11756   00492C  EE20 F007          	lfsr	2,7
 11757   004930  500E               	movf	setMotorPWM@m^0,w,c
 11758   004932  26D9               	addwf	fsr2l,f,c
 11759   004934  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11760   004936  22DA               	addwfc	fsr2h,f,c
 11761   004938  CFDE F010          	movff	postinc2,??_setMotorPWM
 11762   00493C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11763   004940  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11764   004944  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11765   004948  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11766                           
 11767                           ;dc_motor.c: 86:     } else {
 11768   00494C  EFC8  F024         	goto	l492
 11769   004950                     l4139:
 11770                           
 11771                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
 11772   004950  EE20 F005          	lfsr	2,5
 11773   004954  500E               	movf	setMotorPWM@m^0,w,c
 11774   004956  26D9               	addwf	fsr2l,f,c
 11775   004958  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11776   00495A  22DA               	addwfc	fsr2h,f,c
 11777   00495C  CFDE F010          	movff	postinc2,??_setMotorPWM
 11778   004960  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11779   004964  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11780   004968  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11781   00496C  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11782                           
 11783                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
 11784   004970  EE20 F007          	lfsr	2,7
 11785   004974  500E               	movf	setMotorPWM@m^0,w,c
 11786   004976  26D9               	addwf	fsr2l,f,c
 11787   004978  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11788   00497A  22DA               	addwfc	fsr2h,f,c
 11789   00497C  CFDE F010          	movff	postinc2,??_setMotorPWM
 11790   004980  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11791   004984  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11792   004988  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11793   00498C  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11794   004990                     l492:
 11795   004990  0012               	return		;funcret
 11796   004992                     __end_of_setMotorPWM:
 11797                           	callstack 0
 11798                           
 11799 ;; *************** function ___wmul *****************
 11800 ;; Defined at:
 11801 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 11802 ;; Parameters:    Size  Location     Type
 11803 ;;  multiplier      2    0[COMRAM] unsigned int 
 11804 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11805 ;; Auto vars:     Size  Location     Type
 11806 ;;  product         2    4[COMRAM] unsigned int 
 11807 ;; Return value:  Size  Location     Type
 11808 ;;                  2    0[COMRAM] unsigned int 
 11809 ;; Registers used:
 11810 ;;		wreg, status,2, status,0, prodl, prodh
 11811 ;; Tracked objects:
 11812 ;;		On entry : 0/0
 11813 ;;		On exit  : 0/0
 11814 ;;		Unchanged: 0/0
 11815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11816 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11817 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11819 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11820 ;;Total ram usage:        6 bytes
 11821 ;; Hardware stack levels used: 1
 11822 ;; This function calls:
 11823 ;;		Nothing
 11824 ;; This function is called by:
 11825 ;;		_setMotorPWM
 11826 ;; This function uses a non-reentrant model
 11827 ;;
 11828                           
 11829                           	psect	text69
 11830   0060F4                     __ptext69:
 11831                           	callstack 0
 11832   0060F4                     ___wmul:
 11833                           	callstack 26
 11834   0060F4  5001               	movf	___wmul@multiplier^0,w,c
 11835   0060F6  0203               	mulwf	___wmul@multiplicand^0,c
 11836   0060F8  CFF3 F005          	movff	prodl,___wmul@product
 11837   0060FC  CFF4 F006          	movff	prodh,___wmul@product+1
 11838   006100  5001               	movf	___wmul@multiplier^0,w,c
 11839   006102  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11840   006104  50F3               	movf	243,w,c
 11841   006106  2606               	addwf	(___wmul@product+1)^0,f,c
 11842   006108  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11843   00610A  0203               	mulwf	___wmul@multiplicand^0,c
 11844   00610C  50F3               	movf	243,w,c
 11845   00610E  2606               	addwf	(___wmul@product+1)^0,f,c
 11846   006110  C005  F001         	movff	___wmul@product,?___wmul
 11847   006114  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11848   006118  0012               	return		;funcret
 11849   00611A                     __end_of___wmul:
 11850                           	callstack 0
 11851                           
 11852 ;; *************** function ___lwdiv *****************
 11853 ;; Defined at:
 11854 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 11855 ;; Parameters:    Size  Location     Type
 11856 ;;  dividend        2    6[COMRAM] unsigned int 
 11857 ;;  divisor         2    8[COMRAM] unsigned int 
 11858 ;; Auto vars:     Size  Location     Type
 11859 ;;  quotient        2   10[COMRAM] unsigned int 
 11860 ;;  counter         1   12[COMRAM] unsigned char 
 11861 ;; Return value:  Size  Location     Type
 11862 ;;                  2    6[COMRAM] unsigned int 
 11863 ;; Registers used:
 11864 ;;		wreg, status,2, status,0
 11865 ;; Tracked objects:
 11866 ;;		On entry : 0/0
 11867 ;;		On exit  : 0/0
 11868 ;;		Unchanged: 0/0
 11869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11870 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11871 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11873 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11874 ;;Total ram usage:        7 bytes
 11875 ;; Hardware stack levels used: 1
 11876 ;; This function calls:
 11877 ;;		Nothing
 11878 ;; This function is called by:
 11879 ;;		_setMotorPWM
 11880 ;; This function uses a non-reentrant model
 11881 ;;
 11882                           
 11883                           	psect	text70
 11884   005602                     __ptext70:
 11885                           	callstack 0
 11886   005602                     ___lwdiv:
 11887                           	callstack 26
 11888   005602  0E00               	movlw	0
 11889   005604  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11890   005606  0E00               	movlw	0
 11891   005608  6E0B               	movwf	___lwdiv@quotient^0,c
 11892   00560A  5009               	movf	___lwdiv@divisor^0,w,c
 11893   00560C  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11894   00560E  B4D8               	btfsc	status,2,c
 11895   005610  EF0C  F02B         	goto	u3451
 11896   005614  EF0E  F02B         	goto	u3450
 11897   005618                     u3451:
 11898   005618  EF36  F02B         	goto	l1191
 11899   00561C                     u3450:
 11900   00561C  0E01               	movlw	1
 11901   00561E  6E0D               	movwf	___lwdiv@counter^0,c
 11902   005620  EF16  F02B         	goto	l4103
 11903   005624                     l4101:
 11904   005624  90D8               	bcf	status,0,c
 11905   005626  3609               	rlcf	___lwdiv@divisor^0,f,c
 11906   005628  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11907   00562A  2A0D               	incf	___lwdiv@counter^0,f,c
 11908   00562C                     l4103:
 11909   00562C  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 11910   00562E  EF1B  F02B         	goto	u3461
 11911   005632  EF1D  F02B         	goto	u3460
 11912   005636                     u3461:
 11913   005636  EF12  F02B         	goto	l4101
 11914   00563A                     u3460:
 11915   00563A                     l4105:
 11916   00563A  90D8               	bcf	status,0,c
 11917   00563C  360B               	rlcf	___lwdiv@quotient^0,f,c
 11918   00563E  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11919   005640  5009               	movf	___lwdiv@divisor^0,w,c
 11920   005642  5C07               	subwf	___lwdiv@dividend^0,w,c
 11921   005644  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11922   005646  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11923   005648  A0D8               	btfss	status,0,c
 11924   00564A  EF29  F02B         	goto	u3471
 11925   00564E  EF2B  F02B         	goto	u3470
 11926   005652                     u3471:
 11927   005652  EF30  F02B         	goto	l4113
 11928   005656                     u3470:
 11929   005656  5009               	movf	___lwdiv@divisor^0,w,c
 11930   005658  5E07               	subwf	___lwdiv@dividend^0,f,c
 11931   00565A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11932   00565C  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11933   00565E  800B               	bsf	___lwdiv@quotient^0,0,c
 11934   005660                     l4113:
 11935   005660  90D8               	bcf	status,0,c
 11936   005662  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11937   005664  3209               	rrcf	___lwdiv@divisor^0,f,c
 11938   005666  2E0D               	decfsz	___lwdiv@counter^0,f,c
 11939   005668  EF1D  F02B         	goto	l4105
 11940   00566C                     l1191:
 11941   00566C  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 11942   005670  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11943   005674  0012               	return		;funcret
 11944   005676                     __end_of___lwdiv:
 11945                           	callstack 0
 11946                           
 11947 ;; *************** function _Colour_decider *****************
 11948 ;; Defined at:
 11949 ;;		line 125 in file "color.c"
 11950 ;; Parameters:    Size  Location     Type
 11951 ;;  vals            2   74[COMRAM] PTR struct RGB
 11952 ;;		 -> vals(8), 
 11953 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 11954 ;;		 -> rel(12), 
 11955 ;; Auto vars:     Size  Location     Type
 11956 ;;  RGB_col        12    6[BANK0 ] float [3]
 11957 ;;  Hue             4   28[BANK0 ] float 
 11958 ;;  Cmin            4   22[BANK0 ] float 
 11959 ;;  Cmax            4   18[BANK0 ] float 
 11960 ;;  i               2   26[BANK0 ] int 
 11961 ;;  Cmax_i          2    4[BANK0 ] int 
 11962 ;; Return value:  Size  Location     Type
 11963 ;;                  2   74[COMRAM] int 
 11964 ;; Registers used:
 11965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11966 ;; Tracked objects:
 11967 ;;		On entry : 0/0
 11968 ;;		On exit  : 0/0
 11969 ;;		Unchanged: 0/0
 11970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11971 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11972 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11973 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11974 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11975 ;;Total ram usage:       38 bytes
 11976 ;; Hardware stack levels used: 1
 11977 ;; Hardware stack levels required when called: 2
 11978 ;; This function calls:
 11979 ;;		___fladd
 11980 ;;		___fldiv
 11981 ;;		___fleq
 11982 ;;		___flge
 11983 ;;		___flmul
 11984 ;;		___flsub
 11985 ;;		___xxtofl
 11986 ;; This function is called by:
 11987 ;;		_main
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           	psect	text71
 11992   000E52                     __ptext71:
 11993                           	callstack 0
 11994   000E52                     _Colour_decider:
 11995                           	callstack 28
 11996   000E52                     
 11997                           ;color.c: 126:     float Cmax = 0;
 11998   000E52  0E00               	movlw	0
 11999   000E54  0100               	movlb	0	; () banked
 12000   000E56  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 12001   000E58  0E00               	movlw	0
 12002   000E5A  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 12003   000E5C  0E00               	movlw	0
 12004   000E5E  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 12005   000E60  0E00               	movlw	0
 12006   000E62  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 12007                           
 12008                           ;color.c: 127:     float Cmin= 100000;
 12009   000E64  0E00               	movlw	0
 12010   000E66  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 12011   000E68  0E50               	movlw	80
 12012   000E6A  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 12013   000E6C  0EC3               	movlw	195
 12014   000E6E  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 12015   000E70  0E47               	movlw	71
 12016   000E72  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 12017                           
 12018                           ;color.c: 128:     int Cmax_i =4;
 12019   000E74  0E00               	movlw	0
 12020   000E76  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 12021   000E78  0E04               	movlw	4
 12022   000E7A  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 12023   000E7C                     
 12024                           ; BSR set to: 0
 12025                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 12026   000E7C  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 12027   000E80  0E0B               	movlw	11
 12028   000E82                     u5211:
 12029   000E82  6ADE               	clrf	postinc2,c
 12030   000E84  06E8               	decf	wreg,f,c
 12031   000E86  E2FD               	bc	u5211
 12032   000E88                     
 12033                           ; BSR set to: 0
 12034   000E88  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 12035   000E8C  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 12036   000E90  CFDE F001          	movff	postinc2,___xxtofl@val
 12037   000E94  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12038   000E98  0E00               	movlw	0
 12039   000E9A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12040   000E9C  0EFF               	movlw	-1
 12041   000E9E  6E03               	movwf	(___xxtofl@val+2)^0,c
 12042   000EA0  6E04               	movwf	(___xxtofl@val+3)^0,c
 12043   000EA2  0E01               	movlw	1
 12044   000EA4  EC75  F022         	call	___xxtofl
 12045   000EA8  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 12046   000EAC  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 12047   000EB0  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 12048   000EB4  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 12049   000EB8  EE20 F002          	lfsr	2,2
 12050   000EBC  504B               	movf	Colour_decider@vals^0,w,c
 12051   000EBE  26D9               	addwf	fsr2l,f,c
 12052   000EC0  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12053   000EC2  22DA               	addwfc	fsr2h,f,c
 12054   000EC4  CFDE F001          	movff	postinc2,___xxtofl@val
 12055   000EC8  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12056   000ECC  0E00               	movlw	0
 12057   000ECE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12058   000ED0  0EFF               	movlw	-1
 12059   000ED2  6E03               	movwf	(___xxtofl@val+2)^0,c
 12060   000ED4  6E04               	movwf	(___xxtofl@val+3)^0,c
 12061   000ED6  0E01               	movlw	1
 12062   000ED8  EC75  F022         	call	___xxtofl
 12063   000EDC  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 12064   000EE0  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 12065   000EE4  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 12066   000EE8  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 12067   000EEC  EE20 F004          	lfsr	2,4
 12068   000EF0  504B               	movf	Colour_decider@vals^0,w,c
 12069   000EF2  26D9               	addwf	fsr2l,f,c
 12070   000EF4  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12071   000EF6  22DA               	addwfc	fsr2h,f,c
 12072   000EF8  CFDE F001          	movff	postinc2,___xxtofl@val
 12073   000EFC  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12074   000F00  0E00               	movlw	0
 12075   000F02  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12076   000F04  0EFF               	movlw	-1
 12077   000F06  6E03               	movwf	(___xxtofl@val+2)^0,c
 12078   000F08  6E04               	movwf	(___xxtofl@val+3)^0,c
 12079   000F0A  0E01               	movlw	1
 12080   000F0C  EC75  F022         	call	___xxtofl
 12081   000F10  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 12082   000F14  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 12083   000F18  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 12084   000F1C  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 12085   000F20                     
 12086                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 12087   000F20  0E00               	movlw	0
 12088   000F22  0100               	movlb	0	; () banked
 12089   000F24  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 12090   000F26  0E00               	movlw	0
 12091   000F28  6F7A               	movwf	Colour_decider@i& (0+255),b
 12092   000F2A                     l5371:
 12093                           
 12094                           ; BSR set to: 0
 12095                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 12096   000F2A  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 12097   000F2E  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12098   000F32  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12099   000F36  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12100   000F3A  0E66               	movlw	low Colour_decider@RGB_col
 12101   000F3C  6E4F               	movwf	??_Colour_decider^0,c
 12102   000F3E  0E00               	movlw	high Colour_decider@RGB_col
 12103   000F40  6E50               	movwf	(??_Colour_decider+1)^0,c
 12104   000F42  90D8               	bcf	status,0,c
 12105   000F44  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12106   000F46  6ED9               	movwf	fsr2l,c
 12107   000F48  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12108   000F4A  6EDA               	movwf	fsr2h,c
 12109   000F4C  90D8               	bcf	status,0,c
 12110   000F4E  36D9               	rlcf	fsr2l,f,c
 12111   000F50  36DA               	rlcf	fsr2h,f,c
 12112   000F52  504F               	movf	??_Colour_decider^0,w,c
 12113   000F54  26D9               	addwf	fsr2l,f,c
 12114   000F56  5050               	movf	(??_Colour_decider+1)^0,w,c
 12115   000F58  22DA               	addwfc	fsr2h,f,c
 12116   000F5A  CFDE F02E          	movff	postinc2,___flge@ff2
 12117   000F5E  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12118   000F62  CFDE F030          	movff	postinc2,___flge@ff2+2
 12119   000F66  CFDE F031          	movff	postinc2,___flge@ff2+3
 12120   000F6A  ECFE  F025         	call	___flge	;wreg free
 12121   000F6E  B0D8               	btfsc	status,0,c
 12122   000F70  EFBC  F007         	goto	u5221
 12123   000F74  EFBE  F007         	goto	u5220
 12124   000F78                     u5221:
 12125   000F78  EFDB  F007         	goto	l5377
 12126   000F7C                     u5220:
 12127   000F7C                     
 12128                           ;color.c: 137:             Cmax=RGB_col[i];
 12129   000F7C  0E66               	movlw	low Colour_decider@RGB_col
 12130   000F7E  6E4F               	movwf	??_Colour_decider^0,c
 12131   000F80  0E00               	movlw	high Colour_decider@RGB_col
 12132   000F82  6E50               	movwf	(??_Colour_decider+1)^0,c
 12133   000F84  90D8               	bcf	status,0,c
 12134   000F86  0100               	movlb	0	; () banked
 12135   000F88  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12136   000F8A  6ED9               	movwf	fsr2l,c
 12137   000F8C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12138   000F8E  6EDA               	movwf	fsr2h,c
 12139   000F90  90D8               	bcf	status,0,c
 12140   000F92  36D9               	rlcf	fsr2l,f,c
 12141   000F94  36DA               	rlcf	fsr2h,f,c
 12142   000F96  504F               	movf	??_Colour_decider^0,w,c
 12143   000F98  26D9               	addwf	fsr2l,f,c
 12144   000F9A  5050               	movf	(??_Colour_decider+1)^0,w,c
 12145   000F9C  22DA               	addwfc	fsr2h,f,c
 12146   000F9E  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12147   000FA2  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12148   000FA6  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12149   000FAA  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12150   000FAE                     
 12151                           ; BSR set to: 0
 12152                           ;color.c: 138:             Cmax_i=i;
 12153   000FAE  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12154   000FB2  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12155   000FB6                     l5377:
 12156                           
 12157                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12158   000FB6  0E66               	movlw	low Colour_decider@RGB_col
 12159   000FB8  6E4F               	movwf	??_Colour_decider^0,c
 12160   000FBA  0E00               	movlw	high Colour_decider@RGB_col
 12161   000FBC  6E50               	movwf	(??_Colour_decider+1)^0,c
 12162   000FBE  90D8               	bcf	status,0,c
 12163   000FC0  0100               	movlb	0	; () banked
 12164   000FC2  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12165   000FC4  6ED9               	movwf	fsr2l,c
 12166   000FC6  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12167   000FC8  6EDA               	movwf	fsr2h,c
 12168   000FCA  90D8               	bcf	status,0,c
 12169   000FCC  36D9               	rlcf	fsr2l,f,c
 12170   000FCE  36DA               	rlcf	fsr2h,f,c
 12171   000FD0  504F               	movf	??_Colour_decider^0,w,c
 12172   000FD2  26D9               	addwf	fsr2l,f,c
 12173   000FD4  5050               	movf	(??_Colour_decider+1)^0,w,c
 12174   000FD6  22DA               	addwfc	fsr2h,f,c
 12175   000FD8  CFDE F02A          	movff	postinc2,___flge@ff1
 12176   000FDC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12177   000FE0  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12178   000FE4  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12179   000FE8  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12180   000FEC  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12181   000FF0  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12182   000FF4  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12183   000FF8  ECFE  F025         	call	___flge	;wreg free
 12184   000FFC  B0D8               	btfsc	status,0,c
 12185   000FFE  EF03  F008         	goto	u5231
 12186   001002  EF05  F008         	goto	u5230
 12187   001006                     u5231:
 12188   001006  EF1E  F008         	goto	l5381
 12189   00100A                     u5230:
 12190   00100A  0E66               	movlw	low Colour_decider@RGB_col
 12191   00100C  6E4F               	movwf	??_Colour_decider^0,c
 12192   00100E  0E00               	movlw	high Colour_decider@RGB_col
 12193   001010  6E50               	movwf	(??_Colour_decider+1)^0,c
 12194   001012  90D8               	bcf	status,0,c
 12195   001014  0100               	movlb	0	; () banked
 12196   001016  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12197   001018  6ED9               	movwf	fsr2l,c
 12198   00101A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12199   00101C  6EDA               	movwf	fsr2h,c
 12200   00101E  90D8               	bcf	status,0,c
 12201   001020  36D9               	rlcf	fsr2l,f,c
 12202   001022  36DA               	rlcf	fsr2h,f,c
 12203   001024  504F               	movf	??_Colour_decider^0,w,c
 12204   001026  26D9               	addwf	fsr2l,f,c
 12205   001028  5050               	movf	(??_Colour_decider+1)^0,w,c
 12206   00102A  22DA               	addwfc	fsr2h,f,c
 12207   00102C  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12208   001030  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12209   001034  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12210   001038  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12211   00103C                     l5381:
 12212                           
 12213                           ;color.c: 141:     }
 12214   00103C  0100               	movlb	0	; () banked
 12215   00103E  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12216   001040  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12217   001042                     
 12218                           ; BSR set to: 0
 12219   001042  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12220   001044  EF2D  F008         	goto	u5241
 12221   001048  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12222   00104A  E109               	bnz	u5240
 12223   00104C  0E03               	movlw	3
 12224   00104E  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12225   001050  A0D8               	btfss	status,0,c
 12226   001052  EF2D  F008         	goto	u5241
 12227   001056  EF2F  F008         	goto	u5240
 12228   00105A                     u5241:
 12229   00105A  EF95  F007         	goto	l5371
 12230   00105E                     u5240:
 12231   00105E                     
 12232                           ; BSR set to: 0
 12233                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 12234   00105E  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12235   001062  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12236   001066  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12237   00106A  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12238   00106E  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12239   001072  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12240   001076  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12241   00107A  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12242   00107E  ECED  F02E         	call	___flsub	;wreg free
 12243   001082  C02A  F032         	movff	?___flsub,___fleq@ff1
 12244   001086  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12245   00108A  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12246   00108E  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12247   001092  0E00               	movlw	0
 12248   001094  6E36               	movwf	___fleq@ff2^0,c
 12249   001096  0E00               	movlw	0
 12250   001098  6E37               	movwf	(___fleq@ff2+1)^0,c
 12251   00109A  0E00               	movlw	0
 12252   00109C  6E38               	movwf	(___fleq@ff2+2)^0,c
 12253   00109E  0E00               	movlw	0
 12254   0010A0  6E39               	movwf	(___fleq@ff2+3)^0,c
 12255   0010A2  EC6F  F028         	call	___fleq	;wreg free
 12256   0010A6  A0D8               	btfss	status,0,c
 12257   0010A8  EF58  F008         	goto	u5251
 12258   0010AC  EF5A  F008         	goto	u5250
 12259   0010B0                     u5251:
 12260   0010B0  EF60  F008         	goto	l5391
 12261   0010B4                     u5250:
 12262   0010B4                     l5387:
 12263   0010B4  0E00               	movlw	0
 12264   0010B6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12265   0010B8  0E00               	movlw	0
 12266   0010BA  6E4B               	movwf	?_Colour_decider^0,c
 12267   0010BC  EF96  F00C         	goto	l76
 12268   0010C0                     l5391:
 12269                           
 12270                           ;color.c: 146:     if (Cmax_i==0){
 12271   0010C0  0100               	movlb	0	; () banked
 12272   0010C2  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12273   0010C4  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12274   0010C6  A4D8               	btfss	status,2,c
 12275   0010C8  EF68  F008         	goto	u5261
 12276   0010CC  EF6A  F008         	goto	u5260
 12277   0010D0                     u5261:
 12278   0010D0  EFDE  F008         	goto	l5399
 12279   0010D4                     u5260:
 12280   0010D4                     
 12281                           ; BSR set to: 0
 12282                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12283   0010D4  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12284   0010D8  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12285   0010DC  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12286   0010E0  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12287   0010E4  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12288   0010E8  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12289   0010EC  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12290   0010F0  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12291   0010F4  ECED  F02E         	call	___flsub	;wreg free
 12292   0010F8  C02A  F036         	movff	?___flsub,___fldiv@a
 12293   0010FC  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12294   001100  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12295   001104  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12296   001108  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12297   00110C  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12298   001110  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12299   001114  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12300   001118  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12301   00111C  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12302   001120  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12303   001124  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12304   001128  ECED  F02E         	call	___flsub	;wreg free
 12305   00112C  C02A  F032         	movff	?___flsub,___fldiv@b
 12306   001130  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12307   001134  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12308   001138  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12309   00113C  EC00  F019         	call	___fldiv	;wreg free
 12310   001140  C032  F011         	movff	?___fldiv,___flmul@b
 12311   001144  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12312   001148  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12313   00114C  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12314   001150  0E00               	movlw	0
 12315   001152  6E15               	movwf	___flmul@a^0,c
 12316   001154  0E00               	movlw	0
 12317   001156  6E16               	movwf	(___flmul@a+1)^0,c
 12318   001158  0E70               	movlw	112
 12319   00115A  6E17               	movwf	(___flmul@a+2)^0,c
 12320   00115C  0E42               	movlw	66
 12321   00115E  6E18               	movwf	(___flmul@a+3)^0,c
 12322   001160  ECEB  F016         	call	___flmul	;wreg free
 12323   001164  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12324   001168  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12325   00116C  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12326   001170  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12327   001174                     
 12328                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 12329   001174  0100               	movlb	0	; () banked
 12330   001176  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12331   001178  EFC2  F008         	goto	u5270
 12332   00117C  EFC0  F008         	goto	u5271
 12333   001180                     u5271:
 12334   001180  EFBD  F009         	goto	l5409
 12335   001184                     u5270:
 12336   001184                     
 12337                           ; BSR set to: 0
 12338   001184  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12339   001188  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12340   00118C  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12341   001190  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12342   001194  0E00               	movlw	0
 12343   001196  6E05               	movwf	___fladd@a^0,c
 12344   001198  0E00               	movlw	0
 12345   00119A  6E06               	movwf	(___fladd@a+1)^0,c
 12346   00119C  0EB4               	movlw	180
 12347   00119E  6E07               	movwf	(___fladd@a+2)^0,c
 12348   0011A0  0E43               	movlw	67
 12349   0011A2  6E08               	movwf	(___fladd@a+3)^0,c
 12350   0011A4  EC8B  F014         	call	___fladd	;wreg free
 12351   0011A8  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12352   0011AC  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12353   0011B0  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12354   0011B4  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12355   0011B8  EFBD  F009         	goto	l5409
 12356   0011BC                     l5399:
 12357                           
 12358                           ; BSR set to: 0
 12359   0011BC  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12360   0011BE  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12361   0011C0  A4D8               	btfss	status,2,c
 12362   0011C2  EFE5  F008         	goto	u5281
 12363   0011C6  EFE7  F008         	goto	u5280
 12364   0011CA                     u5281:
 12365   0011CA  EF53  F009         	goto	l5405
 12366   0011CE                     u5280:
 12367   0011CE                     
 12368                           ; BSR set to: 0
 12369                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12370   0011CE  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12371   0011D2  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12372   0011D6  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12373   0011DA  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12374   0011DE  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12375   0011E2  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12376   0011E6  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12377   0011EA  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12378   0011EE  ECED  F02E         	call	___flsub	;wreg free
 12379   0011F2  C02A  F036         	movff	?___flsub,___fldiv@a
 12380   0011F6  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12381   0011FA  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12382   0011FE  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12383   001202  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12384   001206  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12385   00120A  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12386   00120E  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12387   001212  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12388   001216  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12389   00121A  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12390   00121E  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12391   001222  ECED  F02E         	call	___flsub	;wreg free
 12392   001226  C02A  F032         	movff	?___flsub,___fldiv@b
 12393   00122A  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12394   00122E  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12395   001232  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12396   001236  EC00  F019         	call	___fldiv	;wreg free
 12397   00123A  C032  F060         	movff	?___fldiv,_Colour_decider$3146
 12398   00123E  C033  F061         	movff	?___fldiv+1,_Colour_decider$3146+1
 12399   001242  C034  F062         	movff	?___fldiv+2,_Colour_decider$3146+2
 12400   001246  C035  F063         	movff	?___fldiv+3,_Colour_decider$3146+3
 12401   00124A                     
 12402                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12403   00124A  0E00               	movlw	0
 12404   00124C  6E05               	movwf	___fladd@a^0,c
 12405   00124E  0E00               	movlw	0
 12406   001250  6E06               	movwf	(___fladd@a+1)^0,c
 12407   001252  0E00               	movlw	0
 12408   001254  6E07               	movwf	(___fladd@a+2)^0,c
 12409   001256  0E40               	movlw	64
 12410   001258  6E08               	movwf	(___fladd@a+3)^0,c
 12411   00125A  C060  F001         	movff	_Colour_decider$3146,___fladd@b
 12412   00125E  C061  F002         	movff	_Colour_decider$3146+1,___fladd@b+1
 12413   001262  C062  F003         	movff	_Colour_decider$3146+2,___fladd@b+2
 12414   001266  C063  F004         	movff	_Colour_decider$3146+3,___fladd@b+3
 12415   00126A  EC8B  F014         	call	___fladd	;wreg free
 12416   00126E  C001  F011         	movff	?___fladd,___flmul@b
 12417   001272  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12418   001276  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12419   00127A  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12420   00127E  0E00               	movlw	0
 12421   001280  6E15               	movwf	___flmul@a^0,c
 12422   001282  0E00               	movlw	0
 12423   001284  6E16               	movwf	(___flmul@a+1)^0,c
 12424   001286  0E70               	movlw	112
 12425   001288  6E17               	movwf	(___flmul@a+2)^0,c
 12426   00128A  0E42               	movlw	66
 12427   00128C  6E18               	movwf	(___flmul@a+3)^0,c
 12428   00128E  ECEB  F016         	call	___flmul	;wreg free
 12429   001292  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12430   001296  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12431   00129A  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12432   00129E  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12433                           
 12434                           ;color.c: 155:     }
 12435   0012A2  EFBD  F009         	goto	l5409
 12436   0012A6                     l5405:
 12437                           
 12438                           ; BSR set to: 0
 12439                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12440   0012A6  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12441   0012AA  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12442   0012AE  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12443   0012B2  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12444   0012B6  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12445   0012BA  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12446   0012BE  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12447   0012C2  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12448   0012C6  ECED  F02E         	call	___flsub	;wreg free
 12449   0012CA  C02A  F036         	movff	?___flsub,___fldiv@a
 12450   0012CE  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12451   0012D2  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12452   0012D6  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12453   0012DA  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12454   0012DE  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12455   0012E2  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12456   0012E6  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12457   0012EA  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12458   0012EE  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12459   0012F2  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12460   0012F6  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12461   0012FA  ECED  F02E         	call	___flsub	;wreg free
 12462   0012FE  C02A  F032         	movff	?___flsub,___fldiv@b
 12463   001302  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12464   001306  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12465   00130A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12466   00130E  EC00  F019         	call	___fldiv	;wreg free
 12467   001312  C032  F060         	movff	?___fldiv,_Colour_decider$3146
 12468   001316  C033  F061         	movff	?___fldiv+1,_Colour_decider$3146+1
 12469   00131A  C034  F062         	movff	?___fldiv+2,_Colour_decider$3146+2
 12470   00131E  C035  F063         	movff	?___fldiv+3,_Colour_decider$3146+3
 12471   001322                     
 12472                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12473   001322  0E00               	movlw	0
 12474   001324  6E05               	movwf	___fladd@a^0,c
 12475   001326  0E00               	movlw	0
 12476   001328  6E06               	movwf	(___fladd@a+1)^0,c
 12477   00132A  0E80               	movlw	128
 12478   00132C  6E07               	movwf	(___fladd@a+2)^0,c
 12479   00132E  0E40               	movlw	64
 12480   001330  6E08               	movwf	(___fladd@a+3)^0,c
 12481   001332  C060  F001         	movff	_Colour_decider$3146,___fladd@b
 12482   001336  C061  F002         	movff	_Colour_decider$3146+1,___fladd@b+1
 12483   00133A  C062  F003         	movff	_Colour_decider$3146+2,___fladd@b+2
 12484   00133E  C063  F004         	movff	_Colour_decider$3146+3,___fladd@b+3
 12485   001342  EC8B  F014         	call	___fladd	;wreg free
 12486   001346  C001  F011         	movff	?___fladd,___flmul@b
 12487   00134A  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12488   00134E  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12489   001352  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12490   001356  0E00               	movlw	0
 12491   001358  6E15               	movwf	___flmul@a^0,c
 12492   00135A  0E00               	movlw	0
 12493   00135C  6E16               	movwf	(___flmul@a+1)^0,c
 12494   00135E  0E70               	movlw	112
 12495   001360  6E17               	movwf	(___flmul@a+2)^0,c
 12496   001362  0E42               	movlw	66
 12497   001364  6E18               	movwf	(___flmul@a+3)^0,c
 12498   001366  ECEB  F016         	call	___flmul	;wreg free
 12499   00136A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12500   00136E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12501   001372  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12502   001376  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12503   00137A                     l5409:
 12504                           
 12505                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 12506   00137A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12507   00137E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12508   001382  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12509   001386  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12510   00138A  0E00               	movlw	0
 12511   00138C  6E2E               	movwf	___flge@ff2^0,c
 12512   00138E  0E00               	movlw	0
 12513   001390  6E2F               	movwf	(___flge@ff2+1)^0,c
 12514   001392  0EA5               	movlw	165
 12515   001394  6E30               	movwf	(___flge@ff2+2)^0,c
 12516   001396  0E43               	movlw	67
 12517   001398  6E31               	movwf	(___flge@ff2+3)^0,c
 12518   00139A  ECFE  F025         	call	___flge	;wreg free
 12519   00139E  A0D8               	btfss	status,0,c
 12520   0013A0  EFD4  F009         	goto	u5291
 12521   0013A4  EFD6  F009         	goto	u5290
 12522   0013A8                     u5291:
 12523   0013A8  EFF5  F009         	goto	l5419
 12524   0013AC                     u5290:
 12525   0013AC  0E00               	movlw	0
 12526   0013AE  6E2A               	movwf	___flge@ff1^0,c
 12527   0013B0  0E00               	movlw	0
 12528   0013B2  6E2B               	movwf	(___flge@ff1+1)^0,c
 12529   0013B4  0EB4               	movlw	180
 12530   0013B6  6E2C               	movwf	(___flge@ff1+2)^0,c
 12531   0013B8  0E43               	movlw	67
 12532   0013BA  6E2D               	movwf	(___flge@ff1+3)^0,c
 12533   0013BC  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12534   0013C0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12535   0013C4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12536   0013C8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12537   0013CC  ECFE  F025         	call	___flge	;wreg free
 12538   0013D0  A0D8               	btfss	status,0,c
 12539   0013D2  EFED  F009         	goto	u5301
 12540   0013D6  EFEF  F009         	goto	u5300
 12541   0013DA                     u5301:
 12542   0013DA  EFF5  F009         	goto	l5419
 12543   0013DE                     u5300:
 12544   0013DE                     
 12545                           ;color.c: 164:         return 1;
 12546   0013DE  0E00               	movlw	0
 12547   0013E0  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12548   0013E2  0E01               	movlw	1
 12549   0013E4  6E4B               	movwf	?_Colour_decider^0,c
 12550   0013E6  EF96  F00C         	goto	l76
 12551   0013EA                     l5419:
 12552   0013EA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12553   0013EE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12554   0013F2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12555   0013F6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12556   0013FA  0E00               	movlw	0
 12557   0013FC  6E2E               	movwf	___flge@ff2^0,c
 12558   0013FE  0E00               	movlw	0
 12559   001400  6E2F               	movwf	(___flge@ff2+1)^0,c
 12560   001402  0EA0               	movlw	160
 12561   001404  6E30               	movwf	(___flge@ff2+2)^0,c
 12562   001406  0E40               	movlw	64
 12563   001408  6E31               	movwf	(___flge@ff2+3)^0,c
 12564   00140A  ECFE  F025         	call	___flge	;wreg free
 12565   00140E  A0D8               	btfss	status,0,c
 12566   001410  EF0C  F00A         	goto	u5311
 12567   001414  EF0E  F00A         	goto	u5310
 12568   001418                     u5311:
 12569   001418  EF2D  F00A         	goto	l5429
 12570   00141C                     u5310:
 12571   00141C  0E00               	movlw	0
 12572   00141E  6E2A               	movwf	___flge@ff1^0,c
 12573   001420  0E00               	movlw	0
 12574   001422  6E2B               	movwf	(___flge@ff1+1)^0,c
 12575   001424  0E40               	movlw	64
 12576   001426  6E2C               	movwf	(___flge@ff1+2)^0,c
 12577   001428  0E41               	movlw	65
 12578   00142A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12579   00142C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12580   001430  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12581   001434  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12582   001438  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12583   00143C  ECFE  F025         	call	___flge	;wreg free
 12584   001440  A0D8               	btfss	status,0,c
 12585   001442  EF25  F00A         	goto	u5321
 12586   001446  EF27  F00A         	goto	u5320
 12587   00144A                     u5321:
 12588   00144A  EF2D  F00A         	goto	l5429
 12589   00144E                     u5320:
 12590   00144E                     
 12591                           ;color.c: 168:         return 2;
 12592   00144E  0E00               	movlw	0
 12593   001450  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12594   001452  0E02               	movlw	2
 12595   001454  6E4B               	movwf	?_Colour_decider^0,c
 12596   001456  EF96  F00C         	goto	l76
 12597   00145A                     l5429:
 12598   00145A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12599   00145E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12600   001462  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12601   001466  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12602   00146A  0E00               	movlw	0
 12603   00146C  6E2E               	movwf	___flge@ff2^0,c
 12604   00146E  0E00               	movlw	0
 12605   001470  6E2F               	movwf	(___flge@ff2+1)^0,c
 12606   001472  0EA0               	movlw	160
 12607   001474  6E30               	movwf	(___flge@ff2+2)^0,c
 12608   001476  0E41               	movlw	65
 12609   001478  6E31               	movwf	(___flge@ff2+3)^0,c
 12610   00147A  ECFE  F025         	call	___flge	;wreg free
 12611   00147E  A0D8               	btfss	status,0,c
 12612   001480  EF44  F00A         	goto	u5331
 12613   001484  EF46  F00A         	goto	u5330
 12614   001488                     u5331:
 12615   001488  EFC6  F00A         	goto	l5455
 12616   00148C                     u5330:
 12617   00148C  0E00               	movlw	0
 12618   00148E  6E2A               	movwf	___flge@ff1^0,c
 12619   001490  0E00               	movlw	0
 12620   001492  6E2B               	movwf	(___flge@ff1+1)^0,c
 12621   001494  0EE8               	movlw	232
 12622   001496  6E2C               	movwf	(___flge@ff1+2)^0,c
 12623   001498  0E41               	movlw	65
 12624   00149A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12625   00149C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12626   0014A0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12627   0014A4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12628   0014A8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12629   0014AC  ECFE  F025         	call	___flge	;wreg free
 12630   0014B0  A0D8               	btfss	status,0,c
 12631   0014B2  EF5D  F00A         	goto	u5341
 12632   0014B6  EF5F  F00A         	goto	u5340
 12633   0014BA                     u5341:
 12634   0014BA  EFC6  F00A         	goto	l5455
 12635   0014BE                     u5340:
 12636   0014BE                     
 12637                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
 12638   0014BE  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12639   0014C2  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12640   0014C6  CFDE F02A          	movff	postinc2,___flge@ff1
 12641   0014CA  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12642   0014CE  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12643   0014D2  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12644   0014D6  0ECD               	movlw	205
 12645   0014D8  6E2E               	movwf	___flge@ff2^0,c
 12646   0014DA  0ECC               	movlw	204
 12647   0014DC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12648   0014DE  0E4C               	movlw	76
 12649   0014E0  6E30               	movwf	(___flge@ff2+2)^0,c
 12650   0014E2  0E3E               	movlw	62
 12651   0014E4  6E31               	movwf	(___flge@ff2+3)^0,c
 12652   0014E6  ECFE  F025         	call	___flge	;wreg free
 12653   0014EA  A0D8               	btfss	status,0,c
 12654   0014EC  EF7A  F00A         	goto	u5351
 12655   0014F0  EF7C  F00A         	goto	u5350
 12656   0014F4                     u5351:
 12657   0014F4  EF9B  F00A         	goto	l5443
 12658   0014F8                     u5350:
 12659   0014F8  0E00               	movlw	0
 12660   0014FA  6E2A               	movwf	___flge@ff1^0,c
 12661   0014FC  0E00               	movlw	0
 12662   0014FE  6E2B               	movwf	(___flge@ff1+1)^0,c
 12663   001500  0E80               	movlw	128
 12664   001502  6E2C               	movwf	(___flge@ff1+2)^0,c
 12665   001504  0E3E               	movlw	62
 12666   001506  6E2D               	movwf	(___flge@ff1+3)^0,c
 12667   001508  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12668   00150C  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12669   001510  CFDE F02E          	movff	postinc2,___flge@ff2
 12670   001514  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12671   001518  CFDE F030          	movff	postinc2,___flge@ff2+2
 12672   00151C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12673   001520  ECFE  F025         	call	___flge	;wreg free
 12674   001524  A0D8               	btfss	status,0,c
 12675   001526  EF97  F00A         	goto	u5361
 12676   00152A  EF99  F00A         	goto	u5360
 12677   00152E                     u5361:
 12678   00152E  EF9B  F00A         	goto	l5443
 12679   001532                     u5360:
 12680   001532  EF5A  F008         	goto	l5387
 12681   001536                     l5443:
 12682   001536  EE20 F008          	lfsr	2,8
 12683   00153A  504D               	movf	Colour_decider@rel^0,w,c
 12684   00153C  26D9               	addwf	fsr2l,f,c
 12685   00153E  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12686   001540  22DA               	addwfc	fsr2h,f,c
 12687   001542  CFDE F02A          	movff	postinc2,___flge@ff1
 12688   001546  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12689   00154A  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12690   00154E  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12691   001552  0E29               	movlw	41
 12692   001554  6E2E               	movwf	___flge@ff2^0,c
 12693   001556  0E5C               	movlw	92
 12694   001558  6E2F               	movwf	(___flge@ff2+1)^0,c
 12695   00155A  0E0F               	movlw	15
 12696   00155C  6E30               	movwf	(___flge@ff2+2)^0,c
 12697   00155E  0E3E               	movlw	62
 12698   001560  6E31               	movwf	(___flge@ff2+3)^0,c
 12699   001562  ECFE  F025         	call	___flge	;wreg free
 12700   001566  A0D8               	btfss	status,0,c
 12701   001568  EFB8  F00A         	goto	u5371
 12702   00156C  EFBA  F00A         	goto	u5370
 12703   001570                     u5371:
 12704   001570  EFC0  F00A         	goto	l5451
 12705   001574                     u5370:
 12706   001574                     l5445:
 12707                           
 12708                           ;color.c: 179:             return 4;
 12709   001574  0E00               	movlw	0
 12710   001576  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12711   001578  0E04               	movlw	4
 12712   00157A  6E4B               	movwf	?_Colour_decider^0,c
 12713   00157C  EF96  F00C         	goto	l76
 12714   001580                     l5451:
 12715                           
 12716                           ;color.c: 182:             return 3;
 12717   001580  0E00               	movlw	0
 12718   001582  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12719   001584  0E03               	movlw	3
 12720   001586  6E4B               	movwf	?_Colour_decider^0,c
 12721   001588  EF96  F00C         	goto	l76
 12722   00158C                     l5455:
 12723   00158C  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12724   001590  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12725   001594  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12726   001598  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12727   00159C  0E00               	movlw	0
 12728   00159E  6E2E               	movwf	___flge@ff2^0,c
 12729   0015A0  0E00               	movlw	0
 12730   0015A2  6E2F               	movwf	(___flge@ff2+1)^0,c
 12731   0015A4  0E34               	movlw	52
 12732   0015A6  6E30               	movwf	(___flge@ff2+2)^0,c
 12733   0015A8  0E42               	movlw	66
 12734   0015AA  6E31               	movwf	(___flge@ff2+3)^0,c
 12735   0015AC  ECFE  F025         	call	___flge	;wreg free
 12736   0015B0  A0D8               	btfss	status,0,c
 12737   0015B2  EFDD  F00A         	goto	u5381
 12738   0015B6  EFDF  F00A         	goto	u5380
 12739   0015BA                     u5381:
 12740   0015BA  EF44  F00B         	goto	l5479
 12741   0015BE                     u5380:
 12742   0015BE  0E00               	movlw	0
 12743   0015C0  6E2A               	movwf	___flge@ff1^0,c
 12744   0015C2  0E00               	movlw	0
 12745   0015C4  6E2B               	movwf	(___flge@ff1+1)^0,c
 12746   0015C6  0EA0               	movlw	160
 12747   0015C8  6E2C               	movwf	(___flge@ff1+2)^0,c
 12748   0015CA  0E42               	movlw	66
 12749   0015CC  6E2D               	movwf	(___flge@ff1+3)^0,c
 12750   0015CE  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12751   0015D2  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12752   0015D6  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12753   0015DA  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12754   0015DE  ECFE  F025         	call	___flge	;wreg free
 12755   0015E2  A0D8               	btfss	status,0,c
 12756   0015E4  EFF6  F00A         	goto	u5391
 12757   0015E8  EFF8  F00A         	goto	u5390
 12758   0015EC                     u5391:
 12759   0015EC  EF44  F00B         	goto	l5479
 12760   0015F0                     u5390:
 12761   0015F0                     
 12762                           ;color.c: 188:         if(0.15<=rel->B){
 12763   0015F0  EE20 F008          	lfsr	2,8
 12764   0015F4  504D               	movf	Colour_decider@rel^0,w,c
 12765   0015F6  26D9               	addwf	fsr2l,f,c
 12766   0015F8  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12767   0015FA  22DA               	addwfc	fsr2h,f,c
 12768   0015FC  CFDE F02A          	movff	postinc2,___flge@ff1
 12769   001600  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12770   001604  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12771   001608  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12772   00160C  0E9A               	movlw	154
 12773   00160E  6E2E               	movwf	___flge@ff2^0,c
 12774   001610  0E99               	movlw	153
 12775   001612  6E2F               	movwf	(___flge@ff2+1)^0,c
 12776   001614  0E19               	movlw	25
 12777   001616  6E30               	movwf	(___flge@ff2+2)^0,c
 12778   001618  0E3E               	movlw	62
 12779   00161A  6E31               	movwf	(___flge@ff2+3)^0,c
 12780   00161C  ECFE  F025         	call	___flge	;wreg free
 12781   001620  A0D8               	btfss	status,0,c
 12782   001622  EF15  F00B         	goto	u5401
 12783   001626  EF17  F00B         	goto	u5400
 12784   00162A                     u5401:
 12785   00162A  EF19  F00B         	goto	l5467
 12786   00162E                     u5400:
 12787   00162E  EFBA  F00A         	goto	l5445
 12788   001632                     l5467:
 12789   001632  EE20 F008          	lfsr	2,8
 12790   001636  504D               	movf	Colour_decider@rel^0,w,c
 12791   001638  26D9               	addwf	fsr2l,f,c
 12792   00163A  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12793   00163C  22DA               	addwfc	fsr2h,f,c
 12794   00163E  CFDE F02A          	movff	postinc2,___flge@ff1
 12795   001642  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12796   001646  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12797   00164A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12798   00164E  0E8F               	movlw	143
 12799   001650  6E2E               	movwf	___flge@ff2^0,c
 12800   001652  0EC2               	movlw	194
 12801   001654  6E2F               	movwf	(___flge@ff2+1)^0,c
 12802   001656  0EF5               	movlw	245
 12803   001658  6E30               	movwf	(___flge@ff2+2)^0,c
 12804   00165A  0E3D               	movlw	61
 12805   00165C  6E31               	movwf	(___flge@ff2+3)^0,c
 12806   00165E  ECFE  F025         	call	___flge	;wreg free
 12807   001662  A0D8               	btfss	status,0,c
 12808   001664  EF36  F00B         	goto	u5411
 12809   001668  EF38  F00B         	goto	u5410
 12810   00166C                     u5411:
 12811   00166C  EF3E  F00B         	goto	l5475
 12812   001670                     u5410:
 12813   001670                     l5469:
 12814                           
 12815                           ;color.c: 192:             return 6;
 12816   001670  0E00               	movlw	0
 12817   001672  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12818   001674  0E06               	movlw	6
 12819   001676  6E4B               	movwf	?_Colour_decider^0,c
 12820   001678  EF96  F00C         	goto	l76
 12821   00167C                     l5475:
 12822                           
 12823                           ;color.c: 195:             return 5;
 12824   00167C  0E00               	movlw	0
 12825   00167E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12826   001680  0E05               	movlw	5
 12827   001682  6E4B               	movwf	?_Colour_decider^0,c
 12828   001684  EF96  F00C         	goto	l76
 12829   001688                     l5479:
 12830   001688  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12831   00168C  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12832   001690  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12833   001694  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12834   001698  0E00               	movlw	0
 12835   00169A  6E2E               	movwf	___flge@ff2^0,c
 12836   00169C  0E00               	movlw	0
 12837   00169E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12838   0016A0  0EA2               	movlw	162
 12839   0016A2  6E30               	movwf	(___flge@ff2+2)^0,c
 12840   0016A4  0E42               	movlw	66
 12841   0016A6  6E31               	movwf	(___flge@ff2+3)^0,c
 12842   0016A8  ECFE  F025         	call	___flge	;wreg free
 12843   0016AC  A0D8               	btfss	status,0,c
 12844   0016AE  EF5B  F00B         	goto	u5421
 12845   0016B2  EF5D  F00B         	goto	u5420
 12846   0016B6                     u5421:
 12847   0016B6  EF97  F00B         	goto	l5495
 12848   0016BA                     u5420:
 12849   0016BA  0E00               	movlw	0
 12850   0016BC  6E2A               	movwf	___flge@ff1^0,c
 12851   0016BE  0E00               	movlw	0
 12852   0016C0  6E2B               	movwf	(___flge@ff1+1)^0,c
 12853   0016C2  0EE6               	movlw	230
 12854   0016C4  6E2C               	movwf	(___flge@ff1+2)^0,c
 12855   0016C6  0E42               	movlw	66
 12856   0016C8  6E2D               	movwf	(___flge@ff1+3)^0,c
 12857   0016CA  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12858   0016CE  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12859   0016D2  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12860   0016D6  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12861   0016DA  ECFE  F025         	call	___flge	;wreg free
 12862   0016DE  A0D8               	btfss	status,0,c
 12863   0016E0  EF74  F00B         	goto	u5431
 12864   0016E4  EF76  F00B         	goto	u5430
 12865   0016E8                     u5431:
 12866   0016E8  EF97  F00B         	goto	l5495
 12867   0016EC                     u5430:
 12868   0016EC                     
 12869                           ;color.c: 201:         if(0.15<=rel->B){
 12870   0016EC  EE20 F008          	lfsr	2,8
 12871   0016F0  504D               	movf	Colour_decider@rel^0,w,c
 12872   0016F2  26D9               	addwf	fsr2l,f,c
 12873   0016F4  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12874   0016F6  22DA               	addwfc	fsr2h,f,c
 12875   0016F8  CFDE F02A          	movff	postinc2,___flge@ff1
 12876   0016FC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12877   001700  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12878   001704  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12879   001708  0E9A               	movlw	154
 12880   00170A  6E2E               	movwf	___flge@ff2^0,c
 12881   00170C  0E99               	movlw	153
 12882   00170E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12883   001710  0E19               	movlw	25
 12884   001712  6E30               	movwf	(___flge@ff2+2)^0,c
 12885   001714  0E3E               	movlw	62
 12886   001716  6E31               	movwf	(___flge@ff2+3)^0,c
 12887   001718  ECFE  F025         	call	___flge	;wreg free
 12888   00171C  A0D8               	btfss	status,0,c
 12889   00171E  EF93  F00B         	goto	u5441
 12890   001722  EF95  F00B         	goto	u5440
 12891   001726                     u5441:
 12892   001726  EF38  F00B         	goto	l5469
 12893   00172A                     u5440:
 12894   00172A  EFBA  F00A         	goto	l5445
 12895   00172E                     l5495:
 12896   00172E  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12897   001732  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12898   001736  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12899   00173A  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12900   00173E  0E00               	movlw	0
 12901   001740  6E2E               	movwf	___flge@ff2^0,c
 12902   001742  0E00               	movlw	0
 12903   001744  6E2F               	movwf	(___flge@ff2+1)^0,c
 12904   001746  0EF0               	movlw	240
 12905   001748  6E30               	movwf	(___flge@ff2+2)^0,c
 12906   00174A  0E41               	movlw	65
 12907   00174C  6E31               	movwf	(___flge@ff2+3)^0,c
 12908   00174E  ECFE  F025         	call	___flge	;wreg free
 12909   001752  A0D8               	btfss	status,0,c
 12910   001754  EFAE  F00B         	goto	u5451
 12911   001758  EFB0  F00B         	goto	u5450
 12912   00175C                     u5451:
 12913   00175C  EFC9  F00B         	goto	l5499
 12914   001760                     u5450:
 12915   001760  0E00               	movlw	0
 12916   001762  6E2A               	movwf	___flge@ff1^0,c
 12917   001764  0E00               	movlw	0
 12918   001766  6E2B               	movwf	(___flge@ff1+1)^0,c
 12919   001768  0E68               	movlw	104
 12920   00176A  6E2C               	movwf	(___flge@ff1+2)^0,c
 12921   00176C  0E42               	movlw	66
 12922   00176E  6E2D               	movwf	(___flge@ff1+3)^0,c
 12923   001770  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12924   001774  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12925   001778  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12926   00177C  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12927   001780  ECFE  F025         	call	___flge	;wreg free
 12928   001784  B0D8               	btfsc	status,0,c
 12929   001786  EFC7  F00B         	goto	u5461
 12930   00178A  EFC9  F00B         	goto	u5460
 12931   00178E                     u5461:
 12932   00178E  EFBA  F00A         	goto	l5445
 12933   001792                     u5460:
 12934   001792                     l5499:
 12935   001792  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12936   001796  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12937   00179A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12938   00179E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12939   0017A2  0E00               	movlw	0
 12940   0017A4  6E2E               	movwf	___flge@ff2^0,c
 12941   0017A6  0E00               	movlw	0
 12942   0017A8  6E2F               	movwf	(___flge@ff2+1)^0,c
 12943   0017AA  0EF0               	movlw	240
 12944   0017AC  6E30               	movwf	(___flge@ff2+2)^0,c
 12945   0017AE  0E42               	movlw	66
 12946   0017B0  6E31               	movwf	(___flge@ff2+3)^0,c
 12947   0017B2  ECFE  F025         	call	___flge	;wreg free
 12948   0017B6  A0D8               	btfss	status,0,c
 12949   0017B8  EFE0  F00B         	goto	u5471
 12950   0017BC  EFE2  F00B         	goto	u5470
 12951   0017C0                     u5471:
 12952   0017C0  EFFD  F00B         	goto	l5509
 12953   0017C4                     u5470:
 12954   0017C4  0E00               	movlw	0
 12955   0017C6  6E2A               	movwf	___flge@ff1^0,c
 12956   0017C8  0E00               	movlw	0
 12957   0017CA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12958   0017CC  0E5C               	movlw	92
 12959   0017CE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12960   0017D0  0E43               	movlw	67
 12961   0017D2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12962   0017D4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12963   0017D8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12964   0017DC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12965   0017E0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12966   0017E4  ECFE  F025         	call	___flge	;wreg free
 12967   0017E8  A0D8               	btfss	status,0,c
 12968   0017EA  EFF9  F00B         	goto	u5481
 12969   0017EE  EFFB  F00B         	goto	u5480
 12970   0017F2                     u5481:
 12971   0017F2  EFFD  F00B         	goto	l5509
 12972   0017F6                     u5480:
 12973   0017F6  EFBA  F00A         	goto	l5445
 12974   0017FA                     l5509:
 12975   0017FA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12976   0017FE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12977   001802  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12978   001806  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12979   00180A  0E00               	movlw	0
 12980   00180C  6E2E               	movwf	___flge@ff2^0,c
 12981   00180E  0E00               	movlw	0
 12982   001810  6E2F               	movwf	(___flge@ff2+1)^0,c
 12983   001812  0E60               	movlw	96
 12984   001814  6E30               	movwf	(___flge@ff2+2)^0,c
 12985   001816  0E41               	movlw	65
 12986   001818  6E31               	movwf	(___flge@ff2+3)^0,c
 12987   00181A  ECFE  F025         	call	___flge	;wreg free
 12988   00181E  A0D8               	btfss	status,0,c
 12989   001820  EF14  F00C         	goto	u5491
 12990   001824  EF16  F00C         	goto	u5490
 12991   001828                     u5491:
 12992   001828  EF92  F00C         	goto	l5535
 12993   00182C                     u5490:
 12994   00182C  0E00               	movlw	0
 12995   00182E  6E2A               	movwf	___flge@ff1^0,c
 12996   001830  0E00               	movlw	0
 12997   001832  6E2B               	movwf	(___flge@ff1+1)^0,c
 12998   001834  0E98               	movlw	152
 12999   001836  6E2C               	movwf	(___flge@ff1+2)^0,c
 13000   001838  0E41               	movlw	65
 13001   00183A  6E2D               	movwf	(___flge@ff1+3)^0,c
 13002   00183C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13003   001840  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13004   001844  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13005   001848  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13006   00184C  ECFE  F025         	call	___flge	;wreg free
 13007   001850  A0D8               	btfss	status,0,c
 13008   001852  EF2D  F00C         	goto	u5501
 13009   001856  EF2F  F00C         	goto	u5500
 13010   00185A                     u5501:
 13011   00185A  EF92  F00C         	goto	l5535
 13012   00185E                     u5500:
 13013   00185E                     
 13014                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 13015   00185E  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 13016   001862  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 13017   001866  CFDE F02A          	movff	postinc2,___flge@ff1
 13018   00186A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13019   00186E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13020   001872  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13021   001876  0ECD               	movlw	205
 13022   001878  6E2E               	movwf	___flge@ff2^0,c
 13023   00187A  0ECC               	movlw	204
 13024   00187C  6E2F               	movwf	(___flge@ff2+1)^0,c
 13025   00187E  0E4C               	movlw	76
 13026   001880  6E30               	movwf	(___flge@ff2+2)^0,c
 13027   001882  0E3E               	movlw	62
 13028   001884  6E31               	movwf	(___flge@ff2+3)^0,c
 13029   001886  ECFE  F025         	call	___flge	;wreg free
 13030   00188A  A0D8               	btfss	status,0,c
 13031   00188C  EF4A  F00C         	goto	u5511
 13032   001890  EF4C  F00C         	goto	u5510
 13033   001894                     u5511:
 13034   001894  EF6B  F00C         	goto	l5523
 13035   001898                     u5510:
 13036   001898  0E1F               	movlw	31
 13037   00189A  6E2A               	movwf	___flge@ff1^0,c
 13038   00189C  0E85               	movlw	133
 13039   00189E  6E2B               	movwf	(___flge@ff1+1)^0,c
 13040   0018A0  0E6B               	movlw	107
 13041   0018A2  6E2C               	movwf	(___flge@ff1+2)^0,c
 13042   0018A4  0E3E               	movlw	62
 13043   0018A6  6E2D               	movwf	(___flge@ff1+3)^0,c
 13044   0018A8  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 13045   0018AC  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 13046   0018B0  CFDE F02E          	movff	postinc2,___flge@ff2
 13047   0018B4  CFDE F02F          	movff	postinc2,___flge@ff2+1
 13048   0018B8  CFDE F030          	movff	postinc2,___flge@ff2+2
 13049   0018BC  CFDE F031          	movff	postinc2,___flge@ff2+3
 13050   0018C0  ECFE  F025         	call	___flge	;wreg free
 13051   0018C4  A0D8               	btfss	status,0,c
 13052   0018C6  EF67  F00C         	goto	u5521
 13053   0018CA  EF69  F00C         	goto	u5520
 13054   0018CE                     u5521:
 13055   0018CE  EF6B  F00C         	goto	l5523
 13056   0018D2                     u5520:
 13057   0018D2  EF5A  F008         	goto	l5387
 13058   0018D6                     l5523:
 13059   0018D6  EE20 F008          	lfsr	2,8
 13060   0018DA  504D               	movf	Colour_decider@rel^0,w,c
 13061   0018DC  26D9               	addwf	fsr2l,f,c
 13062   0018DE  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13063   0018E0  22DA               	addwfc	fsr2h,f,c
 13064   0018E2  CFDE F02A          	movff	postinc2,___flge@ff1
 13065   0018E6  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13066   0018EA  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13067   0018EE  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13068   0018F2  0E9A               	movlw	154
 13069   0018F4  6E2E               	movwf	___flge@ff2^0,c
 13070   0018F6  0E99               	movlw	153
 13071   0018F8  6E2F               	movwf	(___flge@ff2+1)^0,c
 13072   0018FA  0E19               	movlw	25
 13073   0018FC  6E30               	movwf	(___flge@ff2+2)^0,c
 13074   0018FE  0E3E               	movlw	62
 13075   001900  6E31               	movwf	(___flge@ff2+3)^0,c
 13076   001902  ECFE  F025         	call	___flge	;wreg free
 13077   001906  A0D8               	btfss	status,0,c
 13078   001908  EF88  F00C         	goto	u5531
 13079   00190C  EF8A  F00C         	goto	u5530
 13080   001910                     u5531:
 13081   001910  EF8C  F00C         	goto	l5531
 13082   001914                     u5530:
 13083   001914  EFBA  F00A         	goto	l5445
 13084   001918                     l5531:
 13085                           
 13086                           ;color.c: 223:             return 7;
 13087   001918  0E00               	movlw	0
 13088   00191A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13089   00191C  0E07               	movlw	7
 13090   00191E  6E4B               	movwf	?_Colour_decider^0,c
 13091   001920  EF96  F00C         	goto	l76
 13092   001924                     l5535:
 13093                           
 13094                           ;color.c: 227:         return 10;
 13095   001924  0E00               	movlw	0
 13096   001926  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13097   001928  0E0A               	movlw	10
 13098   00192A  6E4B               	movwf	?_Colour_decider^0,c
 13099   00192C                     l76:
 13100   00192C  0012               	return		;funcret
 13101   00192E                     __end_of_Colour_decider:
 13102                           	callstack 0
 13103                           
 13104 ;; *************** function ___xxtofl *****************
 13105 ;; Defined at:
 13106 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 13107 ;; Parameters:    Size  Location     Type
 13108 ;;  sign            1    wreg     unsigned char 
 13109 ;;  val             4    0[COMRAM] long 
 13110 ;; Auto vars:     Size  Location     Type
 13111 ;;  sign            1    8[COMRAM] unsigned char 
 13112 ;;  arg             4   10[COMRAM] unsigned long 
 13113 ;;  exp             1    9[COMRAM] unsigned char 
 13114 ;; Return value:  Size  Location     Type
 13115 ;;                  4    0[COMRAM] unsigned char 
 13116 ;; Registers used:
 13117 ;;		wreg, status,2, status,0
 13118 ;; Tracked objects:
 13119 ;;		On entry : 0/0
 13120 ;;		On exit  : 0/0
 13121 ;;		Unchanged: 0/0
 13122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13124 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13125 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13126 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13127 ;;Total ram usage:       14 bytes
 13128 ;; Hardware stack levels used: 1
 13129 ;; This function calls:
 13130 ;;		Nothing
 13131 ;; This function is called by:
 13132 ;;		_colour_rel
 13133 ;;		_Colour_decider
 13134 ;;		_reverseOneBlock
 13135 ;;		_ForwardOneBlock
 13136 ;;		_Forwardhalfblock
 13137 ;;		_Backhalfblock
 13138 ;; This function uses a non-reentrant model
 13139 ;;
 13140                           
 13141                           	psect	text72
 13142   0044EA                     __ptext72:
 13143                           	callstack 0
 13144   0044EA                     ___xxtofl:
 13145                           	callstack 29
 13146                           
 13147                           ;incstack = 0
 13148                           ;___xxtofl@sign stored from wreg
 13149   0044EA  6E09               	movwf	___xxtofl@sign^0,c
 13150   0044EC  5009               	movf	___xxtofl@sign^0,w,c
 13151   0044EE  B4D8               	btfsc	status,2,c
 13152   0044F0  EF7C  F022         	goto	u5101
 13153   0044F4  EF7E  F022         	goto	u5100
 13154   0044F8                     u5101:
 13155   0044F8  EFA0  F022         	goto	l1355
 13156   0044FC                     u5100:
 13157   0044FC  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13158   0044FE  EF85  F022         	goto	u5110
 13159   004502  EF83  F022         	goto	u5111
 13160   004506                     u5111:
 13161   004506  EFA0  F022         	goto	l1355
 13162   00450A                     u5110:
 13163   00450A  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13164   00450E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13165   004512  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13166   004516  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13167   00451A  1E05               	comf	??___xxtofl^0,f,c
 13168   00451C  1E06               	comf	(??___xxtofl+1)^0,f,c
 13169   00451E  1E07               	comf	(??___xxtofl+2)^0,f,c
 13170   004520  1E08               	comf	(??___xxtofl+3)^0,f,c
 13171   004522  2A05               	incf	??___xxtofl^0,f,c
 13172   004524  0E00               	movlw	0
 13173   004526  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13174   004528  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13175   00452A  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13176   00452C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13177   004530  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13178   004534  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13179   004538  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13180   00453C  EFA8  F022         	goto	l5257
 13181   004540                     l1355:
 13182   004540  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13183   004544  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13184   004548  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13185   00454C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13186   004550                     l5257:
 13187   004550  5001               	movf	___xxtofl@val^0,w,c
 13188   004552  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13189   004554  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13190   004556  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13191   004558  A4D8               	btfss	status,2,c
 13192   00455A  EFB1  F022         	goto	u5121
 13193   00455E  EFB3  F022         	goto	u5120
 13194   004562                     u5121:
 13195   004562  EFBD  F022         	goto	l5263
 13196   004566                     u5120:
 13197   004566  0E00               	movlw	0
 13198   004568  6E01               	movwf	?___xxtofl^0,c
 13199   00456A  0E00               	movlw	0
 13200   00456C  6E02               	movwf	(?___xxtofl+1)^0,c
 13201   00456E  0E00               	movlw	0
 13202   004570  6E03               	movwf	(?___xxtofl+2)^0,c
 13203   004572  0E00               	movlw	0
 13204   004574  6E04               	movwf	(?___xxtofl+3)^0,c
 13205   004576  EF4E  F023         	goto	l1358
 13206   00457A                     l5263:
 13207   00457A  0E96               	movlw	150
 13208   00457C  6E0A               	movwf	___xxtofl@exp^0,c
 13209   00457E  EFC7  F022         	goto	l5267
 13210   004582                     l5265:
 13211   004582  2A0A               	incf	___xxtofl@exp^0,f,c
 13212   004584  90D8               	bcf	status,0,c
 13213   004586  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13214   004588  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13215   00458A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13216   00458C  320B               	rrcf	___xxtofl@arg^0,f,c
 13217   00458E                     l5267:
 13218   00458E  0E00               	movlw	0
 13219   004590  140B               	andwf	___xxtofl@arg^0,w,c
 13220   004592  6E05               	movwf	??___xxtofl^0,c
 13221   004594  0E00               	movlw	0
 13222   004596  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13223   004598  6E06               	movwf	(??___xxtofl+1)^0,c
 13224   00459A  0E00               	movlw	0
 13225   00459C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13226   00459E  6E07               	movwf	(??___xxtofl+2)^0,c
 13227   0045A0  0EFE               	movlw	254
 13228   0045A2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13229   0045A4  6E08               	movwf	(??___xxtofl+3)^0,c
 13230   0045A6  5005               	movf	??___xxtofl^0,w,c
 13231   0045A8  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13232   0045AA  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13233   0045AC  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13234   0045AE  A4D8               	btfss	status,2,c
 13235   0045B0  EFDC  F022         	goto	u5131
 13236   0045B4  EFDE  F022         	goto	u5130
 13237   0045B8                     u5131:
 13238   0045B8  EFC1  F022         	goto	l5265
 13239   0045BC                     u5130:
 13240   0045BC  EFEC  F022         	goto	l1362
 13241   0045C0                     l5269:
 13242   0045C0  2A0A               	incf	___xxtofl@exp^0,f,c
 13243   0045C2  0E01               	movlw	1
 13244   0045C4  260B               	addwf	___xxtofl@arg^0,f,c
 13245   0045C6  0E00               	movlw	0
 13246   0045C8  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13247   0045CA  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13248   0045CC  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13249   0045CE  90D8               	bcf	status,0,c
 13250   0045D0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13251   0045D2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13252   0045D4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13253   0045D6  320B               	rrcf	___xxtofl@arg^0,f,c
 13254   0045D8                     l1362:
 13255   0045D8  0E00               	movlw	0
 13256   0045DA  140B               	andwf	___xxtofl@arg^0,w,c
 13257   0045DC  6E05               	movwf	??___xxtofl^0,c
 13258   0045DE  0E00               	movlw	0
 13259   0045E0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13260   0045E2  6E06               	movwf	(??___xxtofl+1)^0,c
 13261   0045E4  0E00               	movlw	0
 13262   0045E6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13263   0045E8  6E07               	movwf	(??___xxtofl+2)^0,c
 13264   0045EA  0EFF               	movlw	255
 13265   0045EC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13266   0045EE  6E08               	movwf	(??___xxtofl+3)^0,c
 13267   0045F0  5005               	movf	??___xxtofl^0,w,c
 13268   0045F2  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13269   0045F4  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13270   0045F6  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13271   0045F8  A4D8               	btfss	status,2,c
 13272   0045FA  EF01  F023         	goto	u5141
 13273   0045FE  EF03  F023         	goto	u5140
 13274   004602                     u5141:
 13275   004602  EFE0  F022         	goto	l5269
 13276   004606                     u5140:
 13277   004606  EF0B  F023         	goto	l5277
 13278   00460A                     l5275:
 13279   00460A  060A               	decf	___xxtofl@exp^0,f,c
 13280   00460C  90D8               	bcf	status,0,c
 13281   00460E  360B               	rlcf	___xxtofl@arg^0,f,c
 13282   004610  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13283   004612  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13284   004614  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13285   004616                     l5277:
 13286   004616  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13287   004618  EF10  F023         	goto	u5151
 13288   00461C  EF12  F023         	goto	u5150
 13289   004620                     u5151:
 13290   004620  EF1A  F023         	goto	l1369
 13291   004624                     u5150:
 13292   004624  0E02               	movlw	2
 13293   004626  600A               	cpfslt	___xxtofl@exp^0,c
 13294   004628  EF18  F023         	goto	u5161
 13295   00462C  EF1A  F023         	goto	u5160
 13296   004630                     u5161:
 13297   004630  EF05  F023         	goto	l5275
 13298   004634                     u5160:
 13299   004634                     l1369:
 13300   004634  B00A               	btfsc	___xxtofl@exp^0,0,c
 13301   004636  EF1F  F023         	goto	u5171
 13302   00463A  EF21  F023         	goto	u5170
 13303   00463E                     u5171:
 13304   00463E  EF22  F023         	goto	l5283
 13305   004642                     u5170:
 13306   004642  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13307   004644                     l5283:
 13308   004644  90D8               	bcf	status,0,c
 13309   004646  320A               	rrcf	___xxtofl@exp^0,f,c
 13310   004648  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13311   00464C  6A06               	clrf	(??___xxtofl+1)^0,c
 13312   00464E  6A07               	clrf	(??___xxtofl+2)^0,c
 13313   004650  6A08               	clrf	(??___xxtofl+3)^0,c
 13314   004652  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13315   004656  6A07               	clrf	(??___xxtofl+2)^0,c
 13316   004658  6A06               	clrf	(??___xxtofl+1)^0,c
 13317   00465A  6A05               	clrf	??___xxtofl^0,c
 13318   00465C  5005               	movf	??___xxtofl^0,w,c
 13319   00465E  120B               	iorwf	___xxtofl@arg^0,f,c
 13320   004660  5006               	movf	(??___xxtofl+1)^0,w,c
 13321   004662  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13322   004664  5007               	movf	(??___xxtofl+2)^0,w,c
 13323   004666  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13324   004668  5008               	movf	(??___xxtofl+3)^0,w,c
 13325   00466A  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13326   00466C  5009               	movf	___xxtofl@sign^0,w,c
 13327   00466E  B4D8               	btfsc	status,2,c
 13328   004670  EF3C  F023         	goto	u5181
 13329   004674  EF3E  F023         	goto	u5180
 13330   004678                     u5181:
 13331   004678  EF46  F023         	goto	l5293
 13332   00467C                     u5180:
 13333   00467C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13334   00467E  EF45  F023         	goto	u5190
 13335   004682  EF43  F023         	goto	u5191
 13336   004686                     u5191:
 13337   004686  EF46  F023         	goto	l5293
 13338   00468A                     u5190:
 13339   00468A  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13340   00468C                     l5293:
 13341   00468C  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13342   004690  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13343   004694  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13344   004698  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13345   00469C                     l1358:
 13346   00469C  0012               	return		;funcret
 13347   00469E                     __end_of___xxtofl:
 13348                           	callstack 0
 13349                           
 13350 ;; *************** function ___flsub *****************
 13351 ;; Defined at:
 13352 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13353 ;; Parameters:    Size  Location     Type
 13354 ;;  b               4   41[COMRAM] unsigned char 
 13355 ;;  a               4   45[COMRAM] unsigned char 
 13356 ;; Auto vars:     Size  Location     Type
 13357 ;;		None
 13358 ;; Return value:  Size  Location     Type
 13359 ;;                  4   41[COMRAM] unsigned char 
 13360 ;; Registers used:
 13361 ;;		wreg, status,2, status,0, cstack
 13362 ;; Tracked objects:
 13363 ;;		On entry : 0/0
 13364 ;;		On exit  : 0/0
 13365 ;;		Unchanged: 0/0
 13366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13367 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13370 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13371 ;;Total ram usage:        8 bytes
 13372 ;; Hardware stack levels used: 1
 13373 ;; Hardware stack levels required when called: 1
 13374 ;; This function calls:
 13375 ;;		___fladd
 13376 ;; This function is called by:
 13377 ;;		_Colour_decider
 13378 ;;		_efgtoa
 13379 ;; This function uses a non-reentrant model
 13380 ;;
 13381                           
 13382                           	psect	text73
 13383   005DDA                     __ptext73:
 13384                           	callstack 0
 13385   005DDA                     ___flsub:
 13386                           	callstack 25
 13387   005DDA  0E00               	movlw	0
 13388   005DDC  1A2E               	xorwf	___flsub@a^0,f,c
 13389   005DDE  0E00               	movlw	0
 13390   005DE0  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13391   005DE2  0E00               	movlw	0
 13392   005DE4  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13393   005DE6  0E80               	movlw	128
 13394   005DE8  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13395   005DEA  C02A  F001         	movff	___flsub@b,___fladd@b
 13396   005DEE  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13397   005DF2  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13398   005DF6  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13399   005DFA  C02E  F005         	movff	___flsub@a,___fladd@a
 13400   005DFE  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13401   005E02  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13402   005E06  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13403   005E0A  EC8B  F014         	call	___fladd	;wreg free
 13404   005E0E  C001  F02A         	movff	?___fladd,?___flsub
 13405   005E12  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13406   005E16  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13407   005E1A  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13408   005E1E  0012               	return		;funcret
 13409   005E20                     __end_of___flsub:
 13410                           	callstack 0
 13411                           
 13412 ;; *************** function ___fladd *****************
 13413 ;; Defined at:
 13414 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13415 ;; Parameters:    Size  Location     Type
 13416 ;;  b               4    0[COMRAM] unsigned char 
 13417 ;;  a               4    4[COMRAM] unsigned char 
 13418 ;; Auto vars:     Size  Location     Type
 13419 ;;  grs             1   15[COMRAM] unsigned char 
 13420 ;;  bexp            1   14[COMRAM] unsigned char 
 13421 ;;  aexp            1   13[COMRAM] unsigned char 
 13422 ;;  signs           1   12[COMRAM] unsigned char 
 13423 ;; Return value:  Size  Location     Type
 13424 ;;                  4    0[COMRAM] unsigned char 
 13425 ;; Registers used:
 13426 ;;		wreg, status,2, status,0
 13427 ;; Tracked objects:
 13428 ;;		On entry : 0/0
 13429 ;;		On exit  : 0/0
 13430 ;;		Unchanged: 0/0
 13431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13432 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13433 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13434 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13435 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13436 ;;Total ram usage:       16 bytes
 13437 ;; Hardware stack levels used: 1
 13438 ;; This function calls:
 13439 ;;		Nothing
 13440 ;; This function is called by:
 13441 ;;		_colour_rel
 13442 ;;		_Colour_decider
 13443 ;;		___flsub
 13444 ;;		_efgtoa
 13445 ;; This function uses a non-reentrant model
 13446 ;;
 13447                           
 13448                           	psect	text74
 13449   002916                     __ptext74:
 13450                           	callstack 0
 13451   002916                     ___fladd:
 13452                           	callstack 25
 13453   002916  5004               	movf	(___fladd@b+3)^0,w,c
 13454   002918  0B80               	andlw	128
 13455   00291A  6E0D               	movwf	___fladd@signs^0,c
 13456   00291C  5004               	movf	(___fladd@b+3)^0,w,c
 13457   00291E  2404               	addwf	(___fladd@b+3)^0,w,c
 13458   002920  6E0F               	movwf	___fladd@bexp^0,c
 13459   002922  AE03               	btfss	(___fladd@b+2)^0,7,c
 13460   002924  EF96  F014         	goto	u3061
 13461   002928  EF98  F014         	goto	u3060
 13462   00292C                     u3061:
 13463   00292C  EF99  F014         	goto	l3899
 13464   002930                     u3060:
 13465   002930  800F               	bsf	___fladd@bexp^0,0,c
 13466   002932                     l3899:
 13467   002932  500F               	movf	___fladd@bexp^0,w,c
 13468   002934  B4D8               	btfsc	status,2,c
 13469   002936  EF9F  F014         	goto	u3071
 13470   00293A  EFA1  F014         	goto	u3070
 13471   00293E                     u3071:
 13472   00293E  EFB6  F014         	goto	l3909
 13473   002942                     u3070:
 13474   002942  280F               	incf	___fladd@bexp^0,w,c
 13475   002944  A4D8               	btfss	status,2,c
 13476   002946  EFA7  F014         	goto	u3081
 13477   00294A  EFA9  F014         	goto	u3080
 13478   00294E                     u3081:
 13479   00294E  EFB1  F014         	goto	l3905
 13480   002952                     u3080:
 13481   002952  0E00               	movlw	0
 13482   002954  6E01               	movwf	___fladd@b^0,c
 13483   002956  0E00               	movlw	0
 13484   002958  6E02               	movwf	(___fladd@b+1)^0,c
 13485   00295A  0E00               	movlw	0
 13486   00295C  6E03               	movwf	(___fladd@b+2)^0,c
 13487   00295E  0E00               	movlw	0
 13488   002960  6E04               	movwf	(___fladd@b+3)^0,c
 13489   002962                     l3905:
 13490   002962  8E03               	bsf	(___fladd@b+2)^0,7,c
 13491   002964  0E00               	movlw	0
 13492   002966  6E04               	movwf	(___fladd@b+3)^0,c
 13493   002968  EFBE  F014         	goto	l3911
 13494   00296C                     l3909:
 13495   00296C  0E00               	movlw	0
 13496   00296E  6E01               	movwf	___fladd@b^0,c
 13497   002970  0E00               	movlw	0
 13498   002972  6E02               	movwf	(___fladd@b+1)^0,c
 13499   002974  0E00               	movlw	0
 13500   002976  6E03               	movwf	(___fladd@b+2)^0,c
 13501   002978  0E00               	movlw	0
 13502   00297A  6E04               	movwf	(___fladd@b+3)^0,c
 13503   00297C                     l3911:
 13504   00297C  5008               	movf	(___fladd@a+3)^0,w,c
 13505   00297E  0B80               	andlw	128
 13506   002980  6E0E               	movwf	___fladd@aexp^0,c
 13507   002982  500D               	movf	___fladd@signs^0,w,c
 13508   002984  180E               	xorwf	___fladd@aexp^0,w,c
 13509   002986  B4D8               	btfsc	status,2,c
 13510   002988  EFC8  F014         	goto	u3091
 13511   00298C  EFCA  F014         	goto	u3090
 13512   002990                     u3091:
 13513   002990  EFCB  F014         	goto	l3917
 13514   002994                     u3090:
 13515   002994  8C0D               	bsf	___fladd@signs^0,6,c
 13516   002996                     l3917:
 13517   002996  5008               	movf	(___fladd@a+3)^0,w,c
 13518   002998  2408               	addwf	(___fladd@a+3)^0,w,c
 13519   00299A  6E0E               	movwf	___fladd@aexp^0,c
 13520   00299C  AE07               	btfss	(___fladd@a+2)^0,7,c
 13521   00299E  EFD3  F014         	goto	u3101
 13522   0029A2  EFD5  F014         	goto	u3100
 13523   0029A6                     u3101:
 13524   0029A6  EFD6  F014         	goto	l3923
 13525   0029AA                     u3100:
 13526   0029AA  800E               	bsf	___fladd@aexp^0,0,c
 13527   0029AC                     l3923:
 13528   0029AC  500E               	movf	___fladd@aexp^0,w,c
 13529   0029AE  B4D8               	btfsc	status,2,c
 13530   0029B0  EFDC  F014         	goto	u3111
 13531   0029B4  EFDE  F014         	goto	u3110
 13532   0029B8                     u3111:
 13533   0029B8  EFF3  F014         	goto	l3933
 13534   0029BC                     u3110:
 13535   0029BC  280E               	incf	___fladd@aexp^0,w,c
 13536   0029BE  A4D8               	btfss	status,2,c
 13537   0029C0  EFE4  F014         	goto	u3121
 13538   0029C4  EFE6  F014         	goto	u3120
 13539   0029C8                     u3121:
 13540   0029C8  EFEE  F014         	goto	l3929
 13541   0029CC                     u3120:
 13542   0029CC  0E00               	movlw	0
 13543   0029CE  6E05               	movwf	___fladd@a^0,c
 13544   0029D0  0E00               	movlw	0
 13545   0029D2  6E06               	movwf	(___fladd@a+1)^0,c
 13546   0029D4  0E00               	movlw	0
 13547   0029D6  6E07               	movwf	(___fladd@a+2)^0,c
 13548   0029D8  0E00               	movlw	0
 13549   0029DA  6E08               	movwf	(___fladd@a+3)^0,c
 13550   0029DC                     l3929:
 13551   0029DC  8E07               	bsf	(___fladd@a+2)^0,7,c
 13552   0029DE  0E00               	movlw	0
 13553   0029E0  6E08               	movwf	(___fladd@a+3)^0,c
 13554   0029E2  EFFB  F014         	goto	l3935
 13555   0029E6                     l3933:
 13556   0029E6  0E00               	movlw	0
 13557   0029E8  6E05               	movwf	___fladd@a^0,c
 13558   0029EA  0E00               	movlw	0
 13559   0029EC  6E06               	movwf	(___fladd@a+1)^0,c
 13560   0029EE  0E00               	movlw	0
 13561   0029F0  6E07               	movwf	(___fladd@a+2)^0,c
 13562   0029F2  0E00               	movlw	0
 13563   0029F4  6E08               	movwf	(___fladd@a+3)^0,c
 13564   0029F6                     l3935:
 13565   0029F6  500F               	movf	___fladd@bexp^0,w,c
 13566   0029F8  5C0E               	subwf	___fladd@aexp^0,w,c
 13567   0029FA  B0D8               	btfsc	status,0,c
 13568   0029FC  EF02  F015         	goto	u3131
 13569   002A00  EF04  F015         	goto	u3130
 13570   002A04                     u3131:
 13571   002A04  EF2B  F015         	goto	l3971
 13572   002A08                     u3130:
 13573   002A08  AC0D               	btfss	___fladd@signs^0,6,c
 13574   002A0A  EF09  F015         	goto	u3141
 13575   002A0E  EF0B  F015         	goto	u3140
 13576   002A12                     u3141:
 13577   002A12  EF0D  F015         	goto	l3941
 13578   002A16                     u3140:
 13579   002A16  0E80               	movlw	128
 13580   002A18  1A0D               	xorwf	___fladd@signs^0,f,c
 13581   002A1A                     l3941:
 13582   002A1A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13583   002A1E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13584   002A22  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13585   002A26  C001  F010         	movff	___fladd@b,___fladd@grs
 13586   002A2A  C005  F001         	movff	___fladd@a,___fladd@b
 13587   002A2E  C010  F005         	movff	___fladd@grs,___fladd@a
 13588   002A32  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13589   002A36  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13590   002A3A  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13591   002A3E  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13592   002A42  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13593   002A46  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13594   002A4A  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13595   002A4E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13596   002A52  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13597   002A56                     l3971:
 13598   002A56  0E00               	movlw	0
 13599   002A58  6E10               	movwf	___fladd@grs^0,c
 13600   002A5A  500F               	movf	___fladd@bexp^0,w,c
 13601   002A5C  C00E  F009         	movff	___fladd@aexp,??___fladd
 13602   002A60  6A0A               	clrf	(??___fladd+1)^0,c
 13603   002A62  5E09               	subwf	??___fladd^0,f,c
 13604   002A64  0E00               	movlw	0
 13605   002A66  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13606   002A68  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13607   002A6A  EF40  F015         	goto	u3151
 13608   002A6E  500A               	movf	(??___fladd+1)^0,w,c
 13609   002A70  E109               	bnz	u3150
 13610   002A72  0E1A               	movlw	26
 13611   002A74  5C09               	subwf	??___fladd^0,w,c
 13612   002A76  A0D8               	btfss	status,0,c
 13613   002A78  EF40  F015         	goto	u3151
 13614   002A7C  EF42  F015         	goto	u3150
 13615   002A80                     u3151:
 13616   002A80  EF79  F015         	goto	l1229
 13617   002A84                     u3150:
 13618   002A84  5001               	movf	___fladd@b^0,w,c
 13619   002A86  1002               	iorwf	(___fladd@b+1)^0,w,c
 13620   002A88  1003               	iorwf	(___fladd@b+2)^0,w,c
 13621   002A8A  1004               	iorwf	(___fladd@b+3)^0,w,c
 13622   002A8C  A4D8               	btfss	status,2,c
 13623   002A8E  EF4B  F015         	goto	u3161
 13624   002A92  EF4E  F015         	goto	u3160
 13625   002A96                     u3161:
 13626   002A96  0E01               	movlw	1
 13627   002A98  EF4F  F015         	goto	u3170
 13628   002A9C                     u3160:
 13629   002A9C  0E00               	movlw	0
 13630   002A9E                     u3170:
 13631   002A9E  6E10               	movwf	___fladd@grs^0,c
 13632   002AA0  0E00               	movlw	0
 13633   002AA2  6E01               	movwf	___fladd@b^0,c
 13634   002AA4  0E00               	movlw	0
 13635   002AA6  6E02               	movwf	(___fladd@b+1)^0,c
 13636   002AA8  0E00               	movlw	0
 13637   002AAA  6E03               	movwf	(___fladd@b+2)^0,c
 13638   002AAC  0E00               	movlw	0
 13639   002AAE  6E04               	movwf	(___fladd@b+3)^0,c
 13640   002AB0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13641   002AB4  EF82  F015         	goto	l1228
 13642   002AB8                     l1230:
 13643   002AB8  A010               	btfss	___fladd@grs^0,0,c
 13644   002ABA  EF61  F015         	goto	u3181
 13645   002ABE  EF63  F015         	goto	u3180
 13646   002AC2                     u3181:
 13647   002AC2  EF69  F015         	goto	l3983
 13648   002AC6                     u3180:
 13649   002AC6  90D8               	bcf	status,0,c
 13650   002AC8  3010               	rrcf	___fladd@grs^0,w,c
 13651   002ACA  0901               	iorlw	1
 13652   002ACC  6E10               	movwf	___fladd@grs^0,c
 13653   002ACE  EF6B  F015         	goto	l3985
 13654   002AD2                     l3983:
 13655   002AD2  90D8               	bcf	status,0,c
 13656   002AD4  3210               	rrcf	___fladd@grs^0,f,c
 13657   002AD6                     l3985:
 13658   002AD6  A001               	btfss	___fladd@b^0,0,c
 13659   002AD8  EF70  F015         	goto	u3191
 13660   002ADC  EF72  F015         	goto	u3190
 13661   002AE0                     u3191:
 13662   002AE0  EF73  F015         	goto	l3989
 13663   002AE4                     u3190:
 13664   002AE4  8E10               	bsf	___fladd@grs^0,7,c
 13665   002AE6                     l3989:
 13666   002AE6  3404               	rlcf	(___fladd@b+3)^0,w,c
 13667   002AE8  3204               	rrcf	(___fladd@b+3)^0,f,c
 13668   002AEA  3203               	rrcf	(___fladd@b+2)^0,f,c
 13669   002AEC  3202               	rrcf	(___fladd@b+1)^0,f,c
 13670   002AEE  3201               	rrcf	___fladd@b^0,f,c
 13671   002AF0  2A0F               	incf	___fladd@bexp^0,f,c
 13672   002AF2                     l1229:
 13673   002AF2  500E               	movf	___fladd@aexp^0,w,c
 13674   002AF4  5C0F               	subwf	___fladd@bexp^0,w,c
 13675   002AF6  A0D8               	btfss	status,0,c
 13676   002AF8  EF80  F015         	goto	u3201
 13677   002AFC  EF82  F015         	goto	u3200
 13678   002B00                     u3201:
 13679   002B00  EF5C  F015         	goto	l1230
 13680   002B04                     u3200:
 13681   002B04                     l1228:
 13682   002B04  BC0D               	btfsc	___fladd@signs^0,6,c
 13683   002B06  EF87  F015         	goto	u3211
 13684   002B0A  EF89  F015         	goto	u3210
 13685   002B0E                     u3211:
 13686   002B0E  EFC9  F015         	goto	l4017
 13687   002B12                     u3210:
 13688   002B12  500F               	movf	___fladd@bexp^0,w,c
 13689   002B14  A4D8               	btfss	status,2,c
 13690   002B16  EF8F  F015         	goto	u3221
 13691   002B1A  EF91  F015         	goto	u3220
 13692   002B1E                     u3221:
 13693   002B1E  EF9B  F015         	goto	l3999
 13694   002B22                     u3220:
 13695   002B22  0E00               	movlw	0
 13696   002B24  6E01               	movwf	?___fladd^0,c
 13697   002B26  0E00               	movlw	0
 13698   002B28  6E02               	movwf	(?___fladd+1)^0,c
 13699   002B2A  0E00               	movlw	0
 13700   002B2C  6E03               	movwf	(?___fladd+2)^0,c
 13701   002B2E  0E00               	movlw	0
 13702   002B30  6E04               	movwf	(?___fladd+3)^0,c
 13703   002B32  EFEA  F016         	goto	l1237
 13704   002B36                     l3999:
 13705   002B36  5005               	movf	___fladd@a^0,w,c
 13706   002B38  2601               	addwf	___fladd@b^0,f,c
 13707   002B3A  5006               	movf	(___fladd@a+1)^0,w,c
 13708   002B3C  2202               	addwfc	(___fladd@b+1)^0,f,c
 13709   002B3E  5007               	movf	(___fladd@a+2)^0,w,c
 13710   002B40  2203               	addwfc	(___fladd@b+2)^0,f,c
 13711   002B42  5008               	movf	(___fladd@a+3)^0,w,c
 13712   002B44  2204               	addwfc	(___fladd@b+3)^0,f,c
 13713   002B46  A004               	btfss	(___fladd@b+3)^0,0,c
 13714   002B48  EFA8  F015         	goto	u3231
 13715   002B4C  EFAA  F015         	goto	u3230
 13716   002B50                     u3231:
 13717   002B50  EF56  F016         	goto	l4053
 13718   002B54                     u3230:
 13719   002B54  A010               	btfss	___fladd@grs^0,0,c
 13720   002B56  EFAF  F015         	goto	u3241
 13721   002B5A  EFB1  F015         	goto	u3240
 13722   002B5E                     u3241:
 13723   002B5E  EFB7  F015         	goto	l4007
 13724   002B62                     u3240:
 13725   002B62  90D8               	bcf	status,0,c
 13726   002B64  3010               	rrcf	___fladd@grs^0,w,c
 13727   002B66  0901               	iorlw	1
 13728   002B68  6E10               	movwf	___fladd@grs^0,c
 13729   002B6A  EFB9  F015         	goto	l4009
 13730   002B6E                     l4007:
 13731   002B6E  90D8               	bcf	status,0,c
 13732   002B70  3210               	rrcf	___fladd@grs^0,f,c
 13733   002B72                     l4009:
 13734   002B72  A001               	btfss	___fladd@b^0,0,c
 13735   002B74  EFBE  F015         	goto	u3251
 13736   002B78  EFC0  F015         	goto	u3250
 13737   002B7C                     u3251:
 13738   002B7C  EFC1  F015         	goto	l4013
 13739   002B80                     u3250:
 13740   002B80  8E10               	bsf	___fladd@grs^0,7,c
 13741   002B82                     l4013:
 13742   002B82  3404               	rlcf	(___fladd@b+3)^0,w,c
 13743   002B84  3204               	rrcf	(___fladd@b+3)^0,f,c
 13744   002B86  3203               	rrcf	(___fladd@b+2)^0,f,c
 13745   002B88  3202               	rrcf	(___fladd@b+1)^0,f,c
 13746   002B8A  3201               	rrcf	___fladd@b^0,f,c
 13747   002B8C  2A0F               	incf	___fladd@bexp^0,f,c
 13748   002B8E  EF56  F016         	goto	l4053
 13749   002B92                     l4017:
 13750   002B92  5005               	movf	___fladd@a^0,w,c
 13751   002B94  5C01               	subwf	___fladd@b^0,w,c
 13752   002B96  5006               	movf	(___fladd@a+1)^0,w,c
 13753   002B98  5802               	subwfb	(___fladd@b+1)^0,w,c
 13754   002B9A  5007               	movf	(___fladd@a+2)^0,w,c
 13755   002B9C  5803               	subwfb	(___fladd@b+2)^0,w,c
 13756   002B9E  5004               	movf	(___fladd@b+3)^0,w,c
 13757   002BA0  0A80               	xorlw	128
 13758   002BA2  6E09               	movwf	??___fladd^0,c
 13759   002BA4  5008               	movf	(___fladd@a+3)^0,w,c
 13760   002BA6  0A80               	xorlw	128
 13761   002BA8  5809               	subwfb	??___fladd^0,w,c
 13762   002BAA  B0D8               	btfsc	status,0,c
 13763   002BAC  EFDA  F015         	goto	u3261
 13764   002BB0  EFDC  F015         	goto	u3260
 13765   002BB4                     u3261:
 13766   002BB4  EF07  F016         	goto	l4027
 13767   002BB8                     u3260:
 13768   002BB8  5001               	movf	___fladd@b^0,w,c
 13769   002BBA  5C05               	subwf	___fladd@a^0,w,c
 13770   002BBC  6E09               	movwf	??___fladd^0,c
 13771   002BBE  5002               	movf	(___fladd@b+1)^0,w,c
 13772   002BC0  5806               	subwfb	(___fladd@a+1)^0,w,c
 13773   002BC2  6E0A               	movwf	(??___fladd+1)^0,c
 13774   002BC4  5003               	movf	(___fladd@b+2)^0,w,c
 13775   002BC6  5807               	subwfb	(___fladd@a+2)^0,w,c
 13776   002BC8  6E0B               	movwf	(??___fladd+2)^0,c
 13777   002BCA  5004               	movf	(___fladd@b+3)^0,w,c
 13778   002BCC  5808               	subwfb	(___fladd@a+3)^0,w,c
 13779   002BCE  6E0C               	movwf	(??___fladd+3)^0,c
 13780   002BD0  0EFF               	movlw	255
 13781   002BD2  2409               	addwf	??___fladd^0,w,c
 13782   002BD4  6E01               	movwf	___fladd@b^0,c
 13783   002BD6  0EFF               	movlw	255
 13784   002BD8  200A               	addwfc	(??___fladd+1)^0,w,c
 13785   002BDA  6E02               	movwf	(___fladd@b+1)^0,c
 13786   002BDC  0EFF               	movlw	255
 13787   002BDE  200B               	addwfc	(??___fladd+2)^0,w,c
 13788   002BE0  6E03               	movwf	(___fladd@b+2)^0,c
 13789   002BE2  0EFF               	movlw	255
 13790   002BE4  200C               	addwfc	(??___fladd+3)^0,w,c
 13791   002BE6  6E04               	movwf	(___fladd@b+3)^0,c
 13792   002BE8  0E80               	movlw	128
 13793   002BEA  1A0D               	xorwf	___fladd@signs^0,f,c
 13794   002BEC  6C10               	negf	___fladd@grs^0,c
 13795   002BEE  5010               	movf	___fladd@grs^0,w,c
 13796   002BF0  A4D8               	btfss	status,2,c
 13797   002BF2  EFFD  F015         	goto	u3271
 13798   002BF6  EFFF  F015         	goto	u3270
 13799   002BFA                     u3271:
 13800   002BFA  EF0F  F016         	goto	l1245
 13801   002BFE                     u3270:
 13802   002BFE  0E01               	movlw	1
 13803   002C00  2601               	addwf	___fladd@b^0,f,c
 13804   002C02  0E00               	movlw	0
 13805   002C04  2202               	addwfc	(___fladd@b+1)^0,f,c
 13806   002C06  2203               	addwfc	(___fladd@b+2)^0,f,c
 13807   002C08  2204               	addwfc	(___fladd@b+3)^0,f,c
 13808   002C0A  EF0F  F016         	goto	l1245
 13809   002C0E                     l4027:
 13810   002C0E  5005               	movf	___fladd@a^0,w,c
 13811   002C10  5E01               	subwf	___fladd@b^0,f,c
 13812   002C12  5006               	movf	(___fladd@a+1)^0,w,c
 13813   002C14  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13814   002C16  5007               	movf	(___fladd@a+2)^0,w,c
 13815   002C18  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13816   002C1A  5008               	movf	(___fladd@a+3)^0,w,c
 13817   002C1C  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13818   002C1E                     l1245:
 13819   002C1E  5001               	movf	___fladd@b^0,w,c
 13820   002C20  1002               	iorwf	(___fladd@b+1)^0,w,c
 13821   002C22  1003               	iorwf	(___fladd@b+2)^0,w,c
 13822   002C24  1004               	iorwf	(___fladd@b+3)^0,w,c
 13823   002C26  A4D8               	btfss	status,2,c
 13824   002C28  EF18  F016         	goto	u3281
 13825   002C2C  EF1A  F016         	goto	u3280
 13826   002C30                     u3281:
 13827   002C30  EF4F  F016         	goto	l4051
 13828   002C34                     u3280:
 13829   002C34  5010               	movf	___fladd@grs^0,w,c
 13830   002C36  A4D8               	btfss	status,2,c
 13831   002C38  EF20  F016         	goto	u3291
 13832   002C3C  EF22  F016         	goto	u3290
 13833   002C40                     u3291:
 13834   002C40  EF4F  F016         	goto	l4051
 13835   002C44                     u3290:
 13836   002C44  0E00               	movlw	0
 13837   002C46  6E01               	movwf	?___fladd^0,c
 13838   002C48  0E00               	movlw	0
 13839   002C4A  6E02               	movwf	(?___fladd+1)^0,c
 13840   002C4C  0E00               	movlw	0
 13841   002C4E  6E03               	movwf	(?___fladd+2)^0,c
 13842   002C50  0E00               	movlw	0
 13843   002C52  6E04               	movwf	(?___fladd+3)^0,c
 13844   002C54  EFEA  F016         	goto	l1237
 13845   002C58                     l4035:
 13846   002C58  90D8               	bcf	status,0,c
 13847   002C5A  3601               	rlcf	___fladd@b^0,f,c
 13848   002C5C  3602               	rlcf	(___fladd@b+1)^0,f,c
 13849   002C5E  3603               	rlcf	(___fladd@b+2)^0,f,c
 13850   002C60  3604               	rlcf	(___fladd@b+3)^0,f,c
 13851   002C62  AE10               	btfss	___fladd@grs^0,7,c
 13852   002C64  EF36  F016         	goto	u3301
 13853   002C68  EF38  F016         	goto	u3300
 13854   002C6C                     u3301:
 13855   002C6C  EF39  F016         	goto	l4041
 13856   002C70                     u3300:
 13857   002C70  8001               	bsf	___fladd@b^0,0,c
 13858   002C72                     l4041:
 13859   002C72  A010               	btfss	___fladd@grs^0,0,c
 13860   002C74  EF3E  F016         	goto	u3311
 13861   002C78  EF40  F016         	goto	u3310
 13862   002C7C                     u3311:
 13863   002C7C  EF44  F016         	goto	l4045
 13864   002C80                     u3310:
 13865   002C80  80D8               	bsf	status,0,c
 13866   002C82  3610               	rlcf	___fladd@grs^0,f,c
 13867   002C84  EF46  F016         	goto	l4047
 13868   002C88                     l4045:
 13869   002C88  90D8               	bcf	status,0,c
 13870   002C8A  3610               	rlcf	___fladd@grs^0,f,c
 13871   002C8C                     l4047:
 13872   002C8C  500F               	movf	___fladd@bexp^0,w,c
 13873   002C8E  B4D8               	btfsc	status,2,c
 13874   002C90  EF4C  F016         	goto	u3321
 13875   002C94  EF4E  F016         	goto	u3320
 13876   002C98                     u3321:
 13877   002C98  EF4F  F016         	goto	l4051
 13878   002C9C                     u3320:
 13879   002C9C  060F               	decf	___fladd@bexp^0,f,c
 13880   002C9E                     l4051:
 13881   002C9E  AE03               	btfss	(___fladd@b+2)^0,7,c
 13882   002CA0  EF54  F016         	goto	u3331
 13883   002CA4  EF56  F016         	goto	u3330
 13884   002CA8                     u3331:
 13885   002CA8  EF2C  F016         	goto	l4035
 13886   002CAC                     u3330:
 13887   002CAC                     l4053:
 13888   002CAC  0E00               	movlw	0
 13889   002CAE  6E0E               	movwf	___fladd@aexp^0,c
 13890   002CB0  AE10               	btfss	___fladd@grs^0,7,c
 13891   002CB2  EF5D  F016         	goto	u3341
 13892   002CB6  EF5F  F016         	goto	u3340
 13893   002CBA                     u3341:
 13894   002CBA  EF77  F016         	goto	l1254
 13895   002CBE                     u3340:
 13896   002CBE  C010  F009         	movff	___fladd@grs,??___fladd
 13897   002CC2  0E7F               	movlw	127
 13898   002CC4  1609               	andwf	??___fladd^0,f,c
 13899   002CC6  B4D8               	btfsc	status,2,c
 13900   002CC8  EF68  F016         	goto	u3351
 13901   002CCC  EF6A  F016         	goto	u3350
 13902   002CD0                     u3351:
 13903   002CD0  EF6E  F016         	goto	l1255
 13904   002CD4                     u3350:
 13905   002CD4                     l4059:
 13906   002CD4  0E01               	movlw	1
 13907   002CD6  6E0E               	movwf	___fladd@aexp^0,c
 13908   002CD8  EF77  F016         	goto	l1254
 13909   002CDC                     l1255:
 13910   002CDC  A001               	btfss	___fladd@b^0,0,c
 13911   002CDE  EF73  F016         	goto	u3361
 13912   002CE2  EF75  F016         	goto	u3360
 13913   002CE6                     u3361:
 13914   002CE6  EF77  F016         	goto	l1254
 13915   002CEA                     u3360:
 13916   002CEA  EF6A  F016         	goto	l4059
 13917   002CEE                     l1254:
 13918   002CEE  500E               	movf	___fladd@aexp^0,w,c
 13919   002CF0  B4D8               	btfsc	status,2,c
 13920   002CF2  EF7D  F016         	goto	u3371
 13921   002CF6  EF7F  F016         	goto	u3370
 13922   002CFA                     u3371:
 13923   002CFA  EFAA  F016         	goto	l4071
 13924   002CFE                     u3370:
 13925   002CFE  0E01               	movlw	1
 13926   002D00  2601               	addwf	___fladd@b^0,f,c
 13927   002D02  0E00               	movlw	0
 13928   002D04  2202               	addwfc	(___fladd@b+1)^0,f,c
 13929   002D06  2203               	addwfc	(___fladd@b+2)^0,f,c
 13930   002D08  2204               	addwfc	(___fladd@b+3)^0,f,c
 13931   002D0A  A004               	btfss	(___fladd@b+3)^0,0,c
 13932   002D0C  EF8A  F016         	goto	u3381
 13933   002D10  EF8C  F016         	goto	u3380
 13934   002D14                     u3381:
 13935   002D14  EFAA  F016         	goto	l4071
 13936   002D18                     u3380:
 13937   002D18  C001  F009         	movff	___fladd@b,??___fladd
 13938   002D1C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 13939   002D20  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 13940   002D24  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 13941   002D28  340C               	rlcf	(??___fladd+3)^0,w,c
 13942   002D2A  320C               	rrcf	(??___fladd+3)^0,f,c
 13943   002D2C  320B               	rrcf	(??___fladd+2)^0,f,c
 13944   002D2E  320A               	rrcf	(??___fladd+1)^0,f,c
 13945   002D30  3209               	rrcf	??___fladd^0,f,c
 13946   002D32  C009  F001         	movff	??___fladd,___fladd@b
 13947   002D36  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 13948   002D3A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 13949   002D3E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 13950   002D42  280F               	incf	___fladd@bexp^0,w,c
 13951   002D44  B4D8               	btfsc	status,2,c
 13952   002D46  EFA7  F016         	goto	u3391
 13953   002D4A  EFA9  F016         	goto	u3390
 13954   002D4E                     u3391:
 13955   002D4E  EFAA  F016         	goto	l4071
 13956   002D52                     u3390:
 13957   002D52  2A0F               	incf	___fladd@bexp^0,f,c
 13958   002D54                     l4071:
 13959   002D54  280F               	incf	___fladd@bexp^0,w,c
 13960   002D56  B4D8               	btfsc	status,2,c
 13961   002D58  EFB0  F016         	goto	u3401
 13962   002D5C  EFB2  F016         	goto	u3400
 13963   002D60                     u3401:
 13964   002D60  EFBA  F016         	goto	l4075
 13965   002D64                     u3400:
 13966   002D64  500F               	movf	___fladd@bexp^0,w,c
 13967   002D66  A4D8               	btfss	status,2,c
 13968   002D68  EFB8  F016         	goto	u3411
 13969   002D6C  EFBA  F016         	goto	u3410
 13970   002D70                     u3411:
 13971   002D70  EFCC  F016         	goto	l4079
 13972   002D74                     u3410:
 13973   002D74                     l4075:
 13974   002D74  0E00               	movlw	0
 13975   002D76  6E01               	movwf	___fladd@b^0,c
 13976   002D78  0E00               	movlw	0
 13977   002D7A  6E02               	movwf	(___fladd@b+1)^0,c
 13978   002D7C  0E00               	movlw	0
 13979   002D7E  6E03               	movwf	(___fladd@b+2)^0,c
 13980   002D80  0E00               	movlw	0
 13981   002D82  6E04               	movwf	(___fladd@b+3)^0,c
 13982   002D84  500F               	movf	___fladd@bexp^0,w,c
 13983   002D86  A4D8               	btfss	status,2,c
 13984   002D88  EFC8  F016         	goto	u3421
 13985   002D8C  EFCA  F016         	goto	u3420
 13986   002D90                     u3421:
 13987   002D90  EFCC  F016         	goto	l4079
 13988   002D94                     u3420:
 13989   002D94  0E00               	movlw	0
 13990   002D96  6E0D               	movwf	___fladd@signs^0,c
 13991   002D98                     l4079:
 13992   002D98  A00F               	btfss	___fladd@bexp^0,0,c
 13993   002D9A  EFD1  F016         	goto	u3431
 13994   002D9E  EFD3  F016         	goto	u3430
 13995   002DA2                     u3431:
 13996   002DA2  EFD6  F016         	goto	l4083
 13997   002DA6                     u3430:
 13998   002DA6  8E03               	bsf	(___fladd@b+2)^0,7,c
 13999   002DA8  EFD7  F016         	goto	l4085
 14000   002DAC                     l4083:
 14001   002DAC  9E03               	bcf	(___fladd@b+2)^0,7,c
 14002   002DAE                     l4085:
 14003   002DAE  90D8               	bcf	status,0,c
 14004   002DB0  300F               	rrcf	___fladd@bexp^0,w,c
 14005   002DB2  6E04               	movwf	(___fladd@b+3)^0,c
 14006   002DB4  AE0D               	btfss	___fladd@signs^0,7,c
 14007   002DB6  EFDF  F016         	goto	u3441
 14008   002DBA  EFE1  F016         	goto	u3440
 14009   002DBE                     u3441:
 14010   002DBE  EFE2  F016         	goto	l4091
 14011   002DC2                     u3440:
 14012   002DC2  8E04               	bsf	(___fladd@b+3)^0,7,c
 14013   002DC4                     l4091:
 14014   002DC4  C001  F001         	movff	___fladd@b,?___fladd
 14015   002DC8  C002  F002         	movff	___fladd@b+1,?___fladd+1
 14016   002DCC  C003  F003         	movff	___fladd@b+2,?___fladd+2
 14017   002DD0  C004  F004         	movff	___fladd@b+3,?___fladd+3
 14018   002DD4                     l1237:
 14019   002DD4  0012               	return		;funcret
 14020   002DD6                     __end_of___fladd:
 14021                           	callstack 0
 14022                           
 14023 ;; *************** function ___flmul *****************
 14024 ;; Defined at:
 14025 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 14026 ;; Parameters:    Size  Location     Type
 14027 ;;  b               4   16[COMRAM] unsigned char 
 14028 ;;  a               4   20[COMRAM] unsigned char 
 14029 ;; Auto vars:     Size  Location     Type
 14030 ;;  prod            4   35[COMRAM] struct .
 14031 ;;  grs             4   29[COMRAM] unsigned long 
 14032 ;;  temp            2   39[COMRAM] struct .
 14033 ;;  bexp            1   34[COMRAM] unsigned char 
 14034 ;;  aexp            1   33[COMRAM] unsigned char 
 14035 ;;  sign            1   28[COMRAM] unsigned char 
 14036 ;; Return value:  Size  Location     Type
 14037 ;;                  4   16[COMRAM] unsigned char 
 14038 ;; Registers used:
 14039 ;;		wreg, status,2, status,0, prodl, prodh
 14040 ;; Tracked objects:
 14041 ;;		On entry : 0/0
 14042 ;;		On exit  : 0/0
 14043 ;;		Unchanged: 0/0
 14044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14045 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14046 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14047 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14048 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14049 ;;Total ram usage:       25 bytes
 14050 ;; Hardware stack levels used: 1
 14051 ;; This function calls:
 14052 ;;		Nothing
 14053 ;; This function is called by:
 14054 ;;		_Colour_decider
 14055 ;;		_reverseOneBlock
 14056 ;;		_ForwardOneBlock
 14057 ;;		_Forwardhalfblock
 14058 ;;		_efgtoa
 14059 ;;		_Backhalfblock
 14060 ;; This function uses a non-reentrant model
 14061 ;;
 14062                           
 14063                           	psect	text75
 14064   002DD6                     __ptext75:
 14065                           	callstack 0
 14066   002DD6                     ___flmul:
 14067                           	callstack 26
 14068   002DD6  5014               	movf	(___flmul@b+3)^0,w,c
 14069   002DD8  0B80               	andlw	128
 14070   002DDA  6E1D               	movwf	___flmul@sign^0,c
 14071   002DDC  5014               	movf	(___flmul@b+3)^0,w,c
 14072   002DDE  2414               	addwf	(___flmul@b+3)^0,w,c
 14073   002DE0  6E23               	movwf	___flmul@bexp^0,c
 14074   002DE2  AE13               	btfss	(___flmul@b+2)^0,7,c
 14075   002DE4  EFF6  F016         	goto	u3871
 14076   002DE8  EFF8  F016         	goto	u3870
 14077   002DEC                     u3871:
 14078   002DEC  EFF9  F016         	goto	l4365
 14079   002DF0                     u3870:
 14080   002DF0  8023               	bsf	___flmul@bexp^0,0,c
 14081   002DF2                     l4365:
 14082   002DF2  5023               	movf	___flmul@bexp^0,w,c
 14083   002DF4  B4D8               	btfsc	status,2,c
 14084   002DF6  EFFF  F016         	goto	u3881
 14085   002DFA  EF01  F017         	goto	u3880
 14086   002DFE                     u3881:
 14087   002DFE  EF14  F017         	goto	l4373
 14088   002E02                     u3880:
 14089   002E02  2823               	incf	___flmul@bexp^0,w,c
 14090   002E04  A4D8               	btfss	status,2,c
 14091   002E06  EF07  F017         	goto	u3891
 14092   002E0A  EF09  F017         	goto	u3890
 14093   002E0E                     u3891:
 14094   002E0E  EF11  F017         	goto	l4371
 14095   002E12                     u3890:
 14096   002E12  0E00               	movlw	0
 14097   002E14  6E11               	movwf	___flmul@b^0,c
 14098   002E16  0E00               	movlw	0
 14099   002E18  6E12               	movwf	(___flmul@b+1)^0,c
 14100   002E1A  0E00               	movlw	0
 14101   002E1C  6E13               	movwf	(___flmul@b+2)^0,c
 14102   002E1E  0E00               	movlw	0
 14103   002E20  6E14               	movwf	(___flmul@b+3)^0,c
 14104   002E22                     l4371:
 14105   002E22  8E13               	bsf	(___flmul@b+2)^0,7,c
 14106   002E24  EF1C  F017         	goto	l4375
 14107   002E28                     l4373:
 14108   002E28  0E00               	movlw	0
 14109   002E2A  6E11               	movwf	___flmul@b^0,c
 14110   002E2C  0E00               	movlw	0
 14111   002E2E  6E12               	movwf	(___flmul@b+1)^0,c
 14112   002E30  0E00               	movlw	0
 14113   002E32  6E13               	movwf	(___flmul@b+2)^0,c
 14114   002E34  0E00               	movlw	0
 14115   002E36  6E14               	movwf	(___flmul@b+3)^0,c
 14116   002E38                     l4375:
 14117   002E38  5018               	movf	(___flmul@a+3)^0,w,c
 14118   002E3A  0B80               	andlw	128
 14119   002E3C  1A1D               	xorwf	___flmul@sign^0,f,c
 14120   002E3E  5018               	movf	(___flmul@a+3)^0,w,c
 14121   002E40  2418               	addwf	(___flmul@a+3)^0,w,c
 14122   002E42  6E22               	movwf	___flmul@aexp^0,c
 14123   002E44  AE17               	btfss	(___flmul@a+2)^0,7,c
 14124   002E46  EF27  F017         	goto	u3901
 14125   002E4A  EF29  F017         	goto	u3900
 14126   002E4E                     u3901:
 14127   002E4E  EF2A  F017         	goto	l4383
 14128   002E52                     u3900:
 14129   002E52  8022               	bsf	___flmul@aexp^0,0,c
 14130   002E54                     l4383:
 14131   002E54  5022               	movf	___flmul@aexp^0,w,c
 14132   002E56  B4D8               	btfsc	status,2,c
 14133   002E58  EF30  F017         	goto	u3911
 14134   002E5C  EF32  F017         	goto	u3910
 14135   002E60                     u3911:
 14136   002E60  EF45  F017         	goto	l4391
 14137   002E64                     u3910:
 14138   002E64  2822               	incf	___flmul@aexp^0,w,c
 14139   002E66  A4D8               	btfss	status,2,c
 14140   002E68  EF38  F017         	goto	u3921
 14141   002E6C  EF3A  F017         	goto	u3920
 14142   002E70                     u3921:
 14143   002E70  EF42  F017         	goto	l4389
 14144   002E74                     u3920:
 14145   002E74  0E00               	movlw	0
 14146   002E76  6E15               	movwf	___flmul@a^0,c
 14147   002E78  0E00               	movlw	0
 14148   002E7A  6E16               	movwf	(___flmul@a+1)^0,c
 14149   002E7C  0E00               	movlw	0
 14150   002E7E  6E17               	movwf	(___flmul@a+2)^0,c
 14151   002E80  0E00               	movlw	0
 14152   002E82  6E18               	movwf	(___flmul@a+3)^0,c
 14153   002E84                     l4389:
 14154   002E84  8E17               	bsf	(___flmul@a+2)^0,7,c
 14155   002E86  EF4D  F017         	goto	l1314
 14156   002E8A                     l4391:
 14157   002E8A  0E00               	movlw	0
 14158   002E8C  6E15               	movwf	___flmul@a^0,c
 14159   002E8E  0E00               	movlw	0
 14160   002E90  6E16               	movwf	(___flmul@a+1)^0,c
 14161   002E92  0E00               	movlw	0
 14162   002E94  6E17               	movwf	(___flmul@a+2)^0,c
 14163   002E96  0E00               	movlw	0
 14164   002E98  6E18               	movwf	(___flmul@a+3)^0,c
 14165   002E9A                     l1314:
 14166   002E9A  5022               	movf	___flmul@aexp^0,w,c
 14167   002E9C  B4D8               	btfsc	status,2,c
 14168   002E9E  EF53  F017         	goto	u3931
 14169   002EA2  EF55  F017         	goto	u3930
 14170   002EA6                     u3931:
 14171   002EA6  EF5D  F017         	goto	l4395
 14172   002EAA                     u3930:
 14173   002EAA  5023               	movf	___flmul@bexp^0,w,c
 14174   002EAC  A4D8               	btfss	status,2,c
 14175   002EAE  EF5B  F017         	goto	u3941
 14176   002EB2  EF5D  F017         	goto	u3940
 14177   002EB6                     u3941:
 14178   002EB6  EF67  F017         	goto	l4399
 14179   002EBA                     u3940:
 14180   002EBA                     l4395:
 14181   002EBA  0E00               	movlw	0
 14182   002EBC  6E11               	movwf	?___flmul^0,c
 14183   002EBE  0E00               	movlw	0
 14184   002EC0  6E12               	movwf	(?___flmul+1)^0,c
 14185   002EC2  0E00               	movlw	0
 14186   002EC4  6E13               	movwf	(?___flmul+2)^0,c
 14187   002EC6  0E00               	movlw	0
 14188   002EC8  6E14               	movwf	(?___flmul+3)^0,c
 14189   002ECA  EFFF  F018         	goto	l1318
 14190   002ECE                     l4399:
 14191   002ECE  5017               	movf	(___flmul@a+2)^0,w,c
 14192   002ED0  0211               	mulwf	___flmul@b^0,c
 14193   002ED2  CFF3 F028          	movff	prodl,___flmul@temp
 14194   002ED6  CFF4 F029          	movff	prodh,___flmul@temp+1
 14195   002EDA  5028               	movf	___flmul@temp^0,w,c
 14196   002EDC  6E1E               	movwf	___flmul@grs^0,c
 14197   002EDE  6A1F               	clrf	(___flmul@grs+1)^0,c
 14198   002EE0  6A20               	clrf	(___flmul@grs+2)^0,c
 14199   002EE2  6A21               	clrf	(___flmul@grs+3)^0,c
 14200   002EE4  5029               	movf	(___flmul@temp+1)^0,w,c
 14201   002EE6  6E24               	movwf	___flmul@prod^0,c
 14202   002EE8  6A25               	clrf	(___flmul@prod+1)^0,c
 14203   002EEA  6A26               	clrf	(___flmul@prod+2)^0,c
 14204   002EEC  6A27               	clrf	(___flmul@prod+3)^0,c
 14205   002EEE  5016               	movf	(___flmul@a+1)^0,w,c
 14206   002EF0  0212               	mulwf	(___flmul@b+1)^0,c
 14207   002EF2  CFF3 F028          	movff	prodl,___flmul@temp
 14208   002EF6  CFF4 F029          	movff	prodh,___flmul@temp+1
 14209   002EFA  5028               	movf	___flmul@temp^0,w,c
 14210   002EFC  261E               	addwf	___flmul@grs^0,f,c
 14211   002EFE  0E00               	movlw	0
 14212   002F00  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14213   002F02  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14214   002F04  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14215   002F06  5029               	movf	(___flmul@temp+1)^0,w,c
 14216   002F08  2624               	addwf	___flmul@prod^0,f,c
 14217   002F0A  0E00               	movlw	0
 14218   002F0C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14219   002F0E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14220   002F10  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14221   002F12  5015               	movf	___flmul@a^0,w,c
 14222   002F14  0213               	mulwf	(___flmul@b+2)^0,c
 14223   002F16  CFF3 F028          	movff	prodl,___flmul@temp
 14224   002F1A  CFF4 F029          	movff	prodh,___flmul@temp+1
 14225   002F1E  5028               	movf	___flmul@temp^0,w,c
 14226   002F20  261E               	addwf	___flmul@grs^0,f,c
 14227   002F22  0E00               	movlw	0
 14228   002F24  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14229   002F26  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14230   002F28  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14231   002F2A  5029               	movf	(___flmul@temp+1)^0,w,c
 14232   002F2C  2624               	addwf	___flmul@prod^0,f,c
 14233   002F2E  0E00               	movlw	0
 14234   002F30  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14235   002F32  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14236   002F34  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14237   002F36  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14238   002F3A  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14239   002F3E  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14240   002F42  6A1E               	clrf	___flmul@grs^0,c
 14241   002F44  5015               	movf	___flmul@a^0,w,c
 14242   002F46  0212               	mulwf	(___flmul@b+1)^0,c
 14243   002F48  CFF3 F028          	movff	prodl,___flmul@temp
 14244   002F4C  CFF4 F029          	movff	prodh,___flmul@temp+1
 14245   002F50  5028               	movf	___flmul@temp^0,w,c
 14246   002F52  261E               	addwf	___flmul@grs^0,f,c
 14247   002F54  5029               	movf	(___flmul@temp+1)^0,w,c
 14248   002F56  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14249   002F58  0E00               	movlw	0
 14250   002F5A  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14251   002F5C  0E00               	movlw	0
 14252   002F5E  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14253   002F60  5016               	movf	(___flmul@a+1)^0,w,c
 14254   002F62  0211               	mulwf	___flmul@b^0,c
 14255   002F64  CFF3 F028          	movff	prodl,___flmul@temp
 14256   002F68  CFF4 F029          	movff	prodh,___flmul@temp+1
 14257   002F6C  5028               	movf	___flmul@temp^0,w,c
 14258   002F6E  261E               	addwf	___flmul@grs^0,f,c
 14259   002F70  5029               	movf	(___flmul@temp+1)^0,w,c
 14260   002F72  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14261   002F74  0E00               	movlw	0
 14262   002F76  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14263   002F78  0E00               	movlw	0
 14264   002F7A  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14265   002F7C  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14266   002F80  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14267   002F84  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14268   002F88  6A1E               	clrf	___flmul@grs^0,c
 14269   002F8A  5015               	movf	___flmul@a^0,w,c
 14270   002F8C  0211               	mulwf	___flmul@b^0,c
 14271   002F8E  CFF3 F028          	movff	prodl,___flmul@temp
 14272   002F92  CFF4 F029          	movff	prodh,___flmul@temp+1
 14273   002F96  5028               	movf	___flmul@temp^0,w,c
 14274   002F98  261E               	addwf	___flmul@grs^0,f,c
 14275   002F9A  5029               	movf	(___flmul@temp+1)^0,w,c
 14276   002F9C  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14277   002F9E  0E00               	movlw	0
 14278   002FA0  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14279   002FA2  0E00               	movlw	0
 14280   002FA4  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14281   002FA6  5017               	movf	(___flmul@a+2)^0,w,c
 14282   002FA8  0212               	mulwf	(___flmul@b+1)^0,c
 14283   002FAA  CFF3 F028          	movff	prodl,___flmul@temp
 14284   002FAE  CFF4 F029          	movff	prodh,___flmul@temp+1
 14285   002FB2  5028               	movf	___flmul@temp^0,w,c
 14286   002FB4  2624               	addwf	___flmul@prod^0,f,c
 14287   002FB6  5029               	movf	(___flmul@temp+1)^0,w,c
 14288   002FB8  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14289   002FBA  0E00               	movlw	0
 14290   002FBC  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14291   002FBE  0E00               	movlw	0
 14292   002FC0  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14293   002FC2  5016               	movf	(___flmul@a+1)^0,w,c
 14294   002FC4  0213               	mulwf	(___flmul@b+2)^0,c
 14295   002FC6  CFF3 F028          	movff	prodl,___flmul@temp
 14296   002FCA  CFF4 F029          	movff	prodh,___flmul@temp+1
 14297   002FCE  5028               	movf	___flmul@temp^0,w,c
 14298   002FD0  2624               	addwf	___flmul@prod^0,f,c
 14299   002FD2  5029               	movf	(___flmul@temp+1)^0,w,c
 14300   002FD4  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14301   002FD6  0E00               	movlw	0
 14302   002FD8  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14303   002FDA  0E00               	movlw	0
 14304   002FDC  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14305   002FDE  5017               	movf	(___flmul@a+2)^0,w,c
 14306   002FE0  0213               	mulwf	(___flmul@b+2)^0,c
 14307   002FE2  CFF3 F028          	movff	prodl,___flmul@temp
 14308   002FE6  CFF4 F029          	movff	prodh,___flmul@temp+1
 14309   002FEA  5028               	movf	___flmul@temp^0,w,c
 14310   002FEC  6E19               	movwf	??___flmul^0,c
 14311   002FEE  5029               	movf	(___flmul@temp+1)^0,w,c
 14312   002FF0  6E1A               	movwf	(??___flmul+1)^0,c
 14313   002FF2  6A1B               	clrf	(??___flmul+2)^0,c
 14314   002FF4  6A1C               	clrf	(??___flmul+3)^0,c
 14315   002FF6  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14316   002FFA  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14317   002FFE  C019  F01A         	movff	??___flmul,??___flmul+1
 14318   003002  6A19               	clrf	??___flmul^0,c
 14319   003004  5019               	movf	??___flmul^0,w,c
 14320   003006  2624               	addwf	___flmul@prod^0,f,c
 14321   003008  501A               	movf	(??___flmul+1)^0,w,c
 14322   00300A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14323   00300C  501B               	movf	(??___flmul+2)^0,w,c
 14324   00300E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14325   003010  501C               	movf	(??___flmul+3)^0,w,c
 14326   003012  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14327   003014  C01E  F019         	movff	___flmul@grs,??___flmul
 14328   003018  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14329   00301C  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14330   003020  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14331   003024  0E19               	movlw	25
 14332   003026  EF1A  F018         	goto	u3950
 14333   00302A                     u3955:
 14334   00302A  90D8               	bcf	status,0,c
 14335   00302C  321C               	rrcf	(??___flmul+3)^0,f,c
 14336   00302E  321B               	rrcf	(??___flmul+2)^0,f,c
 14337   003030  321A               	rrcf	(??___flmul+1)^0,f,c
 14338   003032  3219               	rrcf	??___flmul^0,f,c
 14339   003034                     u3950:
 14340   003034  2EE8               	decfsz	wreg,f,c
 14341   003036  EF15  F018         	goto	u3955
 14342   00303A  5019               	movf	??___flmul^0,w,c
 14343   00303C  2624               	addwf	___flmul@prod^0,f,c
 14344   00303E  501A               	movf	(??___flmul+1)^0,w,c
 14345   003040  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14346   003042  501B               	movf	(??___flmul+2)^0,w,c
 14347   003044  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14348   003046  501C               	movf	(??___flmul+3)^0,w,c
 14349   003048  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14350   00304A  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14351   00304E  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14352   003052  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14353   003056  6A1E               	clrf	___flmul@grs^0,c
 14354   003058  5022               	movf	___flmul@aexp^0,w,c
 14355   00305A  C023  F019         	movff	___flmul@bexp,??___flmul
 14356   00305E  6A1A               	clrf	(??___flmul+1)^0,c
 14357   003060  2619               	addwf	??___flmul^0,f,c
 14358   003062  0E00               	movlw	0
 14359   003064  221A               	addwfc	(??___flmul+1)^0,f,c
 14360   003066  0E82               	movlw	130
 14361   003068  2419               	addwf	??___flmul^0,w,c
 14362   00306A  6E28               	movwf	___flmul@temp^0,c
 14363   00306C  0EFF               	movlw	255
 14364   00306E  201A               	addwfc	(??___flmul+1)^0,w,c
 14365   003070  6E29               	movwf	(___flmul@temp+1)^0,c
 14366   003072  EF50  F018         	goto	l4447
 14367   003076                     l4441:
 14368   003076  90D8               	bcf	status,0,c
 14369   003078  3624               	rlcf	___flmul@prod^0,f,c
 14370   00307A  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14371   00307C  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14372   00307E  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14373   003080  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14374   003082  EF45  F018         	goto	u3961
 14375   003086  EF47  F018         	goto	u3960
 14376   00308A                     u3961:
 14377   00308A  EF48  F018         	goto	l1321
 14378   00308E                     u3960:
 14379   00308E  8024               	bsf	___flmul@prod^0,0,c
 14380   003090                     l1321:
 14381   003090  90D8               	bcf	status,0,c
 14382   003092  361E               	rlcf	___flmul@grs^0,f,c
 14383   003094  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14384   003096  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14385   003098  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14386   00309A  0628               	decf	___flmul@temp^0,f,c
 14387   00309C  A0D8               	btfss	status,0,c
 14388   00309E  0629               	decf	(___flmul@temp+1)^0,f,c
 14389   0030A0                     l4447:
 14390   0030A0  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14391   0030A2  EF55  F018         	goto	u3971
 14392   0030A6  EF57  F018         	goto	u3970
 14393   0030AA                     u3971:
 14394   0030AA  EF3B  F018         	goto	l4441
 14395   0030AE                     u3970:
 14396   0030AE  0E00               	movlw	0
 14397   0030B0  6E22               	movwf	___flmul@aexp^0,c
 14398   0030B2  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14399   0030B4  EF5E  F018         	goto	u3981
 14400   0030B8  EF60  F018         	goto	u3980
 14401   0030BC                     u3981:
 14402   0030BC  EF84  F018         	goto	l1323
 14403   0030C0                     u3980:
 14404   0030C0  0EFF               	movlw	255
 14405   0030C2  141E               	andwf	___flmul@grs^0,w,c
 14406   0030C4  6E19               	movwf	??___flmul^0,c
 14407   0030C6  0EFF               	movlw	255
 14408   0030C8  141F               	andwf	(___flmul@grs+1)^0,w,c
 14409   0030CA  6E1A               	movwf	(??___flmul+1)^0,c
 14410   0030CC  0EFF               	movlw	255
 14411   0030CE  1420               	andwf	(___flmul@grs+2)^0,w,c
 14412   0030D0  6E1B               	movwf	(??___flmul+2)^0,c
 14413   0030D2  0E7F               	movlw	127
 14414   0030D4  1421               	andwf	(___flmul@grs+3)^0,w,c
 14415   0030D6  6E1C               	movwf	(??___flmul+3)^0,c
 14416   0030D8  5019               	movf	??___flmul^0,w,c
 14417   0030DA  101A               	iorwf	(??___flmul+1)^0,w,c
 14418   0030DC  101B               	iorwf	(??___flmul+2)^0,w,c
 14419   0030DE  101C               	iorwf	(??___flmul+3)^0,w,c
 14420   0030E0  B4D8               	btfsc	status,2,c
 14421   0030E2  EF75  F018         	goto	u3991
 14422   0030E6  EF77  F018         	goto	u3990
 14423   0030EA                     u3991:
 14424   0030EA  EF7B  F018         	goto	l1324
 14425   0030EE                     u3990:
 14426   0030EE                     l4455:
 14427   0030EE  0E01               	movlw	1
 14428   0030F0  6E22               	movwf	___flmul@aexp^0,c
 14429   0030F2  EF84  F018         	goto	l1323
 14430   0030F6                     l1324:
 14431   0030F6  A024               	btfss	___flmul@prod^0,0,c
 14432   0030F8  EF80  F018         	goto	u4001
 14433   0030FC  EF82  F018         	goto	u4000
 14434   003100                     u4001:
 14435   003100  EF84  F018         	goto	l1323
 14436   003104                     u4000:
 14437   003104  EF77  F018         	goto	l4455
 14438   003108                     l1323:
 14439   003108  5022               	movf	___flmul@aexp^0,w,c
 14440   00310A  B4D8               	btfsc	status,2,c
 14441   00310C  EF8A  F018         	goto	u4011
 14442   003110  EF8C  F018         	goto	u4010
 14443   003114                     u4011:
 14444   003114  EFB0  F018         	goto	l4467
 14445   003118                     u4010:
 14446   003118  0E01               	movlw	1
 14447   00311A  2624               	addwf	___flmul@prod^0,f,c
 14448   00311C  0E00               	movlw	0
 14449   00311E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14450   003120  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14451   003122  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14452   003124  A027               	btfss	(___flmul@prod+3)^0,0,c
 14453   003126  EF97  F018         	goto	u4021
 14454   00312A  EF99  F018         	goto	u4020
 14455   00312E                     u4021:
 14456   00312E  EFB0  F018         	goto	l4467
 14457   003132                     u4020:
 14458   003132  C024  F019         	movff	___flmul@prod,??___flmul
 14459   003136  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14460   00313A  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14461   00313E  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14462   003142  341C               	rlcf	(??___flmul+3)^0,w,c
 14463   003144  321C               	rrcf	(??___flmul+3)^0,f,c
 14464   003146  321B               	rrcf	(??___flmul+2)^0,f,c
 14465   003148  321A               	rrcf	(??___flmul+1)^0,f,c
 14466   00314A  3219               	rrcf	??___flmul^0,f,c
 14467   00314C  C019  F024         	movff	??___flmul,___flmul@prod
 14468   003150  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14469   003154  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14470   003158  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14471   00315C  4A28               	infsnz	___flmul@temp^0,f,c
 14472   00315E  2A29               	incf	(___flmul@temp+1)^0,f,c
 14473   003160                     l4467:
 14474   003160  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14475   003162  EFBB  F018         	goto	u4031
 14476   003166  5029               	movf	(___flmul@temp+1)^0,w,c
 14477   003168  E108               	bnz	u4030
 14478   00316A  2828               	incf	___flmul@temp^0,w,c
 14479   00316C  A0D8               	btfss	status,0,c
 14480   00316E  EFBB  F018         	goto	u4031
 14481   003172  EFBD  F018         	goto	u4030
 14482   003176                     u4031:
 14483   003176  EFC7  F018         	goto	l4471
 14484   00317A                     u4030:
 14485   00317A  0E00               	movlw	0
 14486   00317C  6E24               	movwf	___flmul@prod^0,c
 14487   00317E  0E00               	movlw	0
 14488   003180  6E25               	movwf	(___flmul@prod+1)^0,c
 14489   003182  0E80               	movlw	128
 14490   003184  6E26               	movwf	(___flmul@prod+2)^0,c
 14491   003186  0E7F               	movlw	127
 14492   003188  6E27               	movwf	(___flmul@prod+3)^0,c
 14493   00318A  EFF5  F018         	goto	l4483
 14494   00318E                     l4471:
 14495   00318E  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14496   003190  EFD4  F018         	goto	u4040
 14497   003194  5029               	movf	(___flmul@temp+1)^0,w,c
 14498   003196  E106               	bnz	u4041
 14499   003198  0428               	decf	___flmul@temp^0,w,c
 14500   00319A  B0D8               	btfsc	status,0,c
 14501   00319C  EFD2  F018         	goto	u4041
 14502   0031A0  EFD4  F018         	goto	u4040
 14503   0031A4                     u4041:
 14504   0031A4  EFE0  F018         	goto	l1331
 14505   0031A8                     u4040:
 14506   0031A8  0E00               	movlw	0
 14507   0031AA  6E24               	movwf	___flmul@prod^0,c
 14508   0031AC  0E00               	movlw	0
 14509   0031AE  6E25               	movwf	(___flmul@prod+1)^0,c
 14510   0031B0  0E00               	movlw	0
 14511   0031B2  6E26               	movwf	(___flmul@prod+2)^0,c
 14512   0031B4  0E00               	movlw	0
 14513   0031B6  6E27               	movwf	(___flmul@prod+3)^0,c
 14514   0031B8  0E00               	movlw	0
 14515   0031BA  6E1D               	movwf	___flmul@sign^0,c
 14516   0031BC  EFF5  F018         	goto	l4483
 14517   0031C0                     l1331:
 14518   0031C0  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14519   0031C4  0EFF               	movlw	255
 14520   0031C6  1624               	andwf	___flmul@prod^0,f,c
 14521   0031C8  0EFF               	movlw	255
 14522   0031CA  1625               	andwf	(___flmul@prod+1)^0,f,c
 14523   0031CC  0E7F               	movlw	127
 14524   0031CE  1626               	andwf	(___flmul@prod+2)^0,f,c
 14525   0031D0  0E00               	movlw	0
 14526   0031D2  1627               	andwf	(___flmul@prod+3)^0,f,c
 14527   0031D4  A023               	btfss	___flmul@bexp^0,0,c
 14528   0031D6  EFEF  F018         	goto	u4051
 14529   0031DA  EFF1  F018         	goto	u4050
 14530   0031DE                     u4051:
 14531   0031DE  EFF2  F018         	goto	l4481
 14532   0031E2                     u4050:
 14533   0031E2  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14534   0031E4                     l4481:
 14535   0031E4  90D8               	bcf	status,0,c
 14536   0031E6  3023               	rrcf	___flmul@bexp^0,w,c
 14537   0031E8  6E27               	movwf	(___flmul@prod+3)^0,c
 14538   0031EA                     l4483:
 14539   0031EA  501D               	movf	___flmul@sign^0,w,c
 14540   0031EC  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14541   0031EE  C024  F011         	movff	___flmul@prod,?___flmul
 14542   0031F2  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14543   0031F6  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14544   0031FA  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14545   0031FE                     l1318:
 14546   0031FE  0012               	return		;funcret
 14547   003200                     __end_of___flmul:
 14548                           	callstack 0
 14549                           
 14550 ;; *************** function ___flge *****************
 14551 ;; Defined at:
 14552 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14553 ;; Parameters:    Size  Location     Type
 14554 ;;  ff1             4   41[COMRAM] unsigned char 
 14555 ;;  ff2             4   45[COMRAM] unsigned char 
 14556 ;; Auto vars:     Size  Location     Type
 14557 ;;		None
 14558 ;; Return value:  Size  Location     Type
 14559 ;;		None               void
 14560 ;; Registers used:
 14561 ;;		wreg, status,2, status,0
 14562 ;; Tracked objects:
 14563 ;;		On entry : 0/0
 14564 ;;		On exit  : 0/0
 14565 ;;		Unchanged: 0/0
 14566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14567 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14569 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14570 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14571 ;;Total ram usage:       12 bytes
 14572 ;; Hardware stack levels used: 1
 14573 ;; This function calls:
 14574 ;;		Nothing
 14575 ;; This function is called by:
 14576 ;;		_Colour_decider
 14577 ;;		_efgtoa
 14578 ;; This function uses a non-reentrant model
 14579 ;;
 14580                           
 14581                           	psect	text76
 14582   004BFC                     __ptext76:
 14583                           	callstack 0
 14584   004BFC                     ___flge:
 14585                           	callstack 26
 14586   004BFC  0E00               	movlw	0
 14587   004BFE  142A               	andwf	___flge@ff1^0,w,c
 14588   004C00  6E32               	movwf	??___flge^0,c
 14589   004C02  0E00               	movlw	0
 14590   004C04  142B               	andwf	(___flge@ff1+1)^0,w,c
 14591   004C06  6E33               	movwf	(??___flge+1)^0,c
 14592   004C08  0E80               	movlw	128
 14593   004C0A  142C               	andwf	(___flge@ff1+2)^0,w,c
 14594   004C0C  6E34               	movwf	(??___flge+2)^0,c
 14595   004C0E  0E7F               	movlw	127
 14596   004C10  142D               	andwf	(___flge@ff1+3)^0,w,c
 14597   004C12  6E35               	movwf	(??___flge+3)^0,c
 14598   004C14  5032               	movf	??___flge^0,w,c
 14599   004C16  1033               	iorwf	(??___flge+1)^0,w,c
 14600   004C18  1034               	iorwf	(??___flge+2)^0,w,c
 14601   004C1A  1035               	iorwf	(??___flge+3)^0,w,c
 14602   004C1C  A4D8               	btfss	status,2,c
 14603   004C1E  EF13  F026         	goto	u4091
 14604   004C22  EF15  F026         	goto	u4090
 14605   004C26                     u4091:
 14606   004C26  EF1D  F026         	goto	l4515
 14607   004C2A                     u4090:
 14608   004C2A  0E00               	movlw	0
 14609   004C2C  6E2A               	movwf	___flge@ff1^0,c
 14610   004C2E  0E00               	movlw	0
 14611   004C30  6E2B               	movwf	(___flge@ff1+1)^0,c
 14612   004C32  0E00               	movlw	0
 14613   004C34  6E2C               	movwf	(___flge@ff1+2)^0,c
 14614   004C36  0E00               	movlw	0
 14615   004C38  6E2D               	movwf	(___flge@ff1+3)^0,c
 14616   004C3A                     l4515:
 14617   004C3A  0E00               	movlw	0
 14618   004C3C  142E               	andwf	___flge@ff2^0,w,c
 14619   004C3E  6E32               	movwf	??___flge^0,c
 14620   004C40  0E00               	movlw	0
 14621   004C42  142F               	andwf	(___flge@ff2+1)^0,w,c
 14622   004C44  6E33               	movwf	(??___flge+1)^0,c
 14623   004C46  0E80               	movlw	128
 14624   004C48  1430               	andwf	(___flge@ff2+2)^0,w,c
 14625   004C4A  6E34               	movwf	(??___flge+2)^0,c
 14626   004C4C  0E7F               	movlw	127
 14627   004C4E  1431               	andwf	(___flge@ff2+3)^0,w,c
 14628   004C50  6E35               	movwf	(??___flge+3)^0,c
 14629   004C52  5032               	movf	??___flge^0,w,c
 14630   004C54  1033               	iorwf	(??___flge+1)^0,w,c
 14631   004C56  1034               	iorwf	(??___flge+2)^0,w,c
 14632   004C58  1035               	iorwf	(??___flge+3)^0,w,c
 14633   004C5A  A4D8               	btfss	status,2,c
 14634   004C5C  EF32  F026         	goto	u4101
 14635   004C60  EF34  F026         	goto	u4100
 14636   004C64                     u4101:
 14637   004C64  EF3C  F026         	goto	l4519
 14638   004C68                     u4100:
 14639   004C68  0E00               	movlw	0
 14640   004C6A  6E2E               	movwf	___flge@ff2^0,c
 14641   004C6C  0E00               	movlw	0
 14642   004C6E  6E2F               	movwf	(___flge@ff2+1)^0,c
 14643   004C70  0E00               	movlw	0
 14644   004C72  6E30               	movwf	(___flge@ff2+2)^0,c
 14645   004C74  0E00               	movlw	0
 14646   004C76  6E31               	movwf	(___flge@ff2+3)^0,c
 14647   004C78                     l4519:
 14648   004C78  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14649   004C7A  EF41  F026         	goto	u4111
 14650   004C7E  EF43  F026         	goto	u4110
 14651   004C82                     u4111:
 14652   004C82  EF4C  F026         	goto	l4523
 14653   004C86                     u4110:
 14654   004C86  6C2A               	negf	___flge@ff1^0,c
 14655   004C88  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14656   004C8A  B0D8               	btfsc	status,0,c
 14657   004C8C  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14658   004C8E  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14659   004C90  B0D8               	btfsc	status,0,c
 14660   004C92  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14661   004C94  0E80               	movlw	128
 14662   004C96  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14663   004C98                     l4523:
 14664   004C98  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14665   004C9A  EF51  F026         	goto	u4121
 14666   004C9E  EF53  F026         	goto	u4120
 14667   004CA2                     u4121:
 14668   004CA2  EF5C  F026         	goto	l965
 14669   004CA6                     u4120:
 14670   004CA6  6C2E               	negf	___flge@ff2^0,c
 14671   004CA8  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14672   004CAA  B0D8               	btfsc	status,0,c
 14673   004CAC  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14674   004CAE  1E30               	comf	(___flge@ff2+2)^0,f,c
 14675   004CB0  B0D8               	btfsc	status,0,c
 14676   004CB2  2A30               	incf	(___flge@ff2+2)^0,f,c
 14677   004CB4  0E80               	movlw	128
 14678   004CB6  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14679   004CB8                     l965:
 14680   004CB8  0E00               	movlw	0
 14681   004CBA  1A2A               	xorwf	___flge@ff1^0,f,c
 14682   004CBC  0E00               	movlw	0
 14683   004CBE  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14684   004CC0  0E00               	movlw	0
 14685   004CC2  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14686   004CC4  0E80               	movlw	128
 14687   004CC6  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14688   004CC8  0E00               	movlw	0
 14689   004CCA  1A2E               	xorwf	___flge@ff2^0,f,c
 14690   004CCC  0E00               	movlw	0
 14691   004CCE  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14692   004CD0  0E00               	movlw	0
 14693   004CD2  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14694   004CD4  0E80               	movlw	128
 14695   004CD6  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14696   004CD8  502E               	movf	___flge@ff2^0,w,c
 14697   004CDA  5C2A               	subwf	___flge@ff1^0,w,c
 14698   004CDC  502F               	movf	(___flge@ff2+1)^0,w,c
 14699   004CDE  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14700   004CE0  5030               	movf	(___flge@ff2+2)^0,w,c
 14701   004CE2  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14702   004CE4  5031               	movf	(___flge@ff2+3)^0,w,c
 14703   004CE6  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14704   004CE8  B0D8               	btfsc	status,0,c
 14705   004CEA  EF79  F026         	goto	u4131
 14706   004CEE  EF7B  F026         	goto	u4130
 14707   004CF2                     u4131:
 14708   004CF2  EF7E  F026         	goto	l4529
 14709   004CF6                     u4130:
 14710   004CF6  90D8               	bcf	status,0,c
 14711   004CF8  EF7F  F026         	goto	l970
 14712   004CFC                     l4529:
 14713   004CFC  80D8               	bsf	status,0,c
 14714   004CFE                     l970:
 14715   004CFE  0012               	return		;funcret
 14716   004D00                     __end_of___flge:
 14717                           	callstack 0
 14718                           
 14719 ;; *************** function ___fleq *****************
 14720 ;; Defined at:
 14721 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14722 ;; Parameters:    Size  Location     Type
 14723 ;;  ff1             4   49[COMRAM] unsigned char 
 14724 ;;  ff2             4   53[COMRAM] unsigned char 
 14725 ;; Auto vars:     Size  Location     Type
 14726 ;;		None
 14727 ;; Return value:  Size  Location     Type
 14728 ;;		None               void
 14729 ;; Registers used:
 14730 ;;		wreg, status,2, status,0
 14731 ;; Tracked objects:
 14732 ;;		On entry : 0/0
 14733 ;;		On exit  : 0/0
 14734 ;;		Unchanged: 0/0
 14735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14736 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14738 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14739 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14740 ;;Total ram usage:       12 bytes
 14741 ;; Hardware stack levels used: 1
 14742 ;; This function calls:
 14743 ;;		Nothing
 14744 ;; This function is called by:
 14745 ;;		_Colour_decider
 14746 ;;		_efgtoa
 14747 ;; This function uses a non-reentrant model
 14748 ;;
 14749                           
 14750                           	psect	text77
 14751   0050DE                     __ptext77:
 14752                           	callstack 0
 14753   0050DE                     ___fleq:
 14754                           	callstack 26
 14755   0050DE  0E00               	movlw	0
 14756   0050E0  1432               	andwf	___fleq@ff1^0,w,c
 14757   0050E2  6E3A               	movwf	??___fleq^0,c
 14758   0050E4  0E00               	movlw	0
 14759   0050E6  1433               	andwf	(___fleq@ff1+1)^0,w,c
 14760   0050E8  6E3B               	movwf	(??___fleq+1)^0,c
 14761   0050EA  0E80               	movlw	128
 14762   0050EC  1434               	andwf	(___fleq@ff1+2)^0,w,c
 14763   0050EE  6E3C               	movwf	(??___fleq+2)^0,c
 14764   0050F0  0E7F               	movlw	127
 14765   0050F2  1435               	andwf	(___fleq@ff1+3)^0,w,c
 14766   0050F4  6E3D               	movwf	(??___fleq+3)^0,c
 14767   0050F6  503A               	movf	??___fleq^0,w,c
 14768   0050F8  103B               	iorwf	(??___fleq+1)^0,w,c
 14769   0050FA  103C               	iorwf	(??___fleq+2)^0,w,c
 14770   0050FC  103D               	iorwf	(??___fleq+3)^0,w,c
 14771   0050FE  A4D8               	btfss	status,2,c
 14772   005100  EF84  F028         	goto	u4061
 14773   005104  EF86  F028         	goto	u4060
 14774   005108                     u4061:
 14775   005108  EF8E  F028         	goto	l4499
 14776   00510C                     u4060:
 14777   00510C  0E00               	movlw	0
 14778   00510E  6E32               	movwf	___fleq@ff1^0,c
 14779   005110  0E00               	movlw	0
 14780   005112  6E33               	movwf	(___fleq@ff1+1)^0,c
 14781   005114  0E00               	movlw	0
 14782   005116  6E34               	movwf	(___fleq@ff1+2)^0,c
 14783   005118  0E00               	movlw	0
 14784   00511A  6E35               	movwf	(___fleq@ff1+3)^0,c
 14785   00511C                     l4499:
 14786   00511C  0E00               	movlw	0
 14787   00511E  1436               	andwf	___fleq@ff2^0,w,c
 14788   005120  6E3A               	movwf	??___fleq^0,c
 14789   005122  0E00               	movlw	0
 14790   005124  1437               	andwf	(___fleq@ff2+1)^0,w,c
 14791   005126  6E3B               	movwf	(??___fleq+1)^0,c
 14792   005128  0E80               	movlw	128
 14793   00512A  1438               	andwf	(___fleq@ff2+2)^0,w,c
 14794   00512C  6E3C               	movwf	(??___fleq+2)^0,c
 14795   00512E  0E7F               	movlw	127
 14796   005130  1439               	andwf	(___fleq@ff2+3)^0,w,c
 14797   005132  6E3D               	movwf	(??___fleq+3)^0,c
 14798   005134  503A               	movf	??___fleq^0,w,c
 14799   005136  103B               	iorwf	(??___fleq+1)^0,w,c
 14800   005138  103C               	iorwf	(??___fleq+2)^0,w,c
 14801   00513A  103D               	iorwf	(??___fleq+3)^0,w,c
 14802   00513C  A4D8               	btfss	status,2,c
 14803   00513E  EFA3  F028         	goto	u4071
 14804   005142  EFA5  F028         	goto	u4070
 14805   005146                     u4071:
 14806   005146  EFAD  F028         	goto	l4503
 14807   00514A                     u4070:
 14808   00514A  0E00               	movlw	0
 14809   00514C  6E36               	movwf	___fleq@ff2^0,c
 14810   00514E  0E00               	movlw	0
 14811   005150  6E37               	movwf	(___fleq@ff2+1)^0,c
 14812   005152  0E00               	movlw	0
 14813   005154  6E38               	movwf	(___fleq@ff2+2)^0,c
 14814   005156  0E00               	movlw	0
 14815   005158  6E39               	movwf	(___fleq@ff2+3)^0,c
 14816   00515A                     l4503:
 14817   00515A  5036               	movf	___fleq@ff2^0,w,c
 14818   00515C  1832               	xorwf	___fleq@ff1^0,w,c
 14819   00515E  E10F               	bnz	u4080
 14820   005160  5037               	movf	(___fleq@ff2+1)^0,w,c
 14821   005162  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 14822   005164  E10C               	bnz	u4080
 14823   005166  5038               	movf	(___fleq@ff2+2)^0,w,c
 14824   005168  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 14825   00516A  E109               	bnz	u4080
 14826   00516C  5039               	movf	(___fleq@ff2+3)^0,w,c
 14827   00516E  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 14828   005170  B4D8               	btfsc	status,2,c
 14829   005172  EFBD  F028         	goto	u4081
 14830   005176  EFBF  F028         	goto	u4080
 14831   00517A                     u4081:
 14832   00517A  EFC2  F028         	goto	l4507
 14833   00517E                     u4080:
 14834   00517E  90D8               	bcf	status,0,c
 14835   005180  EFC3  F028         	goto	l959
 14836   005184                     l4507:
 14837   005184  80D8               	bsf	status,0,c
 14838   005186                     l959:
 14839   005186  0012               	return		;funcret
 14840   005188                     __end_of___fleq:
 14841                           	callstack 0
 14842                           
 14843 ;; *************** function ___fldiv *****************
 14844 ;; Defined at:
 14845 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14846 ;; Parameters:    Size  Location     Type
 14847 ;;  b               4   49[COMRAM] unsigned char 
 14848 ;;  a               4   53[COMRAM] unsigned char 
 14849 ;; Auto vars:     Size  Location     Type
 14850 ;;  grs             4   68[COMRAM] unsigned long 
 14851 ;;  rem             4   61[COMRAM] unsigned long 
 14852 ;;  new_exp         2   66[COMRAM] short 
 14853 ;;  aexp            1   73[COMRAM] unsigned char 
 14854 ;;  bexp            1   72[COMRAM] unsigned char 
 14855 ;;  sign            1   65[COMRAM] unsigned char 
 14856 ;; Return value:  Size  Location     Type
 14857 ;;                  4   49[COMRAM] unsigned char 
 14858 ;; Registers used:
 14859 ;;		wreg, status,2, status,0
 14860 ;; Tracked objects:
 14861 ;;		On entry : 0/0
 14862 ;;		On exit  : 0/0
 14863 ;;		Unchanged: 0/0
 14864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14865 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14866 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14867 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14868 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14869 ;;Total ram usage:       25 bytes
 14870 ;; Hardware stack levels used: 1
 14871 ;; This function calls:
 14872 ;;		Nothing
 14873 ;; This function is called by:
 14874 ;;		_colour_rel
 14875 ;;		_Colour_decider
 14876 ;;		_efgtoa
 14877 ;; This function uses a non-reentrant model
 14878 ;;
 14879                           
 14880                           	psect	text78
 14881   003200                     __ptext78:
 14882                           	callstack 0
 14883   003200                     ___fldiv:
 14884                           	callstack 26
 14885   003200  5035               	movf	(___fldiv@b+3)^0,w,c
 14886   003202  0B80               	andlw	128
 14887   003204  6E42               	movwf	___fldiv@sign^0,c
 14888   003206  5035               	movf	(___fldiv@b+3)^0,w,c
 14889   003208  2435               	addwf	(___fldiv@b+3)^0,w,c
 14890   00320A  6E49               	movwf	___fldiv@bexp^0,c
 14891   00320C  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14892   00320E  EF0B  F019         	goto	u3641
 14893   003212  EF0D  F019         	goto	u3640
 14894   003216                     u3641:
 14895   003216  EF0E  F019         	goto	l4227
 14896   00321A                     u3640:
 14897   00321A  8049               	bsf	___fldiv@bexp^0,0,c
 14898   00321C                     l4227:
 14899   00321C  5049               	movf	___fldiv@bexp^0,w,c
 14900   00321E  B4D8               	btfsc	status,2,c
 14901   003220  EF14  F019         	goto	u3651
 14902   003224  EF16  F019         	goto	u3650
 14903   003228                     u3651:
 14904   003228  EF2B  F019         	goto	l4237
 14905   00322C                     u3650:
 14906   00322C  2849               	incf	___fldiv@bexp^0,w,c
 14907   00322E  A4D8               	btfss	status,2,c
 14908   003230  EF1C  F019         	goto	u3661
 14909   003234  EF1E  F019         	goto	u3660
 14910   003238                     u3661:
 14911   003238  EF26  F019         	goto	l4233
 14912   00323C                     u3660:
 14913   00323C  0E00               	movlw	0
 14914   00323E  6E32               	movwf	___fldiv@b^0,c
 14915   003240  0E00               	movlw	0
 14916   003242  6E33               	movwf	(___fldiv@b+1)^0,c
 14917   003244  0E00               	movlw	0
 14918   003246  6E34               	movwf	(___fldiv@b+2)^0,c
 14919   003248  0E00               	movlw	0
 14920   00324A  6E35               	movwf	(___fldiv@b+3)^0,c
 14921   00324C                     l4233:
 14922   00324C  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14923   00324E  0E00               	movlw	0
 14924   003250  6E35               	movwf	(___fldiv@b+3)^0,c
 14925   003252  EF33  F019         	goto	l4239
 14926   003256                     l4237:
 14927   003256  0E00               	movlw	0
 14928   003258  6E32               	movwf	___fldiv@b^0,c
 14929   00325A  0E00               	movlw	0
 14930   00325C  6E33               	movwf	(___fldiv@b+1)^0,c
 14931   00325E  0E00               	movlw	0
 14932   003260  6E34               	movwf	(___fldiv@b+2)^0,c
 14933   003262  0E00               	movlw	0
 14934   003264  6E35               	movwf	(___fldiv@b+3)^0,c
 14935   003266                     l4239:
 14936   003266  5039               	movf	(___fldiv@a+3)^0,w,c
 14937   003268  0B80               	andlw	128
 14938   00326A  1A42               	xorwf	___fldiv@sign^0,f,c
 14939   00326C  5039               	movf	(___fldiv@a+3)^0,w,c
 14940   00326E  2439               	addwf	(___fldiv@a+3)^0,w,c
 14941   003270  6E4A               	movwf	___fldiv@aexp^0,c
 14942   003272  AE38               	btfss	(___fldiv@a+2)^0,7,c
 14943   003274  EF3E  F019         	goto	u3671
 14944   003278  EF40  F019         	goto	u3670
 14945   00327C                     u3671:
 14946   00327C  EF41  F019         	goto	l4247
 14947   003280                     u3670:
 14948   003280  804A               	bsf	___fldiv@aexp^0,0,c
 14949   003282                     l4247:
 14950   003282  504A               	movf	___fldiv@aexp^0,w,c
 14951   003284  B4D8               	btfsc	status,2,c
 14952   003286  EF47  F019         	goto	u3681
 14953   00328A  EF49  F019         	goto	u3680
 14954   00328E                     u3681:
 14955   00328E  EF5E  F019         	goto	l4257
 14956   003292                     u3680:
 14957   003292  284A               	incf	___fldiv@aexp^0,w,c
 14958   003294  A4D8               	btfss	status,2,c
 14959   003296  EF4F  F019         	goto	u3691
 14960   00329A  EF51  F019         	goto	u3690
 14961   00329E                     u3691:
 14962   00329E  EF59  F019         	goto	l4253
 14963   0032A2                     u3690:
 14964   0032A2  0E00               	movlw	0
 14965   0032A4  6E36               	movwf	___fldiv@a^0,c
 14966   0032A6  0E00               	movlw	0
 14967   0032A8  6E37               	movwf	(___fldiv@a+1)^0,c
 14968   0032AA  0E00               	movlw	0
 14969   0032AC  6E38               	movwf	(___fldiv@a+2)^0,c
 14970   0032AE  0E00               	movlw	0
 14971   0032B0  6E39               	movwf	(___fldiv@a+3)^0,c
 14972   0032B2                     l4253:
 14973   0032B2  8E38               	bsf	(___fldiv@a+2)^0,7,c
 14974   0032B4  0E00               	movlw	0
 14975   0032B6  6E39               	movwf	(___fldiv@a+3)^0,c
 14976   0032B8  EF66  F019         	goto	l4259
 14977   0032BC                     l4257:
 14978   0032BC  0E00               	movlw	0
 14979   0032BE  6E36               	movwf	___fldiv@a^0,c
 14980   0032C0  0E00               	movlw	0
 14981   0032C2  6E37               	movwf	(___fldiv@a+1)^0,c
 14982   0032C4  0E00               	movlw	0
 14983   0032C6  6E38               	movwf	(___fldiv@a+2)^0,c
 14984   0032C8  0E00               	movlw	0
 14985   0032CA  6E39               	movwf	(___fldiv@a+3)^0,c
 14986   0032CC                     l4259:
 14987   0032CC  5036               	movf	___fldiv@a^0,w,c
 14988   0032CE  1037               	iorwf	(___fldiv@a+1)^0,w,c
 14989   0032D0  1038               	iorwf	(___fldiv@a+2)^0,w,c
 14990   0032D2  1039               	iorwf	(___fldiv@a+3)^0,w,c
 14991   0032D4  A4D8               	btfss	status,2,c
 14992   0032D6  EF6F  F019         	goto	u3701
 14993   0032DA  EF71  F019         	goto	u3700
 14994   0032DE                     u3701:
 14995   0032DE  EF89  F019         	goto	l4271
 14996   0032E2                     u3700:
 14997   0032E2  0E00               	movlw	0
 14998   0032E4  6E32               	movwf	___fldiv@b^0,c
 14999   0032E6  0E00               	movlw	0
 15000   0032E8  6E33               	movwf	(___fldiv@b+1)^0,c
 15001   0032EA  0E00               	movlw	0
 15002   0032EC  6E34               	movwf	(___fldiv@b+2)^0,c
 15003   0032EE  0E00               	movlw	0
 15004   0032F0  6E35               	movwf	(___fldiv@b+3)^0,c
 15005   0032F2  0E80               	movlw	128
 15006   0032F4  1234               	iorwf	(___fldiv@b+2)^0,f,c
 15007   0032F6  0E7F               	movlw	127
 15008   0032F8  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15009   0032FA                     l4265:
 15010   0032FA  5042               	movf	___fldiv@sign^0,w,c
 15011   0032FC  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15012   0032FE  C032  F032         	movff	___fldiv@b,?___fldiv
 15013   003302  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 15014   003306  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 15015   00330A  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 15016   00330E  EFCC  F01A         	goto	l1282
 15017   003312                     l4271:
 15018   003312  5049               	movf	___fldiv@bexp^0,w,c
 15019   003314  A4D8               	btfss	status,2,c
 15020   003316  EF8F  F019         	goto	u3711
 15021   00331A  EF91  F019         	goto	u3710
 15022   00331E                     u3711:
 15023   00331E  EF9B  F019         	goto	l4279
 15024   003322                     u3710:
 15025   003322  0E00               	movlw	0
 15026   003324  6E32               	movwf	?___fldiv^0,c
 15027   003326  0E00               	movlw	0
 15028   003328  6E33               	movwf	(?___fldiv+1)^0,c
 15029   00332A  0E00               	movlw	0
 15030   00332C  6E34               	movwf	(?___fldiv+2)^0,c
 15031   00332E  0E00               	movlw	0
 15032   003330  6E35               	movwf	(?___fldiv+3)^0,c
 15033   003332  EFCC  F01A         	goto	l1282
 15034   003336                     l4279:
 15035   003336  504A               	movf	___fldiv@aexp^0,w,c
 15036   003338  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 15037   00333C  6A3B               	clrf	(??___fldiv+1)^0,c
 15038   00333E  5E3A               	subwf	??___fldiv^0,f,c
 15039   003340  0E00               	movlw	0
 15040   003342  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 15041   003344  0E7F               	movlw	127
 15042   003346  243A               	addwf	??___fldiv^0,w,c
 15043   003348  6E43               	movwf	___fldiv@new_exp^0,c
 15044   00334A  0E00               	movlw	0
 15045   00334C  203B               	addwfc	(??___fldiv+1)^0,w,c
 15046   00334E  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15047   003350  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 15048   003354  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 15049   003358  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 15050   00335C  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 15051   003360  0E00               	movlw	0
 15052   003362  6E32               	movwf	___fldiv@b^0,c
 15053   003364  0E00               	movlw	0
 15054   003366  6E33               	movwf	(___fldiv@b+1)^0,c
 15055   003368  0E00               	movlw	0
 15056   00336A  6E34               	movwf	(___fldiv@b+2)^0,c
 15057   00336C  0E00               	movlw	0
 15058   00336E  6E35               	movwf	(___fldiv@b+3)^0,c
 15059   003370  0E00               	movlw	0
 15060   003372  6E45               	movwf	___fldiv@grs^0,c
 15061   003374  0E00               	movlw	0
 15062   003376  6E46               	movwf	(___fldiv@grs+1)^0,c
 15063   003378  0E00               	movlw	0
 15064   00337A  6E47               	movwf	(___fldiv@grs+2)^0,c
 15065   00337C  0E00               	movlw	0
 15066   00337E  6E48               	movwf	(___fldiv@grs+3)^0,c
 15067   003380  0E00               	movlw	0
 15068   003382  6E4A               	movwf	___fldiv@aexp^0,c
 15069   003384  EFFC  F019         	goto	l1284
 15070   003388                     l4289:
 15071   003388  504A               	movf	___fldiv@aexp^0,w,c
 15072   00338A  B4D8               	btfsc	status,2,c
 15073   00338C  EFCA  F019         	goto	u3721
 15074   003390  EFCC  F019         	goto	u3720
 15075   003394                     u3721:
 15076   003394  EFE3  F019         	goto	l4297
 15077   003398                     u3720:
 15078   003398  90D8               	bcf	status,0,c
 15079   00339A  363E               	rlcf	___fldiv@rem^0,f,c
 15080   00339C  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 15081   00339E  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 15082   0033A0  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 15083   0033A2  90D8               	bcf	status,0,c
 15084   0033A4  3632               	rlcf	___fldiv@b^0,f,c
 15085   0033A6  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15086   0033A8  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15087   0033AA  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15088   0033AC  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15089   0033AE  EFDB  F019         	goto	u3731
 15090   0033B2  EFDD  F019         	goto	u3730
 15091   0033B6                     u3731:
 15092   0033B6  EFDE  F019         	goto	l1287
 15093   0033BA                     u3730:
 15094   0033BA  8032               	bsf	___fldiv@b^0,0,c
 15095   0033BC                     l1287:
 15096   0033BC  90D8               	bcf	status,0,c
 15097   0033BE  3645               	rlcf	___fldiv@grs^0,f,c
 15098   0033C0  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15099   0033C2  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15100   0033C4  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15101   0033C6                     l4297:
 15102   0033C6  5036               	movf	___fldiv@a^0,w,c
 15103   0033C8  5C3E               	subwf	___fldiv@rem^0,w,c
 15104   0033CA  5037               	movf	(___fldiv@a+1)^0,w,c
 15105   0033CC  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 15106   0033CE  5038               	movf	(___fldiv@a+2)^0,w,c
 15107   0033D0  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 15108   0033D2  5039               	movf	(___fldiv@a+3)^0,w,c
 15109   0033D4  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 15110   0033D6  A0D8               	btfss	status,0,c
 15111   0033D8  EFF0  F019         	goto	u3741
 15112   0033DC  EFF2  F019         	goto	u3740
 15113   0033E0                     u3741:
 15114   0033E0  EFFB  F019         	goto	l4303
 15115   0033E4                     u3740:
 15116   0033E4  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 15117   0033E6  5036               	movf	___fldiv@a^0,w,c
 15118   0033E8  5E3E               	subwf	___fldiv@rem^0,f,c
 15119   0033EA  5037               	movf	(___fldiv@a+1)^0,w,c
 15120   0033EC  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 15121   0033EE  5038               	movf	(___fldiv@a+2)^0,w,c
 15122   0033F0  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15123   0033F2  5039               	movf	(___fldiv@a+3)^0,w,c
 15124   0033F4  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15125   0033F6                     l4303:
 15126   0033F6  2A4A               	incf	___fldiv@aexp^0,f,c
 15127   0033F8                     l1284:
 15128   0033F8  0E19               	movlw	25
 15129   0033FA  644A               	cpfsgt	___fldiv@aexp^0,c
 15130   0033FC  EF02  F01A         	goto	u3751
 15131   003400  EF04  F01A         	goto	u3750
 15132   003404                     u3751:
 15133   003404  EFC4  F019         	goto	l4289
 15134   003408                     u3750:
 15135   003408  503E               	movf	___fldiv@rem^0,w,c
 15136   00340A  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15137   00340C  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15138   00340E  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15139   003410  B4D8               	btfsc	status,2,c
 15140   003412  EF0D  F01A         	goto	u3761
 15141   003416  EF0F  F01A         	goto	u3760
 15142   00341A                     u3761:
 15143   00341A  EF27  F01A         	goto	l4315
 15144   00341E                     u3760:
 15145   00341E  8045               	bsf	___fldiv@grs^0,0,c
 15146   003420  EF27  F01A         	goto	l4315
 15147   003424                     l4309:
 15148   003424  90D8               	bcf	status,0,c
 15149   003426  3632               	rlcf	___fldiv@b^0,f,c
 15150   003428  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15151   00342A  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15152   00342C  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15153   00342E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15154   003430  EF1C  F01A         	goto	u3771
 15155   003434  EF1E  F01A         	goto	u3770
 15156   003438                     u3771:
 15157   003438  EF1F  F01A         	goto	l1293
 15158   00343C                     u3770:
 15159   00343C  8032               	bsf	___fldiv@b^0,0,c
 15160   00343E                     l1293:
 15161   00343E  90D8               	bcf	status,0,c
 15162   003440  3645               	rlcf	___fldiv@grs^0,f,c
 15163   003442  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15164   003444  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15165   003446  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15166   003448  0643               	decf	___fldiv@new_exp^0,f,c
 15167   00344A  A0D8               	btfss	status,0,c
 15168   00344C  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15169   00344E                     l4315:
 15170   00344E  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15171   003450  EF2C  F01A         	goto	u3781
 15172   003454  EF2E  F01A         	goto	u3780
 15173   003458                     u3781:
 15174   003458  EF12  F01A         	goto	l4309
 15175   00345C                     u3780:
 15176   00345C  0E00               	movlw	0
 15177   00345E  6E4A               	movwf	___fldiv@aexp^0,c
 15178   003460  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15179   003462  EF35  F01A         	goto	u3791
 15180   003466  EF37  F01A         	goto	u3790
 15181   00346A                     u3791:
 15182   00346A  EF5B  F01A         	goto	l1295
 15183   00346E                     u3790:
 15184   00346E  0EFF               	movlw	255
 15185   003470  1445               	andwf	___fldiv@grs^0,w,c
 15186   003472  6E3A               	movwf	??___fldiv^0,c
 15187   003474  0EFF               	movlw	255
 15188   003476  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15189   003478  6E3B               	movwf	(??___fldiv+1)^0,c
 15190   00347A  0EFF               	movlw	255
 15191   00347C  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15192   00347E  6E3C               	movwf	(??___fldiv+2)^0,c
 15193   003480  0E7F               	movlw	127
 15194   003482  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15195   003484  6E3D               	movwf	(??___fldiv+3)^0,c
 15196   003486  503A               	movf	??___fldiv^0,w,c
 15197   003488  103B               	iorwf	(??___fldiv+1)^0,w,c
 15198   00348A  103C               	iorwf	(??___fldiv+2)^0,w,c
 15199   00348C  103D               	iorwf	(??___fldiv+3)^0,w,c
 15200   00348E  B4D8               	btfsc	status,2,c
 15201   003490  EF4C  F01A         	goto	u3801
 15202   003494  EF4E  F01A         	goto	u3800
 15203   003498                     u3801:
 15204   003498  EF52  F01A         	goto	l1296
 15205   00349C                     u3800:
 15206   00349C                     l4323:
 15207   00349C  0E01               	movlw	1
 15208   00349E  6E4A               	movwf	___fldiv@aexp^0,c
 15209   0034A0  EF5B  F01A         	goto	l1295
 15210   0034A4                     l1296:
 15211   0034A4  A032               	btfss	___fldiv@b^0,0,c
 15212   0034A6  EF57  F01A         	goto	u3811
 15213   0034AA  EF59  F01A         	goto	u3810
 15214   0034AE                     u3811:
 15215   0034AE  EF5B  F01A         	goto	l1295
 15216   0034B2                     u3810:
 15217   0034B2  EF4E  F01A         	goto	l4323
 15218   0034B6                     l1295:
 15219   0034B6  504A               	movf	___fldiv@aexp^0,w,c
 15220   0034B8  B4D8               	btfsc	status,2,c
 15221   0034BA  EF61  F01A         	goto	u3821
 15222   0034BE  EF63  F01A         	goto	u3820
 15223   0034C2                     u3821:
 15224   0034C2  EF87  F01A         	goto	l4335
 15225   0034C6                     u3820:
 15226   0034C6  0E01               	movlw	1
 15227   0034C8  2632               	addwf	___fldiv@b^0,f,c
 15228   0034CA  0E00               	movlw	0
 15229   0034CC  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15230   0034CE  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15231   0034D0  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15232   0034D2  A035               	btfss	(___fldiv@b+3)^0,0,c
 15233   0034D4  EF6E  F01A         	goto	u3831
 15234   0034D8  EF70  F01A         	goto	u3830
 15235   0034DC                     u3831:
 15236   0034DC  EF87  F01A         	goto	l4335
 15237   0034E0                     u3830:
 15238   0034E0  C032  F03A         	movff	___fldiv@b,??___fldiv
 15239   0034E4  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15240   0034E8  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15241   0034EC  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15242   0034F0  343D               	rlcf	(??___fldiv+3)^0,w,c
 15243   0034F2  323D               	rrcf	(??___fldiv+3)^0,f,c
 15244   0034F4  323C               	rrcf	(??___fldiv+2)^0,f,c
 15245   0034F6  323B               	rrcf	(??___fldiv+1)^0,f,c
 15246   0034F8  323A               	rrcf	??___fldiv^0,f,c
 15247   0034FA  C03A  F032         	movff	??___fldiv,___fldiv@b
 15248   0034FE  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15249   003502  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15250   003506  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15251   00350A  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15252   00350C  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15253   00350E                     l4335:
 15254   00350E  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15255   003510  EF92  F01A         	goto	u3841
 15256   003514  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15257   003516  E108               	bnz	u3840
 15258   003518  2843               	incf	___fldiv@new_exp^0,w,c
 15259   00351A  A0D8               	btfss	status,0,c
 15260   00351C  EF92  F01A         	goto	u3841
 15261   003520  EF94  F01A         	goto	u3840
 15262   003524                     u3841:
 15263   003524  EF9F  F01A         	goto	l4339
 15264   003528                     u3840:
 15265   003528  0E00               	movlw	0
 15266   00352A  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15267   00352C  6843               	setf	___fldiv@new_exp^0,c
 15268   00352E  0E00               	movlw	0
 15269   003530  6E32               	movwf	___fldiv@b^0,c
 15270   003532  0E00               	movlw	0
 15271   003534  6E33               	movwf	(___fldiv@b+1)^0,c
 15272   003536  0E00               	movlw	0
 15273   003538  6E34               	movwf	(___fldiv@b+2)^0,c
 15274   00353A  0E00               	movlw	0
 15275   00353C  6E35               	movwf	(___fldiv@b+3)^0,c
 15276   00353E                     l4339:
 15277   00353E  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15278   003540  EFAC  F01A         	goto	u3850
 15279   003544  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15280   003546  E106               	bnz	u3851
 15281   003548  0443               	decf	___fldiv@new_exp^0,w,c
 15282   00354A  B0D8               	btfsc	status,0,c
 15283   00354C  EFAA  F01A         	goto	u3851
 15284   003550  EFAC  F01A         	goto	u3850
 15285   003554                     u3851:
 15286   003554  EFBA  F01A         	goto	l4343
 15287   003558                     u3850:
 15288   003558  0E00               	movlw	0
 15289   00355A  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15290   00355C  0E00               	movlw	0
 15291   00355E  6E43               	movwf	___fldiv@new_exp^0,c
 15292   003560  0E00               	movlw	0
 15293   003562  6E32               	movwf	___fldiv@b^0,c
 15294   003564  0E00               	movlw	0
 15295   003566  6E33               	movwf	(___fldiv@b+1)^0,c
 15296   003568  0E00               	movlw	0
 15297   00356A  6E34               	movwf	(___fldiv@b+2)^0,c
 15298   00356C  0E00               	movlw	0
 15299   00356E  6E35               	movwf	(___fldiv@b+3)^0,c
 15300   003570  0E00               	movlw	0
 15301   003572  6E42               	movwf	___fldiv@sign^0,c
 15302   003574                     l4343:
 15303   003574  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15304   003578  A049               	btfss	___fldiv@bexp^0,0,c
 15305   00357A  EFC1  F01A         	goto	u3861
 15306   00357E  EFC3  F01A         	goto	u3860
 15307   003582                     u3861:
 15308   003582  EFC6  F01A         	goto	l4349
 15309   003586                     u3860:
 15310   003586  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15311   003588  EFC7  F01A         	goto	l4351
 15312   00358C                     l4349:
 15313   00358C  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15314   00358E                     l4351:
 15315   00358E  90D8               	bcf	status,0,c
 15316   003590  3049               	rrcf	___fldiv@bexp^0,w,c
 15317   003592  6E35               	movwf	(___fldiv@b+3)^0,c
 15318   003594  EF7D  F019         	goto	l4265
 15319   003598                     l1282:
 15320   003598  0012               	return		;funcret
 15321   00359A                     __end_of___fldiv:
 15322                           	callstack 0
 15323                           
 15324                           	psect	rparam
 15325   000000                     
 15326                           	psect	idloc
 15327                           
 15328                           ;Config register IDLOC0 @ 0x200000
 15329                           ;	unspecified, using default values
 15330   200000                     	org	2097152
 15331   200000  0FFF               	dw	4095
 15332                           
 15333                           ;Config register IDLOC1 @ 0x200002
 15334                           ;	unspecified, using default values
 15335   200002                     	org	2097154
 15336   200002  0FFF               	dw	4095
 15337                           
 15338                           ;Config register IDLOC2 @ 0x200004
 15339                           ;	unspecified, using default values
 15340   200004                     	org	2097156
 15341   200004  0FFF               	dw	4095
 15342                           
 15343                           ;Config register IDLOC3 @ 0x200006
 15344                           ;	unspecified, using default values
 15345   200006                     	org	2097158
 15346   200006  0FFF               	dw	4095
 15347                           
 15348                           ;Config register IDLOC4 @ 0x200008
 15349                           ;	unspecified, using default values
 15350   200008                     	org	2097160
 15351   200008  0FFF               	dw	4095
 15352                           
 15353                           ;Config register IDLOC5 @ 0x20000A
 15354                           ;	unspecified, using default values
 15355   20000A                     	org	2097162
 15356   20000A  0FFF               	dw	4095
 15357                           
 15358                           ;Config register IDLOC6 @ 0x20000C
 15359                           ;	unspecified, using default values
 15360   20000C                     	org	2097164
 15361   20000C  0FFF               	dw	4095
 15362                           
 15363                           ;Config register IDLOC7 @ 0x20000E
 15364                           ;	unspecified, using default values
 15365   20000E                     	org	2097166
 15366   20000E  0FFF               	dw	4095
 15367                           
 15368                           	psect	config
 15369                           
 15370                           ;Config register CONFIG1L @ 0x300000
 15371                           ;	External Oscillator mode Selection bits
 15372                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15373                           ;	Power-up default value for COSC bits
 15374                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15375   300000                     	org	3145728
 15376   300000  AA                 	db	170
 15377                           
 15378                           ;Config register CONFIG1H @ 0x300001
 15379                           ;	unspecified, using default values
 15380                           ;	Clock Out Enable bit
 15381                           ;	CLKOUTEN = 0x1, unprogrammed default
 15382                           ;	Clock Switch Enable bit
 15383                           ;	CSWEN = 0x1, unprogrammed default
 15384                           ;	Fail-Safe Clock Monitor Enable bit
 15385                           ;	FCMEN = 0x1, unprogrammed default
 15386   300001                     	org	3145729
 15387   300001  FF                 	db	255
 15388                           
 15389                           ;Config register CONFIG2L @ 0x300002
 15390                           ;	unspecified, using default values
 15391                           ;	Master Clear Enable bit
 15392                           ;	MCLRE = 0x1, unprogrammed default
 15393                           ;	Power-up Timer Enable bit
 15394                           ;	PWRTE = 0x1, unprogrammed default
 15395                           ;	Low-power BOR enable bit
 15396                           ;	LPBOREN = 0x1, unprogrammed default
 15397                           ;	Brown-out Reset Enable bits
 15398                           ;	BOREN = 0x3, unprogrammed default
 15399   300002                     	org	3145730
 15400   300002  FF                 	db	255
 15401                           
 15402                           ;Config register CONFIG2H @ 0x300003
 15403                           ;	unspecified, using default values
 15404                           ;	Brown Out Reset Voltage selection bits
 15405                           ;	BORV = 0x3, unprogrammed default
 15406                           ;	ZCD Disable bit
 15407                           ;	ZCD = 0x1, unprogrammed default
 15408                           ;	PPSLOCK bit One-Way Set Enable bit
 15409                           ;	PPS1WAY = 0x1, unprogrammed default
 15410                           ;	Stack Full/Underflow Reset Enable bit
 15411                           ;	STVREN = 0x1, unprogrammed default
 15412                           ;	Debugger Enable bit
 15413                           ;	DEBUG = 0x1, unprogrammed default
 15414                           ;	Extended Instruction Set Enable bit
 15415                           ;	XINST = 0x1, unprogrammed default
 15416   300003                     	org	3145731
 15417   300003  FF                 	db	255
 15418                           
 15419                           ;Config register CONFIG3L @ 0x300004
 15420                           ;	WDT Period Select bits
 15421                           ;	WDTCPS = 0x1F, unprogrammed default
 15422                           ;	WDT operating mode
 15423                           ;	WDTE = OFF, WDT Disabled
 15424   300004                     	org	3145732
 15425   300004  9F                 	db	159
 15426                           
 15427                           ;Config register CONFIG3H @ 0x300005
 15428                           ;	unspecified, using default values
 15429                           ;	WDT Window Select bits
 15430                           ;	WDTCWS = 0x7, unprogrammed default
 15431                           ;	WDT input clock selector
 15432                           ;	WDTCCS = 0x7, unprogrammed default
 15433   300005                     	org	3145733
 15434   300005  FF                 	db	255
 15435                           
 15436                           ;Config register CONFIG4L @ 0x300006
 15437                           ;	unspecified, using default values
 15438                           ;	Write Protection Block 0
 15439                           ;	WRT0 = 0x1, unprogrammed default
 15440                           ;	Write Protection Block 1
 15441                           ;	WRT1 = 0x1, unprogrammed default
 15442                           ;	Write Protection Block 2
 15443                           ;	WRT2 = 0x1, unprogrammed default
 15444                           ;	Write Protection Block 3
 15445                           ;	WRT3 = 0x1, unprogrammed default
 15446                           ;	Write Protection Block 3
 15447                           ;	WRT4 = 0x1, unprogrammed default
 15448                           ;	Write Protection Block 3
 15449                           ;	WRT5 = 0x1, unprogrammed default
 15450                           ;	Write Protection Block 3
 15451                           ;	WRT6 = 0x1, unprogrammed default
 15452                           ;	Write Protection Block 3
 15453                           ;	WRT7 = 0x1, unprogrammed default
 15454   300006                     	org	3145734
 15455   300006  FF                 	db	255
 15456                           
 15457                           ;Config register CONFIG4H @ 0x300007
 15458                           ;	unspecified, using default values
 15459                           ;	Configuration Register Write Protection bit
 15460                           ;	WRTC = 0x1, unprogrammed default
 15461                           ;	Boot Block Write Protection bit
 15462                           ;	WRTB = 0x1, unprogrammed default
 15463                           ;	Data EEPROM Write Protection bit
 15464                           ;	WRTD = 0x1, unprogrammed default
 15465                           ;	Scanner Enable bit
 15466                           ;	SCANE = 0x1, unprogrammed default
 15467                           ;	Low Voltage Programming Enable bit
 15468                           ;	LVP = 0x1, unprogrammed default
 15469   300007                     	org	3145735
 15470   300007  FF                 	db	255
 15471                           
 15472                           ;Config register CONFIG5L @ 0x300008
 15473                           ;	unspecified, using default values
 15474                           ;	UserNVM Program Memory Code Protection bit
 15475                           ;	CP = 0x1, unprogrammed default
 15476                           ;	DataNVM Memory Code Protection bit
 15477                           ;	CPD = 0x1, unprogrammed default
 15478   300008                     	org	3145736
 15479   300008  FF                 	db	255
 15480                           
 15481                           ;Config register CONFIG5H @ 0x300009
 15482                           ;	unspecified, using default values
 15483   300009                     	org	3145737
 15484   300009  FF                 	db	255
 15485                           
 15486                           ;Config register CONFIG6L @ 0x30000A
 15487                           ;	unspecified, using default values
 15488                           ;	Table Read Protection Block 0
 15489                           ;	EBTR0 = 0x1, unprogrammed default
 15490                           ;	Table Read Protection Block 1
 15491                           ;	EBTR1 = 0x1, unprogrammed default
 15492                           ;	Table Read Protection Block 2
 15493                           ;	EBTR2 = 0x1, unprogrammed default
 15494                           ;	Table Read Protection Block 3
 15495                           ;	EBTR3 = 0x1, unprogrammed default
 15496                           ;	Table Read Protection Block 4
 15497                           ;	EBTR4 = 0x1, unprogrammed default
 15498                           ;	Table Read Protection Block 5
 15499                           ;	EBTR5 = 0x1, unprogrammed default
 15500                           ;	Table Read Protection Block 6
 15501                           ;	EBTR6 = 0x1, unprogrammed default
 15502                           ;	Table Read Protection Block 7
 15503                           ;	EBTR7 = 0x1, unprogrammed default
 15504   30000A                     	org	3145738
 15505   30000A  FF                 	db	255
 15506                           
 15507                           ;Config register CONFIG6H @ 0x30000B
 15508                           ;	unspecified, using default values
 15509                           ;	Boot Block Table Read Protection bit
 15510                           ;	EBTRB = 0x1, unprogrammed default
 15511   30000B                     	org	3145739
 15512   30000B  FF                 	db	255
 15513                           tosu	equ	0xFFF
 15514                           tosh	equ	0xFFE
 15515                           tosl	equ	0xFFD
 15516                           stkptr	equ	0xFFC
 15517                           pclatu	equ	0xFFB
 15518                           pclath	equ	0xFFA
 15519                           pcl	equ	0xFF9
 15520                           tblptru	equ	0xFF8
 15521                           tblptrh	equ	0xFF7
 15522                           tblptrl	equ	0xFF6
 15523                           tablat	equ	0xFF5
 15524                           prodh	equ	0xFF4
 15525                           prodl	equ	0xFF3
 15526                           indf0	equ	0xFEF
 15527                           postinc0	equ	0xFEE
 15528                           postdec0	equ	0xFED
 15529                           preinc0	equ	0xFEC
 15530                           plusw0	equ	0xFEB
 15531                           fsr0h	equ	0xFEA
 15532                           fsr0l	equ	0xFE9
 15533                           wreg	equ	0xFE8
 15534                           indf1	equ	0xFE7
 15535                           postinc1	equ	0xFE6
 15536                           postdec1	equ	0xFE5
 15537                           preinc1	equ	0xFE4
 15538                           plusw1	equ	0xFE3
 15539                           fsr1h	equ	0xFE2
 15540                           fsr1l	equ	0xFE1
 15541                           bsr	equ	0xFE0
 15542                           indf2	equ	0xFDF
 15543                           postinc2	equ	0xFDE
 15544                           postdec2	equ	0xFDD
 15545                           preinc2	equ	0xFDC
 15546                           plusw2	equ	0xFDB
 15547                           fsr2h	equ	0xFDA
 15548                           fsr2l	equ	0xFD9
 15549                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    0
    Data        9
    BSS         381
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    113     158
    BANK1           256    112     216
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[35]), STR_1(CODE[37]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[35]), STR_1(CODE[37]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[35]), STR_1(CODE[37]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2715$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[35]), STR_1(CODE[37]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2631$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2631$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               114   114      0  408204
                                            111 BANK0      2     2      0
                                              0 BANK1    112   112      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9201
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             33    15     18   36181
                                             80 BANK0     31    13     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   35674
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   35321
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29475
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  158658
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   25733
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   25733
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    7050
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   19139
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8872
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   25733
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    9049
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    9707
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   25733
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    9049
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    7050
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    9482
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3937
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   24299
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4408
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _TurnDelay
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _TurnDelay
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _ReverseYellow
       _ForwardOneBlock
       _reverseDetect
       _turnRight45
     _reverseDetect
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     70      D8       7       84.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     71      9E       5       98.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      42        0.0%
BITBIGSFRllllhh     37      0       0      44        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRllllll     20      0       0      47        0.0%
BITBIGSFRllllll     1E      0       0      49        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhlh       13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRllllll      F      0       0      57        0.0%
BITBIGSFRhhllh       E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      9      0       0      56        0.0%
BITBIGSFRllllhl      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      41        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRhhlll       1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllhh       1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C5      60        0.0%
DATA                 0      0     2C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Mar 12 21:19:34 2023

               _color_read_Red 5C4E                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5BFE                   ___fldiv@sign 0042                _color_read_Blue 5CEE  
                           l51 5C4C                             l60 5D3C                             l45 5B08  
                           l54 5C9C                             l63 5802                             l48 6138  
                           l57 5CEC                             l66 38C6                             l76 192C  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 430A  
             _color_read_Green 5C9E                readColours@vals 000C              ??_Interrupts_init 0001  
                          l200 6176                            l140 60A4                            l212 618E  
                          l143 60A6                            l152 61A4                            l161 5EE8  
                          l209 617A                            l146 60CC                            l218 607A  
                          l155 61AE                            l411 2884                            l420 2912  
                          l149 61B8                            l158 619A                            l256 61C6  
                          l601 437E                            l522 53FE                            l506 52C2  
                          l514 5224                            l530 50DC                            l610 44CE  
                          l602 43F2                            l611 44E8                            l603 4462  
                          l700 6118                            l604 442A                            l541 6030  
                          l550 5DD8                            l544 604A                            l553 5910  
                          l609 447E                            l562 596A                            l538 5360  
                          l547 5D8A                            l571 5FA4                            l492 4990  
                          l556 58B6                            l580 5BAC                            l485 5486  
                          l389 2400                            l574 5740                            l814 4824  
                          l583 5A64                            l559 585C                            l568 5F66  
                          l592 4F7C                            l577 5B5A                            l665 3E78  
                          l498 5586                            l586 5AB6                            l691 60F2  
                          l595 5032                            l659 3E6E                            l827 4AF4  
                          l589 5508                            l694 5FFE                            l598 4498  
                          l599 4328                            l688 6158                            l697 6014  
                          l970 4CFE                            l965 4CB8                            l974 5FDC  
                          l959 5186                            l997 4BFA                            _abs 5EEA  
                          _pad 5588                            _rel 01B0                            wreg 000FE8  
                 ___flmul@aexp 0022                   ___flmul@bexp 0023                   ___flmul@sign 001D  
                 ___flmul@temp 0028                   ___flmul@prod 0024                   ___fltol@exp1 000A  
              Colour_decider@i 007A                           ?_abs 0013                           l1230 2AB8  
                         l1321 3090                           l1314 2E9A                           l1410 55AA  
                         l1331 31C0                           l1323 3108                           l1324 30F6  
                         l1228 2B04                           l1245 2C1E                           l1237 2DD4  
                         l1229 2AF2                           l1421 3F0E                           l1318 31FE  
                         l1254 2CEE                           l1270 5E1E                           l1414 5600  
                         l1422 3F54                           l1255 2CDC                           l1191 566C  
                         l4001 2B46                           l1433 40F6                           l1282 3598  
                         l1362 45D8                           l1514 59C0                           l4011 2B80  
                         l4003 2B54                           l1355 4540                           l1419 3F06  
                         l1284 33F8                           l1532 5F28                           l1524 4DFC  
                         l1444 2326                           l1293 343E                           l4021 2BEC  
                         l4013 2B82                           l4005 2B62                           l4101 5624  
                         l1541 424C                           l1358 469C                           l1198 5674  
                         l1295 34B6                           l1287 33BC                           l4031 2C44  
                         l4023 2BEE                           l4015 2B8C                           l4007 2B6E  
                         l4111 565E                           l4103 562C                           l1447 1CC0  
                         l1296 34A4                           l1552 56DA                           l4041 2C72  
                         l4025 2BFE                           l4009 2B72                           l4017 2B92  
                         l1369 4634                           l4113 5660                           l4105 563A  
                         l4201 4A1C                           l1529 5F20                           l4121 5E82  
                         l5001 222C                           l1449 1B06                           l1570 4EC6  
                         l1538 4308                           l1378 5A12                           l4043 2C80  
                         l4035 2C58                           l4051 2C9E                           l4019 2BB8  
                         l4027 2C0E                           l4115 5666                           l4107 5640  
                         l4131 48AA                           l4211 4A9E                           l4203 4A30  
                         l4123 5E86                           l5011 2282                           l5003 2230  
                         l1492 3BCC                           l4301 33E6                           l4221 3200  
                         l4045 2C88                           l4037 2C62                           l4029 2C34  
                         l4053 2CAC                           l4109 5656                           l4133 48AE  
                         l4125 4826                           l4141 469E                           l4205 4A3E  
                         l4213 4AA4                           l1581 61C4                           l4117 5E64  
                         l1549 56CA                           l5021 22FE                           l5013 22B2  
                         l5005 224E                           l1477 2108                           l5101 3920  
                         l1558 5BFC                           l4311 342E                           l4303 33F6  
                         l4231 323C                           l4223 320C                           l4063 2CFE  
                         l4071 2D54                           l4055 2CB0                           l4047 2C8C  
                         l4039 2C70                           l4135 48F0                           l4127 4842  
                         l5031 6192                           l4151 46E2                           l4143 46A2  
                         l4215 4AB4                           l4207 4A6C                           l4119 5E70  
                         l5023 2306                           l5015 22C0                           l5007 226A  
                         l5111 39E6                           l5103 3940                           l4321 346E  
                         l4313 343C                           l4305 3408                           l4241 326C  
                         l4233 324C                           l4225 321A                           l4401 2EDA  
                         l4081 2DA6                           l4073 2D64                           l4065 2D0A  
                         l4057 2CBE                           l4049 2C9C                           l4137 490C  
                         l4129 4896                           l5033 6196                           l5041 61A0  
                         l5201 5CE4                           l4161 4738                           l4153 4702  
                         l4145 46B0                           l4217 4AD4                           l4209 4A8C  
                         l5017 22D8                           l5009 2272                           l5113 39F6  
                         l5105 3960                           l6001 2888                           l1578 5EA6  
                         l4331 34E0                           l4323 349C                           l4307 341E  
                         l4315 344E                           l4251 32A2                           l4243 3272  
                         l4235 324E                           l4227 321C                           l4411 2F2A  
                         l4403 2EE4                           l4091 2DC4                           l4083 2DAC  
                         l4075 2D74                           l4067 2D18                           l4059 2CD4  
                         l4139 4950                           l5027 61B0                           l5035 61A6  
                         l5051 5EE4                           l5043 5EAA                           l5211 617A  
                         l4171 47BA                           l4163 474C                           l4155 4706  
                         l4147 46D0                           l1587 5E62                           l5019 22E8  
                         l5115 3A0C                           l5123 3A24                           l5107 39B6  
                         l6003 28A4                           l4341 3558                           l4333 350A  
                         l4317 345C                           l4309 3424                           l4261 32E2  
                         l4253 32B2                           l4245 3280                           l4229 322C  
                         l4237 3256                           l4501 514A                           l4421 2F6C  
                         l4413 2F36                           l4405 2EFA                           l4085 2DAE  
                         l4077 2D94                           l4069 2D52                           l5029 61B4  
                         l5037 61AA                           l5221 5F68                           l5061 5FFA  
                         l5053 5EE6                           l5045 5EAE                           l5205 5CEE  
                         l5213 618A                           l4181 4804                           l4173 47BC  
                         l4165 475A                           l4157 4712                           l4149 46D4  
                         l5133 3AE2                           l5117 3A14                           l5125 3A56  
                         l5301 5996                           l6005 28F2                           l4351 358E  
                         l4343 3574                           l4327 34C6                           l4335 350E  
                         l4319 3460                           l4263 32F2                           l4271 3312  
                         l4255 32B4                           l4247 3282                           l4239 3266  
                         l4503 515A                           l4511 4BFC                           l4431 2FCE  
                         l4423 2F7C                           l4415 2F44                           l4407 2F06  
                         l4087 2DB4                           l4079 2D98                           l4095 5602  
                         l5071 5D8C                           l5063 5D3E                           l5311 5AC6  
                         l5223 5A66                           l5215 5F2A                           l5231 507C  
                         l5047 5EB6                           l5039 619C                           l5207 5D34  
                         l4175 47CE                           l4167 476C                           l4159 4730  
                         l4191 49C4                           l5143 3B5E                           l5135 3B0C  
                         l5127 3A7A                           l5119 3A1C                           l5303 59B6  
                         l6007 28FE                           l4345 3578                           l4337 3528  
                         l4329 34D2                           l4281 3350                           l4273 3322  
                         l4265 32FA                           l4249 3292                           l4257 32BC  
                         l4505 517E                           l4521 4C86                           l4513 4C2A  
                         l4441 3076                           l4433 2FEA                           l4425 2F96  
                         l4417 2F50                           l4409 2F1E                           l4361 2DE2  
                         l4089 2DC2                           l5401 11CE                           l4097 560A  
                         l5081 58CC                           l5241 585E                           l5073 5DA0  
                         l5065 5D52                           l5321 5AF6                           l5313 5AD6  
                         l5217 5A14                           l5057 5FDE                           l5233 5088  
                         l5225 5034                           l5049 5EBE                           l4169 479A  
                         l4177 47D4                           l4193 49C8                           l4185 4992  
                         l4601 5F04                           l5137 3B2C                           l5129 3AAE  
                         l5145 3B8E                           l4347 3586                           l4339 353E  
                         l4291 3398                           l4283 3360                           l4275 3322  
                         l4267 32FE                           l4259 32CC                           l4507 5184  
                         l4523 4C98                           l4515 4C3A                           l4451 30B2  
                         l4443 3080                           l4435 3014                           l4427 2FA6  
                         l4419 2F60                           l4371 2E22                           l4363 2DF0  
                         l5251 44EC                           l5411 13AC                           l5403 124A  
                         l4099 561C                           l5083 58E4                           l5243 5872  
                         l5075 5DAC                           l5067 5D5E                           l5331 5B00  
                         l5323 5AF8                           l5315 5AE0                           l5307 5AB8  
                         l5219 56DC                           l5059 5FEA                           l5227 5058  
                         l5235 50A0                           l4179 47E4                           l4195 49D6  
                         l4187 4996                           l4611 4D92                           l4603 4D00  
                         l5091 38C8                           l4349 358C                           l4293 33AC  
                         l4285 3370                           l4525 4CA6                           l4517 4C68  
                         l4461 3124                           l4453 30C0                           l4445 308E  
                         l4437 304A                           l4429 2FC2                           l4381 2E52  
                         l4373 2E28                           l4365 2DF2                           l3901 2942  
                         l5253 44FC                           l5501 17C4                           l5421 141C  
                         l5413 13DE                           l5405 12A6                           l4701 5556  
                         l5245 588A                           l5077 5DC0                           l5069 5D72  
                         l5181 6090                           l5173 607C                           l5333 5B02  
                         l5325 5AFA                           l5317 5AEA                           l5309 5ABC  
                         l5341 359A                           l5085 5804                           l5237 50B8  
                         l5229 5070                           l4197 49F6                           l4189 49A4  
                         l4533 5FA6                           l4541 4AF6                           l4621 4DF4  
                         l4605 4D20                           l5093 38F0                           l5149 3BA0  
                         ?_pad 0011                           l4295 33BA                           l4287 3380  
                         l4279 3336                           l4527 4CF6                           l4519 4C78  
                         l4471 318E                           l4463 3132                           l4455 30EE  
                         l4447 30A0                           l4439 3058                           l4391 2E8A  
                         l4383 2E54                           l4375 2E38                           l4367 2E02  
                         l4359 2DD6                           l3911 297C                           l3903 2952  
                         l5271 45C2                           l5263 457A                           l5255 450A  
                         l5511 182C                           l5431 148C                           l5423 144E  
                         l5407 1322                           l4703 556E                           l5079 58B8  
                         l4711 526E                           l5183 6092                           l5175 6086  
                         l5335 5B04                           l5327 5AFC                           l5319 5AF4  
                         l5351 37FA                           l5343 3666                           l5087 5818  
                         l5247 4EC8                           l5239 50D0                           l4199 4A14  
                         l4535 5FBC                           l4551 4B4C                           l4543 4B0C  
                         l4607 4D5E                           l4615 4D9E                           l4631 5694  
                         l6151 3AF6                           l5095 38FE                           l4297 33C6  
                         l4289 3388                           l4529 4CFC                           l4481 31E4  
                         l4473 31A8                           l4465 315C                           l4449 30AE  
                         l4393 2EAA                           l4385 2E64                           l4377 2E3E  
                         l4369 2E12                           l3921 29AA                           l3913 2982  
                         l3905 2962                           l5281 4642                           l5273 45CE  
                         l5265 4582                           l5257 4550                           l5513 185E  
                         l5433 14BE                           l5409 137A                           l5361 0EB8  
                         l4713 527A                           l4705 5226                           l4721 51AC  
                         l5177 608C                           l5185 611C                           l5337 5B06  
                         l5329 5AFE                           l5353 382E                           l5345 369A  
                         l5089 5830                           l5249 4F7E                           l5193 5C4E  
                         l4801 40D6                           l4537 5FCC                           l4553 4B5C  
                         l4617 4DB0                           l4609 4D86                           l4641 4190  
                         l4633 40F8                           l4625 5E20                           l6153 3B80  
                         l5097 390C                           l5601 430A                           l4299 33E4  
                         l4475 31C4                           l4483 31EA                           l4459 3118  
                         l4467 3160                           l4395 2EBA                           l4387 2E74  
                         l4379 2E44                           l3931 29DE                           l3923 29AC  
                         l3915 2994                           l3907 2964                           l4491 5DEA  
                         l5291 468A                           l5283 4644                           l5275 460A  
                         l5267 458E                           l5259 4566                           l5531 1918  
                         l5515 1898                           l5523 18D6                           l5451 1580  
                         l5435 14F8                           l5443 1536                           l5419 13EA  
                         l5371 0F2A                           l5363 0EEC                           l5355 0E52  
                         l4707 524A                           l4715 5292                           l4731 520C  
                         l4723 51C4                           l5179 608E                           l5347 372E  
                         l5195 5C94                           l5187 5BFE                           l5339 57A6  
                         l4563 4B86                           l4555 4B60                           l4547 4B20  
                         l4651 42AC                           l4635 4118                           l4627 5E30  
                         l4811 1952                           l5099 3910                           l5611 43D2  
                         l5603 430C                           l4485 31EE                           l4477 31D4  
                         l4469 317A                           l4389 2E84                           l3941 2A1A  
                         l3925 29BC                           l3933 29E6                           l3917 2996  
                         l3909 296C                           l5293 468C                           l5285 4648  
                         l5277 4616                           l5269 45C0                           l5509 17FA  
                         l5445 1574                           l5429 145A                           l5381 103C  
                         l5373 0F7C                           l5365 0F20                           l5357 0E7C  
                         l4741 5318                           l4733 52C4                           l4717 52AA  
                         l4709 5262                           l4725 51D0                           l5349 3762  
                         l5701 3D6C                           l5541 6164                           l5189 5C44  
                         l4581 4BEA                           l4573 4BAE                           l4565 4B90  
                         l4557 4B6E                           l4549 4B4A                           l4653 42C0  
                         l4645 4200                           l4637 416E                           l4629 5676  
                         l4661 5BAE                           l4901 1CF4                           l4821 199C  
                         l4813 1956                           l4805 192E                           l6149 3A38  
                         l5621 440C                           l5613 43EA                           l5605 432A  
                         l4495 50DE                           l4479 31E2                           l4399 2ECE  
                         l3951 2A2E                           l3943 2A1E                           l3935 29F6  
                         l3927 29CC                           l3919 299C                           l5287 466C  
                         l5279 4624                           l5535 1924                           l5455 158C  
                         l5391 10C0                           l5383 1042                           l5375 0FAE  
                         l5359 0E88                           l4735 52E8                           l4743 5330  
                         l4751 602A                           l4727 51DC                           l4719 5188  
                         l5711 3E42                           l5703 3D96                           l5543 6166  
                         l5199 5C9E                           l5551 604C                           l4591 55B6  
                         l4575 4BBA                           l4567 4B9A                           l4655 42E8  
                         l4647 423C                           l4639 4182                           l4663 5BC2  
                         l4671 5BE2                           l4911 1D42                           l4903 1CF8  
                         l4831 19EA                           l4823 19AC                           l4815 197A  
                         l4807 1934                           l5631 445C                           l5623 4424  
                         l5615 43EC                           l5607 4380                           l4497 510C  
                         l3961 2A42                           l3953 2A32                           l3945 2A22  
                         l3937 2A08                           l3929 29DC                           l4489 5DDA  
                         l5289 467C                           l5481 16BA                           l5457 15BE  
                         l5393 10D4                           l5385 105E                           l5377 0FB6  
                         l4681 539E                           l4745 5348                           l4737 5300  
                         l5721 54B4                           l5641 613A                           l4729 51F4  
                         l4673 60A6                           l5705 3DC2                           l5713 3E6E  
                         l5545 6170                           l5553 6050                           l3881 4E4A  
                         l3873 4DFE                           l4593 55CA                           l4585 5588  
                         l4761 3EDE                           l4753 3E7A                           l4577 4BCA  
                         l4657 42F8                           l4649 4270                           l4665 5BCE  
                         l4921 1DDA                           l4905 1D0A                           l4913 1D4A  
                         l4841 1A26                           l4833 19FC                           l4825 19B8  
                         l4817 1984                           l4809 1944                           l5297 596C  
                         l5625 4438                           l5617 4400                           l5609 43CE  
                         l5633 4462                           l5801 235A                           l4499 511C  
                         l3963 2A46                           l3955 2A36                           l3947 2A26  
                         l3939 2A16                           l3971 2A56                           l5483 16EC  
                         l5475 167C                           l5467 1632                           l5459 15F0  
                         l5395 1174                           l5387 10B4                           l5379 100A  
                         l4683 53AA                           l4691 550A                           l4739 530C  
                         l4747 6016                           l5723 54C8                           l5643 6142  
                         l4675 60B6                           l5651 60D0                           l5707 3DEC  
                         l5571 5400                           l5547 6172                           l5539 615A  
                         l5555 605E                           l3883 4E80                           l3875 4E10  
                         l4595 55CE                           l4587 5596                           l4771 3F3C  
                         l4763 3EFA                           l4755 3E9A                           l4579 4BDA  
                         l4667 5BD2                           l4931 1EBE                           l4923 1E32  
                         l4915 1D52                           l4907 1D18                           l4851 1A88  
                         l4843 1A30                           l4835 1A00                           l4827 19C0  
                         l4819 198C                           l5299 5978                           l5635 4470  
                         l5627 4442                           l5619 440A                           l5811 2364  
                         l5803 235C                           l3981 2AC6                           l3973 2A5A  
                         l3965 2A4A                           l3957 2A3A                           l3949 2A2A  
                         l3893 2916                           l5469 1670                           l5397 1184  
                         l4685 53B6                           l4677 5362                           l4693 550E  
                         l4749 601A                           l5725 54DC                           l5717 5488  
                         l5645 614C                           l5653 60D6                           l5709 3E18  
                         l5581 542E                           l5573 5412                           l5549 6174  
                         l5557 6062                           l3877 4E22                           l4597 55EC  
                         l4589 55A2                           l4781 3F6C                           l4773 3F48  
                         l4765 3F16                           l4757 3EAE                           l4669 5BDE  
                         l4941 1F58                           l4933 1EF0                           l4925 1E66  
                         l4917 1D62                           l4909 1D30                           l4853 1A8C  
                         l4837 1A06                           l4829 19C4                           l5661 59C2  
                         l5637 4480                           l5629 4444                           l5901 2562  
                         l5821 236E                           l5813 2366                           l5805 235E  
                         l3991 2AF0                           l3983 2AD2                           l3975 2A84  
                         l3967 2A4E                           l3959 2A3E                           l3895 2922  
                         l5495 172E                           l5479 1688                           l5399 11BC  
                         l3887 60F4                           l4679 5386                           l4687 53CE  
                         l4695 5526                           l5655 5912                           l5719 549C  
                         l5647 6156                           l5591 546C                           l5583 5432  
                         l5575 5414                           l4599 5EEA                           l3879 4E2C  
                         l4791 4078                           l4783 3FEE                           l4775 3F50  
                         l4767 3F26                           l4759 3EBE                           l4951 2030  
                         l4943 1F8C                           l4935 1F06                           l4919 1D76  
                         l4927 1E6C                           l4871 1B16                           l4855 1A92  
                         l4839 1A0E                           l4847 1A50                           l5663 59D4  
                         l5639 44D0                           l5911 25C4                           l5903 256A  
                         l5831 2380                           l5823 2370                           l5815 2368  
                         l5807 2360                           l3993 2B12                           l3985 2AD6  
                         l3977 2AA0                           l3969 2A52                           l3897 2930  
                         l5497 1760                           l3889 6110                           l4689 53E6  
                         l4697 5532                           l5657 5926                           l5673 5B0A  
                         l5649 60CE                           l5593 546E                           l5585 5456  
                         l5577 5416                           l4793 4096                           l4785 3FF4  
                         l4777 3F5C                           l4769 3F2C                           l4961 205A  
                         l4945 1FE2                           l4953 2034                           l4937 1F38  
                         l4929 1E8A                           l4881 1BFE                           l4873 1B1C  
                         l4857 1A9A                           l4849 1A76                           l4865 1AB6  
                         l5665 59DC                           l5921 260A                           l5913 25D8  
                         l5905 2570                           l5841 23A0                           l5833 2388  
                         l5825 2372                           l5817 236A                           l5809 2362  
                         l3995 2B22                           l3987 2AE4                           l3979 2AB0  
                         l3899 2932                           l5499 1792                           l4699 553E  
                         l5659 593E                           l5675 5B5C                           l5691 3C94  
                         l5683 3BE8                           l5595 5478                           l5587 5460  
                         l5579 5418                           l4795 40B0                           l4787 3FFA  
                         l4779 3F66                           l4971 2128                           l4963 2066  
                         l4955 2044                           l4947 1FE8                           l4939 1F48  
                         l4883 1C12                           l4891 1C8E                           l4875 1B50  
                         l4867 1AD0                           l5667 59E4                           l5931 2650  
                         l5923 261E                           l5915 25DC                           l5907 25A4  
                         l5851 23C4                           l5843 23A4                           l5835 2390  
                         l5827 2378                           l5819 236C                           l5771 2328  
                         l3989 2AE6                           l5693 3CC0                           l5685 3C16  
                         l5677 3BCE                           l5597 547A                           l5589 5462  
                         l4797 40C0                           l4789 405E                           l4981 215A  
                         l4973 2138                           l4965 20DE                           l4957 204C  
                         l4949 201C                           l4893 1CC8                           l4885 1C46  
                         l4877 1B8E                           l5669 5A00                           l5941 2696  
                         l5933 2664                           l5925 2622                           l5917 25E0  
                         l5909 25B0                           l5861 23E6                           l5853 23CC  
                         l5845 23AC                           l5837 2398                           l5829 237C  
                         l5781 2344                           l5773 232C                           l3999 2B36  
                         l5695 3CEA                           l5687 3C3E                           l5679 3BD6  
                         l5599 5484                           l4799 40C6                           l4991 218E  
                         l4983 215E                           l4975 213C                           l4967 20FE  
                         l4959 2052                           l4895 1CD8                           l4887 1C4E  
                         l4879 1BC0                           l5951 26DC                           l5943 26AA  
                         l5935 2668                           l5927 2626                           l5919 25F6  
                         l5871 2454                           l5863 240E                           l5855 23D0  
                         l5847 23B4                           l5839 239C                           l5791 2350  
                         l5783 2346                           l5775 2330                           l5697 3D16  
                         l5689 3C6A                           l4993 2192                           l4985 2164  
                         l4977 2142                           l4969 211A                           l4897 1CE4  
                         l5961 2722                           l5953 26F0                           l5945 26AE  
                         l5937 266C                           l5929 263C                           l5881 249A  
                         l5873 2460                           l5865 2428                           l5857 23D0  
                         l5849 23BC                           l5793 2352                           l5785 2348  
                         l5777 2334                           l5699 3D40                           l4995 2198  
                         l4979 214A                           l4987 216A                           l4899 1CEC  
                         l5971 2768                           l5963 2736                           l5955 26F4  
                         l5947 26B2                           l5939 2682                           l5891 2514  
                         l5883 24AE                           l5875 2474                           l5867 2430  
                         l5859 23E4                           l5795 2354                           l5787 234A  
                         l5779 2338                           l4997 21F0                           l4989 217C  
                         l5981 27AE                           l5973 277C                           l5965 273A  
                         l5957 26F8                           l5949 26C8                           l5893 251C  
                         l5885 24C2                           l5877 2492                           l5869 2440  
                         l5797 2356                           l5789 234C                           l4999 2224  
                         l5991 280E                           l5983 27B2                           l5975 2780  
                         l5967 273E                           l5959 270E                           l5895 2524  
                         l5887 24DE                           l5879 2496                           l5799 2358  
                         l5985 27C6                           l5993 2826                           l5977 2784  
                         l5969 2754                           l5897 252C                           l5889 24FA  
                         l5995 2838                           l5987 27DA                           l5979 279A  
                         l5899 2544                           l5997 284C                           l5989 2804  
                         l5999 2876                    GreenMove@mL 0020                    GreenMove@mR 0022  
                         STR_1 0E01                           STR_2 0E26                           STR_3 0E49  
                         STR_6 0E4D                           u3100 29AA                           u3020 4E10  
                         u3101 29A6                           u3021 4E0C                           u3110 29BC  
                         u3030 4E22                           u3111 29B8                           u3031 4E1E  
                         u4000 3104                           u3200 2B04                           u3120 29CC  
                         u3040 4E4A                   _BAUD4CONbits 000EE9                           u4001 3100  
                         u3201 2B00                           u3121 29C8                           u3041 4E46  
                         u4010 3118                           u3210 2B12                           u3130 2A08  
                         u3050 4E80                           u4011 3114                           u3211 2B0E  
                         u3131 2A04                           u3051 4E7C                           u4100 4C68  
                         u4020 3132                           u3300 2C70                           u3220 2B22  
                         u3140 2A16                           u3060 2930                           u4101 4C64  
                         u4021 312E                           u3301 2C6C                           u3221 2B1E  
                         u3141 2A12                           u3061 292C                           u4110 4C86  
                         u4030 317A                           u3310 2C80                           u3230 2B54  
                         u3150 2A84                           u3070 2942                           u4111 4C82  
                         u4031 3176                           u3311 2C7C                           u3231 2B50  
                         u3151 2A80                           u3071 293E                           u4120 4CA6  
                         u4040 31A8                           u3400 2D64                           u3320 2C9C  
                         u3240 2B62                           u3160 2A9C                           u3080 2952  
                         u5000 5ED2                           u4200 4BCA                           u4121 4CA2  
                         u4041 31A4                           u3401 2D60                           u3321 2C98  
                         u3241 2B5E                           u3161 2A96                           u3081 294E  
                         u5001 5ECA                           u4201 4BC6                           u4130 4CF6  
                         u4050 31E2                           u3410 2D74                           u3330 2CAC  
                         u3250 2B80                           u3170 2A9E                           u3090 2994  
                         u4210 4BDA                           _T2PR 000FBC                           u4131 4CF2  
                         u4051 31DE                           u3411 2D70                           u3331 2CA8  
                         u3251 2B7C                           u3091 2990                           u4211 4BD6  
                         u4060 510C                           u3420 2D94                           u3340 2CBE  
                         u3260 2BB8                           u3180 2AC6                           u5100 44FC  
                         u3500 490C                           u5020 6014                           u4220 5596  
                         u4140 5FBC                           u4300 4DEA                           u4061 5108  
                         u3421 2D90                           u3341 2CBA                           u3261 2BB4  
                         u3181 2AC2                           u5101 44F8                           u3501 4908  
                         u5021 6010                           u4221 5592                           u4141 5FB8  
                         u4301 4DE4                           u4070 514A                           u3430 2DA6  
                         u3350 2CD4                           u3270 2BFE                           u3190 2AE4  
                         u5110 450A                           u3510 46B0                           u4230 55EC  
                         u4150 4B0C                           u4310 4DEC                           u5030 38F0  
                         u4071 5146                           u3431 2DA2                           u3351 2CD0  
                         u3271 2BFA                           u3191 2AE0                           u5111 4506  
                         u3511 46AC                           u4231 55E8                           u4151 4B08  
                         u5031 38EC                           u4080 517E                           u3440 2DC2  
                         u3360 2CEA                           u3280 2C34                           u5120 4566  
                         u3520 46E2                           u3600 4A14                           u4240 5F04  
                         u4160 4B40                           u4400 423C                           u4320 5E62  
                         u5040 3940                           u5200 59B6                           u4081 517A  
                         u3441 2DBE                           u3361 2CE6                           u3281 2C30  
                         u5121 4562                           u3521 46DE                           u3601 4A10  
                         u4241 5F00                           u4401 4238                           u4321 5E5E  
                         u5041 393C                           u5201 59B2                           u4090 4C2A  
                         u3370 2CFE                           u3290 2C44                           u5130 45BC  
                         u3450 561C                           u5018 5ED4                           u3610 4A3E  
                         u4170 4B6E                           u4250 4D40                           u4410 4290  
                         u4330 5694                           u5050 3960                           u4091 4C26  
                         u3371 2CFA                           u3291 2C40                           u5131 45B8  
                         u5211 0E82                           u3451 5618                           u3531 470C  
                         u3611 4A3A                           u4171 4B6A                           u4331 5690  
                         u5051 395C                           u3700 32E2                           u3380 2D18  
                         u5140 4606                           u5300 13DE                           u5220 0F7C  
                         u3460 563A                           u4500 5586                           u3540 4730  
                         u3620 4A6C                           u4180 4B82                           u4260 4D5E  
                         u4420 42AC                           u4340 4140                           u5060 3A76  
                         u3701 32DE                           u3381 2D14                           u5141 4602  
                         u5301 13DA                           u5221 0F78                           u3461 5636  
                         u4501 5582                           u3541 472C                           u3621 4A68  
                         u4181 4B7E                           u4165 4B36                           u4261 4D5A  
                         u4421 42A8                           u5061 3A72                           u3710 3322  
                         u3390 2D52                           u5150 4624                           u5310 141C  
                         u5230 100A                           u3470 5656                           u4510 52AA  
                         u5070 618A                           u3550 475A                           u3630 4AB4  
                         u4190 4BAA                           u4270 4D86                           u4430 42E8  
                         u4350 416E                           u3711 331E                           u3391 2D4E  
                         u5151 4620                           u5311 1418                           u5231 1006  
                         u3471 5652                           u4511 52A6                           u5071 6186  
                         u3551 4756                           u3631 4AB0                           u4191 4BA6  
                         u4271 4D82                           u4255 4D36                           u4431 42E4  
                         u4415 4286                           u4351 416A                           u3800 349C  
                         u3720 3398                           u3640 321A                           u5160 4634  
                         u5400 162E                           u5320 144E                           u5240 105E  
                         u4520 52C2                           u5080 50B8                           u3560 479A  
                         u3480 5EA6                           u4600 3EBE                           u4280 4DB0  
                         u4360 4190                           u4440 5BFC                           u3801 3498  
                         u3721 3394                           u3641 3216                           u5161 4630  
                         u5401 162A                           u5321 144A                           u5241 105A  
                         u4521 52BE                           u5081 50B4                           u3561 4796  
                         u3481 5EA2                           u4601 3EBA                           u4281 4DAC  
                         u4361 418C                           u4345 4136                           u4441 5BF8  
                         u3810 34B2                           u3730 33BA                           u3650 322C  
                         u5170 4642                           u5410 1670                           u5330 148C  
                         u5250 10B4                           u3490 4842                           u4530 520C  
                         u4450 60B6                           u5090 50D0                           u3570 47E4  
                         u4610 3EFA                           u3811 34AE                           u3731 33B6  
                         u3651 3228                           u5171 463E                           u5411 166C  
                         u5331 1488                           u5251 10B0                           u3491 483E  
                         u4531 5208                           u4451 60B2                           u5091 50CC  
                         u3571 47E0                           u4611 3EF6                           u6107 444E  
                         u6027 23F2                           u3820 34C6                           u3740 33E4  
                         u3660 323C                           u3900 2E52                           u5180 467C  
                         u5500 185E                           u5420 16BA                           u5340 14BE  
                         u5260 10D4                           u4540 5224                           u4460 60CC  
                         u3580 49A4                           u4620 3F26                           u4380 41FC  
                         u4700 19AC                           u3821 34C2                           u3741 33E0  
                         u3661 3238                           u3901 2E4E                           u5181 4678  
                         u5501 185A                           u5421 16B6                           u5341 14BA  
                         u5261 10D0                           u4541 5220                           u4461 60C8  
                         u3581 49A0                           u4621 3F22                           u4381 41F8  
                         u4701 19A8                           u6117 448A                           u6037 241A  
                         u3830 34E0                           u3750 3408                           u3670 3280  
                         u3910 2E64                           u5190 468A                           u5510 1898  
                         u5430 16EC                           u5350 14F8                           u5270 1184  
                         u4470 53E6                           u4550 5348                           u3590 49D6  
                         u4630 3F3C                           u4390 4220                           u4710 19EA  
                         u3831 34DC                           u3751 3404                           u3671 327C  
                         u3911 2E60                           u5191 4686                           u5511 1894  
                         u5431 16E8                           u5351 14F4                           u5271 1180  
                         u4471 53E2                           u4551 5344                           u6207 54A6  
                         u3591 49D2                           u4631 3F38                           u4295 4DC2  
                         u4375 41A4                           u4711 19E6                           u6127 44DA  
                         u6047 24CE                           u3840 3528                           u3760 341E  
                         u3680 3292                           u3920 2E74                           u5520 18D2  
                         u5440 172A                           u5360 1532                           u5280 11CE  
                         u4480 53FE                           u4560 5360                           u4640 4078  
                         u4376 41AE                           u4800 1CC0                           u4720 19FC  
                         u5600 43CE                           u3841 3524                           u3761 341A  
                         u3681 328E                           u3921 2E70                           u5521 18CE  
                         u5441 1726                           u5361 152E                           u5281 11CA  
                         u4481 53FA                           u4561 535C                           u6217 54E6  
                         u6137 5092                           u4641 4074                           u4377 41BE  
                         u4801 1CBC                           u4721 19F8                           u5601 43CA  
                         u6057 2538                           u3850 3558                           u3770 343C  
                         u3690 32A2                           u3930 2EAA                           u5530 1914  
                         u5450 1760                           u5370 1574                           u5290 13AC  
                         u4490 556E                           u4570 604A                           u4650 4096  
                         u4810 1CD8                           u4730 1A76                           u5610 4400  
                         u3851 3554                           u3771 3438                           u3691 329E  
                         u3931 2EA6                           u5531 1910                           u5451 175C  
                         u5371 1570                           u5291 13A8                           u4491 556A  
                         u6307 5930                           u4571 6046                           u6227 5DCA  
                         u6147 5FF0                           u4651 4092                           u4395 4216  
                         u4811 1CD4                           u4731 1A72                           u5611 43FC  
                         u6067 4316                           u3860 3586                           u3780 345C  
                         u3940 2EBA                           u5460 1792                           u5380 15BE  
                         u5700 3C94                           u5540 607A                           u4660 40B0  
                         u4580 3EAA                           u4900 2030                           u4820 1D0A  
                         u4740 1A88                           u5620 4438                           u3861 3582  
                         u3781 3458                           u3941 2EB6                           u5461 178E  
                         u5381 15BA                           u6317 595C                           u6237 5284  
                         u6157 5822                           u5701 3C90                           u5541 6076  
                         u4661 40AC                           u4581 3EA4                           u4901 202C  
                         u4821 1D06                           u4741 1A84                           u5621 4434  
                         u6077 438A                           u3790 346E                           u3950 3034  
                         u3870 2DF0                           u5470 17C4                           u5390 15F0  
                         u5710 3CEA                           u4670 40C0                           u4590 3EAC  
                         u4910 20DE                           u4830 1D18                           u4750 1B02  
                         u5630 4470                           u3791 346A                           u3871 2DEC  
                         u5471 17C0                           u5391 15EC                           u6327 5548  
                         u6247 6020                           u6167 584E                           u5711 3CE6  
                         u4671 40BC                           u4911 20DA                           u4831 1D14  
                         u4751 1AFE                           u5631 446C                           u6087 43DC  
                         u3960 308E                           u3880 2E02                           u5480 17F6  
                         u5720 3D40                           u4920 211A                           u4840 1D42  
                         u4760 1B8E                           u4680 1952                           u5640 447E  
                         u3961 308A                           u3881 2DFE                           u5481 17F2  
                         u6337 53C0                           u6257 587C                           u6177 5ACC  
                         u5721 3D3C                           u4921 2116                           u4841 1D3E  
                         u4761 1B8A                           u4681 194E                           u5641 447A  
                         u6097 4416                           u3970 30AE                           u3890 2E12  
                         u5490 182C                           u5730 3D96                           u4930 2128  
                         u4850 1E8A                           u4770 1BC0                           u4690 199C  
                         u5650 44A8                           u5810 240E                           u3971 30AA  
                         u3955 302A                           u3891 2E0E                           u5491 1828  
                         u6267 58A8                           u6187 5D7C                           u5731 3D92  
                         u4931 2124                           u4851 1E86                           u4771 1BBC  
                         u4691 1998                           u5651 44A2                           u5811 240A  
                         u3980 30C0                           u5740 3DEC                           u4940 217C  
                         u4860 1EF0                           u4780 1BFE                           u5660 44BC  
                         u5652 44AA                           u5580 43A8                           u5900 2722  
                         u5820 2492                           u3981 30BC                           u6277 58D6  
                         u6197 51E6                           u5741 3DE8                           u4941 2178  
                         u4861 1EEC                           u4781 1BFA                           u5661 44B6  
                         u5581 43A2                           u5901 271E                           u5821 248E  
                         u3990 30EE                           u5750 3E42                           u4950 224E  
                         u4870 1F38                           u4790 1C8A                           u5670 44CE  
                         u5662 44BE                           u5590 43BC                           u5582 43AA  
                         u5910 2768                           u5830 2514                           u3991 30EA  
                         u6287 5902                           u5751 3E3E                           u4951 224A  
                         u4871 1F34                           u4791 1C86                           u5671 44CA  
                         u5591 43B6                           u5911 2764                           u5831 2510  
                         u5680 3BE4                           u4960 226A                           u4880 1F48  
                         u5592 43BE                           u5920 27AE                           u5840 2562  
                         u6297 5322                           u5681 3BE0                           u4961 2266  
                         u4881 1F44                           u5921 27AA                           u5841 255E  
                         u5690 3C3E                           u4970 22D2                           u4890 1FE2  
                         u5930 27C6                           u5850 25C4                           u5691 3C3A  
                         u4971 22CC                           u4891 1FDE                           u5931 27C2  
                         u5851 25C0                           u4980 22D4                           u5940 2838  
                         u5860 260A                           u5941 2834                           u5861 2606  
                         u4990 22E8                           u5950 2912                           u5870 2650  
                         u4991 22E4                           u5951 290E                           u5871 264C  
                         u5880 2696                           u5881 2692                           u5890 26DC  
                         u5891 26D8                  _LightBlueMove 5A66                           abs@a 0013  
                         _dbuf 02A0                           _labs 5676                           _main 2328  
                         _dtoa 3E7A                           _prec 00EF                           _vals 01CE  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           _stop 550A  
                ___fpclassifyf 4D00                           prodh 000FF4                           prodl 000FF3  
                         start 0000                ___fldiv@new_exp 0043         __end_of_color_read_Red 5C9E  
       __end_of_color_read_lum 5C4E                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 5F68                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 5D3E  
              _RunOneBlockTime 00F7                  ___fltol@sign1 0009                __end_of___aodiv 4826  
                        ?_labs 0001                __end_of___fladd 2DD6                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 4AF6                __end_of___fldiv 359A  
              __end_of___flneg 5FDE                __end_of___flmul 3200                __end_of___flsub 5E20  
              __end_of___fltol 4BFC                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 5676                   vfpfcnvrt@fmt 0097                          _TMR0H 000FD4  
                        _TMR0L 000FD3                __end_of_go_Home 3E7A        __end_of_sendCharSerial4 6190  
   __end_of_I2C_2_Master_Start 61BA     __end_of_I2C_2_Master_Write 619C                   YellowMove@mL 0020  
                        _flags 00F3                   YellowMove@mR 0022                          _fputc 4DFE  
                        _fputs 5E64                 delayed_ms@time 0001                          labs@a 0001  
                        pad@fp 0011                          _power 00FB                          _width 00ED  
                        _putch 61C4                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 0020                          tablat 000FF5  
             ??_Colour_decider 004F                          status 000FD8                __end_of_sprintf 5A14  
               ?___fpclassifyf 0001        __end_of_color_read_Blue 5D3E          _I2C_2_Master_RepStart 619C  
             __end_of_BlueMove 5742                     PinkMove@mL 0020                     PinkMove@mR 0022  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 5742  
      __end_of_turnCalibration 44EA                _reverseOneBlock 585E                   __end_of_labs 56DC  
                 __end_of_main 2916                   __end_of_dtoa 40F8                   __end_of_stop 5588  
              _colour_rel$3144 0064                _colour_rel$3145 0068                         ??_labs 0005  
                       ??_main 00CF                         ??_dtoa 0026          __end_of_ReverseYellow 4F7E  
             __end_of_PinkMove 5BAE                         ??_stop 0018                  __activetblptr 000003  
            Colour_decider@Hue 007C              Colour_decider@rel 004D                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         ?_fputs 000A                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         _RG6PPS 000E88  
     __end_of_color_click_init 5B0A                         _RX4PPS 000E15                         _TX4REG 000EE4  
                   _OrangeMove 5A14               __end_of___xxtofl 469E                      ??_RedMove 0024  
                ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE  
                ??_ReversePink 0024                         ___flge 4BFC                         ___fleq 50DE  
                    ??___aodiv 0011                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 60F4              ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C  
                    ??___fldiv 003A                      ??___flneg 0005                      ??___flmul 0019  
                    ??___flsub 0032                      ??___fltol 0005                         _efgtoa 192E  
                    ??___lwdiv 000B                         _floorf 40F8                         _memcpy 5BAE  
                       clear_0 5780                         clear_1 578C                         clear_2 5798  
                       _motorL 01C5                         _motorR 01BC                         isa$std 000001  
                    ??_go_Home 0028                         pad@buf 0013                         dtoa@fp 001C  
                       _strcpy 5E20                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                ___fpclassifyf@e 0009  
              ___fpclassifyf@u 000B                ___fpclassifyf@x 0001                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C  
                       putch@c 0001                ??_LightBlueMove 0024               __end_of_vfprintf 59C2  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 005F               __end_of_turnLeft 52C4                     ___flge@ff1 002A  
                   _YellowMove 5B0A                     ___flge@ff2 002E                ??___fpclassifyf 0005  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
                   ___fleq@ff1 0032                     ___fleq@ff2 0036                fullSpeedBack@mL 0014  
              fullSpeedBack@mR 0016                     __accesstop 0060        __end_of__initialization 57A0  
      __end_of_reverseOneBlock 58B8                     ___flneg@f1 0001       __end_of_color_read_Green 5CEE  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                _Interrupts_init 61C6                 __pcstackCOMRAM 0001  
             ?_turnCalibration 0020                  _fullSpeedBack 52C4                   __pidataBANK0 61BA  
                 __pidataBANK1 61C1                  __end_of_fputc 4EC8                  __end_of_fputs 5EA8  
                __end_of_putch 61C6              __end_of_GreenMove 5FA6            __end_of_Timer0_init 615A  
          __end_of_ReversePink 5034                      ?_BlueMove 0020                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14357 0170          __end_of_reverseDetect 5912  
                      ??_putch 0001                     __pbssBANK0 00D1                     __pbssBANK1 0170  
                   __pbssBANK2 0200                reverseDetect@mL 001A                reverseDetect@mR 001C  
                  ?_OrangeMove 0020               _Forwardhalfblock 5912                     _getTMR0val 60CE  
            __end_of_RetryMove 550A                      ?_PinkMove 0020              _color_writetoaddr 611A  
                   _delayed_ms 5FDE                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 002A                        ?___fleq 0032             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                        ?_efgtoa 0060  
                      ?_floorf 004B                   ?_turnRight45 001A                        ?_memcpy 0001  
            __end_of_TurnDelay 604C          __end_of_timed_forward 50DE            ??_color_writetoaddr 0004  
                      ?_strcpy 0001                  colour_rel@rel 004D                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 359A  
      __end_of_Interrupts_init 61C8         color_writetoaddr@value 0003               ??_color_read_Red 0007  
             main@consecuitive 016A               ??_color_read_lum 0007               ?_reverseOneBlock 001A  
    __end_of_color_writetoaddr 613A                        _RedMove 5F2A             _I2C_2_Master_Start 61B0  
                   ??_PinkMove 0024                     _initUSART4 615A             _I2C_2_Master_Write 6190  
                      __Hparam 0000                        _WayBack 017E                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 613A                    RetryMove@mL 001A  
                  RetryMove@mR 001C        sendStringSerial4@string 0002              reverseOneBlock@mL 001A  
            reverseOneBlock@mR 001C                    _ReversePink 4F7E                        ___aodiv 469E  
                      ___fladd 2916                        ___aomod 4992                        ___fldiv 3200  
                      ___flneg 5FA6                        ___flmul 2DD6                        ___flsub 5DDA  
                      ___fltol 4AF6            ?_I2C_2_Master_Start 0001                        ___lwdiv 5602  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8                   __psmallconst 0E00  
                 turnLeft45@mL 001A                   turnLeft45@mR 001C                        __pcinit 5742  
                      __ramtop 0E00                      ?_turnLeft 0014                        _go_Home 3BCE  
                      __ptext0 2328                        __ptext1 430A                        __ptext2 59C2  
                      __ptext3 596C                        __ptext4 38C8                        __ptext5 192E  
                      __ptext6 5E20                        __ptext7 5BAE                        __ptext8 5676  
                      __ptext9 40F8                      _T2CONbits 000FBD                     ??___xxtofl 0005  
               main@lost_count 0168                      _T2HLTbits 000FBE                        efgtoa@c 0066  
                      efgtoa@d 0074                        efgtoa@e 0078                        efgtoa@f 0062  
                      efgtoa@g 008D                        efgtoa@h 0082                        efgtoa@i 0080  
                      efgtoa@l 0086                        efgtoa@m 0076                        efgtoa@n 008B  
                      efgtoa@p 006B                        efgtoa@t 006D                        efgtoa@u 0091  
                      efgtoa@w 007A                  _RxBufWriteCnt 00F6              color_read_lum@tmp 000A  
                      main@buf 0100                        _sprintf 59C2           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 57A0                        floorf@e 0059  
                      floorf@m 0055                        floorf@u 005B                        floorf@x 004B  
                      memcpy@d 0007                        memcpy@n 0005                        memcpy@s 0009  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
                  ?_getTMR0val 0001                LightBlueMove@mL 0020                LightBlueMove@mR 0022  
              ??_fullSpeedBack 0018             ??_color_click_init 0005                     _move_count 017C  
                  ?_delayed_ms 0001              turnCalibration@mL 0020              turnCalibration@mR 0022  
            __end_of_vfpfcnvrt 3BCE                     efgtoa@mode 0072                     efgtoa@sign 008A  
                      postdec1 000FE5                        postdec2 000FDD                    _Turn45Delay 00F9  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 009D                     ??_vfprintf 005F                        strcpy@d 0007  
                      strcpy@s 0005                _initDCmotorsPWM 5400                     ??_turnLeft 0018  
                    _PORTFbits 000F8E             setMotorPWM@negDuty 0013              __end_of_turnRight 5226  
                  ___fladd@grs 0010                  ___xxtofl@sign 0009                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ___fldiv@grs 0045                    ___fldiv@rem 003E  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016                  ReversePink@mL 0020  
                ReversePink@mR 0022       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 004B               ?_Interrupts_init 0001                    ___flmul@grs 001E  
                  _CCP1CONbits 000FAB                     main@colour 016C                   _EUSART4RXbuf 00D1  
                 _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0001                      RedMove@mL 0020                      RedMove@mR 0022  
           ??_color_read_Green 0007                     _turnLeft45 5D8C                 __end_of___flge 4D00  
               __end_of___fleq 5188                 _fullSpeedAhead 5362                    vfpfcnvrt@ap 0099  
                  vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095                 __end_of___wmul 611A  
               __end_of_efgtoa 2328                 __end_of_floorf 430A                 __end_of_memcpy 5BFE  
                   floorf@F526 00E5       __end_of_Forwardhalfblock 596C                      _GreenMove 5F68  
               __end_of_strcpy 5E64            start_initialization 5742                    __end_of_abs 5F2A  
                  __end_of_pad 5602                  _TxBufWriteCnt 005F          __end_of_LightBlueMove 5AB8  
                 ??_OrangeMove 0024          __end_of___fpclassifyf 4DFE            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 5488                    vfprintf@fmt 00AA         __end_of_fullSpeedAhead 5400  
                     ??___flge 0032                       ??___fleq 003A                      _RetryMove 5488  
                     ??___wmul 0005            go_Home@Time_forward 0026                  ??_readColours 000E  
                     ??_efgtoa 0067                    __pdataBANK0 00F7                    __pdataBANK1 01D6  
              _ForwardOneBlock 5804                       ??_floorf 004F                       ??_memcpy 0007  
                     ??_strcpy 0005                      ___fladd@a 0005                      ___fladd@b 0001  
                _ReverseYellow 4EC8                      ___fldiv@a 0036                      ___fldiv@b 0032  
                   ?_GreenMove 0020                   OrangeMove@mL 0020                   OrangeMove@mR 0022  
           __end_of_OrangeMove 5A66                      ___flmul@a 0015                      ___flmul@b 0011  
                  __pbssCOMRAM 005F                      ___flsub@a 002E                      ___flsub@b 002A  
                    _TurnDelay 6016                  __pcstackBANK0 0060                  __pcstackBANK1 0100  
             ___aodiv@dividend 0001                   ??_YellowMove 0024          Colour_decider@RGB_col 0066  
                     ?_RedMove 0020                    _efgtoa$2774 006F               ___lwdiv@dividend 0007  
                    _dtoa$2743 002E                   ?_Timer0_init 0001                    ?_turnLeft45 001A  
              ?_fullSpeedAhead 0014                   ?_ReversePink 0020                     ?_RetryMove 001A  
              timed_forward@mL 0014                       ?___aodiv 0001                timed_forward@mR 0016  
                     ?___fladd 0001                       ?___aomod 0001                       ?___fldiv 0032  
             ___aodiv@quotient 0013                       ?___flneg 0001                       ?___flmul 0011  
                     ?___flsub 002A                       ?___fltol 0001            _Colour_decider$3146 0060  
                     ?___lwdiv 0007                main@colour_1291 0166                       ?_go_Home 0024  
         I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020             __end_of_YellowMove 5B5C  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              timed_forward@time 0018  
          __end_of_readColours 5804              _I2C_2_Master_Idle 60A6              _I2C_2_Master_Init 607C  
            _I2C_2_Master_Read 5EA8              _I2C_2_Master_Stop 61A6                     ?_TurnDelay 0001  
                 _RxBufReadCnt 00F5             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0  
             getTMR0val@moving 0001                 colour_rel@vals 004B              _sendStringSerial4 604C  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _LATHbits 000F80                   ??_getTMR0val 0001             ?_sendStringSerial4 0002  
                     _PIE4bits 000E2D        __end_of_ForwardOneBlock 585E                   ??_delayed_ms 0003  
                  turnRight@mL 0014                    turnRight@mR 0016                      _lost_flag 00F1  
                     _PIR4bits 000E37               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA                 _Colour_decider 0E52            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 38C8      __end_of_I2C_2_Master_Idle 60CE  
    __end_of_I2C_2_Master_Init 60A6      __end_of_I2C_2_Master_Read 5EEA              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 61B0                   setMotorPWM@m 000E                       _DataFlag 00FD  
  I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024              ??_color_read_Blue 0007  
           __end_of_getTMR0val 60F4                   _TxBufReadCnt 00F4                       _BlueMove 56DC  
                    _turnRight 5188             __end_of_delayed_ms 6016                     vfpfcnvrt@c 00A5  
            ??_turnCalibration 0024                      copy_data0 576E      __end_of_sendStringSerial4 607C  
                 ??_colour_rel 004F                  _reverseDetect 58B8  __end_of_I2C_2_Master_RepStart 61A6  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 4992                   ??_initUSART4 0001  
                     _PinkMove 5B5C                       __Hrparam 0000         __end_of_Colour_decider 192E  
                    memcpy@tmp 000B                     vfprintf@ap 00AC                       __Lrparam 0000  
                   vfprintf@fp 00A8          __end_of_fullSpeedBack 5362                    ??_RetryMove 001E  
         TurnDelay@Turn45Delay 0001                    _readColours 57A6                ??_ReverseYellow 0024  
                   ?_vfpfcnvrt 0095                ___aodiv@divisor 0009                ___aodiv@counter 0011  
           __end_of_colour_rel 38C8                     _ANSELDbits 000EA7             ___fpclassifyf@F465 00E9  
                   _ANSELFbits 000EB4                  _timed_forward 5034                     sprintf@fmt 00B2  
            ?_Forwardhalfblock 001A                       ___xxtofl 44EA                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                    ??_TurnDelay 0003                   _Time_forward 023C  
              ___lwdiv@divisor 0009             __end_of_initUSART4 6178                ___lwdiv@counter 000D  
           ??_Forwardhalfblock 001E                     ?_turnRight 0014                       __ptext10 4D00  
                     __ptext11 4AF6                       __ptext20 469E                       __ptext12 5FA6  
                     __ptext21 604C                       __ptext13 3E7A                       __ptext30 615A  
                     __ptext22 6178                       __ptext14 5588                       __ptext31 5400  
                     __ptext23 57A6                       __ptext15 5E64                       __ptext40 5A66  
                     __ptext32 3BCE                       __ptext24 5BFE                       __ptext16 4DFE  
                     __ptext41 5F68                       __ptext33 5034                       __ptext25 5C4E  
                     __ptext17 61C4                       __ptext50 60A6                       __ptext42 56DC  
                     __ptext34 5FDE                       __ptext26 5C9E                       __ptext18 5EEA  
                     __ptext51 607C                       __ptext43 60CE                       __ptext35 4EC8  
                     __ptext27 5CEE                       __ptext19 4992                       __ptext60 6016  
                     __ptext52 5B0A                       __ptext44 359A                       __ptext36 4F7E  
                     __ptext28 619C                       __ptext61 585E                       __ptext53 5D3E  
                     __ptext45 5AB8                       __ptext37 5804                       __ptext29 5EA8  
                     __ptext70 5602                       __ptext62 58B8                       __ptext54 5188  
                     __ptext46 611A                       __ptext38 5F2A                       __ptext71 0E52  
                     __ptext63 52C4                       __ptext55 613A                       __ptext47 6190  
                     __ptext39 5A14                       __ptext72 44EA                       __ptext64 61C6  
                     __ptext56 5488                       __ptext48 61A6                       __ptext73 5DDA  
                     __ptext65 5912                       __ptext57 5B5C                       __ptext49 61B0  
                     __ptext74 2916                       __ptext66 550A                       __ptext58 5D8C  
                     __ptext75 2DD6                       __ptext67 5362                       __ptext59 5226  
                     __ptext76 4BFC                       __ptext68 4826                       __ptext77 50DE  
                     __ptext69 60F4                       __ptext78 3200                 ?_reverseDetect 001A  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     strcpy@dest 0001  
                   turnLeft@mL 0014                     turnLeft@mR 0016               ?_ForwardOneBlock 001A  
                     go_Home@i 002B                ?_Colour_decider 004B                       efgtoa@fp 0060  
                     efgtoa@ne 0069                       efgtoa@pp 0071                       efgtoa@ou 007C  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       _vfprintf 596C  
                     _run_flag 01D6                  ??_turnRight45 001E                       main@temp 0164  
                     _turnLeft 5226               ___aomod@dividend 0001                 ?_timed_forward 0014  
                  delayed_ms@i 0004              ??_reverseOneBlock 001E                main@prev_colour 016E  
                     memcpy@d1 0001                       memcpy@s1 0003                    _setMotorPWM 4826  
                turnRight45@mL 001A                  turnRight45@mR 001C                      sprintf@ap 00C2  
             ??_fullSpeedAhead 0018                      strcpy@src 0003                   ??_turnLeft45 001E  
                   BlueMove@mL 0020                     BlueMove@mR 0022                    efgtoa@nmode 0073  
              ___aomod@divisor 0009                    ??_vfpfcnvrt 009B                ___aomod@counter 0011  
             _color_click_init 5AB8                       sprintf@f 00C4                       sprintf@s 00B0  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C            __end_of_turnRight45 5D8C  
              ??_reverseDetect 001E                    ??_turnRight 0018                  ___fladd@signs 000D  
           __end_of_turnLeft45 5DDA                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
              _sendCharSerial4 6178                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ___aomod@sign 0012  
