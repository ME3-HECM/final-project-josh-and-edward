

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 13 14:38:14 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    99                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   100   000000                     
   101                           ; Generated 06/04/2022 GMT
   102                           ; 
   103                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   104                           ; All rights reserved.
   105                           ; 
   106                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   107                           ; 
   108                           ; Redistribution and use in source and binary forms, with or without modification, are
   109                           ; permitted provided that the following conditions are met:
   110                           ; 
   111                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   112                           ;        conditions and the following disclaimer.
   113                           ; 
   114                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   115                           ;        of conditions and the following disclaimer in the documentation and/or other
   116                           ;        materials provided with the distribution. Publication is not required when
   117                           ;        this file is used in an embedded application.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC18F67K40 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135   000000                     
   136                           	psect	idataBANK0
   137   00613C                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for _RunOneBlockTime
   141   00613C  07D0               	dw	2000
   142                           
   143                           ;initializer for _Turn45Delay
   144   00613E  00DC               	dw	220
   145                           
   146                           ;initializer for _power
   147   006140  001E               	dw	30
   148   000000                     _TRISEbits	set	3973
   149   000000                     _LATHbits	set	3968
   150   000000                     _TX4REG	set	3812
   151   000000                     _RC4STAbits	set	3815
   152   000000                     _SP4BRGH	set	3814
   153   000000                     _SSP2CON2bits	set	3802
   154   000000                     _RX4PPS	set	3605
   155   000000                     _SSP2CLKPPS	set	3612
   156   000000                     _SSP2DATPPS	set	3613
   157   000000                     _ANSELDbits	set	3751
   158   000000                     _SSP2ADD	set	3798
   159   000000                     _SSP2CON1bits	set	3801
   160   000000                     _LATAbits	set	3961
   161   000000                     _LATFbits	set	3966
   162   000000                     _LATGbits	set	3967
   163   000000                     _TRISAbits	set	3969
   164   000000                     _TRISGbits	set	3975
   165   000000                     _PORTFbits	set	3982
   166   000000                     _TRISHbits	set	3976
   167   000000                     _TMR0L	set	4051
   168   000000                     _TMR0H	set	4052
   169   000000                     _INTCONbits	set	4082
   170   000000                     _CCPR2H	set	4006
   171   000000                     _CCPR1H	set	4010
   172   000000                     _TRISCbits	set	3971
   173   000000                     _TRISDbits	set	3972
   174   000000                     _TRISFbits	set	3974
   175   000000                     _LATDbits	set	3964
   176   000000                     _RC4REG	set	3811
   177   000000                     _SP4BRGL	set	3813
   178   000000                     _TX4STAbits	set	3816
   179   000000                     _BAUD4CONbits	set	3817
   180   000000                     _SSP2CON2	set	3802
   181   000000                     _SSP2STAT	set	3800
   182   000000                     _ANSELFbits	set	3764
   183   000000                     _SSP2BUF	set	3797
   184   000000                     _PIE0bits	set	3625
   185   000000                     _PIR4bits	set	3639
   186   000000                     _RC0PPS	set	3682
   187   000000                     _RD5PPS	set	3695
   188   000000                     _RE2PPS	set	3700
   189   000000                     _RD6PPS	set	3696
   190   000000                     _RC7PPS	set	3689
   191   000000                     _CCPR4H	set	3873
   192   000000                     _CCPR3H	set	3877
   193   000000                     _PIR0bits	set	3635
   194   000000                     _T0CON1bits	set	4054
   195   000000                     _T0CON0bits	set	4053
   196   000000                     _CCP1CONbits	set	4011
   197   000000                     _CCPTMRS0bits	set	4013
   198   000000                     _T2PR	set	4028
   199   000000                     _T2CONbits	set	4029
   200   000000                     _CCP2CONbits	set	4007
   201   000000                     _CCP3CONbits	set	3878
   202   000000                     _CCP4CONbits	set	3874
   203   000000                     _RE4PPS	set	3702
   204   000000                     _RG6PPS	set	3720
   205   000000                     _T2CLKCONbits	set	4031
   206   000000                     _T2HLTbits	set	4030
   207                           
   208                           	psect	smallconst
   209   000E00                     __psmallconst:
   210                           	callstack 0
   211   000E00  00                 	db	0
   212   000E01                     STR_1:
   213                           
   214                           ; BSR set to: 14
   215   000E01  72                 	db	114	;'r'
   216   000E02  65                 	db	101	;'e'
   217   000E03  64                 	db	100	;'d'
   218   000E04  3D                 	db	61	;'='
   219   000E05  25                 	db	37
   220   000E06  66                 	db	102	;'f'
   221   000E07  20                 	db	32
   222   000E08  67                 	db	103	;'g'
   223   000E09  72                 	db	114	;'r'
   224   000E0A  65                 	db	101	;'e'
   225   000E0B  65                 	db	101	;'e'
   226   000E0C  6E                 	db	110	;'n'
   227   000E0D  3D                 	db	61	;'='
   228   000E0E  25                 	db	37
   229   000E0F  66                 	db	102	;'f'
   230   000E10  20                 	db	32
   231   000E11  62                 	db	98	;'b'
   232   000E12  6C                 	db	108	;'l'
   233   000E13  75                 	db	117	;'u'
   234   000E14  65                 	db	101	;'e'
   235   000E15  3D                 	db	61	;'='
   236   000E16  25                 	db	37
   237   000E17  66                 	db	102	;'f'
   238   000E18  20                 	db	32
   239   000E19  6C                 	db	108	;'l'
   240   000E1A  75                 	db	117	;'u'
   241   000E1B  6D                 	db	109	;'m'
   242   000E1C  3D                 	db	61	;'='
   243   000E1D  25                 	db	37
   244   000E1E  64                 	db	100	;'d'
   245   000E1F  20                 	db	32
   246   000E20  63                 	db	99	;'c'
   247   000E21  6F                 	db	111	;'o'
   248   000E22  6C                 	db	108	;'l'
   249   000E23  6F                 	db	111	;'o'
   250   000E24  75                 	db	117	;'u'
   251   000E25  72                 	db	114	;'r'
   252   000E26  31                 	db	49	;'1'
   253   000E27  3D                 	db	61	;'='
   254   000E28  25                 	db	37
   255   000E29  64                 	db	100	;'d'
   256   000E2A  20                 	db	32
   257   000E2B  0D                 	db	13
   258   000E2C  0A                 	db	10
   259   000E2D  00                 	db	0
   260   000E2E                     STR_2:
   261                           
   262                           ; BSR set to: 14
   263   000E2E  69                 	db	105	;'i'
   264   000E2F  6E                 	db	110	;'n'
   265   000E30  66                 	db	102	;'f'
   266   000E31  00                 	db	0
   267   000E32                     STR_5:
   268                           
   269                           ; BSR set to: 14
   270   000E32  6E                 	db	110	;'n'
   271   000E33  61                 	db	97	;'a'
   272   000E34  6E                 	db	110	;'n'
   273   000E35  00                 	db	0
   274   000E36  00                 	db	0	; dummy byte at the end
   275   000000                     
   276                           ; #config settings
   277                           
   278                           	psect	cinit
   279   005C66                     __pcinit:
   280                           	callstack 0
   281   005C66                     start_initialization:
   282                           	callstack 0
   283   005C66                     __initialization:
   284                           	callstack 0
   285                           
   286                           ; Initialize objects allocated to BANK0 (6 bytes)
   287                           ; load TBLPTR registers with __pidataBANK0
   288   005C66  0E3C               	movlw	low __pidataBANK0
   289   005C68  6EF6               	movwf	tblptrl,c
   290   005C6A  0E61               	movlw	high __pidataBANK0
   291   005C6C  6EF7               	movwf	tblptrh,c
   292   005C6E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   293   005C70  6EF8               	movwf	tblptru,c
   294   005C72  EE00  F0F0         	lfsr	0,__pdataBANK0
   295   005C76  EE10 F006          	lfsr	1,6
   296   005C7A                     copy_data0:
   297   005C7A  0009               	tblrd		*+
   298   005C7C  CFF5 FFEE          	movff	tablat,postinc0
   299   005C80  50E5               	movf	postdec1,w,c
   300   005C82  50E1               	movf	fsr1l,w,c
   301   005C84  E1FA               	bnz	copy_data0
   302                           
   303                           ; Clear objects allocated to BANK2 (240 bytes)
   304   005C86  EE02  F000         	lfsr	0,__pbssBANK2
   305   005C8A  0EF0               	movlw	240
   306   005C8C                     clear_0:
   307   005C8C  6AEE               	clrf	postinc0,c
   308   005C8E  06E8               	decf	wreg,f,c
   309   005C90  E1FD               	bnz	clear_0
   310                           
   311                           ; Clear objects allocated to BANK1 (114 bytes)
   312   005C92  EE01  F000         	lfsr	0,__pbssBANK1
   313   005C96  0E72               	movlw	114
   314   005C98                     clear_1:
   315   005C98  6AEE               	clrf	postinc0,c
   316   005C9A  06E8               	decf	wreg,f,c
   317   005C9C  E1FD               	bnz	clear_1
   318                           
   319                           ; Clear objects allocated to BANK0 (29 bytes)
   320   005C9E  EE00  F0D3         	lfsr	0,__pbssBANK0
   321   005CA2  0E1D               	movlw	29
   322   005CA4                     clear_2:
   323   005CA4  6AEE               	clrf	postinc0,c
   324   005CA6  06E8               	decf	wreg,f,c
   325   005CA8  E1FD               	bnz	clear_2
   326   005CAA                     end_of_initialization:
   327                           	callstack 0
   328   005CAA                     __end_of__initialization:
   329                           	callstack 0
   330   005CAA  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   331   005CAC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   332   005CAE  0100               	movlb	0
   333   005CB0  EF87  F011         	goto	_main	;jump to C main() function
   334                           
   335                           	psect	bssBANK0
   336   0000D3                     __pbssBANK0:
   337                           	callstack 0
   338   0000D3                     	ds	12
   339   0000DF                     floorf@F526:
   340                           	callstack 0
   341   0000DF                     	ds	4
   342   0000E3                     ___fpclassifyf@F465:
   343                           	callstack 0
   344   0000E3                     	ds	4
   345   0000E7                     _width:
   346                           	callstack 0
   347   0000E7                     	ds	2
   348   0000E9                     _prec:
   349                           	callstack 0
   350   0000E9                     	ds	2
   351   0000EB                     _flags:
   352                           	callstack 0
   353   0000EB                     	ds	1
   354   0000EC                     _TxBufReadCnt:
   355                           	callstack 0
   356   0000EC                     	ds	1
   357   0000ED                     _TxBufWriteCnt:
   358                           	callstack 0
   359   0000ED                     	ds	1
   360   0000EE                     _RxBufReadCnt:
   361                           	callstack 0
   362   0000EE                     	ds	1
   363   0000EF                     _RxBufWriteCnt:
   364                           	callstack 0
   365   0000EF                     	ds	1
   366                           
   367                           	psect	dataBANK0
   368   0000F0                     __pdataBANK0:
   369                           	callstack 0
   370   0000F0                     _RunOneBlockTime:
   371                           	callstack 0
   372   0000F0                     	ds	2
   373   0000F2                     _Turn45Delay:
   374                           	callstack 0
   375   0000F2                     	ds	2
   376   0000F4                     _power:
   377                           	callstack 0
   378   0000F4                     	ds	2
   379                           
   380                           	psect	bssBANK1
   381   000100                     __pbssBANK1:
   382                           	callstack 0
   383   000100                     _EUSART4RXbuf:
   384                           	callstack 0
   385   000100                     	ds	20
   386   000114                     _move_count:
   387                           	callstack 0
   388   000114                     	ds	2
   389   000116                     _run_flag:
   390                           	callstack 0
   391   000116                     	ds	2
   392   000118                     _lost_flag:
   393                           	callstack 0
   394   000118                     	ds	2
   395   00011A                     _WayBack:
   396                           	callstack 0
   397   00011A                     	ds	50
   398   00014C                     _rel:
   399                           	callstack 0
   400   00014C                     	ds	12
   401   000158                     _motorR:
   402                           	callstack 0
   403   000158                     	ds	9
   404   000161                     _motorL:
   405                           	callstack 0
   406   000161                     	ds	9
   407   00016A                     _vals:
   408                           	callstack 0
   409   00016A                     	ds	8
   410                           
   411                           	psect	bssBANK2
   412   000200                     __pbssBANK2:
   413                           	callstack 0
   414   000200                     _EUSART4TXbuf:
   415                           	callstack 0
   416   000200                     	ds	60
   417   00023C                     _Time_forward:
   418                           	callstack 0
   419   00023C                     	ds	100
   420   0002A0                     _dbuf:
   421                           	callstack 0
   422   0002A0                     	ds	80
   423                           
   424                           	psect	cstackBANK1
   425   000172                     __pcstackBANK1:
   426                           	callstack 0
   427   000172                     main@buf:
   428                           	callstack 0
   429                           
   430                           ; 100 bytes @ 0x0
   431   000172                     	ds	100
   432   0001D6                     main@lost_count:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x64
   436   0001D6                     	ds	2
   437   0001D8                     main@consecuitive:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x66
   441   0001D8                     	ds	2
   442   0001DA                     main@colour:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x68
   446   0001DA                     	ds	2
   447   0001DC                     main@prev_colour:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x6A
   451   0001DC                     	ds	2
   452                           
   453                           	psect	cstackBANK0
   454   000060                     __pcstackBANK0:
   455                           	callstack 0
   456   000060                     efgtoa@fp:
   457                           	callstack 0
   458   000060                     colour_rel@L:
   459                           	callstack 0
   460   000060                     _Colour_decider$3205:
   461                           	callstack 0
   462                           
   463                           ; 4 bytes @ 0x0
   464   000060                     	ds	2
   465   000062                     efgtoa@f:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0x2
   469   000062                     	ds	2
   470   000064                     Colour_decider@Cmax_i:
   471                           	callstack 0
   472   000064                     _colour_rel$3203:
   473                           	callstack 0
   474                           
   475                           ; 4 bytes @ 0x4
   476   000064                     	ds	2
   477   000066                     efgtoa@c:
   478                           	callstack 0
   479   000066                     Colour_decider@RGB_col:
   480                           	callstack 0
   481                           
   482                           ; 12 bytes @ 0x6
   483   000066                     	ds	1
   484   000067                     ??_efgtoa:
   485                           
   486                           ; 1 bytes @ 0x7
   487   000067                     	ds	1
   488   000068                     _colour_rel$3204:
   489                           	callstack 0
   490                           
   491                           ; 4 bytes @ 0x8
   492   000068                     	ds	1
   493   000069                     efgtoa@ne:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x9
   497   000069                     	ds	2
   498   00006B                     efgtoa@p:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0xB
   502   00006B                     	ds	1
   503   00006C                     colour_rel@R:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0xC
   507   00006C                     	ds	1
   508   00006D                     efgtoa@t:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0xD
   512   00006D                     	ds	2
   513   00006F                     _efgtoa$2852:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0xF
   517   00006F                     	ds	1
   518   000070                     colour_rel@G:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0x10
   522   000070                     	ds	1
   523   000071                     efgtoa@pp:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x11
   527   000071                     	ds	1
   528   000072                     efgtoa@mode:
   529                           	callstack 0
   530   000072                     Colour_decider@Cmax:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x12
   534   000072                     	ds	1
   535   000073                     efgtoa@nmode:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x13
   539   000073                     	ds	1
   540   000074                     efgtoa@d:
   541                           	callstack 0
   542   000074                     colour_rel@B:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x14
   546   000074                     	ds	2
   547   000076                     efgtoa@m:
   548                           	callstack 0
   549   000076                     Colour_decider@Cmin:
   550                           	callstack 0
   551                           
   552                           ; 4 bytes @ 0x16
   553   000076                     	ds	2
   554   000078                     efgtoa@e:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x18
   558   000078                     	ds	2
   559   00007A                     Colour_decider@i:
   560                           	callstack 0
   561   00007A                     efgtoa@w:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x1A
   565   00007A                     	ds	2
   566   00007C                     Colour_decider@Hue:
   567                           	callstack 0
   568   00007C                     efgtoa@ou:
   569                           	callstack 0
   570                           
   571                           ; 4 bytes @ 0x1C
   572   00007C                     	ds	4
   573   000080                     efgtoa@i:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x20
   577   000080                     	ds	2
   578   000082                     efgtoa@h:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x22
   582   000082                     	ds	4
   583   000086                     efgtoa@l:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x26
   587   000086                     	ds	4
   588   00008A                     efgtoa@sign:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0x2A
   592   00008A                     	ds	1
   593   00008B                     efgtoa@n:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x2B
   597   00008B                     	ds	2
   598   00008D                     efgtoa@g:
   599                           	callstack 0
   600                           
   601                           ; 4 bytes @ 0x2D
   602   00008D                     	ds	4
   603   000091                     efgtoa@u:
   604                           	callstack 0
   605                           
   606                           ; 4 bytes @ 0x31
   607   000091                     	ds	4
   608   000095                     vfpfcnvrt@fp:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x35
   612   000095                     	ds	2
   613   000097                     vfpfcnvrt@fmt:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x37
   617   000097                     	ds	2
   618   000099                     vfpfcnvrt@ap:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x39
   622   000099                     	ds	2
   623   00009B                     ??_vfpfcnvrt:
   624                           
   625                           ; 1 bytes @ 0x3B
   626   00009B                     	ds	2
   627   00009D                     vfpfcnvrt@convarg:
   628                           	callstack 0
   629                           
   630                           ; 8 bytes @ 0x3D
   631   00009D                     	ds	8
   632   0000A5                     vfpfcnvrt@c:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x45
   636   0000A5                     	ds	1
   637   0000A6                     vfpfcnvrt@cp:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x46
   641   0000A6                     	ds	2
   642   0000A8                     ?_vfprintf:
   643                           	callstack 0
   644   0000A8                     vfprintf@fp:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x48
   648   0000A8                     	ds	2
   649   0000AA                     vfprintf@fmt:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x4A
   653   0000AA                     	ds	2
   654   0000AC                     vfprintf@ap:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x4C
   658   0000AC                     	ds	2
   659   0000AE                     vfprintf@cfmt:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x4E
   663   0000AE                     	ds	2
   664   0000B0                     ?_sprintf:
   665                           	callstack 0
   666   0000B0                     sprintf@s:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x50
   670   0000B0                     	ds	2
   671   0000B2                     sprintf@fmt:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x52
   675   0000B2                     	ds	18
   676   0000C4                     sprintf@ap:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x64
   680   0000C4                     	ds	2
   681   0000C6                     sprintf@f:
   682                           	callstack 0
   683                           
   684                           ; 11 bytes @ 0x66
   685   0000C6                     	ds	11
   686   0000D1                     ??_main:
   687                           
   688                           ; 1 bytes @ 0x71
   689   0000D1                     	ds	2
   690                           
   691                           	psect	cstackCOMRAM
   692   000001                     __pcstackCOMRAM:
   693                           	callstack 0
   694   000001                     ??_I2C_2_Master_Idle:
   695   000001                     ?___fpclassifyf:
   696                           	callstack 0
   697   000001                     ?___wmul:
   698                           	callstack 0
   699   000001                     ?___fladd:
   700                           	callstack 0
   701   000001                     ?_labs:
   702                           	callstack 0
   703   000001                     ?___flneg:
   704                           	callstack 0
   705   000001                     ?___fltol:
   706                           	callstack 0
   707   000001                     ?___xxtofl:
   708                           	callstack 0
   709   000001                     ?___aodiv:
   710                           	callstack 0
   711   000001                     ?___aomod:
   712                           	callstack 0
   713   000001                     sendCharSerial4@charToSend:
   714                           	callstack 0
   715   000001                     initDCmotorsPWM@PWMperiod:
   716                           	callstack 0
   717   000001                     TurnDelay@Turn45Delay:
   718                           	callstack 0
   719   000001                     getTMR0val@moving:
   720                           	callstack 0
   721   000001                     delayed_ms@time:
   722                           	callstack 0
   723   000001                     ___wmul@multiplier:
   724                           	callstack 0
   725   000001                     memcpy@d1:
   726                           	callstack 0
   727   000001                     fputc@c:
   728                           	callstack 0
   729   000001                     strcpy@dest:
   730                           	callstack 0
   731   000001                     ___flneg@f1:
   732                           	callstack 0
   733   000001                     ___fltol@f1:
   734                           	callstack 0
   735   000001                     ___fladd@b:
   736                           	callstack 0
   737   000001                     ___xxtofl@val:
   738                           	callstack 0
   739   000001                     ___fpclassifyf@x:
   740                           	callstack 0
   741   000001                     labs@a:
   742                           	callstack 0
   743   000001                     ___aodiv@dividend:
   744                           	callstack 0
   745   000001                     ___aomod@dividend:
   746                           	callstack 0
   747                           
   748                           ; 8 bytes @ 0x0
   749   000001                     	ds	1
   750   000002                     ??_I2C_2_Master_Read:
   751   000002                     I2C_2_Master_Write@data_byte:
   752                           	callstack 0
   753   000002                     sendStringSerial4@string:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x1
   757   000002                     	ds	1
   758   000003                     ??_delayed_ms:
   759   000003                     ??_TurnDelay:
   760   000003                     color_writetoaddr@value:
   761                           	callstack 0
   762   000003                     I2C_2_Master_Read@ack:
   763                           	callstack 0
   764   000003                     ___wmul@multiplicand:
   765                           	callstack 0
   766   000003                     memcpy@s1:
   767                           	callstack 0
   768   000003                     fputc@fp:
   769                           	callstack 0
   770   000003                     strcpy@src:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x2
   774   000003                     	ds	1
   775   000004                     color_writetoaddr@address:
   776                           	callstack 0
   777   000004                     I2C_2_Master_Read@tmp:
   778                           	callstack 0
   779   000004                     delayed_ms@i:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x3
   783   000004                     	ds	1
   784   000005                     ??_fputc:
   785   000005                     ??___fpclassifyf:
   786   000005                     ??_labs:
   787   000005                     ??_color_click_init:
   788   000005                     ??___fltol:
   789   000005                     ??___xxtofl:
   790   000005                     ?_color_read_lum:
   791                           	callstack 0
   792   000005                     ?_color_read_Red:
   793                           	callstack 0
   794   000005                     ?_color_read_Green:
   795                           	callstack 0
   796   000005                     ?_color_read_Blue:
   797                           	callstack 0
   798   000005                     ___wmul@product:
   799                           	callstack 0
   800   000005                     memcpy@n:
   801                           	callstack 0
   802   000005                     strcpy@s:
   803                           	callstack 0
   804   000005                     ___fladd@a:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0x4
   808   000005                     	ds	2
   809   000007                     ??_color_read_lum:
   810   000007                     ??_color_read_Red:
   811   000007                     ??_color_read_Green:
   812   000007                     ??_color_read_Blue:
   813   000007                     ?___lwdiv:
   814                           	callstack 0
   815   000007                     ___lwdiv@dividend:
   816                           	callstack 0
   817   000007                     memcpy@d:
   818                           	callstack 0
   819   000007                     strcpy@d:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x6
   823   000007                     	ds	2
   824   000009                     ??___fladd:
   825   000009                     ___fltol@sign1:
   826                           	callstack 0
   827   000009                     ___xxtofl@sign:
   828                           	callstack 0
   829   000009                     ___lwdiv@divisor:
   830                           	callstack 0
   831   000009                     ___fpclassifyf@e:
   832                           	callstack 0
   833   000009                     memcpy@s:
   834                           	callstack 0
   835   000009                     ___aodiv@divisor:
   836                           	callstack 0
   837   000009                     ___aomod@divisor:
   838                           	callstack 0
   839                           
   840                           ; 8 bytes @ 0x8
   841   000009                     	ds	1
   842   00000A                     ___fltol@exp1:
   843                           	callstack 0
   844   00000A                     ___xxtofl@exp:
   845                           	callstack 0
   846   00000A                     color_read_lum@tmp:
   847                           	callstack 0
   848   00000A                     color_read_Red@tmp:
   849                           	callstack 0
   850   00000A                     color_read_Green@tmp:
   851                           	callstack 0
   852   00000A                     color_read_Blue@tmp:
   853                           	callstack 0
   854   00000A                     fputs@s:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x9
   858   00000A                     	ds	1
   859   00000B                     memcpy@tmp:
   860                           	callstack 0
   861   00000B                     ___lwdiv@quotient:
   862                           	callstack 0
   863   00000B                     ___xxtofl@arg:
   864                           	callstack 0
   865   00000B                     ___fpclassifyf@u:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0xA
   869   00000B                     	ds	1
   870   00000C                     readColours@vals:
   871                           	callstack 0
   872   00000C                     fputs@fp:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0xB
   876   00000C                     	ds	1
   877   00000D                     ___lwdiv@counter:
   878                           	callstack 0
   879   00000D                     ___fladd@signs:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0xC
   883   00000D                     	ds	1
   884   00000E                     ___fladd@aexp:
   885                           	callstack 0
   886   00000E                     fputs@c:
   887                           	callstack 0
   888   00000E                     setMotorPWM@m:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0xD
   892   00000E                     	ds	1
   893   00000F                     ___fladd@bexp:
   894                           	callstack 0
   895   00000F                     fputs@i:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0xE
   899   00000F                     	ds	1
   900   000010                     ??_setMotorPWM:
   901   000010                     ___fladd@grs:
   902                           	callstack 0
   903                           
   904                           ; 1 bytes @ 0xF
   905   000010                     	ds	1
   906   000011                     ?___flmul:
   907                           	callstack 0
   908   000011                     ___aodiv@counter:
   909                           	callstack 0
   910   000011                     ___aomod@counter:
   911                           	callstack 0
   912   000011                     pad@fp:
   913                           	callstack 0
   914   000011                     ___flmul@b:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x10
   918   000011                     	ds	1
   919   000012                     setMotorPWM@posDuty:
   920                           	callstack 0
   921   000012                     ___aodiv@sign:
   922                           	callstack 0
   923   000012                     ___aomod@sign:
   924                           	callstack 0
   925                           
   926                           ; 1 bytes @ 0x11
   927   000012                     	ds	1
   928   000013                     ?_abs:
   929                           	callstack 0
   930   000013                     setMotorPWM@negDuty:
   931                           	callstack 0
   932   000013                     pad@buf:
   933                           	callstack 0
   934   000013                     abs@a:
   935                           	callstack 0
   936   000013                     ___aodiv@quotient:
   937                           	callstack 0
   938                           
   939                           ; 8 bytes @ 0x12
   940   000013                     	ds	1
   941   000014                     stop@mL:
   942                           	callstack 0
   943   000014                     turnLeft@mL:
   944                           	callstack 0
   945   000014                     turnRight@mL:
   946                           	callstack 0
   947   000014                     fullSpeedAhead@mL:
   948                           	callstack 0
   949   000014                     timed_forward@mL:
   950                           	callstack 0
   951   000014                     fullSpeedBack@mL:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x13
   955   000014                     	ds	1
   956   000015                     ??_abs:
   957   000015                     pad@p:
   958                           	callstack 0
   959   000015                     ___flmul@a:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x14
   963   000015                     	ds	1
   964   000016                     stop@mR:
   965                           	callstack 0
   966   000016                     turnLeft@mR:
   967                           	callstack 0
   968   000016                     turnRight@mR:
   969                           	callstack 0
   970   000016                     fullSpeedAhead@mR:
   971                           	callstack 0
   972   000016                     timed_forward@mR:
   973                           	callstack 0
   974   000016                     fullSpeedBack@mR:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x15
   978   000016                     	ds	1
   979   000017                     ??_pad:
   980                           
   981                           ; 1 bytes @ 0x16
   982   000017                     	ds	1
   983   000018                     ??_fullSpeedAhead:
   984   000018                     ??_stop:
   985   000018                     ??_turnLeft:
   986   000018                     ??_turnRight:
   987   000018                     ??_fullSpeedBack:
   988   000018                     timed_forward@time:
   989                           	callstack 0
   990   000018                     pad@i:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x17
   994   000018                     	ds	1
   995   000019                     ??___flmul:
   996                           
   997                           ; 1 bytes @ 0x18
   998   000019                     	ds	1
   999   00001A                     ??_timed_forward:
  1000   00001A                     turnRight45@mL:
  1001                           	callstack 0
  1002   00001A                     turnLeft45@mL:
  1003                           	callstack 0
  1004   00001A                     reverseDetect@mL:
  1005                           	callstack 0
  1006   00001A                     reverseOneBlock@mL:
  1007                           	callstack 0
  1008   00001A                     ForwardOneBlock@mL:
  1009                           	callstack 0
  1010   00001A                     Forwardhalfblock@mL:
  1011                           	callstack 0
  1012   00001A                     pad@w:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x19
  1016   00001A                     	ds	2
  1017   00001C                     turnRight45@mR:
  1018                           	callstack 0
  1019   00001C                     turnLeft45@mR:
  1020                           	callstack 0
  1021   00001C                     reverseDetect@mR:
  1022                           	callstack 0
  1023   00001C                     reverseOneBlock@mR:
  1024                           	callstack 0
  1025   00001C                     ForwardOneBlock@mR:
  1026                           	callstack 0
  1027   00001C                     Forwardhalfblock@mR:
  1028                           	callstack 0
  1029   00001C                     dtoa@fp:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x1B
  1033   00001C                     	ds	1
  1034   00001D                     ___flmul@sign:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x1C
  1038   00001D                     	ds	1
  1039   00001E                     ??_Forwardhalfblock:
  1040   00001E                     ??_turnRight45:
  1041   00001E                     ??_turnLeft45:
  1042   00001E                     ??_reverseDetect:
  1043   00001E                     ??_reverseOneBlock:
  1044   00001E                     ??_ForwardOneBlock:
  1045   00001E                     ___flmul@grs:
  1046                           	callstack 0
  1047   00001E                     dtoa@d:
  1048                           	callstack 0
  1049                           
  1050                           ; 8 bytes @ 0x1D
  1051   00001E                     	ds	2
  1052   000020                     RedMove@mL:
  1053                           	callstack 0
  1054   000020                     GreenMove@mL:
  1055                           	callstack 0
  1056   000020                     BlueMove@mL:
  1057                           	callstack 0
  1058   000020                     YellowMove@mL:
  1059                           	callstack 0
  1060   000020                     PinkMove@mL:
  1061                           	callstack 0
  1062   000020                     OrangeMove@mL:
  1063                           	callstack 0
  1064   000020                     LightBlueMove@mL:
  1065                           	callstack 0
  1066   000020                     RetryMove@mL:
  1067                           	callstack 0
  1068   000020                     ReverseYellow@mL:
  1069                           	callstack 0
  1070   000020                     ReversePink@mL:
  1071                           	callstack 0
  1072   000020                     turnCalibration@mL:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x1F
  1076   000020                     	ds	2
  1077   000022                     ___flmul@aexp:
  1078                           	callstack 0
  1079   000022                     RedMove@mR:
  1080                           	callstack 0
  1081   000022                     GreenMove@mR:
  1082                           	callstack 0
  1083   000022                     BlueMove@mR:
  1084                           	callstack 0
  1085   000022                     YellowMove@mR:
  1086                           	callstack 0
  1087   000022                     PinkMove@mR:
  1088                           	callstack 0
  1089   000022                     OrangeMove@mR:
  1090                           	callstack 0
  1091   000022                     LightBlueMove@mR:
  1092                           	callstack 0
  1093   000022                     RetryMove@mR:
  1094                           	callstack 0
  1095   000022                     ReverseYellow@mR:
  1096                           	callstack 0
  1097   000022                     ReversePink@mR:
  1098                           	callstack 0
  1099   000022                     turnCalibration@mR:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x21
  1103   000022                     	ds	1
  1104   000023                     ___flmul@bexp:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x22
  1108   000023                     	ds	1
  1109   000024                     ??_turnCalibration:
  1110   000024                     ??_RetryMove:
  1111   000024                     go_Home@WayBack:
  1112                           	callstack 0
  1113   000024                     ___flmul@prod:
  1114                           	callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x23
  1117   000024                     	ds	2
  1118   000026                     ??_dtoa:
  1119   000026                     go_Home@Time_forward:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x25
  1123   000026                     	ds	2
  1124   000028                     ??_go_Home:
  1125   000028                     ___flmul@temp:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x27
  1129   000028                     	ds	2
  1130   00002A                     ?___flsub:
  1131                           	callstack 0
  1132   00002A                     ___flge@ff1:
  1133                           	callstack 0
  1134   00002A                     ___flsub@b:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0x29
  1138   00002A                     	ds	1
  1139   00002B                     go_Home@i:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x2A
  1143   00002B                     	ds	3
  1144   00002E                     _dtoa$2821:
  1145                           	callstack 0
  1146   00002E                     ___flge@ff2:
  1147                           	callstack 0
  1148   00002E                     ___flsub@a:
  1149                           	callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x2D
  1152   00002E                     	ds	2
  1153   000030                     dtoa@p:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x2F
  1157   000030                     	ds	2
  1158   000032                     ??___flge:
  1159   000032                     ?___fldiv:
  1160                           	callstack 0
  1161   000032                     dtoa@w:
  1162                           	callstack 0
  1163   000032                     ___fleq@ff1:
  1164                           	callstack 0
  1165   000032                     ___fldiv@b:
  1166                           	callstack 0
  1167                           
  1168                           ; 4 bytes @ 0x31
  1169   000032                     	ds	2
  1170   000034                     dtoa@n:
  1171                           	callstack 0
  1172                           
  1173                           ; 8 bytes @ 0x33
  1174   000034                     	ds	2
  1175   000036                     ___fleq@ff2:
  1176                           	callstack 0
  1177   000036                     ___fldiv@a:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x35
  1181   000036                     	ds	4
  1182   00003A                     ??___fldiv:
  1183   00003A                     ??___fleq:
  1184                           
  1185                           ; 1 bytes @ 0x39
  1186   00003A                     	ds	2
  1187   00003C                     dtoa@i:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x3B
  1191   00003C                     	ds	2
  1192   00003E                     dtoa@s:
  1193                           	callstack 0
  1194   00003E                     ___fldiv@rem:
  1195                           	callstack 0
  1196                           
  1197                           ; 4 bytes @ 0x3D
  1198   00003E                     	ds	4
  1199   000042                     ___fldiv@sign:
  1200                           	callstack 0
  1201                           
  1202                           ; 1 bytes @ 0x41
  1203   000042                     	ds	1
  1204   000043                     ___fldiv@new_exp:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x42
  1208   000043                     	ds	2
  1209   000045                     ___fldiv@grs:
  1210                           	callstack 0
  1211                           
  1212                           ; 4 bytes @ 0x44
  1213   000045                     	ds	4
  1214   000049                     ___fldiv@bexp:
  1215                           	callstack 0
  1216                           
  1217                           ; 1 bytes @ 0x48
  1218   000049                     	ds	1
  1219   00004A                     ___fldiv@aexp:
  1220                           	callstack 0
  1221                           
  1222                           ; 1 bytes @ 0x49
  1223   00004A                     	ds	1
  1224   00004B                     ?_Colour_decider:
  1225                           	callstack 0
  1226   00004B                     ?_floorf:
  1227                           	callstack 0
  1228   00004B                     colour_rel@vals:
  1229                           	callstack 0
  1230   00004B                     Colour_decider@vals:
  1231                           	callstack 0
  1232   00004B                     floorf@x:
  1233                           	callstack 0
  1234                           
  1235                           ; 4 bytes @ 0x4A
  1236   00004B                     	ds	2
  1237   00004D                     colour_rel@rel:
  1238                           	callstack 0
  1239   00004D                     Colour_decider@rel:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x4C
  1243   00004D                     	ds	2
  1244   00004F                     ??_floorf:
  1245   00004F                     ??_Colour_decider:
  1246                           
  1247                           ; 1 bytes @ 0x4E
  1248   00004F                     	ds	6
  1249   000055                     floorf@m:
  1250                           	callstack 0
  1251                           
  1252                           ; 4 bytes @ 0x54
  1253   000055                     	ds	4
  1254   000059                     floorf@e:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x58
  1258   000059                     	ds	2
  1259   00005B                     floorf@u:
  1260                           	callstack 0
  1261                           
  1262                           ; 4 bytes @ 0x5A
  1263   00005B                     	ds	4
  1264   00005F                     
  1265                           ; 1 bytes @ 0x5E
  1266 ;;
  1267 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1268 ;;
  1269 ;; *************** function _main *****************
  1270 ;; Defined at:
  1271 ;;		line 30 in file "main.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  colour          2  104[BANK1 ] int 
  1276 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1277 ;;  prev_colour     2  106[BANK1 ] int 
  1278 ;;  consecuitive    2  102[BANK1 ] int 
  1279 ;;  lost_count      2  100[BANK1 ] int 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1290 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1291 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1292 ;;      Totals:         0       2     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1293 ;;Total ram usage:      110 bytes
  1294 ;; Hardware stack levels required when called: 9
  1295 ;; This function calls:
  1296 ;;		_BlueMove
  1297 ;;		_Colour_decider
  1298 ;;		_Forwardhalfblock
  1299 ;;		_GreenMove
  1300 ;;		_I2C_2_Master_Init
  1301 ;;		_Interrupts_init
  1302 ;;		_LightBlueMove
  1303 ;;		_OrangeMove
  1304 ;;		_PinkMove
  1305 ;;		_RedMove
  1306 ;;		_RetryMove
  1307 ;;		_Timer0_init
  1308 ;;		_YellowMove
  1309 ;;		_color_click_init
  1310 ;;		_colour_rel
  1311 ;;		_fullSpeedAhead
  1312 ;;		_getTMR0val
  1313 ;;		_go_Home
  1314 ;;		_initDCmotorsPWM
  1315 ;;		_initUSART4
  1316 ;;		_readColours
  1317 ;;		_sendStringSerial4
  1318 ;;		_sprintf
  1319 ;;		_stop
  1320 ;;		_turnCalibration
  1321 ;; This function is called by:
  1322 ;;		Startup code after reset
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text0
  1327   00230E                     __ptext0:
  1328                           	callstack 0
  1329   00230E                     _main:
  1330                           	callstack 22
  1331   00230E                     
  1332                           ;main.c: 31:     initUSART4();
  1333   00230E  EC68  F030         	call	_initUSART4	;wreg free
  1334   002312                     
  1335                           ;main.c: 32:     Interrupts_init();
  1336   002312  EC89  F030         	call	_Interrupts_init	;wreg free
  1337   002316                     
  1338                           ;main.c: 33:     color_click_init();
  1339   002316  ECF0  F02C         	call	_color_click_init	;wreg free
  1340   00231A                     
  1341                           ;main.c: 34:     I2C_2_Master_Init();
  1342   00231A  ECF9  F02F         	call	_I2C_2_Master_Init	;wreg free
  1343   00231E                     
  1344                           ;main.c: 35:     initDCmotorsPWM(200);
  1345   00231E  0E00               	movlw	0
  1346   002320  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1347   002322  0EC8               	movlw	200
  1348   002324  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1349   002326  ECD2  F029         	call	_initDCmotorsPWM	;wreg free
  1350   00232A                     
  1351                           ;main.c: 36:     Timer0_init();
  1352   00232A  EC58  F030         	call	_Timer0_init	;wreg free
  1353   00232E                     
  1354                           ;main.c: 37:     char buf[100];;main.c: 39:     TRISGbits.TRISG1 = 0;
  1355   00232E  9287               	bcf	135,1,c	;volatile
  1356   002330                     
  1357                           ;main.c: 40:     TRISAbits.TRISA4 = 0;
  1358   002330  9881               	bcf	129,4,c	;volatile
  1359   002332                     
  1360                           ;main.c: 41:     TRISFbits.TRISF7 = 0;
  1361   002332  9E86               	bcf	134,7,c	;volatile
  1362   002334                     
  1363                           ;main.c: 42:     TRISFbits.TRISF2 = 1;
  1364   002334  8486               	bsf	134,2,c	;volatile
  1365   002336                     
  1366                           ;main.c: 43:     ANSELFbits.ANSELF2=0;
  1367   002336  010E               	movlb	14	; () banked
  1368   002338  95B4               	bcf	180,2,b	;volatile
  1369   00233A                     
  1370                           ; BSR set to: 14
  1371                           ;main.c: 44:     TRISFbits.TRISF3 = 1;
  1372   00233A  8686               	bsf	134,3,c	;volatile
  1373   00233C                     
  1374                           ; BSR set to: 14
  1375                           ;main.c: 45:     ANSELFbits.ANSELF3=0;
  1376   00233C  97B4               	bcf	180,3,b	;volatile
  1377   00233E                     
  1378                           ; BSR set to: 14
  1379                           ;main.c: 46:     LATGbits.LATG1=1;
  1380   00233E  827F               	bsf	127,1,c	;volatile
  1381   002340                     
  1382                           ; BSR set to: 14
  1383                           ;main.c: 47:     LATAbits.LATA4=1;
  1384   002340  8879               	bsf	121,4,c	;volatile
  1385   002342                     
  1386                           ; BSR set to: 14
  1387                           ;main.c: 48:     LATFbits.LATF7=1;
  1388   002342  8E7E               	bsf	126,7,c	;volatile
  1389   002344                     
  1390                           ; BSR set to: 14
  1391                           ;main.c: 51:     LATDbits.LATD7=0;
  1392   002344  9E7C               	bcf	124,7,c	;volatile
  1393   002346                     
  1394                           ; BSR set to: 14
  1395                           ;main.c: 52:     TRISDbits.TRISD7=0;
  1396   002346  9E84               	bcf	132,7,c	;volatile
  1397   002348                     
  1398                           ; BSR set to: 14
  1399                           ;main.c: 53:     LATHbits.LATH3=0;
  1400   002348  9680               	bcf	128,3,c	;volatile
  1401   00234A                     
  1402                           ; BSR set to: 14
  1403                           ;main.c: 54:     TRISHbits.TRISH3=0;
  1404   00234A  9688               	bcf	136,3,c	;volatile
  1405   00234C                     
  1406                           ; BSR set to: 14
  1407                           ;main.c: 57:     LATHbits.LATH0=0;
  1408   00234C  9080               	bcf	128,0,c	;volatile
  1409   00234E                     
  1410                           ; BSR set to: 14
  1411                           ;main.c: 58:     TRISHbits.TRISH0=0;
  1412   00234E  9088               	bcf	136,0,c	;volatile
  1413   002350                     
  1414                           ; BSR set to: 14
  1415                           ;main.c: 61:     LATFbits.LATF0=0;
  1416   002350  907E               	bcf	126,0,c	;volatile
  1417   002352                     
  1418                           ; BSR set to: 14
  1419                           ;main.c: 62:     TRISFbits.TRISF0=0;
  1420   002352  9086               	bcf	134,0,c	;volatile
  1421   002354                     
  1422                           ; BSR set to: 14
  1423                           ;main.c: 65:     LATDbits.LATD4=0;
  1424   002354  987C               	bcf	124,4,c	;volatile
  1425   002356                     
  1426                           ; BSR set to: 14
  1427                           ;main.c: 66:     TRISDbits.TRISD4=0;
  1428   002356  9884               	bcf	132,4,c	;volatile
  1429   002358                     
  1430                           ; BSR set to: 14
  1431                           ;main.c: 69:     LATDbits.LATD3=0;
  1432   002358  967C               	bcf	124,3,c	;volatile
  1433   00235A                     
  1434                           ; BSR set to: 14
  1435                           ;main.c: 70:     TRISDbits.TRISD3=0;
  1436   00235A  9684               	bcf	132,3,c	;volatile
  1437   00235C                     
  1438                           ; BSR set to: 14
  1439                           ;main.c: 74:     motorL.power=0;
  1440   00235C  0E00               	movlw	0
  1441   00235E  0101               	movlb	1	; () banked
  1442   002360  6F61               	movwf	_motorL& (0+255),b
  1443   002362                     
  1444                           ; BSR set to: 1
  1445                           ;main.c: 75:     motorL.direction=1;
  1446   002362  0E01               	movlw	1
  1447   002364  6F62               	movwf	(_motorL+1)& (0+255),b
  1448   002366                     
  1449                           ; BSR set to: 1
  1450                           ;main.c: 76:     motorL.brakemode=1;
  1451   002366  0E01               	movlw	1
  1452   002368  6F63               	movwf	(_motorL+2)& (0+255),b
  1453   00236A                     
  1454                           ; BSR set to: 1
  1455                           ;main.c: 77:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1456   00236A  0EAA               	movlw	170
  1457   00236C  6F66               	movwf	(_motorL+5)& (0+255),b
  1458   00236E  0E0F               	movlw	15
  1459   002370  6F67               	movwf	(_motorL+6)& (0+255),b
  1460   002372                     
  1461                           ; BSR set to: 1
  1462                           ;main.c: 78:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1463   002372  0EA6               	movlw	166
  1464   002374  6F68               	movwf	(_motorL+7)& (0+255),b
  1465   002376  0E0F               	movlw	15
  1466   002378  6F69               	movwf	(_motorL+8)& (0+255),b
  1467   00237A                     
  1468                           ; BSR set to: 1
  1469                           ;main.c: 79:     motorL.PWMperiod=200;
  1470   00237A  0E00               	movlw	0
  1471   00237C  6F65               	movwf	(_motorL+4)& (0+255),b
  1472   00237E  0EC8               	movlw	200
  1473   002380  6F64               	movwf	(_motorL+3)& (0+255),b
  1474   002382                     
  1475                           ; BSR set to: 1
  1476                           ;main.c: 80:     motorR.power=0;
  1477   002382  0E00               	movlw	0
  1478   002384  6F58               	movwf	_motorR& (0+255),b
  1479   002386                     
  1480                           ; BSR set to: 1
  1481                           ;main.c: 81:     motorR.direction=1;
  1482   002386  0E01               	movlw	1
  1483   002388  6F59               	movwf	(_motorR+1)& (0+255),b
  1484   00238A                     
  1485                           ; BSR set to: 1
  1486                           ;main.c: 82:     motorR.brakemode=1;
  1487   00238A  0E01               	movlw	1
  1488   00238C  6F5A               	movwf	(_motorR+2)& (0+255),b
  1489   00238E                     
  1490                           ; BSR set to: 1
  1491                           ;main.c: 83:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1492   00238E  0E25               	movlw	37
  1493   002390  6F5D               	movwf	(_motorR+5)& (0+255),b
  1494   002392  0E0F               	movlw	15
  1495   002394  6F5E               	movwf	(_motorR+6)& (0+255),b
  1496   002396                     
  1497                           ; BSR set to: 1
  1498                           ;main.c: 84:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1499   002396  0E21               	movlw	33
  1500   002398  6F5F               	movwf	(_motorR+7)& (0+255),b
  1501   00239A  0E0F               	movlw	15
  1502   00239C  6F60               	movwf	(_motorR+8)& (0+255),b
  1503   00239E                     
  1504                           ; BSR set to: 1
  1505                           ;main.c: 85:     motorR.PWMperiod=200;
  1506   00239E  0E00               	movlw	0
  1507   0023A0  6F5C               	movwf	(_motorR+4)& (0+255),b
  1508   0023A2  0EC8               	movlw	200
  1509   0023A4  6F5B               	movwf	(_motorR+3)& (0+255),b
  1510   0023A6                     
  1511                           ; BSR set to: 1
  1512                           ;main.c: 87:     int consecuitive=0;
  1513   0023A6  0E00               	movlw	0
  1514   0023A8  6FD9               	movwf	(main@consecuitive+1)& (0+255),b
  1515   0023AA  0E00               	movlw	0
  1516   0023AC  6FD8               	movwf	main@consecuitive& (0+255),b
  1517   0023AE                     
  1518                           ; BSR set to: 1
  1519                           ;main.c: 88:     int prev_colour =0;
  1520   0023AE  0E00               	movlw	0
  1521   0023B0  6FDD               	movwf	(main@prev_colour+1)& (0+255),b
  1522   0023B2  0E00               	movlw	0
  1523   0023B4  6FDC               	movwf	main@prev_colour& (0+255),b
  1524   0023B6                     
  1525                           ; BSR set to: 1
  1526                           ;main.c: 89:     run_flag=1;
  1527   0023B6  0E00               	movlw	0
  1528   0023B8  6F17               	movwf	(_run_flag+1)& (0+255),b
  1529   0023BA  0E01               	movlw	1
  1530   0023BC  6F16               	movwf	_run_flag& (0+255),b
  1531   0023BE                     
  1532                           ; BSR set to: 1
  1533                           ;main.c: 90:     move_count=-1;
  1534   0023BE  6914               	setf	_move_count& (0+255),b	;volatile
  1535   0023C0  6915               	setf	(_move_count+1)& (0+255),b	;volatile
  1536   0023C2                     
  1537                           ; BSR set to: 1
  1538                           ;main.c: 92:     turnCalibration(&motorL,&motorR);
  1539   0023C2  0E61               	movlw	low _motorL
  1540   0023C4  6E20               	movwf	turnCalibration@mL^0,c
  1541   0023C6  0E01               	movlw	high _motorL
  1542   0023C8  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1543   0023CA  0E58               	movlw	low _motorR
  1544   0023CC  6E22               	movwf	turnCalibration@mR^0,c
  1545   0023CE  0E01               	movlw	high _motorR
  1546   0023D0  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1547   0023D2  EC57  F021         	call	_turnCalibration	;wreg free
  1548   0023D6                     
  1549                           ;main.c: 94:     LATFbits.LATF0=0;
  1550   0023D6  907E               	bcf	126,0,c	;volatile
  1551   0023D8                     
  1552                           ;main.c: 95:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1553   0023D8  0E52               	movlw	82
  1554   0023DA  0100               	movlb	0	; () banked
  1555   0023DC  6FD2               	movwf	(??_main+1)& (0+255),b
  1556   0023DE  0E2B               	movlw	43
  1557   0023E0  6FD1               	movwf	??_main& (0+255),b
  1558   0023E2  0E00               	movlw	0
  1559   0023E4                     u5907:
  1560   0023E4  2EE8               	decfsz	wreg,f,c
  1561   0023E6  D7FE               	bra	u5907
  1562   0023E8  2FD1               	decfsz	??_main& (0+255),f,b
  1563   0023EA  D7FC               	bra	u5907
  1564   0023EC  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1565   0023EE  D7FA               	bra	u5907
  1566   0023F0  F000               	nop	
  1567   0023F2                     l366:
  1568   0023F2  B48E               	btfsc	142,2,c	;volatile
  1569   0023F4  EFFE  F011         	goto	u5681
  1570   0023F8  EF00  F012         	goto	u5680
  1571   0023FC                     u5681:
  1572   0023FC  EFF9  F011         	goto	l366
  1573   002400                     u5680:
  1574   002400                     
  1575                           ;main.c: 98:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1576   002400  0E52               	movlw	82
  1577   002402  0100               	movlb	0	; () banked
  1578   002404  6FD2               	movwf	(??_main+1)& (0+255),b
  1579   002406  0E2B               	movlw	43
  1580   002408  6FD1               	movwf	??_main& (0+255),b
  1581   00240A  0E00               	movlw	0
  1582   00240C                     u5917:
  1583   00240C  2EE8               	decfsz	wreg,f,c
  1584   00240E  D7FE               	bra	u5917
  1585   002410  2FD1               	decfsz	??_main& (0+255),f,b
  1586   002412  D7FC               	bra	u5917
  1587   002414  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1588   002416  D7FA               	bra	u5917
  1589   002418  F000               	nop	
  1590   00241A                     
  1591                           ;main.c: 99:     T0CON0bits.T0EN=1;
  1592   00241A  8ED5               	bsf	213,7,c	;volatile
  1593                           
  1594                           ;main.c: 100:     while (run_flag)
  1595   00241C  EF37  F014         	goto	l5887
  1596   002420                     l5755:
  1597                           
  1598                           ; BSR set to: 1
  1599                           ;main.c: 101:     {;main.c: 102:         lost_count=0;
  1600   002420  0E00               	movlw	0
  1601   002422  6FD7               	movwf	(main@lost_count+1)& (0+255),b
  1602   002424  0E00               	movlw	0
  1603   002426  6FD6               	movwf	main@lost_count& (0+255),b
  1604   002428                     
  1605                           ; BSR set to: 1
  1606                           ;main.c: 103:         fullSpeedAhead(&motorL,&motorR);
  1607   002428  0E61               	movlw	low _motorL
  1608   00242A  6E14               	movwf	fullSpeedAhead@mL^0,c
  1609   00242C  0E01               	movlw	high _motorL
  1610   00242E  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1611   002430  0E58               	movlw	low _motorR
  1612   002432  6E16               	movwf	fullSpeedAhead@mR^0,c
  1613   002434  0E01               	movlw	high _motorR
  1614   002436  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1615   002438  EC83  F029         	call	_fullSpeedAhead	;wreg free
  1616   00243C                     
  1617                           ;main.c: 105:         readColours(&vals);
  1618   00243C  0E6A               	movlw	low _vals
  1619   00243E  6E0C               	movwf	readColours@vals^0,c
  1620   002440  0E01               	movlw	high _vals
  1621   002442  6E0D               	movwf	(readColours@vals+1)^0,c
  1622   002444  EC67  F02B         	call	_readColours	;wreg free
  1623   002448                     
  1624                           ;main.c: 108:         colour_rel(&vals, &rel);
  1625   002448  0E6A               	movlw	low _vals
  1626   00244A  6E4B               	movwf	colour_rel@vals^0,c
  1627   00244C  0E01               	movlw	high _vals
  1628   00244E  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1629   002450  0E4C               	movlw	low _rel
  1630   002452  6E4D               	movwf	colour_rel@rel^0,c
  1631   002454  0E01               	movlw	high _rel
  1632   002456  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1633   002458  EC85  F01A         	call	_colour_rel	;wreg free
  1634   00245C                     
  1635                           ;main.c: 111:         if (vals.L>=500){
  1636   00245C  0101               	movlb	1	; () banked
  1637   00245E  BF71               	btfsc	(_vals+7)& (0+255),7,b
  1638   002460  EF3B  F012         	goto	u5691
  1639   002464  0EF4               	movlw	244
  1640   002466  5D70               	subwf	(_vals+6)& (0+255),w,b
  1641   002468  0E01               	movlw	1
  1642   00246A  5971               	subwfb	(_vals+7)& (0+255),w,b
  1643   00246C  A0D8               	btfss	status,0,c
  1644   00246E  EF3B  F012         	goto	u5691
  1645   002472  EF3D  F012         	goto	u5690
  1646   002476                     u5691:
  1647   002476  EF1D  F014         	goto	l5879
  1648   00247A                     u5690:
  1649   00247A                     
  1650                           ; BSR set to: 1
  1651                           ;main.c: 112:             move_count++;
  1652   00247A  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1653   00247C  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1654   00247E                     
  1655                           ; BSR set to: 1
  1656                           ;main.c: 113:             getTMR0val();
  1657   00247E  EC22  F030         	call	_getTMR0val	;wreg free
  1658   002482                     
  1659                           ;main.c: 115:             Forwardhalfblock(&motorL,&motorR);
  1660   002482  0E61               	movlw	low _motorL
  1661   002484  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1662   002486  0E01               	movlw	high _motorL
  1663   002488  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1664   00248A  0E58               	movlw	low _motorR
  1665   00248C  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1666   00248E  0E01               	movlw	high _motorR
  1667   002490  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1668   002492  EC1D  F02C         	call	_Forwardhalfblock	;wreg free
  1669   002496                     
  1670                           ;main.c: 117:             stop(&motorL, &motorR);
  1671   002496  0E61               	movlw	low _motorL
  1672   002498  6E14               	movwf	stop@mL^0,c
  1673   00249A  0E01               	movlw	high _motorL
  1674   00249C  6E15               	movwf	(stop@mL+1)^0,c
  1675   00249E  0E58               	movlw	low _motorR
  1676   0024A0  6E16               	movwf	stop@mR^0,c
  1677   0024A2  0E01               	movlw	high _motorR
  1678   0024A4  6E17               	movwf	(stop@mR+1)^0,c
  1679   0024A6  EC16  F02A         	call	_stop	;wreg free
  1680   0024AA                     
  1681                           ;main.c: 118:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1682   0024AA  0E11               	movlw	17
  1683   0024AC  0100               	movlb	0	; () banked
  1684   0024AE  6FD2               	movwf	(??_main+1)& (0+255),b
  1685   0024B0  0E3C               	movlw	60
  1686   0024B2  6FD1               	movwf	??_main& (0+255),b
  1687   0024B4  0ECB               	movlw	203
  1688   0024B6                     u5927:
  1689   0024B6  2EE8               	decfsz	wreg,f,c
  1690   0024B8  D7FE               	bra	u5927
  1691   0024BA  2FD1               	decfsz	??_main& (0+255),f,b
  1692   0024BC  D7FC               	bra	u5927
  1693   0024BE  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1694   0024C0  D7FA               	bra	u5927
  1695                           
  1696                           ;main.c: 125:             while (consecuitive<4){
  1697   0024C2  EFA1  F012         	goto	l5789
  1698   0024C6                     l5775:
  1699                           
  1700                           ; BSR set to: 1
  1701                           ;main.c: 126:                 _delay((unsigned long)((300)*(64000000/4000.0)));
  1702   0024C6  0E19               	movlw	25
  1703   0024C8  0100               	movlb	0	; () banked
  1704   0024CA  6FD2               	movwf	(??_main+1)& (0+255),b
  1705   0024CC  0E5A               	movlw	90
  1706   0024CE  6FD1               	movwf	??_main& (0+255),b
  1707   0024D0  0EB1               	movlw	177
  1708   0024D2                     u5937:
  1709   0024D2  2EE8               	decfsz	wreg,f,c
  1710   0024D4  D7FE               	bra	u5937
  1711   0024D6  2FD1               	decfsz	??_main& (0+255),f,b
  1712   0024D8  D7FC               	bra	u5937
  1713   0024DA  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1714   0024DC  D7FA               	bra	u5937
  1715   0024DE  D000               	nop2	
  1716   0024E0                     
  1717                           ;main.c: 127:                 int colour = Colour_decider(&vals, &rel);
  1718   0024E0  0E6A               	movlw	low _vals
  1719   0024E2  6E4B               	movwf	Colour_decider@vals^0,c
  1720   0024E4  0E01               	movlw	high _vals
  1721   0024E6  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1722   0024E8  0E4C               	movlw	low _rel
  1723   0024EA  6E4D               	movwf	Colour_decider@rel^0,c
  1724   0024EC  0E01               	movlw	high _rel
  1725   0024EE  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1726   0024F0  EC1C  F007         	call	_Colour_decider	;wreg free
  1727   0024F4  C04B  F1DA         	movff	?_Colour_decider,main@colour
  1728   0024F8  C04C  F1DB         	movff	?_Colour_decider+1,main@colour+1
  1729   0024FC                     
  1730                           ;main.c: 128:                 if (colour==prev_colour){
  1731   0024FC  0101               	movlb	1	; () banked
  1732   0024FE  51DC               	movf	main@prev_colour& (0+255),w,b
  1733   002500  19DA               	xorwf	main@colour& (0+255),w,b
  1734   002502  E107               	bnz	u5701
  1735   002504  51DD               	movf	(main@prev_colour+1)& (0+255),w,b
  1736   002506  19DB               	xorwf	(main@colour+1)& (0+255),w,b
  1737   002508  A4D8               	btfss	status,2,c
  1738   00250A  EF89  F012         	goto	u5701
  1739   00250E  EF8B  F012         	goto	u5700
  1740   002512                     u5701:
  1741   002512  EF8F  F012         	goto	l5783
  1742   002516                     u5700:
  1743   002516                     
  1744                           ; BSR set to: 1
  1745                           ;main.c: 129:                     consecuitive++;
  1746   002516  4BD8               	infsnz	main@consecuitive& (0+255),f,b
  1747   002518  2BD9               	incf	(main@consecuitive+1)& (0+255),f,b
  1748                           
  1749                           ;main.c: 130:                 }
  1750   00251A  EF93  F012         	goto	l5785
  1751   00251E                     l5783:
  1752                           
  1753                           ; BSR set to: 1
  1754                           ;main.c: 132:                     consecuitive=0;
  1755   00251E  0E00               	movlw	0
  1756   002520  6FD9               	movwf	(main@consecuitive+1)& (0+255),b
  1757   002522  0E00               	movlw	0
  1758   002524  6FD8               	movwf	main@consecuitive& (0+255),b
  1759   002526                     l5785:
  1760                           
  1761                           ; BSR set to: 1
  1762                           ;main.c: 134:                 prev_colour=colour;
  1763   002526  C1DA  F1DC         	movff	main@colour,main@prev_colour
  1764   00252A  C1DB  F1DD         	movff	main@colour+1,main@prev_colour+1
  1765   00252E                     
  1766                           ; BSR set to: 1
  1767                           ;main.c: 135:                 RetryMove(&motorL, &motorR);
  1768   00252E  0E61               	movlw	low _motorL
  1769   002530  6E20               	movwf	RetryMove@mL^0,c
  1770   002532  0E01               	movlw	high _motorL
  1771   002534  6E21               	movwf	(RetryMove@mL+1)^0,c
  1772   002536  0E58               	movlw	low _motorR
  1773   002538  6E22               	movwf	RetryMove@mR^0,c
  1774   00253A  0E01               	movlw	high _motorR
  1775   00253C  6E23               	movwf	(RetryMove@mR+1)^0,c
  1776   00253E  ECCC  F02A         	call	_RetryMove	;wreg free
  1777   002542                     l5789:
  1778                           
  1779                           ;main.c: 125:             while (consecuitive<4){
  1780   002542  0101               	movlb	1	; () banked
  1781   002544  BFD9               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1782   002546  EFAE  F012         	goto	u5711
  1783   00254A  51D9               	movf	(main@consecuitive+1)& (0+255),w,b
  1784   00254C  E109               	bnz	u5710
  1785   00254E  0E04               	movlw	4
  1786   002550  5DD8               	subwf	main@consecuitive& (0+255),w,b
  1787   002552  A0D8               	btfss	status,0,c
  1788   002554  EFAE  F012         	goto	u5711
  1789   002558  EFB0  F012         	goto	u5710
  1790   00255C                     u5711:
  1791   00255C  EF63  F012         	goto	l5775
  1792   002560                     u5710:
  1793   002560                     
  1794                           ; BSR set to: 1
  1795                           ;main.c: 137:             consecuitive=0;
  1796   002560  0E00               	movlw	0
  1797   002562  6FD9               	movwf	(main@consecuitive+1)& (0+255),b
  1798   002564  0E00               	movlw	0
  1799   002566  6FD8               	movwf	main@consecuitive& (0+255),b
  1800   002568                     
  1801                           ; BSR set to: 1
  1802                           ;main.c: 141:             sprintf(buf,"red=%f green=%f blue=%f lum=%d colour1=%d \r\n",r
      +                          el.R, rel.G,rel.B,vals.L, prev_colour);
  1803   002568  0E72               	movlw	low main@buf
  1804   00256A  0100               	movlb	0	; () banked
  1805   00256C  6FB0               	movwf	sprintf@s& (0+255),b
  1806   00256E  0E01               	movlw	high main@buf
  1807   002570  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1808   002572  0E01               	movlw	low STR_1
  1809   002574  6FB2               	movwf	sprintf@fmt& (0+255),b
  1810   002576  0E0E               	movlw	high STR_1
  1811   002578  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1812   00257A  C14C  F0B4         	movff	_rel,?_sprintf+4
  1813   00257E  C14D  F0B5         	movff	_rel+1,?_sprintf+5
  1814   002582  C14E  F0B6         	movff	_rel+2,?_sprintf+6
  1815   002586  C14F  F0B7         	movff	_rel+3,?_sprintf+7
  1816   00258A  C150  F0B8         	movff	_rel+4,?_sprintf+8
  1817   00258E  C151  F0B9         	movff	_rel+5,?_sprintf+9
  1818   002592  C152  F0BA         	movff	_rel+6,?_sprintf+10
  1819   002596  C153  F0BB         	movff	_rel+7,?_sprintf+11
  1820   00259A  C154  F0BC         	movff	_rel+8,?_sprintf+12
  1821   00259E  C155  F0BD         	movff	_rel+9,?_sprintf+13
  1822   0025A2  C156  F0BE         	movff	_rel+10,?_sprintf+14
  1823   0025A6  C157  F0BF         	movff	_rel+11,?_sprintf+15
  1824   0025AA  C170  F0C0         	movff	_vals+6,?_sprintf+16
  1825   0025AE  C171  F0C1         	movff	_vals+7,?_sprintf+17
  1826   0025B2  C1DC  F0C2         	movff	main@prev_colour,?_sprintf+18
  1827   0025B6  C1DD  F0C3         	movff	main@prev_colour+1,?_sprintf+19
  1828   0025BA  EC75  F02C         	call	_sprintf	;wreg free
  1829   0025BE                     
  1830                           ;main.c: 142:             sendStringSerial4(buf);
  1831   0025BE  0E72               	movlw	low main@buf
  1832   0025C0  6E02               	movwf	sendStringSerial4@string^0,c
  1833   0025C2  0E01               	movlw	high main@buf
  1834   0025C4  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1835   0025C6  ECE1  F02F         	call	_sendStringSerial4	;wreg free
  1836   0025CA                     
  1837                           ;main.c: 144:             if (prev_colour==1){
  1838   0025CA  0101               	movlb	1	; () banked
  1839   0025CC  05DC               	decf	main@prev_colour& (0+255),w,b
  1840   0025CE  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1841   0025D0  A4D8               	btfss	status,2,c
  1842   0025D2  EFED  F012         	goto	u5721
  1843   0025D6  EFEF  F012         	goto	u5720
  1844   0025DA                     u5721:
  1845   0025DA  EF08  F013         	goto	l5807
  1846   0025DE                     u5720:
  1847   0025DE                     
  1848                           ; BSR set to: 1
  1849                           ;main.c: 145:                 RedMove(&motorL, &motorR);
  1850   0025DE  0E61               	movlw	low _motorL
  1851   0025E0  6E20               	movwf	RedMove@mL^0,c
  1852   0025E2  0E01               	movlw	high _motorL
  1853   0025E4  6E21               	movwf	(RedMove@mL+1)^0,c
  1854   0025E6  0E58               	movlw	low _motorR
  1855   0025E8  6E22               	movwf	RedMove@mR^0,c
  1856   0025EA  0E01               	movlw	high _motorR
  1857   0025EC  6E23               	movwf	(RedMove@mR+1)^0,c
  1858   0025EE  EC50  F02F         	call	_RedMove	;wreg free
  1859   0025F2                     
  1860                           ;main.c: 146:                 TMR0H=0;
  1861   0025F2  0E00               	movlw	0
  1862   0025F4  6ED4               	movwf	212,c	;volatile
  1863   0025F6                     
  1864                           ;main.c: 147:                 TMR0L=0;
  1865   0025F6  0E00               	movlw	0
  1866   0025F8  6ED3               	movwf	211,c	;volatile
  1867   0025FA                     
  1868                           ;main.c: 148:                 WayBack[move_count]=1;
  1869   0025FA  0E1A               	movlw	low _WayBack
  1870   0025FC  0101               	movlb	1	; () banked
  1871   0025FE  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1872   002600  6ED9               	movwf	fsr2l,c
  1873   002602  0E01               	movlw	high _WayBack
  1874   002604  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1875   002606  6EDA               	movwf	fsr2h,c
  1876   002608  0E01               	movlw	1
  1877   00260A  6EDF               	movwf	indf2,c
  1878                           
  1879                           ;main.c: 149:             }
  1880   00260C  EF37  F014         	goto	l5887
  1881   002610                     l5807:
  1882                           
  1883                           ; BSR set to: 1
  1884   002610  0E02               	movlw	2
  1885   002612  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1886   002614  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1887   002616  A4D8               	btfss	status,2,c
  1888   002618  EF10  F013         	goto	u5731
  1889   00261C  EF12  F013         	goto	u5730
  1890   002620                     u5731:
  1891   002620  EF2B  F013         	goto	l5817
  1892   002624                     u5730:
  1893   002624                     
  1894                           ; BSR set to: 1
  1895                           ;main.c: 151:                 OrangeMove(&motorL, &motorR);
  1896   002624  0E61               	movlw	low _motorL
  1897   002626  6E20               	movwf	OrangeMove@mL^0,c
  1898   002628  0E01               	movlw	high _motorL
  1899   00262A  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1900   00262C  0E58               	movlw	low _motorR
  1901   00262E  6E22               	movwf	OrangeMove@mR^0,c
  1902   002630  0E01               	movlw	high _motorR
  1903   002632  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1904   002634  EC9E  F02C         	call	_OrangeMove	;wreg free
  1905   002638                     
  1906                           ;main.c: 152:                 TMR0H=0;
  1907   002638  0E00               	movlw	0
  1908   00263A  6ED4               	movwf	212,c	;volatile
  1909   00263C                     
  1910                           ;main.c: 153:                 TMR0L=0;
  1911   00263C  0E00               	movlw	0
  1912   00263E  6ED3               	movwf	211,c	;volatile
  1913   002640                     
  1914                           ;main.c: 154:                 WayBack[move_count]=2;
  1915   002640  0E1A               	movlw	low _WayBack
  1916   002642  0101               	movlb	1	; () banked
  1917   002644  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1918   002646  6ED9               	movwf	fsr2l,c
  1919   002648  0E01               	movlw	high _WayBack
  1920   00264A  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1921   00264C  6EDA               	movwf	fsr2h,c
  1922   00264E  0E02               	movlw	2
  1923   002650  6EDF               	movwf	indf2,c
  1924                           
  1925                           ;main.c: 155:             }
  1926   002652  EF37  F014         	goto	l5887
  1927   002656                     l5817:
  1928                           
  1929                           ; BSR set to: 1
  1930   002656  0E03               	movlw	3
  1931   002658  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1932   00265A  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1933   00265C  A4D8               	btfss	status,2,c
  1934   00265E  EF33  F013         	goto	u5741
  1935   002662  EF35  F013         	goto	u5740
  1936   002666                     u5741:
  1937   002666  EF4E  F013         	goto	l5827
  1938   00266A                     u5740:
  1939   00266A                     
  1940                           ; BSR set to: 1
  1941                           ;main.c: 157:                 YellowMove(&motorL, &motorR);
  1942   00266A  0E61               	movlw	low _motorL
  1943   00266C  6E20               	movwf	YellowMove@mL^0,c
  1944   00266E  0E01               	movlw	high _motorL
  1945   002670  6E21               	movwf	(YellowMove@mL+1)^0,c
  1946   002672  0E58               	movlw	low _motorR
  1947   002674  6E22               	movwf	YellowMove@mR^0,c
  1948   002676  0E01               	movlw	high _motorR
  1949   002678  6E23               	movwf	(YellowMove@mR+1)^0,c
  1950   00267A  EC19  F02D         	call	_YellowMove	;wreg free
  1951   00267E                     
  1952                           ;main.c: 158:                 TMR0H=0;
  1953   00267E  0E00               	movlw	0
  1954   002680  6ED4               	movwf	212,c	;volatile
  1955   002682                     
  1956                           ;main.c: 159:                 TMR0L=0;
  1957   002682  0E00               	movlw	0
  1958   002684  6ED3               	movwf	211,c	;volatile
  1959   002686                     
  1960                           ;main.c: 160:                 WayBack[move_count]=3;
  1961   002686  0E1A               	movlw	low _WayBack
  1962   002688  0101               	movlb	1	; () banked
  1963   00268A  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1964   00268C  6ED9               	movwf	fsr2l,c
  1965   00268E  0E01               	movlw	high _WayBack
  1966   002690  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1967   002692  6EDA               	movwf	fsr2h,c
  1968   002694  0E03               	movlw	3
  1969   002696  6EDF               	movwf	indf2,c
  1970                           
  1971                           ;main.c: 161:             }
  1972   002698  EF37  F014         	goto	l5887
  1973   00269C                     l5827:
  1974                           
  1975                           ; BSR set to: 1
  1976   00269C  0E04               	movlw	4
  1977   00269E  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1978   0026A0  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1979   0026A2  A4D8               	btfss	status,2,c
  1980   0026A4  EF56  F013         	goto	u5751
  1981   0026A8  EF58  F013         	goto	u5750
  1982   0026AC                     u5751:
  1983   0026AC  EF71  F013         	goto	l5837
  1984   0026B0                     u5750:
  1985   0026B0                     
  1986                           ; BSR set to: 1
  1987                           ;main.c: 163:                 BlueMove(&motorL, &motorR);
  1988   0026B0  0E61               	movlw	low _motorL
  1989   0026B2  6E20               	movwf	BlueMove@mL^0,c
  1990   0026B4  0E01               	movlw	high _motorL
  1991   0026B6  6E21               	movwf	(BlueMove@mL+1)^0,c
  1992   0026B8  0E58               	movlw	low _motorR
  1993   0026BA  6E22               	movwf	BlueMove@mR^0,c
  1994   0026BC  0E01               	movlw	high _motorR
  1995   0026BE  6E23               	movwf	(BlueMove@mR+1)^0,c
  1996   0026C0  EC34  F02B         	call	_BlueMove	;wreg free
  1997   0026C4                     
  1998                           ;main.c: 164:                 TMR0H=0;
  1999   0026C4  0E00               	movlw	0
  2000   0026C6  6ED4               	movwf	212,c	;volatile
  2001   0026C8                     
  2002                           ;main.c: 165:                 TMR0L=0;
  2003   0026C8  0E00               	movlw	0
  2004   0026CA  6ED3               	movwf	211,c	;volatile
  2005   0026CC                     
  2006                           ;main.c: 166:                 WayBack[move_count]=4;
  2007   0026CC  0E1A               	movlw	low _WayBack
  2008   0026CE  0101               	movlb	1	; () banked
  2009   0026D0  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2010   0026D2  6ED9               	movwf	fsr2l,c
  2011   0026D4  0E01               	movlw	high _WayBack
  2012   0026D6  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2013   0026D8  6EDA               	movwf	fsr2h,c
  2014   0026DA  0E04               	movlw	4
  2015   0026DC  6EDF               	movwf	indf2,c
  2016                           
  2017                           ;main.c: 167:             }
  2018   0026DE  EF37  F014         	goto	l5887
  2019   0026E2                     l5837:
  2020                           
  2021                           ; BSR set to: 1
  2022   0026E2  0E05               	movlw	5
  2023   0026E4  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2024   0026E6  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2025   0026E8  A4D8               	btfss	status,2,c
  2026   0026EA  EF79  F013         	goto	u5761
  2027   0026EE  EF7B  F013         	goto	u5760
  2028   0026F2                     u5761:
  2029   0026F2  EF94  F013         	goto	l5847
  2030   0026F6                     u5760:
  2031   0026F6                     
  2032                           ; BSR set to: 1
  2033                           ;main.c: 169:                 GreenMove(&motorL, &motorR);
  2034   0026F6  0E61               	movlw	low _motorL
  2035   0026F8  6E20               	movwf	GreenMove@mL^0,c
  2036   0026FA  0E01               	movlw	high _motorL
  2037   0026FC  6E21               	movwf	(GreenMove@mL+1)^0,c
  2038   0026FE  0E58               	movlw	low _motorR
  2039   002700  6E22               	movwf	GreenMove@mR^0,c
  2040   002702  0E01               	movlw	high _motorR
  2041   002704  6E23               	movwf	(GreenMove@mR+1)^0,c
  2042   002706  EC6F  F02F         	call	_GreenMove	;wreg free
  2043   00270A                     
  2044                           ;main.c: 170:                 TMR0H=0;
  2045   00270A  0E00               	movlw	0
  2046   00270C  6ED4               	movwf	212,c	;volatile
  2047   00270E                     
  2048                           ;main.c: 171:                 TMR0L=0;
  2049   00270E  0E00               	movlw	0
  2050   002710  6ED3               	movwf	211,c	;volatile
  2051   002712                     
  2052                           ;main.c: 172:                 WayBack[move_count]=5;
  2053   002712  0E1A               	movlw	low _WayBack
  2054   002714  0101               	movlb	1	; () banked
  2055   002716  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2056   002718  6ED9               	movwf	fsr2l,c
  2057   00271A  0E01               	movlw	high _WayBack
  2058   00271C  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2059   00271E  6EDA               	movwf	fsr2h,c
  2060   002720  0E05               	movlw	5
  2061   002722  6EDF               	movwf	indf2,c
  2062                           
  2063                           ;main.c: 173:             }
  2064   002724  EF37  F014         	goto	l5887
  2065   002728                     l5847:
  2066                           
  2067                           ; BSR set to: 1
  2068   002728  0E06               	movlw	6
  2069   00272A  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2070   00272C  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2071   00272E  A4D8               	btfss	status,2,c
  2072   002730  EF9C  F013         	goto	u5771
  2073   002734  EF9E  F013         	goto	u5770
  2074   002738                     u5771:
  2075   002738  EFB7  F013         	goto	l5857
  2076   00273C                     u5770:
  2077   00273C                     
  2078                           ; BSR set to: 1
  2079                           ;main.c: 175:                 LightBlueMove(&motorL, &motorR);
  2080   00273C  0E61               	movlw	low _motorL
  2081   00273E  6E20               	movwf	LightBlueMove@mL^0,c
  2082   002740  0E01               	movlw	high _motorL
  2083   002742  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  2084   002744  0E58               	movlw	low _motorR
  2085   002746  6E22               	movwf	LightBlueMove@mR^0,c
  2086   002748  0E01               	movlw	high _motorR
  2087   00274A  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  2088   00274C  ECC7  F02C         	call	_LightBlueMove	;wreg free
  2089   002750                     
  2090                           ;main.c: 176:                 TMR0H=0;
  2091   002750  0E00               	movlw	0
  2092   002752  6ED4               	movwf	212,c	;volatile
  2093   002754                     
  2094                           ;main.c: 177:                 TMR0L=0;
  2095   002754  0E00               	movlw	0
  2096   002756  6ED3               	movwf	211,c	;volatile
  2097   002758                     
  2098                           ;main.c: 178:                 WayBack[move_count]=6;
  2099   002758  0E1A               	movlw	low _WayBack
  2100   00275A  0101               	movlb	1	; () banked
  2101   00275C  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2102   00275E  6ED9               	movwf	fsr2l,c
  2103   002760  0E01               	movlw	high _WayBack
  2104   002762  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2105   002764  6EDA               	movwf	fsr2h,c
  2106   002766  0E06               	movlw	6
  2107   002768  6EDF               	movwf	indf2,c
  2108                           
  2109                           ;main.c: 179:             }
  2110   00276A  EF37  F014         	goto	l5887
  2111   00276E                     l5857:
  2112                           
  2113                           ; BSR set to: 1
  2114   00276E  0E07               	movlw	7
  2115   002770  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2116   002772  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2117   002774  A4D8               	btfss	status,2,c
  2118   002776  EFBF  F013         	goto	u5781
  2119   00277A  EFC1  F013         	goto	u5780
  2120   00277E                     u5781:
  2121   00277E  EFDA  F013         	goto	l5867
  2122   002782                     u5780:
  2123   002782                     
  2124                           ; BSR set to: 1
  2125                           ;main.c: 181:                 PinkMove(&motorL, &motorR);
  2126   002782  0E61               	movlw	low _motorL
  2127   002784  6E20               	movwf	PinkMove@mL^0,c
  2128   002786  0E01               	movlw	high _motorL
  2129   002788  6E21               	movwf	(PinkMove@mL+1)^0,c
  2130   00278A  0E58               	movlw	low _motorR
  2131   00278C  6E22               	movwf	PinkMove@mR^0,c
  2132   00278E  0E01               	movlw	high _motorR
  2133   002790  6E23               	movwf	(PinkMove@mR+1)^0,c
  2134   002792  EC42  F02D         	call	_PinkMove	;wreg free
  2135   002796                     
  2136                           ;main.c: 182:                 TMR0H=0;
  2137   002796  0E00               	movlw	0
  2138   002798  6ED4               	movwf	212,c	;volatile
  2139   00279A                     
  2140                           ;main.c: 183:                 TMR0L=0;
  2141   00279A  0E00               	movlw	0
  2142   00279C  6ED3               	movwf	211,c	;volatile
  2143   00279E                     
  2144                           ;main.c: 184:                 WayBack[move_count]=7;
  2145   00279E  0E1A               	movlw	low _WayBack
  2146   0027A0  0101               	movlb	1	; () banked
  2147   0027A2  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2148   0027A4  6ED9               	movwf	fsr2l,c
  2149   0027A6  0E01               	movlw	high _WayBack
  2150   0027A8  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2151   0027AA  6EDA               	movwf	fsr2h,c
  2152   0027AC  0E07               	movlw	7
  2153   0027AE  6EDF               	movwf	indf2,c
  2154                           
  2155                           ;main.c: 185:             }
  2156   0027B0  EF37  F014         	goto	l5887
  2157   0027B4                     l5867:
  2158                           
  2159                           ; BSR set to: 1
  2160   0027B4  0E0A               	movlw	10
  2161   0027B6  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2162   0027B8  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2163   0027BA  A4D8               	btfss	status,2,c
  2164   0027BC  EFE2  F013         	goto	u5791
  2165   0027C0  EFE4  F013         	goto	u5790
  2166   0027C4                     u5791:
  2167   0027C4  EF06  F014         	goto	l5875
  2168   0027C8                     u5790:
  2169   0027C8                     
  2170                           ; BSR set to: 1
  2171                           ;main.c: 187:                 lost_count++;
  2172   0027C8  4BD6               	infsnz	main@lost_count& (0+255),f,b
  2173   0027CA  2BD7               	incf	(main@lost_count+1)& (0+255),f,b
  2174   0027CC                     
  2175                           ; BSR set to: 1
  2176                           ;main.c: 188:                 if (lost_count==4){
  2177   0027CC  0E04               	movlw	4
  2178   0027CE  19D6               	xorwf	main@lost_count& (0+255),w,b
  2179   0027D0  11D7               	iorwf	(main@lost_count+1)& (0+255),w,b
  2180   0027D2  A4D8               	btfss	status,2,c
  2181   0027D4  EFEE  F013         	goto	u5801
  2182   0027D8  EFF0  F013         	goto	u5800
  2183   0027DC                     u5801:
  2184   0027DC  EFFA  F013         	goto	l392
  2185   0027E0                     u5800:
  2186   0027E0                     
  2187                           ; BSR set to: 1
  2188                           ;main.c: 189:                     go_Home(WayBack, Time_forward);
  2189   0027E0  0E1A               	movlw	low _WayBack
  2190   0027E2  6E24               	movwf	go_Home@WayBack^0,c
  2191   0027E4  0E01               	movlw	high _WayBack
  2192   0027E6  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2193   0027E8  0E3C               	movlw	low _Time_forward
  2194   0027EA  6E26               	movwf	go_Home@Time_forward^0,c
  2195   0027EC  0E02               	movlw	high _Time_forward
  2196   0027EE  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2197   0027F0  EC9F  F01D         	call	_go_Home	;wreg free
  2198   0027F4                     l392:
  2199                           
  2200                           ;main.c: 191:                 RetryMove(&motorL, &motorR);
  2201   0027F4  0E61               	movlw	low _motorL
  2202   0027F6  6E20               	movwf	RetryMove@mL^0,c
  2203   0027F8  0E01               	movlw	high _motorL
  2204   0027FA  6E21               	movwf	(RetryMove@mL+1)^0,c
  2205   0027FC  0E58               	movlw	low _motorR
  2206   0027FE  6E22               	movwf	RetryMove@mR^0,c
  2207   002800  0E01               	movlw	high _motorR
  2208   002802  6E23               	movwf	(RetryMove@mR+1)^0,c
  2209   002804  ECCC  F02A         	call	_RetryMove	;wreg free
  2210                           
  2211                           ;main.c: 192:             }
  2212   002808  EF37  F014         	goto	l5887
  2213   00280C                     l5875:
  2214                           
  2215                           ; BSR set to: 1
  2216   00280C  51DC               	movf	main@prev_colour& (0+255),w,b
  2217   00280E  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2218   002810  A4D8               	btfss	status,2,c
  2219   002812  EF0D  F014         	goto	u5811
  2220   002816  EF0F  F014         	goto	u5810
  2221   00281A                     u5811:
  2222   00281A  EF1B  F014         	goto	l388
  2223   00281E                     u5810:
  2224   00281E                     l5877:
  2225                           
  2226                           ; BSR set to: 1
  2227                           ;main.c: 194:                 go_Home(WayBack, Time_forward);
  2228   00281E  0E1A               	movlw	low _WayBack
  2229   002820  6E24               	movwf	go_Home@WayBack^0,c
  2230   002822  0E01               	movlw	high _WayBack
  2231   002824  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2232   002826  0E3C               	movlw	low _Time_forward
  2233   002828  6E26               	movwf	go_Home@Time_forward^0,c
  2234   00282A  0E02               	movlw	high _Time_forward
  2235   00282C  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2236   00282E  EC9F  F01D         	call	_go_Home	;wreg free
  2237   002832  EF37  F014         	goto	l5887
  2238   002836                     l388:
  2239                           
  2240                           ; BSR set to: 1
  2241   002836  EF37  F014         	goto	l5887
  2242   00283A                     l5879:
  2243                           
  2244                           ; BSR set to: 1
  2245   00283A  5118               	movf	_lost_flag& (0+255),w,b
  2246   00283C  1119               	iorwf	(_lost_flag+1)& (0+255),w,b
  2247   00283E  B4D8               	btfsc	status,2,c
  2248   002840  EF24  F014         	goto	u5821
  2249   002844  EF26  F014         	goto	u5820
  2250   002848                     u5821:
  2251   002848  EF37  F014         	goto	l5887
  2252   00284C                     u5820:
  2253   00284C                     
  2254                           ; BSR set to: 1
  2255                           ;main.c: 197:             move_count++;
  2256   00284C  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  2257   00284E  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  2258   002850                     
  2259                           ; BSR set to: 1
  2260                           ;main.c: 198:             Time_forward[move_count]=65535;
  2261   002850  90D8               	bcf	status,0,c
  2262   002852  3514               	rlcf	_move_count& (0+255),w,b	;volatile
  2263   002854  6ED9               	movwf	fsr2l,c
  2264   002856  3515               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  2265   002858  6EDA               	movwf	fsr2h,c
  2266   00285A  0E3C               	movlw	low _Time_forward
  2267   00285C  26D9               	addwf	fsr2l,f,c
  2268   00285E  0E02               	movlw	high _Time_forward
  2269   002860  22DA               	addwfc	fsr2h,f,c
  2270   002862  0EFF               	movlw	255
  2271   002864  6EDE               	movwf	postinc2,c
  2272   002866  0EFF               	movlw	255
  2273   002868  6EDD               	movwf	postdec2,c
  2274   00286A  EF0F  F014         	goto	l5877
  2275   00286E                     l5887:
  2276                           
  2277                           ;main.c: 100:     while (run_flag)
  2278   00286E  0101               	movlb	1	; () banked
  2279   002870  5116               	movf	_run_flag& (0+255),w,b
  2280   002872  1117               	iorwf	(_run_flag+1)& (0+255),w,b
  2281   002874  A4D8               	btfss	status,2,c
  2282   002876  EF3F  F014         	goto	u5831
  2283   00287A  EF41  F014         	goto	u5830
  2284   00287E                     u5831:
  2285   00287E  EF10  F012         	goto	l5755
  2286   002882                     u5830:
  2287   002882                     
  2288                           ; BSR set to: 1
  2289   002882  EF1A  F000         	goto	start
  2290   002886                     __end_of_main:
  2291                           	callstack 0
  2292                           
  2293 ;; *************** function _turnCalibration *****************
  2294 ;; Defined at:
  2295 ;;		line 356 in file "dc_motor.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2298 ;;		 -> motorL(9), 
  2299 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2300 ;;		 -> motorR(9), 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2315 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2316 ;;Total ram usage:        6 bytes
  2317 ;; Hardware stack levels used: 1
  2318 ;; Hardware stack levels required when called: 5
  2319 ;; This function calls:
  2320 ;;		_turnLeft45
  2321 ;; This function is called by:
  2322 ;;		_main
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text1
  2327   0042AE                     __ptext1:
  2328                           	callstack 0
  2329   0042AE                     _turnCalibration:
  2330                           	callstack 25
  2331   0042AE                     
  2332                           ;dc_motor.c: 357:     LATFbits.LATF0=1;
  2333   0042AE  807E               	bsf	126,0,c	;volatile
  2334   0042B0                     
  2335                           ;dc_motor.c: 358:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2336   0042B0  0E52               	movlw	82
  2337   0042B2  6E25               	movwf	(??_turnCalibration+1)^0,c
  2338   0042B4  0E2B               	movlw	43
  2339   0042B6  6E24               	movwf	??_turnCalibration^0,c
  2340   0042B8  0E00               	movlw	0
  2341   0042BA                     u5947:
  2342   0042BA  2EE8               	decfsz	wreg,f,c
  2343   0042BC  D7FE               	bra	u5947
  2344   0042BE  2E24               	decfsz	??_turnCalibration^0,f,c
  2345   0042C0  D7FC               	bra	u5947
  2346   0042C2  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2347   0042C4  D7FA               	bra	u5947
  2348   0042C6  D000               	nop2	
  2349                           
  2350                           ;dc_motor.c: 360:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2351   0042C8  EF1E  F022         	goto	l576
  2352   0042CC                     l577:
  2353                           
  2354                           ;dc_motor.c: 361:         LATDbits.LATD3=1;
  2355   0042CC  867C               	bsf	124,3,c	;volatile
  2356   0042CE                     
  2357                           ;dc_motor.c: 363:         turnLeft45(&motorL, &motorR);
  2358   0042CE  0E61               	movlw	low _motorL
  2359   0042D0  6E1A               	movwf	turnLeft45@mL^0,c
  2360   0042D2  0E01               	movlw	high _motorL
  2361   0042D4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2362   0042D6  0E58               	movlw	low _motorR
  2363   0042D8  6E1C               	movwf	turnLeft45@mR^0,c
  2364   0042DA  0E01               	movlw	high _motorR
  2365   0042DC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2366   0042DE  EC81  F02E         	call	_turnLeft45	;wreg free
  2367                           
  2368                           ;dc_motor.c: 364:         turnLeft45(&motorL, &motorR);
  2369   0042E2  0E61               	movlw	low _motorL
  2370   0042E4  6E1A               	movwf	turnLeft45@mL^0,c
  2371   0042E6  0E01               	movlw	high _motorL
  2372   0042E8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2373   0042EA  0E58               	movlw	low _motorR
  2374   0042EC  6E1C               	movwf	turnLeft45@mR^0,c
  2375   0042EE  0E01               	movlw	high _motorR
  2376   0042F0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2377   0042F2  EC81  F02E         	call	_turnLeft45	;wreg free
  2378                           
  2379                           ;dc_motor.c: 365:         turnLeft45(&motorL, &motorR);
  2380   0042F6  0E61               	movlw	low _motorL
  2381   0042F8  6E1A               	movwf	turnLeft45@mL^0,c
  2382   0042FA  0E01               	movlw	high _motorL
  2383   0042FC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2384   0042FE  0E58               	movlw	low _motorR
  2385   004300  6E1C               	movwf	turnLeft45@mR^0,c
  2386   004302  0E01               	movlw	high _motorR
  2387   004304  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2388   004306  EC81  F02E         	call	_turnLeft45	;wreg free
  2389                           
  2390                           ;dc_motor.c: 366:         turnLeft45(&motorL, &motorR);
  2391   00430A  0E61               	movlw	low _motorL
  2392   00430C  6E1A               	movwf	turnLeft45@mL^0,c
  2393   00430E  0E01               	movlw	high _motorL
  2394   004310  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2395   004312  0E58               	movlw	low _motorR
  2396   004314  6E1C               	movwf	turnLeft45@mR^0,c
  2397   004316  0E01               	movlw	high _motorR
  2398   004318  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2399   00431A  EC81  F02E         	call	_turnLeft45	;wreg free
  2400                           
  2401                           ;dc_motor.c: 368:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2402   00431E  EF03  F022         	goto	l5561
  2403   004322                     l579:
  2404                           
  2405                           ;dc_motor.c: 371:               LATDbits.LATD4=1;
  2406   004322  887C               	bsf	124,4,c	;volatile
  2407   004324                     
  2408                           ;dc_motor.c: 372:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2409   004324  0EA3               	movlw	163
  2410   004326  6E25               	movwf	(??_turnCalibration+1)^0,c
  2411   004328  0E57               	movlw	87
  2412   00432A  6E24               	movwf	??_turnCalibration^0,c
  2413   00432C  0E02               	movlw	2
  2414   00432E                     u5957:
  2415   00432E  2EE8               	decfsz	wreg,f,c
  2416   004330  D7FE               	bra	u5957
  2417   004332  2E24               	decfsz	??_turnCalibration^0,f,c
  2418   004334  D7FC               	bra	u5957
  2419   004336  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2420   004338  D7FA               	bra	u5957
  2421   00433A  D000               	nop2	
  2422                           
  2423                           ;dc_motor.c: 373:             if(!PORTFbits.RF3 & !PORTFbits.RF2){
  2424   00433C  A48E               	btfss	142,2,c	;volatile
  2425   00433E  EFA3  F021         	goto	u5491
  2426   004342  EFA6  F021         	goto	u5490
  2427   004346                     u5491:
  2428   004346  0E01               	movlw	1
  2429   004348  EFA7  F021         	goto	u5492
  2430   00434C                     u5490:
  2431   00434C  0E00               	movlw	0
  2432   00434E                     u5492:
  2433   00434E  6E24               	movwf	??_turnCalibration^0,c
  2434   004350  A68E               	btfss	142,3,c	;volatile
  2435   004352  EFAD  F021         	goto	u5501
  2436   004356  EFB0  F021         	goto	u5500
  2437   00435A                     u5501:
  2438   00435A  0E01               	movlw	1
  2439   00435C  EFB1  F021         	goto	u5502
  2440   004360                     u5500:
  2441   004360  0E00               	movlw	0
  2442   004362                     u5502:
  2443   004362  1424               	andwf	??_turnCalibration^0,w,c
  2444   004364  A0E8               	btfss	wreg,0,c
  2445   004366  EFB7  F021         	goto	u5511
  2446   00436A  EFB9  F021         	goto	u5510
  2447   00436E                     u5511:
  2448   00436E  EFCB  F021         	goto	l580
  2449   004372                     u5510:
  2450   004372                     
  2451                           ;dc_motor.c: 374:                 LATHbits.LATH3=1;
  2452   004372  8680               	bsf	128,3,c	;volatile
  2453                           
  2454                           ;dc_motor.c: 375:                 LATDbits.LATD7=1;
  2455   004374  8E7C               	bsf	124,7,c	;volatile
  2456   004376                     
  2457                           ;dc_motor.c: 376:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2458   004376  0E52               	movlw	82
  2459   004378  6E25               	movwf	(??_turnCalibration+1)^0,c
  2460   00437A  0E2B               	movlw	43
  2461   00437C  6E24               	movwf	??_turnCalibration^0,c
  2462   00437E  0E00               	movlw	0
  2463   004380                     u5967:
  2464   004380  2EE8               	decfsz	wreg,f,c
  2465   004382  D7FE               	bra	u5967
  2466   004384  2E24               	decfsz	??_turnCalibration^0,f,c
  2467   004386  D7FC               	bra	u5967
  2468   004388  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2469   00438A  D7FA               	bra	u5967
  2470   00438C  D000               	nop2	
  2471   00438E                     
  2472                           ;dc_motor.c: 377:                 LATHbits.LATH3=0;
  2473   00438E  9680               	bcf	128,3,c	;volatile
  2474   004390                     
  2475                           ;dc_motor.c: 378:                 LATDbits.LATD7=0;
  2476   004390  9E7C               	bcf	124,7,c	;volatile
  2477                           
  2478                           ;dc_motor.c: 379:             }
  2479   004392  EF03  F022         	goto	l5561
  2480   004396                     l580:
  2481   004396  B68E               	btfsc	142,3,c	;volatile
  2482   004398  EFD0  F021         	goto	u5521
  2483   00439C  EFD2  F021         	goto	u5520
  2484   0043A0                     u5521:
  2485   0043A0  EFE7  F021         	goto	l582
  2486   0043A4                     u5520:
  2487   0043A4                     
  2488                           ;dc_motor.c: 382:                 Turn45Delay+=10;
  2489   0043A4  0E0A               	movlw	10
  2490   0043A6  0100               	movlb	0	; () banked
  2491   0043A8  27F2               	addwf	_Turn45Delay& (0+255),f,b
  2492   0043AA  0E00               	movlw	0
  2493   0043AC  23F3               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2494   0043AE                     
  2495                           ; BSR set to: 0
  2496                           ;dc_motor.c: 383:                 LATHbits.LATH3=1;
  2497   0043AE  8680               	bsf	128,3,c	;volatile
  2498   0043B0                     
  2499                           ; BSR set to: 0
  2500                           ;dc_motor.c: 384:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2501   0043B0  0E52               	movlw	82
  2502   0043B2  6E25               	movwf	(??_turnCalibration+1)^0,c
  2503   0043B4  0E2B               	movlw	43
  2504   0043B6  6E24               	movwf	??_turnCalibration^0,c
  2505   0043B8  0E00               	movlw	0
  2506   0043BA                     u5977:
  2507   0043BA  2EE8               	decfsz	wreg,f,c
  2508   0043BC  D7FE               	bra	u5977
  2509   0043BE  2E24               	decfsz	??_turnCalibration^0,f,c
  2510   0043C0  D7FC               	bra	u5977
  2511   0043C2  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2512   0043C4  D7FA               	bra	u5977
  2513   0043C6  D000               	nop2	
  2514   0043C8                     
  2515                           ;dc_motor.c: 385:                 LATHbits.LATH3=0;
  2516   0043C8  9680               	bcf	128,3,c	;volatile
  2517                           
  2518                           ;dc_motor.c: 386:             }
  2519   0043CA  EF03  F022         	goto	l5561
  2520   0043CE                     l582:
  2521   0043CE  B48E               	btfsc	142,2,c	;volatile
  2522   0043D0  EFEC  F021         	goto	u5531
  2523   0043D4  EFEE  F021         	goto	u5530
  2524   0043D8                     u5531:
  2525   0043D8  EF03  F022         	goto	l581
  2526   0043DC                     u5530:
  2527   0043DC                     
  2528                           ;dc_motor.c: 389:                 Turn45Delay-=10;
  2529   0043DC  0100               	movlb	0	; () banked
  2530   0043DE  0EF6               	movlw	246
  2531   0043E0  27F2               	addwf	_Turn45Delay& (0+255),f,b
  2532   0043E2  0EFF               	movlw	255
  2533   0043E4  23F3               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2534   0043E6                     
  2535                           ; BSR set to: 0
  2536                           ;dc_motor.c: 390:                 LATDbits.LATD7=1;
  2537   0043E6  8E7C               	bsf	124,7,c	;volatile
  2538   0043E8                     
  2539                           ; BSR set to: 0
  2540                           ;dc_motor.c: 391:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2541   0043E8  0E52               	movlw	82
  2542   0043EA  6E25               	movwf	(??_turnCalibration+1)^0,c
  2543   0043EC  0E2B               	movlw	43
  2544   0043EE  6E24               	movwf	??_turnCalibration^0,c
  2545   0043F0  0E00               	movlw	0
  2546   0043F2                     u5987:
  2547   0043F2  2EE8               	decfsz	wreg,f,c
  2548   0043F4  D7FE               	bra	u5987
  2549   0043F6  2E24               	decfsz	??_turnCalibration^0,f,c
  2550   0043F8  D7FC               	bra	u5987
  2551   0043FA  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2552   0043FC  D7FA               	bra	u5987
  2553   0043FE  D000               	nop2	
  2554   004400                     
  2555                           ;dc_motor.c: 392:                 LATDbits.LATD7=0;
  2556   004400  9E7C               	bcf	124,7,c	;volatile
  2557   004402  EF03  F022         	goto	l5561
  2558   004406                     l581:
  2559   004406                     l5561:
  2560                           
  2561                           ;dc_motor.c: 368:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2562   004406  A48E               	btfss	142,2,c	;volatile
  2563   004408  EF08  F022         	goto	u5541
  2564   00440C  EF0A  F022         	goto	u5540
  2565   004410                     u5541:
  2566   004410  EF11  F022         	goto	l587
  2567   004414                     u5540:
  2568   004414  B68E               	btfsc	142,3,c	;volatile
  2569   004416  EF0F  F022         	goto	u5551
  2570   00441A  EF11  F022         	goto	u5550
  2571   00441E                     u5551:
  2572   00441E  EF91  F021         	goto	l579
  2573   004422                     u5550:
  2574   004422                     l587:
  2575                           
  2576                           ;dc_motor.c: 395:         LATDbits.LATD4=0;
  2577   004422  987C               	bcf	124,4,c	;volatile
  2578   004424                     
  2579                           ;dc_motor.c: 396:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2580   004424  0EA3               	movlw	163
  2581   004426  6E25               	movwf	(??_turnCalibration+1)^0,c
  2582   004428  0E57               	movlw	87
  2583   00442A  6E24               	movwf	??_turnCalibration^0,c
  2584   00442C  0E02               	movlw	2
  2585   00442E                     u5997:
  2586   00442E  2EE8               	decfsz	wreg,f,c
  2587   004430  D7FE               	bra	u5997
  2588   004432  2E24               	decfsz	??_turnCalibration^0,f,c
  2589   004434  D7FC               	bra	u5997
  2590   004436  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2591   004438  D7FA               	bra	u5997
  2592   00443A  D000               	nop2	
  2593   00443C                     l576:
  2594                           
  2595                           ;dc_motor.c: 360:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2596   00443C  A68E               	btfss	142,3,c	;volatile
  2597   00443E  EF23  F022         	goto	u5561
  2598   004442  EF26  F022         	goto	u5560
  2599   004446                     u5561:
  2600   004446  0E01               	movlw	1
  2601   004448  EF27  F022         	goto	u5562
  2602   00444C                     u5560:
  2603   00444C  0E00               	movlw	0
  2604   00444E                     u5562:
  2605   00444E  6E24               	movwf	??_turnCalibration^0,c
  2606   004450  A48E               	btfss	142,2,c	;volatile
  2607   004452  EF2D  F022         	goto	u5571
  2608   004456  EF30  F022         	goto	u5570
  2609   00445A                     u5571:
  2610   00445A  0E01               	movlw	1
  2611   00445C  EF31  F022         	goto	u5572
  2612   004460                     u5570:
  2613   004460  0E00               	movlw	0
  2614   004462                     u5572:
  2615   004462  1424               	andwf	??_turnCalibration^0,w,c
  2616   004464  A0E8               	btfss	wreg,0,c
  2617   004466  EF37  F022         	goto	u5581
  2618   00446A  EF39  F022         	goto	u5580
  2619   00446E                     u5581:
  2620   00446E  EF66  F021         	goto	l577
  2621   004472                     u5580:
  2622   004472                     
  2623                           ;dc_motor.c: 398:     LATDbits.LATD3=0;
  2624   004472  967C               	bcf	124,3,c	;volatile
  2625   004474                     
  2626                           ;dc_motor.c: 399:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2627   004474  0EA3               	movlw	163
  2628   004476  6E25               	movwf	(??_turnCalibration+1)^0,c
  2629   004478  0E57               	movlw	87
  2630   00447A  6E24               	movwf	??_turnCalibration^0,c
  2631   00447C  0E02               	movlw	2
  2632   00447E                     u6007:
  2633   00447E  2EE8               	decfsz	wreg,f,c
  2634   004480  D7FE               	bra	u6007
  2635   004482  2E24               	decfsz	??_turnCalibration^0,f,c
  2636   004484  D7FC               	bra	u6007
  2637   004486  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2638   004488  D7FA               	bra	u6007
  2639   00448A  D000               	nop2	
  2640   00448C  0012               	return		;funcret
  2641   00448E                     __end_of_turnCalibration:
  2642                           	callstack 0
  2643                           
  2644 ;; *************** function _sprintf *****************
  2645 ;; Defined at:
  2646 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2649 ;;		 -> main@buf(100), 
  2650 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2651 ;;		 -> STR_1(45), 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2654 ;;  ap              2  100[BANK0 ] PTR void [1]
  2655 ;;		 -> ?_sprintf(2), 
  2656 ;;  ret             2    0        int 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  2   80[BANK0 ] int 
  2659 ;; Registers used:
  2660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2666 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2667 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2669 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2670 ;;Total ram usage:       33 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; Hardware stack levels required when called: 8
  2673 ;; This function calls:
  2674 ;;		_vfprintf
  2675 ;; This function is called by:
  2676 ;;		_main
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text2
  2681   0058EA                     __ptext2:
  2682                           	callstack 0
  2683   0058EA                     _sprintf:
  2684                           	callstack 22
  2685   0058EA  0EB4               	movlw	low (?_sprintf+4)
  2686   0058EC  0100               	movlb	0	; () banked
  2687   0058EE  6FC4               	movwf	sprintf@ap& (0+255),b
  2688   0058F0  0E00               	movlw	high (?_sprintf+4)
  2689   0058F2  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2690   0058F4  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2691   0058F8  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2692   0058FC                     
  2693                           ; BSR set to: 0
  2694   0058FC  0E00               	movlw	0
  2695   0058FE  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2696   005900  0E00               	movlw	0
  2697   005902  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2698   005904                     
  2699                           ; BSR set to: 0
  2700   005904  0E00               	movlw	0
  2701   005906  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2702   005908  0E00               	movlw	0
  2703   00590A  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2704   00590C                     
  2705                           ; BSR set to: 0
  2706   00590C  0EC6               	movlw	low sprintf@f
  2707   00590E  6FA8               	movwf	vfprintf@fp& (0+255),b
  2708   005910  0E00               	movlw	high sprintf@f
  2709   005912  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2710   005914  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2711   005918  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2712   00591C  0EC4               	movlw	low sprintf@ap
  2713   00591E  6FAC               	movwf	vfprintf@ap& (0+255),b
  2714   005920  0E00               	movlw	high sprintf@ap
  2715   005922  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2716   005924  EC4A  F02C         	call	_vfprintf	;wreg free
  2717   005928  0100               	movlb	0	; () banked
  2718   00592A  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2719   00592C  25B0               	addwf	sprintf@s& (0+255),w,b
  2720   00592E  6ED9               	movwf	fsr2l,c
  2721   005930  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2722   005932  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2723   005934  6EDA               	movwf	fsr2h,c
  2724   005936  0E00               	movlw	0
  2725   005938  6EDF               	movwf	indf2,c
  2726   00593A                     
  2727                           ; BSR set to: 0
  2728   00593A  0012               	return		;funcret
  2729   00593C                     __end_of_sprintf:
  2730                           	callstack 0
  2731                           
  2732 ;; *************** function _vfprintf *****************
  2733 ;; Defined at:
  2734 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2737 ;;		 -> sprintf@f(11), 
  2738 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2739 ;;		 -> STR_1(45), 
  2740 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2741 ;;		 -> sprintf@ap(2), 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2744 ;;		 -> STR_1(45), 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  2   72[BANK0 ] int 
  2747 ;; Registers used:
  2748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2754 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2755 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2757 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2758 ;;Total ram usage:        8 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; Hardware stack levels required when called: 7
  2761 ;; This function calls:
  2762 ;;		_vfpfcnvrt
  2763 ;; This function is called by:
  2764 ;;		_sprintf
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text3
  2769   005894                     __ptext3:
  2770                           	callstack 0
  2771   005894                     _vfprintf:
  2772                           	callstack 22
  2773   005894                     
  2774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2775   005894  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2776   005898  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2777                           
  2778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2779   00589C  EF5F  F02C         	goto	l5231
  2780   0058A0                     l5229:
  2781                           
  2782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2783   0058A0  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2784   0058A4  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2785   0058A8  0EAE               	movlw	low vfprintf@cfmt
  2786   0058AA  0100               	movlb	0	; () banked
  2787   0058AC  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2788   0058AE  0E00               	movlw	high vfprintf@cfmt
  2789   0058B0  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2790   0058B2  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2791   0058B6  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2792   0058BA  EC1C  F01C         	call	_vfpfcnvrt	;wreg free
  2793   0058BE                     l5231:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2796   0058BE  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2797   0058C2  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2798   0058C6                     	if	0	;tblptru may be non-zero
  2799   0058C6                     	endif
  2800   0058C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2801   0058C6  0E00               	movlw	low (__mediumconst shr (0+16))
  2802   0058C8  6EF8               	movwf	tblptru,c
  2803   0058CA                     	endif
  2804   0058CA  0008               	tblrd		*
  2805   0058CC  50F5               	movf	tablat,w,c
  2806   0058CE  0900               	iorlw	0
  2807   0058D0  A4D8               	btfss	status,2,c
  2808   0058D2  EF6D  F02C         	goto	u5141
  2809   0058D6  EF6F  F02C         	goto	u5140
  2810   0058DA                     u5141:
  2811   0058DA  EF50  F02C         	goto	l5229
  2812   0058DE                     u5140:
  2813   0058DE                     
  2814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2815   0058DE  0E00               	movlw	0
  2816   0058E0  0100               	movlb	0	; () banked
  2817   0058E2  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2818   0058E4  0E00               	movlw	0
  2819   0058E6  6FA8               	movwf	?_vfprintf& (0+255),b
  2820   0058E8                     
  2821                           ; BSR set to: 0
  2822   0058E8  0012               	return		;funcret
  2823   0058EA                     __end_of_vfprintf:
  2824                           	callstack 0
  2825                           
  2826 ;; *************** function _vfpfcnvrt *****************
  2827 ;; Defined at:
  2828 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2831 ;;		 -> sprintf@f(11), 
  2832 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2833 ;;		 -> vfprintf@cfmt(2), 
  2834 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2835 ;;		 -> sprintf@ap(2), 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  convarg         8   61[BANK0 ] struct .
  2838 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2839 ;;		 -> STR_1(45), 
  2840 ;;  i               2    0        int 
  2841 ;;  done            2    0        int 
  2842 ;;  c               1   69[BANK0 ] unsigned char 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2852 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2853 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2854 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2855 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2856 ;;Total ram usage:       19 bytes
  2857 ;; Hardware stack levels used: 1
  2858 ;; Hardware stack levels required when called: 6
  2859 ;; This function calls:
  2860 ;;		_dtoa
  2861 ;;		_efgtoa
  2862 ;;		_fputc
  2863 ;; This function is called by:
  2864 ;;		_vfprintf
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text4
  2869   003838                     __ptext4:
  2870                           	callstack 0
  2871   003838                     _vfpfcnvrt:
  2872                           	callstack 22
  2873   003838                     
  2874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2875   003838  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2876   00383C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2877   003840  CFDE FFF6          	movff	postinc2,tblptrl
  2878   003844  CFDD FFF7          	movff	postdec2,tblptrh
  2879   003848                     	if	0	;tblptru may be non-zero
  2880   003848                     	endif
  2881   003848                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2882   003848  0E00               	movlw	low (__mediumconst shr (0+16))
  2883   00384A  6EF8               	movwf	tblptru,c
  2884   00384C                     	endif
  2885   00384C  0008               	tblrd		*
  2886   00384E  50F5               	movf	tablat,w,c
  2887   003850  0A25               	xorlw	37
  2888   003852  A4D8               	btfss	status,2,c
  2889   003854  EF2E  F01C         	goto	u4971
  2890   003858  EF30  F01C         	goto	u4970
  2891   00385C                     u4971:
  2892   00385C  EF88  F01D         	goto	l5079
  2893   003860                     u4970:
  2894   003860                     
  2895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2896   003860  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2897   003864  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2898   003868  2ADE               	incf	postinc2,f,c
  2899   00386A  0E00               	movlw	0
  2900   00386C  22DD               	addwfc	postdec2,f,c
  2901   00386E                     
  2902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2903   00386E  0E00               	movlw	0
  2904   003870  0100               	movlb	0	; () banked
  2905   003872  6FE8               	movwf	(_width+1)& (0+255),b
  2906   003874  0E00               	movlw	0
  2907   003876  6FE7               	movwf	_width& (0+255),b
  2908   003878  C0E7  F0EB         	movff	_width,_flags
  2909   00387C                     
  2910                           ; BSR set to: 0
  2911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2912   00387C  69E9               	setf	_prec& (0+255),b
  2913   00387E  69EA               	setf	(_prec+1)& (0+255),b
  2914   003880                     
  2915                           ; BSR set to: 0
  2916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2917   003880  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2918   003884  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2919   003888  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2920   00388C  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2921   003890                     
  2922                           ; BSR set to: 0
  2923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2924   003890  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2925   003894  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2926   003898                     	if	0	;tblptru may be non-zero
  2927   003898                     	endif
  2928   003898                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2929   003898  0E00               	movlw	low (__mediumconst shr (0+16))
  2930   00389A  6EF8               	movwf	tblptru,c
  2931   00389C                     	endif
  2932   00389C  0008               	tblrd		*
  2933   00389E  50F5               	movf	tablat,w,c
  2934   0038A0  0A64               	xorlw	100
  2935   0038A2  B4D8               	btfsc	status,2,c
  2936   0038A4  EF56  F01C         	goto	u4981
  2937   0038A8  EF58  F01C         	goto	u4980
  2938   0038AC                     u4981:
  2939   0038AC  EF68  F01C         	goto	l5035
  2940   0038B0                     u4980:
  2941   0038B0                     
  2942                           ; BSR set to: 0
  2943   0038B0  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2944   0038B4  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2945   0038B8                     	if	0	;tblptru may be non-zero
  2946   0038B8                     	endif
  2947   0038B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2948   0038B8  0E00               	movlw	low (__mediumconst shr (0+16))
  2949   0038BA  6EF8               	movwf	tblptru,c
  2950   0038BC                     	endif
  2951   0038BC  0008               	tblrd		*
  2952   0038BE  50F5               	movf	tablat,w,c
  2953   0038C0  0A69               	xorlw	105
  2954   0038C2  A4D8               	btfss	status,2,c
  2955   0038C4  EF66  F01C         	goto	u4991
  2956   0038C8  EF68  F01C         	goto	u4990
  2957   0038CC                     u4991:
  2958   0038CC  EFAB  F01C         	goto	l5041
  2959   0038D0                     u4990:
  2960   0038D0                     l5035:
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2964   0038D0  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2965   0038D4  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2966   0038D8  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2967   0038DC  0E02               	movlw	2
  2968   0038DE  26DE               	addwf	postinc2,f,c
  2969   0038E0  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2970   0038E4  0E00               	movlw	0
  2971   0038E6  22DD               	addwfc	postdec2,f,c
  2972   0038E8  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2973   0038EC  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2974   0038F0  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2975   0038F4  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2976   0038F8  0E00               	movlw	0
  2977   0038FA  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2978   0038FC  0EFF               	movlw	-1
  2979   0038FE  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2980   003900  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2981   003902  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2982   003904  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2983   003906  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2984   003908  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2985                           
  2986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2987   00390A  0E01               	movlw	1
  2988   00390C  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2989   00390E  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2990   003910  0E00               	movlw	0
  2991   003912  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2992   003914  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2993   003916  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2994   00391A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2995   00391E  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2996   003922  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2997   003926                     
  2998                           ; BSR set to: 0
  2999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3000   003926  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3001   00392A  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3002   00392E  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  3003   003932  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3004   003936  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3005   00393A  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3006   00393E  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3007   003942  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3008   003946  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3009   00394A  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3010   00394E  EC0F  F01F         	call	_dtoa	;wreg free
  3011   003952  EF9E  F01D         	goto	l1474
  3012   003956                     l5041:
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3016   003956  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3017   00395A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3018   00395E  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  3019   003962  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  3020   003966                     
  3021                           ; BSR set to: 0
  3022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3023   003966  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3024   00396A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3025   00396E                     	if	0	;tblptru may be non-zero
  3026   00396E                     	endif
  3027   00396E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3028   00396E  0E00               	movlw	low (__mediumconst shr (0+16))
  3029   003970  6EF8               	movwf	tblptru,c
  3030   003972                     	endif
  3031   003972  0008               	tblrd		*
  3032   003974  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  3033                           
  3034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3035   003978  EFCA  F01C         	goto	l5053
  3036   00397C                     l5045:
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3040   00397C  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3041   00397E  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3042                           
  3043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3044   003980  EFE3  F01C         	goto	l5055
  3045   003984                     l5047:
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3049   003984  0E6C               	movlw	108
  3050   003986  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3051                           
  3052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3053   003988  EFE3  F01C         	goto	l5055
  3054   00398C                     l5049:
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3058   00398C  0E00               	movlw	0
  3059   00398E  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3060                           
  3061                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3062   003990  EFE3  F01C         	goto	l5055
  3063   003994                     l5053:
  3064                           
  3065                           ; BSR set to: 0
  3066   003994  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3067   003996  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3068   003998  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3069                           
  3070                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3071                           ; Switch size 1, requested type "simple"
  3072                           ; Number of cases is 1, Range of values is 0 to 0
  3073                           ; switch strategies available:
  3074                           ; Name         Instructions Cycles
  3075                           ; simple_byte            4     3 (average)
  3076                           ;	Chosen strategy is simple_byte
  3077   00399A  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3078   00399C  0A00               	xorlw	0	; case 0
  3079   00399E  B4D8               	btfsc	status,2,c
  3080   0039A0  EFD4  F01C         	goto	l6029
  3081   0039A4  EFC6  F01C         	goto	l5049
  3082   0039A8                     l6029:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ; Switch size 1, requested type "simple"
  3086                           ; Number of cases is 3, Range of values is 76 to 108
  3087                           ; switch strategies available:
  3088                           ; Name         Instructions Cycles
  3089                           ; simple_byte           10     6 (average)
  3090                           ;	Chosen strategy is simple_byte
  3091   0039A8  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3092   0039AA  0A4C               	xorlw	76	; case 76
  3093   0039AC  B4D8               	btfsc	status,2,c
  3094   0039AE  EFBE  F01C         	goto	l5045
  3095   0039B2  0A2A               	xorlw	42	; case 102
  3096   0039B4  B4D8               	btfsc	status,2,c
  3097   0039B6  EFC2  F01C         	goto	l5047
  3098   0039BA  0A0A               	xorlw	10	; case 108
  3099   0039BC  B4D8               	btfsc	status,2,c
  3100   0039BE  EFBE  F01C         	goto	l5045
  3101   0039C2  EFC6  F01C         	goto	l5049
  3102   0039C6                     l5055:
  3103                           
  3104                           ; BSR set to: 0
  3105   0039C6  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3106   0039CA  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3107   0039CE                     	if	0	;tblptru may be non-zero
  3108   0039CE                     	endif
  3109   0039CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3110   0039CE  0E00               	movlw	low (__mediumconst shr (0+16))
  3111   0039D0  6EF8               	movwf	tblptru,c
  3112   0039D2                     	endif
  3113   0039D2  0008               	tblrd		*
  3114   0039D4  50F5               	movf	tablat,w,c
  3115   0039D6  0A66               	xorlw	102
  3116   0039D8  A4D8               	btfss	status,2,c
  3117   0039DA  EFF1  F01C         	goto	u5001
  3118   0039DE  EFF3  F01C         	goto	u5000
  3119   0039E2                     u5001:
  3120   0039E2  EF7F  F01D         	goto	l5075
  3121   0039E6                     u5000:
  3122   0039E6  EF29  F01D         	goto	l5063
  3123   0039EA                     l5057:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3127   0039EA  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3128   0039EE  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3129   0039F2  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3130   0039F6  0E04               	movlw	4
  3131   0039F8  26DE               	addwf	postinc2,f,c
  3132   0039FA  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3133   0039FE  0E00               	movlw	0
  3134   003A00  22DD               	addwfc	postdec2,f,c
  3135   003A02  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3136   003A06  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3137   003A0A  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3138   003A0E  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3139   003A12  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3140   003A16  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3143   003A1A  EF3E  F01D         	goto	l5065
  3144   003A1E                     l5059:
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3148   003A1E  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3149   003A22  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3150   003A26  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3151   003A2A  0E04               	movlw	4
  3152   003A2C  26DE               	addwf	postinc2,f,c
  3153   003A2E  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3154   003A32  0E00               	movlw	0
  3155   003A34  22DD               	addwfc	postdec2,f,c
  3156   003A36  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3157   003A3A  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3158   003A3E  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3159   003A42  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3160   003A46  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3161   003A4A  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3162                           
  3163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3164   003A4E  EF3E  F01D         	goto	l5065
  3165   003A52                     l5063:
  3166                           
  3167                           ; BSR set to: 0
  3168   003A52  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3169   003A54  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3170   003A56  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3171                           
  3172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3173                           ; Switch size 1, requested type "simple"
  3174                           ; Number of cases is 1, Range of values is 0 to 0
  3175                           ; switch strategies available:
  3176                           ; Name         Instructions Cycles
  3177                           ; simple_byte            4     3 (average)
  3178                           ;	Chosen strategy is simple_byte
  3179   003A58  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3180   003A5A  0A00               	xorlw	0	; case 0
  3181   003A5C  B4D8               	btfsc	status,2,c
  3182   003A5E  EF33  F01D         	goto	l6031
  3183   003A62  EF3E  F01D         	goto	l5065
  3184   003A66                     l6031:
  3185                           
  3186                           ; BSR set to: 0
  3187                           ; Switch size 1, requested type "simple"
  3188                           ; Number of cases is 2, Range of values is 76 to 108
  3189                           ; switch strategies available:
  3190                           ; Name         Instructions Cycles
  3191                           ; simple_byte            7     4 (average)
  3192                           ;	Chosen strategy is simple_byte
  3193   003A66  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3194   003A68  0A4C               	xorlw	76	; case 76
  3195   003A6A  B4D8               	btfsc	status,2,c
  3196   003A6C  EF0F  F01D         	goto	l5059
  3197   003A70  0A20               	xorlw	32	; case 108
  3198   003A72  B4D8               	btfsc	status,2,c
  3199   003A74  EFF5  F01C         	goto	l5057
  3200   003A78  EF3E  F01D         	goto	l5065
  3201   003A7C                     l5065:
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3205   003A7C  0E01               	movlw	1
  3206   003A7E  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3207   003A80  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3208   003A82  0E00               	movlw	0
  3209   003A84  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3210   003A86  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3211   003A88  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3212   003A8C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3213   003A90  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3214   003A94  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3215                           
  3216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3217   003A98  EF67  F01D         	goto	l5073
  3218   003A9C                     l5067:
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3222   003A9C  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3223   003AA0  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3224   003AA4  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  3225   003AA8  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3226   003AAC  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3227   003AB0  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3228   003AB4  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3229   003AB8  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3230   003ABC                     	if	0	;tblptru may be non-zero
  3231   003ABC                     	endif
  3232   003ABC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3233   003ABC  0E00               	movlw	low (__mediumconst shr (0+16))
  3234   003ABE  6EF8               	movwf	tblptru,c
  3235   003AC0                     	endif
  3236   003AC0  0008               	tblrd		*
  3237   003AC2  CFF5 F066          	movff	tablat,efgtoa@c
  3238   003AC6  EC8A  F00C         	call	_efgtoa	;wreg free
  3239   003ACA  EF9E  F01D         	goto	l1474
  3240   003ACE                     l5073:
  3241                           
  3242                           ; BSR set to: 0
  3243   003ACE  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3244   003AD2  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3245   003AD6                     	if	0	;tblptru may be non-zero
  3246   003AD6                     	endif
  3247   003AD6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3248   003AD6  0E00               	movlw	low (__mediumconst shr (0+16))
  3249   003AD8  6EF8               	movwf	tblptru,c
  3250   003ADA                     	endif
  3251   003ADA  0008               	tblrd		*
  3252   003ADC  50F5               	movf	tablat,w,c
  3253   003ADE  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3254   003AE0  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3255                           
  3256                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3257                           ; Switch size 1, requested type "simple"
  3258                           ; Number of cases is 1, Range of values is 0 to 0
  3259                           ; switch strategies available:
  3260                           ; Name         Instructions Cycles
  3261                           ; simple_byte            4     3 (average)
  3262                           ;	Chosen strategy is simple_byte
  3263   003AE2  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3264   003AE4  0A00               	xorlw	0	; case 0
  3265   003AE6  B4D8               	btfsc	status,2,c
  3266   003AE8  EF78  F01D         	goto	l6033
  3267   003AEC  EF7F  F01D         	goto	l5075
  3268   003AF0                     l6033:
  3269                           
  3270                           ; BSR set to: 0
  3271                           ; Switch size 1, requested type "simple"
  3272                           ; Number of cases is 1, Range of values is 102 to 102
  3273                           ; switch strategies available:
  3274                           ; Name         Instructions Cycles
  3275                           ; simple_byte            4     3 (average)
  3276                           ;	Chosen strategy is simple_byte
  3277   003AF0  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3278   003AF2  0A66               	xorlw	102	; case 102
  3279   003AF4  B4D8               	btfsc	status,2,c
  3280   003AF6  EF4E  F01D         	goto	l5067
  3281   003AFA  EF7F  F01D         	goto	l5075
  3282   003AFE                     l5075:
  3283                           
  3284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3285   003AFE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3286   003B02  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3287   003B06  2ADE               	incf	postinc2,f,c
  3288   003B08  0E00               	movlw	0
  3289   003B0A  22DD               	addwfc	postdec2,f,c
  3290   003B0C  EF9E  F01D         	goto	l1474
  3291   003B10                     l5079:
  3292                           
  3293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3294   003B10  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3295   003B14  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3296   003B18  CFDE FFF6          	movff	postinc2,tblptrl
  3297   003B1C  CFDD FFF7          	movff	postdec2,tblptrh
  3298   003B20                     	if	0	;tblptru may be non-zero
  3299   003B20                     	endif
  3300   003B20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3301   003B20  0E00               	movlw	low (__mediumconst shr (0+16))
  3302   003B22  6EF8               	movwf	tblptru,c
  3303   003B24                     	endif
  3304   003B24  0008               	tblrd		*
  3305   003B26  50F5               	movf	tablat,w,c
  3306   003B28  6E01               	movwf	fputc@c^0,c
  3307   003B2A  6A02               	clrf	(fputc@c+1)^0,c
  3308   003B2C  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3309   003B30  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3310   003B34  ECD1  F026         	call	_fputc	;wreg free
  3311   003B38  EF7F  F01D         	goto	l5075
  3312   003B3C                     l1474:
  3313   003B3C  0012               	return		;funcret
  3314   003B3E                     __end_of_vfpfcnvrt:
  3315                           	callstack 0
  3316                           
  3317 ;; *************** function _efgtoa *****************
  3318 ;; Defined at:
  3319 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3322 ;;		 -> sprintf@f(11), 
  3323 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  3324 ;;  c               1    6[BANK0 ] unsigned char 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  u               4   49[BANK0 ] struct flui
  3327 ;;  g               4   45[BANK0 ] struct flui
  3328 ;;  l               4   38[BANK0 ] struct flui
  3329 ;;  h               4   34[BANK0 ] struct flui
  3330 ;;  ou              4   28[BANK0 ] struct flui
  3331 ;;  n               2   43[BANK0 ] int 
  3332 ;;  i               2   32[BANK0 ] int 
  3333 ;;  w               2   26[BANK0 ] int 
  3334 ;;  e               2   24[BANK0 ] int 
  3335 ;;  m               2   22[BANK0 ] int 
  3336 ;;  d               2   20[BANK0 ] int 
  3337 ;;  t               2   13[BANK0 ] int 
  3338 ;;  p               2   11[BANK0 ] int 
  3339 ;;  ne              2    9[BANK0 ] int 
  3340 ;;  sign            1   42[BANK0 ] unsigned char 
  3341 ;;  nmode           1   19[BANK0 ] unsigned char 
  3342 ;;  mode            1   18[BANK0 ] unsigned char 
  3343 ;;  pp              1   17[BANK0 ] unsigned char 
  3344 ;;  esign           1    0        unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3354 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3355 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3356 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3357 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3358 ;;Total ram usage:       53 bytes
  3359 ;; Hardware stack levels used: 1
  3360 ;; Hardware stack levels required when called: 5
  3361 ;; This function calls:
  3362 ;;		___fladd
  3363 ;;		___fldiv
  3364 ;;		___fleq
  3365 ;;		___flge
  3366 ;;		___flmul
  3367 ;;		___flneg
  3368 ;;		___flsub
  3369 ;;		___fltol
  3370 ;;		___fpclassifyf
  3371 ;;		_floorf
  3372 ;;		_labs
  3373 ;;		_memcpy
  3374 ;;		_pad
  3375 ;;		_strcpy
  3376 ;; This function is called by:
  3377 ;;		_vfpfcnvrt
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text5
  3382   001914                     __ptext5:
  3383                           	callstack 0
  3384   001914                     _efgtoa:
  3385                           	callstack 22
  3386   001914                     
  3387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3388   001914  0E00               	movlw	0
  3389   001916  0100               	movlb	0	; () banked
  3390   001918  6F8A               	movwf	efgtoa@sign& (0+255),b
  3391   00191A                     
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3394   00191A  C062  F08D         	movff	efgtoa@f,efgtoa@g
  3395   00191E  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  3396   001922  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  3397   001926  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  3398   00192A                     
  3399                           ; BSR set to: 0
  3400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3401   00192A  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3402   00192C  EF9C  F00C         	goto	u4620
  3403   001930  EF9A  F00C         	goto	u4621
  3404   001934                     u4621:
  3405   001934  EFB0  F00C         	goto	l4745
  3406   001938                     u4620:
  3407   001938                     
  3408                           ; BSR set to: 0
  3409                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3410   001938  0E01               	movlw	1
  3411   00193A  6F8A               	movwf	efgtoa@sign& (0+255),b
  3412   00193C                     
  3413                           ; BSR set to: 0
  3414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3415   00193C  C08D  F001         	movff	efgtoa@g,___flneg@f1
  3416   001940  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3417   001944  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3418   001948  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3419   00194C  EC8E  F02F         	call	___flneg	;wreg free
  3420   001950  C001  F08D         	movff	?___flneg,efgtoa@g
  3421   001954  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  3422   001958  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  3423   00195C  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  3424   001960                     l4745:
  3425                           
  3426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3427   001960  0E00               	movlw	0
  3428   001962  0100               	movlb	0	; () banked
  3429   001964  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3430   001966  0E00               	movlw	0
  3431   001968  6F8B               	movwf	efgtoa@n& (0+255),b
  3432   00196A                     
  3433                           ; BSR set to: 0
  3434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3435   00196A  C0E7  F07A         	movff	_width,efgtoa@w
  3436   00196E  C0E8  F07B         	movff	_width+1,efgtoa@w+1
  3437   001972                     
  3438                           ; BSR set to: 0
  3439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3440   001972  518A               	movf	efgtoa@sign& (0+255),w,b
  3441   001974  B4D8               	btfsc	status,2,c
  3442   001976  EFBF  F00C         	goto	u4631
  3443   00197A  EFC1  F00C         	goto	u4630
  3444   00197E                     u4631:
  3445   00197E  EFD5  F00C         	goto	l4759
  3446   001982                     u4630:
  3447   001982                     
  3448                           ; BSR set to: 0
  3449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3450   001982  518A               	movf	efgtoa@sign& (0+255),w,b
  3451   001984  A4D8               	btfss	status,2,c
  3452   001986  EFC7  F00C         	goto	u4641
  3453   00198A  EFC9  F00C         	goto	u4640
  3454   00198E                     u4641:
  3455   00198E  EFCF  F00C         	goto	l4755
  3456   001992                     u4640:
  3457   001992                     
  3458                           ; BSR set to: 0
  3459   001992  0E00               	movlw	0
  3460   001994  6F70               	movwf	(_efgtoa$2852+1)& (0+255),b
  3461   001996  0E2B               	movlw	43
  3462   001998  6F6F               	movwf	_efgtoa$2852& (0+255),b
  3463   00199A  EFD3  F00C         	goto	l4757
  3464   00199E                     l4755:
  3465                           
  3466                           ; BSR set to: 0
  3467   00199E  0E00               	movlw	0
  3468   0019A0  6F70               	movwf	(_efgtoa$2852+1)& (0+255),b
  3469   0019A2  0E2D               	movlw	45
  3470   0019A4  6F6F               	movwf	_efgtoa$2852& (0+255),b
  3471   0019A6                     l4757:
  3472                           
  3473                           ; BSR set to: 0
  3474   0019A6  C06F  F08A         	movff	_efgtoa$2852,efgtoa@sign
  3475   0019AA                     l4759:
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3479   0019AA  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3480   0019AE  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3481   0019B2  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3482   0019B6  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3483   0019BA  EC52  F026         	call	___fpclassifyf	;wreg free
  3484   0019BE  0401               	decf	?___fpclassifyf^0,w,c
  3485   0019C0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3486   0019C2  A4D8               	btfss	status,2,c
  3487   0019C4  EFE6  F00C         	goto	u4651
  3488   0019C8  EFE8  F00C         	goto	u4650
  3489   0019CC                     u4651:
  3490   0019CC  EF1B  F00D         	goto	l4777
  3491   0019D0                     u4650:
  3492   0019D0                     
  3493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3494   0019D0  0100               	movlb	0	; () banked
  3495   0019D2  518A               	movf	efgtoa@sign& (0+255),w,b
  3496   0019D4  B4D8               	btfsc	status,2,c
  3497   0019D6  EFEF  F00C         	goto	u4661
  3498   0019DA  EFF1  F00C         	goto	u4660
  3499   0019DE                     u4661:
  3500   0019DE  EFFA  F00C         	goto	l4769
  3501   0019E2                     u4660:
  3502   0019E2                     
  3503                           ; BSR set to: 0
  3504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3505   0019E2  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3506   0019E6                     
  3507                           ; BSR set to: 0
  3508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3509   0019E6  077A               	decf	efgtoa@w& (0+255),f,b
  3510   0019E8  A0D8               	btfss	status,0,c
  3511   0019EA  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3512   0019EC                     
  3513                           ; BSR set to: 0
  3514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3515   0019EC  0E00               	movlw	0
  3516   0019EE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3517   0019F0  0E01               	movlw	1
  3518   0019F2  6F8B               	movwf	efgtoa@n& (0+255),b
  3519   0019F4                     l4769:
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3523   0019F4  0EA0               	movlw	low _dbuf
  3524   0019F6  258B               	addwf	efgtoa@n& (0+255),w,b
  3525   0019F8  6E01               	movwf	strcpy@dest^0,c
  3526   0019FA  0E02               	movlw	high _dbuf
  3527   0019FC  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3528   0019FE  6E02               	movwf	(strcpy@dest+1)^0,c
  3529   001A00  0E2E               	movlw	low STR_2
  3530   001A02  6E03               	movwf	strcpy@src^0,c
  3531   001A04  0E0E               	movlw	high STR_2
  3532   001A06  6E04               	movwf	(strcpy@src+1)^0,c
  3533   001A08  ECCB  F02E         	call	_strcpy	;wreg free
  3534   001A0C                     l4771:
  3535                           
  3536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3537   001A0C  0100               	movlb	0	; () banked
  3538   001A0E  0EFD               	movlw	253
  3539   001A10  277A               	addwf	efgtoa@w& (0+255),f,b
  3540   001A12  0EFF               	movlw	255
  3541   001A14  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3542   001A16                     
  3543                           ; BSR set to: 0
  3544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3545   001A16  C060  F011         	movff	efgtoa@fp,pad@fp
  3546   001A1A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3547   001A1E  0EA0               	movlw	low _dbuf
  3548   001A20  6E13               	movwf	pad@buf^0,c
  3549   001A22  0E02               	movlw	high _dbuf
  3550   001A24  6E14               	movwf	(pad@buf+1)^0,c
  3551   001A26  C07A  F015         	movff	efgtoa@w,pad@p
  3552   001A2A  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3553   001A2E  EC55  F02A         	call	_pad	;wreg free
  3554   001A32  EF86  F011         	goto	l1426
  3555   001A36                     l4777:
  3556                           
  3557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3558   001A36  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3559   001A3A  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3560   001A3E  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3561   001A42  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3562   001A46  EC52  F026         	call	___fpclassifyf	;wreg free
  3563   001A4A  5001               	movf	?___fpclassifyf^0,w,c
  3564   001A4C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3565   001A4E  A4D8               	btfss	status,2,c
  3566   001A50  EF2C  F00D         	goto	u4671
  3567   001A54  EF2E  F00D         	goto	u4670
  3568   001A58                     u4671:
  3569   001A58  EF4E  F00D         	goto	l4795
  3570   001A5C                     u4670:
  3571   001A5C                     
  3572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3573   001A5C  0100               	movlb	0	; () banked
  3574   001A5E  518A               	movf	efgtoa@sign& (0+255),w,b
  3575   001A60  B4D8               	btfsc	status,2,c
  3576   001A62  EF35  F00D         	goto	u4681
  3577   001A66  EF37  F00D         	goto	u4680
  3578   001A6A                     u4681:
  3579   001A6A  EF40  F00D         	goto	l4787
  3580   001A6E                     u4680:
  3581   001A6E                     
  3582                           ; BSR set to: 0
  3583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3584   001A6E  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3585   001A72                     
  3586                           ; BSR set to: 0
  3587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3588   001A72  077A               	decf	efgtoa@w& (0+255),f,b
  3589   001A74  A0D8               	btfss	status,0,c
  3590   001A76  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3591   001A78                     
  3592                           ; BSR set to: 0
  3593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3594   001A78  0E00               	movlw	0
  3595   001A7A  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3596   001A7C  0E01               	movlw	1
  3597   001A7E  6F8B               	movwf	efgtoa@n& (0+255),b
  3598   001A80                     l4787:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3602   001A80  0EA0               	movlw	low _dbuf
  3603   001A82  258B               	addwf	efgtoa@n& (0+255),w,b
  3604   001A84  6E01               	movwf	strcpy@dest^0,c
  3605   001A86  0E02               	movlw	high _dbuf
  3606   001A88  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3607   001A8A  6E02               	movwf	(strcpy@dest+1)^0,c
  3608   001A8C  0E32               	movlw	low STR_5
  3609   001A8E  6E03               	movwf	strcpy@src^0,c
  3610   001A90  0E0E               	movlw	high STR_5
  3611   001A92  6E04               	movwf	(strcpy@src+1)^0,c
  3612   001A94  ECCB  F02E         	call	_strcpy	;wreg free
  3613   001A98  EF06  F00D         	goto	l4771
  3614   001A9C                     l4795:
  3615                           
  3616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3617   001A9C  0E00               	movlw	0
  3618   001A9E  0100               	movlb	0	; () banked
  3619   001AA0  6F91               	movwf	efgtoa@u& (0+255),b
  3620   001AA2  0E00               	movlw	0
  3621   001AA4  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3622   001AA6  0E80               	movlw	128
  3623   001AA8  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3624   001AAA  0E3F               	movlw	63
  3625   001AAC  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3626                           
  3627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3628   001AAE  0E00               	movlw	0
  3629   001AB0  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3630   001AB2  0E00               	movlw	0
  3631   001AB4  6F78               	movwf	efgtoa@e& (0+255),b
  3632   001AB6                     
  3633                           ; BSR set to: 0
  3634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3635   001AB6  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3636   001ABA  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3637   001ABE  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3638   001AC2  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3639   001AC6  0E00               	movlw	0
  3640   001AC8  6E36               	movwf	___fleq@ff2^0,c
  3641   001ACA  0E00               	movlw	0
  3642   001ACC  6E37               	movwf	(___fleq@ff2+1)^0,c
  3643   001ACE  0E00               	movlw	0
  3644   001AD0  6E38               	movwf	(___fleq@ff2+2)^0,c
  3645   001AD2  0E00               	movlw	0
  3646   001AD4  6E39               	movwf	(___fleq@ff2+3)^0,c
  3647   001AD6  EC41  F028         	call	___fleq	;wreg free
  3648   001ADA  B0D8               	btfsc	status,0,c
  3649   001ADC  EF72  F00D         	goto	u4691
  3650   001AE0  EF74  F00D         	goto	u4690
  3651   001AE4                     u4691:
  3652   001AE4  EF53  F00E         	goto	l1429
  3653   001AE8                     u4690:
  3654   001AE8  EF81  F00D         	goto	l4803
  3655   001AEC                     l1431:
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3658   001AEC  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3659   001AF0  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3660   001AF4  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3661   001AF8  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3662   001AFC                     
  3663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3664   001AFC  0100               	movlb	0	; () banked
  3665   001AFE  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3666   001B00  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3667   001B02                     l4803:
  3668                           
  3669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3670   001B02  C091  F011         	movff	efgtoa@u,___flmul@b
  3671   001B06  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3672   001B0A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3673   001B0E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3674   001B12  0E00               	movlw	0
  3675   001B14  6E15               	movwf	___flmul@a^0,c
  3676   001B16  0E00               	movlw	0
  3677   001B18  6E16               	movwf	(___flmul@a+1)^0,c
  3678   001B1A  0E20               	movlw	32
  3679   001B1C  6E17               	movwf	(___flmul@a+2)^0,c
  3680   001B1E  0E41               	movlw	65
  3681   001B20  6E18               	movwf	(___flmul@a+3)^0,c
  3682   001B22  ECA3  F016         	call	___flmul	;wreg free
  3683   001B26  C011  F07C         	movff	?___flmul,efgtoa@ou
  3684   001B2A  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3685   001B2E  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3686   001B32  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3687   001B36  0100               	movlb	0	; () banked
  3688   001B38  517C               	movf	efgtoa@ou& (0+255),w,b
  3689   001B3A  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3690   001B3C  6E01               	movwf	labs@a^0,c
  3691   001B3E  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3692   001B40  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3693   001B42  6E02               	movwf	(labs@a+1)^0,c
  3694   001B44  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3695   001B46  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3696   001B48  6E03               	movwf	(labs@a+2)^0,c
  3697   001B4A  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3698   001B4C  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3699   001B4E  6E04               	movwf	(labs@a+3)^0,c
  3700   001B50  EC01  F02B         	call	_labs	;wreg free
  3701   001B54  BE04               	btfsc	(?_labs+3)^0,7,c
  3702   001B56  EFB8  F00D         	goto	u4701
  3703   001B5A  5004               	movf	(?_labs+3)^0,w,c
  3704   001B5C  1003               	iorwf	(?_labs+2)^0,w,c
  3705   001B5E  1002               	iorwf	(?_labs+1)^0,w,c
  3706   001B60  E109               	bnz	u4700
  3707   001B62  0E02               	movlw	2
  3708   001B64  5C01               	subwf	?_labs^0,w,c
  3709   001B66  A0D8               	btfss	status,0,c
  3710   001B68  EFB8  F00D         	goto	u4701
  3711   001B6C  EFBA  F00D         	goto	u4700
  3712   001B70                     u4701:
  3713   001B70  EF76  F00D         	goto	l1431
  3714   001B74                     u4700:
  3715   001B74  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3716   001B78  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3717   001B7C  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3718   001B80  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3719   001B84  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3720   001B88  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3721   001B8C  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3722   001B90  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3723   001B94  ECD0  F025         	call	___flge	;wreg free
  3724   001B98  A0D8               	btfss	status,0,c
  3725   001B9A  EFD1  F00D         	goto	u4711
  3726   001B9E  EFD3  F00D         	goto	u4710
  3727   001BA2                     u4711:
  3728   001BA2  EF76  F00D         	goto	l1431
  3729   001BA6                     u4710:
  3730   001BA6                     
  3731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3732   001BA6  0100               	movlb	0	; () banked
  3733   001BA8  5191               	movf	efgtoa@u& (0+255),w,b
  3734   001BAA  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3735   001BAC  6E01               	movwf	labs@a^0,c
  3736   001BAE  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3737   001BB0  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3738   001BB2  6E02               	movwf	(labs@a+1)^0,c
  3739   001BB4  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3740   001BB6  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3741   001BB8  6E03               	movwf	(labs@a+2)^0,c
  3742   001BBA  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3743   001BBC  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3744   001BBE  6E04               	movwf	(labs@a+3)^0,c
  3745   001BC0  EC01  F02B         	call	_labs	;wreg free
  3746   001BC4  BE04               	btfsc	(?_labs+3)^0,7,c
  3747   001BC6  EFF2  F00D         	goto	u4720
  3748   001BCA  5004               	movf	(?_labs+3)^0,w,c
  3749   001BCC  1003               	iorwf	(?_labs+2)^0,w,c
  3750   001BCE  1002               	iorwf	(?_labs+1)^0,w,c
  3751   001BD0  E107               	bnz	u4721
  3752   001BD2  0E02               	movlw	2
  3753   001BD4  5C01               	subwf	?_labs^0,w,c
  3754   001BD6  B0D8               	btfsc	status,0,c
  3755   001BD8  EFF0  F00D         	goto	u4721
  3756   001BDC  EFF2  F00D         	goto	u4720
  3757   001BE0                     u4721:
  3758   001BE0  EF3A  F00E         	goto	l4821
  3759   001BE4                     u4720:
  3760   001BE4                     l4811:
  3761                           
  3762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3763   001BE4  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3764   001BE8  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3765   001BEC  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3766   001BF0  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3767                           
  3768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3769   001BF4  EF53  F00E         	goto	l1429
  3770   001BF8                     l4813:
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3773   001BF8  C091  F032         	movff	efgtoa@u,___fldiv@b
  3774   001BFC  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3775   001C00  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3776   001C04  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3777   001C08  0E00               	movlw	0
  3778   001C0A  6E36               	movwf	___fldiv@a^0,c
  3779   001C0C  0E00               	movlw	0
  3780   001C0E  6E37               	movwf	(___fldiv@a+1)^0,c
  3781   001C10  0E20               	movlw	32
  3782   001C12  6E38               	movwf	(___fldiv@a+2)^0,c
  3783   001C14  0E41               	movlw	65
  3784   001C16  6E39               	movwf	(___fldiv@a+3)^0,c
  3785   001C18  ECB8  F018         	call	___fldiv	;wreg free
  3786   001C1C  C032  F091         	movff	?___fldiv,efgtoa@u
  3787   001C20  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3788   001C24  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3789   001C28  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3790   001C2C                     
  3791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3792   001C2C  0100               	movlb	0	; () banked
  3793   001C2E  0778               	decf	efgtoa@e& (0+255),f,b
  3794   001C30  A0D8               	btfss	status,0,c
  3795   001C32  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3796   001C34                     
  3797                           ; BSR set to: 0
  3798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3799   001C34  5191               	movf	efgtoa@u& (0+255),w,b
  3800   001C36  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3801   001C38  6E01               	movwf	labs@a^0,c
  3802   001C3A  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3803   001C3C  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3804   001C3E  6E02               	movwf	(labs@a+1)^0,c
  3805   001C40  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3806   001C42  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3807   001C44  6E03               	movwf	(labs@a+2)^0,c
  3808   001C46  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3809   001C48  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3810   001C4A  6E04               	movwf	(labs@a+3)^0,c
  3811   001C4C  EC01  F02B         	call	_labs	;wreg free
  3812   001C50  BE04               	btfsc	(?_labs+3)^0,7,c
  3813   001C52  EF38  F00E         	goto	u4730
  3814   001C56  5004               	movf	(?_labs+3)^0,w,c
  3815   001C58  1003               	iorwf	(?_labs+2)^0,w,c
  3816   001C5A  1002               	iorwf	(?_labs+1)^0,w,c
  3817   001C5C  E107               	bnz	u4731
  3818   001C5E  0E02               	movlw	2
  3819   001C60  5C01               	subwf	?_labs^0,w,c
  3820   001C62  B0D8               	btfsc	status,0,c
  3821   001C64  EF36  F00E         	goto	u4731
  3822   001C68  EF38  F00E         	goto	u4730
  3823   001C6C                     u4731:
  3824   001C6C  EF3A  F00E         	goto	l4821
  3825   001C70                     u4730:
  3826   001C70  EFF2  F00D         	goto	l4811
  3827   001C74                     l4821:
  3828                           
  3829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3830   001C74  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3831   001C78  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3832   001C7C  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3833   001C80  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3834   001C84  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3835   001C88  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3836   001C8C  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3837   001C90  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3838   001C94  ECD0  F025         	call	___flge	;wreg free
  3839   001C98  A0D8               	btfss	status,0,c
  3840   001C9A  EF51  F00E         	goto	u4741
  3841   001C9E  EF53  F00E         	goto	u4740
  3842   001CA2                     u4741:
  3843   001CA2  EFFC  F00D         	goto	l4813
  3844   001CA6                     u4740:
  3845   001CA6                     l1429:
  3846                           
  3847                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3848   001CA6  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3849                           
  3850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3851   001CAA  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3852   001CAE                     
  3853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3854   001CAE  0100               	movlb	0	; () banked
  3855   001CB0  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3856   001CB2  EF5D  F00E         	goto	u4751
  3857   001CB6  EF5F  F00E         	goto	u4750
  3858   001CBA                     u4751:
  3859   001CBA  EF65  F00E         	goto	l4827
  3860   001CBE                     u4750:
  3861   001CBE                     
  3862                           ; BSR set to: 0
  3863   001CBE  C0E9  F06B         	movff	_prec,efgtoa@p
  3864   001CC2  C0EA  F06C         	movff	_prec+1,efgtoa@p+1
  3865   001CC6  EF69  F00E         	goto	l4829
  3866   001CCA                     l4827:
  3867                           
  3868                           ; BSR set to: 0
  3869   001CCA  0E00               	movlw	0
  3870   001CCC  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3871   001CCE  0E06               	movlw	6
  3872   001CD0  6F6B               	movwf	efgtoa@p& (0+255),b
  3873   001CD2                     l4829:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3877   001CD2  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3878   001CD6  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3879   001CDA                     
  3880                           ; BSR set to: 0
  3881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3882   001CDA  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3883   001CDC  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3884   001CDE                     
  3885                           ; BSR set to: 0
  3886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3887   001CDE  0E66               	movlw	102
  3888   001CE0  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3889   001CE2  A4D8               	btfss	status,2,c
  3890   001CE4  EF76  F00E         	goto	u4761
  3891   001CE8  EF78  F00E         	goto	u4760
  3892   001CEC                     u4761:
  3893   001CEC  EF98  F00E         	goto	l4843
  3894   001CF0                     u4760:
  3895   001CF0                     
  3896                           ; BSR set to: 0
  3897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3898   001CF0  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3899   001CF2  EF7F  F00E         	goto	u4770
  3900   001CF6  EF7D  F00E         	goto	u4771
  3901   001CFA                     u4771:
  3902   001CFA  EF8B  F00E         	goto	l4839
  3903   001CFE                     u4770:
  3904   001CFE                     
  3905                           ; BSR set to: 0
  3906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3907   001CFE  0E00               	movlw	0
  3908   001D00  6F91               	movwf	efgtoa@u& (0+255),b
  3909   001D02  0E00               	movlw	0
  3910   001D04  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3911   001D06  0E80               	movlw	128
  3912   001D08  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3913   001D0A  0E3F               	movlw	63
  3914   001D0C  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3915                           
  3916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3917   001D0E  0E00               	movlw	0
  3918   001D10  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3919   001D12  0E00               	movlw	0
  3920   001D14  6F78               	movwf	efgtoa@e& (0+255),b
  3921   001D16                     l4839:
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3925   001D16  0E67               	movlw	103
  3926   001D18  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3927   001D1A  B4D8               	btfsc	status,2,c
  3928   001D1C  EF92  F00E         	goto	u4781
  3929   001D20  EF94  F00E         	goto	u4780
  3930   001D24                     u4781:
  3931   001D24  EF98  F00E         	goto	l4843
  3932   001D28                     u4780:
  3933   001D28                     
  3934                           ; BSR set to: 0
  3935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3936   001D28  5178               	movf	efgtoa@e& (0+255),w,b
  3937   001D2A  2776               	addwf	efgtoa@m& (0+255),f,b
  3938   001D2C  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3939   001D2E  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3940   001D30                     l4843:
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3944   001D30  0E00               	movlw	0
  3945   001D32  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3946   001D34  0E00               	movlw	0
  3947   001D36  6F80               	movwf	efgtoa@i& (0+255),b
  3948   001D38                     
  3949                           ; BSR set to: 0
  3950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3951   001D38  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3952   001D3C  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3953   001D40  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3954   001D44  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3955   001D48                     
  3956                           ; BSR set to: 0
  3957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3958   001D48  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3959   001D4C  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3960   001D50  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3961   001D54  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3962                           
  3963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3964   001D58  EF29  F00F         	goto	l4857
  3965   001D5C                     l4849:
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3969   001D5C  C082  F032         	movff	efgtoa@h,___fldiv@b
  3970   001D60  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3971   001D64  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3972   001D68  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3973   001D6C  C091  F036         	movff	efgtoa@u,___fldiv@a
  3974   001D70  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3975   001D74  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3976   001D78  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3977   001D7C  ECB8  F018         	call	___fldiv	;wreg free
  3978   001D80  C032  F04B         	movff	?___fldiv,floorf@x
  3979   001D84  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3980   001D88  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3981   001D8C  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3982   001D90  EC4E  F020         	call	_floorf	;wreg free
  3983   001D94  C04B  F086         	movff	?_floorf,efgtoa@l
  3984   001D98  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3985   001D9C  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3986   001DA0  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3987                           
  3988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3989   001DA4  C086  F001         	movff	efgtoa@l,___fltol@f1
  3990   001DA8  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3991   001DAC  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3992   001DB0  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3993   001DB4  EC4D  F025         	call	___fltol	;wreg free
  3994   001DB8  C001  F074         	movff	?___fltol,efgtoa@d
  3995   001DBC  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3996   001DC0                     
  3997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3998   001DC0  C082  F02A         	movff	efgtoa@h,___flsub@b
  3999   001DC4  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4000   001DC8  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4001   001DCC  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4002   001DD0  C086  F015         	movff	efgtoa@l,___flmul@a
  4003   001DD4  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4004   001DD8  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4005   001DDC  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4006   001DE0  C091  F011         	movff	efgtoa@u,___flmul@b
  4007   001DE4  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4008   001DE8  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4009   001DEC  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4010   001DF0  ECA3  F016         	call	___flmul	;wreg free
  4011   001DF4  C011  F02E         	movff	?___flmul,___flsub@a
  4012   001DF8  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4013   001DFC  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4014   001E00  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4015   001E04  ECA8  F02E         	call	___flsub	;wreg free
  4016   001E08  C02A  F082         	movff	?___flsub,efgtoa@h
  4017   001E0C  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4018   001E10  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4019   001E14  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4020   001E18                     
  4021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4022   001E18  C091  F032         	movff	efgtoa@u,___fldiv@b
  4023   001E1C  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4024   001E20  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4025   001E24  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4026   001E28  0E00               	movlw	0
  4027   001E2A  6E36               	movwf	___fldiv@a^0,c
  4028   001E2C  0E00               	movlw	0
  4029   001E2E  6E37               	movwf	(___fldiv@a+1)^0,c
  4030   001E30  0E20               	movlw	32
  4031   001E32  6E38               	movwf	(___fldiv@a+2)^0,c
  4032   001E34  0E41               	movlw	65
  4033   001E36  6E39               	movwf	(___fldiv@a+3)^0,c
  4034   001E38  ECB8  F018         	call	___fldiv	;wreg free
  4035   001E3C  C032  F091         	movff	?___fldiv,efgtoa@u
  4036   001E40  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4037   001E44  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4038   001E48  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4039   001E4C                     
  4040                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4041   001E4C  0100               	movlb	0	; () banked
  4042   001E4E  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4043   001E50  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4044   001E52                     l4857:
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4048   001E52  5176               	movf	efgtoa@m& (0+255),w,b
  4049   001E54  5D80               	subwf	efgtoa@i& (0+255),w,b
  4050   001E56  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4051   001E58  0A80               	xorlw	128
  4052   001E5A  6F67               	movwf	??_efgtoa& (0+255),b
  4053   001E5C  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4054   001E5E  0A80               	xorlw	128
  4055   001E60  5967               	subwfb	??_efgtoa& (0+255),w,b
  4056   001E62  A0D8               	btfss	status,0,c
  4057   001E64  EF36  F00F         	goto	u4791
  4058   001E68  EF38  F00F         	goto	u4790
  4059   001E6C                     u4791:
  4060   001E6C  EFAE  F00E         	goto	l4849
  4061   001E70                     u4790:
  4062   001E70                     
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4065   001E70  C091  F011         	movff	efgtoa@u,___flmul@b
  4066   001E74  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4067   001E78  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4068   001E7C  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4069   001E80  0E00               	movlw	0
  4070   001E82  6E15               	movwf	___flmul@a^0,c
  4071   001E84  0E00               	movlw	0
  4072   001E86  6E16               	movwf	(___flmul@a+1)^0,c
  4073   001E88  0EA0               	movlw	160
  4074   001E8A  6E17               	movwf	(___flmul@a+2)^0,c
  4075   001E8C  0E40               	movlw	64
  4076   001E8E  6E18               	movwf	(___flmul@a+3)^0,c
  4077   001E90  ECA3  F016         	call	___flmul	;wreg free
  4078   001E94  C011  F086         	movff	?___flmul,efgtoa@l
  4079   001E98  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  4080   001E9C  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  4081   001EA0  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  4082   001EA4                     
  4083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4084   001EA4  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4085   001EA8  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4086   001EAC  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4087   001EB0  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4088   001EB4  C086  F02E         	movff	efgtoa@l,___flge@ff2
  4089   001EB8  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  4090   001EBC  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  4091   001EC0  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  4092   001EC4  ECD0  F025         	call	___flge	;wreg free
  4093   001EC8  B0D8               	btfsc	status,0,c
  4094   001ECA  EF69  F00F         	goto	u4801
  4095   001ECE  EF6B  F00F         	goto	u4800
  4096   001ED2                     u4801:
  4097   001ED2  EF76  F00F         	goto	l4865
  4098   001ED6                     u4800:
  4099   001ED6                     
  4100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4101   001ED6  0E00               	movlw	0
  4102   001ED8  0100               	movlb	0	; () banked
  4103   001EDA  6F86               	movwf	efgtoa@l& (0+255),b
  4104   001EDC  0E00               	movlw	0
  4105   001EDE  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4106   001EE0  0E00               	movlw	0
  4107   001EE2  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4108   001EE4  0E00               	movlw	0
  4109   001EE6  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4110                           
  4111                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4112   001EE8  EF9F  F00F         	goto	l4871
  4113   001EEC                     l4865:
  4114                           
  4115                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4116   001EEC  C082  F032         	movff	efgtoa@h,___fleq@ff1
  4117   001EF0  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  4118   001EF4  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  4119   001EF8  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  4120   001EFC  C086  F036         	movff	efgtoa@l,___fleq@ff2
  4121   001F00  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  4122   001F04  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  4123   001F08  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  4124   001F0C  EC41  F028         	call	___fleq	;wreg free
  4125   001F10  A0D8               	btfss	status,0,c
  4126   001F12  EF8D  F00F         	goto	u4811
  4127   001F16  EF8F  F00F         	goto	u4810
  4128   001F1A                     u4811:
  4129   001F1A  EF9F  F00F         	goto	l4871
  4130   001F1E                     u4810:
  4131   001F1E  0100               	movlb	0	; () banked
  4132   001F20  B174               	btfsc	efgtoa@d& (0+255),0,b
  4133   001F22  EF95  F00F         	goto	u4821
  4134   001F26  EF97  F00F         	goto	u4820
  4135   001F2A                     u4821:
  4136   001F2A  EF9F  F00F         	goto	l4871
  4137   001F2E                     u4820:
  4138   001F2E                     
  4139                           ; BSR set to: 0
  4140                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4141   001F2E  0E00               	movlw	0
  4142   001F30  6F86               	movwf	efgtoa@l& (0+255),b
  4143   001F32  0E00               	movlw	0
  4144   001F34  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4145   001F36  0E00               	movlw	0
  4146   001F38  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4147   001F3A  0E00               	movlw	0
  4148   001F3C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4149   001F3E                     l4871:
  4150                           
  4151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4152   001F3E  C08D  F001         	movff	efgtoa@g,___fladd@b
  4153   001F42  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  4154   001F46  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  4155   001F4A  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  4156   001F4E  C086  F005         	movff	efgtoa@l,___fladd@a
  4157   001F52  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4158   001F56  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4159   001F5A  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4160   001F5E  EC43  F014         	call	___fladd	;wreg free
  4161   001F62  C001  F082         	movff	?___fladd,efgtoa@h
  4162   001F66  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4163   001F6A  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4164   001F6E  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4165   001F72                     
  4166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4167   001F72  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4168   001F76  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4169   001F7A  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4170   001F7E  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4171   001F82  0E00               	movlw	0
  4172   001F84  6E15               	movwf	___flmul@a^0,c
  4173   001F86  0E00               	movlw	0
  4174   001F88  6E16               	movwf	(___flmul@a+1)^0,c
  4175   001F8A  0E20               	movlw	32
  4176   001F8C  6E17               	movwf	(___flmul@a+2)^0,c
  4177   001F8E  0E41               	movlw	65
  4178   001F90  6E18               	movwf	(___flmul@a+3)^0,c
  4179   001F92  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4180   001F96  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4181   001F9A  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4182   001F9E  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4183   001FA2  ECA3  F016         	call	___flmul	;wreg free
  4184   001FA6  C011  F02E         	movff	?___flmul,___flge@ff2
  4185   001FAA  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  4186   001FAE  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  4187   001FB2  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  4188   001FB6  ECD0  F025         	call	___flge	;wreg free
  4189   001FBA  A0D8               	btfss	status,0,c
  4190   001FBC  EFE2  F00F         	goto	u4831
  4191   001FC0  EFE4  F00F         	goto	u4830
  4192   001FC4                     u4831:
  4193   001FC4  EF0D  F010         	goto	l4883
  4194   001FC8                     u4830:
  4195   001FC8                     
  4196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4197   001FC8  0100               	movlb	0	; () banked
  4198   001FCA  4B78               	infsnz	efgtoa@e& (0+255),f,b
  4199   001FCC  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  4200   001FCE                     
  4201                           ; BSR set to: 0
  4202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4203   001FCE  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4204   001FD2  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4205   001FD6  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4206   001FDA  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4207   001FDE  0E00               	movlw	0
  4208   001FE0  6E15               	movwf	___flmul@a^0,c
  4209   001FE2  0E00               	movlw	0
  4210   001FE4  6E16               	movwf	(___flmul@a+1)^0,c
  4211   001FE6  0E20               	movlw	32
  4212   001FE8  6E17               	movwf	(___flmul@a+2)^0,c
  4213   001FEA  0E41               	movlw	65
  4214   001FEC  6E18               	movwf	(___flmul@a+3)^0,c
  4215   001FEE  ECA3  F016         	call	___flmul	;wreg free
  4216   001FF2  C011  F07C         	movff	?___flmul,efgtoa@ou
  4217   001FF6  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  4218   001FFA  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  4219   001FFE  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  4220   002002                     
  4221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4222   002002  0E66               	movlw	102
  4223   002004  0100               	movlb	0	; () banked
  4224   002006  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4225   002008  A4D8               	btfss	status,2,c
  4226   00200A  EF09  F010         	goto	u4841
  4227   00200E  EF0B  F010         	goto	u4840
  4228   002012                     u4841:
  4229   002012  EF0D  F010         	goto	l4883
  4230   002016                     u4840:
  4231   002016                     
  4232                           ; BSR set to: 0
  4233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4234   002016  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4235   002018  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4236   00201A                     l4883:
  4237                           
  4238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4239   00201A  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  4240   00201E  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  4241   002022  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  4242   002026  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  4243   00202A                     
  4244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4245   00202A  C078  F069         	movff	efgtoa@e,efgtoa@ne
  4246   00202E  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  4247   002032                     
  4248                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4249   002032  0E00               	movlw	0
  4250   002034  0100               	movlb	0	; () banked
  4251   002036  6F71               	movwf	efgtoa@pp& (0+255),b
  4252   002038                     
  4253                           ; BSR set to: 0
  4254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4255   002038  0E00               	movlw	0
  4256   00203A  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  4257   00203C  0E00               	movlw	0
  4258   00203E  6F6D               	movwf	efgtoa@t& (0+255),b
  4259   002040                     
  4260                           ; BSR set to: 0
  4261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4262   002040  0E00               	movlw	0
  4263   002042  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4264   002044  0E00               	movlw	0
  4265   002046  6F80               	movwf	efgtoa@i& (0+255),b
  4266                           
  4267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4268   002048  EF0B  F011         	goto	l4933
  4269   00204C                     l4893:
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4273   00204C  C082  F032         	movff	efgtoa@h,___fldiv@b
  4274   002050  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4275   002054  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4276   002058  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4277   00205C  C091  F036         	movff	efgtoa@u,___fldiv@a
  4278   002060  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4279   002064  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4280   002068  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4281   00206C  ECB8  F018         	call	___fldiv	;wreg free
  4282   002070  C032  F04B         	movff	?___fldiv,floorf@x
  4283   002074  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4284   002078  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4285   00207C  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4286   002080  EC4E  F020         	call	_floorf	;wreg free
  4287   002084  C04B  F086         	movff	?_floorf,efgtoa@l
  4288   002088  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4289   00208C  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4290   002090  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4291                           
  4292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4293   002094  C086  F001         	movff	efgtoa@l,___fltol@f1
  4294   002098  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4295   00209C  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4296   0020A0  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4297   0020A4  EC4D  F025         	call	___fltol	;wreg free
  4298   0020A8  BE02               	btfsc	(?___fltol+1)^0,7,c
  4299   0020AA  EF62  F010         	goto	u4850
  4300   0020AE  5002               	movf	(?___fltol+1)^0,w,c
  4301   0020B0  E107               	bnz	u4851
  4302   0020B2  0E0A               	movlw	10
  4303   0020B4  5C01               	subwf	?___fltol^0,w,c
  4304   0020B6  B0D8               	btfsc	status,0,c
  4305   0020B8  EF60  F010         	goto	u4851
  4306   0020BC  EF62  F010         	goto	u4850
  4307   0020C0                     u4851:
  4308   0020C0  EF72  F010         	goto	l4897
  4309   0020C4                     u4850:
  4310   0020C4  C086  F001         	movff	efgtoa@l,___fltol@f1
  4311   0020C8  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4312   0020CC  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4313   0020D0  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4314   0020D4  EC4D  F025         	call	___fltol	;wreg free
  4315   0020D8  C001  F074         	movff	?___fltol,efgtoa@d
  4316   0020DC  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4317   0020E0  EF77  F010         	goto	l1459
  4318   0020E4                     l4897:
  4319   0020E4  0E00               	movlw	0
  4320   0020E6  0100               	movlb	0	; () banked
  4321   0020E8  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  4322   0020EA  0E09               	movlw	9
  4323   0020EC  6F74               	movwf	efgtoa@d& (0+255),b
  4324   0020EE                     l1459:
  4325                           
  4326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4327   0020EE  0100               	movlb	0	; () banked
  4328   0020F0  5171               	movf	efgtoa@pp& (0+255),w,b
  4329   0020F2  A4D8               	btfss	status,2,c
  4330   0020F4  EF7E  F010         	goto	u4861
  4331   0020F8  EF80  F010         	goto	u4860
  4332   0020FC                     u4861:
  4333   0020FC  EFA8  F010         	goto	l4917
  4334   002100                     u4860:
  4335   002100                     
  4336                           ; BSR set to: 0
  4337   002100  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4338   002102  EF87  F010         	goto	u4870
  4339   002106  EF85  F010         	goto	u4871
  4340   00210A                     u4871:
  4341   00210A  EFA8  F010         	goto	l4917
  4342   00210E                     u4870:
  4343   00210E                     
  4344                           ; BSR set to: 0
  4345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4346   00210E  0EA0               	movlw	low _dbuf
  4347   002110  258B               	addwf	efgtoa@n& (0+255),w,b
  4348   002112  6ED9               	movwf	fsr2l,c
  4349   002114  0E02               	movlw	high _dbuf
  4350   002116  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4351   002118  6EDA               	movwf	fsr2h,c
  4352   00211A  0E2E               	movlw	46
  4353   00211C  6EDF               	movwf	indf2,c
  4354   00211E                     
  4355                           ; BSR set to: 0
  4356   00211E  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4357   002120  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4358   002122                     
  4359                           ; BSR set to: 0
  4360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4361   002122  077A               	decf	efgtoa@w& (0+255),f,b
  4362   002124  A0D8               	btfss	status,0,c
  4363   002126  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4364   002128                     
  4365                           ; BSR set to: 0
  4366                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4367   002128  0E01               	movlw	1
  4368   00212A  6F71               	movwf	efgtoa@pp& (0+255),b
  4369   00212C  EFA8  F010         	goto	l4917
  4370   002130                     l4909:
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4374   002130  0EA0               	movlw	low _dbuf
  4375   002132  258B               	addwf	efgtoa@n& (0+255),w,b
  4376   002134  6ED9               	movwf	fsr2l,c
  4377   002136  0E02               	movlw	high _dbuf
  4378   002138  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4379   00213A  6EDA               	movwf	fsr2h,c
  4380   00213C  0E30               	movlw	48
  4381   00213E  6EDF               	movwf	indf2,c
  4382   002140                     
  4383                           ; BSR set to: 0
  4384   002140  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4385   002142  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4386   002144                     
  4387                           ; BSR set to: 0
  4388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4389   002144  077A               	decf	efgtoa@w& (0+255),f,b
  4390   002146  A0D8               	btfss	status,0,c
  4391   002148  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4392   00214A                     
  4393                           ; BSR set to: 0
  4394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4395   00214A  076D               	decf	efgtoa@t& (0+255),f,b
  4396   00214C  A0D8               	btfss	status,0,c
  4397   00214E  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  4398   002150                     l4917:
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4402   002150  516D               	movf	efgtoa@t& (0+255),w,b
  4403   002152  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4404   002154  A4D8               	btfss	status,2,c
  4405   002156  EFAF  F010         	goto	u4881
  4406   00215A  EFB1  F010         	goto	u4880
  4407   00215E                     u4881:
  4408   00215E  EF98  F010         	goto	l4909
  4409   002162                     u4880:
  4410   002162                     
  4411                           ; BSR set to: 0
  4412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4413   002162  0EA0               	movlw	low _dbuf
  4414   002164  258B               	addwf	efgtoa@n& (0+255),w,b
  4415   002166  6ED9               	movwf	fsr2l,c
  4416   002168  0E02               	movlw	high _dbuf
  4417   00216A  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4418   00216C  6EDA               	movwf	fsr2h,c
  4419   00216E  5174               	movf	efgtoa@d& (0+255),w,b
  4420   002170  0F30               	addlw	48
  4421   002172  6EDF               	movwf	indf2,c
  4422   002174                     
  4423                           ; BSR set to: 0
  4424   002174  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4425   002176  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4426   002178                     
  4427                           ; BSR set to: 0
  4428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4429   002178  077A               	decf	efgtoa@w& (0+255),f,b
  4430   00217A  A0D8               	btfss	status,0,c
  4431   00217C  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4432   00217E                     
  4433                           ; BSR set to: 0
  4434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4435   00217E  C082  F02A         	movff	efgtoa@h,___flsub@b
  4436   002182  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4437   002186  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4438   00218A  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4439   00218E  C086  F015         	movff	efgtoa@l,___flmul@a
  4440   002192  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4441   002196  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4442   00219A  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4443   00219E  C091  F011         	movff	efgtoa@u,___flmul@b
  4444   0021A2  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4445   0021A6  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4446   0021AA  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4447   0021AE  ECA3  F016         	call	___flmul	;wreg free
  4448   0021B2  C011  F02E         	movff	?___flmul,___flsub@a
  4449   0021B6  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4450   0021BA  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4451   0021BE  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4452   0021C2  ECA8  F02E         	call	___flsub	;wreg free
  4453   0021C6  C02A  F082         	movff	?___flsub,efgtoa@h
  4454   0021CA  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4455   0021CE  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4456   0021D2  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4457   0021D6                     
  4458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4459   0021D6  C091  F032         	movff	efgtoa@u,___fldiv@b
  4460   0021DA  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4461   0021DE  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4462   0021E2  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4463   0021E6  0E00               	movlw	0
  4464   0021E8  6E36               	movwf	___fldiv@a^0,c
  4465   0021EA  0E00               	movlw	0
  4466   0021EC  6E37               	movwf	(___fldiv@a+1)^0,c
  4467   0021EE  0E20               	movlw	32
  4468   0021F0  6E38               	movwf	(___fldiv@a+2)^0,c
  4469   0021F2  0E41               	movlw	65
  4470   0021F4  6E39               	movwf	(___fldiv@a+3)^0,c
  4471   0021F6  ECB8  F018         	call	___fldiv	;wreg free
  4472   0021FA  C032  F091         	movff	?___fldiv,efgtoa@u
  4473   0021FE  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4474   002202  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4475   002206  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4476   00220A                     
  4477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4478   00220A  0100               	movlb	0	; () banked
  4479   00220C  0769               	decf	efgtoa@ne& (0+255),f,b
  4480   00220E  A0D8               	btfss	status,0,c
  4481   002210  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4482   002212                     
  4483                           ; BSR set to: 0
  4484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4485   002212  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4486   002214  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4487   002216                     l4933:
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4491   002216  5176               	movf	efgtoa@m& (0+255),w,b
  4492   002218  5D80               	subwf	efgtoa@i& (0+255),w,b
  4493   00221A  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4494   00221C  0A80               	xorlw	128
  4495   00221E  6F67               	movwf	??_efgtoa& (0+255),b
  4496   002220  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4497   002222  0A80               	xorlw	128
  4498   002224  5967               	subwfb	??_efgtoa& (0+255),w,b
  4499   002226  B0D8               	btfsc	status,0,c
  4500   002228  EF18  F011         	goto	u4891
  4501   00222C  EF1A  F011         	goto	u4890
  4502   002230                     u4891:
  4503   002230  EF28  F011         	goto	l4937
  4504   002234                     u4890:
  4505   002234                     
  4506                           ; BSR set to: 0
  4507   002234  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4508   002236  EF26  F011         	goto	u4901
  4509   00223A  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4510   00223C  E109               	bnz	u4900
  4511   00223E  0E4B               	movlw	75
  4512   002240  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4513   002242  A0D8               	btfss	status,0,c
  4514   002244  EF26  F011         	goto	u4901
  4515   002248  EF28  F011         	goto	u4900
  4516   00224C                     u4901:
  4517   00224C  EF26  F010         	goto	l4893
  4518   002250                     u4900:
  4519   002250                     l4937:
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4523   002250  0E00               	movlw	0
  4524   002252  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4525   002254  0E4F               	movlw	79
  4526   002256  6F80               	movwf	efgtoa@i& (0+255),b
  4527   002258                     
  4528                           ; BSR set to: 0
  4529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4530   002258  0EA0               	movlw	low _dbuf
  4531   00225A  2580               	addwf	efgtoa@i& (0+255),w,b
  4532   00225C  6ED9               	movwf	fsr2l,c
  4533   00225E  0E02               	movlw	high _dbuf
  4534   002260  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4535   002262  6EDA               	movwf	fsr2h,c
  4536   002264  0E00               	movlw	0
  4537   002266  6EDF               	movwf	indf2,c
  4538   002268                     
  4539                           ; BSR set to: 0
  4540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4541   002268  0EA0               	movlw	low _dbuf
  4542   00226A  6F67               	movwf	??_efgtoa& (0+255),b
  4543   00226C  0E02               	movlw	high _dbuf
  4544   00226E  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4545   002270  518B               	movf	efgtoa@n& (0+255),w,b
  4546   002272  5F67               	subwf	??_efgtoa& (0+255),f,b
  4547   002274  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4548   002276  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4549   002278  5180               	movf	efgtoa@i& (0+255),w,b
  4550   00227A  2567               	addwf	??_efgtoa& (0+255),w,b
  4551   00227C  6E01               	movwf	memcpy@d1^0,c
  4552   00227E  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4553   002280  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4554   002282  6E02               	movwf	(memcpy@d1+1)^0,c
  4555   002284  0EA0               	movlw	low _dbuf
  4556   002286  6E03               	movwf	memcpy@s1^0,c
  4557   002288  0E02               	movlw	high _dbuf
  4558   00228A  6E04               	movwf	(memcpy@s1+1)^0,c
  4559   00228C  C08B  F005         	movff	efgtoa@n,memcpy@n
  4560   002290  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4561   002294  EC6B  F02D         	call	_memcpy	;wreg free
  4562   002298                     
  4563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4564   002298  0100               	movlb	0	; () banked
  4565   00229A  518B               	movf	efgtoa@n& (0+255),w,b
  4566   00229C  5D80               	subwf	efgtoa@i& (0+255),w,b
  4567   00229E  6F8B               	movwf	efgtoa@n& (0+255),b
  4568   0022A0  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4569   0022A2  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4570   0022A4  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4571   0022A6                     
  4572                           ; BSR set to: 0
  4573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4574   0022A6  518A               	movf	efgtoa@sign& (0+255),w,b
  4575   0022A8  A4D8               	btfss	status,2,c
  4576   0022AA  EF59  F011         	goto	u4911
  4577   0022AE  EF5C  F011         	goto	u4910
  4578   0022B2                     u4911:
  4579   0022B2  0E01               	movlw	1
  4580   0022B4  EF5D  F011         	goto	u4920
  4581   0022B8                     u4910:
  4582   0022B8  0E00               	movlw	0
  4583   0022BA                     u4920:
  4584   0022BA  6F80               	movwf	efgtoa@i& (0+255),b
  4585   0022BC  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4586   0022BE                     
  4587                           ; BSR set to: 0
  4588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4589   0022BE  518A               	movf	efgtoa@sign& (0+255),w,b
  4590   0022C0  B4D8               	btfsc	status,2,c
  4591   0022C2  EF65  F011         	goto	u4931
  4592   0022C6  EF67  F011         	goto	u4930
  4593   0022CA                     u4931:
  4594   0022CA  EF72  F011         	goto	l4951
  4595   0022CE                     u4930:
  4596   0022CE                     
  4597                           ; BSR set to: 0
  4598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4599   0022CE  078B               	decf	efgtoa@n& (0+255),f,b
  4600   0022D0  A0D8               	btfss	status,0,c
  4601   0022D2  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4602   0022D4  0EA0               	movlw	low _dbuf
  4603   0022D6  258B               	addwf	efgtoa@n& (0+255),w,b
  4604   0022D8  6ED9               	movwf	fsr2l,c
  4605   0022DA  0E02               	movlw	high _dbuf
  4606   0022DC  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4607   0022DE  6EDA               	movwf	fsr2h,c
  4608   0022E0  C08A  FFDF         	movff	efgtoa@sign,indf2
  4609   0022E4                     l4951:
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4613   0022E4  5180               	movf	efgtoa@i& (0+255),w,b
  4614   0022E6  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4615   0022E8  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4616   0022EA  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4617   0022EC                     
  4618                           ; BSR set to: 0
  4619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4620   0022EC  C060  F011         	movff	efgtoa@fp,pad@fp
  4621   0022F0  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4622   0022F4  0EA0               	movlw	low _dbuf
  4623   0022F6  258B               	addwf	efgtoa@n& (0+255),w,b
  4624   0022F8  6E13               	movwf	pad@buf^0,c
  4625   0022FA  0E02               	movlw	high _dbuf
  4626   0022FC  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4627   0022FE  6E14               	movwf	(pad@buf+1)^0,c
  4628   002300  C07A  F015         	movff	efgtoa@w,pad@p
  4629   002304  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4630   002308  EC55  F02A         	call	_pad	;wreg free
  4631   00230C                     l1426:
  4632   00230C  0012               	return		;funcret
  4633   00230E                     __end_of_efgtoa:
  4634                           	callstack 0
  4635                           
  4636 ;; *************** function _strcpy *****************
  4637 ;; Defined at:
  4638 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4641 ;;		 -> dbuf(80), 
  4642 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4643 ;;		 -> STR_5(4), STR_2(4), 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  d               2    6[COMRAM] PTR unsigned char 
  4646 ;;		 -> dbuf(80), 
  4647 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4648 ;;		 -> STR_5(4), STR_2(4), 
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  2    0[COMRAM] PTR unsigned char 
  4651 ;; Registers used:
  4652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4659 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4661 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4662 ;;Total ram usage:        8 bytes
  4663 ;; Hardware stack levels used: 1
  4664 ;; Hardware stack levels required when called: 1
  4665 ;; This function calls:
  4666 ;;		Nothing
  4667 ;; This function is called by:
  4668 ;;		_efgtoa
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text6
  4673   005D96                     __ptext6:
  4674                           	callstack 0
  4675   005D96                     _strcpy:
  4676                           	callstack 25
  4677   005D96  C003  F005         	movff	strcpy@src,strcpy@s
  4678   005D9A  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4679   005D9E  C001  F007         	movff	strcpy@dest,strcpy@d
  4680   005DA2  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4681   005DA6                     l4557:
  4682   005DA6  C005  FFF6         	movff	strcpy@s,tblptrl
  4683   005DAA  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4684   005DAE  4A05               	infsnz	strcpy@s^0,f,c
  4685   005DB0  2A06               	incf	(strcpy@s+1)^0,f,c
  4686   005DB2                     	if	0	;tblptru may be non-zero
  4687   005DB2                     	endif
  4688   005DB2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4689   005DB2  0E00               	movlw	low (__mediumconst shr (0+16))
  4690   005DB4  6EF8               	movwf	tblptru,c
  4691   005DB6                     	endif
  4692   005DB6  C007  FFD9         	movff	strcpy@d,fsr2l
  4693   005DBA  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4694   005DBE  4A07               	infsnz	strcpy@d^0,f,c
  4695   005DC0  2A08               	incf	(strcpy@d+1)^0,f,c
  4696   005DC2  0008               	tblrd		*
  4697   005DC4  CFF5 FFDF          	movff	tablat,indf2
  4698   005DC8  50DF               	movf	indf2,w,c
  4699   005DCA  A4D8               	btfss	status,2,c
  4700   005DCC  EFEA  F02E         	goto	u4261
  4701   005DD0  EFEC  F02E         	goto	u4260
  4702   005DD4                     u4261:
  4703   005DD4  EFD3  F02E         	goto	l4557
  4704   005DD8                     u4260:
  4705   005DD8  0012               	return		;funcret
  4706   005DDA                     __end_of_strcpy:
  4707                           	callstack 0
  4708                           
  4709 ;; *************** function _memcpy *****************
  4710 ;; Defined at:
  4711 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  d1              2    0[COMRAM] PTR void 
  4714 ;;		 -> dbuf(80), 
  4715 ;;  s1              2    2[COMRAM] PTR const void 
  4716 ;;		 -> dbuf(80), 
  4717 ;;  n               2    4[COMRAM] unsigned int 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4720 ;;		 -> dbuf(80), 
  4721 ;;  d               2    6[COMRAM] PTR unsigned char 
  4722 ;;		 -> dbuf(80), 
  4723 ;;  tmp             1   10[COMRAM] unsigned char 
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  2    0[COMRAM] PTR void 
  4726 ;; Registers used:
  4727 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4733 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4734 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4736 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4737 ;;Total ram usage:       11 bytes
  4738 ;; Hardware stack levels used: 1
  4739 ;; Hardware stack levels required when called: 1
  4740 ;; This function calls:
  4741 ;;		Nothing
  4742 ;; This function is called by:
  4743 ;;		_efgtoa
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           	psect	text7
  4748   005AD6                     __ptext7:
  4749                           	callstack 0
  4750   005AD6                     _memcpy:
  4751                           	callstack 25
  4752   005AD6  C003  F009         	movff	memcpy@s1,memcpy@s
  4753   005ADA  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4754   005ADE  C001  F007         	movff	memcpy@d1,memcpy@d
  4755   005AE2  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4756   005AE6  EF85  F02D         	goto	l4601
  4757   005AEA                     l4593:
  4758   005AEA  C009  FFD9         	movff	memcpy@s,fsr2l
  4759   005AEE  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4760   005AF2  50DF               	movf	indf2,w,c
  4761   005AF4  6E0B               	movwf	memcpy@tmp^0,c
  4762   005AF6  4A09               	infsnz	memcpy@s^0,f,c
  4763   005AF8  2A0A               	incf	(memcpy@s+1)^0,f,c
  4764   005AFA  C007  FFD9         	movff	memcpy@d,fsr2l
  4765   005AFE  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4766   005B02  C00B  FFDF         	movff	memcpy@tmp,indf2
  4767   005B06  4A07               	infsnz	memcpy@d^0,f,c
  4768   005B08  2A08               	incf	(memcpy@d+1)^0,f,c
  4769   005B0A                     l4601:
  4770   005B0A  0605               	decf	memcpy@n^0,f,c
  4771   005B0C  A0D8               	btfss	status,0,c
  4772   005B0E  0606               	decf	(memcpy@n+1)^0,f,c
  4773   005B10  2805               	incf	memcpy@n^0,w,c
  4774   005B12  E106               	bnz	u4381
  4775   005B14  2806               	incf	(memcpy@n+1)^0,w,c
  4776   005B16  A4D8               	btfss	status,2,c
  4777   005B18  EF90  F02D         	goto	u4381
  4778   005B1C  EF92  F02D         	goto	u4380
  4779   005B20                     u4381:
  4780   005B20  EF75  F02D         	goto	l4593
  4781   005B24                     u4380:
  4782   005B24  0012               	return		;funcret
  4783   005B26                     __end_of_memcpy:
  4784                           	callstack 0
  4785                           
  4786 ;; *************** function _labs *****************
  4787 ;; Defined at:
  4788 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;  a               4    0[COMRAM] long 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;		None
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  4    0[COMRAM] long 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2, status,0
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4802 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4804 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4805 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4806 ;;Total ram usage:        8 bytes
  4807 ;; Hardware stack levels used: 1
  4808 ;; Hardware stack levels required when called: 1
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_efgtoa
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text8
  4817   005602                     __ptext8:
  4818                           	callstack 0
  4819   005602                     _labs:
  4820                           	callstack 25
  4821   005602  BE04               	btfsc	(labs@a+3)^0,7,c
  4822   005604  EF10  F02B         	goto	u4270
  4823   005608  5004               	movf	(labs@a+3)^0,w,c
  4824   00560A  1003               	iorwf	(labs@a+2)^0,w,c
  4825   00560C  1002               	iorwf	(labs@a+1)^0,w,c
  4826   00560E  E106               	bnz	u4271
  4827   005610  0401               	decf	labs@a^0,w,c
  4828   005612  B0D8               	btfsc	status,0,c
  4829   005614  EF0E  F02B         	goto	u4271
  4830   005618  EF10  F02B         	goto	u4270
  4831   00561C                     u4271:
  4832   00561C  EF2B  F02B         	goto	l1531
  4833   005620                     u4270:
  4834   005620  C001  F005         	movff	labs@a,??_labs
  4835   005624  C002  F006         	movff	labs@a+1,??_labs+1
  4836   005628  C003  F007         	movff	labs@a+2,??_labs+2
  4837   00562C  C004  F008         	movff	labs@a+3,??_labs+3
  4838   005630  1E05               	comf	??_labs^0,f,c
  4839   005632  1E06               	comf	(??_labs+1)^0,f,c
  4840   005634  1E07               	comf	(??_labs+2)^0,f,c
  4841   005636  1E08               	comf	(??_labs+3)^0,f,c
  4842   005638  2A05               	incf	??_labs^0,f,c
  4843   00563A  0E00               	movlw	0
  4844   00563C  2206               	addwfc	(??_labs+1)^0,f,c
  4845   00563E  2207               	addwfc	(??_labs+2)^0,f,c
  4846   005640  2208               	addwfc	(??_labs+3)^0,f,c
  4847   005642  C005  F001         	movff	??_labs,?_labs
  4848   005646  C006  F002         	movff	??_labs+1,?_labs+1
  4849   00564A  C007  F003         	movff	??_labs+2,?_labs+2
  4850   00564E  C008  F004         	movff	??_labs+3,?_labs+3
  4851   005652  EF33  F02B         	goto	l1534
  4852   005656                     l1531:
  4853   005656  C001  F001         	movff	labs@a,?_labs
  4854   00565A  C002  F002         	movff	labs@a+1,?_labs+1
  4855   00565E  C003  F003         	movff	labs@a+2,?_labs+2
  4856   005662  C004  F004         	movff	labs@a+3,?_labs+3
  4857   005666                     l1534:
  4858   005666  0012               	return		;funcret
  4859   005668                     __end_of_labs:
  4860                           	callstack 0
  4861                           
  4862 ;; *************** function _floorf *****************
  4863 ;; Defined at:
  4864 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  x               4   74[COMRAM] float 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  u               4   90[COMRAM] struct .
  4869 ;;  m               4   84[COMRAM] unsigned long 
  4870 ;;  e               2   88[COMRAM] int 
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  4   74[COMRAM] float 
  4873 ;; Registers used:
  4874 ;;		wreg, status,2, status,0
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4881 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4882 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4883 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4884 ;;Total ram usage:       20 bytes
  4885 ;; Hardware stack levels used: 1
  4886 ;; Hardware stack levels required when called: 1
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		_efgtoa
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text9
  4895   00409C                     __ptext9:
  4896                           	callstack 0
  4897   00409C                     _floorf:
  4898                           	callstack 25
  4899   00409C  C0DF  F05B         	movff	floorf@F526,floorf@u
  4900   0040A0  C0E0  F05C         	movff	floorf@F526+1,floorf@u+1
  4901   0040A4  C0E1  F05D         	movff	floorf@F526+2,floorf@u+2
  4902   0040A8  C0E2  F05E         	movff	floorf@F526+3,floorf@u+3
  4903   0040AC  C04B  F05B         	movff	floorf@x,floorf@u
  4904   0040B0  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4905   0040B4  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4906   0040B8  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4907   0040BC  0E81               	movlw	129
  4908   0040BE  6E4F               	movwf	??_floorf^0,c
  4909   0040C0  0EFF               	movlw	255
  4910   0040C2  6E50               	movwf	(??_floorf+1)^0,c
  4911   0040C4  C05B  F051         	movff	floorf@u,??_floorf+2
  4912   0040C8  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4913   0040CC  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4914   0040D0  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4915   0040D4  0E18               	movlw	24
  4916   0040D6  EF72  F020         	goto	u4280
  4917   0040DA                     u4285:
  4918   0040DA  90D8               	bcf	status,0,c
  4919   0040DC  3254               	rrcf	(??_floorf+5)^0,f,c
  4920   0040DE  3253               	rrcf	(??_floorf+4)^0,f,c
  4921   0040E0  3252               	rrcf	(??_floorf+3)^0,f,c
  4922   0040E2  3251               	rrcf	(??_floorf+2)^0,f,c
  4923   0040E4                     u4280:
  4924   0040E4  2EE8               	decfsz	wreg,f,c
  4925   0040E6  EF6D  F020         	goto	u4285
  4926   0040EA  5051               	movf	(??_floorf+2)^0,w,c
  4927   0040EC  244F               	addwf	??_floorf^0,w,c
  4928   0040EE  6E59               	movwf	floorf@e^0,c
  4929   0040F0  0E00               	movlw	0
  4930   0040F2  2050               	addwfc	(??_floorf+1)^0,w,c
  4931   0040F4  6E5A               	movwf	(floorf@e+1)^0,c
  4932   0040F6  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4933   0040F8  EF87  F020         	goto	u4291
  4934   0040FC  505A               	movf	(floorf@e+1)^0,w,c
  4935   0040FE  E109               	bnz	u4290
  4936   004100  0E17               	movlw	23
  4937   004102  5C59               	subwf	floorf@e^0,w,c
  4938   004104  A0D8               	btfss	status,0,c
  4939   004106  EF87  F020         	goto	u4291
  4940   00410A  EF89  F020         	goto	u4290
  4941   00410E                     u4291:
  4942   00410E  EF93  F020         	goto	l4569
  4943   004112                     u4290:
  4944   004112                     l4567:
  4945   004112  C04B  F04B         	movff	floorf@x,?_floorf
  4946   004116  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4947   00411A  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4948   00411E  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4949   004122  EF56  F021         	goto	l1520
  4950   004126                     l4569:
  4951   004126  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4952   004128  EF98  F020         	goto	u4301
  4953   00412C  EF9A  F020         	goto	u4300
  4954   004130                     u4301:
  4955   004130  EF0A  F021         	goto	l4579
  4956   004134                     u4300:
  4957   004134  C059  F04F         	movff	floorf@e,??_floorf
  4958   004138  0EFF               	movlw	255
  4959   00413A  6E50               	movwf	(??_floorf+1)^0,c
  4960   00413C  0EFF               	movlw	255
  4961   00413E  6E51               	movwf	(??_floorf+2)^0,c
  4962   004140  0E7F               	movlw	127
  4963   004142  6E52               	movwf	(??_floorf+3)^0,c
  4964   004144  0E00               	movlw	0
  4965   004146  6E53               	movwf	(??_floorf+4)^0,c
  4966   004148                     u4315:
  4967   004148  664F               	tstfsz	??_floorf^0,c
  4968   00414A  EFA9  F020         	goto	u4316
  4969   00414E  EFB1  F020         	goto	u4317
  4970   004152                     u4316:
  4971   004152  3453               	rlcf	(??_floorf+4)^0,w,c
  4972   004154  3253               	rrcf	(??_floorf+4)^0,f,c
  4973   004156  3252               	rrcf	(??_floorf+3)^0,f,c
  4974   004158  3251               	rrcf	(??_floorf+2)^0,f,c
  4975   00415A  3250               	rrcf	(??_floorf+1)^0,f,c
  4976   00415C  2E4F               	decfsz	??_floorf^0,f,c
  4977   00415E  EFA4  F020         	goto	u4315
  4978   004162                     u4317:
  4979   004162  C050  F055         	movff	??_floorf+1,floorf@m
  4980   004166  C051  F056         	movff	??_floorf+2,floorf@m+1
  4981   00416A  C052  F057         	movff	??_floorf+3,floorf@m+2
  4982   00416E  C053  F058         	movff	??_floorf+4,floorf@m+3
  4983   004172  5055               	movf	floorf@m^0,w,c
  4984   004174  145B               	andwf	floorf@u^0,w,c
  4985   004176  6E4F               	movwf	??_floorf^0,c
  4986   004178  5056               	movf	(floorf@m+1)^0,w,c
  4987   00417A  145C               	andwf	(floorf@u+1)^0,w,c
  4988   00417C  6E50               	movwf	(??_floorf+1)^0,c
  4989   00417E  5057               	movf	(floorf@m+2)^0,w,c
  4990   004180  145D               	andwf	(floorf@u+2)^0,w,c
  4991   004182  6E51               	movwf	(??_floorf+2)^0,c
  4992   004184  5058               	movf	(floorf@m+3)^0,w,c
  4993   004186  145E               	andwf	(floorf@u+3)^0,w,c
  4994   004188  6E52               	movwf	(??_floorf+3)^0,c
  4995   00418A  504F               	movf	??_floorf^0,w,c
  4996   00418C  1050               	iorwf	(??_floorf+1)^0,w,c
  4997   00418E  1051               	iorwf	(??_floorf+2)^0,w,c
  4998   004190  1052               	iorwf	(??_floorf+3)^0,w,c
  4999   004192  A4D8               	btfss	status,2,c
  5000   004194  EFCE  F020         	goto	u4321
  5001   004198  EFD0  F020         	goto	u4320
  5002   00419C                     u4321:
  5003   00419C  EFD2  F020         	goto	l4575
  5004   0041A0                     u4320:
  5005   0041A0  EF89  F020         	goto	l4567
  5006   0041A4                     l4575:
  5007   0041A4  C05B  F04F         	movff	floorf@u,??_floorf
  5008   0041A8  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5009   0041AC  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5010   0041B0  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5011   0041B4  0E20               	movlw	32
  5012   0041B6  EFE2  F020         	goto	u4330
  5013   0041BA                     u4335:
  5014   0041BA  90D8               	bcf	status,0,c
  5015   0041BC  3252               	rrcf	(??_floorf+3)^0,f,c
  5016   0041BE  3251               	rrcf	(??_floorf+2)^0,f,c
  5017   0041C0  3250               	rrcf	(??_floorf+1)^0,f,c
  5018   0041C2  324F               	rrcf	??_floorf^0,f,c
  5019   0041C4                     u4330:
  5020   0041C4  2EE8               	decfsz	wreg,f,c
  5021   0041C6  EFDD  F020         	goto	u4335
  5022   0041CA  504F               	movf	??_floorf^0,w,c
  5023   0041CC  1050               	iorwf	(??_floorf+1)^0,w,c
  5024   0041CE  1051               	iorwf	(??_floorf+2)^0,w,c
  5025   0041D0  1052               	iorwf	(??_floorf+3)^0,w,c
  5026   0041D2  B4D8               	btfsc	status,2,c
  5027   0041D4  EFEE  F020         	goto	u4341
  5028   0041D8  EFF0  F020         	goto	u4340
  5029   0041DC                     u4341:
  5030   0041DC  EFF8  F020         	goto	l1523
  5031   0041E0                     u4340:
  5032   0041E0  5055               	movf	floorf@m^0,w,c
  5033   0041E2  265B               	addwf	floorf@u^0,f,c
  5034   0041E4  5056               	movf	(floorf@m+1)^0,w,c
  5035   0041E6  225C               	addwfc	(floorf@u+1)^0,f,c
  5036   0041E8  5057               	movf	(floorf@m+2)^0,w,c
  5037   0041EA  225D               	addwfc	(floorf@u+2)^0,f,c
  5038   0041EC  5058               	movf	(floorf@m+3)^0,w,c
  5039   0041EE  225E               	addwfc	(floorf@u+3)^0,f,c
  5040   0041F0                     l1523:
  5041   0041F0  1C55               	comf	floorf@m^0,w,c
  5042   0041F2  6E4F               	movwf	??_floorf^0,c
  5043   0041F4  1C56               	comf	(floorf@m+1)^0,w,c
  5044   0041F6  6E50               	movwf	(??_floorf+1)^0,c
  5045   0041F8  1C57               	comf	(floorf@m+2)^0,w,c
  5046   0041FA  6E51               	movwf	(??_floorf+2)^0,c
  5047   0041FC  1C58               	comf	(floorf@m+3)^0,w,c
  5048   0041FE  6E52               	movwf	(??_floorf+3)^0,c
  5049   004200  504F               	movf	??_floorf^0,w,c
  5050   004202  165B               	andwf	floorf@u^0,f,c
  5051   004204  5050               	movf	(??_floorf+1)^0,w,c
  5052   004206  165C               	andwf	(floorf@u+1)^0,f,c
  5053   004208  5051               	movf	(??_floorf+2)^0,w,c
  5054   00420A  165D               	andwf	(floorf@u+2)^0,f,c
  5055   00420C  5052               	movf	(??_floorf+3)^0,w,c
  5056   00420E  165E               	andwf	(floorf@u+3)^0,f,c
  5057   004210  EF4E  F021         	goto	l4587
  5058   004214                     l4579:
  5059   004214  C05B  F04F         	movff	floorf@u,??_floorf
  5060   004218  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5061   00421C  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5062   004220  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5063   004224  0E20               	movlw	32
  5064   004226  EF1A  F021         	goto	u4350
  5065   00422A                     u4355:
  5066   00422A  90D8               	bcf	status,0,c
  5067   00422C  3252               	rrcf	(??_floorf+3)^0,f,c
  5068   00422E  3251               	rrcf	(??_floorf+2)^0,f,c
  5069   004230  3250               	rrcf	(??_floorf+1)^0,f,c
  5070   004232  324F               	rrcf	??_floorf^0,f,c
  5071   004234                     u4350:
  5072   004234  2EE8               	decfsz	wreg,f,c
  5073   004236  EF15  F021         	goto	u4355
  5074   00423A  504F               	movf	??_floorf^0,w,c
  5075   00423C  1050               	iorwf	(??_floorf+1)^0,w,c
  5076   00423E  1051               	iorwf	(??_floorf+2)^0,w,c
  5077   004240  1052               	iorwf	(??_floorf+3)^0,w,c
  5078   004242  A4D8               	btfss	status,2,c
  5079   004244  EF26  F021         	goto	u4361
  5080   004248  EF28  F021         	goto	u4360
  5081   00424C                     u4361:
  5082   00424C  EF32  F021         	goto	l4583
  5083   004250                     u4360:
  5084   004250  0E00               	movlw	0
  5085   004252  6E5B               	movwf	floorf@u^0,c
  5086   004254  0E00               	movlw	0
  5087   004256  6E5C               	movwf	(floorf@u+1)^0,c
  5088   004258  0E00               	movlw	0
  5089   00425A  6E5D               	movwf	(floorf@u+2)^0,c
  5090   00425C  0E00               	movlw	0
  5091   00425E  6E5E               	movwf	(floorf@u+3)^0,c
  5092   004260  EF4E  F021         	goto	l4587
  5093   004264                     l4583:
  5094   004264  90D8               	bcf	status,0,c
  5095   004266  345B               	rlcf	floorf@u^0,w,c
  5096   004268  6E4F               	movwf	??_floorf^0,c
  5097   00426A  345C               	rlcf	(floorf@u+1)^0,w,c
  5098   00426C  6E50               	movwf	(??_floorf+1)^0,c
  5099   00426E  345D               	rlcf	(floorf@u+2)^0,w,c
  5100   004270  6E51               	movwf	(??_floorf+2)^0,c
  5101   004272  345E               	rlcf	(floorf@u+3)^0,w,c
  5102   004274  6E52               	movwf	(??_floorf+3)^0,c
  5103   004276  504F               	movf	??_floorf^0,w,c
  5104   004278  1050               	iorwf	(??_floorf+1)^0,w,c
  5105   00427A  1051               	iorwf	(??_floorf+2)^0,w,c
  5106   00427C  1052               	iorwf	(??_floorf+3)^0,w,c
  5107   00427E  B4D8               	btfsc	status,2,c
  5108   004280  EF44  F021         	goto	u4371
  5109   004284  EF46  F021         	goto	u4370
  5110   004288                     u4371:
  5111   004288  EF4E  F021         	goto	l4587
  5112   00428C                     u4370:
  5113   00428C  0E00               	movlw	0
  5114   00428E  6E5B               	movwf	floorf@u^0,c
  5115   004290  0E00               	movlw	0
  5116   004292  6E5C               	movwf	(floorf@u+1)^0,c
  5117   004294  0E80               	movlw	128
  5118   004296  6E5D               	movwf	(floorf@u+2)^0,c
  5119   004298  0EBF               	movlw	191
  5120   00429A  6E5E               	movwf	(floorf@u+3)^0,c
  5121   00429C                     l4587:
  5122   00429C  C05B  F04B         	movff	floorf@u,?_floorf
  5123   0042A0  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  5124   0042A4  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  5125   0042A8  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  5126   0042AC                     l1520:
  5127   0042AC  0012               	return		;funcret
  5128   0042AE                     __end_of_floorf:
  5129                           	callstack 0
  5130                           
  5131 ;; *************** function ___fpclassifyf *****************
  5132 ;; Defined at:
  5133 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  x               4    0[COMRAM] float 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;  u               4   10[COMRAM] struct .
  5138 ;;  e               2    8[COMRAM] int 
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  2    0[COMRAM] int 
  5141 ;; Registers used:
  5142 ;;		wreg, status,2, status,0
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5148 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5149 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5150 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5151 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5152 ;;Total ram usage:       14 bytes
  5153 ;; Hardware stack levels used: 1
  5154 ;; Hardware stack levels required when called: 1
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		_efgtoa
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text10
  5163   004CA4                     __ptext10:
  5164                           	callstack 0
  5165   004CA4                     ___fpclassifyf:
  5166                           	callstack 25
  5167   004CA4  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5168   004CA8  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5169   004CAC  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5170   004CB0  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5171   004CB4  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5172   004CB8  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5173   004CBC  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5174   004CC0  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5175   004CC4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5176   004CC8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5177   004CCC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5178   004CD0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5179   004CD4  0E18               	movlw	24
  5180   004CD6  EF72  F026         	goto	u4190
  5181   004CDA                     u4195:
  5182   004CDA  90D8               	bcf	status,0,c
  5183   004CDC  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5184   004CDE  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5185   004CE0  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5186   004CE2  3205               	rrcf	??___fpclassifyf^0,f,c
  5187   004CE4                     u4190:
  5188   004CE4  2EE8               	decfsz	wreg,f,c
  5189   004CE6  EF6D  F026         	goto	u4195
  5190   004CEA  5005               	movf	??___fpclassifyf^0,w,c
  5191   004CEC  6E09               	movwf	___fpclassifyf@e^0,c
  5192   004CEE  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5193   004CF0  5009               	movf	___fpclassifyf@e^0,w,c
  5194   004CF2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5195   004CF4  A4D8               	btfss	status,2,c
  5196   004CF6  EF7F  F026         	goto	u4201
  5197   004CFA  EF81  F026         	goto	u4200
  5198   004CFE                     u4201:
  5199   004CFE  EFA1  F026         	goto	l4545
  5200   004D02                     u4200:
  5201   004D02  90D8               	bcf	status,0,c
  5202   004D04  340B               	rlcf	___fpclassifyf@u^0,w,c
  5203   004D06  6E05               	movwf	??___fpclassifyf^0,c
  5204   004D08  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5205   004D0A  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5206   004D0C  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5207   004D0E  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5208   004D10  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5209   004D12  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5210   004D14  5005               	movf	??___fpclassifyf^0,w,c
  5211   004D16  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5212   004D18  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5213   004D1A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5214   004D1C  A4D8               	btfss	status,2,c
  5215   004D1E  EF93  F026         	goto	u4211
  5216   004D22  EF95  F026         	goto	u4210
  5217   004D26                     u4211:
  5218   004D26  EF9B  F026         	goto	l4541
  5219   004D2A                     u4210:
  5220   004D2A  0E00               	movlw	0
  5221   004D2C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5222   004D2E  0E02               	movlw	2
  5223   004D30  6E01               	movwf	?___fpclassifyf^0,c
  5224   004D32  EFD0  F026         	goto	l1506
  5225   004D36                     l4541:
  5226   004D36  0E00               	movlw	0
  5227   004D38  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5228   004D3A  0E03               	movlw	3
  5229   004D3C  6E01               	movwf	?___fpclassifyf^0,c
  5230   004D3E  EFD0  F026         	goto	l1506
  5231   004D42                     l4545:
  5232   004D42  2809               	incf	___fpclassifyf@e^0,w,c
  5233   004D44  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5234   004D46  A4D8               	btfss	status,2,c
  5235   004D48  EFA8  F026         	goto	u4221
  5236   004D4C  EFAA  F026         	goto	u4220
  5237   004D50                     u4221:
  5238   004D50  EFCC  F026         	goto	l4551
  5239   004D54                     u4220:
  5240   004D54  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5241   004D58  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5242   004D5C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5243   004D60  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5244   004D64  0E09               	movlw	9
  5245   004D66                     u4235:
  5246   004D66  90D8               	bcf	status,0,c
  5247   004D68  3605               	rlcf	??___fpclassifyf^0,f,c
  5248   004D6A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5249   004D6C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5250   004D6E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5251   004D70  2EE8               	decfsz	wreg,f,c
  5252   004D72  EFB3  F026         	goto	u4235
  5253   004D76  5005               	movf	??___fpclassifyf^0,w,c
  5254   004D78  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5255   004D7A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5256   004D7C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5257   004D7E  B4D8               	btfsc	status,2,c
  5258   004D80  EFC4  F026         	goto	u4241
  5259   004D84  EFC7  F026         	goto	u4240
  5260   004D88                     u4241:
  5261   004D88  0E01               	movlw	1
  5262   004D8A  EFC8  F026         	goto	u4250
  5263   004D8E                     u4240:
  5264   004D8E  0E00               	movlw	0
  5265   004D90                     u4250:
  5266   004D90  6E01               	movwf	?___fpclassifyf^0,c
  5267   004D92  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5268   004D94  EFD0  F026         	goto	l1506
  5269   004D98                     l4551:
  5270   004D98  0E00               	movlw	0
  5271   004D9A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5272   004D9C  0E04               	movlw	4
  5273   004D9E  6E01               	movwf	?___fpclassifyf^0,c
  5274   004DA0                     l1506:
  5275   004DA0  0012               	return		;funcret
  5276   004DA2                     __end_of___fpclassifyf:
  5277                           	callstack 0
  5278                           
  5279 ;; *************** function ___fltol *****************
  5280 ;; Defined at:
  5281 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  f1              4    0[COMRAM] int 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;  exp1            1    9[COMRAM] unsigned char 
  5286 ;;  sign1           1    8[COMRAM] unsigned char 
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  4    0[COMRAM] long 
  5289 ;; Registers used:
  5290 ;;		wreg, status,2, status,0
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5296 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5297 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5298 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5299 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5300 ;;Total ram usage:       10 bytes
  5301 ;; Hardware stack levels used: 1
  5302 ;; Hardware stack levels required when called: 1
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		_reverseOneBlock
  5307 ;;		_ForwardOneBlock
  5308 ;;		_Forwardhalfblock
  5309 ;;		_efgtoa
  5310 ;;		_Backhalfblock
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314                           	psect	text11
  5315   004A9A                     __ptext11:
  5316                           	callstack 0
  5317   004A9A                     ___fltol:
  5318                           	callstack 25
  5319   004A9A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5320   004A9C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5321   004A9E  6E0A               	movwf	___fltol@exp1^0,c
  5322   004AA0  500A               	movf	___fltol@exp1^0,w,c
  5323   004AA2  A4D8               	btfss	status,2,c
  5324   004AA4  EF56  F025         	goto	u4091
  5325   004AA8  EF58  F025         	goto	u4090
  5326   004AAC                     u4091:
  5327   004AAC  EF62  F025         	goto	l4477
  5328   004AB0                     u4090:
  5329   004AB0                     l4473:
  5330   004AB0  0E00               	movlw	0
  5331   004AB2  6E01               	movwf	?___fltol^0,c
  5332   004AB4  0E00               	movlw	0
  5333   004AB6  6E02               	movwf	(?___fltol+1)^0,c
  5334   004AB8  0E00               	movlw	0
  5335   004ABA  6E03               	movwf	(?___fltol+2)^0,c
  5336   004ABC  0E00               	movlw	0
  5337   004ABE  6E04               	movwf	(?___fltol+3)^0,c
  5338   004AC0  EFCF  F025         	goto	l979
  5339   004AC4                     l4477:
  5340   004AC4  C001  F005         	movff	___fltol@f1,??___fltol
  5341   004AC8  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5342   004ACC  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5343   004AD0  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5344   004AD4  0E20               	movlw	32
  5345   004AD6  EF72  F025         	goto	u4100
  5346   004ADA                     u4105:
  5347   004ADA  90D8               	bcf	status,0,c
  5348   004ADC  3208               	rrcf	(??___fltol+3)^0,f,c
  5349   004ADE  3207               	rrcf	(??___fltol+2)^0,f,c
  5350   004AE0  3206               	rrcf	(??___fltol+1)^0,f,c
  5351   004AE2  3205               	rrcf	??___fltol^0,f,c
  5352   004AE4                     u4100:
  5353   004AE4  2EE8               	decfsz	wreg,f,c
  5354   004AE6  EF6D  F025         	goto	u4105
  5355   004AEA  5005               	movf	??___fltol^0,w,c
  5356   004AEC  6E09               	movwf	___fltol@sign1^0,c
  5357   004AEE  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5358   004AF0  0EFF               	movlw	255
  5359   004AF2  1601               	andwf	___fltol@f1^0,f,c
  5360   004AF4  0EFF               	movlw	255
  5361   004AF6  1602               	andwf	(___fltol@f1+1)^0,f,c
  5362   004AF8  0EFF               	movlw	255
  5363   004AFA  1603               	andwf	(___fltol@f1+2)^0,f,c
  5364   004AFC  0E00               	movlw	0
  5365   004AFE  1604               	andwf	(___fltol@f1+3)^0,f,c
  5366   004B00  0E96               	movlw	150
  5367   004B02  5E0A               	subwf	___fltol@exp1^0,f,c
  5368   004B04  BE0A               	btfsc	___fltol@exp1^0,7,c
  5369   004B06  EF89  F025         	goto	u4110
  5370   004B0A  EF87  F025         	goto	u4111
  5371   004B0E                     u4111:
  5372   004B0E  EF9F  F025         	goto	l4497
  5373   004B12                     u4110:
  5374   004B12  500A               	movf	___fltol@exp1^0,w,c
  5375   004B14  0A80               	xorlw	128
  5376   004B16  0F97               	addlw	151
  5377   004B18  B0D8               	btfsc	status,0,c
  5378   004B1A  EF91  F025         	goto	u4121
  5379   004B1E  EF93  F025         	goto	u4120
  5380   004B22                     u4121:
  5381   004B22  EF95  F025         	goto	l4493
  5382   004B26                     u4120:
  5383   004B26  EF58  F025         	goto	l4473
  5384   004B2A                     l4493:
  5385   004B2A  90D8               	bcf	status,0,c
  5386   004B2C  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5387   004B2E  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5388   004B30  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5389   004B32  3201               	rrcf	___fltol@f1^0,f,c
  5390   004B34  3E0A               	incfsz	___fltol@exp1^0,f,c
  5391   004B36  EF95  F025         	goto	l4493
  5392   004B3A  EFB7  F025         	goto	l4507
  5393   004B3E                     l4497:
  5394   004B3E  0E1F               	movlw	31
  5395   004B40  640A               	cpfsgt	___fltol@exp1^0,c
  5396   004B42  EFA5  F025         	goto	u4131
  5397   004B46  EFA7  F025         	goto	u4130
  5398   004B4A                     u4131:
  5399   004B4A  EFAF  F025         	goto	l4505
  5400   004B4E                     u4130:
  5401   004B4E  EF58  F025         	goto	l4473
  5402   004B52                     l4503:
  5403   004B52  90D8               	bcf	status,0,c
  5404   004B54  3601               	rlcf	___fltol@f1^0,f,c
  5405   004B56  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5406   004B58  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5407   004B5A  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5408   004B5C  060A               	decf	___fltol@exp1^0,f,c
  5409   004B5E                     l4505:
  5410   004B5E  500A               	movf	___fltol@exp1^0,w,c
  5411   004B60  A4D8               	btfss	status,2,c
  5412   004B62  EFB5  F025         	goto	u4141
  5413   004B66  EFB7  F025         	goto	u4140
  5414   004B6A                     u4141:
  5415   004B6A  EFA9  F025         	goto	l4503
  5416   004B6E                     u4140:
  5417   004B6E                     l4507:
  5418   004B6E  5009               	movf	___fltol@sign1^0,w,c
  5419   004B70  B4D8               	btfsc	status,2,c
  5420   004B72  EFBD  F025         	goto	u4151
  5421   004B76  EFBF  F025         	goto	u4150
  5422   004B7A                     u4151:
  5423   004B7A  EFC7  F025         	goto	l4511
  5424   004B7E                     u4150:
  5425   004B7E  1E04               	comf	(___fltol@f1+3)^0,f,c
  5426   004B80  1E03               	comf	(___fltol@f1+2)^0,f,c
  5427   004B82  1E02               	comf	(___fltol@f1+1)^0,f,c
  5428   004B84  6C01               	negf	___fltol@f1^0,c
  5429   004B86  0E00               	movlw	0
  5430   004B88  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5431   004B8A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5432   004B8C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5433   004B8E                     l4511:
  5434   004B8E  C001  F001         	movff	___fltol@f1,?___fltol
  5435   004B92  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5436   004B96  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5437   004B9A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5438   004B9E                     l979:
  5439   004B9E  0012               	return		;funcret
  5440   004BA0                     __end_of___fltol:
  5441                           	callstack 0
  5442                           
  5443 ;; *************** function ___flneg *****************
  5444 ;; Defined at:
  5445 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;  f1              4    0[COMRAM] long 
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;		None
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  4    0[COMRAM] long 
  5452 ;; Registers used:
  5453 ;;		wreg, status,2, status,0
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5459 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5462 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5463 ;;Total ram usage:        4 bytes
  5464 ;; Hardware stack levels used: 1
  5465 ;; Hardware stack levels required when called: 1
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		_efgtoa
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           	psect	text12
  5474   005F1C                     __ptext12:
  5475                           	callstack 0
  5476   005F1C                     ___flneg:
  5477                           	callstack 25
  5478   005F1C  5001               	movf	___flneg@f1^0,w,c
  5479   005F1E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5480   005F20  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5481   005F22  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5482   005F24  B4D8               	btfsc	status,2,c
  5483   005F26  EF97  F02F         	goto	u4081
  5484   005F2A  EF99  F02F         	goto	u4080
  5485   005F2E                     u4081:
  5486   005F2E  EFA1  F02F         	goto	l4467
  5487   005F32                     u4080:
  5488   005F32  0E00               	movlw	0
  5489   005F34  1A01               	xorwf	___flneg@f1^0,f,c
  5490   005F36  0E00               	movlw	0
  5491   005F38  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5492   005F3A  0E00               	movlw	0
  5493   005F3C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5494   005F3E  0E80               	movlw	128
  5495   005F40  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5496   005F42                     l4467:
  5497   005F42  C001  F001         	movff	___flneg@f1,?___flneg
  5498   005F46  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5499   005F4A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5500   005F4E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5501   005F52  0012               	return		;funcret
  5502   005F54                     __end_of___flneg:
  5503                           	callstack 0
  5504                           
  5505 ;; *************** function _dtoa *****************
  5506 ;; Defined at:
  5507 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5510 ;;		 -> sprintf@f(11), 
  5511 ;;  d               8   29[COMRAM] long long 
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;  n               8   51[COMRAM] long long 
  5514 ;;  i               2   59[COMRAM] int 
  5515 ;;  w               2   49[COMRAM] int 
  5516 ;;  p               2   47[COMRAM] int 
  5517 ;;  s               1   61[COMRAM] unsigned char 
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  1    wreg      void 
  5520 ;; Registers used:
  5521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5527 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5528 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5529 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5530 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5531 ;;Total ram usage:       35 bytes
  5532 ;; Hardware stack levels used: 1
  5533 ;; Hardware stack levels required when called: 5
  5534 ;; This function calls:
  5535 ;;		___aodiv
  5536 ;;		___aomod
  5537 ;;		_abs
  5538 ;;		_pad
  5539 ;; This function is called by:
  5540 ;;		_vfpfcnvrt
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text13
  5545   003E1E                     __ptext13:
  5546                           	callstack 0
  5547   003E1E                     _dtoa:
  5548                           	callstack 22
  5549   003E1E                     
  5550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5551   003E1E  C01E  F034         	movff	dtoa@d,dtoa@n
  5552   003E22  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5553   003E26  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5554   003E2A  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5555   003E2E  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5556   003E32  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5557   003E36  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5558   003E3A  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5559   003E3E                     
  5560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5561   003E3E  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5562   003E40  EF24  F01F         	goto	u4521
  5563   003E44  EF27  F01F         	goto	u4520
  5564   003E48                     u4521:
  5565   003E48  0E01               	movlw	1
  5566   003E4A  EF28  F01F         	goto	u4530
  5567   003E4E                     u4520:
  5568   003E4E  0E00               	movlw	0
  5569   003E50                     u4530:
  5570   003E50  6E3E               	movwf	dtoa@s^0,c
  5571   003E52                     
  5572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5573   003E52  503E               	movf	dtoa@s^0,w,c
  5574   003E54  B4D8               	btfsc	status,2,c
  5575   003E56  EF2F  F01F         	goto	u4541
  5576   003E5A  EF31  F01F         	goto	u4540
  5577   003E5E                     u4541:
  5578   003E5E  EF41  F01F         	goto	l4691
  5579   003E62                     u4540:
  5580   003E62                     
  5581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5582   003E62  1E3B               	comf	(dtoa@n+7)^0,f,c
  5583   003E64  1E3A               	comf	(dtoa@n+6)^0,f,c
  5584   003E66  1E39               	comf	(dtoa@n+5)^0,f,c
  5585   003E68  1E38               	comf	(dtoa@n+4)^0,f,c
  5586   003E6A  1E37               	comf	(dtoa@n+3)^0,f,c
  5587   003E6C  1E36               	comf	(dtoa@n+2)^0,f,c
  5588   003E6E  1E35               	comf	(dtoa@n+1)^0,f,c
  5589   003E70  6C34               	negf	dtoa@n^0,c
  5590   003E72  0E00               	movlw	0
  5591   003E74  2235               	addwfc	(dtoa@n+1)^0,f,c
  5592   003E76  2236               	addwfc	(dtoa@n+2)^0,f,c
  5593   003E78  2237               	addwfc	(dtoa@n+3)^0,f,c
  5594   003E7A  2238               	addwfc	(dtoa@n+4)^0,f,c
  5595   003E7C  2239               	addwfc	(dtoa@n+5)^0,f,c
  5596   003E7E  223A               	addwfc	(dtoa@n+6)^0,f,c
  5597   003E80  223B               	addwfc	(dtoa@n+7)^0,f,c
  5598   003E82                     l4691:
  5599                           
  5600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5601   003E82  0100               	movlb	0	; () banked
  5602   003E84  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  5603   003E86  EF4F  F01F         	goto	u4550
  5604   003E8A  51EA               	movf	(_prec+1)& (0+255),w,b
  5605   003E8C  E106               	bnz	u4551
  5606   003E8E  05E9               	decf	_prec& (0+255),w,b
  5607   003E90  B0D8               	btfsc	status,0,c
  5608   003E92  EF4D  F01F         	goto	u4551
  5609   003E96  EF4F  F01F         	goto	u4550
  5610   003E9A                     u4551:
  5611   003E9A  EF55  F01F         	goto	l1401
  5612   003E9E                     u4550:
  5613   003E9E                     
  5614                           ; BSR set to: 0
  5615   003E9E  0E00               	movlw	0
  5616   003EA0  6E31               	movwf	(dtoa@p+1)^0,c
  5617   003EA2  0E01               	movlw	1
  5618   003EA4  6E30               	movwf	dtoa@p^0,c
  5619   003EA6  EF59  F01F         	goto	l1403
  5620   003EAA                     l1401:
  5621                           
  5622                           ; BSR set to: 0
  5623   003EAA  C0E9  F030         	movff	_prec,dtoa@p
  5624   003EAE  C0EA  F031         	movff	_prec+1,dtoa@p+1
  5625   003EB2                     l1403:
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5629   003EB2  C0E7  F032         	movff	_width,dtoa@w
  5630   003EB6  C0E8  F033         	movff	_width+1,dtoa@w+1
  5631   003EBA                     
  5632                           ; BSR set to: 0
  5633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5634   003EBA  503E               	movf	dtoa@s^0,w,c
  5635   003EBC  B4D8               	btfsc	status,2,c
  5636   003EBE  EF63  F01F         	goto	u4561
  5637   003EC2  EF65  F01F         	goto	u4560
  5638   003EC6                     u4561:
  5639   003EC6  EF7C  F01F         	goto	l1404
  5640   003ECA                     u4560:
  5641   003ECA                     
  5642                           ; BSR set to: 0
  5643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5644   003ECA  0632               	decf	dtoa@w^0,f,c
  5645   003ECC  A0D8               	btfss	status,0,c
  5646   003ECE  0633               	decf	(dtoa@w+1)^0,f,c
  5647   003ED0                     
  5648                           ; BSR set to: 0
  5649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5650   003ED0  503E               	movf	dtoa@s^0,w,c
  5651   003ED2  A4D8               	btfss	status,2,c
  5652   003ED4  EF6E  F01F         	goto	u4571
  5653   003ED8  EF70  F01F         	goto	u4570
  5654   003EDC                     u4571:
  5655   003EDC  EF76  F01F         	goto	l4703
  5656   003EE0                     u4570:
  5657   003EE0                     
  5658                           ; BSR set to: 0
  5659   003EE0  0E00               	movlw	0
  5660   003EE2  6E2F               	movwf	(_dtoa$2821+1)^0,c
  5661   003EE4  0E2B               	movlw	43
  5662   003EE6  6E2E               	movwf	_dtoa$2821^0,c
  5663   003EE8  EF7A  F01F         	goto	l4705
  5664   003EEC                     l4703:
  5665                           
  5666                           ; BSR set to: 0
  5667   003EEC  0E00               	movlw	0
  5668   003EEE  6E2F               	movwf	(_dtoa$2821+1)^0,c
  5669   003EF0  0E2D               	movlw	45
  5670   003EF2  6E2E               	movwf	_dtoa$2821^0,c
  5671   003EF4                     l4705:
  5672                           
  5673                           ; BSR set to: 0
  5674   003EF4  C02E  F03E         	movff	_dtoa$2821,dtoa@s
  5675   003EF8                     l1404:
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5679   003EF8  0E00               	movlw	0
  5680   003EFA  6E3D               	movwf	(dtoa@i+1)^0,c
  5681   003EFC  0E4F               	movlw	79
  5682   003EFE  6E3C               	movwf	dtoa@i^0,c
  5683   003F00                     
  5684                           ; BSR set to: 0
  5685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5686   003F00  0E00               	movlw	0
  5687   003F02  0102               	movlb	2	; () banked
  5688   003F04  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5689                           
  5690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5691   003F06  EF01  F020         	goto	l4719
  5692   003F0A                     l4709:
  5693                           
  5694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5695   003F0A  063C               	decf	dtoa@i^0,f,c
  5696   003F0C  A0D8               	btfss	status,0,c
  5697   003F0E  063D               	decf	(dtoa@i+1)^0,f,c
  5698   003F10                     
  5699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5700   003F10  0EA0               	movlw	low _dbuf
  5701   003F12  243C               	addwf	dtoa@i^0,w,c
  5702   003F14  6ED9               	movwf	fsr2l,c
  5703   003F16  0E02               	movlw	high _dbuf
  5704   003F18  203D               	addwfc	(dtoa@i+1)^0,w,c
  5705   003F1A  6EDA               	movwf	fsr2h,c
  5706   003F1C  C034  F001         	movff	dtoa@n,___aomod@dividend
  5707   003F20  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5708   003F24  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5709   003F28  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5710   003F2C  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5711   003F30  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5712   003F34  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5713   003F38  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5714   003F3C  0E0A               	movlw	10
  5715   003F3E  6E09               	movwf	___aomod@divisor^0,c
  5716   003F40  0E00               	movlw	0
  5717   003F42  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5718   003F44  0E00               	movlw	0
  5719   003F46  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5720   003F48  0E00               	movlw	0
  5721   003F4A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5722   003F4C  0E00               	movlw	0
  5723   003F4E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5724   003F50  0E00               	movlw	0
  5725   003F52  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5726   003F54  0E00               	movlw	0
  5727   003F56  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5728   003F58  0E00               	movlw	0
  5729   003F5A  6E10               	movwf	(___aomod@divisor+7)^0,c
  5730   003F5C  EC9B  F024         	call	___aomod	;wreg free
  5731   003F60  C001  F026         	movff	?___aomod,??_dtoa
  5732   003F64  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5733   003F68  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5734   003F6C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5735   003F70  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5736   003F74  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5737   003F78  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5738   003F7C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5739   003F80  C026  F013         	movff	??_dtoa,abs@a
  5740   003F84  C027  F014         	movff	??_dtoa+1,abs@a+1
  5741   003F88  EC30  F02F         	call	_abs	;wreg free
  5742   003F8C  5013               	movf	?_abs^0,w,c
  5743   003F8E  0F30               	addlw	48
  5744   003F90  6EDF               	movwf	indf2,c
  5745   003F92                     
  5746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5747   003F92  0630               	decf	dtoa@p^0,f,c
  5748   003F94  A0D8               	btfss	status,0,c
  5749   003F96  0631               	decf	(dtoa@p+1)^0,f,c
  5750   003F98                     
  5751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5752   003F98  0632               	decf	dtoa@w^0,f,c
  5753   003F9A  A0D8               	btfss	status,0,c
  5754   003F9C  0633               	decf	(dtoa@w+1)^0,f,c
  5755   003F9E                     
  5756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5757   003F9E  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5758   003FA2  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5759   003FA6  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5760   003FAA  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5761   003FAE  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5762   003FB2  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5763   003FB6  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5764   003FBA  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5765   003FBE  0E0A               	movlw	10
  5766   003FC0  6E09               	movwf	___aodiv@divisor^0,c
  5767   003FC2  0E00               	movlw	0
  5768   003FC4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5769   003FC6  0E00               	movlw	0
  5770   003FC8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5771   003FCA  0E00               	movlw	0
  5772   003FCC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5773   003FCE  0E00               	movlw	0
  5774   003FD0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5775   003FD2  0E00               	movlw	0
  5776   003FD4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5777   003FD6  0E00               	movlw	0
  5778   003FD8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5779   003FDA  0E00               	movlw	0
  5780   003FDC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5781   003FDE  EC21  F023         	call	___aodiv	;wreg free
  5782   003FE2  C001  F034         	movff	?___aodiv,dtoa@n
  5783   003FE6  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5784   003FEA  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5785   003FEE  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5786   003FF2  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5787   003FF6  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5788   003FFA  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5789   003FFE  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5790   004002                     l4719:
  5791                           
  5792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5793   004002  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5794   004004  EF0C  F020         	goto	u4581
  5795   004008  503D               	movf	(dtoa@i+1)^0,w,c
  5796   00400A  E108               	bnz	u4580
  5797   00400C  043C               	decf	dtoa@i^0,w,c
  5798   00400E  A0D8               	btfss	status,0,c
  5799   004010  EF0C  F020         	goto	u4581
  5800   004014  EF0E  F020         	goto	u4580
  5801   004018                     u4581:
  5802   004018  EF2A  F020         	goto	l4725
  5803   00401C                     u4580:
  5804   00401C  5034               	movf	dtoa@n^0,w,c
  5805   00401E  1035               	iorwf	(dtoa@n+1)^0,w,c
  5806   004020  1036               	iorwf	(dtoa@n+2)^0,w,c
  5807   004022  1037               	iorwf	(dtoa@n+3)^0,w,c
  5808   004024  1038               	iorwf	(dtoa@n+4)^0,w,c
  5809   004026  1039               	iorwf	(dtoa@n+5)^0,w,c
  5810   004028  103A               	iorwf	(dtoa@n+6)^0,w,c
  5811   00402A  103B               	iorwf	(dtoa@n+7)^0,w,c
  5812   00402C  A4D8               	btfss	status,2,c
  5813   00402E  EF1B  F020         	goto	u4591
  5814   004032  EF1D  F020         	goto	u4590
  5815   004036                     u4591:
  5816   004036  EF85  F01F         	goto	l4709
  5817   00403A                     u4590:
  5818   00403A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5819   00403C  EF2A  F020         	goto	u4600
  5820   004040  5031               	movf	(dtoa@p+1)^0,w,c
  5821   004042  E106               	bnz	u4601
  5822   004044  0430               	decf	dtoa@p^0,w,c
  5823   004046  B0D8               	btfsc	status,0,c
  5824   004048  EF28  F020         	goto	u4601
  5825   00404C  EF2A  F020         	goto	u4600
  5826   004050                     u4601:
  5827   004050  EF85  F01F         	goto	l4709
  5828   004054                     u4600:
  5829   004054                     l4725:
  5830                           
  5831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5832   004054  503E               	movf	dtoa@s^0,w,c
  5833   004056  B4D8               	btfsc	status,2,c
  5834   004058  EF30  F020         	goto	u4611
  5835   00405C  EF32  F020         	goto	u4610
  5836   004060                     u4611:
  5837   004060  EF3D  F020         	goto	l4731
  5838   004064                     u4610:
  5839   004064                     
  5840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5841   004064  063C               	decf	dtoa@i^0,f,c
  5842   004066  A0D8               	btfss	status,0,c
  5843   004068  063D               	decf	(dtoa@i+1)^0,f,c
  5844   00406A                     
  5845                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5846   00406A  0EA0               	movlw	low _dbuf
  5847   00406C  243C               	addwf	dtoa@i^0,w,c
  5848   00406E  6ED9               	movwf	fsr2l,c
  5849   004070  0E02               	movlw	high _dbuf
  5850   004072  203D               	addwfc	(dtoa@i+1)^0,w,c
  5851   004074  6EDA               	movwf	fsr2h,c
  5852   004076  C03E  FFDF         	movff	dtoa@s,indf2
  5853   00407A                     l4731:
  5854                           
  5855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5856   00407A  C01C  F011         	movff	dtoa@fp,pad@fp
  5857   00407E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5858   004082  0EA0               	movlw	low _dbuf
  5859   004084  243C               	addwf	dtoa@i^0,w,c
  5860   004086  6E13               	movwf	pad@buf^0,c
  5861   004088  0E02               	movlw	high _dbuf
  5862   00408A  203D               	addwfc	(dtoa@i+1)^0,w,c
  5863   00408C  6E14               	movwf	(pad@buf+1)^0,c
  5864   00408E  C032  F015         	movff	dtoa@w,pad@p
  5865   004092  C033  F016         	movff	dtoa@w+1,pad@p+1
  5866   004096  EC55  F02A         	call	_pad	;wreg free
  5867   00409A  0012               	return		;funcret
  5868   00409C                     __end_of_dtoa:
  5869                           	callstack 0
  5870                           
  5871 ;; *************** function _pad *****************
  5872 ;; Defined at:
  5873 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5876 ;;		 -> sprintf@f(11), 
  5877 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5878 ;;		 -> dbuf(80), 
  5879 ;;  p               2   20[COMRAM] int 
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;  w               2   25[COMRAM] int 
  5882 ;;  i               2   23[COMRAM] int 
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1    wreg      void 
  5885 ;; Registers used:
  5886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5892 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5893 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5894 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5895 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5896 ;;Total ram usage:       11 bytes
  5897 ;; Hardware stack levels used: 1
  5898 ;; Hardware stack levels required when called: 4
  5899 ;; This function calls:
  5900 ;;		_fputc
  5901 ;;		_fputs
  5902 ;; This function is called by:
  5903 ;;		_dtoa
  5904 ;;		_efgtoa
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           	psect	text14
  5909   0054AA                     __ptext14:
  5910                           	callstack 0
  5911   0054AA                     _pad:
  5912                           	callstack 22
  5913   0054AA                     
  5914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5915   0054AA  BE16               	btfsc	(pad@p+1)^0,7,c
  5916   0054AC  EF5A  F02A         	goto	u4161
  5917   0054B0  EF5C  F02A         	goto	u4160
  5918   0054B4                     u4161:
  5919   0054B4  EF62  F02A         	goto	l4519
  5920   0054B8                     u4160:
  5921   0054B8  C015  F01A         	movff	pad@p,pad@w
  5922   0054BC  C016  F01B         	movff	pad@p+1,pad@w+1
  5923   0054C0  EF66  F02A         	goto	l1392
  5924   0054C4                     l4519:
  5925   0054C4  0E00               	movlw	0
  5926   0054C6  6E1B               	movwf	(pad@w+1)^0,c
  5927   0054C8  0E00               	movlw	0
  5928   0054CA  6E1A               	movwf	pad@w^0,c
  5929   0054CC                     l1392:
  5930                           
  5931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5932   0054CC  0E00               	movlw	0
  5933   0054CE  6E19               	movwf	(pad@i+1)^0,c
  5934   0054D0  0E00               	movlw	0
  5935   0054D2  6E18               	movwf	pad@i^0,c
  5936                           
  5937                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5938   0054D4  EF78  F02A         	goto	l4525
  5939   0054D8                     l4521:
  5940                           
  5941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5942   0054D8  0E00               	movlw	0
  5943   0054DA  6E02               	movwf	(fputc@c+1)^0,c
  5944   0054DC  0E20               	movlw	32
  5945   0054DE  6E01               	movwf	fputc@c^0,c
  5946   0054E0  C011  F003         	movff	pad@fp,fputc@fp
  5947   0054E4  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5948   0054E8  ECD1  F026         	call	_fputc	;wreg free
  5949   0054EC                     
  5950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5951   0054EC  4A18               	infsnz	pad@i^0,f,c
  5952   0054EE  2A19               	incf	(pad@i+1)^0,f,c
  5953   0054F0                     l4525:
  5954                           
  5955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5956   0054F0  501A               	movf	pad@w^0,w,c
  5957   0054F2  5C18               	subwf	pad@i^0,w,c
  5958   0054F4  5019               	movf	(pad@i+1)^0,w,c
  5959   0054F6  0A80               	xorlw	128
  5960   0054F8  6E17               	movwf	??_pad^0,c
  5961   0054FA  501B               	movf	(pad@w+1)^0,w,c
  5962   0054FC  0A80               	xorlw	128
  5963   0054FE  5817               	subwfb	??_pad^0,w,c
  5964   005500  A0D8               	btfss	status,0,c
  5965   005502  EF85  F02A         	goto	u4171
  5966   005506  EF87  F02A         	goto	u4170
  5967   00550A                     u4171:
  5968   00550A  EF6C  F02A         	goto	l4521
  5969   00550E                     u4170:
  5970   00550E                     
  5971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5972   00550E  C013  F00A         	movff	pad@buf,fputs@s
  5973   005512  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5974   005516  C011  F00C         	movff	pad@fp,fputs@fp
  5975   00551A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5976   00551E  ECED  F02E         	call	_fputs	;wreg free
  5977   005522  0012               	return		;funcret
  5978   005524                     __end_of_pad:
  5979                           	callstack 0
  5980                           
  5981 ;; *************** function _fputs *****************
  5982 ;; Defined at:
  5983 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5986 ;;		 -> dbuf(80), 
  5987 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5988 ;;		 -> sprintf@f(11), 
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;  i               2   14[COMRAM] int 
  5991 ;;  c               1   13[COMRAM] unsigned char 
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  2    9[COMRAM] int 
  5994 ;; Registers used:
  5995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6001 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6002 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6004 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6005 ;;Total ram usage:        7 bytes
  6006 ;; Hardware stack levels used: 1
  6007 ;; Hardware stack levels required when called: 3
  6008 ;; This function calls:
  6009 ;;		_fputc
  6010 ;; This function is called by:
  6011 ;;		_pad
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text15
  6016   005DDA                     __ptext15:
  6017                           	callstack 0
  6018   005DDA                     _fputs:
  6019                           	callstack 22
  6020   005DDA  0E00               	movlw	0
  6021   005DDC  6E10               	movwf	(fputs@i+1)^0,c
  6022   005DDE  0E00               	movlw	0
  6023   005DE0  6E0F               	movwf	fputs@i^0,c
  6024   005DE2  EFFE  F02E         	goto	l4053
  6025   005DE6                     l4049:
  6026   005DE6  C00E  F001         	movff	fputs@c,fputc@c
  6027   005DEA  6A02               	clrf	(fputc@c+1)^0,c
  6028   005DEC  C00C  F003         	movff	fputs@fp,fputc@fp
  6029   005DF0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6030   005DF4  ECD1  F026         	call	_fputc	;wreg free
  6031   005DF8  4A0F               	infsnz	fputs@i^0,f,c
  6032   005DFA  2A10               	incf	(fputs@i+1)^0,f,c
  6033   005DFC                     l4053:
  6034   005DFC  500F               	movf	fputs@i^0,w,c
  6035   005DFE  240A               	addwf	fputs@s^0,w,c
  6036   005E00  6ED9               	movwf	fsr2l,c
  6037   005E02  5010               	movf	(fputs@i+1)^0,w,c
  6038   005E04  200B               	addwfc	(fputs@s+1)^0,w,c
  6039   005E06  6EDA               	movwf	fsr2h,c
  6040   005E08  50DF               	movf	indf2,w,c
  6041   005E0A  6E0E               	movwf	fputs@c^0,c
  6042   005E0C  500E               	movf	fputs@c^0,w,c
  6043   005E0E  A4D8               	btfss	status,2,c
  6044   005E10  EF0C  F02F         	goto	u3421
  6045   005E14  EF0E  F02F         	goto	u3420
  6046   005E18                     u3421:
  6047   005E18  EFF3  F02E         	goto	l4049
  6048   005E1C                     u3420:
  6049   005E1C  0012               	return		;funcret
  6050   005E1E                     __end_of_fputs:
  6051                           	callstack 0
  6052                           
  6053 ;; *************** function _fputc *****************
  6054 ;; Defined at:
  6055 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;  c               2    0[COMRAM] int 
  6058 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6059 ;;		 -> sprintf@f(11), 
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;		None
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  2    0[COMRAM] int 
  6064 ;; Registers used:
  6065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6071 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6073 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6074 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6075 ;;Total ram usage:        9 bytes
  6076 ;; Hardware stack levels used: 1
  6077 ;; Hardware stack levels required when called: 2
  6078 ;; This function calls:
  6079 ;;		_putch
  6080 ;; This function is called by:
  6081 ;;		_pad
  6082 ;;		_vfpfcnvrt
  6083 ;;		_fputs
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           	psect	text16
  6088   004DA2                     __ptext16:
  6089                           	callstack 0
  6090   004DA2                     _fputc:
  6091                           	callstack 25
  6092   004DA2  5003               	movf	fputc@fp^0,w,c
  6093   004DA4  1004               	iorwf	(fputc@fp+1)^0,w,c
  6094   004DA6  B4D8               	btfsc	status,2,c
  6095   004DA8  EFD8  F026         	goto	u2961
  6096   004DAC  EFDA  F026         	goto	u2960
  6097   004DB0                     u2961:
  6098   004DB0  EFE3  F026         	goto	l3807
  6099   004DB4                     u2960:
  6100   004DB4  5003               	movf	fputc@fp^0,w,c
  6101   004DB6  1004               	iorwf	(fputc@fp+1)^0,w,c
  6102   004DB8  A4D8               	btfss	status,2,c
  6103   004DBA  EFE1  F026         	goto	u2971
  6104   004DBE  EFE3  F026         	goto	u2970
  6105   004DC2                     u2971:
  6106   004DC2  EFE8  F026         	goto	l3809
  6107   004DC6                     u2970:
  6108   004DC6                     l3807:
  6109   004DC6  5001               	movf	fputc@c^0,w,c
  6110   004DC8  ECA1  F030         	call	_putch
  6111   004DCC  EF35  F027         	goto	l1552
  6112   004DD0                     l3809:
  6113   004DD0  EE20 F009          	lfsr	2,9
  6114   004DD4  5003               	movf	fputc@fp^0,w,c
  6115   004DD6  26D9               	addwf	fsr2l,f,c
  6116   004DD8  5004               	movf	(fputc@fp+1)^0,w,c
  6117   004DDA  22DA               	addwfc	fsr2h,f,c
  6118   004DDC  50DE               	movf	postinc2,w,c
  6119   004DDE  10DE               	iorwf	postinc2,w,c
  6120   004DE0  B4D8               	btfsc	status,2,c
  6121   004DE2  EFF5  F026         	goto	u2981
  6122   004DE6  EFF7  F026         	goto	u2980
  6123   004DEA                     u2981:
  6124   004DEA  EF12  F027         	goto	l3813
  6125   004DEE                     u2980:
  6126   004DEE  EE20 F009          	lfsr	2,9
  6127   004DF2  5003               	movf	fputc@fp^0,w,c
  6128   004DF4  26D9               	addwf	fsr2l,f,c
  6129   004DF6  5004               	movf	(fputc@fp+1)^0,w,c
  6130   004DF8  22DA               	addwfc	fsr2h,f,c
  6131   004DFA  EE10 F003          	lfsr	1,3
  6132   004DFE  5003               	movf	fputc@fp^0,w,c
  6133   004E00  26E1               	addwf	fsr1l,f,c
  6134   004E02  5004               	movf	(fputc@fp+1)^0,w,c
  6135   004E04  22E2               	addwfc	fsr1h,f,c
  6136   004E06  50DE               	movf	postinc2,w,c
  6137   004E08  5CE6               	subwf	postinc1,w,c
  6138   004E0A  50E6               	movf	postinc1,w,c
  6139   004E0C  0A80               	xorlw	128
  6140   004E0E  6E09               	movwf	(??_fputc+4)^0,c
  6141   004E10  50DE               	movf	postinc2,w,c
  6142   004E12  0A80               	xorlw	128
  6143   004E14  5809               	subwfb	(??_fputc+4)^0,w,c
  6144   004E16  B0D8               	btfsc	status,0,c
  6145   004E18  EF10  F027         	goto	u2991
  6146   004E1C  EF12  F027         	goto	u2990
  6147   004E20                     u2991:
  6148   004E20  EF35  F027         	goto	l1552
  6149   004E24                     u2990:
  6150   004E24                     l3813:
  6151   004E24  EE20 F003          	lfsr	2,3
  6152   004E28  5003               	movf	fputc@fp^0,w,c
  6153   004E2A  26D9               	addwf	fsr2l,f,c
  6154   004E2C  5004               	movf	(fputc@fp+1)^0,w,c
  6155   004E2E  22DA               	addwfc	fsr2h,f,c
  6156   004E30  CFDE F005          	movff	postinc2,??_fputc
  6157   004E34  CFDD F006          	movff	postdec2,??_fputc+1
  6158   004E38  C003  FFD9         	movff	fputc@fp,fsr2l
  6159   004E3C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6160   004E40  CFDE F007          	movff	postinc2,??_fputc+2
  6161   004E44  CFDD F008          	movff	postdec2,??_fputc+3
  6162   004E48  5005               	movf	??_fputc^0,w,c
  6163   004E4A  2407               	addwf	(??_fputc+2)^0,w,c
  6164   004E4C  6ED9               	movwf	fsr2l,c
  6165   004E4E  5006               	movf	(??_fputc+1)^0,w,c
  6166   004E50  2008               	addwfc	(??_fputc+3)^0,w,c
  6167   004E52  6EDA               	movwf	fsr2h,c
  6168   004E54  C001  FFDF         	movff	fputc@c,indf2
  6169   004E58  EE20 F003          	lfsr	2,3
  6170   004E5C  5003               	movf	fputc@fp^0,w,c
  6171   004E5E  26D9               	addwf	fsr2l,f,c
  6172   004E60  5004               	movf	(fputc@fp+1)^0,w,c
  6173   004E62  22DA               	addwfc	fsr2h,f,c
  6174   004E64  2ADE               	incf	postinc2,f,c
  6175   004E66  0E00               	movlw	0
  6176   004E68  22DD               	addwfc	postdec2,f,c
  6177   004E6A                     l1552:
  6178   004E6A  0012               	return		;funcret
  6179   004E6C                     __end_of_fputc:
  6180                           	callstack 0
  6181                           
  6182 ;; *************** function _putch *****************
  6183 ;; Defined at:
  6184 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;  c               1    wreg     unsigned char 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  c               1    0[COMRAM] unsigned char 
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  1    wreg      void 
  6191 ;; Registers used:
  6192 ;;		wreg
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6202 ;;Total ram usage:        0 bytes
  6203 ;; Hardware stack levels used: 1
  6204 ;; Hardware stack levels required when called: 1
  6205 ;; This function calls:
  6206 ;;		Nothing
  6207 ;; This function is called by:
  6208 ;;		_fputc
  6209 ;; This function uses a non-reentrant model
  6210 ;;
  6211                           
  6212                           	psect	text17
  6213   006142                     __ptext17:
  6214                           	callstack 0
  6215   006142                     _putch:
  6216                           	callstack 25
  6217   006142  0012               	return		;funcret
  6218   006144                     __end_of_putch:
  6219                           	callstack 0
  6220                           
  6221 ;; *************** function _abs *****************
  6222 ;; Defined at:
  6223 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  a               2   18[COMRAM] int 
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;		None
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  2   18[COMRAM] int 
  6230 ;; Registers used:
  6231 ;;		wreg, status,2, status,0
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6239 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6240 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6241 ;;Total ram usage:        4 bytes
  6242 ;; Hardware stack levels used: 1
  6243 ;; Hardware stack levels required when called: 1
  6244 ;; This function calls:
  6245 ;;		Nothing
  6246 ;; This function is called by:
  6247 ;;		_dtoa
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text18
  6252   005E60                     __ptext18:
  6253                           	callstack 0
  6254   005E60                     _abs:
  6255                           	callstack 25
  6256   005E60  BE14               	btfsc	(abs@a+1)^0,7,c
  6257   005E62  EF3D  F02F         	goto	u4180
  6258   005E66  5014               	movf	(abs@a+1)^0,w,c
  6259   005E68  E106               	bnz	u4181
  6260   005E6A  0413               	decf	abs@a^0,w,c
  6261   005E6C  B0D8               	btfsc	status,0,c
  6262   005E6E  EF3B  F02F         	goto	u4181
  6263   005E72  EF3D  F02F         	goto	u4180
  6264   005E76                     u4181:
  6265   005E76  EF4B  F02F         	goto	l1511
  6266   005E7A                     u4180:
  6267   005E7A  C013  F015         	movff	abs@a,??_abs
  6268   005E7E  C014  F016         	movff	abs@a+1,??_abs+1
  6269   005E82  1E15               	comf	??_abs^0,f,c
  6270   005E84  1E16               	comf	(??_abs+1)^0,f,c
  6271   005E86  4A15               	infsnz	??_abs^0,f,c
  6272   005E88  2A16               	incf	(??_abs+1)^0,f,c
  6273   005E8A  C015  F013         	movff	??_abs,?_abs
  6274   005E8E  C016  F014         	movff	??_abs+1,?_abs+1
  6275   005E92  EF4F  F02F         	goto	l1514
  6276   005E96                     l1511:
  6277   005E96  C013  F013         	movff	abs@a,?_abs
  6278   005E9A  C014  F014         	movff	abs@a+1,?_abs+1
  6279   005E9E                     l1514:
  6280   005E9E  0012               	return		;funcret
  6281   005EA0                     __end_of_abs:
  6282                           	callstack 0
  6283                           
  6284 ;; *************** function ___aomod *****************
  6285 ;; Defined at:
  6286 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  dividend        8    0[COMRAM] long long 
  6289 ;;  divisor         8    8[COMRAM] long long 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  sign            1   17[COMRAM] unsigned char 
  6292 ;;  counter         1   16[COMRAM] unsigned char 
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  8    0[COMRAM] long long 
  6295 ;; Registers used:
  6296 ;;		wreg, status,2, status,0
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6302 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6305 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6306 ;;Total ram usage:       18 bytes
  6307 ;; Hardware stack levels used: 1
  6308 ;; Hardware stack levels required when called: 1
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_dtoa
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text19
  6317   004936                     __ptext19:
  6318                           	callstack 0
  6319   004936                     ___aomod:
  6320                           	callstack 25
  6321   004936  0E00               	movlw	0
  6322   004938  6E12               	movwf	___aomod@sign^0,c
  6323   00493A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6324   00493C  EFA4  F024         	goto	u3520
  6325   004940  EFA2  F024         	goto	u3521
  6326   004944                     u3521:
  6327   004944  EFB6  F024         	goto	l4123
  6328   004948                     u3520:
  6329   004948  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6330   00494A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6331   00494C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6332   00494E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6333   004950  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6334   004952  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6335   004954  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6336   004956  6C01               	negf	___aomod@dividend^0,c
  6337   004958  0E00               	movlw	0
  6338   00495A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6339   00495C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6340   00495E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6341   004960  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6342   004962  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6343   004964  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6344   004966  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6345   004968  0E01               	movlw	1
  6346   00496A  6E12               	movwf	___aomod@sign^0,c
  6347   00496C                     l4123:
  6348   00496C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6349   00496E  EFBD  F024         	goto	u3530
  6350   004972  EFBB  F024         	goto	u3531
  6351   004976                     u3531:
  6352   004976  EFCD  F024         	goto	l4127
  6353   00497A                     u3530:
  6354   00497A  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6355   00497C  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6356   00497E  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6357   004980  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6358   004982  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6359   004984  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6360   004986  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6361   004988  6C09               	negf	___aomod@divisor^0,c
  6362   00498A  0E00               	movlw	0
  6363   00498C  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6364   00498E  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6365   004990  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6366   004992  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6367   004994  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6368   004996  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6369   004998  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6370   00499A                     l4127:
  6371   00499A  5009               	movf	___aomod@divisor^0,w,c
  6372   00499C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6373   00499E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6374   0049A0  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6375   0049A2  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6376   0049A4  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6377   0049A6  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6378   0049A8  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6379   0049AA  B4D8               	btfsc	status,2,c
  6380   0049AC  EFDA  F024         	goto	u3541
  6381   0049B0  EFDC  F024         	goto	u3540
  6382   0049B4                     u3541:
  6383   0049B4  EF24  F025         	goto	l4143
  6384   0049B8                     u3540:
  6385   0049B8  0E01               	movlw	1
  6386   0049BA  6E11               	movwf	___aomod@counter^0,c
  6387   0049BC  EFEA  F024         	goto	l4133
  6388   0049C0                     l4131:
  6389   0049C0  90D8               	bcf	status,0,c
  6390   0049C2  3609               	rlcf	___aomod@divisor^0,f,c
  6391   0049C4  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6392   0049C6  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6393   0049C8  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6394   0049CA  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6395   0049CC  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6396   0049CE  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6397   0049D0  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6398   0049D2  2A11               	incf	___aomod@counter^0,f,c
  6399   0049D4                     l4133:
  6400   0049D4  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6401   0049D6  EFEF  F024         	goto	u3551
  6402   0049DA  EFF1  F024         	goto	u3550
  6403   0049DE                     u3551:
  6404   0049DE  EFE0  F024         	goto	l4131
  6405   0049E2                     u3550:
  6406   0049E2                     l4135:
  6407   0049E2  5009               	movf	___aomod@divisor^0,w,c
  6408   0049E4  5C01               	subwf	___aomod@dividend^0,w,c
  6409   0049E6  500A               	movf	(___aomod@divisor+1)^0,w,c
  6410   0049E8  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6411   0049EA  500B               	movf	(___aomod@divisor+2)^0,w,c
  6412   0049EC  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6413   0049EE  500C               	movf	(___aomod@divisor+3)^0,w,c
  6414   0049F0  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6415   0049F2  500D               	movf	(___aomod@divisor+4)^0,w,c
  6416   0049F4  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6417   0049F6  500E               	movf	(___aomod@divisor+5)^0,w,c
  6418   0049F8  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6419   0049FA  500F               	movf	(___aomod@divisor+6)^0,w,c
  6420   0049FC  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6421   0049FE  5010               	movf	(___aomod@divisor+7)^0,w,c
  6422   004A00  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6423   004A02  A0D8               	btfss	status,0,c
  6424   004A04  EF06  F025         	goto	u3561
  6425   004A08  EF08  F025         	goto	u3560
  6426   004A0C                     u3561:
  6427   004A0C  EF18  F025         	goto	l4139
  6428   004A10                     u3560:
  6429   004A10  5009               	movf	___aomod@divisor^0,w,c
  6430   004A12  5E01               	subwf	___aomod@dividend^0,f,c
  6431   004A14  500A               	movf	(___aomod@divisor+1)^0,w,c
  6432   004A16  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6433   004A18  500B               	movf	(___aomod@divisor+2)^0,w,c
  6434   004A1A  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6435   004A1C  500C               	movf	(___aomod@divisor+3)^0,w,c
  6436   004A1E  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6437   004A20  500D               	movf	(___aomod@divisor+4)^0,w,c
  6438   004A22  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6439   004A24  500E               	movf	(___aomod@divisor+5)^0,w,c
  6440   004A26  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6441   004A28  500F               	movf	(___aomod@divisor+6)^0,w,c
  6442   004A2A  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6443   004A2C  5010               	movf	(___aomod@divisor+7)^0,w,c
  6444   004A2E  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6445   004A30                     l4139:
  6446   004A30  90D8               	bcf	status,0,c
  6447   004A32  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6448   004A34  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6449   004A36  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6450   004A38  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6451   004A3A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6452   004A3C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6453   004A3E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6454   004A40  3209               	rrcf	___aomod@divisor^0,f,c
  6455   004A42  2E11               	decfsz	___aomod@counter^0,f,c
  6456   004A44  EFF1  F024         	goto	l4135
  6457   004A48                     l4143:
  6458   004A48  5012               	movf	___aomod@sign^0,w,c
  6459   004A4A  B4D8               	btfsc	status,2,c
  6460   004A4C  EF2A  F025         	goto	u3571
  6461   004A50  EF2C  F025         	goto	u3570
  6462   004A54                     u3571:
  6463   004A54  EF3C  F025         	goto	l4147
  6464   004A58                     u3570:
  6465   004A58  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6466   004A5A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6467   004A5C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6468   004A5E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6469   004A60  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6470   004A62  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6471   004A64  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6472   004A66  6C01               	negf	___aomod@dividend^0,c
  6473   004A68  0E00               	movlw	0
  6474   004A6A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6475   004A6C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6476   004A6E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6477   004A70  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6478   004A72  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6479   004A74  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6480   004A76  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6481   004A78                     l4147:
  6482   004A78  C001  F001         	movff	___aomod@dividend,?___aomod
  6483   004A7C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6484   004A80  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6485   004A84  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6486   004A88  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6487   004A8C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6488   004A90  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6489   004A94  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6490   004A98  0012               	return		;funcret
  6491   004A9A                     __end_of___aomod:
  6492                           	callstack 0
  6493                           
  6494 ;; *************** function ___aodiv *****************
  6495 ;; Defined at:
  6496 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  dividend        8    0[COMRAM] long long 
  6499 ;;  divisor         8    8[COMRAM] long long 
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;  quotient        8   18[COMRAM] long long 
  6502 ;;  sign            1   17[COMRAM] unsigned char 
  6503 ;;  counter         1   16[COMRAM] unsigned char 
  6504 ;; Return value:  Size  Location     Type
  6505 ;;                  8    0[COMRAM] long long 
  6506 ;; Registers used:
  6507 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6508 ;; Tracked objects:
  6509 ;;		On entry : 0/0
  6510 ;;		On exit  : 0/0
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6513 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6514 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6516 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6517 ;;Total ram usage:       26 bytes
  6518 ;; Hardware stack levels used: 1
  6519 ;; Hardware stack levels required when called: 1
  6520 ;; This function calls:
  6521 ;;		Nothing
  6522 ;; This function is called by:
  6523 ;;		_dtoa
  6524 ;; This function uses a non-reentrant model
  6525 ;;
  6526                           
  6527                           	psect	text20
  6528   004642                     __ptext20:
  6529                           	callstack 0
  6530   004642                     ___aodiv:
  6531                           	callstack 25
  6532   004642  0E00               	movlw	0
  6533   004644  6E12               	movwf	___aodiv@sign^0,c
  6534   004646  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6535   004648  EF2A  F023         	goto	u3450
  6536   00464C  EF28  F023         	goto	u3451
  6537   004650                     u3451:
  6538   004650  EF3C  F023         	goto	l4079
  6539   004654                     u3450:
  6540   004654  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6541   004656  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6542   004658  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6543   00465A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6544   00465C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6545   00465E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6546   004660  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6547   004662  6C09               	negf	___aodiv@divisor^0,c
  6548   004664  0E00               	movlw	0
  6549   004666  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6550   004668  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6551   00466A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6552   00466C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6553   00466E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6554   004670  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6555   004672  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6556   004674  0E01               	movlw	1
  6557   004676  6E12               	movwf	___aodiv@sign^0,c
  6558   004678                     l4079:
  6559   004678  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6560   00467A  EF43  F023         	goto	u3460
  6561   00467E  EF41  F023         	goto	u3461
  6562   004682                     u3461:
  6563   004682  EF55  F023         	goto	l4085
  6564   004686                     u3460:
  6565   004686  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6566   004688  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6567   00468A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6568   00468C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6569   00468E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6570   004690  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6571   004692  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6572   004694  6C01               	negf	___aodiv@dividend^0,c
  6573   004696  0E00               	movlw	0
  6574   004698  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6575   00469A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6576   00469C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6577   00469E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6578   0046A0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6579   0046A2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6580   0046A4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6581   0046A6  0E01               	movlw	1
  6582   0046A8  1A12               	xorwf	___aodiv@sign^0,f,c
  6583   0046AA                     l4085:
  6584   0046AA  EE20  F013         	lfsr	2,___aodiv@quotient
  6585   0046AE  0E07               	movlw	7
  6586   0046B0                     u3471:
  6587   0046B0  6ADE               	clrf	postinc2,c
  6588   0046B2  06E8               	decf	wreg,f,c
  6589   0046B4  E2FD               	bc	u3471
  6590   0046B6  5009               	movf	___aodiv@divisor^0,w,c
  6591   0046B8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6592   0046BA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6593   0046BC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6594   0046BE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6595   0046C0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6596   0046C2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6597   0046C4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6598   0046C6  B4D8               	btfsc	status,2,c
  6599   0046C8  EF68  F023         	goto	u3481
  6600   0046CC  EF6A  F023         	goto	u3480
  6601   0046D0                     u3481:
  6602   0046D0  EFBC  F023         	goto	l4107
  6603   0046D4                     u3480:
  6604   0046D4  0E01               	movlw	1
  6605   0046D6  6E11               	movwf	___aodiv@counter^0,c
  6606   0046D8  EF78  F023         	goto	l4093
  6607   0046DC                     l4091:
  6608   0046DC  90D8               	bcf	status,0,c
  6609   0046DE  3609               	rlcf	___aodiv@divisor^0,f,c
  6610   0046E0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6611   0046E2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6612   0046E4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6613   0046E6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6614   0046E8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6615   0046EA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6616   0046EC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6617   0046EE  2A11               	incf	___aodiv@counter^0,f,c
  6618   0046F0                     l4093:
  6619   0046F0  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6620   0046F2  EF7D  F023         	goto	u3491
  6621   0046F6  EF7F  F023         	goto	u3490
  6622   0046FA                     u3491:
  6623   0046FA  EF6E  F023         	goto	l4091
  6624   0046FE                     u3490:
  6625   0046FE                     l4095:
  6626   0046FE  90D8               	bcf	status,0,c
  6627   004700  3613               	rlcf	___aodiv@quotient^0,f,c
  6628   004702  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6629   004704  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6630   004706  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6631   004708  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6632   00470A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6633   00470C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6634   00470E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6635   004710  5009               	movf	___aodiv@divisor^0,w,c
  6636   004712  5C01               	subwf	___aodiv@dividend^0,w,c
  6637   004714  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6638   004716  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6639   004718  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6640   00471A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6641   00471C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6642   00471E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6643   004720  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6644   004722  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6645   004724  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6646   004726  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6647   004728  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6648   00472A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6649   00472C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6650   00472E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6651   004730  A0D8               	btfss	status,0,c
  6652   004732  EF9D  F023         	goto	u3501
  6653   004736  EF9F  F023         	goto	u3500
  6654   00473A                     u3501:
  6655   00473A  EFB0  F023         	goto	l4103
  6656   00473E                     u3500:
  6657   00473E  5009               	movf	___aodiv@divisor^0,w,c
  6658   004740  5E01               	subwf	___aodiv@dividend^0,f,c
  6659   004742  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6660   004744  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6661   004746  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6662   004748  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6663   00474A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6664   00474C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6665   00474E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6666   004750  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6667   004752  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6668   004754  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6669   004756  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6670   004758  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6671   00475A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6672   00475C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6673   00475E  8013               	bsf	___aodiv@quotient^0,0,c
  6674   004760                     l4103:
  6675   004760  90D8               	bcf	status,0,c
  6676   004762  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6677   004764  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6678   004766  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6679   004768  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6680   00476A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6681   00476C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6682   00476E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6683   004770  3209               	rrcf	___aodiv@divisor^0,f,c
  6684   004772  2E11               	decfsz	___aodiv@counter^0,f,c
  6685   004774  EF7F  F023         	goto	l4095
  6686   004778                     l4107:
  6687   004778  5012               	movf	___aodiv@sign^0,w,c
  6688   00477A  B4D8               	btfsc	status,2,c
  6689   00477C  EFC2  F023         	goto	u3511
  6690   004780  EFC4  F023         	goto	u3510
  6691   004784                     u3511:
  6692   004784  EFD4  F023         	goto	l4111
  6693   004788                     u3510:
  6694   004788  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6695   00478A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6696   00478C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6697   00478E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6698   004790  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6699   004792  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6700   004794  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6701   004796  6C13               	negf	___aodiv@quotient^0,c
  6702   004798  0E00               	movlw	0
  6703   00479A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6704   00479C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6705   00479E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6706   0047A0  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6707   0047A2  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6708   0047A4  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6709   0047A6  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6710   0047A8                     l4111:
  6711   0047A8  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6712   0047AC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6713   0047B0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6714   0047B4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6715   0047B8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6716   0047BC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6717   0047C0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6718   0047C4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6719   0047C8  0012               	return		;funcret
  6720   0047CA                     __end_of___aodiv:
  6721                           	callstack 0
  6722                           
  6723 ;; *************** function _sendStringSerial4 *****************
  6724 ;; Defined at:
  6725 ;;		line 33 in file "serial.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;  string          2    1[COMRAM] PTR unsigned char 
  6728 ;;		 -> main@buf(100), 
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;		None
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  1    wreg      void 
  6733 ;; Registers used:
  6734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6743 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6744 ;;Total ram usage:        2 bytes
  6745 ;; Hardware stack levels used: 1
  6746 ;; Hardware stack levels required when called: 2
  6747 ;; This function calls:
  6748 ;;		_sendCharSerial4
  6749 ;; This function is called by:
  6750 ;;		_main
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           	psect	text21
  6755   005FC2                     __ptext21:
  6756                           	callstack 0
  6757   005FC2                     _sendStringSerial4:
  6758                           	callstack 28
  6759   005FC2                     
  6760                           ;serial.c: 34:     while (*string!=0){
  6761   005FC2  EFEC  F02F         	goto	l5487
  6762   005FC6                     l5483:
  6763                           
  6764                           ;serial.c: 35:         sendCharSerial4(*string++);
  6765   005FC6  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6766   005FCA  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6767   005FCE  50DF               	movf	indf2,w,c
  6768   005FD0  EC77  F030         	call	_sendCharSerial4
  6769   005FD4  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6770   005FD6  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6771   005FD8                     l5487:
  6772                           
  6773                           ;serial.c: 34:     while (*string!=0){
  6774   005FD8  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6775   005FDC  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6776   005FE0  50DF               	movf	indf2,w,c
  6777   005FE2  A4D8               	btfss	status,2,c
  6778   005FE4  EFF6  F02F         	goto	u5481
  6779   005FE8  EFF8  F02F         	goto	u5480
  6780   005FEC                     u5481:
  6781   005FEC  EFE3  F02F         	goto	l5483
  6782   005FF0                     u5480:
  6783   005FF0  0012               	return		;funcret
  6784   005FF2                     __end_of_sendStringSerial4:
  6785                           	callstack 0
  6786                           
  6787 ;; *************** function _sendCharSerial4 *****************
  6788 ;; Defined at:
  6789 ;;		line 26 in file "serial.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;  charToSend      1    wreg     unsigned char 
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;  charToSend      1    0[COMRAM] unsigned char 
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  1    wreg      void 
  6796 ;; Registers used:
  6797 ;;		wreg
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6806 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6807 ;;Total ram usage:        1 bytes
  6808 ;; Hardware stack levels used: 1
  6809 ;; Hardware stack levels required when called: 1
  6810 ;; This function calls:
  6811 ;;		Nothing
  6812 ;; This function is called by:
  6813 ;;		_sendStringSerial4
  6814 ;; This function uses a non-reentrant model
  6815 ;;
  6816                           
  6817                           	psect	text22
  6818   0060EE                     __ptext22:
  6819                           	callstack 0
  6820   0060EE                     _sendCharSerial4:
  6821                           	callstack 28
  6822                           
  6823                           ;incstack = 0
  6824                           ;sendCharSerial4@charToSend stored from wreg
  6825   0060EE  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6826   0060F0                     l205:
  6827   0060F0  010E               	movlb	14	; () banked
  6828   0060F2  A537               	btfss	55,2,b	;volatile
  6829   0060F4  EF7E  F030         	goto	u5011
  6830   0060F8  EF80  F030         	goto	u5010
  6831   0060FC                     u5011:
  6832   0060FC  EF78  F030         	goto	l205
  6833   006100                     u5010:
  6834   006100                     
  6835                           ; BSR set to: 14
  6836                           ;serial.c: 28:     TX4REG = charToSend;
  6837   006100  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6838   006104                     
  6839                           ; BSR set to: 14
  6840   006104  0012               	return		;funcret
  6841   006106                     __end_of_sendCharSerial4:
  6842                           	callstack 0
  6843                           
  6844 ;; *************** function _readColours *****************
  6845 ;; Defined at:
  6846 ;;		line 105 in file "color.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  vals            2   11[COMRAM] PTR struct RGB
  6849 ;;		 -> vals(8), 
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;		None
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  1    wreg      void 
  6854 ;; Registers used:
  6855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6864 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6865 ;;Total ram usage:        2 bytes
  6866 ;; Hardware stack levels used: 1
  6867 ;; Hardware stack levels required when called: 4
  6868 ;; This function calls:
  6869 ;;		_color_read_Blue
  6870 ;;		_color_read_Green
  6871 ;;		_color_read_Red
  6872 ;;		_color_read_lum
  6873 ;; This function is called by:
  6874 ;;		_main
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text23
  6879   0056CE                     __ptext23:
  6880                           	callstack 0
  6881   0056CE                     _readColours:
  6882                           	callstack 26
  6883   0056CE                     
  6884                           ;color.c: 107:     vals ->R = color_read_Red();
  6885   0056CE  ECBB  F02D         	call	_color_read_Red	;wreg free
  6886   0056D2  C00C  FFD9         	movff	readColours@vals,fsr2l
  6887   0056D6  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6888   0056DA  C005  FFDE         	movff	?_color_read_Red,postinc2
  6889   0056DE  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6890                           
  6891                           ;color.c: 108:     vals ->B = color_read_Blue();
  6892   0056E2  EC0B  F02E         	call	_color_read_Blue	;wreg free
  6893   0056E6  EE20 F004          	lfsr	2,4
  6894   0056EA  500C               	movf	readColours@vals^0,w,c
  6895   0056EC  26D9               	addwf	fsr2l,f,c
  6896   0056EE  500D               	movf	(readColours@vals+1)^0,w,c
  6897   0056F0  22DA               	addwfc	fsr2h,f,c
  6898   0056F2  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6899   0056F6  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6900                           
  6901                           ;color.c: 109:     vals ->G = color_read_Green();
  6902   0056FA  ECE3  F02D         	call	_color_read_Green	;wreg free
  6903   0056FE  EE20 F002          	lfsr	2,2
  6904   005702  500C               	movf	readColours@vals^0,w,c
  6905   005704  26D9               	addwf	fsr2l,f,c
  6906   005706  500D               	movf	(readColours@vals+1)^0,w,c
  6907   005708  22DA               	addwfc	fsr2h,f,c
  6908   00570A  C005  FFDE         	movff	?_color_read_Green,postinc2
  6909   00570E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6910                           
  6911                           ;color.c: 110:     vals ->L = color_read_lum();
  6912   005712  EC93  F02D         	call	_color_read_lum	;wreg free
  6913   005716  EE20 F006          	lfsr	2,6
  6914   00571A  500C               	movf	readColours@vals^0,w,c
  6915   00571C  26D9               	addwf	fsr2l,f,c
  6916   00571E  500D               	movf	(readColours@vals+1)^0,w,c
  6917   005720  22DA               	addwfc	fsr2h,f,c
  6918   005722  C005  FFDE         	movff	?_color_read_lum,postinc2
  6919   005726  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6920   00572A  0012               	return		;funcret
  6921   00572C                     __end_of_readColours:
  6922                           	callstack 0
  6923                           
  6924 ;; *************** function _color_read_lum *****************
  6925 ;; Defined at:
  6926 ;;		line 49 in file "color.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;		None
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;  tmp             2    9[COMRAM] unsigned int 
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  2    4[COMRAM] unsigned int 
  6933 ;; Registers used:
  6934 ;;		wreg, status,2, status,0, cstack
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6941 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6942 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6943 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6944 ;;Total ram usage:        7 bytes
  6945 ;; Hardware stack levels used: 1
  6946 ;; Hardware stack levels required when called: 3
  6947 ;; This function calls:
  6948 ;;		_I2C_2_Master_Read
  6949 ;;		_I2C_2_Master_RepStart
  6950 ;;		_I2C_2_Master_Start
  6951 ;;		_I2C_2_Master_Stop
  6952 ;;		_I2C_2_Master_Write
  6953 ;; This function is called by:
  6954 ;;		_readColours
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           	psect	text24
  6959   005B26                     __ptext24:
  6960                           	callstack 0
  6961   005B26                     _color_read_lum:
  6962                           	callstack 26
  6963   005B26                     
  6964                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6965   005B26  EC99  F030         	call	_I2C_2_Master_Start	;wreg free
  6966                           
  6967                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6968   005B2A  0E52               	movlw	82
  6969   005B2C  EC83  F030         	call	_I2C_2_Master_Write
  6970                           
  6971                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  6972   005B30  0EB4               	movlw	180
  6973   005B32  EC83  F030         	call	_I2C_2_Master_Write
  6974                           
  6975                           ;color.c: 55:  I2C_2_Master_RepStart();
  6976   005B36  EC8F  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6977                           
  6978                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6979   005B3A  0E53               	movlw	83
  6980   005B3C  EC83  F030         	call	_I2C_2_Master_Write
  6981                           
  6982                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6983   005B40  0E01               	movlw	1
  6984   005B42  EC0F  F02F         	call	_I2C_2_Master_Read
  6985   005B46  6E07               	movwf	??_color_read_lum^0,c
  6986   005B48  5007               	movf	??_color_read_lum^0,w,c
  6987   005B4A  6E0A               	movwf	color_read_lum@tmp^0,c
  6988   005B4C  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6989                           
  6990                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6991   005B4E  0E00               	movlw	0
  6992   005B50  EC0F  F02F         	call	_I2C_2_Master_Read
  6993   005B54  6E07               	movwf	??_color_read_lum^0,c
  6994   005B56  5007               	movf	??_color_read_lum^0,w,c
  6995   005B58  6E09               	movwf	(??_color_read_lum+2)^0,c
  6996   005B5A  6A08               	clrf	(??_color_read_lum+1)^0,c
  6997   005B5C  500A               	movf	color_read_lum@tmp^0,w,c
  6998   005B5E  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6999   005B60  6E0A               	movwf	color_read_lum@tmp^0,c
  7000   005B62  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  7001   005B64  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  7002   005B66  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  7003                           
  7004                           ;color.c: 59:  I2C_2_Master_Stop();
  7005   005B68  EC94  F030         	call	_I2C_2_Master_Stop	;wreg free
  7006   005B6C                     
  7007                           ;color.c: 60:  return tmp;
  7008   005B6C  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  7009   005B70  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  7010   005B74  0012               	return		;funcret
  7011   005B76                     __end_of_color_read_lum:
  7012                           	callstack 0
  7013                           
  7014 ;; *************** function _color_read_Red *****************
  7015 ;; Defined at:
  7016 ;;		line 63 in file "color.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;		None
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  tmp             2    9[COMRAM] unsigned int 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  2    4[COMRAM] unsigned int 
  7023 ;; Registers used:
  7024 ;;		wreg, status,2, status,0, cstack
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7031 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7032 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7033 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7034 ;;Total ram usage:        7 bytes
  7035 ;; Hardware stack levels used: 1
  7036 ;; Hardware stack levels required when called: 3
  7037 ;; This function calls:
  7038 ;;		_I2C_2_Master_Read
  7039 ;;		_I2C_2_Master_RepStart
  7040 ;;		_I2C_2_Master_Start
  7041 ;;		_I2C_2_Master_Stop
  7042 ;;		_I2C_2_Master_Write
  7043 ;; This function is called by:
  7044 ;;		_readColours
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text25
  7049   005B76                     __ptext25:
  7050                           	callstack 0
  7051   005B76                     _color_read_Red:
  7052                           	callstack 26
  7053   005B76                     
  7054                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  7055   005B76  EC99  F030         	call	_I2C_2_Master_Start	;wreg free
  7056                           
  7057                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  7058   005B7A  0E52               	movlw	82
  7059   005B7C  EC83  F030         	call	_I2C_2_Master_Write
  7060                           
  7061                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  7062   005B80  0EB6               	movlw	182
  7063   005B82  EC83  F030         	call	_I2C_2_Master_Write
  7064                           
  7065                           ;color.c: 69:  I2C_2_Master_RepStart();
  7066   005B86  EC8F  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7067                           
  7068                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  7069   005B8A  0E53               	movlw	83
  7070   005B8C  EC83  F030         	call	_I2C_2_Master_Write
  7071                           
  7072                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  7073   005B90  0E01               	movlw	1
  7074   005B92  EC0F  F02F         	call	_I2C_2_Master_Read
  7075   005B96  6E07               	movwf	??_color_read_Red^0,c
  7076   005B98  5007               	movf	??_color_read_Red^0,w,c
  7077   005B9A  6E0A               	movwf	color_read_Red@tmp^0,c
  7078   005B9C  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7079                           
  7080                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7081   005B9E  0E00               	movlw	0
  7082   005BA0  EC0F  F02F         	call	_I2C_2_Master_Read
  7083   005BA4  6E07               	movwf	??_color_read_Red^0,c
  7084   005BA6  5007               	movf	??_color_read_Red^0,w,c
  7085   005BA8  6E09               	movwf	(??_color_read_Red+2)^0,c
  7086   005BAA  6A08               	clrf	(??_color_read_Red+1)^0,c
  7087   005BAC  500A               	movf	color_read_Red@tmp^0,w,c
  7088   005BAE  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7089   005BB0  6E0A               	movwf	color_read_Red@tmp^0,c
  7090   005BB2  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7091   005BB4  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7092   005BB6  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7093                           
  7094                           ;color.c: 73:  I2C_2_Master_Stop();
  7095   005BB8  EC94  F030         	call	_I2C_2_Master_Stop	;wreg free
  7096   005BBC                     
  7097                           ;color.c: 74:  return tmp;
  7098   005BBC  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7099   005BC0  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7100   005BC4  0012               	return		;funcret
  7101   005BC6                     __end_of_color_read_Red:
  7102                           	callstack 0
  7103                           
  7104 ;; *************** function _color_read_Green *****************
  7105 ;; Defined at:
  7106 ;;		line 76 in file "color.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;		None
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;  tmp             2    9[COMRAM] unsigned int 
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  2    4[COMRAM] unsigned int 
  7113 ;; Registers used:
  7114 ;;		wreg, status,2, status,0, cstack
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7121 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7122 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7123 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7124 ;;Total ram usage:        7 bytes
  7125 ;; Hardware stack levels used: 1
  7126 ;; Hardware stack levels required when called: 3
  7127 ;; This function calls:
  7128 ;;		_I2C_2_Master_Read
  7129 ;;		_I2C_2_Master_RepStart
  7130 ;;		_I2C_2_Master_Start
  7131 ;;		_I2C_2_Master_Stop
  7132 ;;		_I2C_2_Master_Write
  7133 ;; This function is called by:
  7134 ;;		_readColours
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text26
  7139   005BC6                     __ptext26:
  7140                           	callstack 0
  7141   005BC6                     _color_read_Green:
  7142                           	callstack 26
  7143   005BC6                     
  7144                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  7145   005BC6  EC99  F030         	call	_I2C_2_Master_Start	;wreg free
  7146                           
  7147                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  7148   005BCA  0E52               	movlw	82
  7149   005BCC  EC83  F030         	call	_I2C_2_Master_Write
  7150                           
  7151                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  7152   005BD0  0EB8               	movlw	184
  7153   005BD2  EC83  F030         	call	_I2C_2_Master_Write
  7154                           
  7155                           ;color.c: 82:  I2C_2_Master_RepStart();
  7156   005BD6  EC8F  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7157                           
  7158                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  7159   005BDA  0E53               	movlw	83
  7160   005BDC  EC83  F030         	call	_I2C_2_Master_Write
  7161                           
  7162                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  7163   005BE0  0E01               	movlw	1
  7164   005BE2  EC0F  F02F         	call	_I2C_2_Master_Read
  7165   005BE6  6E07               	movwf	??_color_read_Green^0,c
  7166   005BE8  5007               	movf	??_color_read_Green^0,w,c
  7167   005BEA  6E0A               	movwf	color_read_Green@tmp^0,c
  7168   005BEC  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7169                           
  7170                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7171   005BEE  0E00               	movlw	0
  7172   005BF0  EC0F  F02F         	call	_I2C_2_Master_Read
  7173   005BF4  6E07               	movwf	??_color_read_Green^0,c
  7174   005BF6  5007               	movf	??_color_read_Green^0,w,c
  7175   005BF8  6E09               	movwf	(??_color_read_Green+2)^0,c
  7176   005BFA  6A08               	clrf	(??_color_read_Green+1)^0,c
  7177   005BFC  500A               	movf	color_read_Green@tmp^0,w,c
  7178   005BFE  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7179   005C00  6E0A               	movwf	color_read_Green@tmp^0,c
  7180   005C02  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7181   005C04  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7182   005C06  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7183                           
  7184                           ;color.c: 86:  I2C_2_Master_Stop();
  7185   005C08  EC94  F030         	call	_I2C_2_Master_Stop	;wreg free
  7186   005C0C                     
  7187                           ;color.c: 87:  return tmp;
  7188   005C0C  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7189   005C10  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7190   005C14  0012               	return		;funcret
  7191   005C16                     __end_of_color_read_Green:
  7192                           	callstack 0
  7193                           
  7194 ;; *************** function _color_read_Blue *****************
  7195 ;; Defined at:
  7196 ;;		line 90 in file "color.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;		None
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;  tmp             2    9[COMRAM] unsigned int 
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  2    4[COMRAM] unsigned int 
  7203 ;; Registers used:
  7204 ;;		wreg, status,2, status,0, cstack
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7211 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7212 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7213 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7214 ;;Total ram usage:        7 bytes
  7215 ;; Hardware stack levels used: 1
  7216 ;; Hardware stack levels required when called: 3
  7217 ;; This function calls:
  7218 ;;		_I2C_2_Master_Read
  7219 ;;		_I2C_2_Master_RepStart
  7220 ;;		_I2C_2_Master_Start
  7221 ;;		_I2C_2_Master_Stop
  7222 ;;		_I2C_2_Master_Write
  7223 ;; This function is called by:
  7224 ;;		_readColours
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228                           	psect	text27
  7229   005C16                     __ptext27:
  7230                           	callstack 0
  7231   005C16                     _color_read_Blue:
  7232                           	callstack 26
  7233   005C16                     
  7234                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  7235   005C16  EC99  F030         	call	_I2C_2_Master_Start	;wreg free
  7236                           
  7237                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  7238   005C1A  0E52               	movlw	82
  7239   005C1C  EC83  F030         	call	_I2C_2_Master_Write
  7240                           
  7241                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  7242   005C20  0EBA               	movlw	186
  7243   005C22  EC83  F030         	call	_I2C_2_Master_Write
  7244                           
  7245                           ;color.c: 96:  I2C_2_Master_RepStart();
  7246   005C26  EC8F  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7247                           
  7248                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  7249   005C2A  0E53               	movlw	83
  7250   005C2C  EC83  F030         	call	_I2C_2_Master_Write
  7251                           
  7252                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  7253   005C30  0E01               	movlw	1
  7254   005C32  EC0F  F02F         	call	_I2C_2_Master_Read
  7255   005C36  6E07               	movwf	??_color_read_Blue^0,c
  7256   005C38  5007               	movf	??_color_read_Blue^0,w,c
  7257   005C3A  6E0A               	movwf	color_read_Blue@tmp^0,c
  7258   005C3C  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7259                           
  7260                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7261   005C3E  0E00               	movlw	0
  7262   005C40  EC0F  F02F         	call	_I2C_2_Master_Read
  7263   005C44  6E07               	movwf	??_color_read_Blue^0,c
  7264   005C46  5007               	movf	??_color_read_Blue^0,w,c
  7265   005C48  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7266   005C4A  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7267   005C4C  500A               	movf	color_read_Blue@tmp^0,w,c
  7268   005C4E  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7269   005C50  6E0A               	movwf	color_read_Blue@tmp^0,c
  7270   005C52  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7271   005C54  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7272   005C56  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7273                           
  7274                           ;color.c: 100:  I2C_2_Master_Stop();
  7275   005C58  EC94  F030         	call	_I2C_2_Master_Stop	;wreg free
  7276   005C5C                     
  7277                           ;color.c: 101:  return tmp;
  7278   005C5C  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7279   005C60  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7280   005C64  0012               	return		;funcret
  7281   005C66                     __end_of_color_read_Blue:
  7282                           	callstack 0
  7283                           
  7284 ;; *************** function _I2C_2_Master_RepStart *****************
  7285 ;; Defined at:
  7286 ;;		line 33 in file "i2c.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;		None
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  1    wreg      void 
  7293 ;; Registers used:
  7294 ;;		wreg, status,2, status,0, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7304 ;;Total ram usage:        0 bytes
  7305 ;; Hardware stack levels used: 1
  7306 ;; Hardware stack levels required when called: 2
  7307 ;; This function calls:
  7308 ;;		_I2C_2_Master_Idle
  7309 ;; This function is called by:
  7310 ;;		_color_read_lum
  7311 ;;		_color_read_Red
  7312 ;;		_color_read_Green
  7313 ;;		_color_read_Blue
  7314 ;; This function uses a non-reentrant model
  7315 ;;
  7316                           
  7317                           	psect	text28
  7318   00611E                     __ptext28:
  7319                           	callstack 0
  7320   00611E                     _I2C_2_Master_RepStart:
  7321                           	callstack 26
  7322   00611E                     
  7323                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7324   00611E  EC0E  F030         	call	_I2C_2_Master_Idle	;wreg free
  7325   006122                     
  7326                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7327   006122  010E               	movlb	14	; () banked
  7328   006124  83DA               	bsf	218,1,b	;volatile
  7329   006126                     
  7330                           ; BSR set to: 14
  7331   006126  0012               	return		;funcret
  7332   006128                     __end_of_I2C_2_Master_RepStart:
  7333                           	callstack 0
  7334                           
  7335 ;; *************** function _I2C_2_Master_Read *****************
  7336 ;; Defined at:
  7337 ;;		line 51 in file "i2c.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;  ack             1    wreg     unsigned char 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  ack             1    2[COMRAM] unsigned char 
  7342 ;;  tmp             1    3[COMRAM] unsigned char 
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  1    wreg      unsigned char 
  7345 ;; Registers used:
  7346 ;;		wreg, status,2, status,0, cstack
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7354 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7355 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7356 ;;Total ram usage:        3 bytes
  7357 ;; Hardware stack levels used: 1
  7358 ;; Hardware stack levels required when called: 2
  7359 ;; This function calls:
  7360 ;;		_I2C_2_Master_Idle
  7361 ;; This function is called by:
  7362 ;;		_color_read_lum
  7363 ;;		_color_read_Red
  7364 ;;		_color_read_Green
  7365 ;;		_color_read_Blue
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           	psect	text29
  7370   005E1E                     __ptext29:
  7371                           	callstack 0
  7372   005E1E                     _I2C_2_Master_Read:
  7373                           	callstack 26
  7374                           
  7375                           ; BSR set to: 14
  7376                           ;incstack = 0
  7377                           ;I2C_2_Master_Read@ack stored from wreg
  7378   005E1E  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7379   005E20                     
  7380                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7381   005E20  EC0E  F030         	call	_I2C_2_Master_Idle	;wreg free
  7382   005E24                     
  7383                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7384   005E24  010E               	movlb	14	; () banked
  7385   005E26  87DA               	bsf	218,3,b	;volatile
  7386                           
  7387                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7388   005E28  EC0E  F030         	call	_I2C_2_Master_Idle	;wreg free
  7389   005E2C                     
  7390                           ;i2c.c: 57:   tmp = SSP2BUF;
  7391   005E2C  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7392                           
  7393                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7394   005E30  EC0E  F030         	call	_I2C_2_Master_Idle	;wreg free
  7395   005E34                     
  7396                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7397   005E34  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7398   005E36  B4D8               	btfsc	status,2,c
  7399   005E38  EF20  F02F         	goto	u4941
  7400   005E3C  EF24  F02F         	goto	u4940
  7401   005E40                     u4941:
  7402   005E40  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7403   005E42  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7404   005E44  EF25  F02F         	goto	u4958
  7405   005E48                     u4940:
  7406   005E48  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7407   005E4A                     u4958:
  7408   005E4A  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7409   005E4C  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7410   005E4E  010E               	movlb	14	; () banked
  7411   005E50  51DA               	movf	218,w,b	;volatile
  7412   005E52  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7413   005E54  0BDF               	andlw	-33
  7414   005E56  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7415   005E58  6FDA               	movwf	218,b	;volatile
  7416   005E5A                     
  7417                           ; BSR set to: 14
  7418                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7419   005E5A  89DA               	bsf	218,4,b	;volatile
  7420   005E5C                     
  7421                           ; BSR set to: 14
  7422                           ;i2c.c: 61:   return tmp;
  7423   005E5C  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7424   005E5E                     
  7425                           ; BSR set to: 14
  7426   005E5E  0012               	return		;funcret
  7427   005E60                     __end_of_I2C_2_Master_Read:
  7428                           	callstack 0
  7429                           
  7430 ;; *************** function _initUSART4 *****************
  7431 ;; Defined at:
  7432 ;;		line 4 in file "serial.c"
  7433 ;; Parameters:    Size  Location     Type
  7434 ;;		None
  7435 ;; Auto vars:     Size  Location     Type
  7436 ;;		None
  7437 ;; Return value:  Size  Location     Type
  7438 ;;                  1    wreg      void 
  7439 ;; Registers used:
  7440 ;;		wreg, status,2
  7441 ;; Tracked objects:
  7442 ;;		On entry : 0/0
  7443 ;;		On exit  : 0/0
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7450 ;;Total ram usage:        0 bytes
  7451 ;; Hardware stack levels used: 1
  7452 ;; Hardware stack levels required when called: 1
  7453 ;; This function calls:
  7454 ;;		Nothing
  7455 ;; This function is called by:
  7456 ;;		_main
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460                           	psect	text30
  7461   0060D0                     __ptext30:
  7462                           	callstack 0
  7463   0060D0                     _initUSART4:
  7464                           	callstack 29
  7465   0060D0                     
  7466                           ;serial.c: 5:     RC0PPS = 0x12;
  7467   0060D0  0E12               	movlw	18
  7468   0060D2  010E               	movlb	14	; () banked
  7469   0060D4  6F62               	movwf	98,b	;volatile
  7470                           
  7471                           ;serial.c: 6:     RX4PPS = 0x11;
  7472   0060D6  0E11               	movlw	17
  7473   0060D8  6F15               	movwf	21,b	;volatile
  7474   0060DA                     
  7475                           ; BSR set to: 14
  7476                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7477   0060DA  97E9               	bcf	233,3,b	;volatile
  7478   0060DC                     
  7479                           ; BSR set to: 14
  7480                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7481   0060DC  95E8               	bcf	232,2,b	;volatile
  7482                           
  7483                           ;serial.c: 9:     SP4BRGL = 51;
  7484   0060DE  0E33               	movlw	51
  7485   0060E0  6FE5               	movwf	229,b	;volatile
  7486                           
  7487                           ;serial.c: 10:     SP4BRGH = 0;
  7488   0060E2  0E00               	movlw	0
  7489   0060E4  6FE6               	movwf	230,b	;volatile
  7490   0060E6                     
  7491                           ; BSR set to: 14
  7492                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7493   0060E6  89E7               	bsf	231,4,b	;volatile
  7494   0060E8                     
  7495                           ; BSR set to: 14
  7496                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7497   0060E8  8BE8               	bsf	232,5,b	;volatile
  7498   0060EA                     
  7499                           ; BSR set to: 14
  7500                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7501   0060EA  8FE7               	bsf	231,7,b	;volatile
  7502   0060EC                     
  7503                           ; BSR set to: 14
  7504   0060EC  0012               	return		;funcret
  7505   0060EE                     __end_of_initUSART4:
  7506                           	callstack 0
  7507                           
  7508 ;; *************** function _initDCmotorsPWM *****************
  7509 ;; Defined at:
  7510 ;;		line 6 in file "dc_motor.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;		None
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  1    wreg      void 
  7517 ;; Registers used:
  7518 ;;		wreg, status,2
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7528 ;;Total ram usage:        2 bytes
  7529 ;; Hardware stack levels used: 1
  7530 ;; Hardware stack levels required when called: 1
  7531 ;; This function calls:
  7532 ;;		Nothing
  7533 ;; This function is called by:
  7534 ;;		_main
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text31
  7539   0053A4                     __ptext31:
  7540                           	callstack 0
  7541   0053A4                     _initDCmotorsPWM:
  7542                           	callstack 29
  7543   0053A4                     
  7544                           ;dc_motor.c: 10:     RE2PPS=0x05;
  7545   0053A4  0E05               	movlw	5
  7546   0053A6  010E               	movlb	14	; () banked
  7547   0053A8  6F74               	movwf	116,b	;volatile
  7548                           
  7549                           ;dc_motor.c: 11:     RE4PPS=0x06;
  7550   0053AA  0E06               	movlw	6
  7551   0053AC  6F76               	movwf	118,b	;volatile
  7552                           
  7553                           ;dc_motor.c: 12:     RC7PPS=0x07;
  7554   0053AE  0E07               	movlw	7
  7555   0053B0  6F69               	movwf	105,b	;volatile
  7556                           
  7557                           ;dc_motor.c: 13:     RG6PPS=0x08;
  7558   0053B2  0E08               	movlw	8
  7559   0053B4  6F88               	movwf	136,b	;volatile
  7560   0053B6                     
  7561                           ; BSR set to: 14
  7562                           ;dc_motor.c: 16:     TRISEbits.TRISE2=0;
  7563   0053B6  9485               	bcf	133,2,c	;volatile
  7564   0053B8                     
  7565                           ; BSR set to: 14
  7566                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  7567   0053B8  9885               	bcf	133,4,c	;volatile
  7568   0053BA                     
  7569                           ; BSR set to: 14
  7570                           ;dc_motor.c: 18:     TRISCbits.TRISC7=0;
  7571   0053BA  9E83               	bcf	131,7,c	;volatile
  7572   0053BC                     
  7573                           ; BSR set to: 14
  7574                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  7575   0053BC  9C87               	bcf	135,6,c	;volatile
  7576                           
  7577                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  7578   0053BE  50BD               	movf	189,w,c	;volatile
  7579   0053C0  0B8F               	andlw	-113
  7580   0053C2  0930               	iorlw	48
  7581   0053C4  6EBD               	movwf	189,c	;volatile
  7582                           
  7583                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  7584   0053C6  0EE0               	movlw	-32
  7585   0053C8  16BE               	andwf	190,f,c	;volatile
  7586                           
  7587                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  7588   0053CA  50BF               	movf	191,w,c	;volatile
  7589   0053CC  0BF0               	andlw	-16
  7590   0053CE  0901               	iorlw	1
  7591   0053D0  6EBF               	movwf	191,c	;volatile
  7592   0053D2                     
  7593                           ; BSR set to: 14
  7594                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  7595   0053D2  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7596   0053D6                     
  7597                           ; BSR set to: 14
  7598                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  7599   0053D6  8EBD               	bsf	189,7,c	;volatile
  7600                           
  7601                           ;dc_motor.c: 34:     CCPR1H=0;
  7602   0053D8  0E00               	movlw	0
  7603   0053DA  6EAA               	movwf	170,c	;volatile
  7604                           
  7605                           ;dc_motor.c: 35:     CCPR2H=0;
  7606   0053DC  0E00               	movlw	0
  7607   0053DE  6EA6               	movwf	166,c	;volatile
  7608                           
  7609                           ;dc_motor.c: 36:     CCPR3H=0;
  7610   0053E0  0E00               	movlw	0
  7611   0053E2  010F               	movlb	15	; () banked
  7612   0053E4  6F25               	movwf	37,b	;volatile
  7613                           
  7614                           ;dc_motor.c: 37:     CCPR4H=0;
  7615   0053E6  0E00               	movlw	0
  7616   0053E8  6F21               	movwf	33,b	;volatile
  7617                           
  7618                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  7619   0053EA  0EFC               	movlw	-4
  7620   0053EC  16AD               	andwf	173,f,c	;volatile
  7621                           
  7622                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  7623   0053EE  0EF3               	movlw	-13
  7624   0053F0  16AD               	andwf	173,f,c	;volatile
  7625                           
  7626                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  7627   0053F2  0ECF               	movlw	-49
  7628   0053F4  16AD               	andwf	173,f,c	;volatile
  7629                           
  7630                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  7631   0053F6  0E3F               	movlw	-193
  7632   0053F8  16AD               	andwf	173,f,c	;volatile
  7633   0053FA                     
  7634                           ; BSR set to: 15
  7635                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  7636   0053FA  88AB               	bsf	171,4,c	;volatile
  7637                           
  7638                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  7639   0053FC  50AB               	movf	171,w,c	;volatile
  7640   0053FE  0BF0               	andlw	-16
  7641   005400  090C               	iorlw	12
  7642   005402  6EAB               	movwf	171,c	;volatile
  7643   005404                     
  7644                           ; BSR set to: 15
  7645                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  7646   005404  8EAB               	bsf	171,7,c	;volatile
  7647   005406                     
  7648                           ; BSR set to: 15
  7649                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  7650   005406  88A7               	bsf	167,4,c	;volatile
  7651                           
  7652                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  7653   005408  50A7               	movf	167,w,c	;volatile
  7654   00540A  0BF0               	andlw	-16
  7655   00540C  090C               	iorlw	12
  7656   00540E  6EA7               	movwf	167,c	;volatile
  7657   005410                     
  7658                           ; BSR set to: 15
  7659                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  7660   005410  8EA7               	bsf	167,7,c	;volatile
  7661   005412                     
  7662                           ; BSR set to: 15
  7663                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  7664   005412  8926               	bsf	38,4,b	;volatile
  7665                           
  7666                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  7667   005414  5126               	movf	38,w,b	;volatile
  7668   005416  0BF0               	andlw	-16
  7669   005418  090C               	iorlw	12
  7670   00541A  6F26               	movwf	38,b	;volatile
  7671   00541C                     
  7672                           ; BSR set to: 15
  7673                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  7674   00541C  8F26               	bsf	38,7,b	;volatile
  7675   00541E                     
  7676                           ; BSR set to: 15
  7677                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  7678   00541E  8922               	bsf	34,4,b	;volatile
  7679                           
  7680                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  7681   005420  5122               	movf	34,w,b	;volatile
  7682   005422  0BF0               	andlw	-16
  7683   005424  090C               	iorlw	12
  7684   005426  6F22               	movwf	34,b	;volatile
  7685   005428                     
  7686                           ; BSR set to: 15
  7687                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  7688   005428  8F22               	bsf	34,7,b	;volatile
  7689   00542A                     
  7690                           ; BSR set to: 15
  7691   00542A  0012               	return		;funcret
  7692   00542C                     __end_of_initDCmotorsPWM:
  7693                           	callstack 0
  7694                           
  7695 ;; *************** function _go_Home *****************
  7696 ;; Defined at:
  7697 ;;		line 4 in file "Memory.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  7700 ;;		 -> WayBack(50), 
  7701 ;;  Time_forward    2   37[COMRAM] PTR int 
  7702 ;;		 -> Time_forward(100), 
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;  i               2   42[COMRAM] int 
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  1    wreg      void 
  7707 ;; Registers used:
  7708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7715 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7716 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7717 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7718 ;;Total ram usage:        9 bytes
  7719 ;; Hardware stack levels used: 1
  7720 ;; Hardware stack levels required when called: 6
  7721 ;; This function calls:
  7722 ;;		_BlueMove
  7723 ;;		_GreenMove
  7724 ;;		_LightBlueMove
  7725 ;;		_OrangeMove
  7726 ;;		_RedMove
  7727 ;;		_ReversePink
  7728 ;;		_ReverseYellow
  7729 ;;		_reverseDetect
  7730 ;;		_stop
  7731 ;;		_timed_forward
  7732 ;; This function is called by:
  7733 ;;		_main
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           	psect	text32
  7738   003B3E                     __ptext32:
  7739                           	callstack 0
  7740   003B3E                     _go_Home:
  7741                           	callstack 24
  7742   003B3E                     
  7743                           ;Memory.c: 5:     int i;;Memory.c: 6:     BlueMove(&motorL, &motorR);
  7744   003B3E  0E61               	movlw	low _motorL
  7745   003B40  6E20               	movwf	BlueMove@mL^0,c
  7746   003B42  0E01               	movlw	high _motorL
  7747   003B44  6E21               	movwf	(BlueMove@mL+1)^0,c
  7748   003B46  0E58               	movlw	low _motorR
  7749   003B48  6E22               	movwf	BlueMove@mR^0,c
  7750   003B4A  0E01               	movlw	high _motorR
  7751   003B4C  6E23               	movwf	(BlueMove@mR+1)^0,c
  7752   003B4E  EC34  F02B         	call	_BlueMove	;wreg free
  7753   003B52                     
  7754                           ;Memory.c: 7:     T0CON0bits.T0EN=0;
  7755   003B52  9ED5               	bcf	213,7,c	;volatile
  7756   003B54                     
  7757                           ;Memory.c: 8:     for (i = move_count; i >= 0; i--){
  7758   003B54  C114  F02B         	movff	_move_count,go_Home@i	;volatile
  7759   003B58  C115  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  7760   003B5C                     l5609:
  7761   003B5C  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  7762   003B5E  EFB5  F01D         	goto	u5590
  7763   003B62  EFB3  F01D         	goto	u5591
  7764   003B66                     u5591:
  7765   003B66  EFB7  F01D         	goto	l5613
  7766   003B6A                     u5590:
  7767   003B6A  EF0E  F01F         	goto	l647
  7768   003B6E                     l5613:
  7769                           
  7770                           ;Memory.c: 9:         timed_forward(&motorL, &motorR,Time_forward[i]);
  7771   003B6E  0E61               	movlw	low _motorL
  7772   003B70  6E14               	movwf	timed_forward@mL^0,c
  7773   003B72  0E01               	movlw	high _motorL
  7774   003B74  6E15               	movwf	(timed_forward@mL+1)^0,c
  7775   003B76  0E58               	movlw	low _motorR
  7776   003B78  6E16               	movwf	timed_forward@mR^0,c
  7777   003B7A  0E01               	movlw	high _motorR
  7778   003B7C  6E17               	movwf	(timed_forward@mR+1)^0,c
  7779   003B7E  90D8               	bcf	status,0,c
  7780   003B80  342B               	rlcf	go_Home@i^0,w,c
  7781   003B82  6ED9               	movwf	fsr2l,c
  7782   003B84  342C               	rlcf	(go_Home@i+1)^0,w,c
  7783   003B86  6EDA               	movwf	fsr2h,c
  7784   003B88  5026               	movf	go_Home@Time_forward^0,w,c
  7785   003B8A  26D9               	addwf	fsr2l,f,c
  7786   003B8C  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  7787   003B8E  22DA               	addwfc	fsr2h,f,c
  7788   003B90  CFDE F018          	movff	postinc2,timed_forward@time
  7789   003B94  CFDD F019          	movff	postdec2,timed_forward@time+1
  7790   003B98  ECEC  F027         	call	_timed_forward	;wreg free
  7791   003B9C                     
  7792                           ;Memory.c: 11:         if (WayBack[i-1]==1){
  7793   003B9C  502B               	movf	go_Home@i^0,w,c
  7794   003B9E  2424               	addwf	go_Home@WayBack^0,w,c
  7795   003BA0  6E28               	movwf	??_go_Home^0,c
  7796   003BA2  502C               	movf	(go_Home@i+1)^0,w,c
  7797   003BA4  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7798   003BA6  6E29               	movwf	(??_go_Home+1)^0,c
  7799   003BA8  0EFF               	movlw	255
  7800   003BAA  2428               	addwf	??_go_Home^0,w,c
  7801   003BAC  6ED9               	movwf	fsr2l,c
  7802   003BAE  0EFF               	movlw	255
  7803   003BB0  2029               	addwfc	(??_go_Home+1)^0,w,c
  7804   003BB2  6EDA               	movwf	fsr2h,c
  7805   003BB4  04DE               	decf	postinc2,w,c
  7806   003BB6  A4D8               	btfss	status,2,c
  7807   003BB8  EFE0  F01D         	goto	u5601
  7808   003BBC  EFE2  F01D         	goto	u5600
  7809   003BC0                     u5601:
  7810   003BC0  EFF8  F01D         	goto	l5619
  7811   003BC4                     u5600:
  7812   003BC4                     
  7813                           ;Memory.c: 12:             reverseDetect(&motorL, &motorR);
  7814   003BC4  0E61               	movlw	low _motorL
  7815   003BC6  6E1A               	movwf	reverseDetect@mL^0,c
  7816   003BC8  0E01               	movlw	high _motorL
  7817   003BCA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7818   003BCC  0E58               	movlw	low _motorR
  7819   003BCE  6E1C               	movwf	reverseDetect@mR^0,c
  7820   003BD0  0E01               	movlw	high _motorR
  7821   003BD2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7822   003BD4  ECF0  F02B         	call	_reverseDetect	;wreg free
  7823                           
  7824                           ;Memory.c: 13:             GreenMove(&motorL, &motorR);
  7825   003BD8  0E61               	movlw	low _motorL
  7826   003BDA  6E20               	movwf	GreenMove@mL^0,c
  7827   003BDC  0E01               	movlw	high _motorL
  7828   003BDE  6E21               	movwf	(GreenMove@mL+1)^0,c
  7829   003BE0  0E58               	movlw	low _motorR
  7830   003BE2  6E22               	movwf	GreenMove@mR^0,c
  7831   003BE4  0E01               	movlw	high _motorR
  7832   003BE6  6E23               	movwf	(GreenMove@mR+1)^0,c
  7833   003BE8  EC6F  F02F         	call	_GreenMove	;wreg free
  7834                           
  7835                           ;Memory.c: 14:         }
  7836   003BEC  EFFA  F01E         	goto	l635
  7837   003BF0                     l5619:
  7838   003BF0  502B               	movf	go_Home@i^0,w,c
  7839   003BF2  2424               	addwf	go_Home@WayBack^0,w,c
  7840   003BF4  6E28               	movwf	??_go_Home^0,c
  7841   003BF6  502C               	movf	(go_Home@i+1)^0,w,c
  7842   003BF8  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7843   003BFA  6E29               	movwf	(??_go_Home+1)^0,c
  7844   003BFC  0EFF               	movlw	255
  7845   003BFE  2428               	addwf	??_go_Home^0,w,c
  7846   003C00  6ED9               	movwf	fsr2l,c
  7847   003C02  0EFF               	movlw	255
  7848   003C04  2029               	addwfc	(??_go_Home+1)^0,w,c
  7849   003C06  6EDA               	movwf	fsr2h,c
  7850   003C08  0E02               	movlw	2
  7851   003C0A  18DE               	xorwf	postinc2,w,c
  7852   003C0C  A4D8               	btfss	status,2,c
  7853   003C0E  EF0B  F01E         	goto	u5611
  7854   003C12  EF0D  F01E         	goto	u5610
  7855   003C16                     u5611:
  7856   003C16  EF23  F01E         	goto	l5623
  7857   003C1A                     u5610:
  7858   003C1A                     
  7859                           ;Memory.c: 16:             reverseDetect(&motorL, &motorR);
  7860   003C1A  0E61               	movlw	low _motorL
  7861   003C1C  6E1A               	movwf	reverseDetect@mL^0,c
  7862   003C1E  0E01               	movlw	high _motorL
  7863   003C20  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7864   003C22  0E58               	movlw	low _motorR
  7865   003C24  6E1C               	movwf	reverseDetect@mR^0,c
  7866   003C26  0E01               	movlw	high _motorR
  7867   003C28  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7868   003C2A  ECF0  F02B         	call	_reverseDetect	;wreg free
  7869                           
  7870                           ;Memory.c: 17:             LightBlueMove(&motorL, &motorR);
  7871   003C2E  0E61               	movlw	low _motorL
  7872   003C30  6E20               	movwf	LightBlueMove@mL^0,c
  7873   003C32  0E01               	movlw	high _motorL
  7874   003C34  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7875   003C36  0E58               	movlw	low _motorR
  7876   003C38  6E22               	movwf	LightBlueMove@mR^0,c
  7877   003C3A  0E01               	movlw	high _motorR
  7878   003C3C  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7879   003C3E  ECC7  F02C         	call	_LightBlueMove	;wreg free
  7880                           
  7881                           ;Memory.c: 18:         }
  7882   003C42  EFFA  F01E         	goto	l635
  7883   003C46                     l5623:
  7884   003C46  502B               	movf	go_Home@i^0,w,c
  7885   003C48  2424               	addwf	go_Home@WayBack^0,w,c
  7886   003C4A  6E28               	movwf	??_go_Home^0,c
  7887   003C4C  502C               	movf	(go_Home@i+1)^0,w,c
  7888   003C4E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7889   003C50  6E29               	movwf	(??_go_Home+1)^0,c
  7890   003C52  0EFF               	movlw	255
  7891   003C54  2428               	addwf	??_go_Home^0,w,c
  7892   003C56  6ED9               	movwf	fsr2l,c
  7893   003C58  0EFF               	movlw	255
  7894   003C5A  2029               	addwfc	(??_go_Home+1)^0,w,c
  7895   003C5C  6EDA               	movwf	fsr2h,c
  7896   003C5E  0E03               	movlw	3
  7897   003C60  18DE               	xorwf	postinc2,w,c
  7898   003C62  A4D8               	btfss	status,2,c
  7899   003C64  EF36  F01E         	goto	u5621
  7900   003C68  EF38  F01E         	goto	u5620
  7901   003C6C                     u5621:
  7902   003C6C  EF4E  F01E         	goto	l5627
  7903   003C70                     u5620:
  7904   003C70                     
  7905                           ;Memory.c: 20:             reverseDetect(&motorL, &motorR);
  7906   003C70  0E61               	movlw	low _motorL
  7907   003C72  6E1A               	movwf	reverseDetect@mL^0,c
  7908   003C74  0E01               	movlw	high _motorL
  7909   003C76  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7910   003C78  0E58               	movlw	low _motorR
  7911   003C7A  6E1C               	movwf	reverseDetect@mR^0,c
  7912   003C7C  0E01               	movlw	high _motorR
  7913   003C7E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7914   003C80  ECF0  F02B         	call	_reverseDetect	;wreg free
  7915                           
  7916                           ;Memory.c: 21:             ReverseYellow(&motorL, &motorR);
  7917   003C84  0E61               	movlw	low _motorL
  7918   003C86  6E20               	movwf	ReverseYellow@mL^0,c
  7919   003C88  0E01               	movlw	high _motorL
  7920   003C8A  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  7921   003C8C  0E58               	movlw	low _motorR
  7922   003C8E  6E22               	movwf	ReverseYellow@mR^0,c
  7923   003C90  0E01               	movlw	high _motorR
  7924   003C92  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  7925   003C94  EC36  F027         	call	_ReverseYellow	;wreg free
  7926                           
  7927                           ;Memory.c: 22:         }
  7928   003C98  EFFA  F01E         	goto	l635
  7929   003C9C                     l5627:
  7930   003C9C  502B               	movf	go_Home@i^0,w,c
  7931   003C9E  2424               	addwf	go_Home@WayBack^0,w,c
  7932   003CA0  6E28               	movwf	??_go_Home^0,c
  7933   003CA2  502C               	movf	(go_Home@i+1)^0,w,c
  7934   003CA4  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7935   003CA6  6E29               	movwf	(??_go_Home+1)^0,c
  7936   003CA8  0EFF               	movlw	255
  7937   003CAA  2428               	addwf	??_go_Home^0,w,c
  7938   003CAC  6ED9               	movwf	fsr2l,c
  7939   003CAE  0EFF               	movlw	255
  7940   003CB0  2029               	addwfc	(??_go_Home+1)^0,w,c
  7941   003CB2  6EDA               	movwf	fsr2h,c
  7942   003CB4  0E04               	movlw	4
  7943   003CB6  18DE               	xorwf	postinc2,w,c
  7944   003CB8  A4D8               	btfss	status,2,c
  7945   003CBA  EF61  F01E         	goto	u5631
  7946   003CBE  EF63  F01E         	goto	u5630
  7947   003CC2                     u5631:
  7948   003CC2  EF79  F01E         	goto	l5631
  7949   003CC6                     u5630:
  7950   003CC6                     
  7951                           ;Memory.c: 24:             reverseDetect(&motorL, &motorR);
  7952   003CC6  0E61               	movlw	low _motorL
  7953   003CC8  6E1A               	movwf	reverseDetect@mL^0,c
  7954   003CCA  0E01               	movlw	high _motorL
  7955   003CCC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7956   003CCE  0E58               	movlw	low _motorR
  7957   003CD0  6E1C               	movwf	reverseDetect@mR^0,c
  7958   003CD2  0E01               	movlw	high _motorR
  7959   003CD4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7960   003CD6  ECF0  F02B         	call	_reverseDetect	;wreg free
  7961                           
  7962                           ;Memory.c: 25:             BlueMove(&motorL, &motorR);
  7963   003CDA  0E61               	movlw	low _motorL
  7964   003CDC  6E20               	movwf	BlueMove@mL^0,c
  7965   003CDE  0E01               	movlw	high _motorL
  7966   003CE0  6E21               	movwf	(BlueMove@mL+1)^0,c
  7967   003CE2  0E58               	movlw	low _motorR
  7968   003CE4  6E22               	movwf	BlueMove@mR^0,c
  7969   003CE6  0E01               	movlw	high _motorR
  7970   003CE8  6E23               	movwf	(BlueMove@mR+1)^0,c
  7971   003CEA  EC34  F02B         	call	_BlueMove	;wreg free
  7972                           
  7973                           ;Memory.c: 26:         }
  7974   003CEE  EFFA  F01E         	goto	l635
  7975   003CF2                     l5631:
  7976   003CF2  502B               	movf	go_Home@i^0,w,c
  7977   003CF4  2424               	addwf	go_Home@WayBack^0,w,c
  7978   003CF6  6E28               	movwf	??_go_Home^0,c
  7979   003CF8  502C               	movf	(go_Home@i+1)^0,w,c
  7980   003CFA  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7981   003CFC  6E29               	movwf	(??_go_Home+1)^0,c
  7982   003CFE  0EFF               	movlw	255
  7983   003D00  2428               	addwf	??_go_Home^0,w,c
  7984   003D02  6ED9               	movwf	fsr2l,c
  7985   003D04  0EFF               	movlw	255
  7986   003D06  2029               	addwfc	(??_go_Home+1)^0,w,c
  7987   003D08  6EDA               	movwf	fsr2h,c
  7988   003D0A  0E05               	movlw	5
  7989   003D0C  18DE               	xorwf	postinc2,w,c
  7990   003D0E  A4D8               	btfss	status,2,c
  7991   003D10  EF8C  F01E         	goto	u5641
  7992   003D14  EF8E  F01E         	goto	u5640
  7993   003D18                     u5641:
  7994   003D18  EFA4  F01E         	goto	l5635
  7995   003D1C                     u5640:
  7996   003D1C                     
  7997                           ;Memory.c: 28:             reverseDetect(&motorL, &motorR);
  7998   003D1C  0E61               	movlw	low _motorL
  7999   003D1E  6E1A               	movwf	reverseDetect@mL^0,c
  8000   003D20  0E01               	movlw	high _motorL
  8001   003D22  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8002   003D24  0E58               	movlw	low _motorR
  8003   003D26  6E1C               	movwf	reverseDetect@mR^0,c
  8004   003D28  0E01               	movlw	high _motorR
  8005   003D2A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8006   003D2C  ECF0  F02B         	call	_reverseDetect	;wreg free
  8007                           
  8008                           ;Memory.c: 29:             RedMove(&motorL, &motorR);
  8009   003D30  0E61               	movlw	low _motorL
  8010   003D32  6E20               	movwf	RedMove@mL^0,c
  8011   003D34  0E01               	movlw	high _motorL
  8012   003D36  6E21               	movwf	(RedMove@mL+1)^0,c
  8013   003D38  0E58               	movlw	low _motorR
  8014   003D3A  6E22               	movwf	RedMove@mR^0,c
  8015   003D3C  0E01               	movlw	high _motorR
  8016   003D3E  6E23               	movwf	(RedMove@mR+1)^0,c
  8017   003D40  EC50  F02F         	call	_RedMove	;wreg free
  8018                           
  8019                           ;Memory.c: 30:         }
  8020   003D44  EFFA  F01E         	goto	l635
  8021   003D48                     l5635:
  8022   003D48  502B               	movf	go_Home@i^0,w,c
  8023   003D4A  2424               	addwf	go_Home@WayBack^0,w,c
  8024   003D4C  6E28               	movwf	??_go_Home^0,c
  8025   003D4E  502C               	movf	(go_Home@i+1)^0,w,c
  8026   003D50  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8027   003D52  6E29               	movwf	(??_go_Home+1)^0,c
  8028   003D54  0EFF               	movlw	255
  8029   003D56  2428               	addwf	??_go_Home^0,w,c
  8030   003D58  6ED9               	movwf	fsr2l,c
  8031   003D5A  0EFF               	movlw	255
  8032   003D5C  2029               	addwfc	(??_go_Home+1)^0,w,c
  8033   003D5E  6EDA               	movwf	fsr2h,c
  8034   003D60  0E06               	movlw	6
  8035   003D62  18DE               	xorwf	postinc2,w,c
  8036   003D64  A4D8               	btfss	status,2,c
  8037   003D66  EFB7  F01E         	goto	u5651
  8038   003D6A  EFB9  F01E         	goto	u5650
  8039   003D6E                     u5651:
  8040   003D6E  EFCF  F01E         	goto	l5639
  8041   003D72                     u5650:
  8042   003D72                     
  8043                           ;Memory.c: 32:             reverseDetect(&motorL, &motorR);
  8044   003D72  0E61               	movlw	low _motorL
  8045   003D74  6E1A               	movwf	reverseDetect@mL^0,c
  8046   003D76  0E01               	movlw	high _motorL
  8047   003D78  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8048   003D7A  0E58               	movlw	low _motorR
  8049   003D7C  6E1C               	movwf	reverseDetect@mR^0,c
  8050   003D7E  0E01               	movlw	high _motorR
  8051   003D80  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8052   003D82  ECF0  F02B         	call	_reverseDetect	;wreg free
  8053                           
  8054                           ;Memory.c: 33:             OrangeMove(&motorL, &motorR);
  8055   003D86  0E61               	movlw	low _motorL
  8056   003D88  6E20               	movwf	OrangeMove@mL^0,c
  8057   003D8A  0E01               	movlw	high _motorL
  8058   003D8C  6E21               	movwf	(OrangeMove@mL+1)^0,c
  8059   003D8E  0E58               	movlw	low _motorR
  8060   003D90  6E22               	movwf	OrangeMove@mR^0,c
  8061   003D92  0E01               	movlw	high _motorR
  8062   003D94  6E23               	movwf	(OrangeMove@mR+1)^0,c
  8063   003D96  EC9E  F02C         	call	_OrangeMove	;wreg free
  8064                           
  8065                           ;Memory.c: 34:         }
  8066   003D9A  EFFA  F01E         	goto	l635
  8067   003D9E                     l5639:
  8068   003D9E  502B               	movf	go_Home@i^0,w,c
  8069   003DA0  2424               	addwf	go_Home@WayBack^0,w,c
  8070   003DA2  6E28               	movwf	??_go_Home^0,c
  8071   003DA4  502C               	movf	(go_Home@i+1)^0,w,c
  8072   003DA6  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8073   003DA8  6E29               	movwf	(??_go_Home+1)^0,c
  8074   003DAA  0EFF               	movlw	255
  8075   003DAC  2428               	addwf	??_go_Home^0,w,c
  8076   003DAE  6ED9               	movwf	fsr2l,c
  8077   003DB0  0EFF               	movlw	255
  8078   003DB2  2029               	addwfc	(??_go_Home+1)^0,w,c
  8079   003DB4  6EDA               	movwf	fsr2h,c
  8080   003DB6  0E07               	movlw	7
  8081   003DB8  18DE               	xorwf	postinc2,w,c
  8082   003DBA  A4D8               	btfss	status,2,c
  8083   003DBC  EFE2  F01E         	goto	u5661
  8084   003DC0  EFE4  F01E         	goto	u5660
  8085   003DC4                     u5661:
  8086   003DC4  EFFA  F01E         	goto	l641
  8087   003DC8                     u5660:
  8088   003DC8                     
  8089                           ;Memory.c: 36:             reverseDetect(&motorL, &motorR);
  8090   003DC8  0E61               	movlw	low _motorL
  8091   003DCA  6E1A               	movwf	reverseDetect@mL^0,c
  8092   003DCC  0E01               	movlw	high _motorL
  8093   003DCE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8094   003DD0  0E58               	movlw	low _motorR
  8095   003DD2  6E1C               	movwf	reverseDetect@mR^0,c
  8096   003DD4  0E01               	movlw	high _motorR
  8097   003DD6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8098   003DD8  ECF0  F02B         	call	_reverseDetect	;wreg free
  8099                           
  8100                           ;Memory.c: 37:             ReversePink(&motorL, &motorR);
  8101   003DDC  0E61               	movlw	low _motorL
  8102   003DDE  6E20               	movwf	ReversePink@mL^0,c
  8103   003DE0  0E01               	movlw	high _motorL
  8104   003DE2  6E21               	movwf	(ReversePink@mL+1)^0,c
  8105   003DE4  0E58               	movlw	low _motorR
  8106   003DE6  6E22               	movwf	ReversePink@mR^0,c
  8107   003DE8  0E01               	movlw	high _motorR
  8108   003DEA  6E23               	movwf	(ReversePink@mR+1)^0,c
  8109   003DEC  EC91  F027         	call	_ReversePink	;wreg free
  8110   003DF0  EFFA  F01E         	goto	l635
  8111   003DF4                     l641:
  8112   003DF4                     l635:
  8113                           
  8114                           ;Memory.c: 39:         stop(&motorL, &motorR);
  8115   003DF4  0E61               	movlw	low _motorL
  8116   003DF6  6E14               	movwf	stop@mL^0,c
  8117   003DF8  0E01               	movlw	high _motorL
  8118   003DFA  6E15               	movwf	(stop@mL+1)^0,c
  8119   003DFC  0E58               	movlw	low _motorR
  8120   003DFE  6E16               	movwf	stop@mR^0,c
  8121   003E00  0E01               	movlw	high _motorR
  8122   003E02  6E17               	movwf	(stop@mR+1)^0,c
  8123   003E04  EC16  F02A         	call	_stop	;wreg free
  8124   003E08                     
  8125                           ;Memory.c: 40:         run_flag=0;
  8126   003E08  0E00               	movlw	0
  8127   003E0A  0101               	movlb	1	; () banked
  8128   003E0C  6F17               	movwf	(_run_flag+1)& (0+255),b
  8129   003E0E  0E00               	movlw	0
  8130   003E10  6F16               	movwf	_run_flag& (0+255),b
  8131   003E12                     
  8132                           ; BSR set to: 1
  8133                           ;Memory.c: 43:   }
  8134   003E12  062B               	decf	go_Home@i^0,f,c
  8135   003E14  A0D8               	btfss	status,0,c
  8136   003E16  062C               	decf	(go_Home@i+1)^0,f,c
  8137   003E18  EFAE  F01D         	goto	l5609
  8138   003E1C                     l647:
  8139   003E1C  0012               	return		;funcret
  8140   003E1E                     __end_of_go_Home:
  8141                           	callstack 0
  8142                           
  8143 ;; *************** function _timed_forward *****************
  8144 ;; Defined at:
  8145 ;;		line 165 in file "dc_motor.c"
  8146 ;; Parameters:    Size  Location     Type
  8147 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8148 ;;		 -> motorL(9), 
  8149 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8150 ;;		 -> motorR(9), 
  8151 ;;  time            2   23[COMRAM] int 
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;		None
  8154 ;; Return value:  Size  Location     Type
  8155 ;;                  1    wreg      void 
  8156 ;; Registers used:
  8157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8158 ;; Tracked objects:
  8159 ;;		On entry : 0/0
  8160 ;;		On exit  : 0/0
  8161 ;;		Unchanged: 0/0
  8162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8163 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8165 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8166 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8167 ;;Total ram usage:        8 bytes
  8168 ;; Hardware stack levels used: 1
  8169 ;; Hardware stack levels required when called: 3
  8170 ;; This function calls:
  8171 ;;		_delayed_ms
  8172 ;;		_setMotorPWM
  8173 ;; This function is called by:
  8174 ;;		_go_Home
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178                           	psect	text33
  8179   004FD8                     __ptext33:
  8180                           	callstack 0
  8181   004FD8                     _timed_forward:
  8182                           	callstack 26
  8183   004FD8                     
  8184                           ;dc_motor.c: 165: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 166: {;dc_motor.c: 168:     mL->direction =1;
  8185   004FD8  EE20 F001          	lfsr	2,1
  8186   004FDC  5014               	movf	timed_forward@mL^0,w,c
  8187   004FDE  26D9               	addwf	fsr2l,f,c
  8188   004FE0  5015               	movf	(timed_forward@mL+1)^0,w,c
  8189   004FE2  22DA               	addwfc	fsr2h,f,c
  8190   004FE4  0E01               	movlw	1
  8191   004FE6  6EDF               	movwf	indf2,c
  8192                           
  8193                           ;dc_motor.c: 169:     mR->direction =1;
  8194   004FE8  EE20 F001          	lfsr	2,1
  8195   004FEC  5016               	movf	timed_forward@mR^0,w,c
  8196   004FEE  26D9               	addwf	fsr2l,f,c
  8197   004FF0  5017               	movf	(timed_forward@mR+1)^0,w,c
  8198   004FF2  22DA               	addwfc	fsr2h,f,c
  8199   004FF4  0E01               	movlw	1
  8200   004FF6  6EDF               	movwf	indf2,c
  8201                           
  8202                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
  8203   004FF8  EF22  F028         	goto	l5165
  8204   004FFC                     l5157:
  8205                           
  8206                           ;dc_motor.c: 172:         mL->power+=10;
  8207   004FFC  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8208   005000  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8209   005004  0E0A               	movlw	10
  8210   005006  26DF               	addwf	indf2,f,c
  8211                           
  8212                           ;dc_motor.c: 173:         mR->power+=10;
  8213   005008  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8214   00500C  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8215   005010  0E0A               	movlw	10
  8216   005012  26DF               	addwf	indf2,f,c
  8217   005014                     
  8218                           ;dc_motor.c: 175:         setMotorPWM(mL);
  8219   005014  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8220   005018  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8221   00501C  ECE5  F023         	call	_setMotorPWM	;wreg free
  8222   005020                     
  8223                           ;dc_motor.c: 176:         setMotorPWM(mR);
  8224   005020  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8225   005024  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8226   005028  ECE5  F023         	call	_setMotorPWM	;wreg free
  8227   00502C                     
  8228                           ;dc_motor.c: 179:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8229   00502C  0E02               	movlw	2
  8230   00502E  6E1B               	movwf	(??_timed_forward+1)^0,c
  8231   005030  0EA0               	movlw	160
  8232   005032  6E1A               	movwf	??_timed_forward^0,c
  8233   005034  0E92               	movlw	146
  8234   005036                     u6017:
  8235   005036  2EE8               	decfsz	wreg,f,c
  8236   005038  D7FE               	bra	u6017
  8237   00503A  2E1A               	decfsz	??_timed_forward^0,f,c
  8238   00503C  D7FC               	bra	u6017
  8239   00503E  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8240   005040  D7FA               	bra	u6017
  8241   005042  D000               	nop2	
  8242   005044                     l5165:
  8243   005044  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8244   005048  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8245   00504C  0E1E               	movlw	30
  8246   00504E  60DF               	cpfslt	indf2,c
  8247   005050  EF2C  F028         	goto	u5021
  8248   005054  EF2E  F028         	goto	u5020
  8249   005058                     u5021:
  8250   005058  EF3A  F028         	goto	l5169
  8251   00505C                     u5020:
  8252   00505C  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8253   005060  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8254   005064  0E1D               	movlw	29
  8255   005066  64DF               	cpfsgt	indf2,c
  8256   005068  EF38  F028         	goto	u5031
  8257   00506C  EF3A  F028         	goto	u5030
  8258   005070                     u5031:
  8259   005070  EFFE  F027         	goto	l5157
  8260   005074                     u5030:
  8261   005074                     l5169:
  8262                           
  8263                           ;dc_motor.c: 181:     delayed_ms(time);
  8264   005074  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8265   005078  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8266   00507C  ECAA  F02F         	call	_delayed_ms	;wreg free
  8267   005080  0012               	return		;funcret
  8268   005082                     __end_of_timed_forward:
  8269                           	callstack 0
  8270                           
  8271 ;; *************** function _delayed_ms *****************
  8272 ;; Defined at:
  8273 ;;		line 39 in file "timers.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;  time            2    0[COMRAM] int 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;  i               2    3[COMRAM] unsigned int 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  1    wreg      void 
  8280 ;; Registers used:
  8281 ;;		wreg, status,2, status,0
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8287 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8288 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8289 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8290 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8291 ;;Total ram usage:        5 bytes
  8292 ;; Hardware stack levels used: 1
  8293 ;; Hardware stack levels required when called: 1
  8294 ;; This function calls:
  8295 ;;		Nothing
  8296 ;; This function is called by:
  8297 ;;		_timed_forward
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           	psect	text34
  8302   005F54                     __ptext34:
  8303                           	callstack 0
  8304   005F54                     _delayed_ms:
  8305                           	callstack 27
  8306   005F54                     
  8307                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  8308   005F54  0E00               	movlw	0
  8309   005F56  6E05               	movwf	(delayed_ms@i+1)^0,c
  8310   005F58  0E00               	movlw	0
  8311   005F5A  6E04               	movwf	delayed_ms@i^0,c
  8312   005F5C  EFBA  F02F         	goto	l676
  8313   005F60                     l4989:
  8314                           
  8315                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
  8316   005F60  0E15               	movlw	21
  8317   005F62  6E03               	movwf	??_delayed_ms^0,c
  8318   005F64  0EC6               	movlw	198
  8319   005F66                     u6027:
  8320   005F66  2EE8               	decfsz	wreg,f,c
  8321   005F68  D7FE               	bra	u6027
  8322   005F6A  2E03               	decfsz	??_delayed_ms^0,f,c
  8323   005F6C  D7FC               	bra	u6027
  8324   005F6E  D000               	nop2	
  8325   005F70                     
  8326                           ;timers.c: 42:     }
  8327   005F70  4A04               	infsnz	delayed_ms@i^0,f,c
  8328   005F72  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8329   005F74                     l676:
  8330   005F74  5001               	movf	delayed_ms@time^0,w,c
  8331   005F76  5C04               	subwf	delayed_ms@i^0,w,c
  8332   005F78  5002               	movf	(delayed_ms@time+1)^0,w,c
  8333   005F7A  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8334   005F7C  A0D8               	btfss	status,0,c
  8335   005F7E  EFC3  F02F         	goto	u4961
  8336   005F82  EFC5  F02F         	goto	u4960
  8337   005F86                     u4961:
  8338   005F86  EFB0  F02F         	goto	l4989
  8339   005F8A                     u4960:
  8340   005F8A  0012               	return		;funcret
  8341   005F8C                     __end_of_delayed_ms:
  8342                           	callstack 0
  8343                           
  8344 ;; *************** function _ReverseYellow *****************
  8345 ;; Defined at:
  8346 ;;		line 333 in file "dc_motor.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8349 ;;		 -> motorL(9), 
  8350 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8351 ;;		 -> motorR(9), 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;		None
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  1    wreg      void 
  8356 ;; Registers used:
  8357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8363 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8366 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8367 ;;Total ram usage:        4 bytes
  8368 ;; Hardware stack levels used: 1
  8369 ;; Hardware stack levels required when called: 5
  8370 ;; This function calls:
  8371 ;;		_ForwardOneBlock
  8372 ;;		_reverseDetect
  8373 ;;		_turnRight45
  8374 ;; This function is called by:
  8375 ;;		_go_Home
  8376 ;; This function uses a non-reentrant model
  8377 ;;
  8378                           
  8379                           	psect	text35
  8380   004E6C                     __ptext35:
  8381                           	callstack 0
  8382   004E6C                     _ReverseYellow:
  8383                           	callstack 24
  8384   004E6C                     
  8385                           ;dc_motor.c: 334:     reverseDetect(&motorL, &motorR);
  8386   004E6C  0E61               	movlw	low _motorL
  8387   004E6E  6E1A               	movwf	reverseDetect@mL^0,c
  8388   004E70  0E01               	movlw	high _motorL
  8389   004E72  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8390   004E74  0E58               	movlw	low _motorR
  8391   004E76  6E1C               	movwf	reverseDetect@mR^0,c
  8392   004E78  0E01               	movlw	high _motorR
  8393   004E7A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8394   004E7C  ECF0  F02B         	call	_reverseDetect	;wreg free
  8395                           
  8396                           ;dc_motor.c: 335:     turnRight45(&motorL, &motorR);
  8397   004E80  0E61               	movlw	low _motorL
  8398   004E82  6E1A               	movwf	turnRight45@mL^0,c
  8399   004E84  0E01               	movlw	high _motorL
  8400   004E86  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8401   004E88  0E58               	movlw	low _motorR
  8402   004E8A  6E1C               	movwf	turnRight45@mR^0,c
  8403   004E8C  0E01               	movlw	high _motorR
  8404   004E8E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8405   004E90  EC5A  F02E         	call	_turnRight45	;wreg free
  8406                           
  8407                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
  8408   004E94  0E61               	movlw	low _motorL
  8409   004E96  6E1A               	movwf	turnRight45@mL^0,c
  8410   004E98  0E01               	movlw	high _motorL
  8411   004E9A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8412   004E9C  0E58               	movlw	low _motorR
  8413   004E9E  6E1C               	movwf	turnRight45@mR^0,c
  8414   004EA0  0E01               	movlw	high _motorR
  8415   004EA2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8416   004EA4  EC5A  F02E         	call	_turnRight45	;wreg free
  8417                           
  8418                           ;dc_motor.c: 337:     ForwardOneBlock(&motorL, &motorR);
  8419   004EA8  0E61               	movlw	low _motorL
  8420   004EAA  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8421   004EAC  0E01               	movlw	high _motorL
  8422   004EAE  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8423   004EB0  0E58               	movlw	low _motorR
  8424   004EB2  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8425   004EB4  0E01               	movlw	high _motorR
  8426   004EB6  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8427   004EB8  EC96  F02B         	call	_ForwardOneBlock	;wreg free
  8428                           
  8429                           ;dc_motor.c: 338:     reverseDetect(&motorL, &motorR);
  8430   004EBC  0E61               	movlw	low _motorL
  8431   004EBE  6E1A               	movwf	reverseDetect@mL^0,c
  8432   004EC0  0E01               	movlw	high _motorL
  8433   004EC2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8434   004EC4  0E58               	movlw	low _motorR
  8435   004EC6  6E1C               	movwf	reverseDetect@mR^0,c
  8436   004EC8  0E01               	movlw	high _motorR
  8437   004ECA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8438   004ECC  ECF0  F02B         	call	_reverseDetect	;wreg free
  8439                           
  8440                           ;dc_motor.c: 339:     turnRight45(&motorL, &motorR);
  8441   004ED0  0E61               	movlw	low _motorL
  8442   004ED2  6E1A               	movwf	turnRight45@mL^0,c
  8443   004ED4  0E01               	movlw	high _motorL
  8444   004ED6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8445   004ED8  0E58               	movlw	low _motorR
  8446   004EDA  6E1C               	movwf	turnRight45@mR^0,c
  8447   004EDC  0E01               	movlw	high _motorR
  8448   004EDE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8449   004EE0  EC5A  F02E         	call	_turnRight45	;wreg free
  8450                           
  8451                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  8452   004EE4  0E61               	movlw	low _motorL
  8453   004EE6  6E1A               	movwf	turnRight45@mL^0,c
  8454   004EE8  0E01               	movlw	high _motorL
  8455   004EEA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8456   004EEC  0E58               	movlw	low _motorR
  8457   004EEE  6E1C               	movwf	turnRight45@mR^0,c
  8458   004EF0  0E01               	movlw	high _motorR
  8459   004EF2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8460   004EF4  EC5A  F02E         	call	_turnRight45	;wreg free
  8461                           
  8462                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  8463   004EF8  0E61               	movlw	low _motorL
  8464   004EFA  6E1A               	movwf	turnRight45@mL^0,c
  8465   004EFC  0E01               	movlw	high _motorL
  8466   004EFE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8467   004F00  0E58               	movlw	low _motorR
  8468   004F02  6E1C               	movwf	turnRight45@mR^0,c
  8469   004F04  0E01               	movlw	high _motorR
  8470   004F06  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8471   004F08  EC5A  F02E         	call	_turnRight45	;wreg free
  8472                           
  8473                           ;dc_motor.c: 342:     turnRight45(&motorL, &motorR);
  8474   004F0C  0E61               	movlw	low _motorL
  8475   004F0E  6E1A               	movwf	turnRight45@mL^0,c
  8476   004F10  0E01               	movlw	high _motorL
  8477   004F12  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8478   004F14  0E58               	movlw	low _motorR
  8479   004F16  6E1C               	movwf	turnRight45@mR^0,c
  8480   004F18  0E01               	movlw	high _motorR
  8481   004F1A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8482   004F1C  EC5A  F02E         	call	_turnRight45	;wreg free
  8483   004F20  0012               	return		;funcret
  8484   004F22                     __end_of_ReverseYellow:
  8485                           	callstack 0
  8486                           
  8487 ;; *************** function _ReversePink *****************
  8488 ;; Defined at:
  8489 ;;		line 344 in file "dc_motor.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8492 ;;		 -> motorL(9), 
  8493 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8494 ;;		 -> motorR(9), 
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;		None
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  1    wreg      void 
  8499 ;; Registers used:
  8500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8506 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8509 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8510 ;;Total ram usage:        4 bytes
  8511 ;; Hardware stack levels used: 1
  8512 ;; Hardware stack levels required when called: 5
  8513 ;; This function calls:
  8514 ;;		_ForwardOneBlock
  8515 ;;		_reverseDetect
  8516 ;;		_turnLeft45
  8517 ;; This function is called by:
  8518 ;;		_go_Home
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           	psect	text36
  8523   004F22                     __ptext36:
  8524                           	callstack 0
  8525   004F22                     _ReversePink:
  8526                           	callstack 24
  8527   004F22                     
  8528                           ;dc_motor.c: 345:     reverseDetect(&motorL, &motorR);
  8529   004F22  0E61               	movlw	low _motorL
  8530   004F24  6E1A               	movwf	reverseDetect@mL^0,c
  8531   004F26  0E01               	movlw	high _motorL
  8532   004F28  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8533   004F2A  0E58               	movlw	low _motorR
  8534   004F2C  6E1C               	movwf	reverseDetect@mR^0,c
  8535   004F2E  0E01               	movlw	high _motorR
  8536   004F30  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8537   004F32  ECF0  F02B         	call	_reverseDetect	;wreg free
  8538                           
  8539                           ;dc_motor.c: 346:     turnLeft45(&motorL, &motorR);
  8540   004F36  0E61               	movlw	low _motorL
  8541   004F38  6E1A               	movwf	turnLeft45@mL^0,c
  8542   004F3A  0E01               	movlw	high _motorL
  8543   004F3C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8544   004F3E  0E58               	movlw	low _motorR
  8545   004F40  6E1C               	movwf	turnLeft45@mR^0,c
  8546   004F42  0E01               	movlw	high _motorR
  8547   004F44  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8548   004F46  EC81  F02E         	call	_turnLeft45	;wreg free
  8549                           
  8550                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
  8551   004F4A  0E61               	movlw	low _motorL
  8552   004F4C  6E1A               	movwf	turnLeft45@mL^0,c
  8553   004F4E  0E01               	movlw	high _motorL
  8554   004F50  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8555   004F52  0E58               	movlw	low _motorR
  8556   004F54  6E1C               	movwf	turnLeft45@mR^0,c
  8557   004F56  0E01               	movlw	high _motorR
  8558   004F58  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8559   004F5A  EC81  F02E         	call	_turnLeft45	;wreg free
  8560                           
  8561                           ;dc_motor.c: 348:     ForwardOneBlock(&motorL, &motorR);
  8562   004F5E  0E61               	movlw	low _motorL
  8563   004F60  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8564   004F62  0E01               	movlw	high _motorL
  8565   004F64  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8566   004F66  0E58               	movlw	low _motorR
  8567   004F68  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8568   004F6A  0E01               	movlw	high _motorR
  8569   004F6C  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8570   004F6E  EC96  F02B         	call	_ForwardOneBlock	;wreg free
  8571                           
  8572                           ;dc_motor.c: 349:     reverseDetect(&motorL, &motorR);
  8573   004F72  0E61               	movlw	low _motorL
  8574   004F74  6E1A               	movwf	reverseDetect@mL^0,c
  8575   004F76  0E01               	movlw	high _motorL
  8576   004F78  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8577   004F7A  0E58               	movlw	low _motorR
  8578   004F7C  6E1C               	movwf	reverseDetect@mR^0,c
  8579   004F7E  0E01               	movlw	high _motorR
  8580   004F80  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8581   004F82  ECF0  F02B         	call	_reverseDetect	;wreg free
  8582                           
  8583                           ;dc_motor.c: 350:     turnLeft45(&motorL, &motorR);
  8584   004F86  0E61               	movlw	low _motorL
  8585   004F88  6E1A               	movwf	turnLeft45@mL^0,c
  8586   004F8A  0E01               	movlw	high _motorL
  8587   004F8C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8588   004F8E  0E58               	movlw	low _motorR
  8589   004F90  6E1C               	movwf	turnLeft45@mR^0,c
  8590   004F92  0E01               	movlw	high _motorR
  8591   004F94  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8592   004F96  EC81  F02E         	call	_turnLeft45	;wreg free
  8593                           
  8594                           ;dc_motor.c: 351:     turnLeft45(&motorL, &motorR);
  8595   004F9A  0E61               	movlw	low _motorL
  8596   004F9C  6E1A               	movwf	turnLeft45@mL^0,c
  8597   004F9E  0E01               	movlw	high _motorL
  8598   004FA0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8599   004FA2  0E58               	movlw	low _motorR
  8600   004FA4  6E1C               	movwf	turnLeft45@mR^0,c
  8601   004FA6  0E01               	movlw	high _motorR
  8602   004FA8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8603   004FAA  EC81  F02E         	call	_turnLeft45	;wreg free
  8604                           
  8605                           ;dc_motor.c: 352:     turnLeft45(&motorL, &motorR);
  8606   004FAE  0E61               	movlw	low _motorL
  8607   004FB0  6E1A               	movwf	turnLeft45@mL^0,c
  8608   004FB2  0E01               	movlw	high _motorL
  8609   004FB4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8610   004FB6  0E58               	movlw	low _motorR
  8611   004FB8  6E1C               	movwf	turnLeft45@mR^0,c
  8612   004FBA  0E01               	movlw	high _motorR
  8613   004FBC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8614   004FBE  EC81  F02E         	call	_turnLeft45	;wreg free
  8615                           
  8616                           ;dc_motor.c: 353:     turnLeft45(&motorL, &motorR);
  8617   004FC2  0E61               	movlw	low _motorL
  8618   004FC4  6E1A               	movwf	turnLeft45@mL^0,c
  8619   004FC6  0E01               	movlw	high _motorL
  8620   004FC8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8621   004FCA  0E58               	movlw	low _motorR
  8622   004FCC  6E1C               	movwf	turnLeft45@mR^0,c
  8623   004FCE  0E01               	movlw	high _motorR
  8624   004FD0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8625   004FD2  EC81  F02E         	call	_turnLeft45	;wreg free
  8626   004FD6  0012               	return		;funcret
  8627   004FD8                     __end_of_ReversePink:
  8628                           	callstack 0
  8629                           
  8630 ;; *************** function _ForwardOneBlock *****************
  8631 ;; Defined at:
  8632 ;;		line 238 in file "dc_motor.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8635 ;;		 -> motorL(9), 
  8636 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8637 ;;		 -> motorR(9), 
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;		None
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1    wreg      void 
  8642 ;; Registers used:
  8643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8651 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8652 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8653 ;;Total ram usage:        6 bytes
  8654 ;; Hardware stack levels used: 1
  8655 ;; Hardware stack levels required when called: 4
  8656 ;; This function calls:
  8657 ;;		_fullSpeedAhead
  8658 ;;		_stop
  8659 ;; This function is called by:
  8660 ;;		_ReverseYellow
  8661 ;;		_ReversePink
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           	psect	text37
  8666   00572C                     __ptext37:
  8667                           	callstack 0
  8668   00572C                     _ForwardOneBlock:
  8669                           	callstack 24
  8670   00572C                     
  8671                           ;dc_motor.c: 239:     fullSpeedAhead(mL,mR);
  8672   00572C  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  8673   005730  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  8674   005734  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  8675   005738  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  8676   00573C  EC83  F029         	call	_fullSpeedAhead	;wreg free
  8677   005740                     
  8678                           ;dc_motor.c: 240:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  8679   005740  0EA3               	movlw	163
  8680   005742  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8681   005744  0E57               	movlw	87
  8682   005746  6E1E               	movwf	??_ForwardOneBlock^0,c
  8683   005748  0E02               	movlw	2
  8684   00574A                     u6037:
  8685   00574A  2EE8               	decfsz	wreg,f,c
  8686   00574C  D7FE               	bra	u6037
  8687   00574E  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8688   005750  D7FC               	bra	u6037
  8689   005752  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8690   005754  D7FA               	bra	u6037
  8691   005756  D000               	nop2	
  8692   005758                     
  8693                           ;dc_motor.c: 241:     stop(&motorL, &motorR);
  8694   005758  0E61               	movlw	low _motorL
  8695   00575A  6E14               	movwf	stop@mL^0,c
  8696   00575C  0E01               	movlw	high _motorL
  8697   00575E  6E15               	movwf	(stop@mL+1)^0,c
  8698   005760  0E58               	movlw	low _motorR
  8699   005762  6E16               	movwf	stop@mR^0,c
  8700   005764  0E01               	movlw	high _motorR
  8701   005766  6E17               	movwf	(stop@mR+1)^0,c
  8702   005768  EC16  F02A         	call	_stop	;wreg free
  8703                           
  8704                           ;dc_motor.c: 242:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8705   00576C  0E05               	movlw	5
  8706   00576E  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8707   005770  0E0F               	movlw	15
  8708   005772  6E1E               	movwf	??_ForwardOneBlock^0,c
  8709   005774  0EF1               	movlw	241
  8710   005776                     u6047:
  8711   005776  2EE8               	decfsz	wreg,f,c
  8712   005778  D7FE               	bra	u6047
  8713   00577A  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8714   00577C  D7FC               	bra	u6047
  8715   00577E  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8716   005780  D7FA               	bra	u6047
  8717   005782  F000               	nop	
  8718   005784  0012               	return		;funcret
  8719   005786                     __end_of_ForwardOneBlock:
  8720                           	callstack 0
  8721                           
  8722 ;; *************** function _RedMove *****************
  8723 ;; Defined at:
  8724 ;;		line 262 in file "dc_motor.c"
  8725 ;; Parameters:    Size  Location     Type
  8726 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8727 ;;		 -> motorL(9), 
  8728 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8729 ;;		 -> motorR(9), 
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;		None
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  1    wreg      void 
  8734 ;; Registers used:
  8735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8741 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8744 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8745 ;;Total ram usage:        4 bytes
  8746 ;; Hardware stack levels used: 1
  8747 ;; Hardware stack levels required when called: 5
  8748 ;; This function calls:
  8749 ;;		_reverseDetect
  8750 ;;		_turnRight45
  8751 ;; This function is called by:
  8752 ;;		_main
  8753 ;;		_go_Home
  8754 ;; This function uses a non-reentrant model
  8755 ;;
  8756                           
  8757                           	psect	text38
  8758   005EA0                     __ptext38:
  8759                           	callstack 0
  8760   005EA0                     _RedMove:
  8761                           	callstack 24
  8762   005EA0                     
  8763                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
  8764   005EA0  0E61               	movlw	low _motorL
  8765   005EA2  6E1A               	movwf	reverseDetect@mL^0,c
  8766   005EA4  0E01               	movlw	high _motorL
  8767   005EA6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8768   005EA8  0E58               	movlw	low _motorR
  8769   005EAA  6E1C               	movwf	reverseDetect@mR^0,c
  8770   005EAC  0E01               	movlw	high _motorR
  8771   005EAE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8772   005EB0  ECF0  F02B         	call	_reverseDetect	;wreg free
  8773                           
  8774                           ;dc_motor.c: 265:     turnRight45(&motorL, &motorR);
  8775   005EB4  0E61               	movlw	low _motorL
  8776   005EB6  6E1A               	movwf	turnRight45@mL^0,c
  8777   005EB8  0E01               	movlw	high _motorL
  8778   005EBA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8779   005EBC  0E58               	movlw	low _motorR
  8780   005EBE  6E1C               	movwf	turnRight45@mR^0,c
  8781   005EC0  0E01               	movlw	high _motorR
  8782   005EC2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8783   005EC4  EC5A  F02E         	call	_turnRight45	;wreg free
  8784                           
  8785                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  8786   005EC8  0E61               	movlw	low _motorL
  8787   005ECA  6E1A               	movwf	turnRight45@mL^0,c
  8788   005ECC  0E01               	movlw	high _motorL
  8789   005ECE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8790   005ED0  0E58               	movlw	low _motorR
  8791   005ED2  6E1C               	movwf	turnRight45@mR^0,c
  8792   005ED4  0E01               	movlw	high _motorR
  8793   005ED6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8794   005ED8  EC5A  F02E         	call	_turnRight45	;wreg free
  8795   005EDC  0012               	return		;funcret
  8796   005EDE                     __end_of_RedMove:
  8797                           	callstack 0
  8798                           
  8799 ;; *************** function _OrangeMove *****************
  8800 ;; Defined at:
  8801 ;;		line 308 in file "dc_motor.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8804 ;;		 -> motorL(9), 
  8805 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8806 ;;		 -> motorR(9), 
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;		None
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  1    wreg      void 
  8811 ;; Registers used:
  8812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8818 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8821 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8822 ;;Total ram usage:        4 bytes
  8823 ;; Hardware stack levels used: 1
  8824 ;; Hardware stack levels required when called: 5
  8825 ;; This function calls:
  8826 ;;		_reverseDetect
  8827 ;;		_turnRight45
  8828 ;; This function is called by:
  8829 ;;		_main
  8830 ;;		_go_Home
  8831 ;; This function uses a non-reentrant model
  8832 ;;
  8833                           
  8834                           	psect	text39
  8835   00593C                     __ptext39:
  8836                           	callstack 0
  8837   00593C                     _OrangeMove:
  8838                           	callstack 24
  8839   00593C                     
  8840                           ;dc_motor.c: 309:     reverseDetect(&motorL, &motorR);
  8841   00593C  0E61               	movlw	low _motorL
  8842   00593E  6E1A               	movwf	reverseDetect@mL^0,c
  8843   005940  0E01               	movlw	high _motorL
  8844   005942  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8845   005944  0E58               	movlw	low _motorR
  8846   005946  6E1C               	movwf	reverseDetect@mR^0,c
  8847   005948  0E01               	movlw	high _motorR
  8848   00594A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8849   00594C  ECF0  F02B         	call	_reverseDetect	;wreg free
  8850                           
  8851                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  8852   005950  0E61               	movlw	low _motorL
  8853   005952  6E1A               	movwf	turnRight45@mL^0,c
  8854   005954  0E01               	movlw	high _motorL
  8855   005956  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8856   005958  0E58               	movlw	low _motorR
  8857   00595A  6E1C               	movwf	turnRight45@mR^0,c
  8858   00595C  0E01               	movlw	high _motorR
  8859   00595E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8860   005960  EC5A  F02E         	call	_turnRight45	;wreg free
  8861                           
  8862                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  8863   005964  0E61               	movlw	low _motorL
  8864   005966  6E1A               	movwf	turnRight45@mL^0,c
  8865   005968  0E01               	movlw	high _motorL
  8866   00596A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8867   00596C  0E58               	movlw	low _motorR
  8868   00596E  6E1C               	movwf	turnRight45@mR^0,c
  8869   005970  0E01               	movlw	high _motorR
  8870   005972  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8871   005974  EC5A  F02E         	call	_turnRight45	;wreg free
  8872                           
  8873                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  8874   005978  0E61               	movlw	low _motorL
  8875   00597A  6E1A               	movwf	turnRight45@mL^0,c
  8876   00597C  0E01               	movlw	high _motorL
  8877   00597E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8878   005980  0E58               	movlw	low _motorR
  8879   005982  6E1C               	movwf	turnRight45@mR^0,c
  8880   005984  0E01               	movlw	high _motorR
  8881   005986  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8882   005988  EC5A  F02E         	call	_turnRight45	;wreg free
  8883   00598C  0012               	return		;funcret
  8884   00598E                     __end_of_OrangeMove:
  8885                           	callstack 0
  8886                           
  8887 ;; *************** function _LightBlueMove *****************
  8888 ;; Defined at:
  8889 ;;		line 317 in file "dc_motor.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8892 ;;		 -> motorL(9), 
  8893 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8894 ;;		 -> motorR(9), 
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;		None
  8897 ;; Return value:  Size  Location     Type
  8898 ;;                  1    wreg      void 
  8899 ;; Registers used:
  8900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8901 ;; Tracked objects:
  8902 ;;		On entry : 0/0
  8903 ;;		On exit  : 0/0
  8904 ;;		Unchanged: 0/0
  8905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8906 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8909 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8910 ;;Total ram usage:        4 bytes
  8911 ;; Hardware stack levels used: 1
  8912 ;; Hardware stack levels required when called: 5
  8913 ;; This function calls:
  8914 ;;		_reverseDetect
  8915 ;;		_turnLeft45
  8916 ;; This function is called by:
  8917 ;;		_main
  8918 ;;		_go_Home
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           	psect	text40
  8923   00598E                     __ptext40:
  8924                           	callstack 0
  8925   00598E                     _LightBlueMove:
  8926                           	callstack 24
  8927   00598E                     
  8928                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  8929   00598E  0E61               	movlw	low _motorL
  8930   005990  6E1A               	movwf	reverseDetect@mL^0,c
  8931   005992  0E01               	movlw	high _motorL
  8932   005994  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8933   005996  0E58               	movlw	low _motorR
  8934   005998  6E1C               	movwf	reverseDetect@mR^0,c
  8935   00599A  0E01               	movlw	high _motorR
  8936   00599C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8937   00599E  ECF0  F02B         	call	_reverseDetect	;wreg free
  8938                           
  8939                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  8940   0059A2  0E61               	movlw	low _motorL
  8941   0059A4  6E1A               	movwf	turnLeft45@mL^0,c
  8942   0059A6  0E01               	movlw	high _motorL
  8943   0059A8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8944   0059AA  0E58               	movlw	low _motorR
  8945   0059AC  6E1C               	movwf	turnLeft45@mR^0,c
  8946   0059AE  0E01               	movlw	high _motorR
  8947   0059B0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8948   0059B2  EC81  F02E         	call	_turnLeft45	;wreg free
  8949                           
  8950                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  8951   0059B6  0E61               	movlw	low _motorL
  8952   0059B8  6E1A               	movwf	turnLeft45@mL^0,c
  8953   0059BA  0E01               	movlw	high _motorL
  8954   0059BC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8955   0059BE  0E58               	movlw	low _motorR
  8956   0059C0  6E1C               	movwf	turnLeft45@mR^0,c
  8957   0059C2  0E01               	movlw	high _motorR
  8958   0059C4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8959   0059C6  EC81  F02E         	call	_turnLeft45	;wreg free
  8960                           
  8961                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  8962   0059CA  0E61               	movlw	low _motorL
  8963   0059CC  6E1A               	movwf	turnLeft45@mL^0,c
  8964   0059CE  0E01               	movlw	high _motorL
  8965   0059D0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8966   0059D2  0E58               	movlw	low _motorR
  8967   0059D4  6E1C               	movwf	turnLeft45@mR^0,c
  8968   0059D6  0E01               	movlw	high _motorR
  8969   0059D8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8970   0059DA  EC81  F02E         	call	_turnLeft45	;wreg free
  8971   0059DE  0012               	return		;funcret
  8972   0059E0                     __end_of_LightBlueMove:
  8973                           	callstack 0
  8974                           
  8975 ;; *************** function _GreenMove *****************
  8976 ;; Defined at:
  8977 ;;		line 270 in file "dc_motor.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8980 ;;		 -> motorL(9), 
  8981 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8982 ;;		 -> motorR(9), 
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;		None
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  1    wreg      void 
  8987 ;; Registers used:
  8988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8997 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8998 ;;Total ram usage:        4 bytes
  8999 ;; Hardware stack levels used: 1
  9000 ;; Hardware stack levels required when called: 5
  9001 ;; This function calls:
  9002 ;;		_reverseDetect
  9003 ;;		_turnLeft45
  9004 ;; This function is called by:
  9005 ;;		_main
  9006 ;;		_go_Home
  9007 ;; This function uses a non-reentrant model
  9008 ;;
  9009                           
  9010                           	psect	text41
  9011   005EDE                     __ptext41:
  9012                           	callstack 0
  9013   005EDE                     _GreenMove:
  9014                           	callstack 24
  9015   005EDE                     
  9016                           ;dc_motor.c: 271:     reverseDetect(&motorL, &motorR);
  9017   005EDE  0E61               	movlw	low _motorL
  9018   005EE0  6E1A               	movwf	reverseDetect@mL^0,c
  9019   005EE2  0E01               	movlw	high _motorL
  9020   005EE4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9021   005EE6  0E58               	movlw	low _motorR
  9022   005EE8  6E1C               	movwf	reverseDetect@mR^0,c
  9023   005EEA  0E01               	movlw	high _motorR
  9024   005EEC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9025   005EEE  ECF0  F02B         	call	_reverseDetect	;wreg free
  9026                           
  9027                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  9028   005EF2  0E61               	movlw	low _motorL
  9029   005EF4  6E1A               	movwf	turnLeft45@mL^0,c
  9030   005EF6  0E01               	movlw	high _motorL
  9031   005EF8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9032   005EFA  0E58               	movlw	low _motorR
  9033   005EFC  6E1C               	movwf	turnLeft45@mR^0,c
  9034   005EFE  0E01               	movlw	high _motorR
  9035   005F00  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9036   005F02  EC81  F02E         	call	_turnLeft45	;wreg free
  9037                           
  9038                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9039   005F06  0E61               	movlw	low _motorL
  9040   005F08  6E1A               	movwf	turnLeft45@mL^0,c
  9041   005F0A  0E01               	movlw	high _motorL
  9042   005F0C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9043   005F0E  0E58               	movlw	low _motorR
  9044   005F10  6E1C               	movwf	turnLeft45@mR^0,c
  9045   005F12  0E01               	movlw	high _motorR
  9046   005F14  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9047   005F16  EC81  F02E         	call	_turnLeft45	;wreg free
  9048   005F1A  0012               	return		;funcret
  9049   005F1C                     __end_of_GreenMove:
  9050                           	callstack 0
  9051                           
  9052 ;; *************** function _BlueMove *****************
  9053 ;; Defined at:
  9054 ;;		line 278 in file "dc_motor.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9057 ;;		 -> motorL(9), 
  9058 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9059 ;;		 -> motorR(9), 
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;		None
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  1    wreg      void 
  9064 ;; Registers used:
  9065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9071 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9074 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9075 ;;Total ram usage:        4 bytes
  9076 ;; Hardware stack levels used: 1
  9077 ;; Hardware stack levels required when called: 5
  9078 ;; This function calls:
  9079 ;;		_reverseDetect
  9080 ;;		_turnRight45
  9081 ;; This function is called by:
  9082 ;;		_main
  9083 ;;		_go_Home
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087                           	psect	text42
  9088   005668                     __ptext42:
  9089                           	callstack 0
  9090   005668                     _BlueMove:
  9091                           	callstack 24
  9092   005668                     
  9093                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  9094   005668  0E61               	movlw	low _motorL
  9095   00566A  6E1A               	movwf	reverseDetect@mL^0,c
  9096   00566C  0E01               	movlw	high _motorL
  9097   00566E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9098   005670  0E58               	movlw	low _motorR
  9099   005672  6E1C               	movwf	reverseDetect@mR^0,c
  9100   005674  0E01               	movlw	high _motorR
  9101   005676  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9102   005678  ECF0  F02B         	call	_reverseDetect	;wreg free
  9103                           
  9104                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  9105   00567C  0E61               	movlw	low _motorL
  9106   00567E  6E1A               	movwf	turnRight45@mL^0,c
  9107   005680  0E01               	movlw	high _motorL
  9108   005682  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9109   005684  0E58               	movlw	low _motorR
  9110   005686  6E1C               	movwf	turnRight45@mR^0,c
  9111   005688  0E01               	movlw	high _motorR
  9112   00568A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9113   00568C  EC5A  F02E         	call	_turnRight45	;wreg free
  9114                           
  9115                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  9116   005690  0E61               	movlw	low _motorL
  9117   005692  6E1A               	movwf	turnRight45@mL^0,c
  9118   005694  0E01               	movlw	high _motorL
  9119   005696  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9120   005698  0E58               	movlw	low _motorR
  9121   00569A  6E1C               	movwf	turnRight45@mR^0,c
  9122   00569C  0E01               	movlw	high _motorR
  9123   00569E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9124   0056A0  EC5A  F02E         	call	_turnRight45	;wreg free
  9125                           
  9126                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  9127   0056A4  0E61               	movlw	low _motorL
  9128   0056A6  6E1A               	movwf	turnRight45@mL^0,c
  9129   0056A8  0E01               	movlw	high _motorL
  9130   0056AA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9131   0056AC  0E58               	movlw	low _motorR
  9132   0056AE  6E1C               	movwf	turnRight45@mR^0,c
  9133   0056B0  0E01               	movlw	high _motorR
  9134   0056B2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9135   0056B4  EC5A  F02E         	call	_turnRight45	;wreg free
  9136                           
  9137                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  9138   0056B8  0E61               	movlw	low _motorL
  9139   0056BA  6E1A               	movwf	turnRight45@mL^0,c
  9140   0056BC  0E01               	movlw	high _motorL
  9141   0056BE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9142   0056C0  0E58               	movlw	low _motorR
  9143   0056C2  6E1C               	movwf	turnRight45@mR^0,c
  9144   0056C4  0E01               	movlw	high _motorR
  9145   0056C6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9146   0056C8  EC5A  F02E         	call	_turnRight45	;wreg free
  9147   0056CC  0012               	return		;funcret
  9148   0056CE                     __end_of_BlueMove:
  9149                           	callstack 0
  9150                           
  9151 ;; *************** function _getTMR0val *****************
  9152 ;; Defined at:
  9153 ;;		line 28 in file "timers.c"
  9154 ;; Parameters:    Size  Location     Type
  9155 ;;		None
  9156 ;; Auto vars:     Size  Location     Type
  9157 ;;  moving          2    0[COMRAM] int 
  9158 ;;  temp            2    0        unsigned int 
  9159 ;; Return value:  Size  Location     Type
  9160 ;;                  1    wreg      void 
  9161 ;; Registers used:
  9162 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9163 ;; Tracked objects:
  9164 ;;		On entry : 0/0
  9165 ;;		On exit  : 0/0
  9166 ;;		Unchanged: 0/0
  9167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9169 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9172 ;;Total ram usage:        2 bytes
  9173 ;; Hardware stack levels used: 1
  9174 ;; Hardware stack levels required when called: 1
  9175 ;; This function calls:
  9176 ;;		Nothing
  9177 ;; This function is called by:
  9178 ;;		_main
  9179 ;; This function uses a non-reentrant model
  9180 ;;
  9181                           
  9182                           	psect	text43
  9183   006044                     __ptext43:
  9184                           	callstack 0
  9185   006044                     _getTMR0val:
  9186                           	callstack 29
  9187   006044  50D3               	movf	211,w,c	;volatile
  9188   006046                     
  9189                           ;timers.c: 32:     int moving=TMR0H<<8;
  9190   006046  50D4               	movf	212,w,c	;volatile
  9191   006048  6E02               	movwf	(getTMR0val@moving+1)^0,c
  9192   00604A  6A01               	clrf	getTMR0val@moving^0,c
  9193   00604C                     
  9194                           ;timers.c: 33:     Time_forward[move_count]=moving;
  9195   00604C  90D8               	bcf	status,0,c
  9196   00604E  0101               	movlb	1	; () banked
  9197   006050  3514               	rlcf	_move_count& (0+255),w,b	;volatile
  9198   006052  6ED9               	movwf	fsr2l,c
  9199   006054  3515               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  9200   006056  6EDA               	movwf	fsr2h,c
  9201   006058  0E3C               	movlw	low _Time_forward
  9202   00605A  26D9               	addwf	fsr2l,f,c
  9203   00605C  0E02               	movlw	high _Time_forward
  9204   00605E  22DA               	addwfc	fsr2h,f,c
  9205   006060  C001  FFDE         	movff	getTMR0val@moving,postinc2
  9206   006064  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  9207   006068                     
  9208                           ; BSR set to: 1
  9209   006068  0012               	return		;funcret
  9210   00606A                     __end_of_getTMR0val:
  9211                           	callstack 0
  9212                           
  9213 ;; *************** function _colour_rel *****************
  9214 ;; Defined at:
  9215 ;;		line 114 in file "color.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;  vals            2   74[COMRAM] PTR struct RGB
  9218 ;;		 -> vals(8), 
  9219 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  9220 ;;		 -> rel(12), 
  9221 ;; Auto vars:     Size  Location     Type
  9222 ;;  B               4   20[BANK0 ] float 
  9223 ;;  G               4   16[BANK0 ] float 
  9224 ;;  R               4   12[BANK0 ] float 
  9225 ;;  L               4    0[BANK0 ] float 
  9226 ;; Return value:  Size  Location     Type
  9227 ;;                  1    wreg      void 
  9228 ;; Registers used:
  9229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9230 ;; Tracked objects:
  9231 ;;		On entry : 0/0
  9232 ;;		On exit  : 0/0
  9233 ;;		Unchanged: 0/0
  9234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9235 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9236 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9238 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9239 ;;Total ram usage:       28 bytes
  9240 ;; Hardware stack levels used: 1
  9241 ;; Hardware stack levels required when called: 2
  9242 ;; This function calls:
  9243 ;;		___fladd
  9244 ;;		___fldiv
  9245 ;;		___xxtofl
  9246 ;; This function is called by:
  9247 ;;		_main
  9248 ;; This function uses a non-reentrant model
  9249 ;;
  9250                           
  9251                           	psect	text44
  9252   00350A                     __ptext44:
  9253                           	callstack 0
  9254   00350A                     _colour_rel:
  9255                           	callstack 28
  9256   00350A                     
  9257                           ;color.c: 115:     float R = vals->R;
  9258   00350A  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  9259   00350E  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  9260   003512  CFDE F001          	movff	postinc2,___xxtofl@val
  9261   003516  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9262   00351A  0E00               	movlw	0
  9263   00351C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9264   00351E  0EFF               	movlw	-1
  9265   003520  6E03               	movwf	(___xxtofl@val+2)^0,c
  9266   003522  6E04               	movwf	(___xxtofl@val+3)^0,c
  9267   003524  0E01               	movlw	1
  9268   003526  EC47  F022         	call	___xxtofl
  9269   00352A  C001  F06C         	movff	?___xxtofl,colour_rel@R
  9270   00352E  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  9271   003532  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  9272   003536  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  9273                           
  9274                           ;color.c: 116:     float G = vals->G;
  9275   00353A  EE20 F002          	lfsr	2,2
  9276   00353E  504B               	movf	colour_rel@vals^0,w,c
  9277   003540  26D9               	addwf	fsr2l,f,c
  9278   003542  504C               	movf	(colour_rel@vals+1)^0,w,c
  9279   003544  22DA               	addwfc	fsr2h,f,c
  9280   003546  CFDE F001          	movff	postinc2,___xxtofl@val
  9281   00354A  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9282   00354E  0E00               	movlw	0
  9283   003550  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9284   003552  0EFF               	movlw	-1
  9285   003554  6E03               	movwf	(___xxtofl@val+2)^0,c
  9286   003556  6E04               	movwf	(___xxtofl@val+3)^0,c
  9287   003558  0E01               	movlw	1
  9288   00355A  EC47  F022         	call	___xxtofl
  9289   00355E  C001  F070         	movff	?___xxtofl,colour_rel@G
  9290   003562  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  9291   003566  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  9292   00356A  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  9293                           
  9294                           ;color.c: 117:     float B = vals->B;
  9295   00356E  EE20 F004          	lfsr	2,4
  9296   003572  504B               	movf	colour_rel@vals^0,w,c
  9297   003574  26D9               	addwf	fsr2l,f,c
  9298   003576  504C               	movf	(colour_rel@vals+1)^0,w,c
  9299   003578  22DA               	addwfc	fsr2h,f,c
  9300   00357A  CFDE F001          	movff	postinc2,___xxtofl@val
  9301   00357E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9302   003582  0E00               	movlw	0
  9303   003584  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9304   003586  0EFF               	movlw	-1
  9305   003588  6E03               	movwf	(___xxtofl@val+2)^0,c
  9306   00358A  6E04               	movwf	(___xxtofl@val+3)^0,c
  9307   00358C  0E01               	movlw	1
  9308   00358E  EC47  F022         	call	___xxtofl
  9309   003592  C001  F074         	movff	?___xxtofl,colour_rel@B
  9310   003596  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  9311   00359A  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  9312   00359E  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  9313                           
  9314                           ;color.c: 118:     float L = vals->L;
  9315   0035A2  EE20 F006          	lfsr	2,6
  9316   0035A6  504B               	movf	colour_rel@vals^0,w,c
  9317   0035A8  26D9               	addwf	fsr2l,f,c
  9318   0035AA  504C               	movf	(colour_rel@vals+1)^0,w,c
  9319   0035AC  22DA               	addwfc	fsr2h,f,c
  9320   0035AE  CFDE F001          	movff	postinc2,___xxtofl@val
  9321   0035B2  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9322   0035B6  0E00               	movlw	0
  9323   0035B8  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9324   0035BA  0EFF               	movlw	-1
  9325   0035BC  6E03               	movwf	(___xxtofl@val+2)^0,c
  9326   0035BE  6E04               	movwf	(___xxtofl@val+3)^0,c
  9327   0035C0  0E01               	movlw	1
  9328   0035C2  EC47  F022         	call	___xxtofl
  9329   0035C6  C001  F060         	movff	?___xxtofl,colour_rel@L
  9330   0035CA  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  9331   0035CE  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  9332   0035D2  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  9333   0035D6                     
  9334                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9335   0035D6  C070  F005         	movff	colour_rel@G,___fladd@a
  9336   0035DA  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9337   0035DE  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9338   0035E2  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9339   0035E6  C06C  F001         	movff	colour_rel@R,___fladd@b
  9340   0035EA  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9341   0035EE  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9342   0035F2  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9343   0035F6  EC43  F014         	call	___fladd	;wreg free
  9344   0035FA  C001  F064         	movff	?___fladd,_colour_rel$3203
  9345   0035FE  C002  F065         	movff	?___fladd+1,_colour_rel$3203+1
  9346   003602  C003  F066         	movff	?___fladd+2,_colour_rel$3203+2
  9347   003606  C004  F067         	movff	?___fladd+3,_colour_rel$3203+3
  9348   00360A                     
  9349                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9350   00360A  C074  F005         	movff	colour_rel@B,___fladd@a
  9351   00360E  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9352   003612  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9353   003616  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9354   00361A  C064  F001         	movff	_colour_rel$3203,___fladd@b
  9355   00361E  C065  F002         	movff	_colour_rel$3203+1,___fladd@b+1
  9356   003622  C066  F003         	movff	_colour_rel$3203+2,___fladd@b+2
  9357   003626  C067  F004         	movff	_colour_rel$3203+3,___fladd@b+3
  9358   00362A  EC43  F014         	call	___fladd	;wreg free
  9359   00362E  C001  F068         	movff	?___fladd,_colour_rel$3204
  9360   003632  C002  F069         	movff	?___fladd+1,_colour_rel$3204+1
  9361   003636  C003  F06A         	movff	?___fladd+2,_colour_rel$3204+2
  9362   00363A  C004  F06B         	movff	?___fladd+3,_colour_rel$3204+3
  9363                           
  9364                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9365   00363E  C06C  F032         	movff	colour_rel@R,___fldiv@b
  9366   003642  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  9367   003646  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  9368   00364A  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  9369   00364E  C060  F005         	movff	colour_rel@L,___fladd@a
  9370   003652  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9371   003656  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9372   00365A  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9373   00365E  C068  F001         	movff	_colour_rel$3204,___fladd@b
  9374   003662  C069  F002         	movff	_colour_rel$3204+1,___fladd@b+1
  9375   003666  C06A  F003         	movff	_colour_rel$3204+2,___fladd@b+2
  9376   00366A  C06B  F004         	movff	_colour_rel$3204+3,___fladd@b+3
  9377   00366E  EC43  F014         	call	___fladd	;wreg free
  9378   003672  C001  F036         	movff	?___fladd,___fldiv@a
  9379   003676  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9380   00367A  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9381   00367E  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9382   003682  ECB8  F018         	call	___fldiv	;wreg free
  9383   003686  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  9384   00368A  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  9385   00368E  C032  FFDE         	movff	?___fldiv,postinc2
  9386   003692  C033  FFDE         	movff	?___fldiv+1,postinc2
  9387   003696  C034  FFDE         	movff	?___fldiv+2,postinc2
  9388   00369A  C035  FFDE         	movff	?___fldiv+3,postinc2
  9389   00369E                     
  9390                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9391   00369E  C070  F005         	movff	colour_rel@G,___fladd@a
  9392   0036A2  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9393   0036A6  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9394   0036AA  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9395   0036AE  C06C  F001         	movff	colour_rel@R,___fladd@b
  9396   0036B2  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9397   0036B6  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9398   0036BA  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9399   0036BE  EC43  F014         	call	___fladd	;wreg free
  9400   0036C2  C001  F064         	movff	?___fladd,_colour_rel$3203
  9401   0036C6  C002  F065         	movff	?___fladd+1,_colour_rel$3203+1
  9402   0036CA  C003  F066         	movff	?___fladd+2,_colour_rel$3203+2
  9403   0036CE  C004  F067         	movff	?___fladd+3,_colour_rel$3203+3
  9404   0036D2                     
  9405                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9406   0036D2  C074  F005         	movff	colour_rel@B,___fladd@a
  9407   0036D6  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9408   0036DA  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9409   0036DE  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9410   0036E2  C064  F001         	movff	_colour_rel$3203,___fladd@b
  9411   0036E6  C065  F002         	movff	_colour_rel$3203+1,___fladd@b+1
  9412   0036EA  C066  F003         	movff	_colour_rel$3203+2,___fladd@b+2
  9413   0036EE  C067  F004         	movff	_colour_rel$3203+3,___fladd@b+3
  9414   0036F2  EC43  F014         	call	___fladd	;wreg free
  9415   0036F6  C001  F068         	movff	?___fladd,_colour_rel$3204
  9416   0036FA  C002  F069         	movff	?___fladd+1,_colour_rel$3204+1
  9417   0036FE  C003  F06A         	movff	?___fladd+2,_colour_rel$3204+2
  9418   003702  C004  F06B         	movff	?___fladd+3,_colour_rel$3204+3
  9419                           
  9420                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9421   003706  C074  F032         	movff	colour_rel@B,___fldiv@b
  9422   00370A  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  9423   00370E  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  9424   003712  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  9425   003716  C060  F005         	movff	colour_rel@L,___fladd@a
  9426   00371A  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9427   00371E  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9428   003722  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9429   003726  C068  F001         	movff	_colour_rel$3204,___fladd@b
  9430   00372A  C069  F002         	movff	_colour_rel$3204+1,___fladd@b+1
  9431   00372E  C06A  F003         	movff	_colour_rel$3204+2,___fladd@b+2
  9432   003732  C06B  F004         	movff	_colour_rel$3204+3,___fladd@b+3
  9433   003736  EC43  F014         	call	___fladd	;wreg free
  9434   00373A  C001  F036         	movff	?___fladd,___fldiv@a
  9435   00373E  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9436   003742  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9437   003746  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9438   00374A  ECB8  F018         	call	___fldiv	;wreg free
  9439   00374E  EE20 F008          	lfsr	2,8
  9440   003752  504D               	movf	colour_rel@rel^0,w,c
  9441   003754  26D9               	addwf	fsr2l,f,c
  9442   003756  504E               	movf	(colour_rel@rel+1)^0,w,c
  9443   003758  22DA               	addwfc	fsr2h,f,c
  9444   00375A  C032  FFDE         	movff	?___fldiv,postinc2
  9445   00375E  C033  FFDE         	movff	?___fldiv+1,postinc2
  9446   003762  C034  FFDE         	movff	?___fldiv+2,postinc2
  9447   003766  C035  FFDE         	movff	?___fldiv+3,postinc2
  9448   00376A                     
  9449                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9450   00376A  C070  F005         	movff	colour_rel@G,___fladd@a
  9451   00376E  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9452   003772  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9453   003776  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9454   00377A  C06C  F001         	movff	colour_rel@R,___fladd@b
  9455   00377E  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9456   003782  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9457   003786  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9458   00378A  EC43  F014         	call	___fladd	;wreg free
  9459   00378E  C001  F064         	movff	?___fladd,_colour_rel$3203
  9460   003792  C002  F065         	movff	?___fladd+1,_colour_rel$3203+1
  9461   003796  C003  F066         	movff	?___fladd+2,_colour_rel$3203+2
  9462   00379A  C004  F067         	movff	?___fladd+3,_colour_rel$3203+3
  9463   00379E                     
  9464                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9465   00379E  C074  F005         	movff	colour_rel@B,___fladd@a
  9466   0037A2  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9467   0037A6  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9468   0037AA  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9469   0037AE  C064  F001         	movff	_colour_rel$3203,___fladd@b
  9470   0037B2  C065  F002         	movff	_colour_rel$3203+1,___fladd@b+1
  9471   0037B6  C066  F003         	movff	_colour_rel$3203+2,___fladd@b+2
  9472   0037BA  C067  F004         	movff	_colour_rel$3203+3,___fladd@b+3
  9473   0037BE  EC43  F014         	call	___fladd	;wreg free
  9474   0037C2  C001  F068         	movff	?___fladd,_colour_rel$3204
  9475   0037C6  C002  F069         	movff	?___fladd+1,_colour_rel$3204+1
  9476   0037CA  C003  F06A         	movff	?___fladd+2,_colour_rel$3204+2
  9477   0037CE  C004  F06B         	movff	?___fladd+3,_colour_rel$3204+3
  9478                           
  9479                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9480   0037D2  C070  F032         	movff	colour_rel@G,___fldiv@b
  9481   0037D6  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  9482   0037DA  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  9483   0037DE  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  9484   0037E2  C060  F005         	movff	colour_rel@L,___fladd@a
  9485   0037E6  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9486   0037EA  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9487   0037EE  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9488   0037F2  C068  F001         	movff	_colour_rel$3204,___fladd@b
  9489   0037F6  C069  F002         	movff	_colour_rel$3204+1,___fladd@b+1
  9490   0037FA  C06A  F003         	movff	_colour_rel$3204+2,___fladd@b+2
  9491   0037FE  C06B  F004         	movff	_colour_rel$3204+3,___fladd@b+3
  9492   003802  EC43  F014         	call	___fladd	;wreg free
  9493   003806  C001  F036         	movff	?___fladd,___fldiv@a
  9494   00380A  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9495   00380E  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9496   003812  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9497   003816  ECB8  F018         	call	___fldiv	;wreg free
  9498   00381A  EE20 F004          	lfsr	2,4
  9499   00381E  504D               	movf	colour_rel@rel^0,w,c
  9500   003820  26D9               	addwf	fsr2l,f,c
  9501   003822  504E               	movf	(colour_rel@rel+1)^0,w,c
  9502   003824  22DA               	addwfc	fsr2h,f,c
  9503   003826  C032  FFDE         	movff	?___fldiv,postinc2
  9504   00382A  C033  FFDE         	movff	?___fldiv+1,postinc2
  9505   00382E  C034  FFDE         	movff	?___fldiv+2,postinc2
  9506   003832  C035  FFDE         	movff	?___fldiv+3,postinc2
  9507   003836  0012               	return		;funcret
  9508   003838                     __end_of_colour_rel:
  9509                           	callstack 0
  9510                           
  9511 ;; *************** function _color_click_init *****************
  9512 ;; Defined at:
  9513 ;;		line 7 in file "color.c"
  9514 ;; Parameters:    Size  Location     Type
  9515 ;;		None
  9516 ;; Auto vars:     Size  Location     Type
  9517 ;;		None
  9518 ;; Return value:  Size  Location     Type
  9519 ;;                  1    wreg      void 
  9520 ;; Registers used:
  9521 ;;		wreg, status,2, status,0, cstack
  9522 ;; Tracked objects:
  9523 ;;		On entry : 0/0
  9524 ;;		On exit  : 0/0
  9525 ;;		Unchanged: 0/0
  9526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9531 ;;Total ram usage:        1 bytes
  9532 ;; Hardware stack levels used: 1
  9533 ;; Hardware stack levels required when called: 4
  9534 ;; This function calls:
  9535 ;;		_I2C_2_Master_Init
  9536 ;;		_color_writetoaddr
  9537 ;; This function is called by:
  9538 ;;		_main
  9539 ;; This function uses a non-reentrant model
  9540 ;;
  9541                           
  9542                           	psect	text45
  9543   0059E0                     __ptext45:
  9544                           	callstack 0
  9545   0059E0                     _color_click_init:
  9546                           	callstack 26
  9547   0059E0                     
  9548                           ;color.c: 10:     I2C_2_Master_Init();
  9549   0059E0  ECF9  F02F         	call	_I2C_2_Master_Init	;wreg free
  9550   0059E4                     
  9551                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  9552   0059E4  0E01               	movlw	1
  9553   0059E6  6E03               	movwf	color_writetoaddr@value^0,c
  9554   0059E8  0E00               	movlw	0
  9555   0059EA  EC48  F030         	call	_color_writetoaddr
  9556   0059EE                     
  9557                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9558   0059EE  0E3F               	movlw	63
  9559   0059F0  6E05               	movwf	??_color_click_init^0,c
  9560   0059F2  0E55               	movlw	85
  9561   0059F4                     u6057:
  9562   0059F4  2EE8               	decfsz	wreg,f,c
  9563   0059F6  D7FE               	bra	u6057
  9564   0059F8  2E05               	decfsz	??_color_click_init^0,f,c
  9565   0059FA  D7FC               	bra	u6057
  9566   0059FC  F000               	nop	
  9567   0059FE                     
  9568                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  9569   0059FE  0E03               	movlw	3
  9570   005A00  6E03               	movwf	color_writetoaddr@value^0,c
  9571   005A02  0E00               	movlw	0
  9572   005A04  EC48  F030         	call	_color_writetoaddr
  9573   005A08                     
  9574                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  9575   005A08  0ED5               	movlw	213
  9576   005A0A  6E03               	movwf	color_writetoaddr@value^0,c
  9577   005A0C  0E01               	movlw	1
  9578   005A0E  EC48  F030         	call	_color_writetoaddr
  9579   005A12                     
  9580                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  9581   005A12  0E00               	movlw	0
  9582   005A14  6E03               	movwf	color_writetoaddr@value^0,c
  9583   005A16  0E0F               	movlw	15
  9584   005A18  EC48  F030         	call	_color_writetoaddr
  9585   005A1C                     
  9586                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  9587   005A1C  9287               	bcf	135,1,c	;volatile
  9588   005A1E                     
  9589                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  9590   005A1E  9881               	bcf	129,4,c	;volatile
  9591   005A20                     
  9592                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  9593   005A20  9E86               	bcf	134,7,c	;volatile
  9594   005A22                     
  9595                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  9596   005A22  9684               	bcf	132,3,c	;volatile
  9597   005A24                     
  9598                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  9599   005A24  9884               	bcf	132,4,c	;volatile
  9600   005A26                     
  9601                           ;color.c: 28:     LATGbits.LATG1=0;
  9602   005A26  927F               	bcf	127,1,c	;volatile
  9603   005A28                     
  9604                           ;color.c: 29:     LATFbits.LATF7=0;
  9605   005A28  9E7E               	bcf	126,7,c	;volatile
  9606   005A2A                     
  9607                           ;color.c: 30:     LATAbits.LATA4=0;
  9608   005A2A  9879               	bcf	121,4,c	;volatile
  9609   005A2C                     
  9610                           ;color.c: 32:     LATDbits.LATD3=0;
  9611   005A2C  967C               	bcf	124,3,c	;volatile
  9612   005A2E                     
  9613                           ;color.c: 33:     LATDbits.LATD4=0;
  9614   005A2E  987C               	bcf	124,4,c	;volatile
  9615   005A30  0012               	return		;funcret
  9616   005A32                     __end_of_color_click_init:
  9617                           	callstack 0
  9618                           
  9619 ;; *************** function _color_writetoaddr *****************
  9620 ;; Defined at:
  9621 ;;		line 41 in file "color.c"
  9622 ;; Parameters:    Size  Location     Type
  9623 ;;  address         1    wreg     unsigned char 
  9624 ;;  value           1    2[COMRAM] unsigned char 
  9625 ;; Auto vars:     Size  Location     Type
  9626 ;;  address         1    3[COMRAM] unsigned char 
  9627 ;; Return value:  Size  Location     Type
  9628 ;;                  1    wreg      void 
  9629 ;; Registers used:
  9630 ;;		wreg, status,2, status,0, cstack
  9631 ;; Tracked objects:
  9632 ;;		On entry : 0/0
  9633 ;;		On exit  : 0/0
  9634 ;;		Unchanged: 0/0
  9635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9636 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9640 ;;Total ram usage:        2 bytes
  9641 ;; Hardware stack levels used: 1
  9642 ;; Hardware stack levels required when called: 3
  9643 ;; This function calls:
  9644 ;;		_I2C_2_Master_Start
  9645 ;;		_I2C_2_Master_Stop
  9646 ;;		_I2C_2_Master_Write
  9647 ;; This function is called by:
  9648 ;;		_color_click_init
  9649 ;; This function uses a non-reentrant model
  9650 ;;
  9651                           
  9652                           	psect	text46
  9653   006090                     __ptext46:
  9654                           	callstack 0
  9655   006090                     _color_writetoaddr:
  9656                           	callstack 26
  9657                           
  9658                           ;incstack = 0
  9659                           ;color_writetoaddr@address stored from wreg
  9660   006090  6E04               	movwf	color_writetoaddr@address^0,c
  9661   006092                     
  9662                           ;color.c: 42:     I2C_2_Master_Start();
  9663   006092  EC99  F030         	call	_I2C_2_Master_Start	;wreg free
  9664                           
  9665                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  9666   006096  0E52               	movlw	82
  9667   006098  EC83  F030         	call	_I2C_2_Master_Write
  9668                           
  9669                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  9670   00609C  5004               	movf	color_writetoaddr@address^0,w,c
  9671   00609E  0980               	iorlw	128
  9672   0060A0  EC83  F030         	call	_I2C_2_Master_Write
  9673                           
  9674                           ;color.c: 45:     I2C_2_Master_Write(value);
  9675   0060A4  5003               	movf	color_writetoaddr@value^0,w,c
  9676   0060A6  EC83  F030         	call	_I2C_2_Master_Write
  9677                           
  9678                           ;color.c: 46:     I2C_2_Master_Stop();
  9679   0060AA  EC94  F030         	call	_I2C_2_Master_Stop	;wreg free
  9680   0060AE  0012               	return		;funcret
  9681   0060B0                     __end_of_color_writetoaddr:
  9682                           	callstack 0
  9683                           
  9684 ;; *************** function _I2C_2_Master_Write *****************
  9685 ;; Defined at:
  9686 ;;		line 45 in file "i2c.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;  data_byte       1    wreg     unsigned char 
  9689 ;; Auto vars:     Size  Location     Type
  9690 ;;  data_byte       1    1[COMRAM] unsigned char 
  9691 ;; Return value:  Size  Location     Type
  9692 ;;                  1    wreg      void 
  9693 ;; Registers used:
  9694 ;;		wreg, status,2, status,0, cstack
  9695 ;; Tracked objects:
  9696 ;;		On entry : 0/0
  9697 ;;		On exit  : 0/0
  9698 ;;		Unchanged: 0/0
  9699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9703 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9704 ;;Total ram usage:        1 bytes
  9705 ;; Hardware stack levels used: 1
  9706 ;; Hardware stack levels required when called: 2
  9707 ;; This function calls:
  9708 ;;		_I2C_2_Master_Idle
  9709 ;; This function is called by:
  9710 ;;		_color_writetoaddr
  9711 ;;		_color_read_lum
  9712 ;;		_color_read_Red
  9713 ;;		_color_read_Green
  9714 ;;		_color_read_Blue
  9715 ;; This function uses a non-reentrant model
  9716 ;;
  9717                           
  9718                           	psect	text47
  9719   006106                     __ptext47:
  9720                           	callstack 0
  9721   006106                     _I2C_2_Master_Write:
  9722                           	callstack 26
  9723                           
  9724                           ;incstack = 0
  9725                           ;I2C_2_Master_Write@data_byte stored from wreg
  9726   006106  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9727   006108                     
  9728                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9729   006108  EC0E  F030         	call	_I2C_2_Master_Idle	;wreg free
  9730   00610C                     
  9731                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9732   00610C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9733   006110  0012               	return		;funcret
  9734   006112                     __end_of_I2C_2_Master_Write:
  9735                           	callstack 0
  9736                           
  9737 ;; *************** function _I2C_2_Master_Stop *****************
  9738 ;; Defined at:
  9739 ;;		line 39 in file "i2c.c"
  9740 ;; Parameters:    Size  Location     Type
  9741 ;;		None
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;		None
  9744 ;; Return value:  Size  Location     Type
  9745 ;;                  1    wreg      void 
  9746 ;; Registers used:
  9747 ;;		wreg, status,2, status,0, cstack
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9757 ;;Total ram usage:        0 bytes
  9758 ;; Hardware stack levels used: 1
  9759 ;; Hardware stack levels required when called: 2
  9760 ;; This function calls:
  9761 ;;		_I2C_2_Master_Idle
  9762 ;; This function is called by:
  9763 ;;		_color_writetoaddr
  9764 ;;		_color_read_lum
  9765 ;;		_color_read_Red
  9766 ;;		_color_read_Green
  9767 ;;		_color_read_Blue
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           	psect	text48
  9772   006128                     __ptext48:
  9773                           	callstack 0
  9774   006128                     _I2C_2_Master_Stop:
  9775                           	callstack 26
  9776   006128                     
  9777                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9778   006128  EC0E  F030         	call	_I2C_2_Master_Idle	;wreg free
  9779   00612C                     
  9780                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9781   00612C  010E               	movlb	14	; () banked
  9782   00612E  85DA               	bsf	218,2,b	;volatile
  9783   006130                     
  9784                           ; BSR set to: 14
  9785   006130  0012               	return		;funcret
  9786   006132                     __end_of_I2C_2_Master_Stop:
  9787                           	callstack 0
  9788                           
  9789 ;; *************** function _I2C_2_Master_Start *****************
  9790 ;; Defined at:
  9791 ;;		line 27 in file "i2c.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;		None
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;		None
  9796 ;; Return value:  Size  Location     Type
  9797 ;;                  1    wreg      void 
  9798 ;; Registers used:
  9799 ;;		wreg, status,2, status,0, cstack
  9800 ;; Tracked objects:
  9801 ;;		On entry : 0/0
  9802 ;;		On exit  : 0/0
  9803 ;;		Unchanged: 0/0
  9804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9809 ;;Total ram usage:        0 bytes
  9810 ;; Hardware stack levels used: 1
  9811 ;; Hardware stack levels required when called: 2
  9812 ;; This function calls:
  9813 ;;		_I2C_2_Master_Idle
  9814 ;; This function is called by:
  9815 ;;		_color_writetoaddr
  9816 ;;		_color_read_lum
  9817 ;;		_color_read_Red
  9818 ;;		_color_read_Green
  9819 ;;		_color_read_Blue
  9820 ;; This function uses a non-reentrant model
  9821 ;;
  9822                           
  9823                           	psect	text49
  9824   006132                     __ptext49:
  9825                           	callstack 0
  9826   006132                     _I2C_2_Master_Start:
  9827                           	callstack 26
  9828   006132                     
  9829                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9830   006132  EC0E  F030         	call	_I2C_2_Master_Idle	;wreg free
  9831   006136                     
  9832                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9833   006136  010E               	movlb	14	; () banked
  9834   006138  81DA               	bsf	218,0,b	;volatile
  9835   00613A                     
  9836                           ; BSR set to: 14
  9837   00613A  0012               	return		;funcret
  9838   00613C                     __end_of_I2C_2_Master_Start:
  9839                           	callstack 0
  9840                           
  9841 ;; *************** function _I2C_2_Master_Idle *****************
  9842 ;; Defined at:
  9843 ;;		line 22 in file "i2c.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;		None
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;		None
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  1    wreg      void 
  9850 ;; Registers used:
  9851 ;;		wreg, status,2, status,0
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9860 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9861 ;;Total ram usage:        1 bytes
  9862 ;; Hardware stack levels used: 1
  9863 ;; Hardware stack levels required when called: 1
  9864 ;; This function calls:
  9865 ;;		Nothing
  9866 ;; This function is called by:
  9867 ;;		_I2C_2_Master_Start
  9868 ;;		_I2C_2_Master_RepStart
  9869 ;;		_I2C_2_Master_Stop
  9870 ;;		_I2C_2_Master_Write
  9871 ;;		_I2C_2_Master_Read
  9872 ;; This function uses a non-reentrant model
  9873 ;;
  9874                           
  9875                           	psect	text50
  9876   00601C                     __ptext50:
  9877                           	callstack 0
  9878   00601C                     _I2C_2_Master_Idle:
  9879                           	callstack 26
  9880   00601C                     l143:
  9881   00601C  010E               	movlb	14	; () banked
  9882   00601E  B5D8               	btfsc	216,2,b	;volatile
  9883   006020  EF14  F030         	goto	u4391
  9884   006024  EF16  F030         	goto	u4390
  9885   006028                     u4391:
  9886   006028  EF0E  F030         	goto	l143
  9887   00602C                     u4390:
  9888   00602C                     
  9889                           ; BSR set to: 14
  9890   00602C  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9891   006030  0E1F               	movlw	31
  9892   006032  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9893   006034  A4D8               	btfss	status,2,c
  9894   006036  EF1F  F030         	goto	u4401
  9895   00603A  EF21  F030         	goto	u4400
  9896   00603E                     u4401:
  9897   00603E  EF0E  F030         	goto	l143
  9898   006042                     u4400:
  9899   006042                     
  9900                           ; BSR set to: 14
  9901   006042  0012               	return		;funcret
  9902   006044                     __end_of_I2C_2_Master_Idle:
  9903                           	callstack 0
  9904                           
  9905 ;; *************** function _I2C_2_Master_Init *****************
  9906 ;; Defined at:
  9907 ;;		line 4 in file "i2c.c"
  9908 ;; Parameters:    Size  Location     Type
  9909 ;;		None
  9910 ;; Auto vars:     Size  Location     Type
  9911 ;;		None
  9912 ;; Return value:  Size  Location     Type
  9913 ;;                  1    wreg      void 
  9914 ;; Registers used:
  9915 ;;		wreg, status,2
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9925 ;;Total ram usage:        0 bytes
  9926 ;; Hardware stack levels used: 1
  9927 ;; Hardware stack levels required when called: 1
  9928 ;; This function calls:
  9929 ;;		Nothing
  9930 ;; This function is called by:
  9931 ;;		_color_click_init
  9932 ;;		_main
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           	psect	text51
  9937   005FF2                     __ptext51:
  9938                           	callstack 0
  9939   005FF2                     _I2C_2_Master_Init:
  9940                           	callstack 28
  9941   005FF2                     
  9942                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9943   005FF2  010E               	movlb	14	; () banked
  9944   005FF4  51D9               	movf	217,w,b	;volatile
  9945   005FF6  0BF0               	andlw	-16
  9946   005FF8  0908               	iorlw	8
  9947   005FFA  6FD9               	movwf	217,b	;volatile
  9948   005FFC                     
  9949                           ; BSR set to: 14
  9950                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9951   005FFC  8BD9               	bsf	217,5,b	;volatile
  9952                           
  9953                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9954   005FFE  0E9F               	movlw	159
  9955   006000  6FD6               	movwf	214,b	;volatile
  9956   006002                     
  9957                           ; BSR set to: 14
  9958                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9959   006002  8A84               	bsf	132,5,c	;volatile
  9960   006004                     
  9961                           ; BSR set to: 14
  9962                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9963   006004  8C84               	bsf	132,6,c	;volatile
  9964   006006                     
  9965                           ; BSR set to: 14
  9966                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9967   006006  9BA7               	bcf	167,5,b	;volatile
  9968   006008                     
  9969                           ; BSR set to: 14
  9970                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9971   006008  9DA7               	bcf	167,6,b	;volatile
  9972                           
  9973                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9974   00600A  0E1D               	movlw	29
  9975   00600C  6F1D               	movwf	29,b	;volatile
  9976                           
  9977                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9978   00600E  0E1E               	movlw	30
  9979   006010  6F1C               	movwf	28,b	;volatile
  9980                           
  9981                           ;i2c.c: 18:   RD5PPS=0x1C;
  9982   006012  0E1C               	movlw	28
  9983   006014  6F6F               	movwf	111,b	;volatile
  9984                           
  9985                           ;i2c.c: 19:   RD6PPS=0x1B;
  9986   006016  0E1B               	movlw	27
  9987   006018  6F70               	movwf	112,b	;volatile
  9988   00601A                     
  9989                           ; BSR set to: 14
  9990   00601A  0012               	return		;funcret
  9991   00601C                     __end_of_I2C_2_Master_Init:
  9992                           	callstack 0
  9993                           
  9994 ;; *************** function _YellowMove *****************
  9995 ;; Defined at:
  9996 ;;		line 288 in file "dc_motor.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9999 ;;		 -> motorL(9), 
 10000 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10001 ;;		 -> motorR(9), 
 10002 ;; Auto vars:     Size  Location     Type
 10003 ;;		None
 10004 ;; Return value:  Size  Location     Type
 10005 ;;                  1    wreg      void 
 10006 ;; Registers used:
 10007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10008 ;; Tracked objects:
 10009 ;;		On entry : 0/0
 10010 ;;		On exit  : 0/0
 10011 ;;		Unchanged: 0/0
 10012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10013 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10016 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10017 ;;Total ram usage:        4 bytes
 10018 ;; Hardware stack levels used: 1
 10019 ;; Hardware stack levels required when called: 5
 10020 ;; This function calls:
 10021 ;;		_reverseDetect
 10022 ;;		_reverseOneBlock
 10023 ;;		_turnRight45
 10024 ;; This function is called by:
 10025 ;;		_main
 10026 ;; This function uses a non-reentrant model
 10027 ;;
 10028                           
 10029                           	psect	text52
 10030   005A32                     __ptext52:
 10031                           	callstack 0
 10032   005A32                     _YellowMove:
 10033                           	callstack 25
 10034   005A32                     
 10035                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
 10036   005A32  0E61               	movlw	low _motorL
 10037   005A34  6E1A               	movwf	reverseDetect@mL^0,c
 10038   005A36  0E01               	movlw	high _motorL
 10039   005A38  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10040   005A3A  0E58               	movlw	low _motorR
 10041   005A3C  6E1C               	movwf	reverseDetect@mR^0,c
 10042   005A3E  0E01               	movlw	high _motorR
 10043   005A40  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10044   005A42  ECF0  F02B         	call	_reverseDetect	;wreg free
 10045                           
 10046                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
 10047   005A46  0E61               	movlw	low _motorL
 10048   005A48  6E1A               	movwf	reverseOneBlock@mL^0,c
 10049   005A4A  0E01               	movlw	high _motorL
 10050   005A4C  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10051   005A4E  0E58               	movlw	low _motorR
 10052   005A50  6E1C               	movwf	reverseOneBlock@mR^0,c
 10053   005A52  0E01               	movlw	high _motorR
 10054   005A54  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10055   005A56  ECC3  F02B         	call	_reverseOneBlock	;wreg free
 10056                           
 10057                           ;dc_motor.c: 293:     turnRight45(&motorL, &motorR);
 10058   005A5A  0E61               	movlw	low _motorL
 10059   005A5C  6E1A               	movwf	turnRight45@mL^0,c
 10060   005A5E  0E01               	movlw	high _motorL
 10061   005A60  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10062   005A62  0E58               	movlw	low _motorR
 10063   005A64  6E1C               	movwf	turnRight45@mR^0,c
 10064   005A66  0E01               	movlw	high _motorR
 10065   005A68  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10066   005A6A  EC5A  F02E         	call	_turnRight45	;wreg free
 10067                           
 10068                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
 10069   005A6E  0E61               	movlw	low _motorL
 10070   005A70  6E1A               	movwf	turnRight45@mL^0,c
 10071   005A72  0E01               	movlw	high _motorL
 10072   005A74  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10073   005A76  0E58               	movlw	low _motorR
 10074   005A78  6E1C               	movwf	turnRight45@mR^0,c
 10075   005A7A  0E01               	movlw	high _motorR
 10076   005A7C  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10077   005A7E  EC5A  F02E         	call	_turnRight45	;wreg free
 10078   005A82  0012               	return		;funcret
 10079   005A84                     __end_of_YellowMove:
 10080                           	callstack 0
 10081                           
 10082 ;; *************** function _turnRight45 *****************
 10083 ;; Defined at:
 10084 ;;		line 211 in file "dc_motor.c"
 10085 ;; Parameters:    Size  Location     Type
 10086 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10087 ;;		 -> motorL(9), 
 10088 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10089 ;;		 -> motorR(9), 
 10090 ;; Auto vars:     Size  Location     Type
 10091 ;;		None
 10092 ;; Return value:  Size  Location     Type
 10093 ;;                  1    wreg      void 
 10094 ;; Registers used:
 10095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10096 ;; Tracked objects:
 10097 ;;		On entry : 0/0
 10098 ;;		On exit  : 0/0
 10099 ;;		Unchanged: 0/0
 10100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10101 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10104 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10105 ;;Total ram usage:        6 bytes
 10106 ;; Hardware stack levels used: 1
 10107 ;; Hardware stack levels required when called: 4
 10108 ;; This function calls:
 10109 ;;		_TurnDelay
 10110 ;;		_stop
 10111 ;;		_turnRight
 10112 ;; This function is called by:
 10113 ;;		_RedMove
 10114 ;;		_BlueMove
 10115 ;;		_YellowMove
 10116 ;;		_OrangeMove
 10117 ;;		_ReverseYellow
 10118 ;; This function uses a non-reentrant model
 10119 ;;
 10120                           
 10121                           	psect	text53
 10122   005CB4                     __ptext53:
 10123                           	callstack 0
 10124   005CB4                     _turnRight45:
 10125                           	callstack 24
 10126   005CB4                     
 10127                           ;dc_motor.c: 212:     turnRight(mL,mR);
 10128   005CB4  C01A  F014         	movff	turnRight45@mL,turnRight@mL
 10129   005CB8  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 10130   005CBC  C01C  F016         	movff	turnRight45@mR,turnRight@mR
 10131   005CC0  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 10132   005CC4  EC96  F028         	call	_turnRight	;wreg free
 10133   005CC8                     
 10134                           ;dc_motor.c: 213:     TurnDelay(Turn45Delay);
 10135   005CC8  C0F2  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10136   005CCC  C0F3  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10137   005CD0  ECC6  F02F         	call	_TurnDelay	;wreg free
 10138   005CD4                     
 10139                           ;dc_motor.c: 214:     stop(&motorL, &motorR);
 10140   005CD4  0E61               	movlw	low _motorL
 10141   005CD6  6E14               	movwf	stop@mL^0,c
 10142   005CD8  0E01               	movlw	high _motorL
 10143   005CDA  6E15               	movwf	(stop@mL+1)^0,c
 10144   005CDC  0E58               	movlw	low _motorR
 10145   005CDE  6E16               	movwf	stop@mR^0,c
 10146   005CE0  0E01               	movlw	high _motorR
 10147   005CE2  6E17               	movwf	(stop@mR+1)^0,c
 10148   005CE4  EC16  F02A         	call	_stop	;wreg free
 10149   005CE8                     
 10150                           ;dc_motor.c: 215:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10151   005CE8  0E05               	movlw	5
 10152   005CEA  6E1F               	movwf	(??_turnRight45+1)^0,c
 10153   005CEC  0E0F               	movlw	15
 10154   005CEE  6E1E               	movwf	??_turnRight45^0,c
 10155   005CF0  0EF1               	movlw	241
 10156   005CF2                     u6067:
 10157   005CF2  2EE8               	decfsz	wreg,f,c
 10158   005CF4  D7FE               	bra	u6067
 10159   005CF6  2E1E               	decfsz	??_turnRight45^0,f,c
 10160   005CF8  D7FC               	bra	u6067
 10161   005CFA  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
 10162   005CFC  D7FA               	bra	u6067
 10163   005CFE  F000               	nop	
 10164   005D00  0012               	return		;funcret
 10165   005D02                     __end_of_turnRight45:
 10166                           	callstack 0
 10167                           
 10168 ;; *************** function _turnRight *****************
 10169 ;; Defined at:
 10170 ;;		line 129 in file "dc_motor.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10173 ;;		 -> motorL(9), 
 10174 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10175 ;;		 -> motorR(9), 
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;		None
 10178 ;; Return value:  Size  Location     Type
 10179 ;;                  1    wreg      void 
 10180 ;; Registers used:
 10181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10182 ;; Tracked objects:
 10183 ;;		On entry : 0/0
 10184 ;;		On exit  : 0/0
 10185 ;;		Unchanged: 0/0
 10186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10189 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10190 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10191 ;;Total ram usage:        6 bytes
 10192 ;; Hardware stack levels used: 1
 10193 ;; Hardware stack levels required when called: 3
 10194 ;; This function calls:
 10195 ;;		_setMotorPWM
 10196 ;; This function is called by:
 10197 ;;		_turnRight45
 10198 ;; This function uses a non-reentrant model
 10199 ;;
 10200                           
 10201                           	psect	text54
 10202   00512C                     __ptext54:
 10203                           	callstack 0
 10204   00512C                     _turnRight:
 10205                           	callstack 24
 10206   00512C                     
 10207                           ;dc_motor.c: 129: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          0: {;dc_motor.c: 131:     mL->direction =1;
 10208   00512C  EE20 F001          	lfsr	2,1
 10209   005130  5014               	movf	turnRight@mL^0,w,c
 10210   005132  26D9               	addwf	fsr2l,f,c
 10211   005134  5015               	movf	(turnRight@mL+1)^0,w,c
 10212   005136  22DA               	addwfc	fsr2h,f,c
 10213   005138  0E01               	movlw	1
 10214   00513A  6EDF               	movwf	indf2,c
 10215                           
 10216                           ;dc_motor.c: 132:     mR->direction =0;
 10217   00513C  EE20 F001          	lfsr	2,1
 10218   005140  5016               	movf	turnRight@mR^0,w,c
 10219   005142  26D9               	addwf	fsr2l,f,c
 10220   005144  5017               	movf	(turnRight@mR+1)^0,w,c
 10221   005146  22DA               	addwfc	fsr2h,f,c
 10222   005148  0E00               	movlw	0
 10223   00514A  6EDF               	movwf	indf2,c
 10224                           
 10225                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
 10226   00514C  EFCC  F028         	goto	l4659
 10227   005150                     l4651:
 10228                           
 10229                           ;dc_motor.c: 136:         mL->power+=10;
 10230   005150  C014  FFD9         	movff	turnRight@mL,fsr2l
 10231   005154  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10232   005158  0E0A               	movlw	10
 10233   00515A  26DF               	addwf	indf2,f,c
 10234                           
 10235                           ;dc_motor.c: 137:         mR->power+=10;
 10236   00515C  C016  FFD9         	movff	turnRight@mR,fsr2l
 10237   005160  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10238   005164  0E0A               	movlw	10
 10239   005166  26DF               	addwf	indf2,f,c
 10240   005168                     
 10241                           ;dc_motor.c: 139:         setMotorPWM(mL);
 10242   005168  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 10243   00516C  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 10244   005170  ECE5  F023         	call	_setMotorPWM	;wreg free
 10245   005174                     
 10246                           ;dc_motor.c: 140:         setMotorPWM(mR);
 10247   005174  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 10248   005178  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 10249   00517C  ECE5  F023         	call	_setMotorPWM	;wreg free
 10250   005180                     
 10251                           ;dc_motor.c: 142:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10252   005180  0E02               	movlw	2
 10253   005182  6E19               	movwf	(??_turnRight+1)^0,c
 10254   005184  0EA0               	movlw	160
 10255   005186  6E18               	movwf	??_turnRight^0,c
 10256   005188  0E92               	movlw	146
 10257   00518A                     u6077:
 10258   00518A  2EE8               	decfsz	wreg,f,c
 10259   00518C  D7FE               	bra	u6077
 10260   00518E  2E18               	decfsz	??_turnRight^0,f,c
 10261   005190  D7FC               	bra	u6077
 10262   005192  2E19               	decfsz	(??_turnRight+1)^0,f,c
 10263   005194  D7FA               	bra	u6077
 10264   005196  D000               	nop2	
 10265   005198                     l4659:
 10266   005198  C014  FFD9         	movff	turnRight@mL,fsr2l
 10267   00519C  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10268   0051A0  0E1E               	movlw	30
 10269   0051A2  60DF               	cpfslt	indf2,c
 10270   0051A4  EFD6  F028         	goto	u4471
 10271   0051A8  EFD8  F028         	goto	u4470
 10272   0051AC                     u4471:
 10273   0051AC  EFE4  F028         	goto	l492
 10274   0051B0                     u4470:
 10275   0051B0  C016  FFD9         	movff	turnRight@mR,fsr2l
 10276   0051B4  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10277   0051B8  0E1D               	movlw	29
 10278   0051BA  64DF               	cpfsgt	indf2,c
 10279   0051BC  EFE2  F028         	goto	u4481
 10280   0051C0  EFE4  F028         	goto	u4480
 10281   0051C4                     u4481:
 10282   0051C4  EFA8  F028         	goto	l4651
 10283   0051C8                     u4480:
 10284   0051C8                     l492:
 10285   0051C8  0012               	return		;funcret
 10286   0051CA                     __end_of_turnRight:
 10287                           	callstack 0
 10288                           
 10289 ;; *************** function _Timer0_init *****************
 10290 ;; Defined at:
 10291 ;;		line 8 in file "timers.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;		None
 10294 ;; Auto vars:     Size  Location     Type
 10295 ;;		None
 10296 ;; Return value:  Size  Location     Type
 10297 ;;                  1    wreg      void 
 10298 ;; Registers used:
 10299 ;;		wreg, status,2
 10300 ;; Tracked objects:
 10301 ;;		On entry : 0/0
 10302 ;;		On exit  : 0/0
 10303 ;;		Unchanged: 0/0
 10304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10309 ;;Total ram usage:        0 bytes
 10310 ;; Hardware stack levels used: 1
 10311 ;; Hardware stack levels required when called: 1
 10312 ;; This function calls:
 10313 ;;		Nothing
 10314 ;; This function is called by:
 10315 ;;		_main
 10316 ;; This function uses a non-reentrant model
 10317 ;;
 10318                           
 10319                           	psect	text55
 10320   0060B0                     __ptext55:
 10321                           	callstack 0
 10322   0060B0                     _Timer0_init:
 10323                           	callstack 29
 10324   0060B0                     
 10325                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 10326   0060B0  50D6               	movf	214,w,c	;volatile
 10327   0060B2  0B1F               	andlw	-225
 10328   0060B4  0940               	iorlw	64
 10329   0060B6  6ED6               	movwf	214,c	;volatile
 10330   0060B8                     
 10331                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 10332   0060B8  88D6               	bsf	214,4,c	;volatile
 10333                           
 10334                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
 10335   0060BA  50D6               	movf	214,w,c	;volatile
 10336   0060BC  0BF0               	andlw	-16
 10337   0060BE  090E               	iorlw	14
 10338   0060C0  6ED6               	movwf	214,c	;volatile
 10339   0060C2                     
 10340                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 10341   0060C2  88D5               	bsf	213,4,c	;volatile
 10342                           
 10343                           ;timers.c: 16:     TMR0H=0;
 10344   0060C4  0E00               	movlw	0
 10345   0060C6  6ED4               	movwf	212,c	;volatile
 10346                           
 10347                           ;timers.c: 17:     TMR0L=0;
 10348   0060C8  0E00               	movlw	0
 10349   0060CA  6ED3               	movwf	211,c	;volatile
 10350   0060CC                     
 10351                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 10352   0060CC  9ED5               	bcf	213,7,c	;volatile
 10353   0060CE  0012               	return		;funcret
 10354   0060D0                     __end_of_Timer0_init:
 10355                           	callstack 0
 10356                           
 10357 ;; *************** function _RetryMove *****************
 10358 ;; Defined at:
 10359 ;;		line 325 in file "dc_motor.c"
 10360 ;; Parameters:    Size  Location     Type
 10361 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10362 ;;		 -> motorL(9), 
 10363 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10364 ;;		 -> motorR(9), 
 10365 ;; Auto vars:     Size  Location     Type
 10366 ;;		None
 10367 ;; Return value:  Size  Location     Type
 10368 ;;                  1    wreg      void 
 10369 ;; Registers used:
 10370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10371 ;; Tracked objects:
 10372 ;;		On entry : 0/0
 10373 ;;		On exit  : 0/0
 10374 ;;		Unchanged: 0/0
 10375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10376 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10379 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10380 ;;Total ram usage:        6 bytes
 10381 ;; Hardware stack levels used: 1
 10382 ;; Hardware stack levels required when called: 5
 10383 ;; This function calls:
 10384 ;;		_fullSpeedAhead
 10385 ;;		_reverseDetect
 10386 ;;		_stop
 10387 ;; This function is called by:
 10388 ;;		_main
 10389 ;; This function uses a non-reentrant model
 10390 ;;
 10391                           
 10392                           	psect	text56
 10393   005598                     __ptext56:
 10394                           	callstack 0
 10395   005598                     _RetryMove:
 10396                           	callstack 25
 10397   005598                     
 10398                           ;dc_motor.c: 326:     reverseDetect(&motorL, &motorR);
 10399   005598  0E61               	movlw	low _motorL
 10400   00559A  6E1A               	movwf	reverseDetect@mL^0,c
 10401   00559C  0E01               	movlw	high _motorL
 10402   00559E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10403   0055A0  0E58               	movlw	low _motorR
 10404   0055A2  6E1C               	movwf	reverseDetect@mR^0,c
 10405   0055A4  0E01               	movlw	high _motorR
 10406   0055A6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10407   0055A8  ECF0  F02B         	call	_reverseDetect	;wreg free
 10408                           
 10409                           ;dc_motor.c: 327:     stop(&motorL, &motorR);
 10410   0055AC  0E61               	movlw	low _motorL
 10411   0055AE  6E14               	movwf	stop@mL^0,c
 10412   0055B0  0E01               	movlw	high _motorL
 10413   0055B2  6E15               	movwf	(stop@mL+1)^0,c
 10414   0055B4  0E58               	movlw	low _motorR
 10415   0055B6  6E16               	movwf	stop@mR^0,c
 10416   0055B8  0E01               	movlw	high _motorR
 10417   0055BA  6E17               	movwf	(stop@mR+1)^0,c
 10418   0055BC  EC16  F02A         	call	_stop	;wreg free
 10419                           
 10420                           ;dc_motor.c: 328:     fullSpeedAhead(mL,mR);
 10421   0055C0  C020  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
 10422   0055C4  C021  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
 10423   0055C8  C022  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
 10424   0055CC  C023  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
 10425   0055D0  EC83  F029         	call	_fullSpeedAhead	;wreg free
 10426   0055D4                     
 10427                           ;dc_motor.c: 329:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10428   0055D4  0E29               	movlw	41
 10429   0055D6  6E25               	movwf	(??_RetryMove+1)^0,c
 10430   0055D8  0E96               	movlw	150
 10431   0055DA  6E24               	movwf	??_RetryMove^0,c
 10432   0055DC  0E7F               	movlw	127
 10433   0055DE                     u6087:
 10434   0055DE  2EE8               	decfsz	wreg,f,c
 10435   0055E0  D7FE               	bra	u6087
 10436   0055E2  2E24               	decfsz	??_RetryMove^0,f,c
 10437   0055E4  D7FC               	bra	u6087
 10438   0055E6  2E25               	decfsz	(??_RetryMove+1)^0,f,c
 10439   0055E8  D7FA               	bra	u6087
 10440   0055EA  F000               	nop	
 10441   0055EC                     
 10442                           ;dc_motor.c: 330:     stop(&motorL, &motorR);
 10443   0055EC  0E61               	movlw	low _motorL
 10444   0055EE  6E14               	movwf	stop@mL^0,c
 10445   0055F0  0E01               	movlw	high _motorL
 10446   0055F2  6E15               	movwf	(stop@mL+1)^0,c
 10447   0055F4  0E58               	movlw	low _motorR
 10448   0055F6  6E16               	movwf	stop@mR^0,c
 10449   0055F8  0E01               	movlw	high _motorR
 10450   0055FA  6E17               	movwf	(stop@mR+1)^0,c
 10451   0055FC  EC16  F02A         	call	_stop	;wreg free
 10452   005600  0012               	return		;funcret
 10453   005602                     __end_of_RetryMove:
 10454                           	callstack 0
 10455                           
 10456 ;; *************** function _PinkMove *****************
 10457 ;; Defined at:
 10458 ;;		line 298 in file "dc_motor.c"
 10459 ;; Parameters:    Size  Location     Type
 10460 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10461 ;;		 -> motorL(9), 
 10462 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10463 ;;		 -> motorR(9), 
 10464 ;; Auto vars:     Size  Location     Type
 10465 ;;		None
 10466 ;; Return value:  Size  Location     Type
 10467 ;;                  1    wreg      void 
 10468 ;; Registers used:
 10469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10470 ;; Tracked objects:
 10471 ;;		On entry : 0/0
 10472 ;;		On exit  : 0/0
 10473 ;;		Unchanged: 0/0
 10474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10475 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10478 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10479 ;;Total ram usage:        4 bytes
 10480 ;; Hardware stack levels used: 1
 10481 ;; Hardware stack levels required when called: 5
 10482 ;; This function calls:
 10483 ;;		_reverseDetect
 10484 ;;		_reverseOneBlock
 10485 ;;		_turnLeft45
 10486 ;; This function is called by:
 10487 ;;		_main
 10488 ;; This function uses a non-reentrant model
 10489 ;;
 10490                           
 10491                           	psect	text57
 10492   005A84                     __ptext57:
 10493                           	callstack 0
 10494   005A84                     _PinkMove:
 10495                           	callstack 25
 10496   005A84                     
 10497                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
 10498   005A84  0E61               	movlw	low _motorL
 10499   005A86  6E1A               	movwf	reverseDetect@mL^0,c
 10500   005A88  0E01               	movlw	high _motorL
 10501   005A8A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10502   005A8C  0E58               	movlw	low _motorR
 10503   005A8E  6E1C               	movwf	reverseDetect@mR^0,c
 10504   005A90  0E01               	movlw	high _motorR
 10505   005A92  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10506   005A94  ECF0  F02B         	call	_reverseDetect	;wreg free
 10507                           
 10508                           ;dc_motor.c: 301:     reverseOneBlock(&motorL, &motorR);
 10509   005A98  0E61               	movlw	low _motorL
 10510   005A9A  6E1A               	movwf	reverseOneBlock@mL^0,c
 10511   005A9C  0E01               	movlw	high _motorL
 10512   005A9E  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10513   005AA0  0E58               	movlw	low _motorR
 10514   005AA2  6E1C               	movwf	reverseOneBlock@mR^0,c
 10515   005AA4  0E01               	movlw	high _motorR
 10516   005AA6  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10517   005AA8  ECC3  F02B         	call	_reverseOneBlock	;wreg free
 10518                           
 10519                           ;dc_motor.c: 303:     turnLeft45(&motorL, &motorR);
 10520   005AAC  0E61               	movlw	low _motorL
 10521   005AAE  6E1A               	movwf	turnLeft45@mL^0,c
 10522   005AB0  0E01               	movlw	high _motorL
 10523   005AB2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10524   005AB4  0E58               	movlw	low _motorR
 10525   005AB6  6E1C               	movwf	turnLeft45@mR^0,c
 10526   005AB8  0E01               	movlw	high _motorR
 10527   005ABA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10528   005ABC  EC81  F02E         	call	_turnLeft45	;wreg free
 10529                           
 10530                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
 10531   005AC0  0E61               	movlw	low _motorL
 10532   005AC2  6E1A               	movwf	turnLeft45@mL^0,c
 10533   005AC4  0E01               	movlw	high _motorL
 10534   005AC6  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10535   005AC8  0E58               	movlw	low _motorR
 10536   005ACA  6E1C               	movwf	turnLeft45@mR^0,c
 10537   005ACC  0E01               	movlw	high _motorR
 10538   005ACE  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10539   005AD0  EC81  F02E         	call	_turnLeft45	;wreg free
 10540   005AD4  0012               	return		;funcret
 10541   005AD6                     __end_of_PinkMove:
 10542                           	callstack 0
 10543                           
 10544 ;; *************** function _turnLeft45 *****************
 10545 ;; Defined at:
 10546 ;;		line 218 in file "dc_motor.c"
 10547 ;; Parameters:    Size  Location     Type
 10548 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10549 ;;		 -> motorL(9), 
 10550 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10551 ;;		 -> motorR(9), 
 10552 ;; Auto vars:     Size  Location     Type
 10553 ;;		None
 10554 ;; Return value:  Size  Location     Type
 10555 ;;                  1    wreg      void 
 10556 ;; Registers used:
 10557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10558 ;; Tracked objects:
 10559 ;;		On entry : 0/0
 10560 ;;		On exit  : 0/0
 10561 ;;		Unchanged: 0/0
 10562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10565 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10566 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10567 ;;Total ram usage:        6 bytes
 10568 ;; Hardware stack levels used: 1
 10569 ;; Hardware stack levels required when called: 4
 10570 ;; This function calls:
 10571 ;;		_TurnDelay
 10572 ;;		_stop
 10573 ;;		_turnLeft
 10574 ;; This function is called by:
 10575 ;;		_GreenMove
 10576 ;;		_PinkMove
 10577 ;;		_LightBlueMove
 10578 ;;		_ReversePink
 10579 ;;		_turnCalibration
 10580 ;; This function uses a non-reentrant model
 10581 ;;
 10582                           
 10583                           	psect	text58
 10584   005D02                     __ptext58:
 10585                           	callstack 0
 10586   005D02                     _turnLeft45:
 10587                           	callstack 25
 10588   005D02                     
 10589                           ;dc_motor.c: 219:     turnLeft(mL,mR);
 10590   005D02  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10591   005D06  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10592   005D0A  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10593   005D0E  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10594   005D12  ECE5  F028         	call	_turnLeft	;wreg free
 10595   005D16                     
 10596                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
 10597   005D16  C0F2  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10598   005D1A  C0F3  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10599   005D1E  ECC6  F02F         	call	_TurnDelay	;wreg free
 10600   005D22                     
 10601                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
 10602   005D22  0E61               	movlw	low _motorL
 10603   005D24  6E14               	movwf	stop@mL^0,c
 10604   005D26  0E01               	movlw	high _motorL
 10605   005D28  6E15               	movwf	(stop@mL+1)^0,c
 10606   005D2A  0E58               	movlw	low _motorR
 10607   005D2C  6E16               	movwf	stop@mR^0,c
 10608   005D2E  0E01               	movlw	high _motorR
 10609   005D30  6E17               	movwf	(stop@mR+1)^0,c
 10610   005D32  EC16  F02A         	call	_stop	;wreg free
 10611   005D36                     
 10612                           ;dc_motor.c: 222:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10613   005D36  0E05               	movlw	5
 10614   005D38  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10615   005D3A  0E0F               	movlw	15
 10616   005D3C  6E1E               	movwf	??_turnLeft45^0,c
 10617   005D3E  0EF1               	movlw	241
 10618   005D40                     u6097:
 10619   005D40  2EE8               	decfsz	wreg,f,c
 10620   005D42  D7FE               	bra	u6097
 10621   005D44  2E1E               	decfsz	??_turnLeft45^0,f,c
 10622   005D46  D7FC               	bra	u6097
 10623   005D48  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10624   005D4A  D7FA               	bra	u6097
 10625   005D4C  F000               	nop	
 10626   005D4E  0012               	return		;funcret
 10627   005D50                     __end_of_turnLeft45:
 10628                           	callstack 0
 10629                           
 10630 ;; *************** function _turnLeft *****************
 10631 ;; Defined at:
 10632 ;;		line 111 in file "dc_motor.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10635 ;;		 -> motorL(9), 
 10636 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10637 ;;		 -> motorR(9), 
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;		None
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  1    wreg      void 
 10642 ;; Registers used:
 10643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10651 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10652 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10653 ;;Total ram usage:        6 bytes
 10654 ;; Hardware stack levels used: 1
 10655 ;; Hardware stack levels required when called: 3
 10656 ;; This function calls:
 10657 ;;		_setMotorPWM
 10658 ;; This function is called by:
 10659 ;;		_turnLeft45
 10660 ;; This function uses a non-reentrant model
 10661 ;;
 10662                           
 10663                           	psect	text59
 10664   0051CA                     __ptext59:
 10665                           	callstack 0
 10666   0051CA                     _turnLeft:
 10667                           	callstack 25
 10668   0051CA                     
 10669                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
 10670   0051CA  EE20 F001          	lfsr	2,1
 10671   0051CE  5014               	movf	turnLeft@mL^0,w,c
 10672   0051D0  26D9               	addwf	fsr2l,f,c
 10673   0051D2  5015               	movf	(turnLeft@mL+1)^0,w,c
 10674   0051D4  22DA               	addwfc	fsr2h,f,c
 10675   0051D6  0E00               	movlw	0
 10676   0051D8  6EDF               	movwf	indf2,c
 10677                           
 10678                           ;dc_motor.c: 114:     mR->direction =1;
 10679   0051DA  EE20 F001          	lfsr	2,1
 10680   0051DE  5016               	movf	turnLeft@mR^0,w,c
 10681   0051E0  26D9               	addwf	fsr2l,f,c
 10682   0051E2  5017               	movf	(turnLeft@mR+1)^0,w,c
 10683   0051E4  22DA               	addwfc	fsr2h,f,c
 10684   0051E6  0E01               	movlw	1
 10685   0051E8  6EDF               	movwf	indf2,c
 10686                           
 10687                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
 10688   0051EA  EF1B  F029         	goto	l4645
 10689   0051EE                     l4637:
 10690                           
 10691                           ;dc_motor.c: 118:         mL->power+=10;
 10692   0051EE  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10693   0051F2  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10694   0051F6  0E0A               	movlw	10
 10695   0051F8  26DF               	addwf	indf2,f,c
 10696                           
 10697                           ;dc_motor.c: 119:         mR->power+=10;
 10698   0051FA  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10699   0051FE  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10700   005202  0E0A               	movlw	10
 10701   005204  26DF               	addwf	indf2,f,c
 10702   005206                     
 10703                           ;dc_motor.c: 121:         setMotorPWM(mL);
 10704   005206  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10705   00520A  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10706   00520E  ECE5  F023         	call	_setMotorPWM	;wreg free
 10707   005212                     
 10708                           ;dc_motor.c: 122:         setMotorPWM(mR);
 10709   005212  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10710   005216  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10711   00521A  ECE5  F023         	call	_setMotorPWM	;wreg free
 10712   00521E                     
 10713                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10714   00521E  0E02               	movlw	2
 10715   005220  6E19               	movwf	(??_turnLeft+1)^0,c
 10716   005222  0EA0               	movlw	160
 10717   005224  6E18               	movwf	??_turnLeft^0,c
 10718   005226  0E92               	movlw	146
 10719   005228                     u6107:
 10720   005228  2EE8               	decfsz	wreg,f,c
 10721   00522A  D7FE               	bra	u6107
 10722   00522C  2E18               	decfsz	??_turnLeft^0,f,c
 10723   00522E  D7FC               	bra	u6107
 10724   005230  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10725   005232  D7FA               	bra	u6107
 10726   005234  D000               	nop2	
 10727   005236                     l4645:
 10728   005236  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10729   00523A  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10730   00523E  0E1E               	movlw	30
 10731   005240  60DF               	cpfslt	indf2,c
 10732   005242  EF25  F029         	goto	u4451
 10733   005246  EF27  F029         	goto	u4450
 10734   00524A                     u4451:
 10735   00524A  EF33  F029         	goto	l484
 10736   00524E                     u4450:
 10737   00524E  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10738   005252  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10739   005256  0E1D               	movlw	29
 10740   005258  64DF               	cpfsgt	indf2,c
 10741   00525A  EF31  F029         	goto	u4461
 10742   00525E  EF33  F029         	goto	u4460
 10743   005262                     u4461:
 10744   005262  EFF7  F028         	goto	l4637
 10745   005266                     u4460:
 10746   005266                     l484:
 10747   005266  0012               	return		;funcret
 10748   005268                     __end_of_turnLeft:
 10749                           	callstack 0
 10750                           
 10751 ;; *************** function _TurnDelay *****************
 10752 ;; Defined at:
 10753 ;;		line 204 in file "dc_motor.c"
 10754 ;; Parameters:    Size  Location     Type
 10755 ;;  Turn45Delay     2    0[COMRAM] int 
 10756 ;; Auto vars:     Size  Location     Type
 10757 ;;		None
 10758 ;; Return value:  Size  Location     Type
 10759 ;;                  1    wreg      void 
 10760 ;; Registers used:
 10761 ;;		wreg, status,2, status,0
 10762 ;; Tracked objects:
 10763 ;;		On entry : 0/0
 10764 ;;		On exit  : 0/0
 10765 ;;		Unchanged: 0/0
 10766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10769 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10770 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10771 ;;Total ram usage:        3 bytes
 10772 ;; Hardware stack levels used: 1
 10773 ;; Hardware stack levels required when called: 1
 10774 ;; This function calls:
 10775 ;;		Nothing
 10776 ;; This function is called by:
 10777 ;;		_turnRight45
 10778 ;;		_turnLeft45
 10779 ;; This function uses a non-reentrant model
 10780 ;;
 10781                           
 10782                           	psect	text60
 10783   005F8C                     __ptext60:
 10784                           	callstack 0
 10785   005F8C                     _TurnDelay:
 10786                           	callstack 27
 10787   005F8C                     
 10788                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10789   005F8C  EFD3  F02F         	goto	l519
 10790   005F90                     l4679:
 10791                           
 10792                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10793   005F90  0E15               	movlw	21
 10794   005F92  6E03               	movwf	??_TurnDelay^0,c
 10795   005F94  0EC6               	movlw	198
 10796   005F96                     u6117:
 10797   005F96  2EE8               	decfsz	wreg,f,c
 10798   005F98  D7FE               	bra	u6117
 10799   005F9A  2E03               	decfsz	??_TurnDelay^0,f,c
 10800   005F9C  D7FC               	bra	u6117
 10801   005F9E  D000               	nop2	
 10802   005FA0                     
 10803                           ;dc_motor.c: 207:         Turn45Delay--;
 10804   005FA0  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10805   005FA2  A0D8               	btfss	status,0,c
 10806   005FA4  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10807   005FA6                     l519:
 10808                           
 10809                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10810   005FA6  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10811   005FA8  EFE0  F02F         	goto	u4510
 10812   005FAC  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10813   005FAE  E106               	bnz	u4511
 10814   005FB0  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10815   005FB2  B0D8               	btfsc	status,0,c
 10816   005FB4  EFDE  F02F         	goto	u4511
 10817   005FB8  EFE0  F02F         	goto	u4510
 10818   005FBC                     u4511:
 10819   005FBC  EFC8  F02F         	goto	l4679
 10820   005FC0                     u4510:
 10821   005FC0  0012               	return		;funcret
 10822   005FC2                     __end_of_TurnDelay:
 10823                           	callstack 0
 10824                           
 10825 ;; *************** function _reverseOneBlock *****************
 10826 ;; Defined at:
 10827 ;;		line 232 in file "dc_motor.c"
 10828 ;; Parameters:    Size  Location     Type
 10829 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10830 ;;		 -> motorL(9), 
 10831 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10832 ;;		 -> motorR(9), 
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;		None
 10835 ;; Return value:  Size  Location     Type
 10836 ;;                  1    wreg      void 
 10837 ;; Registers used:
 10838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10839 ;; Tracked objects:
 10840 ;;		On entry : 0/0
 10841 ;;		On exit  : 0/0
 10842 ;;		Unchanged: 0/0
 10843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10844 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10846 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10847 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10848 ;;Total ram usage:        6 bytes
 10849 ;; Hardware stack levels used: 1
 10850 ;; Hardware stack levels required when called: 4
 10851 ;; This function calls:
 10852 ;;		_fullSpeedBack
 10853 ;;		_stop
 10854 ;; This function is called by:
 10855 ;;		_YellowMove
 10856 ;;		_PinkMove
 10857 ;; This function uses a non-reentrant model
 10858 ;;
 10859                           
 10860                           	psect	text61
 10861   005786                     __ptext61:
 10862                           	callstack 0
 10863   005786                     _reverseOneBlock:
 10864                           	callstack 25
 10865   005786                     
 10866                           ;dc_motor.c: 233:     fullSpeedBack(mL,mR);
 10867   005786  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10868   00578A  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10869   00578E  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10870   005792  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10871   005796  EC34  F029         	call	_fullSpeedBack	;wreg free
 10872   00579A                     
 10873                           ;dc_motor.c: 234:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10874   00579A  0EA3               	movlw	163
 10875   00579C  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10876   00579E  0E57               	movlw	87
 10877   0057A0  6E1E               	movwf	??_reverseOneBlock^0,c
 10878   0057A2  0E02               	movlw	2
 10879   0057A4                     u6127:
 10880   0057A4  2EE8               	decfsz	wreg,f,c
 10881   0057A6  D7FE               	bra	u6127
 10882   0057A8  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10883   0057AA  D7FC               	bra	u6127
 10884   0057AC  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10885   0057AE  D7FA               	bra	u6127
 10886   0057B0  D000               	nop2	
 10887   0057B2                     
 10888                           ;dc_motor.c: 235:     stop(&motorL, &motorR);
 10889   0057B2  0E61               	movlw	low _motorL
 10890   0057B4  6E14               	movwf	stop@mL^0,c
 10891   0057B6  0E01               	movlw	high _motorL
 10892   0057B8  6E15               	movwf	(stop@mL+1)^0,c
 10893   0057BA  0E58               	movlw	low _motorR
 10894   0057BC  6E16               	movwf	stop@mR^0,c
 10895   0057BE  0E01               	movlw	high _motorR
 10896   0057C0  6E17               	movwf	(stop@mR+1)^0,c
 10897   0057C2  EC16  F02A         	call	_stop	;wreg free
 10898                           
 10899                           ;dc_motor.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10900   0057C6  0E05               	movlw	5
 10901   0057C8  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10902   0057CA  0E0F               	movlw	15
 10903   0057CC  6E1E               	movwf	??_reverseOneBlock^0,c
 10904   0057CE  0EF1               	movlw	241
 10905   0057D0                     u6137:
 10906   0057D0  2EE8               	decfsz	wreg,f,c
 10907   0057D2  D7FE               	bra	u6137
 10908   0057D4  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10909   0057D6  D7FC               	bra	u6137
 10910   0057D8  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10911   0057DA  D7FA               	bra	u6137
 10912   0057DC  F000               	nop	
 10913   0057DE  0012               	return		;funcret
 10914   0057E0                     __end_of_reverseOneBlock:
 10915                           	callstack 0
 10916                           
 10917 ;; *************** function _reverseDetect *****************
 10918 ;; Defined at:
 10919 ;;		line 225 in file "dc_motor.c"
 10920 ;; Parameters:    Size  Location     Type
 10921 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10922 ;;		 -> motorL(9), 
 10923 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10924 ;;		 -> motorR(9), 
 10925 ;; Auto vars:     Size  Location     Type
 10926 ;;		None
 10927 ;; Return value:  Size  Location     Type
 10928 ;;                  1    wreg      void 
 10929 ;; Registers used:
 10930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10931 ;; Tracked objects:
 10932 ;;		On entry : 0/0
 10933 ;;		On exit  : 0/0
 10934 ;;		Unchanged: 0/0
 10935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10936 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10938 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10939 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10940 ;;Total ram usage:        6 bytes
 10941 ;; Hardware stack levels used: 1
 10942 ;; Hardware stack levels required when called: 4
 10943 ;; This function calls:
 10944 ;;		_fullSpeedBack
 10945 ;;		_stop
 10946 ;; This function is called by:
 10947 ;;		_RedMove
 10948 ;;		_GreenMove
 10949 ;;		_BlueMove
 10950 ;;		_YellowMove
 10951 ;;		_PinkMove
 10952 ;;		_OrangeMove
 10953 ;;		_LightBlueMove
 10954 ;;		_RetryMove
 10955 ;;		_ReverseYellow
 10956 ;;		_ReversePink
 10957 ;;		_go_Home
 10958 ;; This function uses a non-reentrant model
 10959 ;;
 10960                           
 10961                           	psect	text62
 10962   0057E0                     __ptext62:
 10963                           	callstack 0
 10964   0057E0                     _reverseDetect:
 10965                           	callstack 25
 10966   0057E0                     
 10967                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
 10968   0057E0  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10969   0057E4  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10970   0057E8  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10971   0057EC  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10972   0057F0  EC34  F029         	call	_fullSpeedBack	;wreg free
 10973   0057F4                     
 10974                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10975   0057F4  0E11               	movlw	17
 10976   0057F6  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10977   0057F8  0E3C               	movlw	60
 10978   0057FA  6E1E               	movwf	??_reverseDetect^0,c
 10979   0057FC  0ECB               	movlw	203
 10980   0057FE                     u6147:
 10981   0057FE  2EE8               	decfsz	wreg,f,c
 10982   005800  D7FE               	bra	u6147
 10983   005802  2E1E               	decfsz	??_reverseDetect^0,f,c
 10984   005804  D7FC               	bra	u6147
 10985   005806  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10986   005808  D7FA               	bra	u6147
 10987   00580A  F000               	nop	
 10988   00580C                     
 10989                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
 10990   00580C  0E61               	movlw	low _motorL
 10991   00580E  6E14               	movwf	stop@mL^0,c
 10992   005810  0E01               	movlw	high _motorL
 10993   005812  6E15               	movwf	(stop@mL+1)^0,c
 10994   005814  0E58               	movlw	low _motorR
 10995   005816  6E16               	movwf	stop@mR^0,c
 10996   005818  0E01               	movlw	high _motorR
 10997   00581A  6E17               	movwf	(stop@mR+1)^0,c
 10998   00581C  EC16  F02A         	call	_stop	;wreg free
 10999                           
 11000                           ;dc_motor.c: 229:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11001   005820  0E05               	movlw	5
 11002   005822  6E1F               	movwf	(??_reverseDetect+1)^0,c
 11003   005824  0E0F               	movlw	15
 11004   005826  6E1E               	movwf	??_reverseDetect^0,c
 11005   005828  0EF1               	movlw	241
 11006   00582A                     u6157:
 11007   00582A  2EE8               	decfsz	wreg,f,c
 11008   00582C  D7FE               	bra	u6157
 11009   00582E  2E1E               	decfsz	??_reverseDetect^0,f,c
 11010   005830  D7FC               	bra	u6157
 11011   005832  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 11012   005834  D7FA               	bra	u6157
 11013   005836  F000               	nop	
 11014   005838  0012               	return		;funcret
 11015   00583A                     __end_of_reverseDetect:
 11016                           	callstack 0
 11017                           
 11018 ;; *************** function _fullSpeedBack *****************
 11019 ;; Defined at:
 11020 ;;		line 185 in file "dc_motor.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11023 ;;		 -> motorL(9), 
 11024 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11025 ;;		 -> motorR(9), 
 11026 ;; Auto vars:     Size  Location     Type
 11027 ;;		None
 11028 ;; Return value:  Size  Location     Type
 11029 ;;                  1    wreg      void 
 11030 ;; Registers used:
 11031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11032 ;; Tracked objects:
 11033 ;;		On entry : 0/0
 11034 ;;		On exit  : 0/0
 11035 ;;		Unchanged: 0/0
 11036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11037 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11039 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11040 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11041 ;;Total ram usage:        6 bytes
 11042 ;; Hardware stack levels used: 1
 11043 ;; Hardware stack levels required when called: 3
 11044 ;; This function calls:
 11045 ;;		_setMotorPWM
 11046 ;; This function is called by:
 11047 ;;		_reverseDetect
 11048 ;;		_reverseOneBlock
 11049 ;;		_Backhalfblock
 11050 ;; This function uses a non-reentrant model
 11051 ;;
 11052                           
 11053                           	psect	text63
 11054   005268                     __ptext63:
 11055                           	callstack 0
 11056   005268                     _fullSpeedBack:
 11057                           	callstack 25
 11058   005268                     
 11059                           ;dc_motor.c: 185: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 186: {;dc_motor.c: 188:     mL->direction =0;
 11060   005268  EE20 F001          	lfsr	2,1
 11061   00526C  5014               	movf	fullSpeedBack@mL^0,w,c
 11062   00526E  26D9               	addwf	fsr2l,f,c
 11063   005270  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 11064   005272  22DA               	addwfc	fsr2h,f,c
 11065   005274  0E00               	movlw	0
 11066   005276  6EDF               	movwf	indf2,c
 11067                           
 11068                           ;dc_motor.c: 189:     mR->direction =0;
 11069   005278  EE20 F001          	lfsr	2,1
 11070   00527C  5016               	movf	fullSpeedBack@mR^0,w,c
 11071   00527E  26D9               	addwf	fsr2l,f,c
 11072   005280  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 11073   005282  22DA               	addwfc	fsr2h,f,c
 11074   005284  0E00               	movlw	0
 11075   005286  6EDF               	movwf	indf2,c
 11076                           
 11077                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
 11078   005288  EF6A  F029         	goto	l4673
 11079   00528C                     l4665:
 11080                           
 11081                           ;dc_motor.c: 192:         mL->power+=10;
 11082   00528C  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11083   005290  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11084   005294  0E0A               	movlw	10
 11085   005296  26DF               	addwf	indf2,f,c
 11086                           
 11087                           ;dc_motor.c: 193:         mR->power+=10;
 11088   005298  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11089   00529C  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11090   0052A0  0E0A               	movlw	10
 11091   0052A2  26DF               	addwf	indf2,f,c
 11092   0052A4                     
 11093                           ;dc_motor.c: 195:         setMotorPWM(mL);
 11094   0052A4  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 11095   0052A8  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11096   0052AC  ECE5  F023         	call	_setMotorPWM	;wreg free
 11097   0052B0                     
 11098                           ;dc_motor.c: 196:         setMotorPWM(mR);
 11099   0052B0  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 11100   0052B4  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11101   0052B8  ECE5  F023         	call	_setMotorPWM	;wreg free
 11102   0052BC                     
 11103                           ;dc_motor.c: 198:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11104   0052BC  0E02               	movlw	2
 11105   0052BE  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 11106   0052C0  0EA0               	movlw	160
 11107   0052C2  6E18               	movwf	??_fullSpeedBack^0,c
 11108   0052C4  0E92               	movlw	146
 11109   0052C6                     u6167:
 11110   0052C6  2EE8               	decfsz	wreg,f,c
 11111   0052C8  D7FE               	bra	u6167
 11112   0052CA  2E18               	decfsz	??_fullSpeedBack^0,f,c
 11113   0052CC  D7FC               	bra	u6167
 11114   0052CE  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11115   0052D0  D7FA               	bra	u6167
 11116   0052D2  D000               	nop2	
 11117   0052D4                     l4673:
 11118   0052D4  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11119   0052D8  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11120   0052DC  0E1E               	movlw	30
 11121   0052DE  60DF               	cpfslt	indf2,c
 11122   0052E0  EF74  F029         	goto	u4491
 11123   0052E4  EF76  F029         	goto	u4490
 11124   0052E8                     u4491:
 11125   0052E8  EF82  F029         	goto	l516
 11126   0052EC                     u4490:
 11127   0052EC  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11128   0052F0  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11129   0052F4  0E1D               	movlw	29
 11130   0052F6  64DF               	cpfsgt	indf2,c
 11131   0052F8  EF80  F029         	goto	u4501
 11132   0052FC  EF82  F029         	goto	u4500
 11133   005300                     u4501:
 11134   005300  EF46  F029         	goto	l4665
 11135   005304                     u4500:
 11136   005304                     l516:
 11137   005304  0012               	return		;funcret
 11138   005306                     __end_of_fullSpeedBack:
 11139                           	callstack 0
 11140                           
 11141 ;; *************** function _Interrupts_init *****************
 11142 ;; Defined at:
 11143 ;;		line 9 in file "interrupts.c"
 11144 ;; Parameters:    Size  Location     Type
 11145 ;;		None
 11146 ;; Auto vars:     Size  Location     Type
 11147 ;;		None
 11148 ;; Return value:  Size  Location     Type
 11149 ;;                  1    wreg      void 
 11150 ;; Registers used:
 11151 ;;		None
 11152 ;; Tracked objects:
 11153 ;;		On entry : 0/0
 11154 ;;		On exit  : 0/0
 11155 ;;		Unchanged: 0/0
 11156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11161 ;;Total ram usage:        0 bytes
 11162 ;; Hardware stack levels used: 1
 11163 ;; Hardware stack levels required when called: 1
 11164 ;; This function calls:
 11165 ;;		Nothing
 11166 ;; This function is called by:
 11167 ;;		_main
 11168 ;; This function uses a non-reentrant model
 11169 ;;
 11170                           
 11171                           	psect	text64
 11172   006112                     __ptext64:
 11173                           	callstack 0
 11174   006112                     _Interrupts_init:
 11175                           	callstack 29
 11176   006112                     
 11177                           ;interrupts.c: 11:     INTCONbits.IPEN=0;
 11178   006112  9AF2               	bcf	242,5,c	;volatile
 11179                           
 11180                           ;interrupts.c: 12:     INTCONbits.PEIE=1;
 11181   006114  8CF2               	bsf	242,6,c	;volatile
 11182                           
 11183                           ;interrupts.c: 13:     INTCONbits.GIE=1;
 11184   006116  8EF2               	bsf	242,7,c	;volatile
 11185                           
 11186                           ;interrupts.c: 14:     PIE0bits.TMR0IE=1;
 11187   006118  010E               	movlb	14	; () banked
 11188   00611A  8B29               	bsf	41,5,b	;volatile
 11189   00611C                     
 11190                           ; BSR set to: 14
 11191   00611C  0012               	return		;funcret
 11192   00611E                     __end_of_Interrupts_init:
 11193                           	callstack 0
 11194                           
 11195 ;; *************** function _Forwardhalfblock *****************
 11196 ;; Defined at:
 11197 ;;		line 245 in file "dc_motor.c"
 11198 ;; Parameters:    Size  Location     Type
 11199 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11200 ;;		 -> motorL(9), 
 11201 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11202 ;;		 -> motorR(9), 
 11203 ;; Auto vars:     Size  Location     Type
 11204 ;;		None
 11205 ;; Return value:  Size  Location     Type
 11206 ;;                  1    wreg      void 
 11207 ;; Registers used:
 11208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11209 ;; Tracked objects:
 11210 ;;		On entry : 0/0
 11211 ;;		On exit  : 0/0
 11212 ;;		Unchanged: 0/0
 11213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11216 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11217 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11218 ;;Total ram usage:        6 bytes
 11219 ;; Hardware stack levels used: 1
 11220 ;; Hardware stack levels required when called: 4
 11221 ;; This function calls:
 11222 ;;		_fullSpeedAhead
 11223 ;;		_stop
 11224 ;; This function is called by:
 11225 ;;		_main
 11226 ;; This function uses a non-reentrant model
 11227 ;;
 11228                           
 11229                           	psect	text65
 11230   00583A                     __ptext65:
 11231                           	callstack 0
 11232   00583A                     _Forwardhalfblock:
 11233                           	callstack 26
 11234   00583A                     
 11235                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
 11236   00583A  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11237   00583E  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11238   005842  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11239   005846  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11240   00584A  EC83  F029         	call	_fullSpeedAhead	;wreg free
 11241   00584E                     
 11242                           ;dc_motor.c: 247:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11243   00584E  0E52               	movlw	82
 11244   005850  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11245   005852  0E2B               	movlw	43
 11246   005854  6E1E               	movwf	??_Forwardhalfblock^0,c
 11247   005856  0E00               	movlw	0
 11248   005858                     u6177:
 11249   005858  2EE8               	decfsz	wreg,f,c
 11250   00585A  D7FE               	bra	u6177
 11251   00585C  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11252   00585E  D7FC               	bra	u6177
 11253   005860  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11254   005862  D7FA               	bra	u6177
 11255   005864  D000               	nop2	
 11256   005866                     
 11257                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
 11258   005866  0E61               	movlw	low _motorL
 11259   005868  6E14               	movwf	stop@mL^0,c
 11260   00586A  0E01               	movlw	high _motorL
 11261   00586C  6E15               	movwf	(stop@mL+1)^0,c
 11262   00586E  0E58               	movlw	low _motorR
 11263   005870  6E16               	movwf	stop@mR^0,c
 11264   005872  0E01               	movlw	high _motorR
 11265   005874  6E17               	movwf	(stop@mR+1)^0,c
 11266   005876  EC16  F02A         	call	_stop	;wreg free
 11267                           
 11268                           ;dc_motor.c: 249:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11269   00587A  0E05               	movlw	5
 11270   00587C  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11271   00587E  0E0F               	movlw	15
 11272   005880  6E1E               	movwf	??_Forwardhalfblock^0,c
 11273   005882  0EF1               	movlw	241
 11274   005884                     u6187:
 11275   005884  2EE8               	decfsz	wreg,f,c
 11276   005886  D7FE               	bra	u6187
 11277   005888  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11278   00588A  D7FC               	bra	u6187
 11279   00588C  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11280   00588E  D7FA               	bra	u6187
 11281   005890  F000               	nop	
 11282   005892  0012               	return		;funcret
 11283   005894                     __end_of_Forwardhalfblock:
 11284                           	callstack 0
 11285                           
 11286 ;; *************** function _stop *****************
 11287 ;; Defined at:
 11288 ;;		line 93 in file "dc_motor.c"
 11289 ;; Parameters:    Size  Location     Type
 11290 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11291 ;;		 -> motorL(9), 
 11292 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11293 ;;		 -> motorR(9), 
 11294 ;; Auto vars:     Size  Location     Type
 11295 ;;		None
 11296 ;; Return value:  Size  Location     Type
 11297 ;;                  1    wreg      void 
 11298 ;; Registers used:
 11299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11300 ;; Tracked objects:
 11301 ;;		On entry : 0/0
 11302 ;;		On exit  : 0/0
 11303 ;;		Unchanged: 0/0
 11304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11307 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11308 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11309 ;;Total ram usage:        6 bytes
 11310 ;; Hardware stack levels used: 1
 11311 ;; Hardware stack levels required when called: 3
 11312 ;; This function calls:
 11313 ;;		_setMotorPWM
 11314 ;; This function is called by:
 11315 ;;		_main
 11316 ;;		_turnRight45
 11317 ;;		_turnLeft45
 11318 ;;		_reverseDetect
 11319 ;;		_reverseOneBlock
 11320 ;;		_ForwardOneBlock
 11321 ;;		_Forwardhalfblock
 11322 ;;		_RetryMove
 11323 ;;		_go_Home
 11324 ;;		_Backhalfblock
 11325 ;; This function uses a non-reentrant model
 11326 ;;
 11327                           
 11328                           	psect	text66
 11329   00542C                     __ptext66:
 11330                           	callstack 0
 11331   00542C                     _stop:
 11332                           	callstack 25
 11333   00542C                     
 11334                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
 11335   00542C  EF3C  F02A         	goto	l4631
 11336   005430                     l4623:
 11337                           
 11338                           ;dc_motor.c: 97:         mL->power-=10;
 11339   005430  C014  FFD9         	movff	stop@mL,fsr2l
 11340   005434  C015  FFDA         	movff	stop@mL+1,fsr2h
 11341   005438  0E0A               	movlw	10
 11342   00543A  5EDF               	subwf	indf2,f,c
 11343                           
 11344                           ;dc_motor.c: 98:         mR->power-=10;
 11345   00543C  C016  FFD9         	movff	stop@mR,fsr2l
 11346   005440  C017  FFDA         	movff	stop@mR+1,fsr2h
 11347   005444  0E0A               	movlw	10
 11348   005446  5EDF               	subwf	indf2,f,c
 11349   005448                     
 11350                           ;dc_motor.c: 103:         setMotorPWM(mL);
 11351   005448  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11352   00544C  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11353   005450  ECE5  F023         	call	_setMotorPWM	;wreg free
 11354   005454                     
 11355                           ;dc_motor.c: 104:         setMotorPWM(mR);
 11356   005454  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11357   005458  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11358   00545C  ECE5  F023         	call	_setMotorPWM	;wreg free
 11359   005460                     
 11360                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11361   005460  0E02               	movlw	2
 11362   005462  6E19               	movwf	(??_stop+1)^0,c
 11363   005464  0EA0               	movlw	160
 11364   005466  6E18               	movwf	??_stop^0,c
 11365   005468  0E92               	movlw	146
 11366   00546A                     u6197:
 11367   00546A  2EE8               	decfsz	wreg,f,c
 11368   00546C  D7FE               	bra	u6197
 11369   00546E  2E18               	decfsz	??_stop^0,f,c
 11370   005470  D7FC               	bra	u6197
 11371   005472  2E19               	decfsz	(??_stop+1)^0,f,c
 11372   005474  D7FA               	bra	u6197
 11373   005476  D000               	nop2	
 11374   005478                     l4631:
 11375                           
 11376                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
 11377   005478  C014  FFD9         	movff	stop@mL,fsr2l
 11378   00547C  C015  FFDA         	movff	stop@mL+1,fsr2h
 11379   005480  50DF               	movf	indf2,w,c
 11380   005482  A4D8               	btfss	status,2,c
 11381   005484  EF46  F02A         	goto	u4431
 11382   005488  EF48  F02A         	goto	u4430
 11383   00548C                     u4431:
 11384   00548C  EF18  F02A         	goto	l4623
 11385   005490                     u4430:
 11386   005490  C016  FFD9         	movff	stop@mR,fsr2l
 11387   005494  C017  FFDA         	movff	stop@mR+1,fsr2h
 11388   005498  50DF               	movf	indf2,w,c
 11389   00549A  A4D8               	btfss	status,2,c
 11390   00549C  EF52  F02A         	goto	u4441
 11391   0054A0  EF54  F02A         	goto	u4440
 11392   0054A4                     u4441:
 11393   0054A4  EF18  F02A         	goto	l4623
 11394   0054A8                     u4440:
 11395   0054A8  0012               	return		;funcret
 11396   0054AA                     __end_of_stop:
 11397                           	callstack 0
 11398                           
 11399 ;; *************** function _fullSpeedAhead *****************
 11400 ;; Defined at:
 11401 ;;		line 147 in file "dc_motor.c"
 11402 ;; Parameters:    Size  Location     Type
 11403 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11404 ;;		 -> motorL(9), 
 11405 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11406 ;;		 -> motorR(9), 
 11407 ;; Auto vars:     Size  Location     Type
 11408 ;;		None
 11409 ;; Return value:  Size  Location     Type
 11410 ;;                  1    wreg      void 
 11411 ;; Registers used:
 11412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11413 ;; Tracked objects:
 11414 ;;		On entry : 0/0
 11415 ;;		On exit  : 0/0
 11416 ;;		Unchanged: 0/0
 11417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11418 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11420 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11421 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11422 ;;Total ram usage:        6 bytes
 11423 ;; Hardware stack levels used: 1
 11424 ;; Hardware stack levels required when called: 3
 11425 ;; This function calls:
 11426 ;;		_setMotorPWM
 11427 ;; This function is called by:
 11428 ;;		_main
 11429 ;;		_ForwardOneBlock
 11430 ;;		_Forwardhalfblock
 11431 ;;		_RetryMove
 11432 ;; This function uses a non-reentrant model
 11433 ;;
 11434                           
 11435                           	psect	text67
 11436   005306                     __ptext67:
 11437                           	callstack 0
 11438   005306                     _fullSpeedAhead:
 11439                           	callstack 24
 11440   005306                     
 11441                           ;dc_motor.c: 147: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 148: {;dc_motor.c: 150:     mL->direction =1;
 11442   005306  EE20 F001          	lfsr	2,1
 11443   00530A  5014               	movf	fullSpeedAhead@mL^0,w,c
 11444   00530C  26D9               	addwf	fsr2l,f,c
 11445   00530E  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11446   005310  22DA               	addwfc	fsr2h,f,c
 11447   005312  0E01               	movlw	1
 11448   005314  6EDF               	movwf	indf2,c
 11449                           
 11450                           ;dc_motor.c: 151:     mR->direction =1;
 11451   005316  EE20 F001          	lfsr	2,1
 11452   00531A  5016               	movf	fullSpeedAhead@mR^0,w,c
 11453   00531C  26D9               	addwf	fsr2l,f,c
 11454   00531E  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11455   005320  22DA               	addwfc	fsr2h,f,c
 11456   005322  0E01               	movlw	1
 11457   005324  6EDF               	movwf	indf2,c
 11458                           
 11459                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
 11460   005326  EFB9  F029         	goto	l4617
 11461   00532A                     l4609:
 11462                           
 11463                           ;dc_motor.c: 154:         mL->power+=10;
 11464   00532A  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11465   00532E  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11466   005332  0E0A               	movlw	10
 11467   005334  26DF               	addwf	indf2,f,c
 11468                           
 11469                           ;dc_motor.c: 155:         mR->power+=10;
 11470   005336  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11471   00533A  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11472   00533E  0E0A               	movlw	10
 11473   005340  26DF               	addwf	indf2,f,c
 11474   005342                     
 11475                           ;dc_motor.c: 157:         setMotorPWM(mL);
 11476   005342  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11477   005346  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11478   00534A  ECE5  F023         	call	_setMotorPWM	;wreg free
 11479   00534E                     
 11480                           ;dc_motor.c: 158:         setMotorPWM(mR);
 11481   00534E  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11482   005352  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11483   005356  ECE5  F023         	call	_setMotorPWM	;wreg free
 11484   00535A                     
 11485                           ;dc_motor.c: 161:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11486   00535A  0E02               	movlw	2
 11487   00535C  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11488   00535E  0EA0               	movlw	160
 11489   005360  6E18               	movwf	??_fullSpeedAhead^0,c
 11490   005362  0E92               	movlw	146
 11491   005364                     u6207:
 11492   005364  2EE8               	decfsz	wreg,f,c
 11493   005366  D7FE               	bra	u6207
 11494   005368  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11495   00536A  D7FC               	bra	u6207
 11496   00536C  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11497   00536E  D7FA               	bra	u6207
 11498   005370  D000               	nop2	
 11499   005372                     l4617:
 11500   005372  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11501   005376  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11502   00537A  0E1E               	movlw	30
 11503   00537C  60DF               	cpfslt	indf2,c
 11504   00537E  EFC3  F029         	goto	u4411
 11505   005382  EFC5  F029         	goto	u4410
 11506   005386                     u4411:
 11507   005386  EFD1  F029         	goto	l500
 11508   00538A                     u4410:
 11509   00538A  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11510   00538E  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11511   005392  0E1D               	movlw	29
 11512   005394  64DF               	cpfsgt	indf2,c
 11513   005396  EFCF  F029         	goto	u4421
 11514   00539A  EFD1  F029         	goto	u4420
 11515   00539E                     u4421:
 11516   00539E  EF95  F029         	goto	l4609
 11517   0053A2                     u4420:
 11518   0053A2                     l500:
 11519   0053A2  0012               	return		;funcret
 11520   0053A4                     __end_of_fullSpeedAhead:
 11521                           	callstack 0
 11522                           
 11523 ;; *************** function _setMotorPWM *****************
 11524 ;; Defined at:
 11525 ;;		line 68 in file "dc_motor.c"
 11526 ;; Parameters:    Size  Location     Type
 11527 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11528 ;;		 -> motorR(9), motorL(9), 
 11529 ;; Auto vars:     Size  Location     Type
 11530 ;;  negDuty         1   18[COMRAM] unsigned char 
 11531 ;;  posDuty         1   17[COMRAM] unsigned char 
 11532 ;; Return value:  Size  Location     Type
 11533 ;;                  1    wreg      void 
 11534 ;; Registers used:
 11535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11536 ;; Tracked objects:
 11537 ;;		On entry : 0/0
 11538 ;;		On exit  : 0/0
 11539 ;;		Unchanged: 0/0
 11540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11542 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11543 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11544 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11545 ;;Total ram usage:        6 bytes
 11546 ;; Hardware stack levels used: 1
 11547 ;; Hardware stack levels required when called: 2
 11548 ;; This function calls:
 11549 ;;		___lwdiv
 11550 ;;		___wmul
 11551 ;; This function is called by:
 11552 ;;		_stop
 11553 ;;		_turnLeft
 11554 ;;		_turnRight
 11555 ;;		_fullSpeedAhead
 11556 ;;		_timed_forward
 11557 ;;		_fullSpeedBack
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561                           	psect	text68
 11562   0047CA                     __ptext68:
 11563                           	callstack 0
 11564   0047CA                     _setMotorPWM:
 11565                           	callstack 25
 11566   0047CA                     
 11567                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 11568   0047CA  EE20 F002          	lfsr	2,2
 11569   0047CE  500E               	movf	setMotorPWM@m^0,w,c
 11570   0047D0  26D9               	addwf	fsr2l,f,c
 11571   0047D2  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11572   0047D4  22DA               	addwfc	fsr2h,f,c
 11573   0047D6  50DF               	movf	indf2,w,c
 11574   0047D8  B4D8               	btfsc	status,2,c
 11575   0047DA  EFF1  F023         	goto	u3431
 11576   0047DE  EFF3  F023         	goto	u3430
 11577   0047E2                     u3431:
 11578   0047E2  EF27  F024         	goto	l4061
 11579   0047E6                     u3430:
 11580   0047E6                     
 11581                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11582   0047E6  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11583   0047EA  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11584   0047EE  50DF               	movf	indf2,w,c
 11585   0047F0  6E10               	movwf	??_setMotorPWM^0,c
 11586   0047F2  5010               	movf	??_setMotorPWM^0,w,c
 11587   0047F4  6E01               	movwf	___wmul@multiplier^0,c
 11588   0047F6  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11589   0047F8  EE20 F003          	lfsr	2,3
 11590   0047FC  500E               	movf	setMotorPWM@m^0,w,c
 11591   0047FE  26D9               	addwf	fsr2l,f,c
 11592   004800  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11593   004802  22DA               	addwfc	fsr2h,f,c
 11594   004804  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11595   004808  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11596   00480C  EC35  F030         	call	___wmul	;wreg free
 11597   004810  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11598   004814  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11599   004818  0E00               	movlw	0
 11600   00481A  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11601   00481C  0E64               	movlw	100
 11602   00481E  6E09               	movwf	___lwdiv@divisor^0,c
 11603   004820  EC92  F02A         	call	___lwdiv	;wreg free
 11604   004824  EE20 F003          	lfsr	2,3
 11605   004828  500E               	movf	setMotorPWM@m^0,w,c
 11606   00482A  26D9               	addwf	fsr2l,f,c
 11607   00482C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11608   00482E  22DA               	addwfc	fsr2h,f,c
 11609   004830  50DF               	movf	indf2,w,c
 11610   004832  6E11               	movwf	(??_setMotorPWM+1)^0,c
 11611   004834  5007               	movf	?___lwdiv^0,w,c
 11612   004836  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 11613   004838  6E12               	movwf	setMotorPWM@posDuty^0,c
 11614   00483A                     
 11615                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 11616   00483A  EE20 F003          	lfsr	2,3
 11617   00483E  500E               	movf	setMotorPWM@m^0,w,c
 11618   004840  26D9               	addwf	fsr2l,f,c
 11619   004842  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11620   004844  22DA               	addwfc	fsr2h,f,c
 11621   004846  50DF               	movf	indf2,w,c
 11622   004848  6E13               	movwf	setMotorPWM@negDuty^0,c
 11623                           
 11624                           ;dc_motor.c: 75:     }
 11625   00484A  EF4A  F024         	goto	l4065
 11626   00484E                     l4061:
 11627                           
 11628                           ;dc_motor.c: 77:         posDuty=0;
 11629   00484E  0E00               	movlw	0
 11630   004850  6E12               	movwf	setMotorPWM@posDuty^0,c
 11631   004852                     
 11632                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11633   004852  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11634   004856  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11635   00485A  50DF               	movf	indf2,w,c
 11636   00485C  6E10               	movwf	??_setMotorPWM^0,c
 11637   00485E  5010               	movf	??_setMotorPWM^0,w,c
 11638   004860  6E01               	movwf	___wmul@multiplier^0,c
 11639   004862  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11640   004864  EE20 F003          	lfsr	2,3
 11641   004868  500E               	movf	setMotorPWM@m^0,w,c
 11642   00486A  26D9               	addwf	fsr2l,f,c
 11643   00486C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11644   00486E  22DA               	addwfc	fsr2h,f,c
 11645   004870  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11646   004874  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11647   004878  EC35  F030         	call	___wmul	;wreg free
 11648   00487C  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11649   004880  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11650   004884  0E00               	movlw	0
 11651   004886  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11652   004888  0E64               	movlw	100
 11653   00488A  6E09               	movwf	___lwdiv@divisor^0,c
 11654   00488C  EC92  F02A         	call	___lwdiv	;wreg free
 11655   004890  5007               	movf	?___lwdiv^0,w,c
 11656   004892  6E13               	movwf	setMotorPWM@negDuty^0,c
 11657   004894                     l4065:
 11658                           
 11659                           ;dc_motor.c: 81:     if (m->direction) {
 11660   004894  EE20 F001          	lfsr	2,1
 11661   004898  500E               	movf	setMotorPWM@m^0,w,c
 11662   00489A  26D9               	addwf	fsr2l,f,c
 11663   00489C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11664   00489E  22DA               	addwfc	fsr2h,f,c
 11665   0048A0  50DF               	movf	indf2,w,c
 11666   0048A2  B4D8               	btfsc	status,2,c
 11667   0048A4  EF56  F024         	goto	u3441
 11668   0048A8  EF58  F024         	goto	u3440
 11669   0048AC                     u3441:
 11670   0048AC  EF7A  F024         	goto	l4069
 11671   0048B0                     u3440:
 11672   0048B0                     
 11673                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
 11674   0048B0  EE20 F005          	lfsr	2,5
 11675   0048B4  500E               	movf	setMotorPWM@m^0,w,c
 11676   0048B6  26D9               	addwf	fsr2l,f,c
 11677   0048B8  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11678   0048BA  22DA               	addwfc	fsr2h,f,c
 11679   0048BC  CFDE F010          	movff	postinc2,??_setMotorPWM
 11680   0048C0  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11681   0048C4  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11682   0048C8  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11683   0048CC  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11684                           
 11685                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
 11686   0048D0  EE20 F007          	lfsr	2,7
 11687   0048D4  500E               	movf	setMotorPWM@m^0,w,c
 11688   0048D6  26D9               	addwf	fsr2l,f,c
 11689   0048D8  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11690   0048DA  22DA               	addwfc	fsr2h,f,c
 11691   0048DC  CFDE F010          	movff	postinc2,??_setMotorPWM
 11692   0048E0  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11693   0048E4  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11694   0048E8  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11695   0048EC  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11696                           
 11697                           ;dc_motor.c: 86:     } else {
 11698   0048F0  EF9A  F024         	goto	l470
 11699   0048F4                     l4069:
 11700                           
 11701                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
 11702   0048F4  EE20 F005          	lfsr	2,5
 11703   0048F8  500E               	movf	setMotorPWM@m^0,w,c
 11704   0048FA  26D9               	addwf	fsr2l,f,c
 11705   0048FC  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11706   0048FE  22DA               	addwfc	fsr2h,f,c
 11707   004900  CFDE F010          	movff	postinc2,??_setMotorPWM
 11708   004904  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11709   004908  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11710   00490C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11711   004910  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11712                           
 11713                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
 11714   004914  EE20 F007          	lfsr	2,7
 11715   004918  500E               	movf	setMotorPWM@m^0,w,c
 11716   00491A  26D9               	addwf	fsr2l,f,c
 11717   00491C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11718   00491E  22DA               	addwfc	fsr2h,f,c
 11719   004920  CFDE F010          	movff	postinc2,??_setMotorPWM
 11720   004924  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11721   004928  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11722   00492C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11723   004930  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11724   004934                     l470:
 11725   004934  0012               	return		;funcret
 11726   004936                     __end_of_setMotorPWM:
 11727                           	callstack 0
 11728                           
 11729 ;; *************** function ___wmul *****************
 11730 ;; Defined at:
 11731 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 11732 ;; Parameters:    Size  Location     Type
 11733 ;;  multiplier      2    0[COMRAM] unsigned int 
 11734 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11735 ;; Auto vars:     Size  Location     Type
 11736 ;;  product         2    4[COMRAM] unsigned int 
 11737 ;; Return value:  Size  Location     Type
 11738 ;;                  2    0[COMRAM] unsigned int 
 11739 ;; Registers used:
 11740 ;;		wreg, status,2, status,0, prodl, prodh
 11741 ;; Tracked objects:
 11742 ;;		On entry : 0/0
 11743 ;;		On exit  : 0/0
 11744 ;;		Unchanged: 0/0
 11745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11746 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11747 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11749 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11750 ;;Total ram usage:        6 bytes
 11751 ;; Hardware stack levels used: 1
 11752 ;; Hardware stack levels required when called: 1
 11753 ;; This function calls:
 11754 ;;		Nothing
 11755 ;; This function is called by:
 11756 ;;		_setMotorPWM
 11757 ;; This function uses a non-reentrant model
 11758 ;;
 11759                           
 11760                           	psect	text69
 11761   00606A                     __ptext69:
 11762                           	callstack 0
 11763   00606A                     ___wmul:
 11764                           	callstack 25
 11765   00606A  5001               	movf	___wmul@multiplier^0,w,c
 11766   00606C  0203               	mulwf	___wmul@multiplicand^0,c
 11767   00606E  CFF3 F005          	movff	prodl,___wmul@product
 11768   006072  CFF4 F006          	movff	prodh,___wmul@product+1
 11769   006076  5001               	movf	___wmul@multiplier^0,w,c
 11770   006078  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11771   00607A  50F3               	movf	243,w,c
 11772   00607C  2606               	addwf	(___wmul@product+1)^0,f,c
 11773   00607E  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11774   006080  0203               	mulwf	___wmul@multiplicand^0,c
 11775   006082  50F3               	movf	243,w,c
 11776   006084  2606               	addwf	(___wmul@product+1)^0,f,c
 11777   006086  C005  F001         	movff	___wmul@product,?___wmul
 11778   00608A  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11779   00608E  0012               	return		;funcret
 11780   006090                     __end_of___wmul:
 11781                           	callstack 0
 11782                           
 11783 ;; *************** function ___lwdiv *****************
 11784 ;; Defined at:
 11785 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 11786 ;; Parameters:    Size  Location     Type
 11787 ;;  dividend        2    6[COMRAM] unsigned int 
 11788 ;;  divisor         2    8[COMRAM] unsigned int 
 11789 ;; Auto vars:     Size  Location     Type
 11790 ;;  quotient        2   10[COMRAM] unsigned int 
 11791 ;;  counter         1   12[COMRAM] unsigned char 
 11792 ;; Return value:  Size  Location     Type
 11793 ;;                  2    6[COMRAM] unsigned int 
 11794 ;; Registers used:
 11795 ;;		wreg, status,2, status,0
 11796 ;; Tracked objects:
 11797 ;;		On entry : 0/0
 11798 ;;		On exit  : 0/0
 11799 ;;		Unchanged: 0/0
 11800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11802 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11804 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11805 ;;Total ram usage:        7 bytes
 11806 ;; Hardware stack levels used: 1
 11807 ;; Hardware stack levels required when called: 1
 11808 ;; This function calls:
 11809 ;;		Nothing
 11810 ;; This function is called by:
 11811 ;;		_setMotorPWM
 11812 ;; This function uses a non-reentrant model
 11813 ;;
 11814                           
 11815                           	psect	text70
 11816   005524                     __ptext70:
 11817                           	callstack 0
 11818   005524                     ___lwdiv:
 11819                           	callstack 25
 11820   005524  0E00               	movlw	0
 11821   005526  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11822   005528  0E00               	movlw	0
 11823   00552A  6E0B               	movwf	___lwdiv@quotient^0,c
 11824   00552C  5009               	movf	___lwdiv@divisor^0,w,c
 11825   00552E  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11826   005530  B4D8               	btfsc	status,2,c
 11827   005532  EF9D  F02A         	goto	u3391
 11828   005536  EF9F  F02A         	goto	u3390
 11829   00553A                     u3391:
 11830   00553A  EFC7  F02A         	goto	l1173
 11831   00553E                     u3390:
 11832   00553E  0E01               	movlw	1
 11833   005540  6E0D               	movwf	___lwdiv@counter^0,c
 11834   005542  EFA7  F02A         	goto	l4033
 11835   005546                     l4031:
 11836   005546  90D8               	bcf	status,0,c
 11837   005548  3609               	rlcf	___lwdiv@divisor^0,f,c
 11838   00554A  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11839   00554C  2A0D               	incf	___lwdiv@counter^0,f,c
 11840   00554E                     l4033:
 11841   00554E  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 11842   005550  EFAC  F02A         	goto	u3401
 11843   005554  EFAE  F02A         	goto	u3400
 11844   005558                     u3401:
 11845   005558  EFA3  F02A         	goto	l4031
 11846   00555C                     u3400:
 11847   00555C                     l4035:
 11848   00555C  90D8               	bcf	status,0,c
 11849   00555E  360B               	rlcf	___lwdiv@quotient^0,f,c
 11850   005560  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11851   005562  5009               	movf	___lwdiv@divisor^0,w,c
 11852   005564  5C07               	subwf	___lwdiv@dividend^0,w,c
 11853   005566  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11854   005568  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11855   00556A  A0D8               	btfss	status,0,c
 11856   00556C  EFBA  F02A         	goto	u3411
 11857   005570  EFBC  F02A         	goto	u3410
 11858   005574                     u3411:
 11859   005574  EFC1  F02A         	goto	l4043
 11860   005578                     u3410:
 11861   005578  5009               	movf	___lwdiv@divisor^0,w,c
 11862   00557A  5E07               	subwf	___lwdiv@dividend^0,f,c
 11863   00557C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11864   00557E  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11865   005580  800B               	bsf	___lwdiv@quotient^0,0,c
 11866   005582                     l4043:
 11867   005582  90D8               	bcf	status,0,c
 11868   005584  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11869   005586  3209               	rrcf	___lwdiv@divisor^0,f,c
 11870   005588  2E0D               	decfsz	___lwdiv@counter^0,f,c
 11871   00558A  EFAE  F02A         	goto	l4035
 11872   00558E                     l1173:
 11873   00558E  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 11874   005592  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11875   005596  0012               	return		;funcret
 11876   005598                     __end_of___lwdiv:
 11877                           	callstack 0
 11878                           
 11879 ;; *************** function _Colour_decider *****************
 11880 ;; Defined at:
 11881 ;;		line 125 in file "color.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;  vals            2   74[COMRAM] PTR struct RGB
 11884 ;;		 -> vals(8), 
 11885 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 11886 ;;		 -> rel(12), 
 11887 ;; Auto vars:     Size  Location     Type
 11888 ;;  RGB_col        12    6[BANK0 ] float [3]
 11889 ;;  Hue             4   28[BANK0 ] float 
 11890 ;;  Cmin            4   22[BANK0 ] float 
 11891 ;;  Cmax            4   18[BANK0 ] float 
 11892 ;;  i               2   26[BANK0 ] int 
 11893 ;;  Cmax_i          2    4[BANK0 ] int 
 11894 ;; Return value:  Size  Location     Type
 11895 ;;                  2   74[COMRAM] int 
 11896 ;; Registers used:
 11897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11898 ;; Tracked objects:
 11899 ;;		On entry : 0/0
 11900 ;;		On exit  : 0/0
 11901 ;;		Unchanged: 0/0
 11902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11904 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11905 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11906 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11907 ;;Total ram usage:       38 bytes
 11908 ;; Hardware stack levels used: 1
 11909 ;; Hardware stack levels required when called: 3
 11910 ;; This function calls:
 11911 ;;		___fladd
 11912 ;;		___fldiv
 11913 ;;		___fleq
 11914 ;;		___flge
 11915 ;;		___flmul
 11916 ;;		___flsub
 11917 ;;		___xxtofl
 11918 ;; This function is called by:
 11919 ;;		_main
 11920 ;; This function uses a non-reentrant model
 11921 ;;
 11922                           
 11923                           	psect	text71
 11924   000E38                     __ptext71:
 11925                           	callstack 0
 11926   000E38                     _Colour_decider:
 11927                           	callstack 27
 11928   000E38                     
 11929                           ;color.c: 126:     float Cmax = 0;
 11930   000E38  0E00               	movlw	0
 11931   000E3A  0100               	movlb	0	; () banked
 11932   000E3C  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 11933   000E3E  0E00               	movlw	0
 11934   000E40  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 11935   000E42  0E00               	movlw	0
 11936   000E44  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 11937   000E46  0E00               	movlw	0
 11938   000E48  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 11939                           
 11940                           ;color.c: 127:     float Cmin= 100000;
 11941   000E4A  0E00               	movlw	0
 11942   000E4C  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 11943   000E4E  0E50               	movlw	80
 11944   000E50  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 11945   000E52  0EC3               	movlw	195
 11946   000E54  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 11947   000E56  0E47               	movlw	71
 11948   000E58  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 11949                           
 11950                           ;color.c: 128:     int Cmax_i =4;
 11951   000E5A  0E00               	movlw	0
 11952   000E5C  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 11953   000E5E  0E04               	movlw	4
 11954   000E60  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 11955   000E62                     
 11956                           ; BSR set to: 0
 11957                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 11958   000E62  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 11959   000E66  0E0B               	movlw	11
 11960   000E68                     u5151:
 11961   000E68  6ADE               	clrf	postinc2,c
 11962   000E6A  06E8               	decf	wreg,f,c
 11963   000E6C  E2FD               	bc	u5151
 11964   000E6E                     
 11965                           ; BSR set to: 0
 11966   000E6E  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 11967   000E72  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 11968   000E76  CFDE F001          	movff	postinc2,___xxtofl@val
 11969   000E7A  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11970   000E7E  0E00               	movlw	0
 11971   000E80  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11972   000E82  0EFF               	movlw	-1
 11973   000E84  6E03               	movwf	(___xxtofl@val+2)^0,c
 11974   000E86  6E04               	movwf	(___xxtofl@val+3)^0,c
 11975   000E88  0E01               	movlw	1
 11976   000E8A  EC47  F022         	call	___xxtofl
 11977   000E8E  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 11978   000E92  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 11979   000E96  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 11980   000E9A  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 11981   000E9E  EE20 F002          	lfsr	2,2
 11982   000EA2  504B               	movf	Colour_decider@vals^0,w,c
 11983   000EA4  26D9               	addwf	fsr2l,f,c
 11984   000EA6  504C               	movf	(Colour_decider@vals+1)^0,w,c
 11985   000EA8  22DA               	addwfc	fsr2h,f,c
 11986   000EAA  CFDE F001          	movff	postinc2,___xxtofl@val
 11987   000EAE  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11988   000EB2  0E00               	movlw	0
 11989   000EB4  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11990   000EB6  0EFF               	movlw	-1
 11991   000EB8  6E03               	movwf	(___xxtofl@val+2)^0,c
 11992   000EBA  6E04               	movwf	(___xxtofl@val+3)^0,c
 11993   000EBC  0E01               	movlw	1
 11994   000EBE  EC47  F022         	call	___xxtofl
 11995   000EC2  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 11996   000EC6  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 11997   000ECA  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 11998   000ECE  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 11999   000ED2  EE20 F004          	lfsr	2,4
 12000   000ED6  504B               	movf	Colour_decider@vals^0,w,c
 12001   000ED8  26D9               	addwf	fsr2l,f,c
 12002   000EDA  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12003   000EDC  22DA               	addwfc	fsr2h,f,c
 12004   000EDE  CFDE F001          	movff	postinc2,___xxtofl@val
 12005   000EE2  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12006   000EE6  0E00               	movlw	0
 12007   000EE8  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12008   000EEA  0EFF               	movlw	-1
 12009   000EEC  6E03               	movwf	(___xxtofl@val+2)^0,c
 12010   000EEE  6E04               	movwf	(___xxtofl@val+3)^0,c
 12011   000EF0  0E01               	movlw	1
 12012   000EF2  EC47  F022         	call	___xxtofl
 12013   000EF6  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 12014   000EFA  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 12015   000EFE  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 12016   000F02  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 12017   000F06                     
 12018                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 12019   000F06  0E00               	movlw	0
 12020   000F08  0100               	movlb	0	; () banked
 12021   000F0A  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 12022   000F0C  0E00               	movlw	0
 12023   000F0E  6F7A               	movwf	Colour_decider@i& (0+255),b
 12024   000F10                     l5301:
 12025                           
 12026                           ; BSR set to: 0
 12027                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 12028   000F10  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 12029   000F14  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12030   000F18  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12031   000F1C  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12032   000F20  0E66               	movlw	low Colour_decider@RGB_col
 12033   000F22  6E4F               	movwf	??_Colour_decider^0,c
 12034   000F24  0E00               	movlw	high Colour_decider@RGB_col
 12035   000F26  6E50               	movwf	(??_Colour_decider+1)^0,c
 12036   000F28  90D8               	bcf	status,0,c
 12037   000F2A  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12038   000F2C  6ED9               	movwf	fsr2l,c
 12039   000F2E  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12040   000F30  6EDA               	movwf	fsr2h,c
 12041   000F32  90D8               	bcf	status,0,c
 12042   000F34  36D9               	rlcf	fsr2l,f,c
 12043   000F36  36DA               	rlcf	fsr2h,f,c
 12044   000F38  504F               	movf	??_Colour_decider^0,w,c
 12045   000F3A  26D9               	addwf	fsr2l,f,c
 12046   000F3C  5050               	movf	(??_Colour_decider+1)^0,w,c
 12047   000F3E  22DA               	addwfc	fsr2h,f,c
 12048   000F40  CFDE F02E          	movff	postinc2,___flge@ff2
 12049   000F44  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12050   000F48  CFDE F030          	movff	postinc2,___flge@ff2+2
 12051   000F4C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12052   000F50  ECD0  F025         	call	___flge	;wreg free
 12053   000F54  B0D8               	btfsc	status,0,c
 12054   000F56  EFAF  F007         	goto	u5161
 12055   000F5A  EFB1  F007         	goto	u5160
 12056   000F5E                     u5161:
 12057   000F5E  EFCE  F007         	goto	l5307
 12058   000F62                     u5160:
 12059   000F62                     
 12060                           ;color.c: 137:             Cmax=RGB_col[i];
 12061   000F62  0E66               	movlw	low Colour_decider@RGB_col
 12062   000F64  6E4F               	movwf	??_Colour_decider^0,c
 12063   000F66  0E00               	movlw	high Colour_decider@RGB_col
 12064   000F68  6E50               	movwf	(??_Colour_decider+1)^0,c
 12065   000F6A  90D8               	bcf	status,0,c
 12066   000F6C  0100               	movlb	0	; () banked
 12067   000F6E  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12068   000F70  6ED9               	movwf	fsr2l,c
 12069   000F72  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12070   000F74  6EDA               	movwf	fsr2h,c
 12071   000F76  90D8               	bcf	status,0,c
 12072   000F78  36D9               	rlcf	fsr2l,f,c
 12073   000F7A  36DA               	rlcf	fsr2h,f,c
 12074   000F7C  504F               	movf	??_Colour_decider^0,w,c
 12075   000F7E  26D9               	addwf	fsr2l,f,c
 12076   000F80  5050               	movf	(??_Colour_decider+1)^0,w,c
 12077   000F82  22DA               	addwfc	fsr2h,f,c
 12078   000F84  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12079   000F88  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12080   000F8C  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12081   000F90  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12082   000F94                     
 12083                           ; BSR set to: 0
 12084                           ;color.c: 138:             Cmax_i=i;
 12085   000F94  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12086   000F98  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12087   000F9C                     l5307:
 12088                           
 12089                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12090   000F9C  0E66               	movlw	low Colour_decider@RGB_col
 12091   000F9E  6E4F               	movwf	??_Colour_decider^0,c
 12092   000FA0  0E00               	movlw	high Colour_decider@RGB_col
 12093   000FA2  6E50               	movwf	(??_Colour_decider+1)^0,c
 12094   000FA4  90D8               	bcf	status,0,c
 12095   000FA6  0100               	movlb	0	; () banked
 12096   000FA8  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12097   000FAA  6ED9               	movwf	fsr2l,c
 12098   000FAC  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12099   000FAE  6EDA               	movwf	fsr2h,c
 12100   000FB0  90D8               	bcf	status,0,c
 12101   000FB2  36D9               	rlcf	fsr2l,f,c
 12102   000FB4  36DA               	rlcf	fsr2h,f,c
 12103   000FB6  504F               	movf	??_Colour_decider^0,w,c
 12104   000FB8  26D9               	addwf	fsr2l,f,c
 12105   000FBA  5050               	movf	(??_Colour_decider+1)^0,w,c
 12106   000FBC  22DA               	addwfc	fsr2h,f,c
 12107   000FBE  CFDE F02A          	movff	postinc2,___flge@ff1
 12108   000FC2  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12109   000FC6  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12110   000FCA  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12111   000FCE  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12112   000FD2  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12113   000FD6  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12114   000FDA  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12115   000FDE  ECD0  F025         	call	___flge	;wreg free
 12116   000FE2  B0D8               	btfsc	status,0,c
 12117   000FE4  EFF6  F007         	goto	u5171
 12118   000FE8  EFF8  F007         	goto	u5170
 12119   000FEC                     u5171:
 12120   000FEC  EF11  F008         	goto	l5311
 12121   000FF0                     u5170:
 12122   000FF0  0E66               	movlw	low Colour_decider@RGB_col
 12123   000FF2  6E4F               	movwf	??_Colour_decider^0,c
 12124   000FF4  0E00               	movlw	high Colour_decider@RGB_col
 12125   000FF6  6E50               	movwf	(??_Colour_decider+1)^0,c
 12126   000FF8  90D8               	bcf	status,0,c
 12127   000FFA  0100               	movlb	0	; () banked
 12128   000FFC  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12129   000FFE  6ED9               	movwf	fsr2l,c
 12130   001000  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12131   001002  6EDA               	movwf	fsr2h,c
 12132   001004  90D8               	bcf	status,0,c
 12133   001006  36D9               	rlcf	fsr2l,f,c
 12134   001008  36DA               	rlcf	fsr2h,f,c
 12135   00100A  504F               	movf	??_Colour_decider^0,w,c
 12136   00100C  26D9               	addwf	fsr2l,f,c
 12137   00100E  5050               	movf	(??_Colour_decider+1)^0,w,c
 12138   001010  22DA               	addwfc	fsr2h,f,c
 12139   001012  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12140   001016  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12141   00101A  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12142   00101E  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12143   001022                     l5311:
 12144                           
 12145                           ;color.c: 141:     }
 12146   001022  0100               	movlb	0	; () banked
 12147   001024  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12148   001026  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12149   001028                     
 12150                           ; BSR set to: 0
 12151   001028  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12152   00102A  EF20  F008         	goto	u5181
 12153   00102E  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12154   001030  E109               	bnz	u5180
 12155   001032  0E03               	movlw	3
 12156   001034  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12157   001036  A0D8               	btfss	status,0,c
 12158   001038  EF20  F008         	goto	u5181
 12159   00103C  EF22  F008         	goto	u5180
 12160   001040                     u5181:
 12161   001040  EF88  F007         	goto	l5301
 12162   001044                     u5180:
 12163   001044                     
 12164                           ; BSR set to: 0
 12165                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 12166   001044  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12167   001048  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12168   00104C  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12169   001050  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12170   001054  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12171   001058  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12172   00105C  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12173   001060  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12174   001064  ECA8  F02E         	call	___flsub	;wreg free
 12175   001068  C02A  F032         	movff	?___flsub,___fleq@ff1
 12176   00106C  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12177   001070  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12178   001074  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12179   001078  0E00               	movlw	0
 12180   00107A  6E36               	movwf	___fleq@ff2^0,c
 12181   00107C  0E00               	movlw	0
 12182   00107E  6E37               	movwf	(___fleq@ff2+1)^0,c
 12183   001080  0E00               	movlw	0
 12184   001082  6E38               	movwf	(___fleq@ff2+2)^0,c
 12185   001084  0E00               	movlw	0
 12186   001086  6E39               	movwf	(___fleq@ff2+3)^0,c
 12187   001088  EC41  F028         	call	___fleq	;wreg free
 12188   00108C  A0D8               	btfss	status,0,c
 12189   00108E  EF4B  F008         	goto	u5191
 12190   001092  EF4D  F008         	goto	u5190
 12191   001096                     u5191:
 12192   001096  EF53  F008         	goto	l5321
 12193   00109A                     u5190:
 12194   00109A                     l5317:
 12195   00109A  0E00               	movlw	0
 12196   00109C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12197   00109E  0E00               	movlw	0
 12198   0010A0  6E4B               	movwf	?_Colour_decider^0,c
 12199   0010A2  EF89  F00C         	goto	l76
 12200   0010A6                     l5321:
 12201                           
 12202                           ;color.c: 146:     if (Cmax_i==0){
 12203   0010A6  0100               	movlb	0	; () banked
 12204   0010A8  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12205   0010AA  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12206   0010AC  A4D8               	btfss	status,2,c
 12207   0010AE  EF5B  F008         	goto	u5201
 12208   0010B2  EF5D  F008         	goto	u5200
 12209   0010B6                     u5201:
 12210   0010B6  EFD1  F008         	goto	l5329
 12211   0010BA                     u5200:
 12212   0010BA                     
 12213                           ; BSR set to: 0
 12214                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12215   0010BA  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12216   0010BE  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12217   0010C2  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12218   0010C6  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12219   0010CA  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12220   0010CE  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12221   0010D2  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12222   0010D6  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12223   0010DA  ECA8  F02E         	call	___flsub	;wreg free
 12224   0010DE  C02A  F036         	movff	?___flsub,___fldiv@a
 12225   0010E2  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12226   0010E6  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12227   0010EA  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12228   0010EE  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12229   0010F2  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12230   0010F6  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12231   0010FA  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12232   0010FE  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12233   001102  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12234   001106  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12235   00110A  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12236   00110E  ECA8  F02E         	call	___flsub	;wreg free
 12237   001112  C02A  F032         	movff	?___flsub,___fldiv@b
 12238   001116  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12239   00111A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12240   00111E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12241   001122  ECB8  F018         	call	___fldiv	;wreg free
 12242   001126  C032  F011         	movff	?___fldiv,___flmul@b
 12243   00112A  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12244   00112E  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12245   001132  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12246   001136  0E00               	movlw	0
 12247   001138  6E15               	movwf	___flmul@a^0,c
 12248   00113A  0E00               	movlw	0
 12249   00113C  6E16               	movwf	(___flmul@a+1)^0,c
 12250   00113E  0E70               	movlw	112
 12251   001140  6E17               	movwf	(___flmul@a+2)^0,c
 12252   001142  0E42               	movlw	66
 12253   001144  6E18               	movwf	(___flmul@a+3)^0,c
 12254   001146  ECA3  F016         	call	___flmul	;wreg free
 12255   00114A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12256   00114E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12257   001152  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12258   001156  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12259   00115A                     
 12260                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 12261   00115A  0100               	movlb	0	; () banked
 12262   00115C  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12263   00115E  EFB5  F008         	goto	u5210
 12264   001162  EFB3  F008         	goto	u5211
 12265   001166                     u5211:
 12266   001166  EFB0  F009         	goto	l5339
 12267   00116A                     u5210:
 12268   00116A                     
 12269                           ; BSR set to: 0
 12270   00116A  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12271   00116E  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12272   001172  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12273   001176  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12274   00117A  0E00               	movlw	0
 12275   00117C  6E05               	movwf	___fladd@a^0,c
 12276   00117E  0E00               	movlw	0
 12277   001180  6E06               	movwf	(___fladd@a+1)^0,c
 12278   001182  0EB4               	movlw	180
 12279   001184  6E07               	movwf	(___fladd@a+2)^0,c
 12280   001186  0E43               	movlw	67
 12281   001188  6E08               	movwf	(___fladd@a+3)^0,c
 12282   00118A  EC43  F014         	call	___fladd	;wreg free
 12283   00118E  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12284   001192  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12285   001196  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12286   00119A  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12287   00119E  EFB0  F009         	goto	l5339
 12288   0011A2                     l5329:
 12289                           
 12290                           ; BSR set to: 0
 12291   0011A2  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12292   0011A4  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12293   0011A6  A4D8               	btfss	status,2,c
 12294   0011A8  EFD8  F008         	goto	u5221
 12295   0011AC  EFDA  F008         	goto	u5220
 12296   0011B0                     u5221:
 12297   0011B0  EF46  F009         	goto	l5335
 12298   0011B4                     u5220:
 12299   0011B4                     
 12300                           ; BSR set to: 0
 12301                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12302   0011B4  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12303   0011B8  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12304   0011BC  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12305   0011C0  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12306   0011C4  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12307   0011C8  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12308   0011CC  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12309   0011D0  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12310   0011D4  ECA8  F02E         	call	___flsub	;wreg free
 12311   0011D8  C02A  F036         	movff	?___flsub,___fldiv@a
 12312   0011DC  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12313   0011E0  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12314   0011E4  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12315   0011E8  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12316   0011EC  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12317   0011F0  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12318   0011F4  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12319   0011F8  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12320   0011FC  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12321   001200  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12322   001204  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12323   001208  ECA8  F02E         	call	___flsub	;wreg free
 12324   00120C  C02A  F032         	movff	?___flsub,___fldiv@b
 12325   001210  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12326   001214  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12327   001218  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12328   00121C  ECB8  F018         	call	___fldiv	;wreg free
 12329   001220  C032  F060         	movff	?___fldiv,_Colour_decider$3205
 12330   001224  C033  F061         	movff	?___fldiv+1,_Colour_decider$3205+1
 12331   001228  C034  F062         	movff	?___fldiv+2,_Colour_decider$3205+2
 12332   00122C  C035  F063         	movff	?___fldiv+3,_Colour_decider$3205+3
 12333   001230                     
 12334                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12335   001230  0E00               	movlw	0
 12336   001232  6E05               	movwf	___fladd@a^0,c
 12337   001234  0E00               	movlw	0
 12338   001236  6E06               	movwf	(___fladd@a+1)^0,c
 12339   001238  0E00               	movlw	0
 12340   00123A  6E07               	movwf	(___fladd@a+2)^0,c
 12341   00123C  0E40               	movlw	64
 12342   00123E  6E08               	movwf	(___fladd@a+3)^0,c
 12343   001240  C060  F001         	movff	_Colour_decider$3205,___fladd@b
 12344   001244  C061  F002         	movff	_Colour_decider$3205+1,___fladd@b+1
 12345   001248  C062  F003         	movff	_Colour_decider$3205+2,___fladd@b+2
 12346   00124C  C063  F004         	movff	_Colour_decider$3205+3,___fladd@b+3
 12347   001250  EC43  F014         	call	___fladd	;wreg free
 12348   001254  C001  F011         	movff	?___fladd,___flmul@b
 12349   001258  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12350   00125C  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12351   001260  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12352   001264  0E00               	movlw	0
 12353   001266  6E15               	movwf	___flmul@a^0,c
 12354   001268  0E00               	movlw	0
 12355   00126A  6E16               	movwf	(___flmul@a+1)^0,c
 12356   00126C  0E70               	movlw	112
 12357   00126E  6E17               	movwf	(___flmul@a+2)^0,c
 12358   001270  0E42               	movlw	66
 12359   001272  6E18               	movwf	(___flmul@a+3)^0,c
 12360   001274  ECA3  F016         	call	___flmul	;wreg free
 12361   001278  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12362   00127C  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12363   001280  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12364   001284  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12365                           
 12366                           ;color.c: 155:     }
 12367   001288  EFB0  F009         	goto	l5339
 12368   00128C                     l5335:
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12372   00128C  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12373   001290  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12374   001294  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12375   001298  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12376   00129C  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12377   0012A0  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12378   0012A4  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12379   0012A8  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12380   0012AC  ECA8  F02E         	call	___flsub	;wreg free
 12381   0012B0  C02A  F036         	movff	?___flsub,___fldiv@a
 12382   0012B4  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12383   0012B8  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12384   0012BC  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12385   0012C0  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12386   0012C4  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12387   0012C8  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12388   0012CC  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12389   0012D0  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12390   0012D4  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12391   0012D8  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12392   0012DC  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12393   0012E0  ECA8  F02E         	call	___flsub	;wreg free
 12394   0012E4  C02A  F032         	movff	?___flsub,___fldiv@b
 12395   0012E8  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12396   0012EC  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12397   0012F0  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12398   0012F4  ECB8  F018         	call	___fldiv	;wreg free
 12399   0012F8  C032  F060         	movff	?___fldiv,_Colour_decider$3205
 12400   0012FC  C033  F061         	movff	?___fldiv+1,_Colour_decider$3205+1
 12401   001300  C034  F062         	movff	?___fldiv+2,_Colour_decider$3205+2
 12402   001304  C035  F063         	movff	?___fldiv+3,_Colour_decider$3205+3
 12403   001308                     
 12404                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12405   001308  0E00               	movlw	0
 12406   00130A  6E05               	movwf	___fladd@a^0,c
 12407   00130C  0E00               	movlw	0
 12408   00130E  6E06               	movwf	(___fladd@a+1)^0,c
 12409   001310  0E80               	movlw	128
 12410   001312  6E07               	movwf	(___fladd@a+2)^0,c
 12411   001314  0E40               	movlw	64
 12412   001316  6E08               	movwf	(___fladd@a+3)^0,c
 12413   001318  C060  F001         	movff	_Colour_decider$3205,___fladd@b
 12414   00131C  C061  F002         	movff	_Colour_decider$3205+1,___fladd@b+1
 12415   001320  C062  F003         	movff	_Colour_decider$3205+2,___fladd@b+2
 12416   001324  C063  F004         	movff	_Colour_decider$3205+3,___fladd@b+3
 12417   001328  EC43  F014         	call	___fladd	;wreg free
 12418   00132C  C001  F011         	movff	?___fladd,___flmul@b
 12419   001330  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12420   001334  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12421   001338  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12422   00133C  0E00               	movlw	0
 12423   00133E  6E15               	movwf	___flmul@a^0,c
 12424   001340  0E00               	movlw	0
 12425   001342  6E16               	movwf	(___flmul@a+1)^0,c
 12426   001344  0E70               	movlw	112
 12427   001346  6E17               	movwf	(___flmul@a+2)^0,c
 12428   001348  0E42               	movlw	66
 12429   00134A  6E18               	movwf	(___flmul@a+3)^0,c
 12430   00134C  ECA3  F016         	call	___flmul	;wreg free
 12431   001350  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12432   001354  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12433   001358  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12434   00135C  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12435   001360                     l5339:
 12436                           
 12437                           ;color.c: 162:     if ((330<=Hue)&(Hue<=360)){
 12438   001360  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12439   001364  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12440   001368  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12441   00136C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12442   001370  0E00               	movlw	0
 12443   001372  6E2E               	movwf	___flge@ff2^0,c
 12444   001374  0E00               	movlw	0
 12445   001376  6E2F               	movwf	(___flge@ff2+1)^0,c
 12446   001378  0EA5               	movlw	165
 12447   00137A  6E30               	movwf	(___flge@ff2+2)^0,c
 12448   00137C  0E43               	movlw	67
 12449   00137E  6E31               	movwf	(___flge@ff2+3)^0,c
 12450   001380  ECD0  F025         	call	___flge	;wreg free
 12451   001384  A0D8               	btfss	status,0,c
 12452   001386  EFC7  F009         	goto	u5231
 12453   00138A  EFC9  F009         	goto	u5230
 12454   00138E                     u5231:
 12455   00138E  EFE8  F009         	goto	l5349
 12456   001392                     u5230:
 12457   001392  0E00               	movlw	0
 12458   001394  6E2A               	movwf	___flge@ff1^0,c
 12459   001396  0E00               	movlw	0
 12460   001398  6E2B               	movwf	(___flge@ff1+1)^0,c
 12461   00139A  0EB4               	movlw	180
 12462   00139C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12463   00139E  0E43               	movlw	67
 12464   0013A0  6E2D               	movwf	(___flge@ff1+3)^0,c
 12465   0013A2  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12466   0013A6  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12467   0013AA  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12468   0013AE  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12469   0013B2  ECD0  F025         	call	___flge	;wreg free
 12470   0013B6  A0D8               	btfss	status,0,c
 12471   0013B8  EFE0  F009         	goto	u5241
 12472   0013BC  EFE2  F009         	goto	u5240
 12473   0013C0                     u5241:
 12474   0013C0  EFE8  F009         	goto	l5349
 12475   0013C4                     u5240:
 12476   0013C4                     
 12477                           ;color.c: 163:         return 1;
 12478   0013C4  0E00               	movlw	0
 12479   0013C6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12480   0013C8  0E01               	movlw	1
 12481   0013CA  6E4B               	movwf	?_Colour_decider^0,c
 12482   0013CC  EF89  F00C         	goto	l76
 12483   0013D0                     l5349:
 12484   0013D0  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12485   0013D4  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12486   0013D8  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12487   0013DC  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12488   0013E0  0E00               	movlw	0
 12489   0013E2  6E2E               	movwf	___flge@ff2^0,c
 12490   0013E4  0E00               	movlw	0
 12491   0013E6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12492   0013E8  0EA0               	movlw	160
 12493   0013EA  6E30               	movwf	(___flge@ff2+2)^0,c
 12494   0013EC  0E40               	movlw	64
 12495   0013EE  6E31               	movwf	(___flge@ff2+3)^0,c
 12496   0013F0  ECD0  F025         	call	___flge	;wreg free
 12497   0013F4  A0D8               	btfss	status,0,c
 12498   0013F6  EFFF  F009         	goto	u5251
 12499   0013FA  EF01  F00A         	goto	u5250
 12500   0013FE                     u5251:
 12501   0013FE  EF20  F00A         	goto	l5359
 12502   001402                     u5250:
 12503   001402  0E00               	movlw	0
 12504   001404  6E2A               	movwf	___flge@ff1^0,c
 12505   001406  0E00               	movlw	0
 12506   001408  6E2B               	movwf	(___flge@ff1+1)^0,c
 12507   00140A  0E40               	movlw	64
 12508   00140C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12509   00140E  0E41               	movlw	65
 12510   001410  6E2D               	movwf	(___flge@ff1+3)^0,c
 12511   001412  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12512   001416  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12513   00141A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12514   00141E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12515   001422  ECD0  F025         	call	___flge	;wreg free
 12516   001426  A0D8               	btfss	status,0,c
 12517   001428  EF18  F00A         	goto	u5261
 12518   00142C  EF1A  F00A         	goto	u5260
 12519   001430                     u5261:
 12520   001430  EF20  F00A         	goto	l5359
 12521   001434                     u5260:
 12522   001434                     
 12523                           ;color.c: 167:         return 2;
 12524   001434  0E00               	movlw	0
 12525   001436  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12526   001438  0E02               	movlw	2
 12527   00143A  6E4B               	movwf	?_Colour_decider^0,c
 12528   00143C  EF89  F00C         	goto	l76
 12529   001440                     l5359:
 12530   001440  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12531   001444  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12532   001448  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12533   00144C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12534   001450  0E00               	movlw	0
 12535   001452  6E2E               	movwf	___flge@ff2^0,c
 12536   001454  0E00               	movlw	0
 12537   001456  6E2F               	movwf	(___flge@ff2+1)^0,c
 12538   001458  0E90               	movlw	144
 12539   00145A  6E30               	movwf	(___flge@ff2+2)^0,c
 12540   00145C  0E41               	movlw	65
 12541   00145E  6E31               	movwf	(___flge@ff2+3)^0,c
 12542   001460  ECD0  F025         	call	___flge	;wreg free
 12543   001464  A0D8               	btfss	status,0,c
 12544   001466  EF37  F00A         	goto	u5271
 12545   00146A  EF39  F00A         	goto	u5270
 12546   00146E                     u5271:
 12547   00146E  EFB9  F00A         	goto	l5385
 12548   001472                     u5270:
 12549   001472  0E00               	movlw	0
 12550   001474  6E2A               	movwf	___flge@ff1^0,c
 12551   001476  0E00               	movlw	0
 12552   001478  6E2B               	movwf	(___flge@ff1+1)^0,c
 12553   00147A  0EE8               	movlw	232
 12554   00147C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12555   00147E  0E41               	movlw	65
 12556   001480  6E2D               	movwf	(___flge@ff1+3)^0,c
 12557   001482  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12558   001486  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12559   00148A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12560   00148E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12561   001492  ECD0  F025         	call	___flge	;wreg free
 12562   001496  A0D8               	btfss	status,0,c
 12563   001498  EF50  F00A         	goto	u5281
 12564   00149C  EF52  F00A         	goto	u5280
 12565   0014A0                     u5281:
 12566   0014A0  EFB9  F00A         	goto	l5385
 12567   0014A4                     u5280:
 12568   0014A4                     
 12569                           ;color.c: 172:         if ((0.20<=rel->R)&(rel->R<=0.25)){
 12570   0014A4  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12571   0014A8  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12572   0014AC  CFDE F02A          	movff	postinc2,___flge@ff1
 12573   0014B0  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12574   0014B4  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12575   0014B8  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12576   0014BC  0ECD               	movlw	205
 12577   0014BE  6E2E               	movwf	___flge@ff2^0,c
 12578   0014C0  0ECC               	movlw	204
 12579   0014C2  6E2F               	movwf	(___flge@ff2+1)^0,c
 12580   0014C4  0E4C               	movlw	76
 12581   0014C6  6E30               	movwf	(___flge@ff2+2)^0,c
 12582   0014C8  0E3E               	movlw	62
 12583   0014CA  6E31               	movwf	(___flge@ff2+3)^0,c
 12584   0014CC  ECD0  F025         	call	___flge	;wreg free
 12585   0014D0  A0D8               	btfss	status,0,c
 12586   0014D2  EF6D  F00A         	goto	u5291
 12587   0014D6  EF6F  F00A         	goto	u5290
 12588   0014DA                     u5291:
 12589   0014DA  EF8E  F00A         	goto	l5373
 12590   0014DE                     u5290:
 12591   0014DE  0E00               	movlw	0
 12592   0014E0  6E2A               	movwf	___flge@ff1^0,c
 12593   0014E2  0E00               	movlw	0
 12594   0014E4  6E2B               	movwf	(___flge@ff1+1)^0,c
 12595   0014E6  0E80               	movlw	128
 12596   0014E8  6E2C               	movwf	(___flge@ff1+2)^0,c
 12597   0014EA  0E3E               	movlw	62
 12598   0014EC  6E2D               	movwf	(___flge@ff1+3)^0,c
 12599   0014EE  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12600   0014F2  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12601   0014F6  CFDE F02E          	movff	postinc2,___flge@ff2
 12602   0014FA  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12603   0014FE  CFDE F030          	movff	postinc2,___flge@ff2+2
 12604   001502  CFDE F031          	movff	postinc2,___flge@ff2+3
 12605   001506  ECD0  F025         	call	___flge	;wreg free
 12606   00150A  A0D8               	btfss	status,0,c
 12607   00150C  EF8A  F00A         	goto	u5301
 12608   001510  EF8C  F00A         	goto	u5300
 12609   001514                     u5301:
 12610   001514  EF8E  F00A         	goto	l5373
 12611   001518                     u5300:
 12612   001518  EF4D  F008         	goto	l5317
 12613   00151C                     l5373:
 12614   00151C  EE20 F008          	lfsr	2,8
 12615   001520  504D               	movf	Colour_decider@rel^0,w,c
 12616   001522  26D9               	addwf	fsr2l,f,c
 12617   001524  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12618   001526  22DA               	addwfc	fsr2h,f,c
 12619   001528  CFDE F02A          	movff	postinc2,___flge@ff1
 12620   00152C  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12621   001530  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12622   001534  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12623   001538  0E29               	movlw	41
 12624   00153A  6E2E               	movwf	___flge@ff2^0,c
 12625   00153C  0E5C               	movlw	92
 12626   00153E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12627   001540  0E0F               	movlw	15
 12628   001542  6E30               	movwf	(___flge@ff2+2)^0,c
 12629   001544  0E3E               	movlw	62
 12630   001546  6E31               	movwf	(___flge@ff2+3)^0,c
 12631   001548  ECD0  F025         	call	___flge	;wreg free
 12632   00154C  A0D8               	btfss	status,0,c
 12633   00154E  EFAB  F00A         	goto	u5311
 12634   001552  EFAD  F00A         	goto	u5310
 12635   001556                     u5311:
 12636   001556  EFB3  F00A         	goto	l5381
 12637   00155A                     u5310:
 12638   00155A                     l5375:
 12639                           
 12640                           ;color.c: 178:             return 4;
 12641   00155A  0E00               	movlw	0
 12642   00155C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12643   00155E  0E04               	movlw	4
 12644   001560  6E4B               	movwf	?_Colour_decider^0,c
 12645   001562  EF89  F00C         	goto	l76
 12646   001566                     l5381:
 12647                           
 12648                           ;color.c: 181:             return 3;
 12649   001566  0E00               	movlw	0
 12650   001568  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12651   00156A  0E03               	movlw	3
 12652   00156C  6E4B               	movwf	?_Colour_decider^0,c
 12653   00156E  EF89  F00C         	goto	l76
 12654   001572                     l5385:
 12655   001572  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12656   001576  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12657   00157A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12658   00157E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12659   001582  0E00               	movlw	0
 12660   001584  6E2E               	movwf	___flge@ff2^0,c
 12661   001586  0E00               	movlw	0
 12662   001588  6E2F               	movwf	(___flge@ff2+1)^0,c
 12663   00158A  0E34               	movlw	52
 12664   00158C  6E30               	movwf	(___flge@ff2+2)^0,c
 12665   00158E  0E42               	movlw	66
 12666   001590  6E31               	movwf	(___flge@ff2+3)^0,c
 12667   001592  ECD0  F025         	call	___flge	;wreg free
 12668   001596  A0D8               	btfss	status,0,c
 12669   001598  EFD0  F00A         	goto	u5321
 12670   00159C  EFD2  F00A         	goto	u5320
 12671   0015A0                     u5321:
 12672   0015A0  EF37  F00B         	goto	l5409
 12673   0015A4                     u5320:
 12674   0015A4  0E00               	movlw	0
 12675   0015A6  6E2A               	movwf	___flge@ff1^0,c
 12676   0015A8  0E00               	movlw	0
 12677   0015AA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12678   0015AC  0EAA               	movlw	170
 12679   0015AE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12680   0015B0  0E42               	movlw	66
 12681   0015B2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12682   0015B4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12683   0015B8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12684   0015BC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12685   0015C0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12686   0015C4  ECD0  F025         	call	___flge	;wreg free
 12687   0015C8  A0D8               	btfss	status,0,c
 12688   0015CA  EFE9  F00A         	goto	u5331
 12689   0015CE  EFEB  F00A         	goto	u5330
 12690   0015D2                     u5331:
 12691   0015D2  EF37  F00B         	goto	l5409
 12692   0015D6                     u5330:
 12693   0015D6                     
 12694                           ;color.c: 187:         if(0.15<=rel->B){
 12695   0015D6  EE20 F008          	lfsr	2,8
 12696   0015DA  504D               	movf	Colour_decider@rel^0,w,c
 12697   0015DC  26D9               	addwf	fsr2l,f,c
 12698   0015DE  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12699   0015E0  22DA               	addwfc	fsr2h,f,c
 12700   0015E2  CFDE F02A          	movff	postinc2,___flge@ff1
 12701   0015E6  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12702   0015EA  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12703   0015EE  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12704   0015F2  0E9A               	movlw	154
 12705   0015F4  6E2E               	movwf	___flge@ff2^0,c
 12706   0015F6  0E99               	movlw	153
 12707   0015F8  6E2F               	movwf	(___flge@ff2+1)^0,c
 12708   0015FA  0E19               	movlw	25
 12709   0015FC  6E30               	movwf	(___flge@ff2+2)^0,c
 12710   0015FE  0E3E               	movlw	62
 12711   001600  6E31               	movwf	(___flge@ff2+3)^0,c
 12712   001602  ECD0  F025         	call	___flge	;wreg free
 12713   001606  A0D8               	btfss	status,0,c
 12714   001608  EF08  F00B         	goto	u5341
 12715   00160C  EF0A  F00B         	goto	u5340
 12716   001610                     u5341:
 12717   001610  EF0C  F00B         	goto	l5397
 12718   001614                     u5340:
 12719   001614  EFAD  F00A         	goto	l5375
 12720   001618                     l5397:
 12721   001618  EE20 F008          	lfsr	2,8
 12722   00161C  504D               	movf	Colour_decider@rel^0,w,c
 12723   00161E  26D9               	addwf	fsr2l,f,c
 12724   001620  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12725   001622  22DA               	addwfc	fsr2h,f,c
 12726   001624  CFDE F02A          	movff	postinc2,___flge@ff1
 12727   001628  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12728   00162C  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12729   001630  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12730   001634  0E8F               	movlw	143
 12731   001636  6E2E               	movwf	___flge@ff2^0,c
 12732   001638  0EC2               	movlw	194
 12733   00163A  6E2F               	movwf	(___flge@ff2+1)^0,c
 12734   00163C  0EF5               	movlw	245
 12735   00163E  6E30               	movwf	(___flge@ff2+2)^0,c
 12736   001640  0E3D               	movlw	61
 12737   001642  6E31               	movwf	(___flge@ff2+3)^0,c
 12738   001644  ECD0  F025         	call	___flge	;wreg free
 12739   001648  A0D8               	btfss	status,0,c
 12740   00164A  EF29  F00B         	goto	u5351
 12741   00164E  EF2B  F00B         	goto	u5350
 12742   001652                     u5351:
 12743   001652  EF31  F00B         	goto	l5405
 12744   001656                     u5350:
 12745   001656                     l5399:
 12746                           
 12747                           ;color.c: 191:             return 6;
 12748   001656  0E00               	movlw	0
 12749   001658  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12750   00165A  0E06               	movlw	6
 12751   00165C  6E4B               	movwf	?_Colour_decider^0,c
 12752   00165E  EF89  F00C         	goto	l76
 12753   001662                     l5405:
 12754                           
 12755                           ;color.c: 194:             return 5;
 12756   001662  0E00               	movlw	0
 12757   001664  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12758   001666  0E05               	movlw	5
 12759   001668  6E4B               	movwf	?_Colour_decider^0,c
 12760   00166A  EF89  F00C         	goto	l76
 12761   00166E                     l5409:
 12762   00166E  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12763   001672  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12764   001676  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12765   00167A  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12766   00167E  0E00               	movlw	0
 12767   001680  6E2E               	movwf	___flge@ff2^0,c
 12768   001682  0E00               	movlw	0
 12769   001684  6E2F               	movwf	(___flge@ff2+1)^0,c
 12770   001686  0EA2               	movlw	162
 12771   001688  6E30               	movwf	(___flge@ff2+2)^0,c
 12772   00168A  0E42               	movlw	66
 12773   00168C  6E31               	movwf	(___flge@ff2+3)^0,c
 12774   00168E  ECD0  F025         	call	___flge	;wreg free
 12775   001692  A0D8               	btfss	status,0,c
 12776   001694  EF4E  F00B         	goto	u5361
 12777   001698  EF50  F00B         	goto	u5360
 12778   00169C                     u5361:
 12779   00169C  EF8A  F00B         	goto	l5425
 12780   0016A0                     u5360:
 12781   0016A0  0E00               	movlw	0
 12782   0016A2  6E2A               	movwf	___flge@ff1^0,c
 12783   0016A4  0E00               	movlw	0
 12784   0016A6  6E2B               	movwf	(___flge@ff1+1)^0,c
 12785   0016A8  0EE6               	movlw	230
 12786   0016AA  6E2C               	movwf	(___flge@ff1+2)^0,c
 12787   0016AC  0E42               	movlw	66
 12788   0016AE  6E2D               	movwf	(___flge@ff1+3)^0,c
 12789   0016B0  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12790   0016B4  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12791   0016B8  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12792   0016BC  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12793   0016C0  ECD0  F025         	call	___flge	;wreg free
 12794   0016C4  A0D8               	btfss	status,0,c
 12795   0016C6  EF67  F00B         	goto	u5371
 12796   0016CA  EF69  F00B         	goto	u5370
 12797   0016CE                     u5371:
 12798   0016CE  EF8A  F00B         	goto	l5425
 12799   0016D2                     u5370:
 12800   0016D2                     
 12801                           ;color.c: 200:         if(0.15<=rel->B){
 12802   0016D2  EE20 F008          	lfsr	2,8
 12803   0016D6  504D               	movf	Colour_decider@rel^0,w,c
 12804   0016D8  26D9               	addwf	fsr2l,f,c
 12805   0016DA  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12806   0016DC  22DA               	addwfc	fsr2h,f,c
 12807   0016DE  CFDE F02A          	movff	postinc2,___flge@ff1
 12808   0016E2  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12809   0016E6  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12810   0016EA  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12811   0016EE  0E9A               	movlw	154
 12812   0016F0  6E2E               	movwf	___flge@ff2^0,c
 12813   0016F2  0E99               	movlw	153
 12814   0016F4  6E2F               	movwf	(___flge@ff2+1)^0,c
 12815   0016F6  0E19               	movlw	25
 12816   0016F8  6E30               	movwf	(___flge@ff2+2)^0,c
 12817   0016FA  0E3E               	movlw	62
 12818   0016FC  6E31               	movwf	(___flge@ff2+3)^0,c
 12819   0016FE  ECD0  F025         	call	___flge	;wreg free
 12820   001702  A0D8               	btfss	status,0,c
 12821   001704  EF86  F00B         	goto	u5381
 12822   001708  EF88  F00B         	goto	u5380
 12823   00170C                     u5381:
 12824   00170C  EF2B  F00B         	goto	l5399
 12825   001710                     u5380:
 12826   001710  EFAD  F00A         	goto	l5375
 12827   001714                     l5425:
 12828   001714  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12829   001718  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12830   00171C  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12831   001720  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12832   001724  0E00               	movlw	0
 12833   001726  6E2E               	movwf	___flge@ff2^0,c
 12834   001728  0E00               	movlw	0
 12835   00172A  6E2F               	movwf	(___flge@ff2+1)^0,c
 12836   00172C  0EF0               	movlw	240
 12837   00172E  6E30               	movwf	(___flge@ff2+2)^0,c
 12838   001730  0E41               	movlw	65
 12839   001732  6E31               	movwf	(___flge@ff2+3)^0,c
 12840   001734  ECD0  F025         	call	___flge	;wreg free
 12841   001738  A0D8               	btfss	status,0,c
 12842   00173A  EFA1  F00B         	goto	u5391
 12843   00173E  EFA3  F00B         	goto	u5390
 12844   001742                     u5391:
 12845   001742  EFBC  F00B         	goto	l5429
 12846   001746                     u5390:
 12847   001746  0E00               	movlw	0
 12848   001748  6E2A               	movwf	___flge@ff1^0,c
 12849   00174A  0E00               	movlw	0
 12850   00174C  6E2B               	movwf	(___flge@ff1+1)^0,c
 12851   00174E  0E68               	movlw	104
 12852   001750  6E2C               	movwf	(___flge@ff1+2)^0,c
 12853   001752  0E42               	movlw	66
 12854   001754  6E2D               	movwf	(___flge@ff1+3)^0,c
 12855   001756  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12856   00175A  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12857   00175E  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12858   001762  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12859   001766  ECD0  F025         	call	___flge	;wreg free
 12860   00176A  B0D8               	btfsc	status,0,c
 12861   00176C  EFBA  F00B         	goto	u5401
 12862   001770  EFBC  F00B         	goto	u5400
 12863   001774                     u5401:
 12864   001774  EFAD  F00A         	goto	l5375
 12865   001778                     u5400:
 12866   001778                     l5429:
 12867   001778  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12868   00177C  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12869   001780  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12870   001784  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12871   001788  0E00               	movlw	0
 12872   00178A  6E2E               	movwf	___flge@ff2^0,c
 12873   00178C  0E00               	movlw	0
 12874   00178E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12875   001790  0EF0               	movlw	240
 12876   001792  6E30               	movwf	(___flge@ff2+2)^0,c
 12877   001794  0E42               	movlw	66
 12878   001796  6E31               	movwf	(___flge@ff2+3)^0,c
 12879   001798  ECD0  F025         	call	___flge	;wreg free
 12880   00179C  A0D8               	btfss	status,0,c
 12881   00179E  EFD3  F00B         	goto	u5411
 12882   0017A2  EFD5  F00B         	goto	u5410
 12883   0017A6                     u5411:
 12884   0017A6  EFF0  F00B         	goto	l5439
 12885   0017AA                     u5410:
 12886   0017AA  0E00               	movlw	0
 12887   0017AC  6E2A               	movwf	___flge@ff1^0,c
 12888   0017AE  0E00               	movlw	0
 12889   0017B0  6E2B               	movwf	(___flge@ff1+1)^0,c
 12890   0017B2  0E5C               	movlw	92
 12891   0017B4  6E2C               	movwf	(___flge@ff1+2)^0,c
 12892   0017B6  0E43               	movlw	67
 12893   0017B8  6E2D               	movwf	(___flge@ff1+3)^0,c
 12894   0017BA  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12895   0017BE  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12896   0017C2  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12897   0017C6  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12898   0017CA  ECD0  F025         	call	___flge	;wreg free
 12899   0017CE  A0D8               	btfss	status,0,c
 12900   0017D0  EFEC  F00B         	goto	u5421
 12901   0017D4  EFEE  F00B         	goto	u5420
 12902   0017D8                     u5421:
 12903   0017D8  EFF0  F00B         	goto	l5439
 12904   0017DC                     u5420:
 12905   0017DC  EFAD  F00A         	goto	l5375
 12906   0017E0                     l5439:
 12907   0017E0  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12908   0017E4  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12909   0017E8  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12910   0017EC  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12911   0017F0  0E00               	movlw	0
 12912   0017F2  6E2E               	movwf	___flge@ff2^0,c
 12913   0017F4  0E00               	movlw	0
 12914   0017F6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12915   0017F8  0E60               	movlw	96
 12916   0017FA  6E30               	movwf	(___flge@ff2+2)^0,c
 12917   0017FC  0E41               	movlw	65
 12918   0017FE  6E31               	movwf	(___flge@ff2+3)^0,c
 12919   001800  ECD0  F025         	call	___flge	;wreg free
 12920   001804  A0D8               	btfss	status,0,c
 12921   001806  EF07  F00C         	goto	u5431
 12922   00180A  EF09  F00C         	goto	u5430
 12923   00180E                     u5431:
 12924   00180E  EF85  F00C         	goto	l5465
 12925   001812                     u5430:
 12926   001812  0E00               	movlw	0
 12927   001814  6E2A               	movwf	___flge@ff1^0,c
 12928   001816  0E00               	movlw	0
 12929   001818  6E2B               	movwf	(___flge@ff1+1)^0,c
 12930   00181A  0E98               	movlw	152
 12931   00181C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12932   00181E  0E41               	movlw	65
 12933   001820  6E2D               	movwf	(___flge@ff1+3)^0,c
 12934   001822  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12935   001826  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12936   00182A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12937   00182E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12938   001832  ECD0  F025         	call	___flge	;wreg free
 12939   001836  A0D8               	btfss	status,0,c
 12940   001838  EF20  F00C         	goto	u5441
 12941   00183C  EF22  F00C         	goto	u5440
 12942   001840                     u5441:
 12943   001840  EF85  F00C         	goto	l5465
 12944   001844                     u5440:
 12945   001844                     
 12946                           ;color.c: 215:         if ((0.20<=rel->R)&(rel->R<=0.25)){
 12947   001844  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12948   001848  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12949   00184C  CFDE F02A          	movff	postinc2,___flge@ff1
 12950   001850  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12951   001854  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12952   001858  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12953   00185C  0ECD               	movlw	205
 12954   00185E  6E2E               	movwf	___flge@ff2^0,c
 12955   001860  0ECC               	movlw	204
 12956   001862  6E2F               	movwf	(___flge@ff2+1)^0,c
 12957   001864  0E4C               	movlw	76
 12958   001866  6E30               	movwf	(___flge@ff2+2)^0,c
 12959   001868  0E3E               	movlw	62
 12960   00186A  6E31               	movwf	(___flge@ff2+3)^0,c
 12961   00186C  ECD0  F025         	call	___flge	;wreg free
 12962   001870  A0D8               	btfss	status,0,c
 12963   001872  EF3D  F00C         	goto	u5451
 12964   001876  EF3F  F00C         	goto	u5450
 12965   00187A                     u5451:
 12966   00187A  EF5E  F00C         	goto	l5453
 12967   00187E                     u5450:
 12968   00187E  0E00               	movlw	0
 12969   001880  6E2A               	movwf	___flge@ff1^0,c
 12970   001882  0E00               	movlw	0
 12971   001884  6E2B               	movwf	(___flge@ff1+1)^0,c
 12972   001886  0E80               	movlw	128
 12973   001888  6E2C               	movwf	(___flge@ff1+2)^0,c
 12974   00188A  0E3E               	movlw	62
 12975   00188C  6E2D               	movwf	(___flge@ff1+3)^0,c
 12976   00188E  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12977   001892  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12978   001896  CFDE F02E          	movff	postinc2,___flge@ff2
 12979   00189A  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12980   00189E  CFDE F030          	movff	postinc2,___flge@ff2+2
 12981   0018A2  CFDE F031          	movff	postinc2,___flge@ff2+3
 12982   0018A6  ECD0  F025         	call	___flge	;wreg free
 12983   0018AA  A0D8               	btfss	status,0,c
 12984   0018AC  EF5A  F00C         	goto	u5461
 12985   0018B0  EF5C  F00C         	goto	u5460
 12986   0018B4                     u5461:
 12987   0018B4  EF5E  F00C         	goto	l5453
 12988   0018B8                     u5460:
 12989   0018B8  EF4D  F008         	goto	l5317
 12990   0018BC                     l5453:
 12991   0018BC  EE20 F008          	lfsr	2,8
 12992   0018C0  504D               	movf	Colour_decider@rel^0,w,c
 12993   0018C2  26D9               	addwf	fsr2l,f,c
 12994   0018C4  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12995   0018C6  22DA               	addwfc	fsr2h,f,c
 12996   0018C8  CFDE F02A          	movff	postinc2,___flge@ff1
 12997   0018CC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12998   0018D0  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12999   0018D4  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13000   0018D8  0E9A               	movlw	154
 13001   0018DA  6E2E               	movwf	___flge@ff2^0,c
 13002   0018DC  0E99               	movlw	153
 13003   0018DE  6E2F               	movwf	(___flge@ff2+1)^0,c
 13004   0018E0  0E19               	movlw	25
 13005   0018E2  6E30               	movwf	(___flge@ff2+2)^0,c
 13006   0018E4  0E3E               	movlw	62
 13007   0018E6  6E31               	movwf	(___flge@ff2+3)^0,c
 13008   0018E8  ECD0  F025         	call	___flge	;wreg free
 13009   0018EC  A0D8               	btfss	status,0,c
 13010   0018EE  EF7B  F00C         	goto	u5471
 13011   0018F2  EF7D  F00C         	goto	u5470
 13012   0018F6                     u5471:
 13013   0018F6  EF7F  F00C         	goto	l5461
 13014   0018FA                     u5470:
 13015   0018FA  EFAD  F00A         	goto	l5375
 13016   0018FE                     l5461:
 13017                           
 13018                           ;color.c: 222:             return 7;
 13019   0018FE  0E00               	movlw	0
 13020   001900  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13021   001902  0E07               	movlw	7
 13022   001904  6E4B               	movwf	?_Colour_decider^0,c
 13023   001906  EF89  F00C         	goto	l76
 13024   00190A                     l5465:
 13025                           
 13026                           ;color.c: 226:         return 10;
 13027   00190A  0E00               	movlw	0
 13028   00190C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13029   00190E  0E0A               	movlw	10
 13030   001910  6E4B               	movwf	?_Colour_decider^0,c
 13031   001912                     l76:
 13032   001912  0012               	return		;funcret
 13033   001914                     __end_of_Colour_decider:
 13034                           	callstack 0
 13035                           
 13036 ;; *************** function ___xxtofl *****************
 13037 ;; Defined at:
 13038 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 13039 ;; Parameters:    Size  Location     Type
 13040 ;;  sign            1    wreg     unsigned char 
 13041 ;;  val             4    0[COMRAM] long 
 13042 ;; Auto vars:     Size  Location     Type
 13043 ;;  sign            1    8[COMRAM] unsigned char 
 13044 ;;  arg             4   10[COMRAM] unsigned long 
 13045 ;;  exp             1    9[COMRAM] unsigned char 
 13046 ;; Return value:  Size  Location     Type
 13047 ;;                  4    0[COMRAM] unsigned char 
 13048 ;; Registers used:
 13049 ;;		wreg, status,2, status,0
 13050 ;; Tracked objects:
 13051 ;;		On entry : 0/0
 13052 ;;		On exit  : 0/0
 13053 ;;		Unchanged: 0/0
 13054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13055 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13056 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13057 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13058 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13059 ;;Total ram usage:       14 bytes
 13060 ;; Hardware stack levels used: 1
 13061 ;; Hardware stack levels required when called: 1
 13062 ;; This function calls:
 13063 ;;		Nothing
 13064 ;; This function is called by:
 13065 ;;		_colour_rel
 13066 ;;		_Colour_decider
 13067 ;;		_reverseOneBlock
 13068 ;;		_ForwardOneBlock
 13069 ;;		_Forwardhalfblock
 13070 ;;		_Backhalfblock
 13071 ;; This function uses a non-reentrant model
 13072 ;;
 13073                           
 13074                           	psect	text72
 13075   00448E                     __ptext72:
 13076                           	callstack 0
 13077   00448E                     ___xxtofl:
 13078                           	callstack 28
 13079                           
 13080                           ;incstack = 0
 13081                           ;___xxtofl@sign stored from wreg
 13082   00448E  6E09               	movwf	___xxtofl@sign^0,c
 13083   004490  5009               	movf	___xxtofl@sign^0,w,c
 13084   004492  B4D8               	btfsc	status,2,c
 13085   004494  EF4E  F022         	goto	u5041
 13086   004498  EF50  F022         	goto	u5040
 13087   00449C                     u5041:
 13088   00449C  EF72  F022         	goto	l1337
 13089   0044A0                     u5040:
 13090   0044A0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13091   0044A2  EF57  F022         	goto	u5050
 13092   0044A6  EF55  F022         	goto	u5051
 13093   0044AA                     u5051:
 13094   0044AA  EF72  F022         	goto	l1337
 13095   0044AE                     u5050:
 13096   0044AE  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13097   0044B2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13098   0044B6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13099   0044BA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13100   0044BE  1E05               	comf	??___xxtofl^0,f,c
 13101   0044C0  1E06               	comf	(??___xxtofl+1)^0,f,c
 13102   0044C2  1E07               	comf	(??___xxtofl+2)^0,f,c
 13103   0044C4  1E08               	comf	(??___xxtofl+3)^0,f,c
 13104   0044C6  2A05               	incf	??___xxtofl^0,f,c
 13105   0044C8  0E00               	movlw	0
 13106   0044CA  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13107   0044CC  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13108   0044CE  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13109   0044D0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13110   0044D4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13111   0044D8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13112   0044DC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13113   0044E0  EF7A  F022         	goto	l5187
 13114   0044E4                     l1337:
 13115   0044E4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13116   0044E8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13117   0044EC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13118   0044F0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13119   0044F4                     l5187:
 13120   0044F4  5001               	movf	___xxtofl@val^0,w,c
 13121   0044F6  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13122   0044F8  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13123   0044FA  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13124   0044FC  A4D8               	btfss	status,2,c
 13125   0044FE  EF83  F022         	goto	u5061
 13126   004502  EF85  F022         	goto	u5060
 13127   004506                     u5061:
 13128   004506  EF8F  F022         	goto	l5193
 13129   00450A                     u5060:
 13130   00450A  0E00               	movlw	0
 13131   00450C  6E01               	movwf	?___xxtofl^0,c
 13132   00450E  0E00               	movlw	0
 13133   004510  6E02               	movwf	(?___xxtofl+1)^0,c
 13134   004512  0E00               	movlw	0
 13135   004514  6E03               	movwf	(?___xxtofl+2)^0,c
 13136   004516  0E00               	movlw	0
 13137   004518  6E04               	movwf	(?___xxtofl+3)^0,c
 13138   00451A  EF20  F023         	goto	l1340
 13139   00451E                     l5193:
 13140   00451E  0E96               	movlw	150
 13141   004520  6E0A               	movwf	___xxtofl@exp^0,c
 13142   004522  EF99  F022         	goto	l5197
 13143   004526                     l5195:
 13144   004526  2A0A               	incf	___xxtofl@exp^0,f,c
 13145   004528  90D8               	bcf	status,0,c
 13146   00452A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13147   00452C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13148   00452E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13149   004530  320B               	rrcf	___xxtofl@arg^0,f,c
 13150   004532                     l5197:
 13151   004532  0E00               	movlw	0
 13152   004534  140B               	andwf	___xxtofl@arg^0,w,c
 13153   004536  6E05               	movwf	??___xxtofl^0,c
 13154   004538  0E00               	movlw	0
 13155   00453A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13156   00453C  6E06               	movwf	(??___xxtofl+1)^0,c
 13157   00453E  0E00               	movlw	0
 13158   004540  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13159   004542  6E07               	movwf	(??___xxtofl+2)^0,c
 13160   004544  0EFE               	movlw	254
 13161   004546  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13162   004548  6E08               	movwf	(??___xxtofl+3)^0,c
 13163   00454A  5005               	movf	??___xxtofl^0,w,c
 13164   00454C  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13165   00454E  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13166   004550  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13167   004552  A4D8               	btfss	status,2,c
 13168   004554  EFAE  F022         	goto	u5071
 13169   004558  EFB0  F022         	goto	u5070
 13170   00455C                     u5071:
 13171   00455C  EF93  F022         	goto	l5195
 13172   004560                     u5070:
 13173   004560  EFBE  F022         	goto	l1344
 13174   004564                     l5199:
 13175   004564  2A0A               	incf	___xxtofl@exp^0,f,c
 13176   004566  0E01               	movlw	1
 13177   004568  260B               	addwf	___xxtofl@arg^0,f,c
 13178   00456A  0E00               	movlw	0
 13179   00456C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13180   00456E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13181   004570  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13182   004572  90D8               	bcf	status,0,c
 13183   004574  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13184   004576  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13185   004578  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13186   00457A  320B               	rrcf	___xxtofl@arg^0,f,c
 13187   00457C                     l1344:
 13188   00457C  0E00               	movlw	0
 13189   00457E  140B               	andwf	___xxtofl@arg^0,w,c
 13190   004580  6E05               	movwf	??___xxtofl^0,c
 13191   004582  0E00               	movlw	0
 13192   004584  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13193   004586  6E06               	movwf	(??___xxtofl+1)^0,c
 13194   004588  0E00               	movlw	0
 13195   00458A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13196   00458C  6E07               	movwf	(??___xxtofl+2)^0,c
 13197   00458E  0EFF               	movlw	255
 13198   004590  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13199   004592  6E08               	movwf	(??___xxtofl+3)^0,c
 13200   004594  5005               	movf	??___xxtofl^0,w,c
 13201   004596  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13202   004598  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13203   00459A  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13204   00459C  A4D8               	btfss	status,2,c
 13205   00459E  EFD3  F022         	goto	u5081
 13206   0045A2  EFD5  F022         	goto	u5080
 13207   0045A6                     u5081:
 13208   0045A6  EFB2  F022         	goto	l5199
 13209   0045AA                     u5080:
 13210   0045AA  EFDD  F022         	goto	l5207
 13211   0045AE                     l5205:
 13212   0045AE  060A               	decf	___xxtofl@exp^0,f,c
 13213   0045B0  90D8               	bcf	status,0,c
 13214   0045B2  360B               	rlcf	___xxtofl@arg^0,f,c
 13215   0045B4  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13216   0045B6  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13217   0045B8  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13218   0045BA                     l5207:
 13219   0045BA  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13220   0045BC  EFE2  F022         	goto	u5091
 13221   0045C0  EFE4  F022         	goto	u5090
 13222   0045C4                     u5091:
 13223   0045C4  EFEC  F022         	goto	l1351
 13224   0045C8                     u5090:
 13225   0045C8  0E02               	movlw	2
 13226   0045CA  600A               	cpfslt	___xxtofl@exp^0,c
 13227   0045CC  EFEA  F022         	goto	u5101
 13228   0045D0  EFEC  F022         	goto	u5100
 13229   0045D4                     u5101:
 13230   0045D4  EFD7  F022         	goto	l5205
 13231   0045D8                     u5100:
 13232   0045D8                     l1351:
 13233   0045D8  B00A               	btfsc	___xxtofl@exp^0,0,c
 13234   0045DA  EFF1  F022         	goto	u5111
 13235   0045DE  EFF3  F022         	goto	u5110
 13236   0045E2                     u5111:
 13237   0045E2  EFF4  F022         	goto	l5213
 13238   0045E6                     u5110:
 13239   0045E6  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13240   0045E8                     l5213:
 13241   0045E8  90D8               	bcf	status,0,c
 13242   0045EA  320A               	rrcf	___xxtofl@exp^0,f,c
 13243   0045EC  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13244   0045F0  6A06               	clrf	(??___xxtofl+1)^0,c
 13245   0045F2  6A07               	clrf	(??___xxtofl+2)^0,c
 13246   0045F4  6A08               	clrf	(??___xxtofl+3)^0,c
 13247   0045F6  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13248   0045FA  6A07               	clrf	(??___xxtofl+2)^0,c
 13249   0045FC  6A06               	clrf	(??___xxtofl+1)^0,c
 13250   0045FE  6A05               	clrf	??___xxtofl^0,c
 13251   004600  5005               	movf	??___xxtofl^0,w,c
 13252   004602  120B               	iorwf	___xxtofl@arg^0,f,c
 13253   004604  5006               	movf	(??___xxtofl+1)^0,w,c
 13254   004606  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13255   004608  5007               	movf	(??___xxtofl+2)^0,w,c
 13256   00460A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13257   00460C  5008               	movf	(??___xxtofl+3)^0,w,c
 13258   00460E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13259   004610  5009               	movf	___xxtofl@sign^0,w,c
 13260   004612  B4D8               	btfsc	status,2,c
 13261   004614  EF0E  F023         	goto	u5121
 13262   004618  EF10  F023         	goto	u5120
 13263   00461C                     u5121:
 13264   00461C  EF18  F023         	goto	l5223
 13265   004620                     u5120:
 13266   004620  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13267   004622  EF17  F023         	goto	u5130
 13268   004626  EF15  F023         	goto	u5131
 13269   00462A                     u5131:
 13270   00462A  EF18  F023         	goto	l5223
 13271   00462E                     u5130:
 13272   00462E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13273   004630                     l5223:
 13274   004630  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13275   004634  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13276   004638  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13277   00463C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13278   004640                     l1340:
 13279   004640  0012               	return		;funcret
 13280   004642                     __end_of___xxtofl:
 13281                           	callstack 0
 13282                           
 13283 ;; *************** function ___flsub *****************
 13284 ;; Defined at:
 13285 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13286 ;; Parameters:    Size  Location     Type
 13287 ;;  b               4   41[COMRAM] unsigned char 
 13288 ;;  a               4   45[COMRAM] unsigned char 
 13289 ;; Auto vars:     Size  Location     Type
 13290 ;;		None
 13291 ;; Return value:  Size  Location     Type
 13292 ;;                  4   41[COMRAM] unsigned char 
 13293 ;; Registers used:
 13294 ;;		wreg, status,2, status,0, cstack
 13295 ;; Tracked objects:
 13296 ;;		On entry : 0/0
 13297 ;;		On exit  : 0/0
 13298 ;;		Unchanged: 0/0
 13299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13300 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13303 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13304 ;;Total ram usage:        8 bytes
 13305 ;; Hardware stack levels used: 1
 13306 ;; Hardware stack levels required when called: 2
 13307 ;; This function calls:
 13308 ;;		___fladd
 13309 ;; This function is called by:
 13310 ;;		_Colour_decider
 13311 ;;		_efgtoa
 13312 ;; This function uses a non-reentrant model
 13313 ;;
 13314                           
 13315                           	psect	text73
 13316   005D50                     __ptext73:
 13317                           	callstack 0
 13318   005D50                     ___flsub:
 13319                           	callstack 24
 13320   005D50  0E00               	movlw	0
 13321   005D52  1A2E               	xorwf	___flsub@a^0,f,c
 13322   005D54  0E00               	movlw	0
 13323   005D56  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13324   005D58  0E00               	movlw	0
 13325   005D5A  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13326   005D5C  0E80               	movlw	128
 13327   005D5E  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13328   005D60  C02A  F001         	movff	___flsub@b,___fladd@b
 13329   005D64  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13330   005D68  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13331   005D6C  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13332   005D70  C02E  F005         	movff	___flsub@a,___fladd@a
 13333   005D74  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13334   005D78  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13335   005D7C  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13336   005D80  EC43  F014         	call	___fladd	;wreg free
 13337   005D84  C001  F02A         	movff	?___fladd,?___flsub
 13338   005D88  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13339   005D8C  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13340   005D90  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13341   005D94  0012               	return		;funcret
 13342   005D96                     __end_of___flsub:
 13343                           	callstack 0
 13344                           
 13345 ;; *************** function ___fladd *****************
 13346 ;; Defined at:
 13347 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13348 ;; Parameters:    Size  Location     Type
 13349 ;;  b               4    0[COMRAM] unsigned char 
 13350 ;;  a               4    4[COMRAM] unsigned char 
 13351 ;; Auto vars:     Size  Location     Type
 13352 ;;  grs             1   15[COMRAM] unsigned char 
 13353 ;;  bexp            1   14[COMRAM] unsigned char 
 13354 ;;  aexp            1   13[COMRAM] unsigned char 
 13355 ;;  signs           1   12[COMRAM] unsigned char 
 13356 ;; Return value:  Size  Location     Type
 13357 ;;                  4    0[COMRAM] unsigned char 
 13358 ;; Registers used:
 13359 ;;		wreg, status,2, status,0
 13360 ;; Tracked objects:
 13361 ;;		On entry : 0/0
 13362 ;;		On exit  : 0/0
 13363 ;;		Unchanged: 0/0
 13364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13365 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13366 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13367 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13368 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13369 ;;Total ram usage:       16 bytes
 13370 ;; Hardware stack levels used: 1
 13371 ;; Hardware stack levels required when called: 1
 13372 ;; This function calls:
 13373 ;;		Nothing
 13374 ;; This function is called by:
 13375 ;;		_colour_rel
 13376 ;;		_Colour_decider
 13377 ;;		___flsub
 13378 ;;		_efgtoa
 13379 ;; This function uses a non-reentrant model
 13380 ;;
 13381                           
 13382                           	psect	text74
 13383   002886                     __ptext74:
 13384                           	callstack 0
 13385   002886                     ___fladd:
 13386                           	callstack 24
 13387   002886  5004               	movf	(___fladd@b+3)^0,w,c
 13388   002888  0B80               	andlw	128
 13389   00288A  6E0D               	movwf	___fladd@signs^0,c
 13390   00288C  5004               	movf	(___fladd@b+3)^0,w,c
 13391   00288E  2404               	addwf	(___fladd@b+3)^0,w,c
 13392   002890  6E0F               	movwf	___fladd@bexp^0,c
 13393   002892  AE03               	btfss	(___fladd@b+2)^0,7,c
 13394   002894  EF4E  F014         	goto	u3001
 13395   002898  EF50  F014         	goto	u3000
 13396   00289C                     u3001:
 13397   00289C  EF51  F014         	goto	l3829
 13398   0028A0                     u3000:
 13399   0028A0  800F               	bsf	___fladd@bexp^0,0,c
 13400   0028A2                     l3829:
 13401   0028A2  500F               	movf	___fladd@bexp^0,w,c
 13402   0028A4  B4D8               	btfsc	status,2,c
 13403   0028A6  EF57  F014         	goto	u3011
 13404   0028AA  EF59  F014         	goto	u3010
 13405   0028AE                     u3011:
 13406   0028AE  EF6E  F014         	goto	l3839
 13407   0028B2                     u3010:
 13408   0028B2  280F               	incf	___fladd@bexp^0,w,c
 13409   0028B4  A4D8               	btfss	status,2,c
 13410   0028B6  EF5F  F014         	goto	u3021
 13411   0028BA  EF61  F014         	goto	u3020
 13412   0028BE                     u3021:
 13413   0028BE  EF69  F014         	goto	l3835
 13414   0028C2                     u3020:
 13415   0028C2  0E00               	movlw	0
 13416   0028C4  6E01               	movwf	___fladd@b^0,c
 13417   0028C6  0E00               	movlw	0
 13418   0028C8  6E02               	movwf	(___fladd@b+1)^0,c
 13419   0028CA  0E00               	movlw	0
 13420   0028CC  6E03               	movwf	(___fladd@b+2)^0,c
 13421   0028CE  0E00               	movlw	0
 13422   0028D0  6E04               	movwf	(___fladd@b+3)^0,c
 13423   0028D2                     l3835:
 13424   0028D2  8E03               	bsf	(___fladd@b+2)^0,7,c
 13425   0028D4  0E00               	movlw	0
 13426   0028D6  6E04               	movwf	(___fladd@b+3)^0,c
 13427   0028D8  EF76  F014         	goto	l3841
 13428   0028DC                     l3839:
 13429   0028DC  0E00               	movlw	0
 13430   0028DE  6E01               	movwf	___fladd@b^0,c
 13431   0028E0  0E00               	movlw	0
 13432   0028E2  6E02               	movwf	(___fladd@b+1)^0,c
 13433   0028E4  0E00               	movlw	0
 13434   0028E6  6E03               	movwf	(___fladd@b+2)^0,c
 13435   0028E8  0E00               	movlw	0
 13436   0028EA  6E04               	movwf	(___fladd@b+3)^0,c
 13437   0028EC                     l3841:
 13438   0028EC  5008               	movf	(___fladd@a+3)^0,w,c
 13439   0028EE  0B80               	andlw	128
 13440   0028F0  6E0E               	movwf	___fladd@aexp^0,c
 13441   0028F2  500D               	movf	___fladd@signs^0,w,c
 13442   0028F4  180E               	xorwf	___fladd@aexp^0,w,c
 13443   0028F6  B4D8               	btfsc	status,2,c
 13444   0028F8  EF80  F014         	goto	u3031
 13445   0028FC  EF82  F014         	goto	u3030
 13446   002900                     u3031:
 13447   002900  EF83  F014         	goto	l3847
 13448   002904                     u3030:
 13449   002904  8C0D               	bsf	___fladd@signs^0,6,c
 13450   002906                     l3847:
 13451   002906  5008               	movf	(___fladd@a+3)^0,w,c
 13452   002908  2408               	addwf	(___fladd@a+3)^0,w,c
 13453   00290A  6E0E               	movwf	___fladd@aexp^0,c
 13454   00290C  AE07               	btfss	(___fladd@a+2)^0,7,c
 13455   00290E  EF8B  F014         	goto	u3041
 13456   002912  EF8D  F014         	goto	u3040
 13457   002916                     u3041:
 13458   002916  EF8E  F014         	goto	l3853
 13459   00291A                     u3040:
 13460   00291A  800E               	bsf	___fladd@aexp^0,0,c
 13461   00291C                     l3853:
 13462   00291C  500E               	movf	___fladd@aexp^0,w,c
 13463   00291E  B4D8               	btfsc	status,2,c
 13464   002920  EF94  F014         	goto	u3051
 13465   002924  EF96  F014         	goto	u3050
 13466   002928                     u3051:
 13467   002928  EFAB  F014         	goto	l3863
 13468   00292C                     u3050:
 13469   00292C  280E               	incf	___fladd@aexp^0,w,c
 13470   00292E  A4D8               	btfss	status,2,c
 13471   002930  EF9C  F014         	goto	u3061
 13472   002934  EF9E  F014         	goto	u3060
 13473   002938                     u3061:
 13474   002938  EFA6  F014         	goto	l3859
 13475   00293C                     u3060:
 13476   00293C  0E00               	movlw	0
 13477   00293E  6E05               	movwf	___fladd@a^0,c
 13478   002940  0E00               	movlw	0
 13479   002942  6E06               	movwf	(___fladd@a+1)^0,c
 13480   002944  0E00               	movlw	0
 13481   002946  6E07               	movwf	(___fladd@a+2)^0,c
 13482   002948  0E00               	movlw	0
 13483   00294A  6E08               	movwf	(___fladd@a+3)^0,c
 13484   00294C                     l3859:
 13485   00294C  8E07               	bsf	(___fladd@a+2)^0,7,c
 13486   00294E  0E00               	movlw	0
 13487   002950  6E08               	movwf	(___fladd@a+3)^0,c
 13488   002952  EFB3  F014         	goto	l3865
 13489   002956                     l3863:
 13490   002956  0E00               	movlw	0
 13491   002958  6E05               	movwf	___fladd@a^0,c
 13492   00295A  0E00               	movlw	0
 13493   00295C  6E06               	movwf	(___fladd@a+1)^0,c
 13494   00295E  0E00               	movlw	0
 13495   002960  6E07               	movwf	(___fladd@a+2)^0,c
 13496   002962  0E00               	movlw	0
 13497   002964  6E08               	movwf	(___fladd@a+3)^0,c
 13498   002966                     l3865:
 13499   002966  500F               	movf	___fladd@bexp^0,w,c
 13500   002968  5C0E               	subwf	___fladd@aexp^0,w,c
 13501   00296A  B0D8               	btfsc	status,0,c
 13502   00296C  EFBA  F014         	goto	u3071
 13503   002970  EFBC  F014         	goto	u3070
 13504   002974                     u3071:
 13505   002974  EFE3  F014         	goto	l3901
 13506   002978                     u3070:
 13507   002978  AC0D               	btfss	___fladd@signs^0,6,c
 13508   00297A  EFC1  F014         	goto	u3081
 13509   00297E  EFC3  F014         	goto	u3080
 13510   002982                     u3081:
 13511   002982  EFC5  F014         	goto	l3871
 13512   002986                     u3080:
 13513   002986  0E80               	movlw	128
 13514   002988  1A0D               	xorwf	___fladd@signs^0,f,c
 13515   00298A                     l3871:
 13516   00298A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13517   00298E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13518   002992  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13519   002996  C001  F010         	movff	___fladd@b,___fladd@grs
 13520   00299A  C005  F001         	movff	___fladd@a,___fladd@b
 13521   00299E  C010  F005         	movff	___fladd@grs,___fladd@a
 13522   0029A2  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13523   0029A6  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13524   0029AA  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13525   0029AE  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13526   0029B2  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13527   0029B6  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13528   0029BA  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13529   0029BE  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13530   0029C2  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13531   0029C6                     l3901:
 13532   0029C6  0E00               	movlw	0
 13533   0029C8  6E10               	movwf	___fladd@grs^0,c
 13534   0029CA  500F               	movf	___fladd@bexp^0,w,c
 13535   0029CC  C00E  F009         	movff	___fladd@aexp,??___fladd
 13536   0029D0  6A0A               	clrf	(??___fladd+1)^0,c
 13537   0029D2  5E09               	subwf	??___fladd^0,f,c
 13538   0029D4  0E00               	movlw	0
 13539   0029D6  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13540   0029D8  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13541   0029DA  EFF8  F014         	goto	u3091
 13542   0029DE  500A               	movf	(??___fladd+1)^0,w,c
 13543   0029E0  E109               	bnz	u3090
 13544   0029E2  0E1A               	movlw	26
 13545   0029E4  5C09               	subwf	??___fladd^0,w,c
 13546   0029E6  A0D8               	btfss	status,0,c
 13547   0029E8  EFF8  F014         	goto	u3091
 13548   0029EC  EFFA  F014         	goto	u3090
 13549   0029F0                     u3091:
 13550   0029F0  EF31  F015         	goto	l1211
 13551   0029F4                     u3090:
 13552   0029F4  5001               	movf	___fladd@b^0,w,c
 13553   0029F6  1002               	iorwf	(___fladd@b+1)^0,w,c
 13554   0029F8  1003               	iorwf	(___fladd@b+2)^0,w,c
 13555   0029FA  1004               	iorwf	(___fladd@b+3)^0,w,c
 13556   0029FC  A4D8               	btfss	status,2,c
 13557   0029FE  EF03  F015         	goto	u3101
 13558   002A02  EF06  F015         	goto	u3100
 13559   002A06                     u3101:
 13560   002A06  0E01               	movlw	1
 13561   002A08  EF07  F015         	goto	u3110
 13562   002A0C                     u3100:
 13563   002A0C  0E00               	movlw	0
 13564   002A0E                     u3110:
 13565   002A0E  6E10               	movwf	___fladd@grs^0,c
 13566   002A10  0E00               	movlw	0
 13567   002A12  6E01               	movwf	___fladd@b^0,c
 13568   002A14  0E00               	movlw	0
 13569   002A16  6E02               	movwf	(___fladd@b+1)^0,c
 13570   002A18  0E00               	movlw	0
 13571   002A1A  6E03               	movwf	(___fladd@b+2)^0,c
 13572   002A1C  0E00               	movlw	0
 13573   002A1E  6E04               	movwf	(___fladd@b+3)^0,c
 13574   002A20  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13575   002A24  EF3A  F015         	goto	l1210
 13576   002A28                     l1212:
 13577   002A28  A010               	btfss	___fladd@grs^0,0,c
 13578   002A2A  EF19  F015         	goto	u3121
 13579   002A2E  EF1B  F015         	goto	u3120
 13580   002A32                     u3121:
 13581   002A32  EF21  F015         	goto	l3913
 13582   002A36                     u3120:
 13583   002A36  90D8               	bcf	status,0,c
 13584   002A38  3010               	rrcf	___fladd@grs^0,w,c
 13585   002A3A  0901               	iorlw	1
 13586   002A3C  6E10               	movwf	___fladd@grs^0,c
 13587   002A3E  EF23  F015         	goto	l3915
 13588   002A42                     l3913:
 13589   002A42  90D8               	bcf	status,0,c
 13590   002A44  3210               	rrcf	___fladd@grs^0,f,c
 13591   002A46                     l3915:
 13592   002A46  A001               	btfss	___fladd@b^0,0,c
 13593   002A48  EF28  F015         	goto	u3131
 13594   002A4C  EF2A  F015         	goto	u3130
 13595   002A50                     u3131:
 13596   002A50  EF2B  F015         	goto	l3919
 13597   002A54                     u3130:
 13598   002A54  8E10               	bsf	___fladd@grs^0,7,c
 13599   002A56                     l3919:
 13600   002A56  3404               	rlcf	(___fladd@b+3)^0,w,c
 13601   002A58  3204               	rrcf	(___fladd@b+3)^0,f,c
 13602   002A5A  3203               	rrcf	(___fladd@b+2)^0,f,c
 13603   002A5C  3202               	rrcf	(___fladd@b+1)^0,f,c
 13604   002A5E  3201               	rrcf	___fladd@b^0,f,c
 13605   002A60  2A0F               	incf	___fladd@bexp^0,f,c
 13606   002A62                     l1211:
 13607   002A62  500E               	movf	___fladd@aexp^0,w,c
 13608   002A64  5C0F               	subwf	___fladd@bexp^0,w,c
 13609   002A66  A0D8               	btfss	status,0,c
 13610   002A68  EF38  F015         	goto	u3141
 13611   002A6C  EF3A  F015         	goto	u3140
 13612   002A70                     u3141:
 13613   002A70  EF14  F015         	goto	l1212
 13614   002A74                     u3140:
 13615   002A74                     l1210:
 13616   002A74  BC0D               	btfsc	___fladd@signs^0,6,c
 13617   002A76  EF3F  F015         	goto	u3151
 13618   002A7A  EF41  F015         	goto	u3150
 13619   002A7E                     u3151:
 13620   002A7E  EF81  F015         	goto	l3947
 13621   002A82                     u3150:
 13622   002A82  500F               	movf	___fladd@bexp^0,w,c
 13623   002A84  A4D8               	btfss	status,2,c
 13624   002A86  EF47  F015         	goto	u3161
 13625   002A8A  EF49  F015         	goto	u3160
 13626   002A8E                     u3161:
 13627   002A8E  EF53  F015         	goto	l3929
 13628   002A92                     u3160:
 13629   002A92  0E00               	movlw	0
 13630   002A94  6E01               	movwf	?___fladd^0,c
 13631   002A96  0E00               	movlw	0
 13632   002A98  6E02               	movwf	(?___fladd+1)^0,c
 13633   002A9A  0E00               	movlw	0
 13634   002A9C  6E03               	movwf	(?___fladd+2)^0,c
 13635   002A9E  0E00               	movlw	0
 13636   002AA0  6E04               	movwf	(?___fladd+3)^0,c
 13637   002AA2  EFA2  F016         	goto	l1219
 13638   002AA6                     l3929:
 13639   002AA6  5005               	movf	___fladd@a^0,w,c
 13640   002AA8  2601               	addwf	___fladd@b^0,f,c
 13641   002AAA  5006               	movf	(___fladd@a+1)^0,w,c
 13642   002AAC  2202               	addwfc	(___fladd@b+1)^0,f,c
 13643   002AAE  5007               	movf	(___fladd@a+2)^0,w,c
 13644   002AB0  2203               	addwfc	(___fladd@b+2)^0,f,c
 13645   002AB2  5008               	movf	(___fladd@a+3)^0,w,c
 13646   002AB4  2204               	addwfc	(___fladd@b+3)^0,f,c
 13647   002AB6  A004               	btfss	(___fladd@b+3)^0,0,c
 13648   002AB8  EF60  F015         	goto	u3171
 13649   002ABC  EF62  F015         	goto	u3170
 13650   002AC0                     u3171:
 13651   002AC0  EF0E  F016         	goto	l3983
 13652   002AC4                     u3170:
 13653   002AC4  A010               	btfss	___fladd@grs^0,0,c
 13654   002AC6  EF67  F015         	goto	u3181
 13655   002ACA  EF69  F015         	goto	u3180
 13656   002ACE                     u3181:
 13657   002ACE  EF6F  F015         	goto	l3937
 13658   002AD2                     u3180:
 13659   002AD2  90D8               	bcf	status,0,c
 13660   002AD4  3010               	rrcf	___fladd@grs^0,w,c
 13661   002AD6  0901               	iorlw	1
 13662   002AD8  6E10               	movwf	___fladd@grs^0,c
 13663   002ADA  EF71  F015         	goto	l3939
 13664   002ADE                     l3937:
 13665   002ADE  90D8               	bcf	status,0,c
 13666   002AE0  3210               	rrcf	___fladd@grs^0,f,c
 13667   002AE2                     l3939:
 13668   002AE2  A001               	btfss	___fladd@b^0,0,c
 13669   002AE4  EF76  F015         	goto	u3191
 13670   002AE8  EF78  F015         	goto	u3190
 13671   002AEC                     u3191:
 13672   002AEC  EF79  F015         	goto	l3943
 13673   002AF0                     u3190:
 13674   002AF0  8E10               	bsf	___fladd@grs^0,7,c
 13675   002AF2                     l3943:
 13676   002AF2  3404               	rlcf	(___fladd@b+3)^0,w,c
 13677   002AF4  3204               	rrcf	(___fladd@b+3)^0,f,c
 13678   002AF6  3203               	rrcf	(___fladd@b+2)^0,f,c
 13679   002AF8  3202               	rrcf	(___fladd@b+1)^0,f,c
 13680   002AFA  3201               	rrcf	___fladd@b^0,f,c
 13681   002AFC  2A0F               	incf	___fladd@bexp^0,f,c
 13682   002AFE  EF0E  F016         	goto	l3983
 13683   002B02                     l3947:
 13684   002B02  5005               	movf	___fladd@a^0,w,c
 13685   002B04  5C01               	subwf	___fladd@b^0,w,c
 13686   002B06  5006               	movf	(___fladd@a+1)^0,w,c
 13687   002B08  5802               	subwfb	(___fladd@b+1)^0,w,c
 13688   002B0A  5007               	movf	(___fladd@a+2)^0,w,c
 13689   002B0C  5803               	subwfb	(___fladd@b+2)^0,w,c
 13690   002B0E  5004               	movf	(___fladd@b+3)^0,w,c
 13691   002B10  0A80               	xorlw	128
 13692   002B12  6E09               	movwf	??___fladd^0,c
 13693   002B14  5008               	movf	(___fladd@a+3)^0,w,c
 13694   002B16  0A80               	xorlw	128
 13695   002B18  5809               	subwfb	??___fladd^0,w,c
 13696   002B1A  B0D8               	btfsc	status,0,c
 13697   002B1C  EF92  F015         	goto	u3201
 13698   002B20  EF94  F015         	goto	u3200
 13699   002B24                     u3201:
 13700   002B24  EFBF  F015         	goto	l3957
 13701   002B28                     u3200:
 13702   002B28  5001               	movf	___fladd@b^0,w,c
 13703   002B2A  5C05               	subwf	___fladd@a^0,w,c
 13704   002B2C  6E09               	movwf	??___fladd^0,c
 13705   002B2E  5002               	movf	(___fladd@b+1)^0,w,c
 13706   002B30  5806               	subwfb	(___fladd@a+1)^0,w,c
 13707   002B32  6E0A               	movwf	(??___fladd+1)^0,c
 13708   002B34  5003               	movf	(___fladd@b+2)^0,w,c
 13709   002B36  5807               	subwfb	(___fladd@a+2)^0,w,c
 13710   002B38  6E0B               	movwf	(??___fladd+2)^0,c
 13711   002B3A  5004               	movf	(___fladd@b+3)^0,w,c
 13712   002B3C  5808               	subwfb	(___fladd@a+3)^0,w,c
 13713   002B3E  6E0C               	movwf	(??___fladd+3)^0,c
 13714   002B40  0EFF               	movlw	255
 13715   002B42  2409               	addwf	??___fladd^0,w,c
 13716   002B44  6E01               	movwf	___fladd@b^0,c
 13717   002B46  0EFF               	movlw	255
 13718   002B48  200A               	addwfc	(??___fladd+1)^0,w,c
 13719   002B4A  6E02               	movwf	(___fladd@b+1)^0,c
 13720   002B4C  0EFF               	movlw	255
 13721   002B4E  200B               	addwfc	(??___fladd+2)^0,w,c
 13722   002B50  6E03               	movwf	(___fladd@b+2)^0,c
 13723   002B52  0EFF               	movlw	255
 13724   002B54  200C               	addwfc	(??___fladd+3)^0,w,c
 13725   002B56  6E04               	movwf	(___fladd@b+3)^0,c
 13726   002B58  0E80               	movlw	128
 13727   002B5A  1A0D               	xorwf	___fladd@signs^0,f,c
 13728   002B5C  6C10               	negf	___fladd@grs^0,c
 13729   002B5E  5010               	movf	___fladd@grs^0,w,c
 13730   002B60  A4D8               	btfss	status,2,c
 13731   002B62  EFB5  F015         	goto	u3211
 13732   002B66  EFB7  F015         	goto	u3210
 13733   002B6A                     u3211:
 13734   002B6A  EFC7  F015         	goto	l1227
 13735   002B6E                     u3210:
 13736   002B6E  0E01               	movlw	1
 13737   002B70  2601               	addwf	___fladd@b^0,f,c
 13738   002B72  0E00               	movlw	0
 13739   002B74  2202               	addwfc	(___fladd@b+1)^0,f,c
 13740   002B76  2203               	addwfc	(___fladd@b+2)^0,f,c
 13741   002B78  2204               	addwfc	(___fladd@b+3)^0,f,c
 13742   002B7A  EFC7  F015         	goto	l1227
 13743   002B7E                     l3957:
 13744   002B7E  5005               	movf	___fladd@a^0,w,c
 13745   002B80  5E01               	subwf	___fladd@b^0,f,c
 13746   002B82  5006               	movf	(___fladd@a+1)^0,w,c
 13747   002B84  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13748   002B86  5007               	movf	(___fladd@a+2)^0,w,c
 13749   002B88  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13750   002B8A  5008               	movf	(___fladd@a+3)^0,w,c
 13751   002B8C  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13752   002B8E                     l1227:
 13753   002B8E  5001               	movf	___fladd@b^0,w,c
 13754   002B90  1002               	iorwf	(___fladd@b+1)^0,w,c
 13755   002B92  1003               	iorwf	(___fladd@b+2)^0,w,c
 13756   002B94  1004               	iorwf	(___fladd@b+3)^0,w,c
 13757   002B96  A4D8               	btfss	status,2,c
 13758   002B98  EFD0  F015         	goto	u3221
 13759   002B9C  EFD2  F015         	goto	u3220
 13760   002BA0                     u3221:
 13761   002BA0  EF07  F016         	goto	l3981
 13762   002BA4                     u3220:
 13763   002BA4  5010               	movf	___fladd@grs^0,w,c
 13764   002BA6  A4D8               	btfss	status,2,c
 13765   002BA8  EFD8  F015         	goto	u3231
 13766   002BAC  EFDA  F015         	goto	u3230
 13767   002BB0                     u3231:
 13768   002BB0  EF07  F016         	goto	l3981
 13769   002BB4                     u3230:
 13770   002BB4  0E00               	movlw	0
 13771   002BB6  6E01               	movwf	?___fladd^0,c
 13772   002BB8  0E00               	movlw	0
 13773   002BBA  6E02               	movwf	(?___fladd+1)^0,c
 13774   002BBC  0E00               	movlw	0
 13775   002BBE  6E03               	movwf	(?___fladd+2)^0,c
 13776   002BC0  0E00               	movlw	0
 13777   002BC2  6E04               	movwf	(?___fladd+3)^0,c
 13778   002BC4  EFA2  F016         	goto	l1219
 13779   002BC8                     l3965:
 13780   002BC8  90D8               	bcf	status,0,c
 13781   002BCA  3601               	rlcf	___fladd@b^0,f,c
 13782   002BCC  3602               	rlcf	(___fladd@b+1)^0,f,c
 13783   002BCE  3603               	rlcf	(___fladd@b+2)^0,f,c
 13784   002BD0  3604               	rlcf	(___fladd@b+3)^0,f,c
 13785   002BD2  AE10               	btfss	___fladd@grs^0,7,c
 13786   002BD4  EFEE  F015         	goto	u3241
 13787   002BD8  EFF0  F015         	goto	u3240
 13788   002BDC                     u3241:
 13789   002BDC  EFF1  F015         	goto	l3971
 13790   002BE0                     u3240:
 13791   002BE0  8001               	bsf	___fladd@b^0,0,c
 13792   002BE2                     l3971:
 13793   002BE2  A010               	btfss	___fladd@grs^0,0,c
 13794   002BE4  EFF6  F015         	goto	u3251
 13795   002BE8  EFF8  F015         	goto	u3250
 13796   002BEC                     u3251:
 13797   002BEC  EFFC  F015         	goto	l3975
 13798   002BF0                     u3250:
 13799   002BF0  80D8               	bsf	status,0,c
 13800   002BF2  3610               	rlcf	___fladd@grs^0,f,c
 13801   002BF4  EFFE  F015         	goto	l3977
 13802   002BF8                     l3975:
 13803   002BF8  90D8               	bcf	status,0,c
 13804   002BFA  3610               	rlcf	___fladd@grs^0,f,c
 13805   002BFC                     l3977:
 13806   002BFC  500F               	movf	___fladd@bexp^0,w,c
 13807   002BFE  B4D8               	btfsc	status,2,c
 13808   002C00  EF04  F016         	goto	u3261
 13809   002C04  EF06  F016         	goto	u3260
 13810   002C08                     u3261:
 13811   002C08  EF07  F016         	goto	l3981
 13812   002C0C                     u3260:
 13813   002C0C  060F               	decf	___fladd@bexp^0,f,c
 13814   002C0E                     l3981:
 13815   002C0E  AE03               	btfss	(___fladd@b+2)^0,7,c
 13816   002C10  EF0C  F016         	goto	u3271
 13817   002C14  EF0E  F016         	goto	u3270
 13818   002C18                     u3271:
 13819   002C18  EFE4  F015         	goto	l3965
 13820   002C1C                     u3270:
 13821   002C1C                     l3983:
 13822   002C1C  0E00               	movlw	0
 13823   002C1E  6E0E               	movwf	___fladd@aexp^0,c
 13824   002C20  AE10               	btfss	___fladd@grs^0,7,c
 13825   002C22  EF15  F016         	goto	u3281
 13826   002C26  EF17  F016         	goto	u3280
 13827   002C2A                     u3281:
 13828   002C2A  EF2F  F016         	goto	l1236
 13829   002C2E                     u3280:
 13830   002C2E  C010  F009         	movff	___fladd@grs,??___fladd
 13831   002C32  0E7F               	movlw	127
 13832   002C34  1609               	andwf	??___fladd^0,f,c
 13833   002C36  B4D8               	btfsc	status,2,c
 13834   002C38  EF20  F016         	goto	u3291
 13835   002C3C  EF22  F016         	goto	u3290
 13836   002C40                     u3291:
 13837   002C40  EF26  F016         	goto	l1237
 13838   002C44                     u3290:
 13839   002C44                     l3989:
 13840   002C44  0E01               	movlw	1
 13841   002C46  6E0E               	movwf	___fladd@aexp^0,c
 13842   002C48  EF2F  F016         	goto	l1236
 13843   002C4C                     l1237:
 13844   002C4C  A001               	btfss	___fladd@b^0,0,c
 13845   002C4E  EF2B  F016         	goto	u3301
 13846   002C52  EF2D  F016         	goto	u3300
 13847   002C56                     u3301:
 13848   002C56  EF2F  F016         	goto	l1236
 13849   002C5A                     u3300:
 13850   002C5A  EF22  F016         	goto	l3989
 13851   002C5E                     l1236:
 13852   002C5E  500E               	movf	___fladd@aexp^0,w,c
 13853   002C60  B4D8               	btfsc	status,2,c
 13854   002C62  EF35  F016         	goto	u3311
 13855   002C66  EF37  F016         	goto	u3310
 13856   002C6A                     u3311:
 13857   002C6A  EF62  F016         	goto	l4001
 13858   002C6E                     u3310:
 13859   002C6E  0E01               	movlw	1
 13860   002C70  2601               	addwf	___fladd@b^0,f,c
 13861   002C72  0E00               	movlw	0
 13862   002C74  2202               	addwfc	(___fladd@b+1)^0,f,c
 13863   002C76  2203               	addwfc	(___fladd@b+2)^0,f,c
 13864   002C78  2204               	addwfc	(___fladd@b+3)^0,f,c
 13865   002C7A  A004               	btfss	(___fladd@b+3)^0,0,c
 13866   002C7C  EF42  F016         	goto	u3321
 13867   002C80  EF44  F016         	goto	u3320
 13868   002C84                     u3321:
 13869   002C84  EF62  F016         	goto	l4001
 13870   002C88                     u3320:
 13871   002C88  C001  F009         	movff	___fladd@b,??___fladd
 13872   002C8C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 13873   002C90  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 13874   002C94  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 13875   002C98  340C               	rlcf	(??___fladd+3)^0,w,c
 13876   002C9A  320C               	rrcf	(??___fladd+3)^0,f,c
 13877   002C9C  320B               	rrcf	(??___fladd+2)^0,f,c
 13878   002C9E  320A               	rrcf	(??___fladd+1)^0,f,c
 13879   002CA0  3209               	rrcf	??___fladd^0,f,c
 13880   002CA2  C009  F001         	movff	??___fladd,___fladd@b
 13881   002CA6  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 13882   002CAA  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 13883   002CAE  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 13884   002CB2  280F               	incf	___fladd@bexp^0,w,c
 13885   002CB4  B4D8               	btfsc	status,2,c
 13886   002CB6  EF5F  F016         	goto	u3331
 13887   002CBA  EF61  F016         	goto	u3330
 13888   002CBE                     u3331:
 13889   002CBE  EF62  F016         	goto	l4001
 13890   002CC2                     u3330:
 13891   002CC2  2A0F               	incf	___fladd@bexp^0,f,c
 13892   002CC4                     l4001:
 13893   002CC4  280F               	incf	___fladd@bexp^0,w,c
 13894   002CC6  B4D8               	btfsc	status,2,c
 13895   002CC8  EF68  F016         	goto	u3341
 13896   002CCC  EF6A  F016         	goto	u3340
 13897   002CD0                     u3341:
 13898   002CD0  EF72  F016         	goto	l4005
 13899   002CD4                     u3340:
 13900   002CD4  500F               	movf	___fladd@bexp^0,w,c
 13901   002CD6  A4D8               	btfss	status,2,c
 13902   002CD8  EF70  F016         	goto	u3351
 13903   002CDC  EF72  F016         	goto	u3350
 13904   002CE0                     u3351:
 13905   002CE0  EF84  F016         	goto	l4009
 13906   002CE4                     u3350:
 13907   002CE4                     l4005:
 13908   002CE4  0E00               	movlw	0
 13909   002CE6  6E01               	movwf	___fladd@b^0,c
 13910   002CE8  0E00               	movlw	0
 13911   002CEA  6E02               	movwf	(___fladd@b+1)^0,c
 13912   002CEC  0E00               	movlw	0
 13913   002CEE  6E03               	movwf	(___fladd@b+2)^0,c
 13914   002CF0  0E00               	movlw	0
 13915   002CF2  6E04               	movwf	(___fladd@b+3)^0,c
 13916   002CF4  500F               	movf	___fladd@bexp^0,w,c
 13917   002CF6  A4D8               	btfss	status,2,c
 13918   002CF8  EF80  F016         	goto	u3361
 13919   002CFC  EF82  F016         	goto	u3360
 13920   002D00                     u3361:
 13921   002D00  EF84  F016         	goto	l4009
 13922   002D04                     u3360:
 13923   002D04  0E00               	movlw	0
 13924   002D06  6E0D               	movwf	___fladd@signs^0,c
 13925   002D08                     l4009:
 13926   002D08  A00F               	btfss	___fladd@bexp^0,0,c
 13927   002D0A  EF89  F016         	goto	u3371
 13928   002D0E  EF8B  F016         	goto	u3370
 13929   002D12                     u3371:
 13930   002D12  EF8E  F016         	goto	l4013
 13931   002D16                     u3370:
 13932   002D16  8E03               	bsf	(___fladd@b+2)^0,7,c
 13933   002D18  EF8F  F016         	goto	l4015
 13934   002D1C                     l4013:
 13935   002D1C  9E03               	bcf	(___fladd@b+2)^0,7,c
 13936   002D1E                     l4015:
 13937   002D1E  90D8               	bcf	status,0,c
 13938   002D20  300F               	rrcf	___fladd@bexp^0,w,c
 13939   002D22  6E04               	movwf	(___fladd@b+3)^0,c
 13940   002D24  AE0D               	btfss	___fladd@signs^0,7,c
 13941   002D26  EF97  F016         	goto	u3381
 13942   002D2A  EF99  F016         	goto	u3380
 13943   002D2E                     u3381:
 13944   002D2E  EF9A  F016         	goto	l4021
 13945   002D32                     u3380:
 13946   002D32  8E04               	bsf	(___fladd@b+3)^0,7,c
 13947   002D34                     l4021:
 13948   002D34  C001  F001         	movff	___fladd@b,?___fladd
 13949   002D38  C002  F002         	movff	___fladd@b+1,?___fladd+1
 13950   002D3C  C003  F003         	movff	___fladd@b+2,?___fladd+2
 13951   002D40  C004  F004         	movff	___fladd@b+3,?___fladd+3
 13952   002D44                     l1219:
 13953   002D44  0012               	return		;funcret
 13954   002D46                     __end_of___fladd:
 13955                           	callstack 0
 13956                           
 13957 ;; *************** function ___flmul *****************
 13958 ;; Defined at:
 13959 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 13960 ;; Parameters:    Size  Location     Type
 13961 ;;  b               4   16[COMRAM] unsigned char 
 13962 ;;  a               4   20[COMRAM] unsigned char 
 13963 ;; Auto vars:     Size  Location     Type
 13964 ;;  prod            4   35[COMRAM] struct .
 13965 ;;  grs             4   29[COMRAM] unsigned long 
 13966 ;;  temp            2   39[COMRAM] struct .
 13967 ;;  bexp            1   34[COMRAM] unsigned char 
 13968 ;;  aexp            1   33[COMRAM] unsigned char 
 13969 ;;  sign            1   28[COMRAM] unsigned char 
 13970 ;; Return value:  Size  Location     Type
 13971 ;;                  4   16[COMRAM] unsigned char 
 13972 ;; Registers used:
 13973 ;;		wreg, status,2, status,0, prodl, prodh
 13974 ;; Tracked objects:
 13975 ;;		On entry : 0/0
 13976 ;;		On exit  : 0/0
 13977 ;;		Unchanged: 0/0
 13978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13979 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13980 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13981 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13982 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13983 ;;Total ram usage:       25 bytes
 13984 ;; Hardware stack levels used: 1
 13985 ;; Hardware stack levels required when called: 1
 13986 ;; This function calls:
 13987 ;;		Nothing
 13988 ;; This function is called by:
 13989 ;;		_Colour_decider
 13990 ;;		_reverseOneBlock
 13991 ;;		_ForwardOneBlock
 13992 ;;		_Forwardhalfblock
 13993 ;;		_efgtoa
 13994 ;;		_Backhalfblock
 13995 ;; This function uses a non-reentrant model
 13996 ;;
 13997                           
 13998                           	psect	text75
 13999   002D46                     __ptext75:
 14000                           	callstack 0
 14001   002D46                     ___flmul:
 14002                           	callstack 25
 14003   002D46  5014               	movf	(___flmul@b+3)^0,w,c
 14004   002D48  0B80               	andlw	128
 14005   002D4A  6E1D               	movwf	___flmul@sign^0,c
 14006   002D4C  5014               	movf	(___flmul@b+3)^0,w,c
 14007   002D4E  2414               	addwf	(___flmul@b+3)^0,w,c
 14008   002D50  6E23               	movwf	___flmul@bexp^0,c
 14009   002D52  AE13               	btfss	(___flmul@b+2)^0,7,c
 14010   002D54  EFAE  F016         	goto	u3811
 14011   002D58  EFB0  F016         	goto	u3810
 14012   002D5C                     u3811:
 14013   002D5C  EFB1  F016         	goto	l4295
 14014   002D60                     u3810:
 14015   002D60  8023               	bsf	___flmul@bexp^0,0,c
 14016   002D62                     l4295:
 14017   002D62  5023               	movf	___flmul@bexp^0,w,c
 14018   002D64  B4D8               	btfsc	status,2,c
 14019   002D66  EFB7  F016         	goto	u3821
 14020   002D6A  EFB9  F016         	goto	u3820
 14021   002D6E                     u3821:
 14022   002D6E  EFCC  F016         	goto	l4303
 14023   002D72                     u3820:
 14024   002D72  2823               	incf	___flmul@bexp^0,w,c
 14025   002D74  A4D8               	btfss	status,2,c
 14026   002D76  EFBF  F016         	goto	u3831
 14027   002D7A  EFC1  F016         	goto	u3830
 14028   002D7E                     u3831:
 14029   002D7E  EFC9  F016         	goto	l4301
 14030   002D82                     u3830:
 14031   002D82  0E00               	movlw	0
 14032   002D84  6E11               	movwf	___flmul@b^0,c
 14033   002D86  0E00               	movlw	0
 14034   002D88  6E12               	movwf	(___flmul@b+1)^0,c
 14035   002D8A  0E00               	movlw	0
 14036   002D8C  6E13               	movwf	(___flmul@b+2)^0,c
 14037   002D8E  0E00               	movlw	0
 14038   002D90  6E14               	movwf	(___flmul@b+3)^0,c
 14039   002D92                     l4301:
 14040   002D92  8E13               	bsf	(___flmul@b+2)^0,7,c
 14041   002D94  EFD4  F016         	goto	l4305
 14042   002D98                     l4303:
 14043   002D98  0E00               	movlw	0
 14044   002D9A  6E11               	movwf	___flmul@b^0,c
 14045   002D9C  0E00               	movlw	0
 14046   002D9E  6E12               	movwf	(___flmul@b+1)^0,c
 14047   002DA0  0E00               	movlw	0
 14048   002DA2  6E13               	movwf	(___flmul@b+2)^0,c
 14049   002DA4  0E00               	movlw	0
 14050   002DA6  6E14               	movwf	(___flmul@b+3)^0,c
 14051   002DA8                     l4305:
 14052   002DA8  5018               	movf	(___flmul@a+3)^0,w,c
 14053   002DAA  0B80               	andlw	128
 14054   002DAC  1A1D               	xorwf	___flmul@sign^0,f,c
 14055   002DAE  5018               	movf	(___flmul@a+3)^0,w,c
 14056   002DB0  2418               	addwf	(___flmul@a+3)^0,w,c
 14057   002DB2  6E22               	movwf	___flmul@aexp^0,c
 14058   002DB4  AE17               	btfss	(___flmul@a+2)^0,7,c
 14059   002DB6  EFDF  F016         	goto	u3841
 14060   002DBA  EFE1  F016         	goto	u3840
 14061   002DBE                     u3841:
 14062   002DBE  EFE2  F016         	goto	l4313
 14063   002DC2                     u3840:
 14064   002DC2  8022               	bsf	___flmul@aexp^0,0,c
 14065   002DC4                     l4313:
 14066   002DC4  5022               	movf	___flmul@aexp^0,w,c
 14067   002DC6  B4D8               	btfsc	status,2,c
 14068   002DC8  EFE8  F016         	goto	u3851
 14069   002DCC  EFEA  F016         	goto	u3850
 14070   002DD0                     u3851:
 14071   002DD0  EFFD  F016         	goto	l4321
 14072   002DD4                     u3850:
 14073   002DD4  2822               	incf	___flmul@aexp^0,w,c
 14074   002DD6  A4D8               	btfss	status,2,c
 14075   002DD8  EFF0  F016         	goto	u3861
 14076   002DDC  EFF2  F016         	goto	u3860
 14077   002DE0                     u3861:
 14078   002DE0  EFFA  F016         	goto	l4319
 14079   002DE4                     u3860:
 14080   002DE4  0E00               	movlw	0
 14081   002DE6  6E15               	movwf	___flmul@a^0,c
 14082   002DE8  0E00               	movlw	0
 14083   002DEA  6E16               	movwf	(___flmul@a+1)^0,c
 14084   002DEC  0E00               	movlw	0
 14085   002DEE  6E17               	movwf	(___flmul@a+2)^0,c
 14086   002DF0  0E00               	movlw	0
 14087   002DF2  6E18               	movwf	(___flmul@a+3)^0,c
 14088   002DF4                     l4319:
 14089   002DF4  8E17               	bsf	(___flmul@a+2)^0,7,c
 14090   002DF6  EF05  F017         	goto	l1296
 14091   002DFA                     l4321:
 14092   002DFA  0E00               	movlw	0
 14093   002DFC  6E15               	movwf	___flmul@a^0,c
 14094   002DFE  0E00               	movlw	0
 14095   002E00  6E16               	movwf	(___flmul@a+1)^0,c
 14096   002E02  0E00               	movlw	0
 14097   002E04  6E17               	movwf	(___flmul@a+2)^0,c
 14098   002E06  0E00               	movlw	0
 14099   002E08  6E18               	movwf	(___flmul@a+3)^0,c
 14100   002E0A                     l1296:
 14101   002E0A  5022               	movf	___flmul@aexp^0,w,c
 14102   002E0C  B4D8               	btfsc	status,2,c
 14103   002E0E  EF0B  F017         	goto	u3871
 14104   002E12  EF0D  F017         	goto	u3870
 14105   002E16                     u3871:
 14106   002E16  EF15  F017         	goto	l4325
 14107   002E1A                     u3870:
 14108   002E1A  5023               	movf	___flmul@bexp^0,w,c
 14109   002E1C  A4D8               	btfss	status,2,c
 14110   002E1E  EF13  F017         	goto	u3881
 14111   002E22  EF15  F017         	goto	u3880
 14112   002E26                     u3881:
 14113   002E26  EF1F  F017         	goto	l4329
 14114   002E2A                     u3880:
 14115   002E2A                     l4325:
 14116   002E2A  0E00               	movlw	0
 14117   002E2C  6E11               	movwf	?___flmul^0,c
 14118   002E2E  0E00               	movlw	0
 14119   002E30  6E12               	movwf	(?___flmul+1)^0,c
 14120   002E32  0E00               	movlw	0
 14121   002E34  6E13               	movwf	(?___flmul+2)^0,c
 14122   002E36  0E00               	movlw	0
 14123   002E38  6E14               	movwf	(?___flmul+3)^0,c
 14124   002E3A  EFB7  F018         	goto	l1300
 14125   002E3E                     l4329:
 14126   002E3E  5017               	movf	(___flmul@a+2)^0,w,c
 14127   002E40  0211               	mulwf	___flmul@b^0,c
 14128   002E42  CFF3 F028          	movff	prodl,___flmul@temp
 14129   002E46  CFF4 F029          	movff	prodh,___flmul@temp+1
 14130   002E4A  5028               	movf	___flmul@temp^0,w,c
 14131   002E4C  6E1E               	movwf	___flmul@grs^0,c
 14132   002E4E  6A1F               	clrf	(___flmul@grs+1)^0,c
 14133   002E50  6A20               	clrf	(___flmul@grs+2)^0,c
 14134   002E52  6A21               	clrf	(___flmul@grs+3)^0,c
 14135   002E54  5029               	movf	(___flmul@temp+1)^0,w,c
 14136   002E56  6E24               	movwf	___flmul@prod^0,c
 14137   002E58  6A25               	clrf	(___flmul@prod+1)^0,c
 14138   002E5A  6A26               	clrf	(___flmul@prod+2)^0,c
 14139   002E5C  6A27               	clrf	(___flmul@prod+3)^0,c
 14140   002E5E  5016               	movf	(___flmul@a+1)^0,w,c
 14141   002E60  0212               	mulwf	(___flmul@b+1)^0,c
 14142   002E62  CFF3 F028          	movff	prodl,___flmul@temp
 14143   002E66  CFF4 F029          	movff	prodh,___flmul@temp+1
 14144   002E6A  5028               	movf	___flmul@temp^0,w,c
 14145   002E6C  261E               	addwf	___flmul@grs^0,f,c
 14146   002E6E  0E00               	movlw	0
 14147   002E70  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14148   002E72  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14149   002E74  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14150   002E76  5029               	movf	(___flmul@temp+1)^0,w,c
 14151   002E78  2624               	addwf	___flmul@prod^0,f,c
 14152   002E7A  0E00               	movlw	0
 14153   002E7C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14154   002E7E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14155   002E80  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14156   002E82  5015               	movf	___flmul@a^0,w,c
 14157   002E84  0213               	mulwf	(___flmul@b+2)^0,c
 14158   002E86  CFF3 F028          	movff	prodl,___flmul@temp
 14159   002E8A  CFF4 F029          	movff	prodh,___flmul@temp+1
 14160   002E8E  5028               	movf	___flmul@temp^0,w,c
 14161   002E90  261E               	addwf	___flmul@grs^0,f,c
 14162   002E92  0E00               	movlw	0
 14163   002E94  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14164   002E96  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14165   002E98  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14166   002E9A  5029               	movf	(___flmul@temp+1)^0,w,c
 14167   002E9C  2624               	addwf	___flmul@prod^0,f,c
 14168   002E9E  0E00               	movlw	0
 14169   002EA0  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14170   002EA2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14171   002EA4  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14172   002EA6  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14173   002EAA  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14174   002EAE  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14175   002EB2  6A1E               	clrf	___flmul@grs^0,c
 14176   002EB4  5015               	movf	___flmul@a^0,w,c
 14177   002EB6  0212               	mulwf	(___flmul@b+1)^0,c
 14178   002EB8  CFF3 F028          	movff	prodl,___flmul@temp
 14179   002EBC  CFF4 F029          	movff	prodh,___flmul@temp+1
 14180   002EC0  5028               	movf	___flmul@temp^0,w,c
 14181   002EC2  261E               	addwf	___flmul@grs^0,f,c
 14182   002EC4  5029               	movf	(___flmul@temp+1)^0,w,c
 14183   002EC6  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14184   002EC8  0E00               	movlw	0
 14185   002ECA  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14186   002ECC  0E00               	movlw	0
 14187   002ECE  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14188   002ED0  5016               	movf	(___flmul@a+1)^0,w,c
 14189   002ED2  0211               	mulwf	___flmul@b^0,c
 14190   002ED4  CFF3 F028          	movff	prodl,___flmul@temp
 14191   002ED8  CFF4 F029          	movff	prodh,___flmul@temp+1
 14192   002EDC  5028               	movf	___flmul@temp^0,w,c
 14193   002EDE  261E               	addwf	___flmul@grs^0,f,c
 14194   002EE0  5029               	movf	(___flmul@temp+1)^0,w,c
 14195   002EE2  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14196   002EE4  0E00               	movlw	0
 14197   002EE6  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14198   002EE8  0E00               	movlw	0
 14199   002EEA  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14200   002EEC  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14201   002EF0  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14202   002EF4  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14203   002EF8  6A1E               	clrf	___flmul@grs^0,c
 14204   002EFA  5015               	movf	___flmul@a^0,w,c
 14205   002EFC  0211               	mulwf	___flmul@b^0,c
 14206   002EFE  CFF3 F028          	movff	prodl,___flmul@temp
 14207   002F02  CFF4 F029          	movff	prodh,___flmul@temp+1
 14208   002F06  5028               	movf	___flmul@temp^0,w,c
 14209   002F08  261E               	addwf	___flmul@grs^0,f,c
 14210   002F0A  5029               	movf	(___flmul@temp+1)^0,w,c
 14211   002F0C  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14212   002F0E  0E00               	movlw	0
 14213   002F10  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14214   002F12  0E00               	movlw	0
 14215   002F14  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14216   002F16  5017               	movf	(___flmul@a+2)^0,w,c
 14217   002F18  0212               	mulwf	(___flmul@b+1)^0,c
 14218   002F1A  CFF3 F028          	movff	prodl,___flmul@temp
 14219   002F1E  CFF4 F029          	movff	prodh,___flmul@temp+1
 14220   002F22  5028               	movf	___flmul@temp^0,w,c
 14221   002F24  2624               	addwf	___flmul@prod^0,f,c
 14222   002F26  5029               	movf	(___flmul@temp+1)^0,w,c
 14223   002F28  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14224   002F2A  0E00               	movlw	0
 14225   002F2C  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14226   002F2E  0E00               	movlw	0
 14227   002F30  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14228   002F32  5016               	movf	(___flmul@a+1)^0,w,c
 14229   002F34  0213               	mulwf	(___flmul@b+2)^0,c
 14230   002F36  CFF3 F028          	movff	prodl,___flmul@temp
 14231   002F3A  CFF4 F029          	movff	prodh,___flmul@temp+1
 14232   002F3E  5028               	movf	___flmul@temp^0,w,c
 14233   002F40  2624               	addwf	___flmul@prod^0,f,c
 14234   002F42  5029               	movf	(___flmul@temp+1)^0,w,c
 14235   002F44  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14236   002F46  0E00               	movlw	0
 14237   002F48  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14238   002F4A  0E00               	movlw	0
 14239   002F4C  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14240   002F4E  5017               	movf	(___flmul@a+2)^0,w,c
 14241   002F50  0213               	mulwf	(___flmul@b+2)^0,c
 14242   002F52  CFF3 F028          	movff	prodl,___flmul@temp
 14243   002F56  CFF4 F029          	movff	prodh,___flmul@temp+1
 14244   002F5A  5028               	movf	___flmul@temp^0,w,c
 14245   002F5C  6E19               	movwf	??___flmul^0,c
 14246   002F5E  5029               	movf	(___flmul@temp+1)^0,w,c
 14247   002F60  6E1A               	movwf	(??___flmul+1)^0,c
 14248   002F62  6A1B               	clrf	(??___flmul+2)^0,c
 14249   002F64  6A1C               	clrf	(??___flmul+3)^0,c
 14250   002F66  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14251   002F6A  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14252   002F6E  C019  F01A         	movff	??___flmul,??___flmul+1
 14253   002F72  6A19               	clrf	??___flmul^0,c
 14254   002F74  5019               	movf	??___flmul^0,w,c
 14255   002F76  2624               	addwf	___flmul@prod^0,f,c
 14256   002F78  501A               	movf	(??___flmul+1)^0,w,c
 14257   002F7A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14258   002F7C  501B               	movf	(??___flmul+2)^0,w,c
 14259   002F7E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14260   002F80  501C               	movf	(??___flmul+3)^0,w,c
 14261   002F82  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14262   002F84  C01E  F019         	movff	___flmul@grs,??___flmul
 14263   002F88  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14264   002F8C  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14265   002F90  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14266   002F94  0E19               	movlw	25
 14267   002F96  EFD2  F017         	goto	u3890
 14268   002F9A                     u3895:
 14269   002F9A  90D8               	bcf	status,0,c
 14270   002F9C  321C               	rrcf	(??___flmul+3)^0,f,c
 14271   002F9E  321B               	rrcf	(??___flmul+2)^0,f,c
 14272   002FA0  321A               	rrcf	(??___flmul+1)^0,f,c
 14273   002FA2  3219               	rrcf	??___flmul^0,f,c
 14274   002FA4                     u3890:
 14275   002FA4  2EE8               	decfsz	wreg,f,c
 14276   002FA6  EFCD  F017         	goto	u3895
 14277   002FAA  5019               	movf	??___flmul^0,w,c
 14278   002FAC  2624               	addwf	___flmul@prod^0,f,c
 14279   002FAE  501A               	movf	(??___flmul+1)^0,w,c
 14280   002FB0  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14281   002FB2  501B               	movf	(??___flmul+2)^0,w,c
 14282   002FB4  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14283   002FB6  501C               	movf	(??___flmul+3)^0,w,c
 14284   002FB8  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14285   002FBA  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14286   002FBE  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14287   002FC2  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14288   002FC6  6A1E               	clrf	___flmul@grs^0,c
 14289   002FC8  5022               	movf	___flmul@aexp^0,w,c
 14290   002FCA  C023  F019         	movff	___flmul@bexp,??___flmul
 14291   002FCE  6A1A               	clrf	(??___flmul+1)^0,c
 14292   002FD0  2619               	addwf	??___flmul^0,f,c
 14293   002FD2  0E00               	movlw	0
 14294   002FD4  221A               	addwfc	(??___flmul+1)^0,f,c
 14295   002FD6  0E82               	movlw	130
 14296   002FD8  2419               	addwf	??___flmul^0,w,c
 14297   002FDA  6E28               	movwf	___flmul@temp^0,c
 14298   002FDC  0EFF               	movlw	255
 14299   002FDE  201A               	addwfc	(??___flmul+1)^0,w,c
 14300   002FE0  6E29               	movwf	(___flmul@temp+1)^0,c
 14301   002FE2  EF08  F018         	goto	l4377
 14302   002FE6                     l4371:
 14303   002FE6  90D8               	bcf	status,0,c
 14304   002FE8  3624               	rlcf	___flmul@prod^0,f,c
 14305   002FEA  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14306   002FEC  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14307   002FEE  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14308   002FF0  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14309   002FF2  EFFD  F017         	goto	u3901
 14310   002FF6  EFFF  F017         	goto	u3900
 14311   002FFA                     u3901:
 14312   002FFA  EF00  F018         	goto	l1303
 14313   002FFE                     u3900:
 14314   002FFE  8024               	bsf	___flmul@prod^0,0,c
 14315   003000                     l1303:
 14316   003000  90D8               	bcf	status,0,c
 14317   003002  361E               	rlcf	___flmul@grs^0,f,c
 14318   003004  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14319   003006  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14320   003008  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14321   00300A  0628               	decf	___flmul@temp^0,f,c
 14322   00300C  A0D8               	btfss	status,0,c
 14323   00300E  0629               	decf	(___flmul@temp+1)^0,f,c
 14324   003010                     l4377:
 14325   003010  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14326   003012  EF0D  F018         	goto	u3911
 14327   003016  EF0F  F018         	goto	u3910
 14328   00301A                     u3911:
 14329   00301A  EFF3  F017         	goto	l4371
 14330   00301E                     u3910:
 14331   00301E  0E00               	movlw	0
 14332   003020  6E22               	movwf	___flmul@aexp^0,c
 14333   003022  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14334   003024  EF16  F018         	goto	u3921
 14335   003028  EF18  F018         	goto	u3920
 14336   00302C                     u3921:
 14337   00302C  EF3C  F018         	goto	l1305
 14338   003030                     u3920:
 14339   003030  0EFF               	movlw	255
 14340   003032  141E               	andwf	___flmul@grs^0,w,c
 14341   003034  6E19               	movwf	??___flmul^0,c
 14342   003036  0EFF               	movlw	255
 14343   003038  141F               	andwf	(___flmul@grs+1)^0,w,c
 14344   00303A  6E1A               	movwf	(??___flmul+1)^0,c
 14345   00303C  0EFF               	movlw	255
 14346   00303E  1420               	andwf	(___flmul@grs+2)^0,w,c
 14347   003040  6E1B               	movwf	(??___flmul+2)^0,c
 14348   003042  0E7F               	movlw	127
 14349   003044  1421               	andwf	(___flmul@grs+3)^0,w,c
 14350   003046  6E1C               	movwf	(??___flmul+3)^0,c
 14351   003048  5019               	movf	??___flmul^0,w,c
 14352   00304A  101A               	iorwf	(??___flmul+1)^0,w,c
 14353   00304C  101B               	iorwf	(??___flmul+2)^0,w,c
 14354   00304E  101C               	iorwf	(??___flmul+3)^0,w,c
 14355   003050  B4D8               	btfsc	status,2,c
 14356   003052  EF2D  F018         	goto	u3931
 14357   003056  EF2F  F018         	goto	u3930
 14358   00305A                     u3931:
 14359   00305A  EF33  F018         	goto	l1306
 14360   00305E                     u3930:
 14361   00305E                     l4385:
 14362   00305E  0E01               	movlw	1
 14363   003060  6E22               	movwf	___flmul@aexp^0,c
 14364   003062  EF3C  F018         	goto	l1305
 14365   003066                     l1306:
 14366   003066  A024               	btfss	___flmul@prod^0,0,c
 14367   003068  EF38  F018         	goto	u3941
 14368   00306C  EF3A  F018         	goto	u3940
 14369   003070                     u3941:
 14370   003070  EF3C  F018         	goto	l1305
 14371   003074                     u3940:
 14372   003074  EF2F  F018         	goto	l4385
 14373   003078                     l1305:
 14374   003078  5022               	movf	___flmul@aexp^0,w,c
 14375   00307A  B4D8               	btfsc	status,2,c
 14376   00307C  EF42  F018         	goto	u3951
 14377   003080  EF44  F018         	goto	u3950
 14378   003084                     u3951:
 14379   003084  EF68  F018         	goto	l4397
 14380   003088                     u3950:
 14381   003088  0E01               	movlw	1
 14382   00308A  2624               	addwf	___flmul@prod^0,f,c
 14383   00308C  0E00               	movlw	0
 14384   00308E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14385   003090  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14386   003092  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14387   003094  A027               	btfss	(___flmul@prod+3)^0,0,c
 14388   003096  EF4F  F018         	goto	u3961
 14389   00309A  EF51  F018         	goto	u3960
 14390   00309E                     u3961:
 14391   00309E  EF68  F018         	goto	l4397
 14392   0030A2                     u3960:
 14393   0030A2  C024  F019         	movff	___flmul@prod,??___flmul
 14394   0030A6  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14395   0030AA  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14396   0030AE  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14397   0030B2  341C               	rlcf	(??___flmul+3)^0,w,c
 14398   0030B4  321C               	rrcf	(??___flmul+3)^0,f,c
 14399   0030B6  321B               	rrcf	(??___flmul+2)^0,f,c
 14400   0030B8  321A               	rrcf	(??___flmul+1)^0,f,c
 14401   0030BA  3219               	rrcf	??___flmul^0,f,c
 14402   0030BC  C019  F024         	movff	??___flmul,___flmul@prod
 14403   0030C0  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14404   0030C4  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14405   0030C8  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14406   0030CC  4A28               	infsnz	___flmul@temp^0,f,c
 14407   0030CE  2A29               	incf	(___flmul@temp+1)^0,f,c
 14408   0030D0                     l4397:
 14409   0030D0  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14410   0030D2  EF73  F018         	goto	u3971
 14411   0030D6  5029               	movf	(___flmul@temp+1)^0,w,c
 14412   0030D8  E108               	bnz	u3970
 14413   0030DA  2828               	incf	___flmul@temp^0,w,c
 14414   0030DC  A0D8               	btfss	status,0,c
 14415   0030DE  EF73  F018         	goto	u3971
 14416   0030E2  EF75  F018         	goto	u3970
 14417   0030E6                     u3971:
 14418   0030E6  EF7F  F018         	goto	l4401
 14419   0030EA                     u3970:
 14420   0030EA  0E00               	movlw	0
 14421   0030EC  6E24               	movwf	___flmul@prod^0,c
 14422   0030EE  0E00               	movlw	0
 14423   0030F0  6E25               	movwf	(___flmul@prod+1)^0,c
 14424   0030F2  0E80               	movlw	128
 14425   0030F4  6E26               	movwf	(___flmul@prod+2)^0,c
 14426   0030F6  0E7F               	movlw	127
 14427   0030F8  6E27               	movwf	(___flmul@prod+3)^0,c
 14428   0030FA  EFAD  F018         	goto	l4413
 14429   0030FE                     l4401:
 14430   0030FE  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14431   003100  EF8C  F018         	goto	u3980
 14432   003104  5029               	movf	(___flmul@temp+1)^0,w,c
 14433   003106  E106               	bnz	u3981
 14434   003108  0428               	decf	___flmul@temp^0,w,c
 14435   00310A  B0D8               	btfsc	status,0,c
 14436   00310C  EF8A  F018         	goto	u3981
 14437   003110  EF8C  F018         	goto	u3980
 14438   003114                     u3981:
 14439   003114  EF98  F018         	goto	l1313
 14440   003118                     u3980:
 14441   003118  0E00               	movlw	0
 14442   00311A  6E24               	movwf	___flmul@prod^0,c
 14443   00311C  0E00               	movlw	0
 14444   00311E  6E25               	movwf	(___flmul@prod+1)^0,c
 14445   003120  0E00               	movlw	0
 14446   003122  6E26               	movwf	(___flmul@prod+2)^0,c
 14447   003124  0E00               	movlw	0
 14448   003126  6E27               	movwf	(___flmul@prod+3)^0,c
 14449   003128  0E00               	movlw	0
 14450   00312A  6E1D               	movwf	___flmul@sign^0,c
 14451   00312C  EFAD  F018         	goto	l4413
 14452   003130                     l1313:
 14453   003130  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14454   003134  0EFF               	movlw	255
 14455   003136  1624               	andwf	___flmul@prod^0,f,c
 14456   003138  0EFF               	movlw	255
 14457   00313A  1625               	andwf	(___flmul@prod+1)^0,f,c
 14458   00313C  0E7F               	movlw	127
 14459   00313E  1626               	andwf	(___flmul@prod+2)^0,f,c
 14460   003140  0E00               	movlw	0
 14461   003142  1627               	andwf	(___flmul@prod+3)^0,f,c
 14462   003144  A023               	btfss	___flmul@bexp^0,0,c
 14463   003146  EFA7  F018         	goto	u3991
 14464   00314A  EFA9  F018         	goto	u3990
 14465   00314E                     u3991:
 14466   00314E  EFAA  F018         	goto	l4411
 14467   003152                     u3990:
 14468   003152  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14469   003154                     l4411:
 14470   003154  90D8               	bcf	status,0,c
 14471   003156  3023               	rrcf	___flmul@bexp^0,w,c
 14472   003158  6E27               	movwf	(___flmul@prod+3)^0,c
 14473   00315A                     l4413:
 14474   00315A  501D               	movf	___flmul@sign^0,w,c
 14475   00315C  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14476   00315E  C024  F011         	movff	___flmul@prod,?___flmul
 14477   003162  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14478   003166  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14479   00316A  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14480   00316E                     l1300:
 14481   00316E  0012               	return		;funcret
 14482   003170                     __end_of___flmul:
 14483                           	callstack 0
 14484                           
 14485 ;; *************** function ___flge *****************
 14486 ;; Defined at:
 14487 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14488 ;; Parameters:    Size  Location     Type
 14489 ;;  ff1             4   41[COMRAM] unsigned char 
 14490 ;;  ff2             4   45[COMRAM] unsigned char 
 14491 ;; Auto vars:     Size  Location     Type
 14492 ;;		None
 14493 ;; Return value:  Size  Location     Type
 14494 ;;		None               void
 14495 ;; Registers used:
 14496 ;;		wreg, status,2, status,0
 14497 ;; Tracked objects:
 14498 ;;		On entry : 0/0
 14499 ;;		On exit  : 0/0
 14500 ;;		Unchanged: 0/0
 14501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14502 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14504 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14505 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14506 ;;Total ram usage:       12 bytes
 14507 ;; Hardware stack levels used: 1
 14508 ;; Hardware stack levels required when called: 1
 14509 ;; This function calls:
 14510 ;;		Nothing
 14511 ;; This function is called by:
 14512 ;;		_Colour_decider
 14513 ;;		_efgtoa
 14514 ;; This function uses a non-reentrant model
 14515 ;;
 14516                           
 14517                           	psect	text76
 14518   004BA0                     __ptext76:
 14519                           	callstack 0
 14520   004BA0                     ___flge:
 14521                           	callstack 25
 14522   004BA0  0E00               	movlw	0
 14523   004BA2  142A               	andwf	___flge@ff1^0,w,c
 14524   004BA4  6E32               	movwf	??___flge^0,c
 14525   004BA6  0E00               	movlw	0
 14526   004BA8  142B               	andwf	(___flge@ff1+1)^0,w,c
 14527   004BAA  6E33               	movwf	(??___flge+1)^0,c
 14528   004BAC  0E80               	movlw	128
 14529   004BAE  142C               	andwf	(___flge@ff1+2)^0,w,c
 14530   004BB0  6E34               	movwf	(??___flge+2)^0,c
 14531   004BB2  0E7F               	movlw	127
 14532   004BB4  142D               	andwf	(___flge@ff1+3)^0,w,c
 14533   004BB6  6E35               	movwf	(??___flge+3)^0,c
 14534   004BB8  5032               	movf	??___flge^0,w,c
 14535   004BBA  1033               	iorwf	(??___flge+1)^0,w,c
 14536   004BBC  1034               	iorwf	(??___flge+2)^0,w,c
 14537   004BBE  1035               	iorwf	(??___flge+3)^0,w,c
 14538   004BC0  A4D8               	btfss	status,2,c
 14539   004BC2  EFE5  F025         	goto	u4031
 14540   004BC6  EFE7  F025         	goto	u4030
 14541   004BCA                     u4031:
 14542   004BCA  EFEF  F025         	goto	l4445
 14543   004BCE                     u4030:
 14544   004BCE  0E00               	movlw	0
 14545   004BD0  6E2A               	movwf	___flge@ff1^0,c
 14546   004BD2  0E00               	movlw	0
 14547   004BD4  6E2B               	movwf	(___flge@ff1+1)^0,c
 14548   004BD6  0E00               	movlw	0
 14549   004BD8  6E2C               	movwf	(___flge@ff1+2)^0,c
 14550   004BDA  0E00               	movlw	0
 14551   004BDC  6E2D               	movwf	(___flge@ff1+3)^0,c
 14552   004BDE                     l4445:
 14553   004BDE  0E00               	movlw	0
 14554   004BE0  142E               	andwf	___flge@ff2^0,w,c
 14555   004BE2  6E32               	movwf	??___flge^0,c
 14556   004BE4  0E00               	movlw	0
 14557   004BE6  142F               	andwf	(___flge@ff2+1)^0,w,c
 14558   004BE8  6E33               	movwf	(??___flge+1)^0,c
 14559   004BEA  0E80               	movlw	128
 14560   004BEC  1430               	andwf	(___flge@ff2+2)^0,w,c
 14561   004BEE  6E34               	movwf	(??___flge+2)^0,c
 14562   004BF0  0E7F               	movlw	127
 14563   004BF2  1431               	andwf	(___flge@ff2+3)^0,w,c
 14564   004BF4  6E35               	movwf	(??___flge+3)^0,c
 14565   004BF6  5032               	movf	??___flge^0,w,c
 14566   004BF8  1033               	iorwf	(??___flge+1)^0,w,c
 14567   004BFA  1034               	iorwf	(??___flge+2)^0,w,c
 14568   004BFC  1035               	iorwf	(??___flge+3)^0,w,c
 14569   004BFE  A4D8               	btfss	status,2,c
 14570   004C00  EF04  F026         	goto	u4041
 14571   004C04  EF06  F026         	goto	u4040
 14572   004C08                     u4041:
 14573   004C08  EF0E  F026         	goto	l4449
 14574   004C0C                     u4040:
 14575   004C0C  0E00               	movlw	0
 14576   004C0E  6E2E               	movwf	___flge@ff2^0,c
 14577   004C10  0E00               	movlw	0
 14578   004C12  6E2F               	movwf	(___flge@ff2+1)^0,c
 14579   004C14  0E00               	movlw	0
 14580   004C16  6E30               	movwf	(___flge@ff2+2)^0,c
 14581   004C18  0E00               	movlw	0
 14582   004C1A  6E31               	movwf	(___flge@ff2+3)^0,c
 14583   004C1C                     l4449:
 14584   004C1C  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14585   004C1E  EF13  F026         	goto	u4051
 14586   004C22  EF15  F026         	goto	u4050
 14587   004C26                     u4051:
 14588   004C26  EF1E  F026         	goto	l4453
 14589   004C2A                     u4050:
 14590   004C2A  6C2A               	negf	___flge@ff1^0,c
 14591   004C2C  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14592   004C2E  B0D8               	btfsc	status,0,c
 14593   004C30  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14594   004C32  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14595   004C34  B0D8               	btfsc	status,0,c
 14596   004C36  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14597   004C38  0E80               	movlw	128
 14598   004C3A  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14599   004C3C                     l4453:
 14600   004C3C  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14601   004C3E  EF23  F026         	goto	u4061
 14602   004C42  EF25  F026         	goto	u4060
 14603   004C46                     u4061:
 14604   004C46  EF2E  F026         	goto	l947
 14605   004C4A                     u4060:
 14606   004C4A  6C2E               	negf	___flge@ff2^0,c
 14607   004C4C  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14608   004C4E  B0D8               	btfsc	status,0,c
 14609   004C50  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14610   004C52  1E30               	comf	(___flge@ff2+2)^0,f,c
 14611   004C54  B0D8               	btfsc	status,0,c
 14612   004C56  2A30               	incf	(___flge@ff2+2)^0,f,c
 14613   004C58  0E80               	movlw	128
 14614   004C5A  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14615   004C5C                     l947:
 14616   004C5C  0E00               	movlw	0
 14617   004C5E  1A2A               	xorwf	___flge@ff1^0,f,c
 14618   004C60  0E00               	movlw	0
 14619   004C62  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14620   004C64  0E00               	movlw	0
 14621   004C66  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14622   004C68  0E80               	movlw	128
 14623   004C6A  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14624   004C6C  0E00               	movlw	0
 14625   004C6E  1A2E               	xorwf	___flge@ff2^0,f,c
 14626   004C70  0E00               	movlw	0
 14627   004C72  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14628   004C74  0E00               	movlw	0
 14629   004C76  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14630   004C78  0E80               	movlw	128
 14631   004C7A  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14632   004C7C  502E               	movf	___flge@ff2^0,w,c
 14633   004C7E  5C2A               	subwf	___flge@ff1^0,w,c
 14634   004C80  502F               	movf	(___flge@ff2+1)^0,w,c
 14635   004C82  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14636   004C84  5030               	movf	(___flge@ff2+2)^0,w,c
 14637   004C86  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14638   004C88  5031               	movf	(___flge@ff2+3)^0,w,c
 14639   004C8A  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14640   004C8C  B0D8               	btfsc	status,0,c
 14641   004C8E  EF4B  F026         	goto	u4071
 14642   004C92  EF4D  F026         	goto	u4070
 14643   004C96                     u4071:
 14644   004C96  EF50  F026         	goto	l4459
 14645   004C9A                     u4070:
 14646   004C9A  90D8               	bcf	status,0,c
 14647   004C9C  EF51  F026         	goto	l952
 14648   004CA0                     l4459:
 14649   004CA0  80D8               	bsf	status,0,c
 14650   004CA2                     l952:
 14651   004CA2  0012               	return		;funcret
 14652   004CA4                     __end_of___flge:
 14653                           	callstack 0
 14654                           
 14655 ;; *************** function ___fleq *****************
 14656 ;; Defined at:
 14657 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14658 ;; Parameters:    Size  Location     Type
 14659 ;;  ff1             4   49[COMRAM] unsigned char 
 14660 ;;  ff2             4   53[COMRAM] unsigned char 
 14661 ;; Auto vars:     Size  Location     Type
 14662 ;;		None
 14663 ;; Return value:  Size  Location     Type
 14664 ;;		None               void
 14665 ;; Registers used:
 14666 ;;		wreg, status,2, status,0
 14667 ;; Tracked objects:
 14668 ;;		On entry : 0/0
 14669 ;;		On exit  : 0/0
 14670 ;;		Unchanged: 0/0
 14671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14672 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14674 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14675 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14676 ;;Total ram usage:       12 bytes
 14677 ;; Hardware stack levels used: 1
 14678 ;; Hardware stack levels required when called: 1
 14679 ;; This function calls:
 14680 ;;		Nothing
 14681 ;; This function is called by:
 14682 ;;		_Colour_decider
 14683 ;;		_efgtoa
 14684 ;; This function uses a non-reentrant model
 14685 ;;
 14686                           
 14687                           	psect	text77
 14688   005082                     __ptext77:
 14689                           	callstack 0
 14690   005082                     ___fleq:
 14691                           	callstack 25
 14692   005082  0E00               	movlw	0
 14693   005084  1432               	andwf	___fleq@ff1^0,w,c
 14694   005086  6E3A               	movwf	??___fleq^0,c
 14695   005088  0E00               	movlw	0
 14696   00508A  1433               	andwf	(___fleq@ff1+1)^0,w,c
 14697   00508C  6E3B               	movwf	(??___fleq+1)^0,c
 14698   00508E  0E80               	movlw	128
 14699   005090  1434               	andwf	(___fleq@ff1+2)^0,w,c
 14700   005092  6E3C               	movwf	(??___fleq+2)^0,c
 14701   005094  0E7F               	movlw	127
 14702   005096  1435               	andwf	(___fleq@ff1+3)^0,w,c
 14703   005098  6E3D               	movwf	(??___fleq+3)^0,c
 14704   00509A  503A               	movf	??___fleq^0,w,c
 14705   00509C  103B               	iorwf	(??___fleq+1)^0,w,c
 14706   00509E  103C               	iorwf	(??___fleq+2)^0,w,c
 14707   0050A0  103D               	iorwf	(??___fleq+3)^0,w,c
 14708   0050A2  A4D8               	btfss	status,2,c
 14709   0050A4  EF56  F028         	goto	u4001
 14710   0050A8  EF58  F028         	goto	u4000
 14711   0050AC                     u4001:
 14712   0050AC  EF60  F028         	goto	l4429
 14713   0050B0                     u4000:
 14714   0050B0  0E00               	movlw	0
 14715   0050B2  6E32               	movwf	___fleq@ff1^0,c
 14716   0050B4  0E00               	movlw	0
 14717   0050B6  6E33               	movwf	(___fleq@ff1+1)^0,c
 14718   0050B8  0E00               	movlw	0
 14719   0050BA  6E34               	movwf	(___fleq@ff1+2)^0,c
 14720   0050BC  0E00               	movlw	0
 14721   0050BE  6E35               	movwf	(___fleq@ff1+3)^0,c
 14722   0050C0                     l4429:
 14723   0050C0  0E00               	movlw	0
 14724   0050C2  1436               	andwf	___fleq@ff2^0,w,c
 14725   0050C4  6E3A               	movwf	??___fleq^0,c
 14726   0050C6  0E00               	movlw	0
 14727   0050C8  1437               	andwf	(___fleq@ff2+1)^0,w,c
 14728   0050CA  6E3B               	movwf	(??___fleq+1)^0,c
 14729   0050CC  0E80               	movlw	128
 14730   0050CE  1438               	andwf	(___fleq@ff2+2)^0,w,c
 14731   0050D0  6E3C               	movwf	(??___fleq+2)^0,c
 14732   0050D2  0E7F               	movlw	127
 14733   0050D4  1439               	andwf	(___fleq@ff2+3)^0,w,c
 14734   0050D6  6E3D               	movwf	(??___fleq+3)^0,c
 14735   0050D8  503A               	movf	??___fleq^0,w,c
 14736   0050DA  103B               	iorwf	(??___fleq+1)^0,w,c
 14737   0050DC  103C               	iorwf	(??___fleq+2)^0,w,c
 14738   0050DE  103D               	iorwf	(??___fleq+3)^0,w,c
 14739   0050E0  A4D8               	btfss	status,2,c
 14740   0050E2  EF75  F028         	goto	u4011
 14741   0050E6  EF77  F028         	goto	u4010
 14742   0050EA                     u4011:
 14743   0050EA  EF7F  F028         	goto	l4433
 14744   0050EE                     u4010:
 14745   0050EE  0E00               	movlw	0
 14746   0050F0  6E36               	movwf	___fleq@ff2^0,c
 14747   0050F2  0E00               	movlw	0
 14748   0050F4  6E37               	movwf	(___fleq@ff2+1)^0,c
 14749   0050F6  0E00               	movlw	0
 14750   0050F8  6E38               	movwf	(___fleq@ff2+2)^0,c
 14751   0050FA  0E00               	movlw	0
 14752   0050FC  6E39               	movwf	(___fleq@ff2+3)^0,c
 14753   0050FE                     l4433:
 14754   0050FE  5036               	movf	___fleq@ff2^0,w,c
 14755   005100  1832               	xorwf	___fleq@ff1^0,w,c
 14756   005102  E10F               	bnz	u4020
 14757   005104  5037               	movf	(___fleq@ff2+1)^0,w,c
 14758   005106  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 14759   005108  E10C               	bnz	u4020
 14760   00510A  5038               	movf	(___fleq@ff2+2)^0,w,c
 14761   00510C  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 14762   00510E  E109               	bnz	u4020
 14763   005110  5039               	movf	(___fleq@ff2+3)^0,w,c
 14764   005112  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 14765   005114  B4D8               	btfsc	status,2,c
 14766   005116  EF8F  F028         	goto	u4021
 14767   00511A  EF91  F028         	goto	u4020
 14768   00511E                     u4021:
 14769   00511E  EF94  F028         	goto	l4437
 14770   005122                     u4020:
 14771   005122  90D8               	bcf	status,0,c
 14772   005124  EF95  F028         	goto	l941
 14773   005128                     l4437:
 14774   005128  80D8               	bsf	status,0,c
 14775   00512A                     l941:
 14776   00512A  0012               	return		;funcret
 14777   00512C                     __end_of___fleq:
 14778                           	callstack 0
 14779                           
 14780 ;; *************** function ___fldiv *****************
 14781 ;; Defined at:
 14782 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14783 ;; Parameters:    Size  Location     Type
 14784 ;;  b               4   49[COMRAM] unsigned char 
 14785 ;;  a               4   53[COMRAM] unsigned char 
 14786 ;; Auto vars:     Size  Location     Type
 14787 ;;  grs             4   68[COMRAM] unsigned long 
 14788 ;;  rem             4   61[COMRAM] unsigned long 
 14789 ;;  new_exp         2   66[COMRAM] short 
 14790 ;;  aexp            1   73[COMRAM] unsigned char 
 14791 ;;  bexp            1   72[COMRAM] unsigned char 
 14792 ;;  sign            1   65[COMRAM] unsigned char 
 14793 ;; Return value:  Size  Location     Type
 14794 ;;                  4   49[COMRAM] unsigned char 
 14795 ;; Registers used:
 14796 ;;		wreg, status,2, status,0
 14797 ;; Tracked objects:
 14798 ;;		On entry : 0/0
 14799 ;;		On exit  : 0/0
 14800 ;;		Unchanged: 0/0
 14801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14802 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14803 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14804 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14805 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14806 ;;Total ram usage:       25 bytes
 14807 ;; Hardware stack levels used: 1
 14808 ;; Hardware stack levels required when called: 1
 14809 ;; This function calls:
 14810 ;;		Nothing
 14811 ;; This function is called by:
 14812 ;;		_colour_rel
 14813 ;;		_Colour_decider
 14814 ;;		_efgtoa
 14815 ;; This function uses a non-reentrant model
 14816 ;;
 14817                           
 14818                           	psect	text78
 14819   003170                     __ptext78:
 14820                           	callstack 0
 14821   003170                     ___fldiv:
 14822                           	callstack 25
 14823   003170  5035               	movf	(___fldiv@b+3)^0,w,c
 14824   003172  0B80               	andlw	128
 14825   003174  6E42               	movwf	___fldiv@sign^0,c
 14826   003176  5035               	movf	(___fldiv@b+3)^0,w,c
 14827   003178  2435               	addwf	(___fldiv@b+3)^0,w,c
 14828   00317A  6E49               	movwf	___fldiv@bexp^0,c
 14829   00317C  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14830   00317E  EFC3  F018         	goto	u3581
 14831   003182  EFC5  F018         	goto	u3580
 14832   003186                     u3581:
 14833   003186  EFC6  F018         	goto	l4157
 14834   00318A                     u3580:
 14835   00318A  8049               	bsf	___fldiv@bexp^0,0,c
 14836   00318C                     l4157:
 14837   00318C  5049               	movf	___fldiv@bexp^0,w,c
 14838   00318E  B4D8               	btfsc	status,2,c
 14839   003190  EFCC  F018         	goto	u3591
 14840   003194  EFCE  F018         	goto	u3590
 14841   003198                     u3591:
 14842   003198  EFE3  F018         	goto	l4167
 14843   00319C                     u3590:
 14844   00319C  2849               	incf	___fldiv@bexp^0,w,c
 14845   00319E  A4D8               	btfss	status,2,c
 14846   0031A0  EFD4  F018         	goto	u3601
 14847   0031A4  EFD6  F018         	goto	u3600
 14848   0031A8                     u3601:
 14849   0031A8  EFDE  F018         	goto	l4163
 14850   0031AC                     u3600:
 14851   0031AC  0E00               	movlw	0
 14852   0031AE  6E32               	movwf	___fldiv@b^0,c
 14853   0031B0  0E00               	movlw	0
 14854   0031B2  6E33               	movwf	(___fldiv@b+1)^0,c
 14855   0031B4  0E00               	movlw	0
 14856   0031B6  6E34               	movwf	(___fldiv@b+2)^0,c
 14857   0031B8  0E00               	movlw	0
 14858   0031BA  6E35               	movwf	(___fldiv@b+3)^0,c
 14859   0031BC                     l4163:
 14860   0031BC  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14861   0031BE  0E00               	movlw	0
 14862   0031C0  6E35               	movwf	(___fldiv@b+3)^0,c
 14863   0031C2  EFEB  F018         	goto	l4169
 14864   0031C6                     l4167:
 14865   0031C6  0E00               	movlw	0
 14866   0031C8  6E32               	movwf	___fldiv@b^0,c
 14867   0031CA  0E00               	movlw	0
 14868   0031CC  6E33               	movwf	(___fldiv@b+1)^0,c
 14869   0031CE  0E00               	movlw	0
 14870   0031D0  6E34               	movwf	(___fldiv@b+2)^0,c
 14871   0031D2  0E00               	movlw	0
 14872   0031D4  6E35               	movwf	(___fldiv@b+3)^0,c
 14873   0031D6                     l4169:
 14874   0031D6  5039               	movf	(___fldiv@a+3)^0,w,c
 14875   0031D8  0B80               	andlw	128
 14876   0031DA  1A42               	xorwf	___fldiv@sign^0,f,c
 14877   0031DC  5039               	movf	(___fldiv@a+3)^0,w,c
 14878   0031DE  2439               	addwf	(___fldiv@a+3)^0,w,c
 14879   0031E0  6E4A               	movwf	___fldiv@aexp^0,c
 14880   0031E2  AE38               	btfss	(___fldiv@a+2)^0,7,c
 14881   0031E4  EFF6  F018         	goto	u3611
 14882   0031E8  EFF8  F018         	goto	u3610
 14883   0031EC                     u3611:
 14884   0031EC  EFF9  F018         	goto	l4177
 14885   0031F0                     u3610:
 14886   0031F0  804A               	bsf	___fldiv@aexp^0,0,c
 14887   0031F2                     l4177:
 14888   0031F2  504A               	movf	___fldiv@aexp^0,w,c
 14889   0031F4  B4D8               	btfsc	status,2,c
 14890   0031F6  EFFF  F018         	goto	u3621
 14891   0031FA  EF01  F019         	goto	u3620
 14892   0031FE                     u3621:
 14893   0031FE  EF16  F019         	goto	l4187
 14894   003202                     u3620:
 14895   003202  284A               	incf	___fldiv@aexp^0,w,c
 14896   003204  A4D8               	btfss	status,2,c
 14897   003206  EF07  F019         	goto	u3631
 14898   00320A  EF09  F019         	goto	u3630
 14899   00320E                     u3631:
 14900   00320E  EF11  F019         	goto	l4183
 14901   003212                     u3630:
 14902   003212  0E00               	movlw	0
 14903   003214  6E36               	movwf	___fldiv@a^0,c
 14904   003216  0E00               	movlw	0
 14905   003218  6E37               	movwf	(___fldiv@a+1)^0,c
 14906   00321A  0E00               	movlw	0
 14907   00321C  6E38               	movwf	(___fldiv@a+2)^0,c
 14908   00321E  0E00               	movlw	0
 14909   003220  6E39               	movwf	(___fldiv@a+3)^0,c
 14910   003222                     l4183:
 14911   003222  8E38               	bsf	(___fldiv@a+2)^0,7,c
 14912   003224  0E00               	movlw	0
 14913   003226  6E39               	movwf	(___fldiv@a+3)^0,c
 14914   003228  EF1E  F019         	goto	l4189
 14915   00322C                     l4187:
 14916   00322C  0E00               	movlw	0
 14917   00322E  6E36               	movwf	___fldiv@a^0,c
 14918   003230  0E00               	movlw	0
 14919   003232  6E37               	movwf	(___fldiv@a+1)^0,c
 14920   003234  0E00               	movlw	0
 14921   003236  6E38               	movwf	(___fldiv@a+2)^0,c
 14922   003238  0E00               	movlw	0
 14923   00323A  6E39               	movwf	(___fldiv@a+3)^0,c
 14924   00323C                     l4189:
 14925   00323C  5036               	movf	___fldiv@a^0,w,c
 14926   00323E  1037               	iorwf	(___fldiv@a+1)^0,w,c
 14927   003240  1038               	iorwf	(___fldiv@a+2)^0,w,c
 14928   003242  1039               	iorwf	(___fldiv@a+3)^0,w,c
 14929   003244  A4D8               	btfss	status,2,c
 14930   003246  EF27  F019         	goto	u3641
 14931   00324A  EF29  F019         	goto	u3640
 14932   00324E                     u3641:
 14933   00324E  EF41  F019         	goto	l4201
 14934   003252                     u3640:
 14935   003252  0E00               	movlw	0
 14936   003254  6E32               	movwf	___fldiv@b^0,c
 14937   003256  0E00               	movlw	0
 14938   003258  6E33               	movwf	(___fldiv@b+1)^0,c
 14939   00325A  0E00               	movlw	0
 14940   00325C  6E34               	movwf	(___fldiv@b+2)^0,c
 14941   00325E  0E00               	movlw	0
 14942   003260  6E35               	movwf	(___fldiv@b+3)^0,c
 14943   003262  0E80               	movlw	128
 14944   003264  1234               	iorwf	(___fldiv@b+2)^0,f,c
 14945   003266  0E7F               	movlw	127
 14946   003268  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14947   00326A                     l4195:
 14948   00326A  5042               	movf	___fldiv@sign^0,w,c
 14949   00326C  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14950   00326E  C032  F032         	movff	___fldiv@b,?___fldiv
 14951   003272  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 14952   003276  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 14953   00327A  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 14954   00327E  EF84  F01A         	goto	l1264
 14955   003282                     l4201:
 14956   003282  5049               	movf	___fldiv@bexp^0,w,c
 14957   003284  A4D8               	btfss	status,2,c
 14958   003286  EF47  F019         	goto	u3651
 14959   00328A  EF49  F019         	goto	u3650
 14960   00328E                     u3651:
 14961   00328E  EF53  F019         	goto	l4209
 14962   003292                     u3650:
 14963   003292  0E00               	movlw	0
 14964   003294  6E32               	movwf	?___fldiv^0,c
 14965   003296  0E00               	movlw	0
 14966   003298  6E33               	movwf	(?___fldiv+1)^0,c
 14967   00329A  0E00               	movlw	0
 14968   00329C  6E34               	movwf	(?___fldiv+2)^0,c
 14969   00329E  0E00               	movlw	0
 14970   0032A0  6E35               	movwf	(?___fldiv+3)^0,c
 14971   0032A2  EF84  F01A         	goto	l1264
 14972   0032A6                     l4209:
 14973   0032A6  504A               	movf	___fldiv@aexp^0,w,c
 14974   0032A8  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 14975   0032AC  6A3B               	clrf	(??___fldiv+1)^0,c
 14976   0032AE  5E3A               	subwf	??___fldiv^0,f,c
 14977   0032B0  0E00               	movlw	0
 14978   0032B2  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 14979   0032B4  0E7F               	movlw	127
 14980   0032B6  243A               	addwf	??___fldiv^0,w,c
 14981   0032B8  6E43               	movwf	___fldiv@new_exp^0,c
 14982   0032BA  0E00               	movlw	0
 14983   0032BC  203B               	addwfc	(??___fldiv+1)^0,w,c
 14984   0032BE  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14985   0032C0  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 14986   0032C4  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 14987   0032C8  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 14988   0032CC  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 14989   0032D0  0E00               	movlw	0
 14990   0032D2  6E32               	movwf	___fldiv@b^0,c
 14991   0032D4  0E00               	movlw	0
 14992   0032D6  6E33               	movwf	(___fldiv@b+1)^0,c
 14993   0032D8  0E00               	movlw	0
 14994   0032DA  6E34               	movwf	(___fldiv@b+2)^0,c
 14995   0032DC  0E00               	movlw	0
 14996   0032DE  6E35               	movwf	(___fldiv@b+3)^0,c
 14997   0032E0  0E00               	movlw	0
 14998   0032E2  6E45               	movwf	___fldiv@grs^0,c
 14999   0032E4  0E00               	movlw	0
 15000   0032E6  6E46               	movwf	(___fldiv@grs+1)^0,c
 15001   0032E8  0E00               	movlw	0
 15002   0032EA  6E47               	movwf	(___fldiv@grs+2)^0,c
 15003   0032EC  0E00               	movlw	0
 15004   0032EE  6E48               	movwf	(___fldiv@grs+3)^0,c
 15005   0032F0  0E00               	movlw	0
 15006   0032F2  6E4A               	movwf	___fldiv@aexp^0,c
 15007   0032F4  EFB4  F019         	goto	l1266
 15008   0032F8                     l4219:
 15009   0032F8  504A               	movf	___fldiv@aexp^0,w,c
 15010   0032FA  B4D8               	btfsc	status,2,c
 15011   0032FC  EF82  F019         	goto	u3661
 15012   003300  EF84  F019         	goto	u3660
 15013   003304                     u3661:
 15014   003304  EF9B  F019         	goto	l4227
 15015   003308                     u3660:
 15016   003308  90D8               	bcf	status,0,c
 15017   00330A  363E               	rlcf	___fldiv@rem^0,f,c
 15018   00330C  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 15019   00330E  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 15020   003310  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 15021   003312  90D8               	bcf	status,0,c
 15022   003314  3632               	rlcf	___fldiv@b^0,f,c
 15023   003316  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15024   003318  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15025   00331A  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15026   00331C  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15027   00331E  EF93  F019         	goto	u3671
 15028   003322  EF95  F019         	goto	u3670
 15029   003326                     u3671:
 15030   003326  EF96  F019         	goto	l1269
 15031   00332A                     u3670:
 15032   00332A  8032               	bsf	___fldiv@b^0,0,c
 15033   00332C                     l1269:
 15034   00332C  90D8               	bcf	status,0,c
 15035   00332E  3645               	rlcf	___fldiv@grs^0,f,c
 15036   003330  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15037   003332  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15038   003334  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15039   003336                     l4227:
 15040   003336  5036               	movf	___fldiv@a^0,w,c
 15041   003338  5C3E               	subwf	___fldiv@rem^0,w,c
 15042   00333A  5037               	movf	(___fldiv@a+1)^0,w,c
 15043   00333C  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 15044   00333E  5038               	movf	(___fldiv@a+2)^0,w,c
 15045   003340  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 15046   003342  5039               	movf	(___fldiv@a+3)^0,w,c
 15047   003344  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 15048   003346  A0D8               	btfss	status,0,c
 15049   003348  EFA8  F019         	goto	u3681
 15050   00334C  EFAA  F019         	goto	u3680
 15051   003350                     u3681:
 15052   003350  EFB3  F019         	goto	l4233
 15053   003354                     u3680:
 15054   003354  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 15055   003356  5036               	movf	___fldiv@a^0,w,c
 15056   003358  5E3E               	subwf	___fldiv@rem^0,f,c
 15057   00335A  5037               	movf	(___fldiv@a+1)^0,w,c
 15058   00335C  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 15059   00335E  5038               	movf	(___fldiv@a+2)^0,w,c
 15060   003360  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15061   003362  5039               	movf	(___fldiv@a+3)^0,w,c
 15062   003364  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15063   003366                     l4233:
 15064   003366  2A4A               	incf	___fldiv@aexp^0,f,c
 15065   003368                     l1266:
 15066   003368  0E19               	movlw	25
 15067   00336A  644A               	cpfsgt	___fldiv@aexp^0,c
 15068   00336C  EFBA  F019         	goto	u3691
 15069   003370  EFBC  F019         	goto	u3690
 15070   003374                     u3691:
 15071   003374  EF7C  F019         	goto	l4219
 15072   003378                     u3690:
 15073   003378  503E               	movf	___fldiv@rem^0,w,c
 15074   00337A  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15075   00337C  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15076   00337E  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15077   003380  B4D8               	btfsc	status,2,c
 15078   003382  EFC5  F019         	goto	u3701
 15079   003386  EFC7  F019         	goto	u3700
 15080   00338A                     u3701:
 15081   00338A  EFDF  F019         	goto	l4245
 15082   00338E                     u3700:
 15083   00338E  8045               	bsf	___fldiv@grs^0,0,c
 15084   003390  EFDF  F019         	goto	l4245
 15085   003394                     l4239:
 15086   003394  90D8               	bcf	status,0,c
 15087   003396  3632               	rlcf	___fldiv@b^0,f,c
 15088   003398  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15089   00339A  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15090   00339C  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15091   00339E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15092   0033A0  EFD4  F019         	goto	u3711
 15093   0033A4  EFD6  F019         	goto	u3710
 15094   0033A8                     u3711:
 15095   0033A8  EFD7  F019         	goto	l1275
 15096   0033AC                     u3710:
 15097   0033AC  8032               	bsf	___fldiv@b^0,0,c
 15098   0033AE                     l1275:
 15099   0033AE  90D8               	bcf	status,0,c
 15100   0033B0  3645               	rlcf	___fldiv@grs^0,f,c
 15101   0033B2  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15102   0033B4  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15103   0033B6  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15104   0033B8  0643               	decf	___fldiv@new_exp^0,f,c
 15105   0033BA  A0D8               	btfss	status,0,c
 15106   0033BC  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15107   0033BE                     l4245:
 15108   0033BE  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15109   0033C0  EFE4  F019         	goto	u3721
 15110   0033C4  EFE6  F019         	goto	u3720
 15111   0033C8                     u3721:
 15112   0033C8  EFCA  F019         	goto	l4239
 15113   0033CC                     u3720:
 15114   0033CC  0E00               	movlw	0
 15115   0033CE  6E4A               	movwf	___fldiv@aexp^0,c
 15116   0033D0  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15117   0033D2  EFED  F019         	goto	u3731
 15118   0033D6  EFEF  F019         	goto	u3730
 15119   0033DA                     u3731:
 15120   0033DA  EF13  F01A         	goto	l1277
 15121   0033DE                     u3730:
 15122   0033DE  0EFF               	movlw	255
 15123   0033E0  1445               	andwf	___fldiv@grs^0,w,c
 15124   0033E2  6E3A               	movwf	??___fldiv^0,c
 15125   0033E4  0EFF               	movlw	255
 15126   0033E6  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15127   0033E8  6E3B               	movwf	(??___fldiv+1)^0,c
 15128   0033EA  0EFF               	movlw	255
 15129   0033EC  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15130   0033EE  6E3C               	movwf	(??___fldiv+2)^0,c
 15131   0033F0  0E7F               	movlw	127
 15132   0033F2  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15133   0033F4  6E3D               	movwf	(??___fldiv+3)^0,c
 15134   0033F6  503A               	movf	??___fldiv^0,w,c
 15135   0033F8  103B               	iorwf	(??___fldiv+1)^0,w,c
 15136   0033FA  103C               	iorwf	(??___fldiv+2)^0,w,c
 15137   0033FC  103D               	iorwf	(??___fldiv+3)^0,w,c
 15138   0033FE  B4D8               	btfsc	status,2,c
 15139   003400  EF04  F01A         	goto	u3741
 15140   003404  EF06  F01A         	goto	u3740
 15141   003408                     u3741:
 15142   003408  EF0A  F01A         	goto	l1278
 15143   00340C                     u3740:
 15144   00340C                     l4253:
 15145   00340C  0E01               	movlw	1
 15146   00340E  6E4A               	movwf	___fldiv@aexp^0,c
 15147   003410  EF13  F01A         	goto	l1277
 15148   003414                     l1278:
 15149   003414  A032               	btfss	___fldiv@b^0,0,c
 15150   003416  EF0F  F01A         	goto	u3751
 15151   00341A  EF11  F01A         	goto	u3750
 15152   00341E                     u3751:
 15153   00341E  EF13  F01A         	goto	l1277
 15154   003422                     u3750:
 15155   003422  EF06  F01A         	goto	l4253
 15156   003426                     l1277:
 15157   003426  504A               	movf	___fldiv@aexp^0,w,c
 15158   003428  B4D8               	btfsc	status,2,c
 15159   00342A  EF19  F01A         	goto	u3761
 15160   00342E  EF1B  F01A         	goto	u3760
 15161   003432                     u3761:
 15162   003432  EF3F  F01A         	goto	l4265
 15163   003436                     u3760:
 15164   003436  0E01               	movlw	1
 15165   003438  2632               	addwf	___fldiv@b^0,f,c
 15166   00343A  0E00               	movlw	0
 15167   00343C  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15168   00343E  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15169   003440  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15170   003442  A035               	btfss	(___fldiv@b+3)^0,0,c
 15171   003444  EF26  F01A         	goto	u3771
 15172   003448  EF28  F01A         	goto	u3770
 15173   00344C                     u3771:
 15174   00344C  EF3F  F01A         	goto	l4265
 15175   003450                     u3770:
 15176   003450  C032  F03A         	movff	___fldiv@b,??___fldiv
 15177   003454  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15178   003458  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15179   00345C  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15180   003460  343D               	rlcf	(??___fldiv+3)^0,w,c
 15181   003462  323D               	rrcf	(??___fldiv+3)^0,f,c
 15182   003464  323C               	rrcf	(??___fldiv+2)^0,f,c
 15183   003466  323B               	rrcf	(??___fldiv+1)^0,f,c
 15184   003468  323A               	rrcf	??___fldiv^0,f,c
 15185   00346A  C03A  F032         	movff	??___fldiv,___fldiv@b
 15186   00346E  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15187   003472  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15188   003476  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15189   00347A  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15190   00347C  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15191   00347E                     l4265:
 15192   00347E  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15193   003480  EF4A  F01A         	goto	u3781
 15194   003484  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15195   003486  E108               	bnz	u3780
 15196   003488  2843               	incf	___fldiv@new_exp^0,w,c
 15197   00348A  A0D8               	btfss	status,0,c
 15198   00348C  EF4A  F01A         	goto	u3781
 15199   003490  EF4C  F01A         	goto	u3780
 15200   003494                     u3781:
 15201   003494  EF57  F01A         	goto	l4269
 15202   003498                     u3780:
 15203   003498  0E00               	movlw	0
 15204   00349A  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15205   00349C  6843               	setf	___fldiv@new_exp^0,c
 15206   00349E  0E00               	movlw	0
 15207   0034A0  6E32               	movwf	___fldiv@b^0,c
 15208   0034A2  0E00               	movlw	0
 15209   0034A4  6E33               	movwf	(___fldiv@b+1)^0,c
 15210   0034A6  0E00               	movlw	0
 15211   0034A8  6E34               	movwf	(___fldiv@b+2)^0,c
 15212   0034AA  0E00               	movlw	0
 15213   0034AC  6E35               	movwf	(___fldiv@b+3)^0,c
 15214   0034AE                     l4269:
 15215   0034AE  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15216   0034B0  EF64  F01A         	goto	u3790
 15217   0034B4  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15218   0034B6  E106               	bnz	u3791
 15219   0034B8  0443               	decf	___fldiv@new_exp^0,w,c
 15220   0034BA  B0D8               	btfsc	status,0,c
 15221   0034BC  EF62  F01A         	goto	u3791
 15222   0034C0  EF64  F01A         	goto	u3790
 15223   0034C4                     u3791:
 15224   0034C4  EF72  F01A         	goto	l4273
 15225   0034C8                     u3790:
 15226   0034C8  0E00               	movlw	0
 15227   0034CA  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15228   0034CC  0E00               	movlw	0
 15229   0034CE  6E43               	movwf	___fldiv@new_exp^0,c
 15230   0034D0  0E00               	movlw	0
 15231   0034D2  6E32               	movwf	___fldiv@b^0,c
 15232   0034D4  0E00               	movlw	0
 15233   0034D6  6E33               	movwf	(___fldiv@b+1)^0,c
 15234   0034D8  0E00               	movlw	0
 15235   0034DA  6E34               	movwf	(___fldiv@b+2)^0,c
 15236   0034DC  0E00               	movlw	0
 15237   0034DE  6E35               	movwf	(___fldiv@b+3)^0,c
 15238   0034E0  0E00               	movlw	0
 15239   0034E2  6E42               	movwf	___fldiv@sign^0,c
 15240   0034E4                     l4273:
 15241   0034E4  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15242   0034E8  A049               	btfss	___fldiv@bexp^0,0,c
 15243   0034EA  EF79  F01A         	goto	u3801
 15244   0034EE  EF7B  F01A         	goto	u3800
 15245   0034F2                     u3801:
 15246   0034F2  EF7E  F01A         	goto	l4279
 15247   0034F6                     u3800:
 15248   0034F6  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15249   0034F8  EF7F  F01A         	goto	l4281
 15250   0034FC                     l4279:
 15251   0034FC  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15252   0034FE                     l4281:
 15253   0034FE  90D8               	bcf	status,0,c
 15254   003500  3049               	rrcf	___fldiv@bexp^0,w,c
 15255   003502  6E35               	movwf	(___fldiv@b+3)^0,c
 15256   003504  EF35  F019         	goto	l4195
 15257   003508                     l1264:
 15258   003508  0012               	return		;funcret
 15259   00350A                     __end_of___fldiv:
 15260                           	callstack 0
 15261                           
 15262 ;; *************** function _HighISR *****************
 15263 ;; Defined at:
 15264 ;;		line 23 in file "interrupts.c"
 15265 ;; Parameters:    Size  Location     Type
 15266 ;;		None
 15267 ;; Auto vars:     Size  Location     Type
 15268 ;;		None
 15269 ;; Return value:  Size  Location     Type
 15270 ;;                  1    wreg      void 
 15271 ;; Registers used:
 15272 ;;		wreg, status,2
 15273 ;; Tracked objects:
 15274 ;;		On entry : 0/0
 15275 ;;		On exit  : 0/0
 15276 ;;		Unchanged: 0/0
 15277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15282 ;;Total ram usage:        0 bytes
 15283 ;; Hardware stack levels used: 1
 15284 ;; This function calls:
 15285 ;;		Nothing
 15286 ;; This function is called by:
 15287 ;;		Interrupt level 2
 15288 ;; This function uses a non-reentrant model
 15289 ;;
 15290                           
 15291                           	psect	intcode
 15292   000008                     __pintcode:
 15293                           	callstack 0
 15294   000008                     _HighISR:
 15295                           	callstack 22
 15296                           
 15297                           ;incstack = 0
 15298   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15299   00000A                     
 15300                           ;interrupts.c: 25:     if (PIR0bits.TMR0IF){
 15301   00000A  010E               	movlb	14	; () banked
 15302   00000C  AB33               	btfss	51,5,b	;volatile
 15303   00000E  EF0B  F000         	goto	i2u567_41
 15304   000012  EF0D  F000         	goto	i2u567_40
 15305   000016                     i2u567_41:
 15306   000016  EF18  F000         	goto	i2l235
 15307   00001A                     i2u567_40:
 15308   00001A                     
 15309                           ; BSR set to: 14
 15310                           ;interrupts.c: 26:         TMR0H=0;
 15311   00001A  0E00               	movlw	0
 15312   00001C  6ED4               	movwf	212,c	;volatile
 15313                           
 15314                           ;interrupts.c: 27:         TMR0L=0;
 15315   00001E  0E00               	movlw	0
 15316   000020  6ED3               	movwf	211,c	;volatile
 15317                           
 15318                           ;interrupts.c: 28:         lost_flag=1;
 15319   000022  0E00               	movlw	0
 15320   000024  0101               	movlb	1	; () banked
 15321   000026  6F19               	movwf	(_lost_flag+1)& (0+255),b
 15322   000028  0E01               	movlw	1
 15323   00002A  6F18               	movwf	_lost_flag& (0+255),b
 15324   00002C                     
 15325                           ; BSR set to: 1
 15326                           ;interrupts.c: 29:         PIR0bits.TMR0IF=0;
 15327   00002C  010E               	movlb	14	; () banked
 15328   00002E  9B33               	bcf	51,5,b	;volatile
 15329   000030                     i2l235:
 15330                           
 15331                           ; BSR set to: 14
 15332   000030  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15333   000032  0011               	retfie		f
 15334   000034                     __end_of_HighISR:
 15335                           	callstack 0
 15336                           
 15337                           	psect	rparam
 15338   000000                     
 15339                           	psect	temp
 15340   00005F                     btemp:
 15341                           	callstack 0
 15342   00005F                     	ds	1
 15343   000000                     int$flags	set	btemp
 15344   000000                     wtemp8	set	btemp+1
 15345   000000                     ttemp5	set	btemp+1
 15346   000000                     ttemp6	set	btemp+4
 15347   000000                     ttemp7	set	btemp+8
 15348                           
 15349                           	psect	idloc
 15350                           
 15351                           ;Config register IDLOC0 @ 0x200000
 15352                           ;	unspecified, using default values
 15353   200000                     	org	2097152
 15354   200000  0FFF               	dw	4095
 15355                           
 15356                           ;Config register IDLOC1 @ 0x200002
 15357                           ;	unspecified, using default values
 15358   200002                     	org	2097154
 15359   200002  0FFF               	dw	4095
 15360                           
 15361                           ;Config register IDLOC2 @ 0x200004
 15362                           ;	unspecified, using default values
 15363   200004                     	org	2097156
 15364   200004  0FFF               	dw	4095
 15365                           
 15366                           ;Config register IDLOC3 @ 0x200006
 15367                           ;	unspecified, using default values
 15368   200006                     	org	2097158
 15369   200006  0FFF               	dw	4095
 15370                           
 15371                           ;Config register IDLOC4 @ 0x200008
 15372                           ;	unspecified, using default values
 15373   200008                     	org	2097160
 15374   200008  0FFF               	dw	4095
 15375                           
 15376                           ;Config register IDLOC5 @ 0x20000A
 15377                           ;	unspecified, using default values
 15378   20000A                     	org	2097162
 15379   20000A  0FFF               	dw	4095
 15380                           
 15381                           ;Config register IDLOC6 @ 0x20000C
 15382                           ;	unspecified, using default values
 15383   20000C                     	org	2097164
 15384   20000C  0FFF               	dw	4095
 15385                           
 15386                           ;Config register IDLOC7 @ 0x20000E
 15387                           ;	unspecified, using default values
 15388   20000E                     	org	2097166
 15389   20000E  0FFF               	dw	4095
 15390                           
 15391                           	psect	config
 15392                           
 15393                           ;Config register CONFIG1L @ 0x300000
 15394                           ;	External Oscillator mode Selection bits
 15395                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15396                           ;	Power-up default value for COSC bits
 15397                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15398   300000                     	org	3145728
 15399   300000  AA                 	db	170
 15400                           
 15401                           ;Config register CONFIG1H @ 0x300001
 15402                           ;	unspecified, using default values
 15403                           ;	Clock Out Enable bit
 15404                           ;	CLKOUTEN = 0x1, unprogrammed default
 15405                           ;	Clock Switch Enable bit
 15406                           ;	CSWEN = 0x1, unprogrammed default
 15407                           ;	Fail-Safe Clock Monitor Enable bit
 15408                           ;	FCMEN = 0x1, unprogrammed default
 15409   300001                     	org	3145729
 15410   300001  FF                 	db	255
 15411                           
 15412                           ;Config register CONFIG2L @ 0x300002
 15413                           ;	unspecified, using default values
 15414                           ;	Master Clear Enable bit
 15415                           ;	MCLRE = 0x1, unprogrammed default
 15416                           ;	Power-up Timer Enable bit
 15417                           ;	PWRTE = 0x1, unprogrammed default
 15418                           ;	Low-power BOR enable bit
 15419                           ;	LPBOREN = 0x1, unprogrammed default
 15420                           ;	Brown-out Reset Enable bits
 15421                           ;	BOREN = 0x3, unprogrammed default
 15422   300002                     	org	3145730
 15423   300002  FF                 	db	255
 15424                           
 15425                           ;Config register CONFIG2H @ 0x300003
 15426                           ;	unspecified, using default values
 15427                           ;	Brown Out Reset Voltage selection bits
 15428                           ;	BORV = 0x3, unprogrammed default
 15429                           ;	ZCD Disable bit
 15430                           ;	ZCD = 0x1, unprogrammed default
 15431                           ;	PPSLOCK bit One-Way Set Enable bit
 15432                           ;	PPS1WAY = 0x1, unprogrammed default
 15433                           ;	Stack Full/Underflow Reset Enable bit
 15434                           ;	STVREN = 0x1, unprogrammed default
 15435                           ;	Debugger Enable bit
 15436                           ;	DEBUG = 0x1, unprogrammed default
 15437                           ;	Extended Instruction Set Enable bit
 15438                           ;	XINST = 0x1, unprogrammed default
 15439   300003                     	org	3145731
 15440   300003  FF                 	db	255
 15441                           
 15442                           ;Config register CONFIG3L @ 0x300004
 15443                           ;	WDT Period Select bits
 15444                           ;	WDTCPS = 0x1F, unprogrammed default
 15445                           ;	WDT operating mode
 15446                           ;	WDTE = OFF, WDT Disabled
 15447   300004                     	org	3145732
 15448   300004  9F                 	db	159
 15449                           
 15450                           ;Config register CONFIG3H @ 0x300005
 15451                           ;	unspecified, using default values
 15452                           ;	WDT Window Select bits
 15453                           ;	WDTCWS = 0x7, unprogrammed default
 15454                           ;	WDT input clock selector
 15455                           ;	WDTCCS = 0x7, unprogrammed default
 15456   300005                     	org	3145733
 15457   300005  FF                 	db	255
 15458                           
 15459                           ;Config register CONFIG4L @ 0x300006
 15460                           ;	unspecified, using default values
 15461                           ;	Write Protection Block 0
 15462                           ;	WRT0 = 0x1, unprogrammed default
 15463                           ;	Write Protection Block 1
 15464                           ;	WRT1 = 0x1, unprogrammed default
 15465                           ;	Write Protection Block 2
 15466                           ;	WRT2 = 0x1, unprogrammed default
 15467                           ;	Write Protection Block 3
 15468                           ;	WRT3 = 0x1, unprogrammed default
 15469                           ;	Write Protection Block 3
 15470                           ;	WRT4 = 0x1, unprogrammed default
 15471                           ;	Write Protection Block 3
 15472                           ;	WRT5 = 0x1, unprogrammed default
 15473                           ;	Write Protection Block 3
 15474                           ;	WRT6 = 0x1, unprogrammed default
 15475                           ;	Write Protection Block 3
 15476                           ;	WRT7 = 0x1, unprogrammed default
 15477   300006                     	org	3145734
 15478   300006  FF                 	db	255
 15479                           
 15480                           ;Config register CONFIG4H @ 0x300007
 15481                           ;	unspecified, using default values
 15482                           ;	Configuration Register Write Protection bit
 15483                           ;	WRTC = 0x1, unprogrammed default
 15484                           ;	Boot Block Write Protection bit
 15485                           ;	WRTB = 0x1, unprogrammed default
 15486                           ;	Data EEPROM Write Protection bit
 15487                           ;	WRTD = 0x1, unprogrammed default
 15488                           ;	Scanner Enable bit
 15489                           ;	SCANE = 0x1, unprogrammed default
 15490                           ;	Low Voltage Programming Enable bit
 15491                           ;	LVP = 0x1, unprogrammed default
 15492   300007                     	org	3145735
 15493   300007  FF                 	db	255
 15494                           
 15495                           ;Config register CONFIG5L @ 0x300008
 15496                           ;	unspecified, using default values
 15497                           ;	UserNVM Program Memory Code Protection bit
 15498                           ;	CP = 0x1, unprogrammed default
 15499                           ;	DataNVM Memory Code Protection bit
 15500                           ;	CPD = 0x1, unprogrammed default
 15501   300008                     	org	3145736
 15502   300008  FF                 	db	255
 15503                           
 15504                           ;Config register CONFIG5H @ 0x300009
 15505                           ;	unspecified, using default values
 15506   300009                     	org	3145737
 15507   300009  FF                 	db	255
 15508                           
 15509                           ;Config register CONFIG6L @ 0x30000A
 15510                           ;	unspecified, using default values
 15511                           ;	Table Read Protection Block 0
 15512                           ;	EBTR0 = 0x1, unprogrammed default
 15513                           ;	Table Read Protection Block 1
 15514                           ;	EBTR1 = 0x1, unprogrammed default
 15515                           ;	Table Read Protection Block 2
 15516                           ;	EBTR2 = 0x1, unprogrammed default
 15517                           ;	Table Read Protection Block 3
 15518                           ;	EBTR3 = 0x1, unprogrammed default
 15519                           ;	Table Read Protection Block 4
 15520                           ;	EBTR4 = 0x1, unprogrammed default
 15521                           ;	Table Read Protection Block 5
 15522                           ;	EBTR5 = 0x1, unprogrammed default
 15523                           ;	Table Read Protection Block 6
 15524                           ;	EBTR6 = 0x1, unprogrammed default
 15525                           ;	Table Read Protection Block 7
 15526                           ;	EBTR7 = 0x1, unprogrammed default
 15527   30000A                     	org	3145738
 15528   30000A  FF                 	db	255
 15529                           
 15530                           ;Config register CONFIG6H @ 0x30000B
 15531                           ;	unspecified, using default values
 15532                           ;	Boot Block Table Read Protection bit
 15533                           ;	EBTRB = 0x1, unprogrammed default
 15534   30000B                     	org	3145739
 15535   30000B  FF                 	db	255
 15536                           tosu	equ	0xFFF
 15537                           tosh	equ	0xFFE
 15538                           tosl	equ	0xFFD
 15539                           stkptr	equ	0xFFC
 15540                           pclatu	equ	0xFFB
 15541                           pclath	equ	0xFFA
 15542                           pcl	equ	0xFF9
 15543                           tblptru	equ	0xFF8
 15544                           tblptrh	equ	0xFF7
 15545                           tblptrl	equ	0xFF6
 15546                           tablat	equ	0xFF5
 15547                           prodh	equ	0xFF4
 15548                           prodl	equ	0xFF3
 15549                           indf0	equ	0xFEF
 15550                           postinc0	equ	0xFEE
 15551                           postdec0	equ	0xFED
 15552                           preinc0	equ	0xFEC
 15553                           plusw0	equ	0xFEB
 15554                           fsr0h	equ	0xFEA
 15555                           fsr0l	equ	0xFE9
 15556                           wreg	equ	0xFE8
 15557                           indf1	equ	0xFE7
 15558                           postinc1	equ	0xFE6
 15559                           postdec1	equ	0xFE5
 15560                           preinc1	equ	0xFE4
 15561                           plusw1	equ	0xFE3
 15562                           fsr1h	equ	0xFE2
 15563                           fsr1l	equ	0xFE1
 15564                           bsr	equ	0xFE0
 15565                           indf2	equ	0xFDF
 15566                           postinc2	equ	0xFDE
 15567                           postdec2	equ	0xFDD
 15568                           preinc2	equ	0xFDC
 15569                           plusw2	equ	0xFDB
 15570                           fsr2h	equ	0xFDA
 15571                           fsr2l	equ	0xFD9
 15572                           status	equ	0xFD8

Data Sizes:
    Strings     53
    Constant    0
    Data        6
    BSS         383
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     150
    BANK1           256    108     222
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_1(CODE[45]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 45
		 -> STR_1(CODE[45]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 45
		 -> STR_1(CODE[45]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2793$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_1(CODE[45]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2709$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2709$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_reverseDetect
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0  412178
                                            113 BANK0      2     2      0
                                              0 BANK1    108   108      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9049
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   36029
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   35674
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   35321
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29475
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  159859
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                               _stop
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   18683
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8872
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4   16228
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                      _reverseDetect
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6746
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    9330
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3785
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   24147
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4408
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _TurnDelay
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _TurnDelay
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _reverseDetect
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _ReverseYellow
       _ForwardOneBlock
       _reverseDetect
       _turnRight45
     _reverseDetect
     _stop
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6C      DE       7       86.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      96       5       93.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllllh     17      0       0      38        0.0%
BITBIGSFRhllhh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRhllhlh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      B      0       0      59        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlllll      5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlllh       2      0       0      37        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllhll      1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C2      62        0.0%
DATA                 0      0     2C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 13 14:38:14 2023

               _color_read_Red 5B76                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5B26                   ___fldiv@sign 0042                _color_read_Blue 5C16  
                           l51 5B74                             l60 5C64                             l45 5A30  
                           l54 5BC4                             l63 572A                             l48 60AE  
                           l57 5C14                             l66 3836                             l76 1912  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 42AE  
             _color_read_Green 5BC6                readColours@vals 000C              ??_Interrupts_init 0001  
                          l140 601A                            l205 60F0                            l214 5FF0  
                          l143 601C                            l152 6126                            l208 6104  
                          l161 5E5E                            l146 6042                            l155 6130  
                          l500 53A2                            l229 611C                            l149 613A  
                          l158 6110                            l522 5FC0                            l531 5838  
                          l540 5892                            l516 5304                            l508 5080  
                          l196 60EC                            l525 5D00                            l470 4934  
                          l534 57DE                            l366 23F2                            l519 5FA6  
                          l463 542A                            l528 5D4E                            l552 56CC  
                          l392 27F4                            l561 598C                            l537 5784  
                          l641 3DF4                            l546 5EDC                            l570 4F20  
                          l555 5A82                            l635 3DF4                            l476 54A8  
                          l484 5266                            l492 51C8                            l564 59DE  
                          l580 4396                            l388 2836                            l549 5F1A  
                          l573 4FD6                            l581 4406                            l558 5AD4  
                          l670 60CE                            l582 43CE                            l398 2882  
                          l567 5600                            l647 3E1C                            l576 443C  
                          l673 6068                            l809 4A98                            l577 42CC  
                          l682 608E                            l587 4422                            l579 4322  
                          l676 5F74                            l588 4472                            l941 512A  
                          l589 448C                            l679 5F8A                            l952 4CA2  
                          l947 4C5C                            l796 47C8                            l956 5F52  
                          l979 4B9E                            _abs 5E60                            _pad 54AA  
                          _rel 014C                            wreg 000FE8                   ___flmul@aexp 0022  
                 ___flmul@bexp 0023                   ___flmul@sign 001D                   ___flmul@temp 0028  
                 ___flmul@prod 0024                   ___fltol@exp1 000A                Colour_decider@i 007A  
                         l1210 2A74                           l1211 2A62                           ?_abs 0013  
                         l1300 316E                           l1212 2A28                           l1303 3000  
                         l1313 3130                           l1305 3078                           l1401 3EAA  
                         l1306 3066                           l1227 2B8E                           l1219 2D44  
                         l1403 3EB2                           l1236 2C5E                           l1252 5D94  
                         l1340 4640                           l1180 5596                           l1404 3EF8  
                         l1237 2C4C                           l1173 558E                           l1351 45D8  
                         l1511 5E96                           l1415 409A                           l1431 1AEC  
                         l1264 3508                           l1344 457C                           l1520 42AC  
                         l1360 593A                           l4001 2CC4                           l1337 44E4  
                         l1266 3368                           l1514 5E9E                           l1506 4DA0  
                         l1426 230C                           l1275 33AE                           l4011 2D16  
                         l4003 2CD4                           l1523 41F0                           l1531 5656  
                         l1540 5B24                           l1277 3426                           l1269 332C  
                         l4021 2D34                           l4013 2D1C                           l4005 2CE4  
                         l4101 475E                           l1429 1CA6                           l1278 3414  
                         l1534 5666                           l4015 2D1E                           l4007 2D04  
                         l4031 5546                           l4111 47A8                           l4103 4760  
                         l1296 2E0A                           l1552 4E6A                           l1560 5E1C  
                         l1392 54CC                           l4201 3282                           l4017 2D24  
                         l4009 2D08                           l4041 5580                           l4033 554E  
                         l4025 5524                           l5001 5D02                           l4105 4772  
                         l4121 4968                           l1474 3B3C                           l4211 32C0  
                         l4203 3292                           l4019 2D32                           l4043 5582  
                         l4035 555C                           l4027 552C                           l5011 57F4  
                         l5003 5D16                           l4107 4778                           l4131 49C0  
                         l4123 496C                           l4115 4936                           l1563 6142  
                         l4051 5DF8                           l1459 20EE                           l1396 5522  
                         l4221 3308                           l4213 32D0                           l4205 3292  
                         l4301 2D92                           l4045 5588                           l4037 5562  
                         l4029 553E                           l4061 484E                           l5013 580C  
                         l5005 5D22                           l4109 4788                           l4141 4A42  
                         l4133 49D4                           l4125 497A                           l4117 493A  
                         l4053 5DFC                           l5021 3838                           l4231 3356  
                         l4223 331C                           l4215 32E0                           l4151 3170  
                         l4311 2DC2                           l4303 2D98                           l4039 5578  
                         l4063 4852                           l4055 47CA                           l5007 5D36  
                         l5111 6006                           l5103 5FF2                           l5015 572C  
                         l4071 4642                           l4135 49E2                           l4143 4A48  
                         l4127 499A                           l4119 4948                           l4047 5DDA  
                         l5031 3890                           l5023 3860                           l1496 58E8  
                         l4241 339E                           l4233 3366                           l4225 332A  
                         l4217 32F0                           l4209 32A6                           l4161 31AC  
                         l4153 317C                           l4401 30FE                           l4321 2DFA  
                         l4313 2DC4                           l4305 2DA8                           l5201 4566  
                         l4065 4894                           l4057 47E6                           l5009 57E0  
                         l5113 6008                           l5105 5FFC                           l5017 5740  
                         l4081 4686                           l4073 4646                           l4145 4A58  
                         l4137 4A10                           l4129 49B8                           l4049 5DE6  
                         l1569 5DD8                           l5041 3956                           l5033 38B0  
                         l5025 386E                           l4251 33DE                           l4243 33AC  
                         l4235 3378                           l4227 3336                           l4219 32F8  
                         l4171 31DC                           l4163 31BC                           l4155 318A  
                         l4411 3154                           l4403 3118                           l4331 2E4A  
                         l4323 2E1A                           l4315 2DD4                           l4307 2DAE  
                         l5211 45E6                           l5203 4572                           l4067 48B0  
                         l4059 483A                           l5107 6002                           l5115 6092  
                         l5019 5758                           l5131 5C0C                           l5123 5B76  
                         l4091 46DC                           l4083 46A6                           l4075 4654  
                         l4147 4A78                           l4139 4A30                           l5043 3966  
                         l5035 38D0                           l5027 387C                           l4261 3450  
                         l4253 340C                           l4237 338E                           l4245 33BE  
                         l4229 3354                           l4181 3212                           l4173 31E2  
                         l4165 31BE                           l4157 318C                           l4405 3134  
                         l4413 315A                           l4341 2E9A                           l4333 2E54  
                         l4325 2E2A                           l4317 2DE4                           l4309 2DB4  
                         l4421 5D60                           l5221 462E                           l5213 45E8  
                         l5205 45AE                           l5301 0F10                           l4069 48F4  
                         l5109 6004                           l5125 5BBC                           l5117 5B26  
                         l5141 60F0                           l4093 46F0                           l4085 46AA  
                         l4077 4674                           l5045 397C                           l5053 3994  
                         l5037 3926                           l5029 3880                           l4271 34C8  
                         l4263 347A                           l4247 33CC                           l4239 3394  
                         l4191 3252                           l4183 3222                           l4175 31F0  
                         l4159 319C                           l4167 31C6                           l4431 50EE  
                         l4415 315E                           l4407 3144                           l4351 2EDC  
                         l4343 2EA6                           l4335 2E6A                           l4319 2DF4  
                         l5223 4630                           l5215 45EC                           l5207 45BA  
                         l5311 1022                           l5303 0F62                           l5151 5EDE  
                         l5135 5C16                           l5119 5B6C                           l5143 6100  
                         l4095 46FE                           l4087 46B6                           l4079 4678  
                         l4511 4B8E                           l4503 4B52                           l6031 3A66  
                         l5063 3A52                           l5047 3984                           l5055 39C6  
                         l5231 58BE                           l4281 34FE                           l4273 34E4  
                         l4257 3436                           l4265 347E                           l4249 33D0  
                         l4193 3262                           l4185 3224                           l4177 31F2  
                         l4169 31D6                           l4433 50FE                           l4425 5082  
                         l4441 4BA0                           l4409 3152                           l4361 2F3E  
                         l4353 2EEC                           l4345 2EB4                           l4337 2E76  
                         l4329 2E3E                           l5217 4610                           l5209 45C8  
                         l5321 10A6                           l5313 1028                           l5305 0F94  
                         l5241 59EE                           l5153 598E                           l5145 5EA0  
                         l5161 5020                           l5137 5C5C                           l5129 5BC6  
                         l4097 4710                           l4089 46D4                           l4521 54D8  
                         l4505 4B5E                           l4601 5B0A                           l6033 3AF0  
                         l5073 3ACE                           l5065 3A7C                           l5057 39EA  
                         l5049 398C                           l5233 58DE                           l4275 34E8  
                         l4267 3498                           l4259 3442                           l4195 326A  
                         l4179 3202                           l4187 322C                           l4435 5122  
                         l4427 50B0                           l4451 4C2A                           l4443 4BCE  
                         l4371 2FE6                           l4363 2F5A                           l4355 2F06  
                         l4347 2EC0                           l4339 2E8E                           l4291 2D52  
                         l4419 5D50                           l5219 4620                           l5411 16A0  
                         l5331 11B4                           l5323 10BA                           l5315 1044  
                         l5307 0F9C                           l4611 5342                           l5171 5786  
                         l4603 601C                           l5251 5A1E                           l5243 59FE  
                         l5147 593C                           l5163 502C                           l5155 4FD8  
                         l4099 473E                           l4531 5E7A                           l3811 4DEE  
                         l3803 4DA2                           l4523 54EC                           l4515 54AA  
                         l4507 4B6E                           l5067 3A9C                           l5059 3A1E  
                         l5075 3AFE                           l5227 5894                           l4277 34F6  
                         l4269 34AE                           l4197 326E                           l4189 323C  
                         l4437 5128                           l4429 50C0                           l4453 4C3C  
                         l4445 4BDE                           l4381 3022                           l4373 2FF0  
                         l4365 2F84                           l4357 2F16                           l4349 2ED0  
                         l4293 2D60                           l3901 29C6                           l5181 4490  
                         l5413 16D2                           l5405 1662                           l5341 1392  
                         l5333 1230                           l5325 115A                           l5317 109A  
                         l5309 0FF0                           l4613 534E                           l4621 542C  
                         l5173 579A                           l4605 602C                           l5261 5A28  
                         l5253 5A20                           l5245 5A08                           l5237 59E0  
                         l5149 5668                           l5157 4FFC                           l5165 5044  
                         l5501 53D2                           l3813 4E24                           l3805 4DB4  
                         l4525 54F0                           l4517 54B8                           l4701 3EE0  
                         l4509 4B7E                           l4541 4D36                           l4533 4CA4  
                         l6029 39A8                           l5229 58A0                           ?_pad 0011  
                         l4279 34FC                           l4455 4C4A                           l4447 4C0C  
                         l4391 3094                           l4383 3030                           l4375 2FFE  
                         l4367 2FBA                           l4359 2F32                           l4295 2D62  
                         l3911 2A36                           l3903 29CA                           l3831 28B2  
                         l3823 2886                           l5183 44A0                           l5431 17AA  
                         l5351 1402                           l5343 13C4                           l5335 128C  
                         l5327 116A                           l4615 535A                           l4607 5306  
                         l4623 5430                           l4631 5478                           l5175 57B2  
                         l5263 5A2A                           l5255 5A22                           l5247 5A12  
                         l5239 59E4                           l5271 350A                           l5167 505C  
                         l5159 5014                           l5511 5410                           l5503 53D6  
                         l3807 4DC6                           l4527 550E                           l4519 54C4  
                         l4711 3F10                           l4703 3EEC                           l4463 5F1C  
                         l4471 4A9A                           l4551 4D98                           l4535 4CC4  
                         l5079 3B10                           l4457 4C9A                           l4449 4C1C  
                         l4393 30A2                           l4385 305E                           l4377 3010  
                         l4369 2FC8                           l4297 2D72                           l4289 2D46  
                         l3921 2A60                           l3913 2A42                           l3905 29F4  
                         l3841 28EC                           l3833 28C2                           l3825 2892  
                         l5193 451E                           l5185 44AE                           l5441 1812  
                         l5425 1714                           l5409 166E                           l5361 1472  
                         l5353 1434                           l5337 1308                           l5329 11A2  
                         l3817 606A                           l4609 532A                           l4617 5372  
                         l4633 5490                           l4625 5448                           l4641 5212  
                         l5601 5A84                           l5521 60B0                           l5265 5A2C  
                         l5257 5A24                           l5249 5A1C                           l5281 376A  
                         l5273 35D6                           l5177 4E6C                           l5169 5074  
                         l5513 5412                           l5505 53FA                           l4529 5E60  
                         l3809 4DD0                           l4721 401C                           l4713 3F92  
                         l4705 3EF4                           l4465 5F32                           l4481 4AF0  
                         l4473 4AB0                           l4537 4D02                           l4545 4D42  
                         l4561 5620                           l4801 1AFC                           l4459 4CA0  
                         l4395 30CC                           l4379 301E                           l4299 2D82  
                         l3931 2AB6                           l3923 2A82                           l3915 2A46  
                         l3907 2A10                           l3851 291A                           l3843 28F2  
                         l3835 28D2                           l3827 28A0                           l5195 4526  
                         l5187 44F4                           l5443 1844                           l5427 1746  
                         l5363 14A4                           l5339 1360                           l5291 0E9E  
                         l3819 6086                           l4619 538A                           l4627 5454  
                         l4643 521E                           l4635 51CA                           l5523 60B8  
                         l4651 5150                           l5267 5A2E                           l5259 5A26  
                         l5283 379E                           l5275 360A                           l5179 4F22  
                         l5603 3B3E                           l5515 541C                           l5507 5404  
                         l4731 407A                           l4723 403A                           l4715 3F98  
                         l4707 3F00                           l4467 5F42                           l4483 4B00  
                         l4547 4D54                           l4539 4D2A                           l4571 4134  
                         l4563 409C                           l4555 5D96                           l4811 1BE4  
                         l4803 1B02                           l5531 42B0                           l4389 3088  
                         l4397 30D0                           l3941 2AF0                           l3933 2AC4  
                         l3925 2A92                           l3917 2A54                           l3909 2A20  
                         l3861 294E                           l3853 291C                           l3845 2904  
                         l3837 28D4                           l3829 28A2                           l5197 4532  
                         l5189 450A                           l5461 18FE                           l5445 187E  
                         l5453 18BC                           l5429 1778                           l5381 1566  
                         l5365 14DE                           l5373 151C                           l5349 13D0  
                         l5293 0ED2                           l5285 0E38                           l4629 5460  
                         l4637 51EE                           l4645 5236                           l5525 60C2  
                         l4661 51B0                           l4653 5168                           l5277 369E  
                         l5621 3C1A                           l5613 3B6E                           l5605 3B52  
                         l5517 541E                           l5509 5406                           l5269 56CE  
                         l4725 4054                           l4717 3F9E                           l4709 3F0A  
                         l4493 4B2A                           l4485 4B04                           l4477 4AC4  
                         l4581 4250                           l4565 40BC                           l4557 5DA6  
                         l4901 210E                           l4813 1BF8                           l4821 1C74  
                         l4805 1B36                           l4741 1938                           l5541 438E  
                         l5533 42CE                           l5701 2352                           l4399 30EA  
                         l3951 2B5C                           l3943 2AF2                           l3935 2AD2  
                         l3919 2A56                           l3871 298A                           l3855 292C  
                         l3863 2956                           l3847 2906                           l3839 28DC  
                         l5199 4564                           l5439 17E0                           l5375 155A  
                         l5359 1440                           l5295 0F06                           l5287 0E62  
                         l4671 52BC                           l4663 5268                           l4647 524E  
                         l4639 5206                           l5527 60CC                           l4655 5174  
                         l5279 36D2                           l5631 3CF2                           l5623 3C46  
                         l5615 3B9C                           l5607 3B54                           l5519 5428  
                         l5471 60DA                           l4727 4064                           l4719 4002  
                         l4495 4B34                           l4487 4B12                           l4479 4AEE  
                         l4583 4264                           l4575 41A4                           l4567 4112  
                         l4559 5602                           l4591 5AD6                           l4911 2140  
                         l4903 211E                           l4831 1CDA                           l4823 1CAE  
                         l4815 1C2C                           l4807 1B74                           l4751 1982  
                         l4743 193C                           l4735 1914                           l5551 43C8  
                         l5543 4390                           l5535 4324                           l5711 235C  
                         l5703 2354                           l3961 2BB4                           l3953 2B5E  
                         l3945 2AFC                           l3937 2ADE                           l3929 2AA6  
                         l3881 299E                           l3873 298E                           l3865 2966  
                         l3857 293C                           l3849 290C                           l5465 190A  
                         l5385 1572                           l5289 0E6E                           l4665 528C  
                         l4673 52D4                           l4681 5FA0                           l4657 5180  
                         l4649 512C                           l5641 3DC8                           l5633 3D1C  
                         l5625 3C70                           l5617 3BC4                           l5609 3B5C  
                         l5473 60DC                           l5481 5FC2                           l4729 406A  
                         l4497 4B3E                           l4585 428C                           l4577 41E0  
                         l4569 4126                           l4593 5AEA                           l4921 2174  
                         l4913 2144                           l4905 2122                           l4841 1D28  
                         l4833 1CDE                           l4825 1CBE                           l4817 1C34  
                         l4809 1BA6                           l4761 19D0                           l4753 1992  
                         l4745 1960                           l4737 191A                           l5553 43DC  
                         l5545 43A4                           l5537 4372                           l5561 4406  
                         l5529 42AE                           l5801 25F2                           l5721 237A  
                         l5713 2362                           l5705 2356                           l3971 2BE2  
                         l3955 2B6E                           l3939 2AE2                           l3947 2B02  
                         l3891 29B2                           l3883 29A2                           l3875 2992  
                         l3867 2978                           l3859 294C                           l5387 15A4  
                         l4675 52EC                           l4667 52A4                           l4659 5198  
                         l5571 6046                           l5643 3E08                           l5635 3D48  
                         l5627 3C9C                           l5619 3BF0                           l5491 53A4  
                         l5475 60E6                           l5483 5FC6                           l4691 3E82  
                         l4683 3E1E                           l4587 429C                           l4579 4214  
                         l4595 5AF6                           l4931 2212                           l4923 2178  
                         l4915 214A                           l4907 2128                           l4851 1DC0  
                         l4835 1CF0                           l4843 1D30                           l4827 1CCA  
                         l4771 1A0C                           l4763 19E2                           l4755 199E  
                         l4747 196A                           l4739 192A                           l5563 4414  
                         l5555 43E6                           l5547 43AE                           l5539 4376  
                         l5811 2638                           l5803 25F6                           l5731 2396  
                         l5723 2382                           l5715 2366                           l5707 2358  
                         l3973 2BF0                           l3965 2BC8                           l3981 2C0E  
                         l3949 2B28                           l3957 2B7E                           l3893 29B6  
                         l3885 29A6                           l3877 2996                           l3869 2986  
                         l5397 1618                           l5389 15D6                           l4669 52B0  
                         l4677 5F8C                           l5581 5598                           l5573 604C  
                         l5645 3E12                           l5637 3D72                           l5629 3CC6  
                         l5493 53B6                           l5477 60E8                           l5469 60D0  
                         l5485 5FD4                           l4693 3E9E                           l4685 3E3E  
                         l4597 5AFA                           l4941 2268                           l4925 217E  
                         l4909 2130                           l4917 2150                           l4933 2216  
                         l4861 1EA4                           l4853 1E18                           l4845 1D38  
                         l4837 1CFE                           l4829 1CD2                           l4781 1A6E  
                         l4773 1A16                           l4765 19E6                           l4757 19A6  
                         l4749 1972                           l5565 4424                           l5557 43E8  
                         l5549 43B0                           l5821 267E                           l5813 263C  
                         l5805 25FA                           l5741 23BE                           l5733 239E  
                         l5725 2386                           l5717 236A                           l5709 235A  
                         l5661 231A                           l3975 2BF8                           l3967 2BD2  
                         l3959 2BA4                           l3983 2C1C                           l3895 29BA  
                         l3887 29AA                           l3879 299A                           l5399 1656  
                         l5575 583A                           l4679 5F90                           l5583 55D4  
                         l5639 3D9E                           l5495 53B8                           l5479 60EA  
                         l5487 5FD8                           l4695 3EBA                           l4687 3E52  
                         l4599 5B06                           l4951 22E4                           l4943 2298  
                         l4935 2234                           l4927 21D6                           l4919 2162  
                         l4871 1F3E                           l4863 1ED6                           l4855 1E4C  
                         l4847 1D48                           l4839 1D16                           l4783 1A72  
                         l4767 19EC                           l4759 19AA                           l5591 5904  
                         l5567 4474                           l5559 4400                           l5831 26C4  
                         l5823 2682                           l5815 2640                           l5807 2610  
                         l5751 2400                           l5743 23C2                           l5735 23A6  
                         l5727 238A                           l5719 2372                           l5671 2332  
                         l5663 231E                           l5655 230E                           l3993 2C6E  
                         l3985 2C20                           l3977 2BFC                           l3969 2BE0  
                         l3897 29BE                           l3889 29AE                           l5577 584E  
                         l5489 6112                           l5585 55EC                           l4961 6108  
                         l5569 6044                           l5497 53BA                           l4697 3ECA  
                         l4689 3E62                           l4953 22EC                           l4945 22A6  
                         l4937 2250                           l4929 220A                           l4881 2016  
                         l4873 1F72                           l4865 1EEC                           l4849 1D5C  
                         l4857 1E52                           l4785 1A78                           l4769 19F4  
                         l4777 1A36                           l5593 590C                           l5841 270A  
                         l5833 26C8                           l5825 2686                           l5809 2624  
                         l5817 2656                           l5761 2448                           l5753 241A  
                         l5745 23C2                           l5737 23AE                           l5729 238E  
                         l5681 233E                           l5673 2334                           l5665 232A  
                         l5657 2312                           l3995 2C7A                           l3987 2C2E  
                         l3979 2C0C                           l3899 29C2                           l5579 5866  
                         l4963 610C                           l5499 53BC                           l4971 6122  
                         l4699 3ED0                           l4947 22BE                           l4939 2258  
                         l4891 2040                           l4875 1FC8                           l4883 201A  
                         l4867 1F1E                           l4859 1E70                           l4787 1A80  
                         l4779 1A5C                           l4795 1A9C                           l5595 5928  
                         l5587 58EA                           l5851 2750                           l5843 270E  
                         l5835 26CC                           l5819 266A                           l5827 269C  
                         l5771 2496                           l5763 245C                           l5755 2420  
                         l5747 23D6                           l5739 23B6                           l5691 2348  
                         l5683 2340                           l5675 2336                           l5667 232E  
                         l5659 2316                           l3997 2C88                           l3989 2C44  
                         l4957 6132                           l4965 6128                           l4981 5E5A  
                         l4973 5E20                           l4949 22CE                           l4893 204C  
                         l4885 202A                           l4877 1FCE                           l4869 1F2E  
                         l4797 1AB6                           l5589 58FC                           l5861 2796  
                         l5853 2754                           l5845 2712                           l5829 26B0  
                         l5837 26E2                           l5781 2516                           l5773 24AA  
                         l5765 247A                           l5757 2428                           l5749 23D8  
                         l5693 234A                           l5685 2342                           l5677 233A  
                         l5669 2330                           l3999 2CC2                           l5599 5A32  
                         l4959 6136                           l4967 612C                           l4991 5F70  
                         l4983 5E5C                           l4975 5E24                           l4895 20C4  
                         l4887 2032                           l4879 2002                           l5871 27CC  
                         l5863 279A                           l5855 2758                           l5839 26F6  
                         l5847 2728                           l5791 2560                           l5783 251E  
                         l5775 24C6                           l5767 247E                           l5759 243C  
                         l5695 234C                           l5687 2344                           l5679 233C  
                         l4993 5CB4                           l4977 5E2C                           l4969 611E  
                         l4897 20E4                           l4889 2038                           l5881 284C  
                         l5873 27E0                           l5865 279E                           l5849 273C  
                         l5857 276E                           l5793 2568                           l5785 2526  
                         l5777 24E0                           l5769 2482                           l5697 234E  
                         l5689 2346                           l4995 5CC8                           l4987 5F54  
                         l4979 5E34                           l4899 2100                           l5883 2850  
                         l5875 280C                           l5859 2782                           l5867 27B4  
                         l5795 25BE                           l5787 252E                           l5779 24FC  
                         l5699 2350                           l4997 5CD4                           l4989 5F60  
                         l5877 281E                           l5869 27C8                           l5797 25CA  
                         l5789 2542                           l4999 5CE8                           l5799 25DE  
                         l5879 283A                           l5887 286E                    GreenMove@mL 0020  
                  GreenMove@mR 0022                           STR_1 0E01                           STR_2 0E2E  
                         STR_5 0E32                           u3000 28A0                           u3001 289C  
                         u3010 28B2                           u3011 28AE                           u3100 2A0C  
                         u3020 28C2                           u3101 2A06                           u3021 28BE  
                         u3110 2A0E                           u3030 2904                           u3031 2900  
                         u4000 50B0                           u3200 2B28                           u3120 2A36  
                         u3040 291A                   _BAUD4CONbits 000EE9                           u4001 50AC  
                         u3201 2B24                           u3121 2A32                           u3041 2916  
                         u4010 50EE                           u3210 2B6E                           u3130 2A54  
                         u3050 292C                           u4011 50EA                           u3211 2B6A  
                         u3131 2A50                           u3051 2928                           u4020 5122  
                         u3300 2C5A                           u3220 2BA4                           u3140 2A74  
                         u3060 293C                           u4100 4AE4                           u4021 511E  
                         u3301 2C56                           u3221 2BA0                           u3141 2A70  
                         u3061 2938                           u4030 4BCE                           u3310 2C6E  
                         u3230 2BB4                           u3150 2A82                           u3070 2978  
                         u4110 4B12                           u4031 4BCA                           u3311 2C6A  
                         u3231 2BB0                           u3151 2A7E                           u3071 2974  
                         u4111 4B0E                           u4040 4C0C                           u3320 2C88  
                         u3240 2BE0                           u3160 2A92                           u3080 2986  
                         u3400 555C                           u4120 4B26                           u4200 4D02  
                         u5000 39E6                           u4041 4C08                           u3321 2C84  
                         u3241 2BDC                           u3161 2A8E                           u3081 2982  
                         u3401 5558                           u4121 4B22                           u4105 4ADA  
                         u4201 4CFE                           u5001 39E2                           u4050 4C2A  
                         u3330 2CC2                           u3250 2BF0                           u3170 2AC4  
                         u3090 29F4                           u3410 5578                           u5010 6100  
                         u4130 4B4E                           u4210 4D2A                           _T2PR 000FBC  
                         u4051 4C26                           u3331 2CBE                           u3251 2BEC  
                         u3171 2AC0                           u3091 29F0                           u3411 5574  
                         u5011 60FC                           u4131 4B4A                           u4211 4D26  
                         u4060 4C4A                           u3340 2CD4                           u3260 2C0C  
                         u3180 2AD2                           u5100 45D8                           u5020 505C  
                         u3500 473E                           u3420 5E1C                           u4140 4B6E  
                         u4220 4D54                           u4300 4134                           u4061 4C46  
                         u3341 2CD0                           u3261 2C08                           u3181 2ACE  
                         u5101 45D4                           u5021 5058                           u3501 473A  
                         u3421 5E18                           u4141 4B6A                           u4221 4D50  
                         u4301 4130                           u4070 4C9A                           u3350 2CE4  
                         u3270 2C1C                           u3190 2AF0                           u5110 45E6  
                         u3430 47E6                           u5030 5074                           u3510 4788  
                         u4150 4B7E                           u4071 4C96                           u3351 2CE0  
                         u3271 2C18                           u3191 2AEC                           u5111 45E2  
                         u3431 47E2                           u5031 5070                           u3511 4784  
                         u4151 4B7A                           u3600 31AC                           u3360 2D04  
                         u3280 2C2E                           u5120 4620                           u5040 44A0  
                         u5200 10BA                           u3440 48B0                           u4400 6042  
                         u3520 4948                           u4160 54B8                           u4080 5F32  
                         u4240 4D8E                           u4320 41A0                           u3601 31A8  
                         u3361 2D00                           u3281 2C2A                           u5121 461C  
                         u5041 449C                           u5201 10B6                           u3441 48AC  
                         u4401 603E                           u3521 4944                           u4161 54B4  
                         u4081 5F2E                           u4241 4D88                           u4321 419C  
                         u3610 31F0                           u3370 2D16                           u3290 2C44  
                         u5130 462E                           u5050 44AE                           u5210 116A  
                         u4410 538A                           u3450 4654                           u3530 497A  
                         u4170 550E                           u4090 4AB0                           u4250 4D90  
                         u4330 41C4                           u3611 31EC                           u3371 2D12  
                         u3291 2C40                           u5131 462A                           u5051 44AA  
                         u5211 1166                           u4411 5386                           u3451 4650  
                         u3531 4976                           u4171 550A                           u4091 4AAC  
                         u4235 4D66                           u4315 4148                           u3700 338E  
                         u3620 3202                           u3380 2D32                           u5060 450A  
                         u5300 1518                           u5220 11B4                           u4420 53A2  
                         u4500 5304                           u3460 4686                           u3540 49B8  
                         u4180 5E7A                           u4340 41E0                           u4316 4152  
                         u4260 5DD8                           u5140 58DE                           u3701 338A  
                         u3621 31FE                           u3381 2D2E                           u5061 4506  
                         u5301 1514                           u5221 11B0                           u4421 539E  
                         u4501 5300                           u3461 4682                           u3541 49B4  
                         u4181 5E76                           u4341 41DC                           u4317 4162  
                         u4261 5DD4                           u5141 58DA                           u3710 33AC  
                         u3630 3212                           u5070 4560                           u5310 155A  
                         u5230 1392                           u3390 553E                           u4430 5490  
                         u4510 5FC0                           u3550 49E2                           u4190 4CE4  
                         u4350 4234                           u4270 5620                           u3711 33A8  
                         u3631 320E                           u5071 455C                           u5311 1556  
                         u5231 138E                           u5151 0E68                           u3391 553A  
                         u4431 548C                           u4511 5FBC                           u3471 46B0  
                         u3551 49DE                           u4335 41BA                           u4271 561C  
                         u6007 447E                           u3800 34F6                           u3720 33CC  
                         u3640 3252                           u5080 45AA                           u5400 1778  
                         u5320 15A4                           u5240 13C4                           u5160 0F62  
                         u4440 54A8                           u3480 46D4                           u3560 4A10  
                         u4600 4054                           u4520 3E4E                           u4360 4250  
                         u4280 40E4                           u3801 34F2                           u3721 33C8  
                         u3641 324E                           u5081 45A6                           u5401 1774  
                         u5321 15A0                           u5241 13C0                           u5161 0F5E  
                         u4441 54A4                           u6017 5036                           u3481 46D0  
                         u3561 4A0C                           u4601 4050                           u4521 3E48  
                         u4361 424C                           u3730 33DE                           u3650 3292  
                         u3810 2D60                           u5090 45C8                           u5410 17AA  
                         u5330 15D6                           u5250 1402                           u5170 0FF0  
                         u4450 524E                           u3490 46FE                           u3570 4A58  
                         u4610 4064                           u4530 3E50                           u4370 428C  
                         u4290 4112                           u3731 33DA                           u3651 328E  
                         u3811 2D5C                           u5091 45C4                           u5411 17A6  
                         u5331 15D2                           u5251 13FE                           u5171 0FEC  
                         u4451 524A                           u6107 5228                           u6027 5F66  
                         u3491 46FA                           u3571 4A54                           u4611 4060  
                         u4195 4CDA                           u4371 4288                           u4355 422A  
                         u4291 410E                           u3740 340C                           u3660 3308  
                         u3580 318A                           u3900 2FFE                           u3820 2D72  
                         u5420 17DC                           u5340 1614                           u5260 1434  
                         u5180 1044                           u4460 5266                           u4540 3E62  
                         u4380 5B24                           u4700 1B74                           u4620 1938  
                         u5500 4360                           u3741 3408                           u3661 3304  
                         u3581 3186                           u3901 2FFA                           u3821 2D6E  
                         u5421 17D8                           u5341 1610                           u5261 1430  
                         u5181 1040                           u6117 5F96                           u4461 5262  
                         u6037 574A                           u4541 3E5E                           u4285 40DA  
                         u4381 5B20                           u4701 1B70                           u4621 1934  
                         u5501 435A                           u3750 3422                           u3670 332A  
                         u3590 319C                           u3910 301E                           u3830 2D82  
                         u5430 1812                           u5350 1656                           u5270 1472  
                         u5190 109A                           u4470 51B0                           u4390 602C  
                         u4550 3E9E                           u4710 1BA6                           u4630 1982  
                         u5510 4372                           u5502 4362                           u3751 341E  
                         u3671 3326                           u3591 3198                           u3911 301A  
                         u3831 2D7E                           u5431 180E                           u5351 1652  
                         u5271 146E                           u5191 1096                           u6207 5364  
                         u6127 57A4                           u4471 51AC                           u4391 6028  
                         u6047 5776                           u4551 3E9A                           u4711 1BA2  
                         u4631 197E                           u5511 436E                           u3760 3436  
                         u3680 3354                           u3920 3030                           u3840 2DC2  
                         u5440 1844                           u5360 16A0                           u5280 14A4  
                         u4480 51C8                           u5600 3BC4                           u2960 4DB4  
                         u4560 3ECA                           u4800 1ED6                           u4720 1BE4  
                         u4640 1992                           u5520 43A4                           u3761 3432  
                         u3681 3350                           u3921 302C                           u3841 2DBE  
                         u5441 1840                           u5361 169C                           u5281 14A0  
                         u6137 57D0                           u4481 51C4                           u6057 59F4  
                         u5601 3BC0                           u2961 4DB0                           u4561 3EC6  
                         u4801 1ED2                           u4721 1BE0                           u4641 198E  
                         u5521 43A0                           u3770 3450                           u3690 3378  
                         u3930 305E                           u3850 2DD4                           u5450 187E  
                         u5370 16D2                           u5290 14DE                           u4490 52EC  
                         u5610 3C1A                           u2970 4DC6                           u4570 3EE0  
                         u4810 1F1E                           u4730 1C70                           u4650 19D0  
                         u5530 43DC                           u3771 344C                           u3691 3374  
                         u3931 305A                           u3851 2DD0                           u5451 187A  
                         u5371 16CE                           u5291 14DA                           u4491 52E8  
                         u6147 57FE                           u6067 5CF2                           u5611 3C16  
                         u2971 4DC2                           u4571 3EDC                           u4811 1F1A  
                         u4731 1C6C                           u4651 19CC                           u5531 43D8  
                         u3780 3498                           u3940 3074                           u3860 2DE4  
                         u5460 18B8                           u5380 1710                           u5620 3C70  
                         u2980 4DEE                           u4580 401C                           u4900 2250  
                         u4820 1F2E                           u4740 1CA6                           u4660 19E2  
                         u5540 4414                           u5700 2516                           u3781 3494  
                         u3941 3070                           u3861 2DE0                           u5461 18B4  
                         u5381 170C                           u6157 582A                           u6077 518A  
                         u5621 3C6C                           u2981 4DEA                           u4581 4018  
                         u4901 224C                           u4821 1F2A                           u4741 1CA2  
                         u4661 19DE                           u5541 4410                           u5701 2512  
                         u3790 34C8                           u3950 3088                           u3870 2E1A  
                         u5470 18FA                           u5390 1746                           u5630 3CC6  
                         u2990 4E24                           u4590 403A                           u4910 22B8  
                         u4830 1FC8                           u4750 1CBE                           u4670 1A5C  
                         u5550 4422                           u5710 2560                           u3791 34C4  
                         u3951 3084                           u3871 2E16                           u5471 18F6  
                         u5391 1742                           u6167 52C6                           u6087 55DE  
                         u5631 3CC2                           u2991 4E20                           u4591 4036  
                         u4911 22B2                           u4831 1FC4                           u4751 1CBA  
                         u4671 1A58                           u5551 441E                           u5711 255C  
                         u3960 30A2                           u3880 2E2A                           u5640 3D1C  
                         u5480 5FF0                           u4920 22BA                           u4840 2016  
                         u4760 1CF0                           u4680 1A6E                           u5560 444C  
                         u5800 27E0                           u5720 25DE                           u3961 309E  
                         u3881 2E26                           u6177 5858                           u6097 5D40  
                         u5641 3D18                           u5481 5FEC                           u4841 2012  
                         u4761 1CEC                           u4681 1A6A                           u5561 4446  
                         u5801 27DC                           u5721 25DA                           u3970 30EA  
                         u3890 2FA4                           u5650 3D72                           u4930 22CE  
                         u4850 20C4                           u4770 1CFE                           u4690 1AE8  
                         u5570 4460                           u5562 444E                           u5490 434C  
                         u5810 281E                           u5730 2624                           u3971 30E6  
                         u6187 5884                           u5651 3D6E                           u4931 22CA  
                         u4851 20C0                           u4771 1CFA                           u4691 1AE4  
                         u5571 445A                           u5491 4346                           u5811 281A  
                         u5731 2620                           u3980 3118                           u5660 3DC8  
                         u4940 5E48                           u4860 2100                           u4780 1D28  
                         u5580 4472                           u5572 4462                           u5492 434E  
                         u5820 284C                           u5740 266A                           u3981 3114  
                         u6197 546A                           u5661 3DC4                           u4941 5E40  
                         u4861 20FC                           u4781 1D24                           u5581 446E  
                         u5821 2848                           u5741 2666                           u3990 3152  
                         u5590 3B6A                           u4870 210E                           u4790 1E70  
                         u5830 2882                           u5750 26B0                           u3991 314E  
                         u3895 2F9A                           u5591 3B66                           u4871 210A  
                         u4791 1E6C                           u5831 287E                           u5751 26AC  
                         u4960 5F8A                           u4880 2162                           u5760 26F6  
                         u5680 2400                           u4961 5F86                           u4881 215E  
                         u5761 26F2                           u5681 23FC                           u4890 2234  
                         u4970 3860                           u5770 273C                           u5690 247A  
                         u4891 2230                           u4971 385C                           u5771 2738  
                         u5691 2476                           u5907 23E4                           u4980 38B0  
                         u5780 2782                           u4981 38AC                           u5781 277E  
                         u5917 240C                           u4958 5E4A                           u4990 38D0  
                         u5790 27C8                           u4991 38CC                           u5791 27C4  
                         u5927 24B6                           u5937 24D2                           u5947 42BA  
                         u5957 432E                           u5967 4380                           u5977 43BA  
                         u5987 43F2                           u5997 442E                  _LightBlueMove 598E  
                         abs@a 0013                           _dbuf 02A0                           _labs 5602  
                         _main 230E                           _dtoa 3E1E                           _prec 00E9  
                         _vals 016A                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                         btemp 005F                           _stop 542C                  ___fpclassifyf 4CA4  
                         prodh 000FF4                           prodl 000FF3                           start 0034  
              ___fldiv@new_exp 0043         __end_of_color_read_Red 5BC6                __end_of_HighISR 0034  
       __end_of_color_read_lum 5B76                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 5EDE                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 5CB4  
              _RunOneBlockTime 00F0                  ___fltol@sign1 0009                __end_of___aodiv 47CA  
                        ?_labs 0001                __end_of___fladd 2D46                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 4A9A                __end_of___fldiv 350A  
              __end_of___flneg 5F54                __end_of___flmul 3170                __end_of___flsub 5D96  
              __end_of___fltol 4BA0                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 5598                          i2l235 0030                   vfpfcnvrt@fmt 0097  
                        _TMR0H 000FD4                          _TMR0L 000FD3                __end_of_go_Home 3E1E  
      __end_of_sendCharSerial4 6106     __end_of_I2C_2_Master_Start 613C     __end_of_I2C_2_Master_Write 6112  
                 YellowMove@mL 0020                          _flags 00EB                   YellowMove@mR 0022  
                        _fputc 4DA2                          _fputs 5DDA                 delayed_ms@time 0001  
                        labs@a 0001                          pad@fp 0011                          _power 00F4  
                        _width 00E7                          _putch 6142                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                 ?_LightBlueMove 0020  
                        tablat 000FF5               ??_Colour_decider 004F                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                          status 000FD8  
                        wtemp8 0060                __end_of_sprintf 593C                 ?___fpclassifyf 0001  
      __end_of_color_read_Blue 5C66          _I2C_2_Master_RepStart 611E               __end_of_BlueMove 56CE  
                   PinkMove@mL 0020                     PinkMove@mR 0022                ?_color_read_Red 0005  
              ?_color_read_lum 0005                __initialization 5C66        __end_of_turnCalibration 448E  
              _reverseOneBlock 5786                   __end_of_labs 5668                   __end_of_main 2886  
                 __end_of_dtoa 409C                   __end_of_stop 54AA                _colour_rel$3203 0064  
              _colour_rel$3204 0068                         ??_labs 0005                         ??_main 00D1  
                       ??_dtoa 0026          __end_of_ReverseYellow 4F22               __end_of_PinkMove 5AD6  
                       ??_stop 0018                  __activetblptr 000003              Colour_decider@Hue 007C  
            Colour_decider@rel 004D                   ?_setMotorPWM 000E                         ?_fputc 0001  
                       ?_fputs 000A                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RC7PPS 000E69                         _RD5PPS 000E6F                         _RE4PPS 000E76  
                       _RD6PPS 000E70                         _RG6PPS 000E88                         i2l5651 001A  
                       i2l5653 002C                         i2l5649 000A                      ??_HighISR 0001  
     __end_of_color_click_init 5A32                         _RX4PPS 000E15                         _TX4REG 000EE4  
                   _OrangeMove 593C               __end_of___xxtofl 4642                      ??_RedMove 0024  
                ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE  
                ??_ReversePink 0024                         ___flge 4BA0                         ___fleq 5082  
                    ??___aodiv 0011                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 606A              ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C  
                    ??___fldiv 003A                      ??___flneg 0005                      ??___flmul 0019  
                    ??___flsub 0032                      ??___fltol 0005                         _efgtoa 1914  
                    ??___lwdiv 000B                         _floorf 409C                         _memcpy 5AD6  
                       clear_0 5C8C                         clear_1 5C98                         clear_2 5CA4  
                       _motorL 0161                         _motorR 0158                         isa$std 000001  
                    ??_go_Home 0028                         pad@buf 0013                         dtoa@fp 001C  
                       _strcpy 5D96                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                ___fpclassifyf@e 0009  
              ___fpclassifyf@u 000B                ___fpclassifyf@x 0001                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C  
                       putch@c 0001                ??_LightBlueMove 0024               __end_of_vfprintf 58EA  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 005F               __end_of_turnLeft 5268                     ___flge@ff1 002A  
                   _YellowMove 5A32                     ___flge@ff2 002E                ??___fpclassifyf 0005  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
                   ___fleq@ff1 0032                     ___fleq@ff2 0036                fullSpeedBack@mL 0014  
              fullSpeedBack@mR 0016                     __accesstop 0060        __end_of__initialization 5CAA  
      __end_of_reverseOneBlock 57E0                     ___flneg@f1 0001       __end_of_color_read_Green 5C16  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                _Interrupts_init 6112                 __pcstackCOMRAM 0001  
             ?_turnCalibration 0020                  _fullSpeedBack 5268                   __pidataBANK0 613C  
                __end_of_fputc 4E6C                  __end_of_fputs 5E1E                  __end_of_putch 6144  
            __end_of_GreenMove 5F1C            __end_of_Timer0_init 60D0            __end_of_ReversePink 4FD8  
                    ?_BlueMove 0020                        ??_fputc 0005                        ??_fputs 000E  
         Colour_decider@F14357 00D3          __end_of_reverseDetect 583A                        ??_putch 0001  
                   __pbssBANK0 00D3                     __pbssBANK1 0100                     __pbssBANK2 0200  
              reverseDetect@mL 001A                reverseDetect@mR 001C                    ?_OrangeMove 0020  
             _Forwardhalfblock 583A                     _getTMR0val 6044              __end_of_RetryMove 5602  
                    ?_PinkMove 0020              _color_writetoaddr 6090                     _delayed_ms 5F54  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072             Colour_decider@Cmin 0076  
               ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064                        ?___flge 002A  
                      ?___fleq 0032             ?_color_writetoaddr 0003                        ?___wmul 0001  
           Colour_decider@vals 004B                        ?_efgtoa 0060                        ?_floorf 004B  
                 ?_turnRight45 001A                        ?_memcpy 0001              __end_of_TurnDelay 5FC2  
        __end_of_timed_forward 5082            ??_color_writetoaddr 0004                        ?_strcpy 0001  
                colour_rel@rel 004D                 go_Home@WayBack 0024                      ?___xxtofl 0001  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5              ??_ForwardOneBlock 001E  
                   ??_BlueMove 0024                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                  ?_YellowMove 0020                     _colour_rel 350A        __end_of_Interrupts_init 611E  
       color_writetoaddr@value 0003               ??_color_read_Red 0007               main@consecuitive 01D8  
                      _HighISR 0008               ??_color_read_lum 0007               ?_reverseOneBlock 001A  
    __end_of_color_writetoaddr 60B0                        _RedMove 5EA0             _I2C_2_Master_Start 6132  
                   ??_PinkMove 0024                     _initUSART4 60D0             _I2C_2_Master_Write 6106  
                      __Hparam 0000                        _WayBack 011A                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 60B0                    RetryMove@mL 0020  
                  RetryMove@mR 0022        sendStringSerial4@string 0002              reverseOneBlock@mL 001A  
            reverseOneBlock@mR 001C                    _ReversePink 4F22                        ___aodiv 4642  
                      ___fladd 2886                        ___aomod 4936                        ___fldiv 3170  
                      ___flneg 5F1C                        ___flmul 2D46                        ___flsub 5D50  
                      ___fltol 4A9A            ?_I2C_2_Master_Start 0001                        ___lwdiv 5524  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8                   __psmallconst 0E00  
                 turnLeft45@mL 001A                   turnLeft45@mR 001C                        __pcinit 5C66  
                      __ramtop 0E00                      ?_turnLeft 0014                        _go_Home 3B3E  
                      __ptext0 230E                        __ptext1 42AE                        __ptext2 58EA  
                      __ptext3 5894                        __ptext4 3838                        __ptext5 1914  
                      __ptext6 5D96                        __ptext7 5AD6                        __ptext8 5602  
                      __ptext9 409C                      _T2CONbits 000FBD                     ??___xxtofl 0005  
               main@lost_count 01D6                      _T2HLTbits 000FBE                        efgtoa@c 0066  
                      efgtoa@d 0074                        efgtoa@e 0078                        efgtoa@f 0062  
                      efgtoa@g 008D                        efgtoa@h 0082                        efgtoa@i 0080  
                      efgtoa@l 0086                        efgtoa@m 0076                        efgtoa@n 008B  
                      efgtoa@p 006B                        efgtoa@t 006D                        efgtoa@u 0091  
                      efgtoa@w 007A                  _RxBufWriteCnt 00EF              color_read_lum@tmp 000A  
                      main@buf 0172                        _sprintf 58EA           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 5CAA                        floorf@e 0059  
                      floorf@m 0055                        floorf@u 005B                        floorf@x 004B  
                      memcpy@d 0007                        memcpy@n 0005                        memcpy@s 0009  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
                  ?_getTMR0val 0001                LightBlueMove@mL 0020                LightBlueMove@mR 0022  
              ??_fullSpeedBack 0018             ??_color_click_init 0005                     _move_count 0114  
                  ?_delayed_ms 0001              turnCalibration@mL 0020              turnCalibration@mR 0022  
            __end_of_vfpfcnvrt 3B3E                     efgtoa@mode 0072                     efgtoa@sign 008A  
                      postdec1 000FE5                        postdec2 000FDD                    _Turn45Delay 00F2  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 009D                     ??_vfprintf 005F                        strcpy@d 0007  
                      strcpy@s 0005                _initDCmotorsPWM 53A4                     ??_turnLeft 0018  
                    _PORTFbits 000F8E             setMotorPWM@negDuty 0013              __end_of_turnRight 51CA  
                  ___fladd@grs 0010                  ___xxtofl@sign 0009                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ___fldiv@grs 0045                    ___fldiv@rem 003E  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016                  ReversePink@mL 0020  
                ReversePink@mR 0022       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 004B               ?_Interrupts_init 0001                    ___flmul@grs 001E  
                  _CCP1CONbits 000FAB                     main@colour 01DA                   _EUSART4RXbuf 0100  
                 _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0001                      RedMove@mL 0020                      RedMove@mR 0022  
           ??_color_read_Green 0007                     _turnLeft45 5D02                 __end_of___flge 4CA4  
               __end_of___fleq 512C                 _fullSpeedAhead 5306                    vfpfcnvrt@ap 0099  
                  vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095                 __end_of___wmul 6090  
               __end_of_efgtoa 230E                 __end_of_floorf 42AE                 __end_of_memcpy 5B26  
                   floorf@F526 00DF       __end_of_Forwardhalfblock 5894                      _GreenMove 5EDE  
               __end_of_strcpy 5DDA            start_initialization 5C66                    __end_of_abs 5EA0  
                  __end_of_pad 5524                  _TxBufWriteCnt 00ED          __end_of_LightBlueMove 59E0  
                 ??_OrangeMove 0024          __end_of___fpclassifyf 4DA2            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 542C                    vfprintf@fmt 00AA         __end_of_fullSpeedAhead 53A4  
                     ??___flge 0032                       ??___fleq 003A                      _RetryMove 5598  
                     ??___wmul 0005            go_Home@Time_forward 0026                  ??_readColours 000E  
                     ??_efgtoa 0067                    __pdataBANK0 00F0                _ForwardOneBlock 572C  
                     ??_floorf 004F                       ??_memcpy 0007                       ??_strcpy 0005  
                    ___fladd@a 0005                      ___fladd@b 0001                  _ReverseYellow 4E6C  
                    ___fldiv@a 0036                      ___fldiv@b 0032                     ?_GreenMove 0020  
                 OrangeMove@mL 0020                   OrangeMove@mR 0022             __end_of_OrangeMove 598E  
                    ___flmul@a 0015                      ___flmul@b 0011                      ___flsub@a 002E  
                    ___flsub@b 002A                      _TurnDelay 5F8C                  __pcstackBANK0 0060  
                __pcstackBANK1 0172               ___aodiv@dividend 0001                   ??_YellowMove 0024  
                     ?_HighISR 0001          Colour_decider@RGB_col 0066                       ?_RedMove 0020  
                  _efgtoa$2852 006F               ___lwdiv@dividend 0007                      _dtoa$2821 002E  
                 ?_Timer0_init 0001                    ?_turnLeft45 001A                ?_fullSpeedAhead 0014  
                    __pintcode 0008                   ?_ReversePink 0020                     ?_RetryMove 0020  
              timed_forward@mL 0014                       ?___aodiv 0001                timed_forward@mR 0016  
                     ?___fladd 0001                       ?___aomod 0001                       ?___fldiv 0032  
             ___aodiv@quotient 0013                       ?___flneg 0001                       ?___flmul 0011  
                     ?___flsub 002A                       ?___fltol 0001            _Colour_decider$3205 0060  
                     ?___lwdiv 0007                       ?_go_Home 0024           I2C_2_Master_Read@ack 0003  
               ?_ReverseYellow 0020             __end_of_YellowMove 5A84           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              timed_forward@time 0018            __end_of_readColours 572C  
            _I2C_2_Master_Idle 601C              _I2C_2_Master_Init 5FF2              _I2C_2_Master_Read 5E1E  
            _I2C_2_Master_Stop 6128                     ?_TurnDelay 0001                   _RxBufReadCnt 00EE  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0               getTMR0val@moving 0001  
               colour_rel@vals 004B              _sendStringSerial4 5FC2            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _LATHbits 000F80  
                 ??_getTMR0val 0001                       _PIE0bits 000E29             ?_sendStringSerial4 0002  
      __end_of_ForwardOneBlock 5786                   ??_delayed_ms 0003                    turnRight@mL 0014  
                  turnRight@mR 0016                      _lost_flag 0118                       _PIR0bits 000E33  
                     _PIR4bits 000E37                       i2u567_40 001A                       i2u567_41 0016  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
               _Colour_decider 0E38            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 3838      __end_of_I2C_2_Master_Idle 6044      __end_of_I2C_2_Master_Init 601C  
    __end_of_I2C_2_Master_Read 5E60              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 6132  
                 setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024  
            ??_color_read_Blue 0007             __end_of_getTMR0val 606A                   _TxBufReadCnt 00EC  
                     _BlueMove 5668                      _turnRight 512C             __end_of_delayed_ms 5F8C  
                   vfpfcnvrt@c 00A5              ??_turnCalibration 0024                      copy_data0 5C7A  
    __end_of_sendStringSerial4 5FF2                   ??_colour_rel 004F                  _reverseDetect 57E0  
__end_of_I2C_2_Master_RepStart 6128             color_read_Blue@tmp 000A            __end_of_setMotorPWM 4936  
                 ??_initUSART4 0001                       _PinkMove 5A84                       __Hrparam 0000  
       __end_of_Colour_decider 1914                      memcpy@tmp 000B                     vfprintf@ap 00AC  
                     __Lrparam 0000                     vfprintf@fp 00A8          __end_of_fullSpeedBack 5306  
                  ??_RetryMove 0024           TurnDelay@Turn45Delay 0001                    _readColours 56CE  
              ??_ReverseYellow 0024                     ?_vfpfcnvrt 0095                ___aodiv@divisor 0009  
              ___aodiv@counter 0011             __end_of_colour_rel 3838                     _ANSELDbits 000EA7  
           ___fpclassifyf@F465 00E3                     _ANSELFbits 000EB4                  _timed_forward 4FD8  
                   sprintf@fmt 00B2              ?_Forwardhalfblock 001A                       ___xxtofl 448E  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6                    ??_TurnDelay 0003  
                 _Time_forward 023C                ___lwdiv@divisor 0009             __end_of_initUSART4 60EE  
              ___lwdiv@counter 000D             ??_Forwardhalfblock 001E                     ?_turnRight 0014  
                     __ptext10 4CA4                       __ptext11 4A9A                       __ptext20 4642  
                     __ptext12 5F1C                       __ptext21 5FC2                       __ptext13 3E1E  
                     __ptext30 60D0                       __ptext22 60EE                       __ptext14 54AA  
                     __ptext31 53A4                       __ptext23 56CE                       __ptext15 5DDA  
                     __ptext40 598E                       __ptext32 3B3E                       __ptext24 5B26  
                     __ptext16 4DA2                       __ptext41 5EDE                       __ptext33 4FD8  
                     __ptext25 5B76                       __ptext17 6142                       __ptext50 601C  
                     __ptext42 5668                       __ptext34 5F54                       __ptext26 5BC6  
                     __ptext18 5E60                       __ptext51 5FF2                       __ptext43 6044  
                     __ptext35 4E6C                       __ptext27 5C16                       __ptext19 4936  
                     __ptext60 5F8C                       __ptext52 5A32                       __ptext44 350A  
                     __ptext36 4F22                       __ptext28 611E                       __ptext61 5786  
                     __ptext53 5CB4                       __ptext45 59E0                       __ptext37 572C  
                     __ptext29 5E1E                       __ptext70 5524                       __ptext62 57E0  
                     __ptext54 512C                       __ptext46 6090                       __ptext38 5EA0  
                     __ptext71 0E38                       __ptext63 5268                       __ptext55 60B0  
                     __ptext47 6106                       __ptext39 593C                       __ptext72 448E  
                     __ptext64 6112                       __ptext56 5598                       __ptext48 6128  
                     __ptext73 5D50                       __ptext65 583A                       __ptext57 5A84  
                     __ptext49 6132                       __ptext74 2886                       __ptext66 542C  
                     __ptext58 5D02                       __ptext75 2D46                       __ptext67 5306  
                     __ptext59 51CA                       __ptext76 4BA0                       __ptext68 47CA  
                     __ptext77 5082                       __ptext69 606A                       __ptext78 3170  
               ?_reverseDetect 001A                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   strcpy@dest 0001                     turnLeft@mL 0014                     turnLeft@mR 0016  
             ?_ForwardOneBlock 001A                       go_Home@i 002B                ?_Colour_decider 004B  
                     efgtoa@fp 0060                       efgtoa@ne 0069                       efgtoa@pp 0071  
                     efgtoa@ou 007C                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005F                       _vfprintf 5894                       _run_flag 0116  
                ??_turnRight45 001E                       _turnLeft 51CA               ___aomod@dividend 0001  
               ?_timed_forward 0014                    delayed_ms@i 0004              ??_reverseOneBlock 001E  
                   _INTCONbits 000FF2                main@prev_colour 01DC                       memcpy@d1 0001  
                     memcpy@s1 0003                    _setMotorPWM 47CA                  turnRight45@mL 001A  
                turnRight45@mR 001C                       intlevel2 0000                      sprintf@ap 00C4  
             ??_fullSpeedAhead 0018                      strcpy@src 0003                   ??_turnLeft45 001E  
                   BlueMove@mL 0020                     BlueMove@mR 0022                    efgtoa@nmode 0073  
              ___aomod@divisor 0009                    ??_vfpfcnvrt 009B                ___aomod@counter 0011  
             _color_click_init 59E0                       sprintf@f 00C6                       sprintf@s 00B0  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C            __end_of_turnRight45 5D02  
              ??_reverseDetect 001E                    ??_turnRight 0018                  ___fladd@signs 000D  
           __end_of_turnLeft45 5D50                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
              _sendCharSerial4 60EE                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ___aomod@sign 0012  
