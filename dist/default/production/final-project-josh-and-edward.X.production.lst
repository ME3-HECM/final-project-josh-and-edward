

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 22:14:03 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    96                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    97                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    98                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    99   000000                     
   100                           ; Generated 06/04/2022 GMT
   101                           ; 
   102                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution. Publication is not required when
   116                           ;        this file is used in an embedded application.
   117                           ; 
   118                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   119                           ;        software without specific prior written permission.
   120                           ; 
   121                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   122                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   123                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   124                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   125                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   126                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   127                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   128                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   129                           ; 
   130                           ; 
   131                           ; Code-generator required, PIC18F67K40 Definitions
   132                           ; 
   133                           ; SFR Addresses
   134   000000                     
   135                           	psect	idataBANK0
   136   005EF8                     __pidataBANK0:
   137                           	callstack 0
   138                           
   139                           ;initializer for _high_threshold
   140   005EF8  03E8               	dw	1000
   141                           
   142                           ;initializer for _RunOneBlockTime
   143   005EFA  07D0               	dw	2000
   144                           
   145                           ;initializer for _Turn45Delay
   146   005EFC  00DC               	dw	220
   147                           
   148                           ;initializer for _power
   149   005EFE  001E               	dw	30
   150                           
   151                           ;initializer for _DataFlag
   152   005F00  01                 	db	1
   153   000000                     _TRISEbits	set	3973
   154   000000                     _TX4REG	set	3812
   155   000000                     _RC4STAbits	set	3815
   156   000000                     _SP4BRGH	set	3814
   157   000000                     _SSP2CON2bits	set	3802
   158   000000                     _RX4PPS	set	3605
   159   000000                     _SSP2CLKPPS	set	3612
   160   000000                     _SSP2DATPPS	set	3613
   161   000000                     _ANSELDbits	set	3751
   162   000000                     _SSP2ADD	set	3798
   163   000000                     _SSP2CON1bits	set	3801
   164   000000                     _LATAbits	set	3961
   165   000000                     _LATFbits	set	3966
   166   000000                     _LATGbits	set	3967
   167   000000                     _TRISAbits	set	3969
   168   000000                     _TRISGbits	set	3975
   169   000000                     _PORTFbits	set	3982
   170   000000                     _CCPR2H	set	4006
   171   000000                     _CCPR1H	set	4010
   172   000000                     _TRISCbits	set	3971
   173   000000                     _TRISDbits	set	3972
   174   000000                     _TRISFbits	set	3974
   175   000000                     _LATDbits	set	3964
   176   000000                     _RC4REG	set	3811
   177   000000                     _SP4BRGL	set	3813
   178   000000                     _TX4STAbits	set	3816
   179   000000                     _BAUD4CONbits	set	3817
   180   000000                     _SSP2CON2	set	3802
   181   000000                     _SSP2STAT	set	3800
   182   000000                     _ANSELFbits	set	3764
   183   000000                     _SSP2BUF	set	3797
   184   000000                     _PIE4bits	set	3629
   185   000000                     _PIR4bits	set	3639
   186   000000                     _RC0PPS	set	3682
   187   000000                     _RD5PPS	set	3695
   188   000000                     _RE2PPS	set	3700
   189   000000                     _RD6PPS	set	3696
   190   000000                     _RC7PPS	set	3689
   191   000000                     _CCPR4H	set	3873
   192   000000                     _CCPR3H	set	3877
   193   000000                     _CCP1CONbits	set	4011
   194   000000                     _CCPTMRS0bits	set	4013
   195   000000                     _T2PR	set	4028
   196   000000                     _T2CONbits	set	4029
   197   000000                     _TMR0L	set	4051
   198   000000                     _TMR0H	set	4052
   199   000000                     _CCP2CONbits	set	4007
   200   000000                     _CCP3CONbits	set	3878
   201   000000                     _CCP4CONbits	set	3874
   202   000000                     _T0CON1bits	set	4054
   203   000000                     _T0CON0bits	set	4053
   204   000000                     _RE4PPS	set	3702
   205   000000                     _RG6PPS	set	3720
   206   000000                     _T2CLKCONbits	set	4031
   207   000000                     _T2HLTbits	set	4030
   208                           
   209                           	psect	smallconst
   210   000E00                     __psmallconst:
   211                           	callstack 0
   212   000E00  00                 	db	0
   213   000E01                     STR_1:
   214   000E01  72                 	db	114	;'r'
   215   000E02  65                 	db	101	;'e'
   216   000E03  64                 	db	100	;'d'
   217   000E04  3D                 	db	61	;'='
   218   000E05  25                 	db	37
   219   000E06  64                 	db	100	;'d'
   220   000E07  20                 	db	32
   221   000E08  67                 	db	103	;'g'
   222   000E09  72                 	db	114	;'r'
   223   000E0A  65                 	db	101	;'e'
   224   000E0B  65                 	db	101	;'e'
   225   000E0C  6E                 	db	110	;'n'
   226   000E0D  3D                 	db	61	;'='
   227   000E0E  25                 	db	37
   228   000E0F  64                 	db	100	;'d'
   229   000E10  20                 	db	32
   230   000E11  62                 	db	98	;'b'
   231   000E12  6C                 	db	108	;'l'
   232   000E13  75                 	db	117	;'u'
   233   000E14  65                 	db	101	;'e'
   234   000E15  3D                 	db	61	;'='
   235   000E16  25                 	db	37
   236   000E17  64                 	db	100	;'d'
   237   000E18  20                 	db	32
   238   000E19  74                 	db	116	;'t'
   239   000E1A  69                 	db	105	;'i'
   240   000E1B  6D                 	db	109	;'m'
   241   000E1C  65                 	db	101	;'e'
   242   000E1D  72                 	db	114	;'r'
   243   000E1E  3D                 	db	61	;'='
   244   000E1F  25                 	db	37
   245   000E20  64                 	db	100	;'d'
   246   000E21  20                 	db	32
   247   000E22  0D                 	db	13
   248   000E23  0A                 	db	10
   249   000E24  00                 	db	0
   250   000E25                     STR_2:
   251   000E25  72                 	db	114	;'r'
   252   000E26  65                 	db	101	;'e'
   253   000E27  64                 	db	100	;'d'
   254   000E28  3D                 	db	61	;'='
   255   000E29  25                 	db	37
   256   000E2A  66                 	db	102	;'f'
   257   000E2B  20                 	db	32
   258   000E2C  67                 	db	103	;'g'
   259   000E2D  72                 	db	114	;'r'
   260   000E2E  65                 	db	101	;'e'
   261   000E2F  65                 	db	101	;'e'
   262   000E30  6E                 	db	110	;'n'
   263   000E31  3D                 	db	61	;'='
   264   000E32  25                 	db	37
   265   000E33  66                 	db	102	;'f'
   266   000E34  20                 	db	32
   267   000E35  62                 	db	98	;'b'
   268   000E36  6C                 	db	108	;'l'
   269   000E37  75                 	db	117	;'u'
   270   000E38  65                 	db	101	;'e'
   271   000E39  3D                 	db	61	;'='
   272   000E3A  25                 	db	37
   273   000E3B  66                 	db	102	;'f'
   274   000E3C  20                 	db	32
   275   000E3D  6C                 	db	108	;'l'
   276   000E3E  75                 	db	117	;'u'
   277   000E3F  6D                 	db	109	;'m'
   278   000E40  3D                 	db	61	;'='
   279   000E41  25                 	db	37
   280   000E42  64                 	db	100	;'d'
   281   000E43  20                 	db	32
   282   000E44  20                 	db	32
   283   000E45  0D                 	db	13
   284   000E46  0A                 	db	10
   285   000E47  00                 	db	0
   286   000E48                     STR_3:
   287   000E48  69                 	db	105	;'i'
   288   000E49  6E                 	db	110	;'n'
   289   000E4A  66                 	db	102	;'f'
   290   000E4B  00                 	db	0
   291   000E4C                     STR_6:
   292   000E4C  6E                 	db	110	;'n'
   293   000E4D  61                 	db	97	;'a'
   294   000E4E  6E                 	db	110	;'n'
   295   000E4F  00                 	db	0
   296   000E50  00                 	db	0	; dummy byte at the end
   297   000000                     
   298                           ; #config settings
   299                           
   300                           	psect	cinit
   301   005AD6                     __pcinit:
   302                           	callstack 0
   303   005AD6                     start_initialization:
   304                           	callstack 0
   305   005AD6                     __initialization:
   306                           	callstack 0
   307                           
   308                           ; Initialize objects allocated to BANK0 (9 bytes)
   309                           ; load TBLPTR registers with __pidataBANK0
   310   005AD6  0EF8               	movlw	low __pidataBANK0
   311   005AD8  6EF6               	movwf	tblptrl,c
   312   005ADA  0E5E               	movlw	high __pidataBANK0
   313   005ADC  6EF7               	movwf	tblptrh,c
   314   005ADE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   315   005AE0  6EF8               	movwf	tblptru,c
   316   005AE2  EE00  F0F0         	lfsr	0,__pdataBANK0
   317   005AE6  EE10 F009          	lfsr	1,9
   318   005AEA                     copy_data0:
   319   005AEA  0009               	tblrd		*+
   320   005AEC  CFF5 FFEE          	movff	tablat,postinc0
   321   005AF0  50E5               	movf	postdec1,w,c
   322   005AF2  50E1               	movf	fsr1l,w,c
   323   005AF4  E1FA               	bnz	copy_data0
   324                           
   325                           ; Clear objects allocated to BANK2 (210 bytes)
   326   005AF6  EE02  F000         	lfsr	0,__pbssBANK2
   327   005AFA  0ED2               	movlw	210
   328   005AFC                     clear_0:
   329   005AFC  6AEE               	clrf	postinc0,c
   330   005AFE  06E8               	decf	wreg,f,c
   331   005B00  E1FD               	bnz	clear_0
   332                           
   333                           ; Clear objects allocated to BANK1 (140 bytes)
   334   005B02  EE01  F000         	lfsr	0,__pbssBANK1
   335   005B06  0E8C               	movlw	140
   336   005B08                     clear_1:
   337   005B08  6AEE               	clrf	postinc0,c
   338   005B0A  06E8               	decf	wreg,f,c
   339   005B0C  E1FD               	bnz	clear_1
   340                           
   341                           ; Clear objects allocated to BANK0 (31 bytes)
   342   005B0E  EE00  F0D1         	lfsr	0,__pbssBANK0
   343   005B12  0E1F               	movlw	31
   344   005B14                     clear_2:
   345   005B14  6AEE               	clrf	postinc0,c
   346   005B16  06E8               	decf	wreg,f,c
   347   005B18  E1FD               	bnz	clear_2
   348   005B1A                     end_of_initialization:
   349                           	callstack 0
   350   005B1A                     __end_of__initialization:
   351                           	callstack 0
   352   005B1A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   353   005B1C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   354   005B1E  0100               	movlb	0
   355   005B20  EF94  F011         	goto	_main	;jump to C main() function
   356                           
   357                           	psect	bssBANK0
   358   0000D1                     __pbssBANK0:
   359                           	callstack 0
   360   0000D1                     	ds	12
   361   0000DD                     floorf@F526:
   362                           	callstack 0
   363   0000DD                     	ds	4
   364   0000E1                     ___fpclassifyf@F465:
   365                           	callstack 0
   366   0000E1                     	ds	4
   367   0000E5                     _width:
   368                           	callstack 0
   369   0000E5                     	ds	2
   370   0000E7                     _prec:
   371                           	callstack 0
   372   0000E7                     	ds	2
   373   0000E9                     _low_threshold:
   374                           	callstack 0
   375   0000E9                     	ds	2
   376   0000EB                     _flags:
   377                           	callstack 0
   378   0000EB                     	ds	1
   379   0000EC                     _TxBufReadCnt:
   380                           	callstack 0
   381   0000EC                     	ds	1
   382   0000ED                     _TxBufWriteCnt:
   383                           	callstack 0
   384   0000ED                     	ds	1
   385   0000EE                     _RxBufReadCnt:
   386                           	callstack 0
   387   0000EE                     	ds	1
   388   0000EF                     _RxBufWriteCnt:
   389                           	callstack 0
   390   0000EF                     	ds	1
   391                           
   392                           	psect	dataBANK0
   393   0000F0                     __pdataBANK0:
   394                           	callstack 0
   395   0000F0                     _high_threshold:
   396                           	callstack 0
   397   0000F0                     	ds	2
   398   0000F2                     _RunOneBlockTime:
   399                           	callstack 0
   400   0000F2                     	ds	2
   401   0000F4                     _Turn45Delay:
   402                           	callstack 0
   403   0000F4                     	ds	2
   404   0000F6                     _power:
   405                           	callstack 0
   406   0000F6                     	ds	2
   407   0000F8                     _DataFlag:
   408                           	callstack 0
   409   0000F8                     	ds	1
   410                           
   411                           	psect	bssBANK1
   412   000100                     __pbssBANK1:
   413                           	callstack 0
   414   000100                     _EUSART4RXbuf:
   415                           	callstack 0
   416   000100                     	ds	20
   417   000114                     _move_count:
   418                           	callstack 0
   419   000114                     	ds	2
   420   000116                     _dbuf:
   421                           	callstack 0
   422   000116                     	ds	80
   423   000166                     _rel:
   424                           	callstack 0
   425   000166                     	ds	12
   426   000172                     _motorR:
   427                           	callstack 0
   428   000172                     	ds	9
   429   00017B                     _motorL:
   430                           	callstack 0
   431   00017B                     	ds	9
   432   000184                     _vals:
   433                           	callstack 0
   434   000184                     	ds	8
   435                           
   436                           	psect	bssBANK2
   437   000200                     __pbssBANK2:
   438                           	callstack 0
   439   000200                     _EUSART4TXbuf:
   440                           	callstack 0
   441   000200                     	ds	60
   442   00023C                     _Time_forward:
   443                           	callstack 0
   444   00023C                     	ds	100
   445   0002A0                     _WayBack:
   446                           	callstack 0
   447   0002A0                     	ds	50
   448                           
   449                           	psect	cstackBANK1
   450   00018C                     __pcstackBANK1:
   451                           	callstack 0
   452   00018C                     main@buf:
   453                           	callstack 0
   454                           
   455                           ; 100 bytes @ 0x0
   456   00018C                     	ds	100
   457   0001F0                     main@temp:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x64
   461   0001F0                     	ds	2
   462   0001F2                     main@colour_1191:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x66
   466   0001F2                     	ds	2
   467   0001F4                     main@run_flag:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x68
   471   0001F4                     	ds	2
   472   0001F6                     main@consecuitive:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x6A
   476   0001F6                     	ds	2
   477   0001F8                     main@colour:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x6C
   481   0001F8                     	ds	2
   482   0001FA                     main@prev_colour:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x6E
   486   0001FA                     	ds	2
   487                           
   488                           	psect	cstackBANK0
   489   000060                     __pcstackBANK0:
   490                           	callstack 0
   491   000060                     efgtoa@fp:
   492                           	callstack 0
   493   000060                     colour_rel@L:
   494                           	callstack 0
   495   000060                     _Colour_decider$2949:
   496                           	callstack 0
   497                           
   498                           ; 4 bytes @ 0x0
   499   000060                     	ds	2
   500   000062                     efgtoa@f:
   501                           	callstack 0
   502                           
   503                           ; 4 bytes @ 0x2
   504   000062                     	ds	2
   505   000064                     Colour_decider@Cmax_i:
   506                           	callstack 0
   507   000064                     _colour_rel$2947:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x4
   511   000064                     	ds	2
   512   000066                     efgtoa@c:
   513                           	callstack 0
   514   000066                     Colour_decider@RGB_col:
   515                           	callstack 0
   516                           
   517                           ; 12 bytes @ 0x6
   518   000066                     	ds	1
   519   000067                     ??_efgtoa:
   520                           
   521                           ; 1 bytes @ 0x7
   522   000067                     	ds	1
   523   000068                     _colour_rel$2948:
   524                           	callstack 0
   525                           
   526                           ; 4 bytes @ 0x8
   527   000068                     	ds	1
   528   000069                     efgtoa@ne:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x9
   532   000069                     	ds	2
   533   00006B                     efgtoa@p:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0xB
   537   00006B                     	ds	1
   538   00006C                     colour_rel@R:
   539                           	callstack 0
   540                           
   541                           ; 4 bytes @ 0xC
   542   00006C                     	ds	1
   543   00006D                     efgtoa@t:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0xD
   547   00006D                     	ds	2
   548   00006F                     _efgtoa$2577:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0xF
   552   00006F                     	ds	1
   553   000070                     colour_rel@G:
   554                           	callstack 0
   555                           
   556                           ; 4 bytes @ 0x10
   557   000070                     	ds	1
   558   000071                     efgtoa@pp:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x11
   562   000071                     	ds	1
   563   000072                     efgtoa@mode:
   564                           	callstack 0
   565   000072                     Colour_decider@Cmax:
   566                           	callstack 0
   567                           
   568                           ; 4 bytes @ 0x12
   569   000072                     	ds	1
   570   000073                     efgtoa@nmode:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x13
   574   000073                     	ds	1
   575   000074                     efgtoa@d:
   576                           	callstack 0
   577   000074                     colour_rel@B:
   578                           	callstack 0
   579                           
   580                           ; 4 bytes @ 0x14
   581   000074                     	ds	2
   582   000076                     efgtoa@m:
   583                           	callstack 0
   584   000076                     Colour_decider@Cmin:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x16
   588   000076                     	ds	2
   589   000078                     efgtoa@e:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x18
   593   000078                     	ds	2
   594   00007A                     Colour_decider@i:
   595                           	callstack 0
   596   00007A                     efgtoa@w:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x1A
   600   00007A                     	ds	2
   601   00007C                     Colour_decider@Hue:
   602                           	callstack 0
   603   00007C                     efgtoa@ou:
   604                           	callstack 0
   605                           
   606                           ; 4 bytes @ 0x1C
   607   00007C                     	ds	4
   608   000080                     efgtoa@i:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x20
   612   000080                     	ds	2
   613   000082                     efgtoa@h:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x22
   617   000082                     	ds	4
   618   000086                     efgtoa@l:
   619                           	callstack 0
   620                           
   621                           ; 4 bytes @ 0x26
   622   000086                     	ds	4
   623   00008A                     efgtoa@sign:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x2A
   627   00008A                     	ds	1
   628   00008B                     efgtoa@n:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x2B
   632   00008B                     	ds	2
   633   00008D                     efgtoa@g:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0x2D
   637   00008D                     	ds	4
   638   000091                     efgtoa@u:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x31
   642   000091                     	ds	4
   643   000095                     vfpfcnvrt@fp:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x35
   647   000095                     	ds	2
   648   000097                     vfpfcnvrt@fmt:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x37
   652   000097                     	ds	2
   653   000099                     vfpfcnvrt@ap:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x39
   657   000099                     	ds	2
   658   00009B                     ??_vfpfcnvrt:
   659                           
   660                           ; 1 bytes @ 0x3B
   661   00009B                     	ds	2
   662   00009D                     vfpfcnvrt@convarg:
   663                           	callstack 0
   664                           
   665                           ; 8 bytes @ 0x3D
   666   00009D                     	ds	8
   667   0000A5                     vfpfcnvrt@c:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x45
   671   0000A5                     	ds	1
   672   0000A6                     vfpfcnvrt@cp:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x46
   676   0000A6                     	ds	2
   677   0000A8                     ?_vfprintf:
   678                           	callstack 0
   679   0000A8                     vfprintf@fp:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x48
   683   0000A8                     	ds	2
   684   0000AA                     vfprintf@fmt:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x4A
   688   0000AA                     	ds	2
   689   0000AC                     vfprintf@ap:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x4C
   693   0000AC                     	ds	2
   694   0000AE                     vfprintf@cfmt:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x4E
   698   0000AE                     	ds	2
   699   0000B0                     ?_sprintf:
   700                           	callstack 0
   701   0000B0                     sprintf@s:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x50
   705   0000B0                     	ds	2
   706   0000B2                     sprintf@fmt:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x52
   710   0000B2                     	ds	16
   711   0000C2                     sprintf@ap:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x62
   715   0000C2                     	ds	2
   716   0000C4                     sprintf@f:
   717                           	callstack 0
   718                           
   719                           ; 11 bytes @ 0x64
   720   0000C4                     	ds	11
   721   0000CF                     ??_main:
   722                           
   723                           ; 1 bytes @ 0x6F
   724   0000CF                     	ds	2
   725                           
   726                           	psect	cstackCOMRAM
   727   000001                     __pcstackCOMRAM:
   728                           	callstack 0
   729   000001                     ??_I2C_2_Master_Idle:
   730   000001                     ?___fpclassifyf:
   731                           	callstack 0
   732   000001                     ?___wmul:
   733                           	callstack 0
   734   000001                     ?___fladd:
   735                           	callstack 0
   736   000001                     ?_labs:
   737                           	callstack 0
   738   000001                     ?___flneg:
   739                           	callstack 0
   740   000001                     ?___fltol:
   741                           	callstack 0
   742   000001                     ?___xxtofl:
   743                           	callstack 0
   744   000001                     ?___aodiv:
   745                           	callstack 0
   746   000001                     ?___aomod:
   747                           	callstack 0
   748   000001                     sendCharSerial4@charToSend:
   749                           	callstack 0
   750   000001                     initDCmotorsPWM@PWMperiod:
   751                           	callstack 0
   752   000001                     getTMR0val@moving:
   753                           	callstack 0
   754   000001                     delayed_ms@time:
   755                           	callstack 0
   756   000001                     ___wmul@multiplier:
   757                           	callstack 0
   758   000001                     memcpy@d1:
   759                           	callstack 0
   760   000001                     fputc@c:
   761                           	callstack 0
   762   000001                     strcpy@dest:
   763                           	callstack 0
   764   000001                     ___flneg@f1:
   765                           	callstack 0
   766   000001                     ___fltol@f1:
   767                           	callstack 0
   768   000001                     ___fladd@b:
   769                           	callstack 0
   770   000001                     ___xxtofl@val:
   771                           	callstack 0
   772   000001                     ___fpclassifyf@x:
   773                           	callstack 0
   774   000001                     labs@a:
   775                           	callstack 0
   776   000001                     ___aodiv@dividend:
   777                           	callstack 0
   778   000001                     ___aomod@dividend:
   779                           	callstack 0
   780                           
   781                           ; 8 bytes @ 0x0
   782   000001                     	ds	1
   783   000002                     ??_I2C_2_Master_Read:
   784   000002                     I2C_2_Master_Write@data_byte:
   785                           	callstack 0
   786   000002                     sendStringSerial4@string:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x1
   790   000002                     	ds	1
   791   000003                     ??_delayed_ms:
   792   000003                     color_writetoaddr@value:
   793                           	callstack 0
   794   000003                     I2C_2_Master_Read@ack:
   795                           	callstack 0
   796   000003                     ___wmul@multiplicand:
   797                           	callstack 0
   798   000003                     memcpy@s1:
   799                           	callstack 0
   800   000003                     fputc@fp:
   801                           	callstack 0
   802   000003                     strcpy@src:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x2
   806   000003                     	ds	1
   807   000004                     color_writetoaddr@address:
   808                           	callstack 0
   809   000004                     I2C_2_Master_Read@tmp:
   810                           	callstack 0
   811   000004                     delayed_ms@i:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x3
   815   000004                     	ds	1
   816   000005                     ??_fputc:
   817   000005                     ??___fpclassifyf:
   818   000005                     ??_labs:
   819   000005                     ??_color_click_init:
   820   000005                     ??___fltol:
   821   000005                     ??___xxtofl:
   822   000005                     ?_color_read_lum:
   823                           	callstack 0
   824   000005                     ?_color_read_Red:
   825                           	callstack 0
   826   000005                     ?_color_read_Green:
   827                           	callstack 0
   828   000005                     ?_color_read_Blue:
   829                           	callstack 0
   830   000005                     ___wmul@product:
   831                           	callstack 0
   832   000005                     memcpy@n:
   833                           	callstack 0
   834   000005                     strcpy@s:
   835                           	callstack 0
   836   000005                     ___fladd@a:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x4
   840   000005                     	ds	2
   841   000007                     ??_color_read_lum:
   842   000007                     ??_color_read_Red:
   843   000007                     ??_color_read_Green:
   844   000007                     ??_color_read_Blue:
   845   000007                     ?___lwdiv:
   846                           	callstack 0
   847   000007                     ___lwdiv@dividend:
   848                           	callstack 0
   849   000007                     memcpy@d:
   850                           	callstack 0
   851   000007                     strcpy@d:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x6
   855   000007                     	ds	2
   856   000009                     ??___fladd:
   857   000009                     ___fltol@sign1:
   858                           	callstack 0
   859   000009                     ___xxtofl@sign:
   860                           	callstack 0
   861   000009                     ___lwdiv@divisor:
   862                           	callstack 0
   863   000009                     ___fpclassifyf@e:
   864                           	callstack 0
   865   000009                     memcpy@s:
   866                           	callstack 0
   867   000009                     ___aodiv@divisor:
   868                           	callstack 0
   869   000009                     ___aomod@divisor:
   870                           	callstack 0
   871                           
   872                           ; 8 bytes @ 0x8
   873   000009                     	ds	1
   874   00000A                     ___fltol@exp1:
   875                           	callstack 0
   876   00000A                     ___xxtofl@exp:
   877                           	callstack 0
   878   00000A                     color_read_lum@tmp:
   879                           	callstack 0
   880   00000A                     color_read_Red@tmp:
   881                           	callstack 0
   882   00000A                     color_read_Green@tmp:
   883                           	callstack 0
   884   00000A                     color_read_Blue@tmp:
   885                           	callstack 0
   886   00000A                     fputs@s:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x9
   890   00000A                     	ds	1
   891   00000B                     memcpy@tmp:
   892                           	callstack 0
   893   00000B                     ___lwdiv@quotient:
   894                           	callstack 0
   895   00000B                     ___xxtofl@arg:
   896                           	callstack 0
   897   00000B                     ___fpclassifyf@u:
   898                           	callstack 0
   899                           
   900                           ; 4 bytes @ 0xA
   901   00000B                     	ds	1
   902   00000C                     readColours@vals:
   903                           	callstack 0
   904   00000C                     fputs@fp:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0xB
   908   00000C                     	ds	1
   909   00000D                     ___lwdiv@counter:
   910                           	callstack 0
   911   00000D                     ___fladd@signs:
   912                           	callstack 0
   913                           
   914                           ; 1 bytes @ 0xC
   915   00000D                     	ds	1
   916   00000E                     ___fladd@aexp:
   917                           	callstack 0
   918   00000E                     fputs@c:
   919                           	callstack 0
   920   00000E                     setMotorPWM@m:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0xD
   924   00000E                     	ds	1
   925   00000F                     ___fladd@bexp:
   926                           	callstack 0
   927   00000F                     fputs@i:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0xE
   931   00000F                     	ds	1
   932   000010                     ??_setMotorPWM:
   933   000010                     ___fladd@grs:
   934                           	callstack 0
   935                           
   936                           ; 1 bytes @ 0xF
   937   000010                     	ds	1
   938   000011                     ?___flmul:
   939                           	callstack 0
   940   000011                     ___aodiv@counter:
   941                           	callstack 0
   942   000011                     ___aomod@counter:
   943                           	callstack 0
   944   000011                     pad@fp:
   945                           	callstack 0
   946   000011                     ___flmul@b:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x10
   950   000011                     	ds	1
   951   000012                     setMotorPWM@posDuty:
   952                           	callstack 0
   953   000012                     ___aodiv@sign:
   954                           	callstack 0
   955   000012                     ___aomod@sign:
   956                           	callstack 0
   957                           
   958                           ; 1 bytes @ 0x11
   959   000012                     	ds	1
   960   000013                     ?_abs:
   961                           	callstack 0
   962   000013                     setMotorPWM@negDuty:
   963                           	callstack 0
   964   000013                     pad@buf:
   965                           	callstack 0
   966   000013                     abs@a:
   967                           	callstack 0
   968   000013                     ___aodiv@quotient:
   969                           	callstack 0
   970                           
   971                           ; 8 bytes @ 0x12
   972   000013                     	ds	1
   973   000014                     stop@mL:
   974                           	callstack 0
   975   000014                     turnLeft@mL:
   976                           	callstack 0
   977   000014                     turnRight@mL:
   978                           	callstack 0
   979   000014                     fullSpeedAhead@mL:
   980                           	callstack 0
   981   000014                     timed_forward@mL:
   982                           	callstack 0
   983   000014                     fullSpeedBack@mL:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x13
   987   000014                     	ds	1
   988   000015                     ??_abs:
   989   000015                     pad@p:
   990                           	callstack 0
   991   000015                     ___flmul@a:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x14
   995   000015                     	ds	1
   996   000016                     stop@mR:
   997                           	callstack 0
   998   000016                     turnLeft@mR:
   999                           	callstack 0
  1000   000016                     turnRight@mR:
  1001                           	callstack 0
  1002   000016                     fullSpeedAhead@mR:
  1003                           	callstack 0
  1004   000016                     timed_forward@mR:
  1005                           	callstack 0
  1006   000016                     fullSpeedBack@mR:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x15
  1010   000016                     	ds	1
  1011   000017                     ??_pad:
  1012                           
  1013                           ; 1 bytes @ 0x16
  1014   000017                     	ds	1
  1015   000018                     ??_fullSpeedAhead:
  1016   000018                     ??_stop:
  1017   000018                     ??_turnLeft:
  1018   000018                     ??_turnRight:
  1019   000018                     ??_fullSpeedBack:
  1020   000018                     timed_forward@time:
  1021                           	callstack 0
  1022   000018                     pad@i:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x17
  1026   000018                     	ds	1
  1027   000019                     ??___flmul:
  1028                           
  1029                           ; 1 bytes @ 0x18
  1030   000019                     	ds	1
  1031   00001A                     ??_timed_forward:
  1032   00001A                     turnRight45@mL:
  1033                           	callstack 0
  1034   00001A                     turnLeft45@mL:
  1035                           	callstack 0
  1036   00001A                     reverseDetect@mL:
  1037                           	callstack 0
  1038   00001A                     reverseOneBlock@mL:
  1039                           	callstack 0
  1040   00001A                     ForwardOneBlock@mL:
  1041                           	callstack 0
  1042   00001A                     Forwardhalfblock@mL:
  1043                           	callstack 0
  1044   00001A                     Backhalfblock@mL:
  1045                           	callstack 0
  1046   00001A                     pad@w:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x19
  1050   00001A                     	ds	2
  1051   00001C                     turnRight45@mR:
  1052                           	callstack 0
  1053   00001C                     turnLeft45@mR:
  1054                           	callstack 0
  1055   00001C                     reverseDetect@mR:
  1056                           	callstack 0
  1057   00001C                     reverseOneBlock@mR:
  1058                           	callstack 0
  1059   00001C                     ForwardOneBlock@mR:
  1060                           	callstack 0
  1061   00001C                     Forwardhalfblock@mR:
  1062                           	callstack 0
  1063   00001C                     Backhalfblock@mR:
  1064                           	callstack 0
  1065   00001C                     dtoa@fp:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x1B
  1069   00001C                     	ds	1
  1070   00001D                     ___flmul@sign:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x1C
  1074   00001D                     	ds	1
  1075   00001E                     ??_Forwardhalfblock:
  1076   00001E                     ??_turnRight45:
  1077   00001E                     ??_turnLeft45:
  1078   00001E                     ??_reverseDetect:
  1079   00001E                     ??_reverseOneBlock:
  1080   00001E                     ??_ForwardOneBlock:
  1081   00001E                     ??_Backhalfblock:
  1082   00001E                     ___flmul@grs:
  1083                           	callstack 0
  1084   00001E                     dtoa@d:
  1085                           	callstack 0
  1086                           
  1087                           ; 8 bytes @ 0x1D
  1088   00001E                     	ds	2
  1089   000020                     RedMove@mL:
  1090                           	callstack 0
  1091   000020                     GreenMove@mL:
  1092                           	callstack 0
  1093   000020                     BlueMove@mL:
  1094                           	callstack 0
  1095   000020                     YellowMove@mL:
  1096                           	callstack 0
  1097   000020                     PinkMove@mL:
  1098                           	callstack 0
  1099   000020                     OrangeMove@mL:
  1100                           	callstack 0
  1101   000020                     LightBlueMove@mL:
  1102                           	callstack 0
  1103   000020                     RetryMove@mL:
  1104                           	callstack 0
  1105   000020                     ReverseYellow@mL:
  1106                           	callstack 0
  1107   000020                     ReversePink@mL:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x1F
  1111   000020                     	ds	2
  1112   000022                     ___flmul@aexp:
  1113                           	callstack 0
  1114   000022                     RedMove@mR:
  1115                           	callstack 0
  1116   000022                     GreenMove@mR:
  1117                           	callstack 0
  1118   000022                     BlueMove@mR:
  1119                           	callstack 0
  1120   000022                     YellowMove@mR:
  1121                           	callstack 0
  1122   000022                     PinkMove@mR:
  1123                           	callstack 0
  1124   000022                     OrangeMove@mR:
  1125                           	callstack 0
  1126   000022                     LightBlueMove@mR:
  1127                           	callstack 0
  1128   000022                     RetryMove@mR:
  1129                           	callstack 0
  1130   000022                     ReverseYellow@mR:
  1131                           	callstack 0
  1132   000022                     ReversePink@mR:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x21
  1136   000022                     	ds	1
  1137   000023                     ___flmul@bexp:
  1138                           	callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x22
  1141   000023                     	ds	1
  1142   000024                     go_Home@WayBack:
  1143                           	callstack 0
  1144   000024                     ___flmul@prod:
  1145                           	callstack 0
  1146                           
  1147                           ; 4 bytes @ 0x23
  1148   000024                     	ds	2
  1149   000026                     ??_dtoa:
  1150   000026                     go_Home@Time_forward:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x25
  1154   000026                     	ds	2
  1155   000028                     ??_go_Home:
  1156   000028                     ___flmul@temp:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x27
  1160   000028                     	ds	2
  1161   00002A                     ?___flsub:
  1162                           	callstack 0
  1163   00002A                     ___flge@ff1:
  1164                           	callstack 0
  1165   00002A                     ___flsub@b:
  1166                           	callstack 0
  1167                           
  1168                           ; 4 bytes @ 0x29
  1169   00002A                     	ds	1
  1170   00002B                     go_Home@i:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x2A
  1174   00002B                     	ds	3
  1175   00002E                     _dtoa$2546:
  1176                           	callstack 0
  1177   00002E                     ___flge@ff2:
  1178                           	callstack 0
  1179   00002E                     ___flsub@a:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x2D
  1183   00002E                     	ds	2
  1184   000030                     dtoa@p:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x2F
  1188   000030                     	ds	2
  1189   000032                     ??___flge:
  1190   000032                     ?___fldiv:
  1191                           	callstack 0
  1192   000032                     dtoa@w:
  1193                           	callstack 0
  1194   000032                     ___fleq@ff1:
  1195                           	callstack 0
  1196   000032                     ___fldiv@b:
  1197                           	callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x31
  1200   000032                     	ds	2
  1201   000034                     dtoa@n:
  1202                           	callstack 0
  1203                           
  1204                           ; 8 bytes @ 0x33
  1205   000034                     	ds	2
  1206   000036                     ___fleq@ff2:
  1207                           	callstack 0
  1208   000036                     ___fldiv@a:
  1209                           	callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x35
  1212   000036                     	ds	4
  1213   00003A                     ??___fldiv:
  1214   00003A                     ??___fleq:
  1215                           
  1216                           ; 1 bytes @ 0x39
  1217   00003A                     	ds	2
  1218   00003C                     dtoa@i:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x3B
  1222   00003C                     	ds	2
  1223   00003E                     dtoa@s:
  1224                           	callstack 0
  1225   00003E                     ___fldiv@rem:
  1226                           	callstack 0
  1227                           
  1228                           ; 4 bytes @ 0x3D
  1229   00003E                     	ds	4
  1230   000042                     ___fldiv@sign:
  1231                           	callstack 0
  1232                           
  1233                           ; 1 bytes @ 0x41
  1234   000042                     	ds	1
  1235   000043                     ___fldiv@new_exp:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x42
  1239   000043                     	ds	2
  1240   000045                     ___fldiv@grs:
  1241                           	callstack 0
  1242                           
  1243                           ; 4 bytes @ 0x44
  1244   000045                     	ds	4
  1245   000049                     ___fldiv@bexp:
  1246                           	callstack 0
  1247                           
  1248                           ; 1 bytes @ 0x48
  1249   000049                     	ds	1
  1250   00004A                     ___fldiv@aexp:
  1251                           	callstack 0
  1252                           
  1253                           ; 1 bytes @ 0x49
  1254   00004A                     	ds	1
  1255   00004B                     ?_Colour_decider:
  1256                           	callstack 0
  1257   00004B                     ?_floorf:
  1258                           	callstack 0
  1259   00004B                     colour_rel@vals:
  1260                           	callstack 0
  1261   00004B                     Colour_decider@vals:
  1262                           	callstack 0
  1263   00004B                     floorf@x:
  1264                           	callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x4A
  1267   00004B                     	ds	2
  1268   00004D                     colour_rel@rel:
  1269                           	callstack 0
  1270   00004D                     Colour_decider@rel:
  1271                           	callstack 0
  1272                           
  1273                           ; 2 bytes @ 0x4C
  1274   00004D                     	ds	2
  1275   00004F                     ??_floorf:
  1276   00004F                     ??_Colour_decider:
  1277                           
  1278                           ; 1 bytes @ 0x4E
  1279   00004F                     	ds	6
  1280   000055                     floorf@m:
  1281                           	callstack 0
  1282                           
  1283                           ; 4 bytes @ 0x54
  1284   000055                     	ds	4
  1285   000059                     floorf@e:
  1286                           	callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x58
  1289   000059                     	ds	2
  1290   00005B                     floorf@u:
  1291                           	callstack 0
  1292                           
  1293                           ; 4 bytes @ 0x5A
  1294   00005B                     	ds	4
  1295   00005F                     
  1296                           ; 1 bytes @ 0x5E
  1297 ;;
  1298 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1299 ;;
  1300 ;; *************** function _main *****************
  1301 ;; Defined at:
  1302 ;;		line 30 in file "main.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;		None
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  colour          2  108[BANK1 ] int 
  1307 ;;  colour          2  102[BANK1 ] int 
  1308 ;;  temp            2  100[BANK1 ] int 
  1309 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1310 ;;  prev_colour     2  110[BANK1 ] int 
  1311 ;;  consecuitive    2  106[BANK1 ] int 
  1312 ;;  run_flag        2  104[BANK1 ] int 
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1323 ;;      Locals:         0       0     112       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1324 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1325 ;;      Totals:         0       2     112       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1326 ;;Total ram usage:      114 bytes
  1327 ;; Hardware stack levels required when called: 9
  1328 ;; This function calls:
  1329 ;;		_BlueMove
  1330 ;;		_Colour_decider
  1331 ;;		_Forwardhalfblock
  1332 ;;		_GreenMove
  1333 ;;		_I2C_2_Master_Init
  1334 ;;		_Interrupts_init
  1335 ;;		_LightBlueMove
  1336 ;;		_OrangeMove
  1337 ;;		_PinkMove
  1338 ;;		_RedMove
  1339 ;;		_RetryMove
  1340 ;;		_Timer0_init
  1341 ;;		_YellowMove
  1342 ;;		_color_click_init
  1343 ;;		_colour_rel
  1344 ;;		_fullSpeedAhead
  1345 ;;		_getTMR0val
  1346 ;;		_go_Home
  1347 ;;		_initDCmotorsPWM
  1348 ;;		_initUSART4
  1349 ;;		_readColours
  1350 ;;		_sendStringSerial4
  1351 ;;		_sprintf
  1352 ;;		_stop
  1353 ;; This function is called by:
  1354 ;;		Startup code after reset
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text0
  1359   002328                     __ptext0:
  1360                           	callstack 0
  1361   002328                     _main:
  1362                           	callstack 22
  1363   002328                     
  1364                           ;main.c: 31:     initUSART4();
  1365   002328  EC4C  F02F         	call	_initUSART4	;wreg free
  1366   00232C                     
  1367                           ;main.c: 32:     Interrupts_init();
  1368   00232C  EC82  F02F         	call	_Interrupts_init	;wreg free
  1369   002330                     
  1370                           ;main.c: 33:     color_click_init();
  1371   002330  EC28  F02C         	call	_color_click_init	;wreg free
  1372   002334                     
  1373                           ;main.c: 34:     I2C_2_Master_Init();
  1374   002334  ECC8  F02E         	call	_I2C_2_Master_Init	;wreg free
  1375   002338                     
  1376                           ;main.c: 35:     Timer0_init();
  1377   002338  EC3C  F02F         	call	_Timer0_init	;wreg free
  1378   00233C                     
  1379                           ;main.c: 36:     initDCmotorsPWM(200);
  1380   00233C  0E00               	movlw	0
  1381   00233E  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1382   002340  0EC8               	movlw	200
  1383   002342  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1384   002344  ECBA  F028         	call	_initDCmotorsPWM	;wreg free
  1385   002348                     
  1386                           ;main.c: 37:     char buf[100];;main.c: 38:     TRISGbits.TRISG1 = 0;
  1387   002348  9287               	bcf	135,1,c	;volatile
  1388   00234A                     
  1389                           ;main.c: 39:     TRISAbits.TRISA4 = 0;
  1390   00234A  9881               	bcf	129,4,c	;volatile
  1391   00234C                     
  1392                           ;main.c: 40:     TRISFbits.TRISF7 = 0;
  1393   00234C  9E86               	bcf	134,7,c	;volatile
  1394   00234E                     
  1395                           ;main.c: 41:     TRISFbits.TRISF2 = 1;
  1396   00234E  8486               	bsf	134,2,c	;volatile
  1397   002350                     
  1398                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1399   002350  010E               	movlb	14	; () banked
  1400   002352  95B4               	bcf	180,2,b	;volatile
  1401   002354                     
  1402                           ; BSR set to: 14
  1403                           ;main.c: 43:     LATGbits.LATG1=1;
  1404   002354  827F               	bsf	127,1,c	;volatile
  1405   002356                     
  1406                           ; BSR set to: 14
  1407                           ;main.c: 44:     LATAbits.LATA4=1;
  1408   002356  8879               	bsf	121,4,c	;volatile
  1409   002358                     
  1410                           ; BSR set to: 14
  1411                           ;main.c: 45:     LATFbits.LATF7=1;
  1412   002358  8E7E               	bsf	126,7,c	;volatile
  1413   00235A                     
  1414                           ; BSR set to: 14
  1415                           ;main.c: 49:     motorL.power=0;
  1416   00235A  0E00               	movlw	0
  1417   00235C  0101               	movlb	1	; () banked
  1418   00235E  6F7B               	movwf	_motorL& (0+255),b
  1419   002360                     
  1420                           ; BSR set to: 1
  1421                           ;main.c: 50:     motorL.direction=1;
  1422   002360  0E01               	movlw	1
  1423   002362  6F7C               	movwf	(_motorL+1)& (0+255),b
  1424   002364                     
  1425                           ; BSR set to: 1
  1426                           ;main.c: 51:     motorL.brakemode=1;
  1427   002364  0E01               	movlw	1
  1428   002366  6F7D               	movwf	(_motorL+2)& (0+255),b
  1429   002368                     
  1430                           ; BSR set to: 1
  1431                           ;main.c: 52:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1432   002368  0EAA               	movlw	170
  1433   00236A  6F80               	movwf	(_motorL+5)& (0+255),b
  1434   00236C  0E0F               	movlw	15
  1435   00236E  6F81               	movwf	(_motorL+6)& (0+255),b
  1436   002370                     
  1437                           ; BSR set to: 1
  1438                           ;main.c: 53:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1439   002370  0EA6               	movlw	166
  1440   002372  6F82               	movwf	(_motorL+7)& (0+255),b
  1441   002374  0E0F               	movlw	15
  1442   002376  6F83               	movwf	(_motorL+8)& (0+255),b
  1443   002378                     
  1444                           ; BSR set to: 1
  1445                           ;main.c: 54:     motorL.PWMperiod=200;
  1446   002378  0E00               	movlw	0
  1447   00237A  6F7F               	movwf	(_motorL+4)& (0+255),b
  1448   00237C  0EC8               	movlw	200
  1449   00237E  6F7E               	movwf	(_motorL+3)& (0+255),b
  1450   002380                     
  1451                           ; BSR set to: 1
  1452                           ;main.c: 55:     motorR.power=0;
  1453   002380  0E00               	movlw	0
  1454   002382  6F72               	movwf	_motorR& (0+255),b
  1455   002384                     
  1456                           ; BSR set to: 1
  1457                           ;main.c: 56:     motorR.direction=1;
  1458   002384  0E01               	movlw	1
  1459   002386  6F73               	movwf	(_motorR+1)& (0+255),b
  1460   002388                     
  1461                           ; BSR set to: 1
  1462                           ;main.c: 57:     motorR.brakemode=1;
  1463   002388  0E01               	movlw	1
  1464   00238A  6F74               	movwf	(_motorR+2)& (0+255),b
  1465   00238C                     
  1466                           ; BSR set to: 1
  1467                           ;main.c: 58:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1468   00238C  0E25               	movlw	37
  1469   00238E  6F77               	movwf	(_motorR+5)& (0+255),b
  1470   002390  0E0F               	movlw	15
  1471   002392  6F78               	movwf	(_motorR+6)& (0+255),b
  1472   002394                     
  1473                           ; BSR set to: 1
  1474                           ;main.c: 59:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1475   002394  0E21               	movlw	33
  1476   002396  6F79               	movwf	(_motorR+7)& (0+255),b
  1477   002398  0E0F               	movlw	15
  1478   00239A  6F7A               	movwf	(_motorR+8)& (0+255),b
  1479   00239C                     
  1480                           ; BSR set to: 1
  1481                           ;main.c: 60:     motorR.PWMperiod=200;
  1482   00239C  0E00               	movlw	0
  1483   00239E  6F76               	movwf	(_motorR+4)& (0+255),b
  1484   0023A0  0EC8               	movlw	200
  1485   0023A2  6F75               	movwf	(_motorR+3)& (0+255),b
  1486   0023A4                     
  1487                           ; BSR set to: 1
  1488                           ;main.c: 61:     int consecuitive=0;
  1489   0023A4  0E00               	movlw	0
  1490   0023A6  6FF7               	movwf	(main@consecuitive+1)& (0+255),b
  1491   0023A8  0E00               	movlw	0
  1492   0023AA  6FF6               	movwf	main@consecuitive& (0+255),b
  1493   0023AC                     
  1494                           ; BSR set to: 1
  1495                           ;main.c: 62:     int prev_colour =0;
  1496   0023AC  0E00               	movlw	0
  1497   0023AE  6FFB               	movwf	(main@prev_colour+1)& (0+255),b
  1498   0023B0  0E00               	movlw	0
  1499   0023B2  6FFA               	movwf	main@prev_colour& (0+255),b
  1500   0023B4                     
  1501                           ; BSR set to: 1
  1502                           ;main.c: 63:     int run_flag=1;
  1503   0023B4  0E00               	movlw	0
  1504   0023B6  6FF5               	movwf	(main@run_flag+1)& (0+255),b
  1505   0023B8  0E01               	movlw	1
  1506   0023BA  6FF4               	movwf	main@run_flag& (0+255),b
  1507   0023BC                     
  1508                           ; BSR set to: 1
  1509                           ;main.c: 64:     move_count=-1;
  1510   0023BC  6914               	setf	_move_count& (0+255),b	;volatile
  1511   0023BE  6915               	setf	(_move_count+1)& (0+255),b	;volatile
  1512   0023C0                     l400:
  1513   0023C0  B48E               	btfsc	142,2,c	;volatile
  1514   0023C2  EFE5  F011         	goto	u5581
  1515   0023C6  EFE7  F011         	goto	u5580
  1516   0023CA                     u5581:
  1517   0023CA  EFE0  F011         	goto	l400
  1518   0023CE                     u5580:
  1519   0023CE                     
  1520                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1521   0023CE  0E52               	movlw	82
  1522   0023D0  0100               	movlb	0	; () banked
  1523   0023D2  6FD0               	movwf	(??_main+1)& (0+255),b
  1524   0023D4  0E2B               	movlw	43
  1525   0023D6  6FCF               	movwf	??_main& (0+255),b
  1526   0023D8  0E00               	movlw	0
  1527   0023DA                     u5787:
  1528   0023DA  2EE8               	decfsz	wreg,f,c
  1529   0023DC  D7FE               	bra	u5787
  1530   0023DE  2FCF               	decfsz	??_main& (0+255),f,b
  1531   0023E0  D7FC               	bra	u5787
  1532   0023E2  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1533   0023E4  D7FA               	bra	u5787
  1534   0023E6  F000               	nop	
  1535   0023E8                     
  1536                           ;main.c: 67:     TMR0H=0;
  1537   0023E8  0E00               	movlw	0
  1538   0023EA  6ED4               	movwf	212,c	;volatile
  1539   0023EC                     
  1540                           ;main.c: 68:     TMR0L=0;
  1541   0023EC  0E00               	movlw	0
  1542   0023EE  6ED3               	movwf	211,c	;volatile
  1543                           
  1544                           ;main.c: 69:     while (run_flag)
  1545   0023F0  EF29  F014         	goto	l5791
  1546   0023F4                     l5663:
  1547                           
  1548                           ; BSR set to: 1
  1549                           ;main.c: 70:     {;main.c: 72:         fullSpeedAhead(&motorL,&motorR);
  1550   0023F4  0E7B               	movlw	low _motorL
  1551   0023F6  6E14               	movwf	fullSpeedAhead@mL^0,c
  1552   0023F8  0E01               	movlw	high _motorL
  1553   0023FA  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1554   0023FC  0E72               	movlw	low _motorR
  1555   0023FE  6E16               	movwf	fullSpeedAhead@mR^0,c
  1556   002400  0E01               	movlw	high _motorR
  1557   002402  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1558   002404  ECCD  F027         	call	_fullSpeedAhead	;wreg free
  1559   002408                     
  1560                           ;main.c: 77:         readColours(&vals);
  1561   002408  0E84               	movlw	low _vals
  1562   00240A  6E0C               	movwf	readColours@vals^0,c
  1563   00240C  0E01               	movlw	high _vals
  1564   00240E  6E0D               	movwf	(readColours@vals+1)^0,c
  1565   002410  EC1A  F02A         	call	_readColours	;wreg free
  1566   002414                     
  1567                           ;main.c: 80:         colour_rel(&vals, &rel);
  1568   002414  0E84               	movlw	low _vals
  1569   002416  6E4B               	movwf	colour_rel@vals^0,c
  1570   002418  0E01               	movlw	high _vals
  1571   00241A  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1572   00241C  0E66               	movlw	low _rel
  1573   00241E  6E4D               	movwf	colour_rel@rel^0,c
  1574   002420  0E01               	movlw	high _rel
  1575   002422  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1576   002424  EC77  F01A         	call	_colour_rel	;wreg free
  1577   002428                     
  1578                           ;main.c: 83:         if (vals.L>=500){
  1579   002428  0101               	movlb	1	; () banked
  1580   00242A  BF8B               	btfsc	(_vals+7)& (0+255),7,b
  1581   00242C  EF21  F012         	goto	u5591
  1582   002430  0EF4               	movlw	244
  1583   002432  5D8A               	subwf	(_vals+6)& (0+255),w,b
  1584   002434  0E01               	movlw	1
  1585   002436  598B               	subwfb	(_vals+7)& (0+255),w,b
  1586   002438  A0D8               	btfss	status,0,c
  1587   00243A  EF21  F012         	goto	u5591
  1588   00243E  EF23  F012         	goto	u5590
  1589   002442                     u5591:
  1590   002442  EFEE  F013         	goto	l5785
  1591   002446                     u5590:
  1592   002446                     
  1593                           ; BSR set to: 1
  1594                           ;main.c: 84:             move_count++;
  1595   002446  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1596   002448  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1597   00244A                     
  1598                           ; BSR set to: 1
  1599                           ;main.c: 85:             getTMR0val();
  1600   00244A  EC06  F02F         	call	_getTMR0val	;wreg free
  1601   00244E                     
  1602                           ;main.c: 87:             Forwardhalfblock(&motorL,&motorR);
  1603   00244E  0E7B               	movlw	low _motorL
  1604   002450  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1605   002452  0E01               	movlw	high _motorL
  1606   002454  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1607   002456  0E72               	movlw	low _motorR
  1608   002458  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1609   00245A  0E01               	movlw	high _motorR
  1610   00245C  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1611   00245E  EC76  F02A         	call	_Forwardhalfblock	;wreg free
  1612   002462                     
  1613                           ;main.c: 89:             stop(&motorL, &motorR);
  1614   002462  0E7B               	movlw	low _motorL
  1615   002464  6E14               	movwf	stop@mL^0,c
  1616   002466  0E01               	movlw	high _motorL
  1617   002468  6E15               	movwf	(stop@mL+1)^0,c
  1618   00246A  0E72               	movlw	low _motorR
  1619   00246C  6E16               	movwf	stop@mR^0,c
  1620   00246E  0E01               	movlw	high _motorR
  1621   002470  6E17               	movwf	(stop@mR+1)^0,c
  1622   002472  ECFE  F028         	call	_stop	;wreg free
  1623   002476                     
  1624                           ;main.c: 90:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1625   002476  0E11               	movlw	17
  1626   002478  0100               	movlb	0	; () banked
  1627   00247A  6FD0               	movwf	(??_main+1)& (0+255),b
  1628   00247C  0E3C               	movlw	60
  1629   00247E  6FCF               	movwf	??_main& (0+255),b
  1630   002480  0ECB               	movlw	203
  1631   002482                     u5797:
  1632   002482  2EE8               	decfsz	wreg,f,c
  1633   002484  D7FE               	bra	u5797
  1634   002486  2FCF               	decfsz	??_main& (0+255),f,b
  1635   002488  D7FC               	bra	u5797
  1636   00248A  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1637   00248C  D7FA               	bra	u5797
  1638                           
  1639                           ;main.c: 97:             while (consecuitive<20){
  1640   00248E  EF7C  F012         	goto	l5693
  1641   002492                     l5681:
  1642                           
  1643                           ; BSR set to: 1
  1644                           ;main.c: 98:                 int colour = Colour_decider(&vals, &rel);
  1645   002492  0E84               	movlw	low _vals
  1646   002494  6E4B               	movwf	Colour_decider@vals^0,c
  1647   002496  0E01               	movlw	high _vals
  1648   002498  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1649   00249A  0E66               	movlw	low _rel
  1650   00249C  6E4D               	movwf	Colour_decider@rel^0,c
  1651   00249E  0E01               	movlw	high _rel
  1652   0024A0  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1653   0024A2  EC29  F007         	call	_Colour_decider	;wreg free
  1654   0024A6  C04B  F1F8         	movff	?_Colour_decider,main@colour
  1655   0024AA  C04C  F1F9         	movff	?_Colour_decider+1,main@colour+1
  1656   0024AE                     
  1657                           ;main.c: 99:                 if (colour==prev_colour){
  1658   0024AE  0101               	movlb	1	; () banked
  1659   0024B0  51FA               	movf	main@prev_colour& (0+255),w,b
  1660   0024B2  19F8               	xorwf	main@colour& (0+255),w,b
  1661   0024B4  E107               	bnz	u5601
  1662   0024B6  51FB               	movf	(main@prev_colour+1)& (0+255),w,b
  1663   0024B8  19F9               	xorwf	(main@colour+1)& (0+255),w,b
  1664   0024BA  A4D8               	btfss	status,2,c
  1665   0024BC  EF62  F012         	goto	u5601
  1666   0024C0  EF64  F012         	goto	u5600
  1667   0024C4                     u5601:
  1668   0024C4  EF68  F012         	goto	l5687
  1669   0024C8                     u5600:
  1670   0024C8                     
  1671                           ; BSR set to: 1
  1672                           ;main.c: 100:                     consecuitive++;
  1673   0024C8  4BF6               	infsnz	main@consecuitive& (0+255),f,b
  1674   0024CA  2BF7               	incf	(main@consecuitive+1)& (0+255),f,b
  1675                           
  1676                           ;main.c: 101:                 }
  1677   0024CC  EF6C  F012         	goto	l5689
  1678   0024D0                     l5687:
  1679                           
  1680                           ; BSR set to: 1
  1681                           ;main.c: 103:                     consecuitive=0;
  1682   0024D0  0E00               	movlw	0
  1683   0024D2  6FF7               	movwf	(main@consecuitive+1)& (0+255),b
  1684   0024D4  0E00               	movlw	0
  1685   0024D6  6FF6               	movwf	main@consecuitive& (0+255),b
  1686   0024D8                     l5689:
  1687                           
  1688                           ; BSR set to: 1
  1689                           ;main.c: 105:                 prev_colour=colour;
  1690   0024D8  C1F8  F1FA         	movff	main@colour,main@prev_colour
  1691   0024DC  C1F9  F1FB         	movff	main@colour+1,main@prev_colour+1
  1692   0024E0                     
  1693                           ; BSR set to: 1
  1694                           ;main.c: 106:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1695   0024E0  0E05               	movlw	5
  1696   0024E2  0100               	movlb	0	; () banked
  1697   0024E4  6FD0               	movwf	(??_main+1)& (0+255),b
  1698   0024E6  0E0F               	movlw	15
  1699   0024E8  6FCF               	movwf	??_main& (0+255),b
  1700   0024EA  0EF1               	movlw	241
  1701   0024EC                     u5807:
  1702   0024EC  2EE8               	decfsz	wreg,f,c
  1703   0024EE  D7FE               	bra	u5807
  1704   0024F0  2FCF               	decfsz	??_main& (0+255),f,b
  1705   0024F2  D7FC               	bra	u5807
  1706   0024F4  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1707   0024F6  D7FA               	bra	u5807
  1708   0024F8                     l5693:
  1709                           
  1710                           ;main.c: 97:             while (consecuitive<20){
  1711   0024F8  0101               	movlb	1	; () banked
  1712   0024FA  BFF7               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1713   0024FC  EF89  F012         	goto	u5611
  1714   002500  51F7               	movf	(main@consecuitive+1)& (0+255),w,b
  1715   002502  E109               	bnz	u5610
  1716   002504  0E14               	movlw	20
  1717   002506  5DF6               	subwf	main@consecuitive& (0+255),w,b
  1718   002508  A0D8               	btfss	status,0,c
  1719   00250A  EF89  F012         	goto	u5611
  1720   00250E  EF8B  F012         	goto	u5610
  1721   002512                     u5611:
  1722   002512  EF49  F012         	goto	l5681
  1723   002516                     u5610:
  1724   002516                     
  1725                           ; BSR set to: 1
  1726                           ;main.c: 108:             consecuitive=0;
  1727   002516  0E00               	movlw	0
  1728   002518  6FF7               	movwf	(main@consecuitive+1)& (0+255),b
  1729   00251A  0E00               	movlw	0
  1730   00251C  6FF6               	movwf	main@consecuitive& (0+255),b
  1731   00251E                     
  1732                           ; BSR set to: 1
  1733                           ;main.c: 109:             int temp=TMR0L;
  1734   00251E  CFD3 F1F0          	movff	4051,main@temp	;volatile
  1735   002522  6BF1               	clrf	(main@temp+1)& (0+255),b
  1736   002524                     
  1737                           ; BSR set to: 1
  1738                           ;main.c: 110:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  1739   002524  0E8C               	movlw	low main@buf
  1740   002526  0100               	movlb	0	; () banked
  1741   002528  6FB0               	movwf	sprintf@s& (0+255),b
  1742   00252A  0E01               	movlw	high main@buf
  1743   00252C  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1744   00252E  0E01               	movlw	low STR_1
  1745   002530  6FB2               	movwf	sprintf@fmt& (0+255),b
  1746   002532  0E0E               	movlw	high STR_1
  1747   002534  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1748   002536  C184  F0B4         	movff	_vals,?_sprintf+4
  1749   00253A  C185  F0B5         	movff	_vals+1,?_sprintf+5
  1750   00253E  C186  F0B6         	movff	_vals+2,?_sprintf+6
  1751   002542  C187  F0B7         	movff	_vals+3,?_sprintf+7
  1752   002546  C188  F0B8         	movff	_vals+4,?_sprintf+8
  1753   00254A  C189  F0B9         	movff	_vals+5,?_sprintf+9
  1754   00254E  CFD4 F0BA          	movff	4052,?_sprintf+10	;volatile
  1755   002552  6BBB               	clrf	(?_sprintf+11)& (0+255),b
  1756   002554  ECAD  F02B         	call	_sprintf	;wreg free
  1757   002558                     
  1758                           ;main.c: 113:             sendStringSerial4(buf);
  1759   002558  0E8C               	movlw	low main@buf
  1760   00255A  6E02               	movwf	sendStringSerial4@string^0,c
  1761   00255C  0E01               	movlw	high main@buf
  1762   00255E  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1763   002560  ECB0  F02E         	call	_sendStringSerial4	;wreg free
  1764   002564                     
  1765                           ;main.c: 115:             if (prev_colour==1){
  1766   002564  0101               	movlb	1	; () banked
  1767   002566  05FA               	decf	main@prev_colour& (0+255),w,b
  1768   002568  11FB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1769   00256A  A4D8               	btfss	status,2,c
  1770   00256C  EFBA  F012         	goto	u5621
  1771   002570  EFBC  F012         	goto	u5620
  1772   002574                     u5621:
  1773   002574  EFD5  F012         	goto	l5713
  1774   002578                     u5620:
  1775   002578                     
  1776                           ; BSR set to: 1
  1777                           ;main.c: 116:                 RedMove(&motorL, &motorR);
  1778   002578  0E7B               	movlw	low _motorL
  1779   00257A  6E20               	movwf	RedMove@mL^0,c
  1780   00257C  0E01               	movlw	high _motorL
  1781   00257E  6E21               	movwf	(RedMove@mL+1)^0,c
  1782   002580  0E72               	movlw	low _motorR
  1783   002582  6E22               	movwf	RedMove@mR^0,c
  1784   002584  0E01               	movlw	high _motorR
  1785   002586  6E23               	movwf	(RedMove@mR+1)^0,c
  1786   002588  EC3A  F02E         	call	_RedMove	;wreg free
  1787   00258C                     
  1788                           ;main.c: 117:                 TMR0H=0;
  1789   00258C  0E00               	movlw	0
  1790   00258E  6ED4               	movwf	212,c	;volatile
  1791   002590                     
  1792                           ;main.c: 118:                 TMR0L=0;
  1793   002590  0E00               	movlw	0
  1794   002592  6ED3               	movwf	211,c	;volatile
  1795   002594                     
  1796                           ;main.c: 119:                 WayBack[move_count]=1;
  1797   002594  0EA0               	movlw	low _WayBack
  1798   002596  0101               	movlb	1	; () banked
  1799   002598  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1800   00259A  6ED9               	movwf	fsr2l,c
  1801   00259C  0E02               	movlw	high _WayBack
  1802   00259E  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1803   0025A0  6EDA               	movwf	fsr2h,c
  1804   0025A2  0E01               	movlw	1
  1805   0025A4  6EDF               	movwf	indf2,c
  1806                           
  1807                           ;main.c: 120:             }
  1808   0025A6  EF29  F014         	goto	l5791
  1809   0025AA                     l5713:
  1810                           
  1811                           ; BSR set to: 1
  1812   0025AA  0E02               	movlw	2
  1813   0025AC  19FA               	xorwf	main@prev_colour& (0+255),w,b
  1814   0025AE  11FB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1815   0025B0  A4D8               	btfss	status,2,c
  1816   0025B2  EFDD  F012         	goto	u5631
  1817   0025B6  EFDF  F012         	goto	u5630
  1818   0025BA                     u5631:
  1819   0025BA  EFF8  F012         	goto	l5723
  1820   0025BE                     u5630:
  1821   0025BE                     
  1822                           ; BSR set to: 1
  1823                           ;main.c: 122:                 OrangeMove(&motorL, &motorR);
  1824   0025BE  0E7B               	movlw	low _motorL
  1825   0025C0  6E20               	movwf	OrangeMove@mL^0,c
  1826   0025C2  0E01               	movlw	high _motorL
  1827   0025C4  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1828   0025C6  0E72               	movlw	low _motorR
  1829   0025C8  6E22               	movwf	OrangeMove@mR^0,c
  1830   0025CA  0E01               	movlw	high _motorR
  1831   0025CC  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1832   0025CE  ECD6  F02B         	call	_OrangeMove	;wreg free
  1833   0025D2                     
  1834                           ;main.c: 123:                 TMR0H=0;
  1835   0025D2  0E00               	movlw	0
  1836   0025D4  6ED4               	movwf	212,c	;volatile
  1837   0025D6                     
  1838                           ;main.c: 124:                 TMR0L=0;
  1839   0025D6  0E00               	movlw	0
  1840   0025D8  6ED3               	movwf	211,c	;volatile
  1841   0025DA                     
  1842                           ;main.c: 125:                 WayBack[move_count]=2;
  1843   0025DA  0EA0               	movlw	low _WayBack
  1844   0025DC  0101               	movlb	1	; () banked
  1845   0025DE  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1846   0025E0  6ED9               	movwf	fsr2l,c
  1847   0025E2  0E02               	movlw	high _WayBack
  1848   0025E4  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1849   0025E6  6EDA               	movwf	fsr2h,c
  1850   0025E8  0E02               	movlw	2
  1851   0025EA  6EDF               	movwf	indf2,c
  1852                           
  1853                           ;main.c: 126:             }
  1854   0025EC  EF29  F014         	goto	l5791
  1855   0025F0                     l5723:
  1856                           
  1857                           ; BSR set to: 1
  1858   0025F0  0E03               	movlw	3
  1859   0025F2  19FA               	xorwf	main@prev_colour& (0+255),w,b
  1860   0025F4  11FB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1861   0025F6  A4D8               	btfss	status,2,c
  1862   0025F8  EF00  F013         	goto	u5641
  1863   0025FC  EF02  F013         	goto	u5640
  1864   002600                     u5641:
  1865   002600  EF1B  F013         	goto	l5733
  1866   002604                     u5640:
  1867   002604                     
  1868                           ; BSR set to: 1
  1869                           ;main.c: 128:                 YellowMove(&motorL, &motorR);
  1870   002604  0E7B               	movlw	low _motorL
  1871   002606  6E20               	movwf	YellowMove@mL^0,c
  1872   002608  0E01               	movlw	high _motorL
  1873   00260A  6E21               	movwf	(YellowMove@mL+1)^0,c
  1874   00260C  0E72               	movlw	low _motorR
  1875   00260E  6E22               	movwf	YellowMove@mR^0,c
  1876   002610  0E01               	movlw	high _motorR
  1877   002612  6E23               	movwf	(YellowMove@mR+1)^0,c
  1878   002614  EC51  F02C         	call	_YellowMove	;wreg free
  1879   002618                     
  1880                           ;main.c: 129:                 TMR0H=0;
  1881   002618  0E00               	movlw	0
  1882   00261A  6ED4               	movwf	212,c	;volatile
  1883   00261C                     
  1884                           ;main.c: 130:                 TMR0L=0;
  1885   00261C  0E00               	movlw	0
  1886   00261E  6ED3               	movwf	211,c	;volatile
  1887   002620                     
  1888                           ;main.c: 131:                 WayBack[move_count]=3;
  1889   002620  0EA0               	movlw	low _WayBack
  1890   002622  0101               	movlb	1	; () banked
  1891   002624  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1892   002626  6ED9               	movwf	fsr2l,c
  1893   002628  0E02               	movlw	high _WayBack
  1894   00262A  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1895   00262C  6EDA               	movwf	fsr2h,c
  1896   00262E  0E03               	movlw	3
  1897   002630  6EDF               	movwf	indf2,c
  1898                           
  1899                           ;main.c: 132:             }
  1900   002632  EF29  F014         	goto	l5791
  1901   002636                     l5733:
  1902                           
  1903                           ; BSR set to: 1
  1904   002636  0E04               	movlw	4
  1905   002638  19FA               	xorwf	main@prev_colour& (0+255),w,b
  1906   00263A  11FB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1907   00263C  A4D8               	btfss	status,2,c
  1908   00263E  EF23  F013         	goto	u5651
  1909   002642  EF25  F013         	goto	u5650
  1910   002646                     u5651:
  1911   002646  EF3E  F013         	goto	l5743
  1912   00264A                     u5650:
  1913   00264A                     
  1914                           ; BSR set to: 1
  1915                           ;main.c: 134:                 BlueMove(&motorL, &motorR);
  1916   00264A  0E7B               	movlw	low _motorL
  1917   00264C  6E20               	movwf	BlueMove@mL^0,c
  1918   00264E  0E01               	movlw	high _motorL
  1919   002650  6E21               	movwf	(BlueMove@mL+1)^0,c
  1920   002652  0E72               	movlw	low _motorR
  1921   002654  6E22               	movwf	BlueMove@mR^0,c
  1922   002656  0E01               	movlw	high _motorR
  1923   002658  6E23               	movwf	(BlueMove@mR+1)^0,c
  1924   00265A  ECE7  F029         	call	_BlueMove	;wreg free
  1925   00265E                     
  1926                           ;main.c: 135:                 TMR0H=0;
  1927   00265E  0E00               	movlw	0
  1928   002660  6ED4               	movwf	212,c	;volatile
  1929   002662                     
  1930                           ;main.c: 136:                 TMR0L=0;
  1931   002662  0E00               	movlw	0
  1932   002664  6ED3               	movwf	211,c	;volatile
  1933   002666                     
  1934                           ;main.c: 137:                 WayBack[move_count]=4;
  1935   002666  0EA0               	movlw	low _WayBack
  1936   002668  0101               	movlb	1	; () banked
  1937   00266A  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1938   00266C  6ED9               	movwf	fsr2l,c
  1939   00266E  0E02               	movlw	high _WayBack
  1940   002670  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1941   002672  6EDA               	movwf	fsr2h,c
  1942   002674  0E04               	movlw	4
  1943   002676  6EDF               	movwf	indf2,c
  1944                           
  1945                           ;main.c: 138:             }
  1946   002678  EF29  F014         	goto	l5791
  1947   00267C                     l5743:
  1948                           
  1949                           ; BSR set to: 1
  1950   00267C  0E05               	movlw	5
  1951   00267E  19FA               	xorwf	main@prev_colour& (0+255),w,b
  1952   002680  11FB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1953   002682  A4D8               	btfss	status,2,c
  1954   002684  EF46  F013         	goto	u5661
  1955   002688  EF48  F013         	goto	u5660
  1956   00268C                     u5661:
  1957   00268C  EF61  F013         	goto	l5753
  1958   002690                     u5660:
  1959   002690                     
  1960                           ; BSR set to: 1
  1961                           ;main.c: 140:                 GreenMove(&motorL, &motorR);
  1962   002690  0E7B               	movlw	low _motorL
  1963   002692  6E20               	movwf	GreenMove@mL^0,c
  1964   002694  0E01               	movlw	high _motorL
  1965   002696  6E21               	movwf	(GreenMove@mL+1)^0,c
  1966   002698  0E72               	movlw	low _motorR
  1967   00269A  6E22               	movwf	GreenMove@mR^0,c
  1968   00269C  0E01               	movlw	high _motorR
  1969   00269E  6E23               	movwf	(GreenMove@mR+1)^0,c
  1970   0026A0  EC59  F02E         	call	_GreenMove	;wreg free
  1971   0026A4                     
  1972                           ;main.c: 141:                 TMR0H=0;
  1973   0026A4  0E00               	movlw	0
  1974   0026A6  6ED4               	movwf	212,c	;volatile
  1975   0026A8                     
  1976                           ;main.c: 142:                 TMR0L=0;
  1977   0026A8  0E00               	movlw	0
  1978   0026AA  6ED3               	movwf	211,c	;volatile
  1979   0026AC                     
  1980                           ;main.c: 143:                 WayBack[move_count]=5;
  1981   0026AC  0EA0               	movlw	low _WayBack
  1982   0026AE  0101               	movlb	1	; () banked
  1983   0026B0  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1984   0026B2  6ED9               	movwf	fsr2l,c
  1985   0026B4  0E02               	movlw	high _WayBack
  1986   0026B6  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1987   0026B8  6EDA               	movwf	fsr2h,c
  1988   0026BA  0E05               	movlw	5
  1989   0026BC  6EDF               	movwf	indf2,c
  1990                           
  1991                           ;main.c: 144:             }
  1992   0026BE  EF29  F014         	goto	l5791
  1993   0026C2                     l5753:
  1994                           
  1995                           ; BSR set to: 1
  1996   0026C2  0E06               	movlw	6
  1997   0026C4  19FA               	xorwf	main@prev_colour& (0+255),w,b
  1998   0026C6  11FB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1999   0026C8  A4D8               	btfss	status,2,c
  2000   0026CA  EF69  F013         	goto	u5671
  2001   0026CE  EF6B  F013         	goto	u5670
  2002   0026D2                     u5671:
  2003   0026D2  EF84  F013         	goto	l5763
  2004   0026D6                     u5670:
  2005   0026D6                     
  2006                           ; BSR set to: 1
  2007                           ;main.c: 146:                 LightBlueMove(&motorL, &motorR);
  2008   0026D6  0E7B               	movlw	low _motorL
  2009   0026D8  6E20               	movwf	LightBlueMove@mL^0,c
  2010   0026DA  0E01               	movlw	high _motorL
  2011   0026DC  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  2012   0026DE  0E72               	movlw	low _motorR
  2013   0026E0  6E22               	movwf	LightBlueMove@mR^0,c
  2014   0026E2  0E01               	movlw	high _motorR
  2015   0026E4  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  2016   0026E6  ECFF  F02B         	call	_LightBlueMove	;wreg free
  2017   0026EA                     
  2018                           ;main.c: 147:                 TMR0H=0;
  2019   0026EA  0E00               	movlw	0
  2020   0026EC  6ED4               	movwf	212,c	;volatile
  2021   0026EE                     
  2022                           ;main.c: 148:                 TMR0L=0;
  2023   0026EE  0E00               	movlw	0
  2024   0026F0  6ED3               	movwf	211,c	;volatile
  2025   0026F2                     
  2026                           ;main.c: 149:                 WayBack[move_count]=6;
  2027   0026F2  0EA0               	movlw	low _WayBack
  2028   0026F4  0101               	movlb	1	; () banked
  2029   0026F6  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2030   0026F8  6ED9               	movwf	fsr2l,c
  2031   0026FA  0E02               	movlw	high _WayBack
  2032   0026FC  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2033   0026FE  6EDA               	movwf	fsr2h,c
  2034   002700  0E06               	movlw	6
  2035   002702  6EDF               	movwf	indf2,c
  2036                           
  2037                           ;main.c: 150:             }
  2038   002704  EF29  F014         	goto	l5791
  2039   002708                     l5763:
  2040                           
  2041                           ; BSR set to: 1
  2042   002708  0E07               	movlw	7
  2043   00270A  19FA               	xorwf	main@prev_colour& (0+255),w,b
  2044   00270C  11FB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2045   00270E  A4D8               	btfss	status,2,c
  2046   002710  EF8C  F013         	goto	u5681
  2047   002714  EF8E  F013         	goto	u5680
  2048   002718                     u5681:
  2049   002718  EFA7  F013         	goto	l5773
  2050   00271C                     u5680:
  2051   00271C                     
  2052                           ; BSR set to: 1
  2053                           ;main.c: 152:                 PinkMove(&motorL, &motorR);
  2054   00271C  0E7B               	movlw	low _motorL
  2055   00271E  6E20               	movwf	PinkMove@mL^0,c
  2056   002720  0E01               	movlw	high _motorL
  2057   002722  6E21               	movwf	(PinkMove@mL+1)^0,c
  2058   002724  0E72               	movlw	low _motorR
  2059   002726  6E22               	movwf	PinkMove@mR^0,c
  2060   002728  0E01               	movlw	high _motorR
  2061   00272A  6E23               	movwf	(PinkMove@mR+1)^0,c
  2062   00272C  EC7A  F02C         	call	_PinkMove	;wreg free
  2063   002730                     
  2064                           ;main.c: 153:                 TMR0H=0;
  2065   002730  0E00               	movlw	0
  2066   002732  6ED4               	movwf	212,c	;volatile
  2067   002734                     
  2068                           ;main.c: 154:                 TMR0L=0;
  2069   002734  0E00               	movlw	0
  2070   002736  6ED3               	movwf	211,c	;volatile
  2071   002738                     
  2072                           ;main.c: 155:                 WayBack[move_count]=7;
  2073   002738  0EA0               	movlw	low _WayBack
  2074   00273A  0101               	movlb	1	; () banked
  2075   00273C  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2076   00273E  6ED9               	movwf	fsr2l,c
  2077   002740  0E02               	movlw	high _WayBack
  2078   002742  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2079   002744  6EDA               	movwf	fsr2h,c
  2080   002746  0E07               	movlw	7
  2081   002748  6EDF               	movwf	indf2,c
  2082                           
  2083                           ;main.c: 156:             }
  2084   00274A  EF29  F014         	goto	l5791
  2085   00274E                     l5773:
  2086                           
  2087                           ; BSR set to: 1
  2088   00274E  0E0A               	movlw	10
  2089   002750  19FA               	xorwf	main@prev_colour& (0+255),w,b
  2090   002752  11FB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2091   002754  A4D8               	btfss	status,2,c
  2092   002756  EFAF  F013         	goto	u5691
  2093   00275A  EFB1  F013         	goto	u5690
  2094   00275E                     u5691:
  2095   00275E  EFBD  F013         	goto	l5777
  2096   002762                     u5690:
  2097   002762                     
  2098                           ; BSR set to: 1
  2099                           ;main.c: 158:                 RetryMove(&motorL, &motorR);
  2100   002762  0E7B               	movlw	low _motorL
  2101   002764  6E20               	movwf	RetryMove@mL^0,c
  2102   002766  0E01               	movlw	high _motorL
  2103   002768  6E21               	movwf	(RetryMove@mL+1)^0,c
  2104   00276A  0E72               	movlw	low _motorR
  2105   00276C  6E22               	movwf	RetryMove@mR^0,c
  2106   00276E  0E01               	movlw	high _motorR
  2107   002770  6E23               	movwf	(RetryMove@mR+1)^0,c
  2108   002772  ECDD  F02E         	call	_RetryMove	;wreg free
  2109                           
  2110                           ;main.c: 159:             }
  2111   002776  EF29  F014         	goto	l5791
  2112   00277A                     l5777:
  2113                           
  2114                           ; BSR set to: 1
  2115   00277A  51FA               	movf	main@prev_colour& (0+255),w,b
  2116   00277C  11FB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2117   00277E  A4D8               	btfss	status,2,c
  2118   002780  EFC4  F013         	goto	u5701
  2119   002784  EFC6  F013         	goto	u5700
  2120   002788                     u5701:
  2121   002788  EFEC  F013         	goto	l422
  2122   00278C                     u5700:
  2123   00278C                     
  2124                           ; BSR set to: 1
  2125                           ;main.c: 161:                 BlueMove(&motorL, &motorR);
  2126   00278C  0E7B               	movlw	low _motorL
  2127   00278E  6E20               	movwf	BlueMove@mL^0,c
  2128   002790  0E01               	movlw	high _motorL
  2129   002792  6E21               	movwf	(BlueMove@mL+1)^0,c
  2130   002794  0E72               	movlw	low _motorR
  2131   002796  6E22               	movwf	BlueMove@mR^0,c
  2132   002798  0E01               	movlw	high _motorR
  2133   00279A  6E23               	movwf	(BlueMove@mR+1)^0,c
  2134   00279C  ECE7  F029         	call	_BlueMove	;wreg free
  2135   0027A0                     
  2136                           ;main.c: 162:                 T0CON0bits.T0EN=0;
  2137   0027A0  9ED5               	bcf	213,7,c	;volatile
  2138                           
  2139                           ;main.c: 163:                 go_Home(WayBack, Time_forward);
  2140   0027A2  0EA0               	movlw	low _WayBack
  2141   0027A4  6E24               	movwf	go_Home@WayBack^0,c
  2142   0027A6  0E02               	movlw	high _WayBack
  2143   0027A8  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2144   0027AA  0E3C               	movlw	low _Time_forward
  2145   0027AC  6E26               	movwf	go_Home@Time_forward^0,c
  2146   0027AE  0E02               	movlw	high _Time_forward
  2147   0027B0  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2148   0027B2  EC91  F01D         	call	_go_Home	;wreg free
  2149                           
  2150                           ;main.c: 164:                 stop(&motorL, &motorR);
  2151   0027B6  0E7B               	movlw	low _motorL
  2152   0027B8  6E14               	movwf	stop@mL^0,c
  2153   0027BA  0E01               	movlw	high _motorL
  2154   0027BC  6E15               	movwf	(stop@mL+1)^0,c
  2155   0027BE  0E72               	movlw	low _motorR
  2156   0027C0  6E16               	movwf	stop@mR^0,c
  2157   0027C2  0E01               	movlw	high _motorR
  2158   0027C4  6E17               	movwf	(stop@mR+1)^0,c
  2159   0027C6  ECFE  F028         	call	_stop	;wreg free
  2160   0027CA                     
  2161                           ;main.c: 165:                 run_flag=0;
  2162   0027CA  0E00               	movlw	0
  2163   0027CC  0101               	movlb	1	; () banked
  2164   0027CE  6FF5               	movwf	(main@run_flag+1)& (0+255),b
  2165   0027D0  0E00               	movlw	0
  2166   0027D2  6FF4               	movwf	main@run_flag& (0+255),b
  2167   0027D4  EF29  F014         	goto	l5791
  2168   0027D8                     l422:
  2169                           
  2170                           ; BSR set to: 1
  2171   0027D8  EF29  F014         	goto	l5791
  2172   0027DC                     l5785:
  2173                           
  2174                           ; BSR set to: 1
  2175                           ;main.c: 171:             int colour = Colour_decider(&vals, &rel);
  2176   0027DC  0E84               	movlw	low _vals
  2177   0027DE  6E4B               	movwf	Colour_decider@vals^0,c
  2178   0027E0  0E01               	movlw	high _vals
  2179   0027E2  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  2180   0027E4  0E66               	movlw	low _rel
  2181   0027E6  6E4D               	movwf	Colour_decider@rel^0,c
  2182   0027E8  0E01               	movlw	high _rel
  2183   0027EA  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  2184   0027EC  EC29  F007         	call	_Colour_decider	;wreg free
  2185   0027F0  C04B  F1F2         	movff	?_Colour_decider,main@colour_1191
  2186   0027F4  C04C  F1F3         	movff	?_Colour_decider+1,main@colour_1191+1
  2187   0027F8                     
  2188                           ;main.c: 172:             sprintf(buf,"red=%f green=%f blue=%f lum=%d  \r\n",rel.R, rel.
      +                          G,rel.B,vals.L);
  2189   0027F8  0E8C               	movlw	low main@buf
  2190   0027FA  0100               	movlb	0	; () banked
  2191   0027FC  6FB0               	movwf	sprintf@s& (0+255),b
  2192   0027FE  0E01               	movlw	high main@buf
  2193   002800  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2194   002802  0E25               	movlw	low STR_2
  2195   002804  6FB2               	movwf	sprintf@fmt& (0+255),b
  2196   002806  0E0E               	movlw	high STR_2
  2197   002808  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2198   00280A  C166  F0B4         	movff	_rel,?_sprintf+4
  2199   00280E  C167  F0B5         	movff	_rel+1,?_sprintf+5
  2200   002812  C168  F0B6         	movff	_rel+2,?_sprintf+6
  2201   002816  C169  F0B7         	movff	_rel+3,?_sprintf+7
  2202   00281A  C16A  F0B8         	movff	_rel+4,?_sprintf+8
  2203   00281E  C16B  F0B9         	movff	_rel+5,?_sprintf+9
  2204   002822  C16C  F0BA         	movff	_rel+6,?_sprintf+10
  2205   002826  C16D  F0BB         	movff	_rel+7,?_sprintf+11
  2206   00282A  C16E  F0BC         	movff	_rel+8,?_sprintf+12
  2207   00282E  C16F  F0BD         	movff	_rel+9,?_sprintf+13
  2208   002832  C170  F0BE         	movff	_rel+10,?_sprintf+14
  2209   002836  C171  F0BF         	movff	_rel+11,?_sprintf+15
  2210   00283A  C18A  F0C0         	movff	_vals+6,?_sprintf+16
  2211   00283E  C18B  F0C1         	movff	_vals+7,?_sprintf+17
  2212   002842  ECAD  F02B         	call	_sprintf	;wreg free
  2213   002846                     
  2214                           ;main.c: 173:             sendStringSerial4(buf);
  2215   002846  0E8C               	movlw	low main@buf
  2216   002848  6E02               	movwf	sendStringSerial4@string^0,c
  2217   00284A  0E01               	movlw	high main@buf
  2218   00284C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2219   00284E  ECB0  F02E         	call	_sendStringSerial4	;wreg free
  2220   002852                     l5791:
  2221                           
  2222                           ;main.c: 69:     while (run_flag)
  2223   002852  0101               	movlb	1	; () banked
  2224   002854  51F4               	movf	main@run_flag& (0+255),w,b
  2225   002856  11F5               	iorwf	(main@run_flag+1)& (0+255),w,b
  2226   002858  A4D8               	btfss	status,2,c
  2227   00285A  EF31  F014         	goto	u5711
  2228   00285E  EF33  F014         	goto	u5710
  2229   002862                     u5711:
  2230   002862  EFFA  F011         	goto	l5663
  2231   002866                     u5710:
  2232   002866                     
  2233                           ; BSR set to: 1
  2234   002866  EF07  F000         	goto	start
  2235   00286A                     __end_of_main:
  2236                           	callstack 0
  2237                           
  2238 ;; *************** function _sprintf *****************
  2239 ;; Defined at:
  2240 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2243 ;;		 -> main@buf(100), 
  2244 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2245 ;;		 -> STR_2(35), STR_1(36), 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  f              11  100[BANK0 ] struct _IO_FILE
  2248 ;;  ap              2   98[BANK0 ] PTR void [1]
  2249 ;;		 -> ?_sprintf(2), 
  2250 ;;  ret             2    0        int 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  2   80[BANK0 ] int 
  2253 ;; Registers used:
  2254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2260 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2261 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2263 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2264 ;;Total ram usage:       31 bytes
  2265 ;; Hardware stack levels used: 1
  2266 ;; Hardware stack levels required when called: 8
  2267 ;; This function calls:
  2268 ;;		_vfprintf
  2269 ;; This function is called by:
  2270 ;;		_main
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text1
  2275   00575A                     __ptext1:
  2276                           	callstack 0
  2277   00575A                     _sprintf:
  2278                           	callstack 22
  2279   00575A  0EB4               	movlw	low (?_sprintf+4)
  2280   00575C  0100               	movlb	0	; () banked
  2281   00575E  6FC2               	movwf	sprintf@ap& (0+255),b
  2282   005760  0E00               	movlw	high (?_sprintf+4)
  2283   005762  6FC3               	movwf	(sprintf@ap+1)& (0+255),b
  2284   005764  C0B0  F0C4         	movff	sprintf@s,sprintf@f
  2285   005768  C0B1  F0C5         	movff	sprintf@s+1,sprintf@f+1
  2286   00576C                     
  2287                           ; BSR set to: 0
  2288   00576C  0E00               	movlw	0
  2289   00576E  6FC8               	movwf	(sprintf@f+4)& (0+255),b
  2290   005770  0E00               	movlw	0
  2291   005772  6FC7               	movwf	(sprintf@f+3)& (0+255),b
  2292   005774                     
  2293                           ; BSR set to: 0
  2294   005774  0E00               	movlw	0
  2295   005776  6FCE               	movwf	(sprintf@f+10)& (0+255),b
  2296   005778  0E00               	movlw	0
  2297   00577A  6FCD               	movwf	(sprintf@f+9)& (0+255),b
  2298   00577C                     
  2299                           ; BSR set to: 0
  2300   00577C  0EC4               	movlw	low sprintf@f
  2301   00577E  6FA8               	movwf	vfprintf@fp& (0+255),b
  2302   005780  0E00               	movlw	high sprintf@f
  2303   005782  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2304   005784  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2305   005788  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2306   00578C  0EC2               	movlw	low sprintf@ap
  2307   00578E  6FAC               	movwf	vfprintf@ap& (0+255),b
  2308   005790  0E00               	movlw	high sprintf@ap
  2309   005792  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2310   005794  EC82  F02B         	call	_vfprintf	;wreg free
  2311   005798  0100               	movlb	0	; () banked
  2312   00579A  51C7               	movf	(sprintf@f+3)& (0+255),w,b
  2313   00579C  25B0               	addwf	sprintf@s& (0+255),w,b
  2314   00579E  6ED9               	movwf	fsr2l,c
  2315   0057A0  51C8               	movf	(sprintf@f+4)& (0+255),w,b
  2316   0057A2  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2317   0057A4  6EDA               	movwf	fsr2h,c
  2318   0057A6  0E00               	movlw	0
  2319   0057A8  6EDF               	movwf	indf2,c
  2320   0057AA                     
  2321                           ; BSR set to: 0
  2322   0057AA  0012               	return		;funcret
  2323   0057AC                     __end_of_sprintf:
  2324                           	callstack 0
  2325                           
  2326 ;; *************** function _vfprintf *****************
  2327 ;; Defined at:
  2328 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2331 ;;		 -> sprintf@f(11), 
  2332 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2333 ;;		 -> STR_2(35), STR_1(36), 
  2334 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2335 ;;		 -> sprintf@ap(2), 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2338 ;;		 -> STR_2(35), STR_1(36), 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  2   72[BANK0 ] int 
  2341 ;; Registers used:
  2342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2348 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2349 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2351 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2352 ;;Total ram usage:        8 bytes
  2353 ;; Hardware stack levels used: 1
  2354 ;; Hardware stack levels required when called: 7
  2355 ;; This function calls:
  2356 ;;		_vfpfcnvrt
  2357 ;; This function is called by:
  2358 ;;		_sprintf
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text2
  2363   005704                     __ptext2:
  2364                           	callstack 0
  2365   005704                     _vfprintf:
  2366                           	callstack 22
  2367   005704                     
  2368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2369   005704  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2370   005708  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2371                           
  2372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2373   00570C  EF97  F02B         	goto	l5181
  2374   005710                     l5179:
  2375                           
  2376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2377   005710  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2378   005714  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2379   005718  0EAE               	movlw	low vfprintf@cfmt
  2380   00571A  0100               	movlb	0	; () banked
  2381   00571C  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2382   00571E  0E00               	movlw	high vfprintf@cfmt
  2383   005720  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2384   005722  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2385   005726  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2386   00572A  EC0E  F01C         	call	_vfpfcnvrt	;wreg free
  2387   00572E                     l5181:
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2390   00572E  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2391   005732  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2392   005736                     	if	0	;tblptru may be non-zero
  2393   005736                     	endif
  2394   005736                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2395   005736  0E00               	movlw	low (__mediumconst shr (0+16))
  2396   005738  6EF8               	movwf	tblptru,c
  2397   00573A                     	endif
  2398   00573A  0008               	tblrd		*
  2399   00573C  50F5               	movf	tablat,w,c
  2400   00573E  0900               	iorlw	0
  2401   005740  A4D8               	btfss	status,2,c
  2402   005742  EFA5  F02B         	goto	u5071
  2403   005746  EFA7  F02B         	goto	u5070
  2404   00574A                     u5071:
  2405   00574A  EF88  F02B         	goto	l5179
  2406   00574E                     u5070:
  2407   00574E                     
  2408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2409   00574E  0E00               	movlw	0
  2410   005750  0100               	movlb	0	; () banked
  2411   005752  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2412   005754  0E00               	movlw	0
  2413   005756  6FA8               	movwf	?_vfprintf& (0+255),b
  2414   005758                     
  2415                           ; BSR set to: 0
  2416   005758  0012               	return		;funcret
  2417   00575A                     __end_of_vfprintf:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function _vfpfcnvrt *****************
  2421 ;; Defined at:
  2422 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2425 ;;		 -> sprintf@f(11), 
  2426 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2427 ;;		 -> vfprintf@cfmt(2), 
  2428 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2429 ;;		 -> sprintf@ap(2), 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  convarg         8   61[BANK0 ] struct .
  2432 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2433 ;;		 -> STR_2(35), STR_1(36), 
  2434 ;;  i               2    0        int 
  2435 ;;  done            2    0        int 
  2436 ;;  c               1   69[BANK0 ] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2446 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2447 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2448 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2449 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2450 ;;Total ram usage:       19 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 6
  2453 ;; This function calls:
  2454 ;;		_dtoa
  2455 ;;		_efgtoa
  2456 ;;		_fputc
  2457 ;; This function is called by:
  2458 ;;		_vfprintf
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text3
  2463   00381C                     __ptext3:
  2464                           	callstack 0
  2465   00381C                     _vfpfcnvrt:
  2466                           	callstack 22
  2467   00381C                     
  2468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2469   00381C  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2470   003820  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2471   003824  CFDE FFF6          	movff	postinc2,tblptrl
  2472   003828  CFDD FFF7          	movff	postdec2,tblptrh
  2473   00382C                     	if	0	;tblptru may be non-zero
  2474   00382C                     	endif
  2475   00382C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2476   00382C  0E00               	movlw	low (__mediumconst shr (0+16))
  2477   00382E  6EF8               	movwf	tblptru,c
  2478   003830                     	endif
  2479   003830  0008               	tblrd		*
  2480   003832  50F5               	movf	tablat,w,c
  2481   003834  0A25               	xorlw	37
  2482   003836  A4D8               	btfss	status,2,c
  2483   003838  EF20  F01C         	goto	u4901
  2484   00383C  EF22  F01C         	goto	u4900
  2485   003840                     u4901:
  2486   003840  EF7A  F01D         	goto	l5017
  2487   003844                     u4900:
  2488   003844                     
  2489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2490   003844  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2491   003848  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2492   00384C  2ADE               	incf	postinc2,f,c
  2493   00384E  0E00               	movlw	0
  2494   003850  22DD               	addwfc	postdec2,f,c
  2495   003852                     
  2496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2497   003852  0E00               	movlw	0
  2498   003854  0100               	movlb	0	; () banked
  2499   003856  6FE6               	movwf	(_width+1)& (0+255),b
  2500   003858  0E00               	movlw	0
  2501   00385A  6FE5               	movwf	_width& (0+255),b
  2502   00385C  C0E5  F0EB         	movff	_width,_flags
  2503   003860                     
  2504                           ; BSR set to: 0
  2505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2506   003860  69E7               	setf	_prec& (0+255),b
  2507   003862  69E8               	setf	(_prec+1)& (0+255),b
  2508   003864                     
  2509                           ; BSR set to: 0
  2510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2511   003864  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2512   003868  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2513   00386C  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2514   003870  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2515   003874                     
  2516                           ; BSR set to: 0
  2517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2518   003874  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2519   003878  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2520   00387C                     	if	0	;tblptru may be non-zero
  2521   00387C                     	endif
  2522   00387C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2523   00387C  0E00               	movlw	low (__mediumconst shr (0+16))
  2524   00387E  6EF8               	movwf	tblptru,c
  2525   003880                     	endif
  2526   003880  0008               	tblrd		*
  2527   003882  50F5               	movf	tablat,w,c
  2528   003884  0A64               	xorlw	100
  2529   003886  B4D8               	btfsc	status,2,c
  2530   003888  EF48  F01C         	goto	u4911
  2531   00388C  EF4A  F01C         	goto	u4910
  2532   003890                     u4911:
  2533   003890  EF5A  F01C         	goto	l4973
  2534   003894                     u4910:
  2535   003894                     
  2536                           ; BSR set to: 0
  2537   003894  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2538   003898  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2539   00389C                     	if	0	;tblptru may be non-zero
  2540   00389C                     	endif
  2541   00389C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2542   00389C  0E00               	movlw	low (__mediumconst shr (0+16))
  2543   00389E  6EF8               	movwf	tblptru,c
  2544   0038A0                     	endif
  2545   0038A0  0008               	tblrd		*
  2546   0038A2  50F5               	movf	tablat,w,c
  2547   0038A4  0A69               	xorlw	105
  2548   0038A6  A4D8               	btfss	status,2,c
  2549   0038A8  EF58  F01C         	goto	u4921
  2550   0038AC  EF5A  F01C         	goto	u4920
  2551   0038B0                     u4921:
  2552   0038B0  EF9D  F01C         	goto	l4979
  2553   0038B4                     u4920:
  2554   0038B4                     l4973:
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2558   0038B4  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2559   0038B8  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2560   0038BC  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2561   0038C0  0E02               	movlw	2
  2562   0038C2  26DE               	addwf	postinc2,f,c
  2563   0038C4  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2564   0038C8  0E00               	movlw	0
  2565   0038CA  22DD               	addwfc	postdec2,f,c
  2566   0038CC  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2567   0038D0  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2568   0038D4  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2569   0038D8  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2570   0038DC  0E00               	movlw	0
  2571   0038DE  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2572   0038E0  0EFF               	movlw	-1
  2573   0038E2  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2574   0038E4  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2575   0038E6  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2576   0038E8  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2577   0038EA  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2578   0038EC  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2581   0038EE  0E01               	movlw	1
  2582   0038F0  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2583   0038F2  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2584   0038F4  0E00               	movlw	0
  2585   0038F6  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2586   0038F8  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2587   0038FA  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2588   0038FE  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2589   003902  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2590   003906  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2591   00390A                     
  2592                           ; BSR set to: 0
  2593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2594   00390A  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2595   00390E  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2596   003912  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2597   003916  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2598   00391A  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2599   00391E  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2600   003922  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2601   003926  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2602   00392A  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2603   00392E  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2604   003932  ECE7  F01E         	call	_dtoa	;wreg free
  2605   003936  EF90  F01D         	goto	l1470
  2606   00393A                     l4979:
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2610   00393A  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2611   00393E  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2612   003942  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2613   003946  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2614   00394A                     
  2615                           ; BSR set to: 0
  2616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2617   00394A  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2618   00394E  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2619   003952                     	if	0	;tblptru may be non-zero
  2620   003952                     	endif
  2621   003952                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2622   003952  0E00               	movlw	low (__mediumconst shr (0+16))
  2623   003954  6EF8               	movwf	tblptru,c
  2624   003956                     	endif
  2625   003956  0008               	tblrd		*
  2626   003958  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2629   00395C  EFBC  F01C         	goto	l4991
  2630   003960                     l4983:
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2634   003960  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2635   003962  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2636                           
  2637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2638   003964  EFD5  F01C         	goto	l4993
  2639   003968                     l4985:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2643   003968  0E6C               	movlw	108
  2644   00396A  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2647   00396C  EFD5  F01C         	goto	l4993
  2648   003970                     l4987:
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2652   003970  0E00               	movlw	0
  2653   003972  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2656   003974  EFD5  F01C         	goto	l4993
  2657   003978                     l4991:
  2658                           
  2659                           ; BSR set to: 0
  2660   003978  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2661   00397A  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2662   00397C  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2663                           
  2664                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2665                           ; Switch size 1, requested type "simple"
  2666                           ; Number of cases is 1, Range of values is 0 to 0
  2667                           ; switch strategies available:
  2668                           ; Name         Instructions Cycles
  2669                           ; simple_byte            4     3 (average)
  2670                           ;	Chosen strategy is simple_byte
  2671   00397E  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2672   003980  0A00               	xorlw	0	; case 0
  2673   003982  B4D8               	btfsc	status,2,c
  2674   003984  EFC6  F01C         	goto	l5927
  2675   003988  EFB8  F01C         	goto	l4987
  2676   00398C                     l5927:
  2677                           
  2678                           ; BSR set to: 0
  2679                           ; Switch size 1, requested type "simple"
  2680                           ; Number of cases is 3, Range of values is 76 to 108
  2681                           ; switch strategies available:
  2682                           ; Name         Instructions Cycles
  2683                           ; simple_byte           10     6 (average)
  2684                           ;	Chosen strategy is simple_byte
  2685   00398C  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2686   00398E  0A4C               	xorlw	76	; case 76
  2687   003990  B4D8               	btfsc	status,2,c
  2688   003992  EFB0  F01C         	goto	l4983
  2689   003996  0A2A               	xorlw	42	; case 102
  2690   003998  B4D8               	btfsc	status,2,c
  2691   00399A  EFB4  F01C         	goto	l4985
  2692   00399E  0A0A               	xorlw	10	; case 108
  2693   0039A0  B4D8               	btfsc	status,2,c
  2694   0039A2  EFB0  F01C         	goto	l4983
  2695   0039A6  EFB8  F01C         	goto	l4987
  2696   0039AA                     l4993:
  2697                           
  2698                           ; BSR set to: 0
  2699   0039AA  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2700   0039AE  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2701   0039B2                     	if	0	;tblptru may be non-zero
  2702   0039B2                     	endif
  2703   0039B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2704   0039B2  0E00               	movlw	low (__mediumconst shr (0+16))
  2705   0039B4  6EF8               	movwf	tblptru,c
  2706   0039B6                     	endif
  2707   0039B6  0008               	tblrd		*
  2708   0039B8  50F5               	movf	tablat,w,c
  2709   0039BA  0A66               	xorlw	102
  2710   0039BC  A4D8               	btfss	status,2,c
  2711   0039BE  EFE3  F01C         	goto	u4931
  2712   0039C2  EFE5  F01C         	goto	u4930
  2713   0039C6                     u4931:
  2714   0039C6  EF71  F01D         	goto	l5013
  2715   0039CA                     u4930:
  2716   0039CA  EF1B  F01D         	goto	l5001
  2717   0039CE                     l4995:
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2721   0039CE  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2722   0039D2  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2723   0039D6  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2724   0039DA  0E04               	movlw	4
  2725   0039DC  26DE               	addwf	postinc2,f,c
  2726   0039DE  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2727   0039E2  0E00               	movlw	0
  2728   0039E4  22DD               	addwfc	postdec2,f,c
  2729   0039E6  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2730   0039EA  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2731   0039EE  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2732   0039F2  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2733   0039F6  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2734   0039FA  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2737   0039FE  EF30  F01D         	goto	l5003
  2738   003A02                     l4997:
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2742   003A02  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2743   003A06  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2744   003A0A  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2745   003A0E  0E04               	movlw	4
  2746   003A10  26DE               	addwf	postinc2,f,c
  2747   003A12  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2748   003A16  0E00               	movlw	0
  2749   003A18  22DD               	addwfc	postdec2,f,c
  2750   003A1A  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2751   003A1E  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2752   003A22  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2753   003A26  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2754   003A2A  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2755   003A2E  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2758   003A32  EF30  F01D         	goto	l5003
  2759   003A36                     l5001:
  2760                           
  2761                           ; BSR set to: 0
  2762   003A36  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2763   003A38  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2764   003A3A  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2765                           
  2766                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2767                           ; Switch size 1, requested type "simple"
  2768                           ; Number of cases is 1, Range of values is 0 to 0
  2769                           ; switch strategies available:
  2770                           ; Name         Instructions Cycles
  2771                           ; simple_byte            4     3 (average)
  2772                           ;	Chosen strategy is simple_byte
  2773   003A3C  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2774   003A3E  0A00               	xorlw	0	; case 0
  2775   003A40  B4D8               	btfsc	status,2,c
  2776   003A42  EF25  F01D         	goto	l5929
  2777   003A46  EF30  F01D         	goto	l5003
  2778   003A4A                     l5929:
  2779                           
  2780                           ; BSR set to: 0
  2781                           ; Switch size 1, requested type "simple"
  2782                           ; Number of cases is 2, Range of values is 76 to 108
  2783                           ; switch strategies available:
  2784                           ; Name         Instructions Cycles
  2785                           ; simple_byte            7     4 (average)
  2786                           ;	Chosen strategy is simple_byte
  2787   003A4A  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2788   003A4C  0A4C               	xorlw	76	; case 76
  2789   003A4E  B4D8               	btfsc	status,2,c
  2790   003A50  EF01  F01D         	goto	l4997
  2791   003A54  0A20               	xorlw	32	; case 108
  2792   003A56  B4D8               	btfsc	status,2,c
  2793   003A58  EFE7  F01C         	goto	l4995
  2794   003A5C  EF30  F01D         	goto	l5003
  2795   003A60                     l5003:
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2799   003A60  0E01               	movlw	1
  2800   003A62  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2801   003A64  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2802   003A66  0E00               	movlw	0
  2803   003A68  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2804   003A6A  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2805   003A6C  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2806   003A70  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2807   003A74  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2808   003A78  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2811   003A7C  EF59  F01D         	goto	l5011
  2812   003A80                     l5005:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2816   003A80  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2817   003A84  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2818   003A88  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  2819   003A8C  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2820   003A90  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2821   003A94  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2822   003A98  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2823   003A9C  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2824   003AA0                     	if	0	;tblptru may be non-zero
  2825   003AA0                     	endif
  2826   003AA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2827   003AA0  0E00               	movlw	low (__mediumconst shr (0+16))
  2828   003AA2  6EF8               	movwf	tblptru,c
  2829   003AA4                     	endif
  2830   003AA4  0008               	tblrd		*
  2831   003AA6  CFF5 F066          	movff	tablat,efgtoa@c
  2832   003AAA  EC97  F00C         	call	_efgtoa	;wreg free
  2833   003AAE  EF90  F01D         	goto	l1470
  2834   003AB2                     l5011:
  2835                           
  2836                           ; BSR set to: 0
  2837   003AB2  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2838   003AB6  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2839   003ABA                     	if	0	;tblptru may be non-zero
  2840   003ABA                     	endif
  2841   003ABA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2842   003ABA  0E00               	movlw	low (__mediumconst shr (0+16))
  2843   003ABC  6EF8               	movwf	tblptru,c
  2844   003ABE                     	endif
  2845   003ABE  0008               	tblrd		*
  2846   003AC0  50F5               	movf	tablat,w,c
  2847   003AC2  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2848   003AC4  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2849                           
  2850                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2851                           ; Switch size 1, requested type "simple"
  2852                           ; Number of cases is 1, Range of values is 0 to 0
  2853                           ; switch strategies available:
  2854                           ; Name         Instructions Cycles
  2855                           ; simple_byte            4     3 (average)
  2856                           ;	Chosen strategy is simple_byte
  2857   003AC6  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2858   003AC8  0A00               	xorlw	0	; case 0
  2859   003ACA  B4D8               	btfsc	status,2,c
  2860   003ACC  EF6A  F01D         	goto	l5931
  2861   003AD0  EF71  F01D         	goto	l5013
  2862   003AD4                     l5931:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ; Switch size 1, requested type "simple"
  2866                           ; Number of cases is 1, Range of values is 102 to 102
  2867                           ; switch strategies available:
  2868                           ; Name         Instructions Cycles
  2869                           ; simple_byte            4     3 (average)
  2870                           ;	Chosen strategy is simple_byte
  2871   003AD4  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2872   003AD6  0A66               	xorlw	102	; case 102
  2873   003AD8  B4D8               	btfsc	status,2,c
  2874   003ADA  EF40  F01D         	goto	l5005
  2875   003ADE  EF71  F01D         	goto	l5013
  2876   003AE2                     l5013:
  2877                           
  2878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2879   003AE2  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2880   003AE6  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2881   003AEA  2ADE               	incf	postinc2,f,c
  2882   003AEC  0E00               	movlw	0
  2883   003AEE  22DD               	addwfc	postdec2,f,c
  2884   003AF0  EF90  F01D         	goto	l1470
  2885   003AF4                     l5017:
  2886                           
  2887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2888   003AF4  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2889   003AF8  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2890   003AFC  CFDE FFF6          	movff	postinc2,tblptrl
  2891   003B00  CFDD FFF7          	movff	postdec2,tblptrh
  2892   003B04                     	if	0	;tblptru may be non-zero
  2893   003B04                     	endif
  2894   003B04                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2895   003B04  0E00               	movlw	low (__mediumconst shr (0+16))
  2896   003B06  6EF8               	movwf	tblptru,c
  2897   003B08                     	endif
  2898   003B08  0008               	tblrd		*
  2899   003B0A  50F5               	movf	tablat,w,c
  2900   003B0C  6E01               	movwf	fputc@c^0,c
  2901   003B0E  6A02               	clrf	(fputc@c+1)^0,c
  2902   003B10  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2903   003B14  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2904   003B18  ECB9  F025         	call	_fputc	;wreg free
  2905   003B1C  EF71  F01D         	goto	l5013
  2906   003B20                     l1470:
  2907   003B20  0012               	return		;funcret
  2908   003B22                     __end_of_vfpfcnvrt:
  2909                           	callstack 0
  2910                           
  2911 ;; *************** function _efgtoa *****************
  2912 ;; Defined at:
  2913 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2916 ;;		 -> sprintf@f(11), 
  2917 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2918 ;;  c               1    6[BANK0 ] unsigned char 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  u               4   49[BANK0 ] struct flui
  2921 ;;  g               4   45[BANK0 ] struct flui
  2922 ;;  l               4   38[BANK0 ] struct flui
  2923 ;;  h               4   34[BANK0 ] struct flui
  2924 ;;  ou              4   28[BANK0 ] struct flui
  2925 ;;  n               2   43[BANK0 ] int 
  2926 ;;  i               2   32[BANK0 ] int 
  2927 ;;  w               2   26[BANK0 ] int 
  2928 ;;  e               2   24[BANK0 ] int 
  2929 ;;  m               2   22[BANK0 ] int 
  2930 ;;  d               2   20[BANK0 ] int 
  2931 ;;  t               2   13[BANK0 ] int 
  2932 ;;  p               2   11[BANK0 ] int 
  2933 ;;  ne              2    9[BANK0 ] int 
  2934 ;;  sign            1   42[BANK0 ] unsigned char 
  2935 ;;  nmode           1   19[BANK0 ] unsigned char 
  2936 ;;  mode            1   18[BANK0 ] unsigned char 
  2937 ;;  pp              1   17[BANK0 ] unsigned char 
  2938 ;;  esign           1    0        unsigned char 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2948 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2949 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2950 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2951 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2952 ;;Total ram usage:       53 bytes
  2953 ;; Hardware stack levels used: 1
  2954 ;; Hardware stack levels required when called: 5
  2955 ;; This function calls:
  2956 ;;		___fladd
  2957 ;;		___fldiv
  2958 ;;		___fleq
  2959 ;;		___flge
  2960 ;;		___flmul
  2961 ;;		___flneg
  2962 ;;		___flsub
  2963 ;;		___fltol
  2964 ;;		___fpclassifyf
  2965 ;;		_floorf
  2966 ;;		_labs
  2967 ;;		_memcpy
  2968 ;;		_pad
  2969 ;;		_strcpy
  2970 ;; This function is called by:
  2971 ;;		_vfpfcnvrt
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text4
  2976   00192E                     __ptext4:
  2977                           	callstack 0
  2978   00192E                     _efgtoa:
  2979                           	callstack 22
  2980   00192E                     
  2981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2982   00192E  0E00               	movlw	0
  2983   001930  0100               	movlb	0	; () banked
  2984   001932  6F8A               	movwf	efgtoa@sign& (0+255),b
  2985   001934                     
  2986                           ; BSR set to: 0
  2987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2988   001934  C062  F08D         	movff	efgtoa@f,efgtoa@g
  2989   001938  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  2990   00193C  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  2991   001940  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  2992   001944                     
  2993                           ; BSR set to: 0
  2994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2995   001944  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2996   001946  EFA9  F00C         	goto	u4550
  2997   00194A  EFA7  F00C         	goto	u4551
  2998   00194E                     u4551:
  2999   00194E  EFBD  F00C         	goto	l4687
  3000   001952                     u4550:
  3001   001952                     
  3002                           ; BSR set to: 0
  3003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3004   001952  0E01               	movlw	1
  3005   001954  6F8A               	movwf	efgtoa@sign& (0+255),b
  3006   001956                     
  3007                           ; BSR set to: 0
  3008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3009   001956  C08D  F001         	movff	efgtoa@g,___flneg@f1
  3010   00195A  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3011   00195E  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3012   001962  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3013   001966  EC78  F02E         	call	___flneg	;wreg free
  3014   00196A  C001  F08D         	movff	?___flneg,efgtoa@g
  3015   00196E  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  3016   001972  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  3017   001976  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  3018   00197A                     l4687:
  3019                           
  3020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3021   00197A  0E00               	movlw	0
  3022   00197C  0100               	movlb	0	; () banked
  3023   00197E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3024   001980  0E00               	movlw	0
  3025   001982  6F8B               	movwf	efgtoa@n& (0+255),b
  3026   001984                     
  3027                           ; BSR set to: 0
  3028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3029   001984  C0E5  F07A         	movff	_width,efgtoa@w
  3030   001988  C0E6  F07B         	movff	_width+1,efgtoa@w+1
  3031   00198C                     
  3032                           ; BSR set to: 0
  3033                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3034   00198C  518A               	movf	efgtoa@sign& (0+255),w,b
  3035   00198E  B4D8               	btfsc	status,2,c
  3036   001990  EFCC  F00C         	goto	u4561
  3037   001994  EFCE  F00C         	goto	u4560
  3038   001998                     u4561:
  3039   001998  EFE2  F00C         	goto	l4701
  3040   00199C                     u4560:
  3041   00199C                     
  3042                           ; BSR set to: 0
  3043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3044   00199C  518A               	movf	efgtoa@sign& (0+255),w,b
  3045   00199E  A4D8               	btfss	status,2,c
  3046   0019A0  EFD4  F00C         	goto	u4571
  3047   0019A4  EFD6  F00C         	goto	u4570
  3048   0019A8                     u4571:
  3049   0019A8  EFDC  F00C         	goto	l4697
  3050   0019AC                     u4570:
  3051   0019AC                     
  3052                           ; BSR set to: 0
  3053   0019AC  0E00               	movlw	0
  3054   0019AE  6F70               	movwf	(_efgtoa$2577+1)& (0+255),b
  3055   0019B0  0E2B               	movlw	43
  3056   0019B2  6F6F               	movwf	_efgtoa$2577& (0+255),b
  3057   0019B4  EFE0  F00C         	goto	l4699
  3058   0019B8                     l4697:
  3059                           
  3060                           ; BSR set to: 0
  3061   0019B8  0E00               	movlw	0
  3062   0019BA  6F70               	movwf	(_efgtoa$2577+1)& (0+255),b
  3063   0019BC  0E2D               	movlw	45
  3064   0019BE  6F6F               	movwf	_efgtoa$2577& (0+255),b
  3065   0019C0                     l4699:
  3066                           
  3067                           ; BSR set to: 0
  3068   0019C0  C06F  F08A         	movff	_efgtoa$2577,efgtoa@sign
  3069   0019C4                     l4701:
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3073   0019C4  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3074   0019C8  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3075   0019CC  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3076   0019D0  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3077   0019D4  EC3A  F025         	call	___fpclassifyf	;wreg free
  3078   0019D8  0401               	decf	?___fpclassifyf^0,w,c
  3079   0019DA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3080   0019DC  A4D8               	btfss	status,2,c
  3081   0019DE  EFF3  F00C         	goto	u4581
  3082   0019E2  EFF5  F00C         	goto	u4580
  3083   0019E6                     u4581:
  3084   0019E6  EF28  F00D         	goto	l4719
  3085   0019EA                     u4580:
  3086   0019EA                     
  3087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3088   0019EA  0100               	movlb	0	; () banked
  3089   0019EC  518A               	movf	efgtoa@sign& (0+255),w,b
  3090   0019EE  B4D8               	btfsc	status,2,c
  3091   0019F0  EFFC  F00C         	goto	u4591
  3092   0019F4  EFFE  F00C         	goto	u4590
  3093   0019F8                     u4591:
  3094   0019F8  EF07  F00D         	goto	l4711
  3095   0019FC                     u4590:
  3096   0019FC                     
  3097                           ; BSR set to: 0
  3098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3099   0019FC  C08A  F116         	movff	efgtoa@sign,_dbuf
  3100   001A00                     
  3101                           ; BSR set to: 0
  3102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3103   001A00  077A               	decf	efgtoa@w& (0+255),f,b
  3104   001A02  A0D8               	btfss	status,0,c
  3105   001A04  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3106   001A06                     
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3109   001A06  0E00               	movlw	0
  3110   001A08  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3111   001A0A  0E01               	movlw	1
  3112   001A0C  6F8B               	movwf	efgtoa@n& (0+255),b
  3113   001A0E                     l4711:
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3117   001A0E  0E16               	movlw	low _dbuf
  3118   001A10  258B               	addwf	efgtoa@n& (0+255),w,b
  3119   001A12  6E01               	movwf	strcpy@dest^0,c
  3120   001A14  0E01               	movlw	high _dbuf
  3121   001A16  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3122   001A18  6E02               	movwf	(strcpy@dest+1)^0,c
  3123   001A1A  0E48               	movlw	low STR_3
  3124   001A1C  6E03               	movwf	strcpy@src^0,c
  3125   001A1E  0E0E               	movlw	high STR_3
  3126   001A20  6E04               	movwf	(strcpy@src+1)^0,c
  3127   001A22  ECB5  F02D         	call	_strcpy	;wreg free
  3128   001A26                     l4713:
  3129                           
  3130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3131   001A26  0100               	movlb	0	; () banked
  3132   001A28  0EFD               	movlw	253
  3133   001A2A  277A               	addwf	efgtoa@w& (0+255),f,b
  3134   001A2C  0EFF               	movlw	255
  3135   001A2E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3136   001A30                     
  3137                           ; BSR set to: 0
  3138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3139   001A30  C060  F011         	movff	efgtoa@fp,pad@fp
  3140   001A34  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3141   001A38  0E16               	movlw	low _dbuf
  3142   001A3A  6E13               	movwf	pad@buf^0,c
  3143   001A3C  0E01               	movlw	high _dbuf
  3144   001A3E  6E14               	movwf	(pad@buf+1)^0,c
  3145   001A40  C07A  F015         	movff	efgtoa@w,pad@p
  3146   001A44  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3147   001A48  EC3D  F029         	call	_pad	;wreg free
  3148   001A4C  EF93  F011         	goto	l1422
  3149   001A50                     l4719:
  3150                           
  3151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3152   001A50  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3153   001A54  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3154   001A58  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3155   001A5C  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3156   001A60  EC3A  F025         	call	___fpclassifyf	;wreg free
  3157   001A64  5001               	movf	?___fpclassifyf^0,w,c
  3158   001A66  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3159   001A68  A4D8               	btfss	status,2,c
  3160   001A6A  EF39  F00D         	goto	u4601
  3161   001A6E  EF3B  F00D         	goto	u4600
  3162   001A72                     u4601:
  3163   001A72  EF5B  F00D         	goto	l4737
  3164   001A76                     u4600:
  3165   001A76                     
  3166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3167   001A76  0100               	movlb	0	; () banked
  3168   001A78  518A               	movf	efgtoa@sign& (0+255),w,b
  3169   001A7A  B4D8               	btfsc	status,2,c
  3170   001A7C  EF42  F00D         	goto	u4611
  3171   001A80  EF44  F00D         	goto	u4610
  3172   001A84                     u4611:
  3173   001A84  EF4D  F00D         	goto	l4729
  3174   001A88                     u4610:
  3175   001A88                     
  3176                           ; BSR set to: 0
  3177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3178   001A88  C08A  F116         	movff	efgtoa@sign,_dbuf
  3179   001A8C                     
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3182   001A8C  077A               	decf	efgtoa@w& (0+255),f,b
  3183   001A8E  A0D8               	btfss	status,0,c
  3184   001A90  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3185   001A92                     
  3186                           ; BSR set to: 0
  3187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3188   001A92  0E00               	movlw	0
  3189   001A94  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3190   001A96  0E01               	movlw	1
  3191   001A98  6F8B               	movwf	efgtoa@n& (0+255),b
  3192   001A9A                     l4729:
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3196   001A9A  0E16               	movlw	low _dbuf
  3197   001A9C  258B               	addwf	efgtoa@n& (0+255),w,b
  3198   001A9E  6E01               	movwf	strcpy@dest^0,c
  3199   001AA0  0E01               	movlw	high _dbuf
  3200   001AA2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3201   001AA4  6E02               	movwf	(strcpy@dest+1)^0,c
  3202   001AA6  0E4C               	movlw	low STR_6
  3203   001AA8  6E03               	movwf	strcpy@src^0,c
  3204   001AAA  0E0E               	movlw	high STR_6
  3205   001AAC  6E04               	movwf	(strcpy@src+1)^0,c
  3206   001AAE  ECB5  F02D         	call	_strcpy	;wreg free
  3207   001AB2  EF13  F00D         	goto	l4713
  3208   001AB6                     l4737:
  3209                           
  3210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3211   001AB6  0E00               	movlw	0
  3212   001AB8  0100               	movlb	0	; () banked
  3213   001ABA  6F91               	movwf	efgtoa@u& (0+255),b
  3214   001ABC  0E00               	movlw	0
  3215   001ABE  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3216   001AC0  0E80               	movlw	128
  3217   001AC2  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3218   001AC4  0E3F               	movlw	63
  3219   001AC6  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3220                           
  3221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3222   001AC8  0E00               	movlw	0
  3223   001ACA  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3224   001ACC  0E00               	movlw	0
  3225   001ACE  6F78               	movwf	efgtoa@e& (0+255),b
  3226   001AD0                     
  3227                           ; BSR set to: 0
  3228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3229   001AD0  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3230   001AD4  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3231   001AD8  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3232   001ADC  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3233   001AE0  0E00               	movlw	0
  3234   001AE2  6E36               	movwf	___fleq@ff2^0,c
  3235   001AE4  0E00               	movlw	0
  3236   001AE6  6E37               	movwf	(___fleq@ff2+1)^0,c
  3237   001AE8  0E00               	movlw	0
  3238   001AEA  6E38               	movwf	(___fleq@ff2+2)^0,c
  3239   001AEC  0E00               	movlw	0
  3240   001AEE  6E39               	movwf	(___fleq@ff2+3)^0,c
  3241   001AF0  EC29  F027         	call	___fleq	;wreg free
  3242   001AF4  B0D8               	btfsc	status,0,c
  3243   001AF6  EF7F  F00D         	goto	u4621
  3244   001AFA  EF81  F00D         	goto	u4620
  3245   001AFE                     u4621:
  3246   001AFE  EF60  F00E         	goto	l1425
  3247   001B02                     u4620:
  3248   001B02  EF8E  F00D         	goto	l4745
  3249   001B06                     l1427:
  3250                           
  3251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3252   001B06  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3253   001B0A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3254   001B0E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3255   001B12  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3256   001B16                     
  3257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3258   001B16  0100               	movlb	0	; () banked
  3259   001B18  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3260   001B1A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3261   001B1C                     l4745:
  3262                           
  3263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3264   001B1C  C091  F011         	movff	efgtoa@u,___flmul@b
  3265   001B20  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3266   001B24  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3267   001B28  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3268   001B2C  0E00               	movlw	0
  3269   001B2E  6E15               	movwf	___flmul@a^0,c
  3270   001B30  0E00               	movlw	0
  3271   001B32  6E16               	movwf	(___flmul@a+1)^0,c
  3272   001B34  0E20               	movlw	32
  3273   001B36  6E17               	movwf	(___flmul@a+2)^0,c
  3274   001B38  0E41               	movlw	65
  3275   001B3A  6E18               	movwf	(___flmul@a+3)^0,c
  3276   001B3C  EC95  F016         	call	___flmul	;wreg free
  3277   001B40  C011  F07C         	movff	?___flmul,efgtoa@ou
  3278   001B44  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3279   001B48  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3280   001B4C  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3281   001B50  0100               	movlb	0	; () banked
  3282   001B52  517C               	movf	efgtoa@ou& (0+255),w,b
  3283   001B54  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3284   001B56  6E01               	movwf	labs@a^0,c
  3285   001B58  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3286   001B5A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3287   001B5C  6E02               	movwf	(labs@a+1)^0,c
  3288   001B5E  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3289   001B60  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3290   001B62  6E03               	movwf	(labs@a+2)^0,c
  3291   001B64  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3292   001B66  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3293   001B68  6E04               	movwf	(labs@a+3)^0,c
  3294   001B6A  ECB4  F029         	call	_labs	;wreg free
  3295   001B6E  BE04               	btfsc	(?_labs+3)^0,7,c
  3296   001B70  EFC5  F00D         	goto	u4631
  3297   001B74  5004               	movf	(?_labs+3)^0,w,c
  3298   001B76  1003               	iorwf	(?_labs+2)^0,w,c
  3299   001B78  1002               	iorwf	(?_labs+1)^0,w,c
  3300   001B7A  E109               	bnz	u4630
  3301   001B7C  0E02               	movlw	2
  3302   001B7E  5C01               	subwf	?_labs^0,w,c
  3303   001B80  A0D8               	btfss	status,0,c
  3304   001B82  EFC5  F00D         	goto	u4631
  3305   001B86  EFC7  F00D         	goto	u4630
  3306   001B8A                     u4631:
  3307   001B8A  EF83  F00D         	goto	l1427
  3308   001B8E                     u4630:
  3309   001B8E  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3310   001B92  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3311   001B96  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3312   001B9A  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3313   001B9E  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3314   001BA2  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3315   001BA6  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3316   001BAA  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3317   001BAE  ECB8  F024         	call	___flge	;wreg free
  3318   001BB2  A0D8               	btfss	status,0,c
  3319   001BB4  EFDE  F00D         	goto	u4641
  3320   001BB8  EFE0  F00D         	goto	u4640
  3321   001BBC                     u4641:
  3322   001BBC  EF83  F00D         	goto	l1427
  3323   001BC0                     u4640:
  3324   001BC0                     
  3325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3326   001BC0  0100               	movlb	0	; () banked
  3327   001BC2  5191               	movf	efgtoa@u& (0+255),w,b
  3328   001BC4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3329   001BC6  6E01               	movwf	labs@a^0,c
  3330   001BC8  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3331   001BCA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3332   001BCC  6E02               	movwf	(labs@a+1)^0,c
  3333   001BCE  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3334   001BD0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3335   001BD2  6E03               	movwf	(labs@a+2)^0,c
  3336   001BD4  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3337   001BD6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3338   001BD8  6E04               	movwf	(labs@a+3)^0,c
  3339   001BDA  ECB4  F029         	call	_labs	;wreg free
  3340   001BDE  BE04               	btfsc	(?_labs+3)^0,7,c
  3341   001BE0  EFFF  F00D         	goto	u4650
  3342   001BE4  5004               	movf	(?_labs+3)^0,w,c
  3343   001BE6  1003               	iorwf	(?_labs+2)^0,w,c
  3344   001BE8  1002               	iorwf	(?_labs+1)^0,w,c
  3345   001BEA  E107               	bnz	u4651
  3346   001BEC  0E02               	movlw	2
  3347   001BEE  5C01               	subwf	?_labs^0,w,c
  3348   001BF0  B0D8               	btfsc	status,0,c
  3349   001BF2  EFFD  F00D         	goto	u4651
  3350   001BF6  EFFF  F00D         	goto	u4650
  3351   001BFA                     u4651:
  3352   001BFA  EF47  F00E         	goto	l4763
  3353   001BFE                     u4650:
  3354   001BFE                     l4753:
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3357   001BFE  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3358   001C02  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3359   001C06  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3360   001C0A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3361                           
  3362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3363   001C0E  EF60  F00E         	goto	l1425
  3364   001C12                     l4755:
  3365                           
  3366                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3367   001C12  C091  F032         	movff	efgtoa@u,___fldiv@b
  3368   001C16  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3369   001C1A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3370   001C1E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3371   001C22  0E00               	movlw	0
  3372   001C24  6E36               	movwf	___fldiv@a^0,c
  3373   001C26  0E00               	movlw	0
  3374   001C28  6E37               	movwf	(___fldiv@a+1)^0,c
  3375   001C2A  0E20               	movlw	32
  3376   001C2C  6E38               	movwf	(___fldiv@a+2)^0,c
  3377   001C2E  0E41               	movlw	65
  3378   001C30  6E39               	movwf	(___fldiv@a+3)^0,c
  3379   001C32  ECAA  F018         	call	___fldiv	;wreg free
  3380   001C36  C032  F091         	movff	?___fldiv,efgtoa@u
  3381   001C3A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3382   001C3E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3383   001C42  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3384   001C46                     
  3385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3386   001C46  0100               	movlb	0	; () banked
  3387   001C48  0778               	decf	efgtoa@e& (0+255),f,b
  3388   001C4A  A0D8               	btfss	status,0,c
  3389   001C4C  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3390   001C4E                     
  3391                           ; BSR set to: 0
  3392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3393   001C4E  5191               	movf	efgtoa@u& (0+255),w,b
  3394   001C50  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3395   001C52  6E01               	movwf	labs@a^0,c
  3396   001C54  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3397   001C56  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3398   001C58  6E02               	movwf	(labs@a+1)^0,c
  3399   001C5A  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3400   001C5C  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3401   001C5E  6E03               	movwf	(labs@a+2)^0,c
  3402   001C60  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3403   001C62  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3404   001C64  6E04               	movwf	(labs@a+3)^0,c
  3405   001C66  ECB4  F029         	call	_labs	;wreg free
  3406   001C6A  BE04               	btfsc	(?_labs+3)^0,7,c
  3407   001C6C  EF45  F00E         	goto	u4660
  3408   001C70  5004               	movf	(?_labs+3)^0,w,c
  3409   001C72  1003               	iorwf	(?_labs+2)^0,w,c
  3410   001C74  1002               	iorwf	(?_labs+1)^0,w,c
  3411   001C76  E107               	bnz	u4661
  3412   001C78  0E02               	movlw	2
  3413   001C7A  5C01               	subwf	?_labs^0,w,c
  3414   001C7C  B0D8               	btfsc	status,0,c
  3415   001C7E  EF43  F00E         	goto	u4661
  3416   001C82  EF45  F00E         	goto	u4660
  3417   001C86                     u4661:
  3418   001C86  EF47  F00E         	goto	l4763
  3419   001C8A                     u4660:
  3420   001C8A  EFFF  F00D         	goto	l4753
  3421   001C8E                     l4763:
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3424   001C8E  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3425   001C92  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3426   001C96  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3427   001C9A  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3428   001C9E  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3429   001CA2  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3430   001CA6  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3431   001CAA  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3432   001CAE  ECB8  F024         	call	___flge	;wreg free
  3433   001CB2  A0D8               	btfss	status,0,c
  3434   001CB4  EF5E  F00E         	goto	u4671
  3435   001CB8  EF60  F00E         	goto	u4670
  3436   001CBC                     u4671:
  3437   001CBC  EF09  F00E         	goto	l4755
  3438   001CC0                     u4670:
  3439   001CC0                     l1425:
  3440                           
  3441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3442   001CC0  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3443                           
  3444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3445   001CC4  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3446   001CC8                     
  3447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3448   001CC8  0100               	movlb	0	; () banked
  3449   001CCA  BFE8               	btfsc	(_prec+1)& (0+255),7,b
  3450   001CCC  EF6A  F00E         	goto	u4681
  3451   001CD0  EF6C  F00E         	goto	u4680
  3452   001CD4                     u4681:
  3453   001CD4  EF72  F00E         	goto	l4769
  3454   001CD8                     u4680:
  3455   001CD8                     
  3456                           ; BSR set to: 0
  3457   001CD8  C0E7  F06B         	movff	_prec,efgtoa@p
  3458   001CDC  C0E8  F06C         	movff	_prec+1,efgtoa@p+1
  3459   001CE0  EF76  F00E         	goto	l4771
  3460   001CE4                     l4769:
  3461                           
  3462                           ; BSR set to: 0
  3463   001CE4  0E00               	movlw	0
  3464   001CE6  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3465   001CE8  0E06               	movlw	6
  3466   001CEA  6F6B               	movwf	efgtoa@p& (0+255),b
  3467   001CEC                     l4771:
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3471   001CEC  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3472   001CF0  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3473   001CF4                     
  3474                           ; BSR set to: 0
  3475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3476   001CF4  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3477   001CF6  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3478   001CF8                     
  3479                           ; BSR set to: 0
  3480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3481   001CF8  0E66               	movlw	102
  3482   001CFA  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3483   001CFC  A4D8               	btfss	status,2,c
  3484   001CFE  EF83  F00E         	goto	u4691
  3485   001D02  EF85  F00E         	goto	u4690
  3486   001D06                     u4691:
  3487   001D06  EFA5  F00E         	goto	l4785
  3488   001D0A                     u4690:
  3489   001D0A                     
  3490                           ; BSR set to: 0
  3491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3492   001D0A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3493   001D0C  EF8C  F00E         	goto	u4700
  3494   001D10  EF8A  F00E         	goto	u4701
  3495   001D14                     u4701:
  3496   001D14  EF98  F00E         	goto	l4781
  3497   001D18                     u4700:
  3498   001D18                     
  3499                           ; BSR set to: 0
  3500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3501   001D18  0E00               	movlw	0
  3502   001D1A  6F91               	movwf	efgtoa@u& (0+255),b
  3503   001D1C  0E00               	movlw	0
  3504   001D1E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3505   001D20  0E80               	movlw	128
  3506   001D22  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3507   001D24  0E3F               	movlw	63
  3508   001D26  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3509                           
  3510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3511   001D28  0E00               	movlw	0
  3512   001D2A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3513   001D2C  0E00               	movlw	0
  3514   001D2E  6F78               	movwf	efgtoa@e& (0+255),b
  3515   001D30                     l4781:
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3519   001D30  0E67               	movlw	103
  3520   001D32  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3521   001D34  B4D8               	btfsc	status,2,c
  3522   001D36  EF9F  F00E         	goto	u4711
  3523   001D3A  EFA1  F00E         	goto	u4710
  3524   001D3E                     u4711:
  3525   001D3E  EFA5  F00E         	goto	l4785
  3526   001D42                     u4710:
  3527   001D42                     
  3528                           ; BSR set to: 0
  3529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3530   001D42  5178               	movf	efgtoa@e& (0+255),w,b
  3531   001D44  2776               	addwf	efgtoa@m& (0+255),f,b
  3532   001D46  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3533   001D48  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3534   001D4A                     l4785:
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3538   001D4A  0E00               	movlw	0
  3539   001D4C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3540   001D4E  0E00               	movlw	0
  3541   001D50  6F80               	movwf	efgtoa@i& (0+255),b
  3542   001D52                     
  3543                           ; BSR set to: 0
  3544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3545   001D52  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3546   001D56  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3547   001D5A  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3548   001D5E  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3549   001D62                     
  3550                           ; BSR set to: 0
  3551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3552   001D62  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3553   001D66  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3554   001D6A  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3555   001D6E  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3556                           
  3557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3558   001D72  EF36  F00F         	goto	l4799
  3559   001D76                     l4791:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3563   001D76  C082  F032         	movff	efgtoa@h,___fldiv@b
  3564   001D7A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3565   001D7E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3566   001D82  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3567   001D86  C091  F036         	movff	efgtoa@u,___fldiv@a
  3568   001D8A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3569   001D8E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3570   001D92  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3571   001D96  ECAA  F018         	call	___fldiv	;wreg free
  3572   001D9A  C032  F04B         	movff	?___fldiv,floorf@x
  3573   001D9E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3574   001DA2  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3575   001DA6  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3576   001DAA  EC26  F020         	call	_floorf	;wreg free
  3577   001DAE  C04B  F086         	movff	?_floorf,efgtoa@l
  3578   001DB2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3579   001DB6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3580   001DBA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3581                           
  3582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3583   001DBE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3584   001DC2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3585   001DC6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3586   001DCA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3587   001DCE  EC35  F024         	call	___fltol	;wreg free
  3588   001DD2  C001  F074         	movff	?___fltol,efgtoa@d
  3589   001DD6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3590   001DDA                     
  3591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3592   001DDA  C082  F02A         	movff	efgtoa@h,___flsub@b
  3593   001DDE  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3594   001DE2  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3595   001DE6  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3596   001DEA  C086  F015         	movff	efgtoa@l,___flmul@a
  3597   001DEE  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3598   001DF2  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3599   001DF6  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3600   001DFA  C091  F011         	movff	efgtoa@u,___flmul@b
  3601   001DFE  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3602   001E02  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3603   001E06  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3604   001E0A  EC95  F016         	call	___flmul	;wreg free
  3605   001E0E  C011  F02E         	movff	?___flmul,___flsub@a
  3606   001E12  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3607   001E16  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3608   001E1A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3609   001E1E  EC92  F02D         	call	___flsub	;wreg free
  3610   001E22  C02A  F082         	movff	?___flsub,efgtoa@h
  3611   001E26  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3612   001E2A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3613   001E2E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3614   001E32                     
  3615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3616   001E32  C091  F032         	movff	efgtoa@u,___fldiv@b
  3617   001E36  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3618   001E3A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3619   001E3E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3620   001E42  0E00               	movlw	0
  3621   001E44  6E36               	movwf	___fldiv@a^0,c
  3622   001E46  0E00               	movlw	0
  3623   001E48  6E37               	movwf	(___fldiv@a+1)^0,c
  3624   001E4A  0E20               	movlw	32
  3625   001E4C  6E38               	movwf	(___fldiv@a+2)^0,c
  3626   001E4E  0E41               	movlw	65
  3627   001E50  6E39               	movwf	(___fldiv@a+3)^0,c
  3628   001E52  ECAA  F018         	call	___fldiv	;wreg free
  3629   001E56  C032  F091         	movff	?___fldiv,efgtoa@u
  3630   001E5A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3631   001E5E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3632   001E62  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3633   001E66                     
  3634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3635   001E66  0100               	movlb	0	; () banked
  3636   001E68  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3637   001E6A  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3638   001E6C                     l4799:
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3642   001E6C  5176               	movf	efgtoa@m& (0+255),w,b
  3643   001E6E  5D80               	subwf	efgtoa@i& (0+255),w,b
  3644   001E70  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3645   001E72  0A80               	xorlw	128
  3646   001E74  6F67               	movwf	??_efgtoa& (0+255),b
  3647   001E76  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3648   001E78  0A80               	xorlw	128
  3649   001E7A  5967               	subwfb	??_efgtoa& (0+255),w,b
  3650   001E7C  A0D8               	btfss	status,0,c
  3651   001E7E  EF43  F00F         	goto	u4721
  3652   001E82  EF45  F00F         	goto	u4720
  3653   001E86                     u4721:
  3654   001E86  EFBB  F00E         	goto	l4791
  3655   001E8A                     u4720:
  3656   001E8A                     
  3657                           ; BSR set to: 0
  3658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3659   001E8A  C091  F011         	movff	efgtoa@u,___flmul@b
  3660   001E8E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3661   001E92  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3662   001E96  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3663   001E9A  0E00               	movlw	0
  3664   001E9C  6E15               	movwf	___flmul@a^0,c
  3665   001E9E  0E00               	movlw	0
  3666   001EA0  6E16               	movwf	(___flmul@a+1)^0,c
  3667   001EA2  0EA0               	movlw	160
  3668   001EA4  6E17               	movwf	(___flmul@a+2)^0,c
  3669   001EA6  0E40               	movlw	64
  3670   001EA8  6E18               	movwf	(___flmul@a+3)^0,c
  3671   001EAA  EC95  F016         	call	___flmul	;wreg free
  3672   001EAE  C011  F086         	movff	?___flmul,efgtoa@l
  3673   001EB2  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  3674   001EB6  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  3675   001EBA  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  3676   001EBE                     
  3677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3678   001EBE  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3679   001EC2  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3680   001EC6  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3681   001ECA  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3682   001ECE  C086  F02E         	movff	efgtoa@l,___flge@ff2
  3683   001ED2  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  3684   001ED6  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  3685   001EDA  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  3686   001EDE  ECB8  F024         	call	___flge	;wreg free
  3687   001EE2  B0D8               	btfsc	status,0,c
  3688   001EE4  EF76  F00F         	goto	u4731
  3689   001EE8  EF78  F00F         	goto	u4730
  3690   001EEC                     u4731:
  3691   001EEC  EF83  F00F         	goto	l4807
  3692   001EF0                     u4730:
  3693   001EF0                     
  3694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3695   001EF0  0E00               	movlw	0
  3696   001EF2  0100               	movlb	0	; () banked
  3697   001EF4  6F86               	movwf	efgtoa@l& (0+255),b
  3698   001EF6  0E00               	movlw	0
  3699   001EF8  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3700   001EFA  0E00               	movlw	0
  3701   001EFC  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3702   001EFE  0E00               	movlw	0
  3703   001F00  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3704                           
  3705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3706   001F02  EFAC  F00F         	goto	l4813
  3707   001F06                     l4807:
  3708                           
  3709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3710   001F06  C082  F032         	movff	efgtoa@h,___fleq@ff1
  3711   001F0A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  3712   001F0E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  3713   001F12  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  3714   001F16  C086  F036         	movff	efgtoa@l,___fleq@ff2
  3715   001F1A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  3716   001F1E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  3717   001F22  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  3718   001F26  EC29  F027         	call	___fleq	;wreg free
  3719   001F2A  A0D8               	btfss	status,0,c
  3720   001F2C  EF9A  F00F         	goto	u4741
  3721   001F30  EF9C  F00F         	goto	u4740
  3722   001F34                     u4741:
  3723   001F34  EFAC  F00F         	goto	l4813
  3724   001F38                     u4740:
  3725   001F38  0100               	movlb	0	; () banked
  3726   001F3A  B174               	btfsc	efgtoa@d& (0+255),0,b
  3727   001F3C  EFA2  F00F         	goto	u4751
  3728   001F40  EFA4  F00F         	goto	u4750
  3729   001F44                     u4751:
  3730   001F44  EFAC  F00F         	goto	l4813
  3731   001F48                     u4750:
  3732   001F48                     
  3733                           ; BSR set to: 0
  3734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3735   001F48  0E00               	movlw	0
  3736   001F4A  6F86               	movwf	efgtoa@l& (0+255),b
  3737   001F4C  0E00               	movlw	0
  3738   001F4E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3739   001F50  0E00               	movlw	0
  3740   001F52  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3741   001F54  0E00               	movlw	0
  3742   001F56  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3743   001F58                     l4813:
  3744                           
  3745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3746   001F58  C08D  F001         	movff	efgtoa@g,___fladd@b
  3747   001F5C  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  3748   001F60  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  3749   001F64  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  3750   001F68  C086  F005         	movff	efgtoa@l,___fladd@a
  3751   001F6C  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3752   001F70  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3753   001F74  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3754   001F78  EC35  F014         	call	___fladd	;wreg free
  3755   001F7C  C001  F082         	movff	?___fladd,efgtoa@h
  3756   001F80  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3757   001F84  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3758   001F88  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3759   001F8C                     
  3760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3761   001F8C  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3762   001F90  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3763   001F94  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3764   001F98  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3765   001F9C  0E00               	movlw	0
  3766   001F9E  6E15               	movwf	___flmul@a^0,c
  3767   001FA0  0E00               	movlw	0
  3768   001FA2  6E16               	movwf	(___flmul@a+1)^0,c
  3769   001FA4  0E20               	movlw	32
  3770   001FA6  6E17               	movwf	(___flmul@a+2)^0,c
  3771   001FA8  0E41               	movlw	65
  3772   001FAA  6E18               	movwf	(___flmul@a+3)^0,c
  3773   001FAC  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3774   001FB0  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3775   001FB4  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3776   001FB8  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3777   001FBC  EC95  F016         	call	___flmul	;wreg free
  3778   001FC0  C011  F02E         	movff	?___flmul,___flge@ff2
  3779   001FC4  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  3780   001FC8  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  3781   001FCC  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  3782   001FD0  ECB8  F024         	call	___flge	;wreg free
  3783   001FD4  A0D8               	btfss	status,0,c
  3784   001FD6  EFEF  F00F         	goto	u4761
  3785   001FDA  EFF1  F00F         	goto	u4760
  3786   001FDE                     u4761:
  3787   001FDE  EF1A  F010         	goto	l4825
  3788   001FE2                     u4760:
  3789   001FE2                     
  3790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3791   001FE2  0100               	movlb	0	; () banked
  3792   001FE4  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3793   001FE6  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3794   001FE8                     
  3795                           ; BSR set to: 0
  3796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3797   001FE8  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3798   001FEC  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3799   001FF0  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3800   001FF4  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3801   001FF8  0E00               	movlw	0
  3802   001FFA  6E15               	movwf	___flmul@a^0,c
  3803   001FFC  0E00               	movlw	0
  3804   001FFE  6E16               	movwf	(___flmul@a+1)^0,c
  3805   002000  0E20               	movlw	32
  3806   002002  6E17               	movwf	(___flmul@a+2)^0,c
  3807   002004  0E41               	movlw	65
  3808   002006  6E18               	movwf	(___flmul@a+3)^0,c
  3809   002008  EC95  F016         	call	___flmul	;wreg free
  3810   00200C  C011  F07C         	movff	?___flmul,efgtoa@ou
  3811   002010  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3812   002014  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3813   002018  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3814   00201C                     
  3815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3816   00201C  0E66               	movlw	102
  3817   00201E  0100               	movlb	0	; () banked
  3818   002020  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3819   002022  A4D8               	btfss	status,2,c
  3820   002024  EF16  F010         	goto	u4771
  3821   002028  EF18  F010         	goto	u4770
  3822   00202C                     u4771:
  3823   00202C  EF1A  F010         	goto	l4825
  3824   002030                     u4770:
  3825   002030                     
  3826                           ; BSR set to: 0
  3827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3828   002030  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3829   002032  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3830   002034                     l4825:
  3831                           
  3832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3833   002034  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3834   002038  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3835   00203C  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3836   002040  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3837   002044                     
  3838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3839   002044  C078  F069         	movff	efgtoa@e,efgtoa@ne
  3840   002048  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  3841   00204C                     
  3842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3843   00204C  0E00               	movlw	0
  3844   00204E  0100               	movlb	0	; () banked
  3845   002050  6F71               	movwf	efgtoa@pp& (0+255),b
  3846   002052                     
  3847                           ; BSR set to: 0
  3848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3849   002052  0E00               	movlw	0
  3850   002054  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  3851   002056  0E00               	movlw	0
  3852   002058  6F6D               	movwf	efgtoa@t& (0+255),b
  3853   00205A                     
  3854                           ; BSR set to: 0
  3855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3856   00205A  0E00               	movlw	0
  3857   00205C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3858   00205E  0E00               	movlw	0
  3859   002060  6F80               	movwf	efgtoa@i& (0+255),b
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3862   002062  EF18  F011         	goto	l4875
  3863   002066                     l4835:
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3867   002066  C082  F032         	movff	efgtoa@h,___fldiv@b
  3868   00206A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3869   00206E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3870   002072  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3871   002076  C091  F036         	movff	efgtoa@u,___fldiv@a
  3872   00207A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3873   00207E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3874   002082  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3875   002086  ECAA  F018         	call	___fldiv	;wreg free
  3876   00208A  C032  F04B         	movff	?___fldiv,floorf@x
  3877   00208E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3878   002092  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3879   002096  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3880   00209A  EC26  F020         	call	_floorf	;wreg free
  3881   00209E  C04B  F086         	movff	?_floorf,efgtoa@l
  3882   0020A2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3883   0020A6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3884   0020AA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3887   0020AE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3888   0020B2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3889   0020B6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3890   0020BA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3891   0020BE  EC35  F024         	call	___fltol	;wreg free
  3892   0020C2  BE02               	btfsc	(?___fltol+1)^0,7,c
  3893   0020C4  EF6F  F010         	goto	u4780
  3894   0020C8  5002               	movf	(?___fltol+1)^0,w,c
  3895   0020CA  E107               	bnz	u4781
  3896   0020CC  0E0A               	movlw	10
  3897   0020CE  5C01               	subwf	?___fltol^0,w,c
  3898   0020D0  B0D8               	btfsc	status,0,c
  3899   0020D2  EF6D  F010         	goto	u4781
  3900   0020D6  EF6F  F010         	goto	u4780
  3901   0020DA                     u4781:
  3902   0020DA  EF7F  F010         	goto	l4839
  3903   0020DE                     u4780:
  3904   0020DE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3905   0020E2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3906   0020E6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3907   0020EA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3908   0020EE  EC35  F024         	call	___fltol	;wreg free
  3909   0020F2  C001  F074         	movff	?___fltol,efgtoa@d
  3910   0020F6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3911   0020FA  EF84  F010         	goto	l1455
  3912   0020FE                     l4839:
  3913   0020FE  0E00               	movlw	0
  3914   002100  0100               	movlb	0	; () banked
  3915   002102  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  3916   002104  0E09               	movlw	9
  3917   002106  6F74               	movwf	efgtoa@d& (0+255),b
  3918   002108                     l1455:
  3919                           
  3920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3921   002108  0100               	movlb	0	; () banked
  3922   00210A  5171               	movf	efgtoa@pp& (0+255),w,b
  3923   00210C  A4D8               	btfss	status,2,c
  3924   00210E  EF8B  F010         	goto	u4791
  3925   002112  EF8D  F010         	goto	u4790
  3926   002116                     u4791:
  3927   002116  EFB5  F010         	goto	l4859
  3928   00211A                     u4790:
  3929   00211A                     
  3930                           ; BSR set to: 0
  3931   00211A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3932   00211C  EF94  F010         	goto	u4800
  3933   002120  EF92  F010         	goto	u4801
  3934   002124                     u4801:
  3935   002124  EFB5  F010         	goto	l4859
  3936   002128                     u4800:
  3937   002128                     
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3940   002128  0E16               	movlw	low _dbuf
  3941   00212A  258B               	addwf	efgtoa@n& (0+255),w,b
  3942   00212C  6ED9               	movwf	fsr2l,c
  3943   00212E  0E01               	movlw	high _dbuf
  3944   002130  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3945   002132  6EDA               	movwf	fsr2h,c
  3946   002134  0E2E               	movlw	46
  3947   002136  6EDF               	movwf	indf2,c
  3948   002138                     
  3949                           ; BSR set to: 0
  3950   002138  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3951   00213A  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3952   00213C                     
  3953                           ; BSR set to: 0
  3954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3955   00213C  077A               	decf	efgtoa@w& (0+255),f,b
  3956   00213E  A0D8               	btfss	status,0,c
  3957   002140  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3958   002142                     
  3959                           ; BSR set to: 0
  3960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3961   002142  0E01               	movlw	1
  3962   002144  6F71               	movwf	efgtoa@pp& (0+255),b
  3963   002146  EFB5  F010         	goto	l4859
  3964   00214A                     l4851:
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3968   00214A  0E16               	movlw	low _dbuf
  3969   00214C  258B               	addwf	efgtoa@n& (0+255),w,b
  3970   00214E  6ED9               	movwf	fsr2l,c
  3971   002150  0E01               	movlw	high _dbuf
  3972   002152  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3973   002154  6EDA               	movwf	fsr2h,c
  3974   002156  0E30               	movlw	48
  3975   002158  6EDF               	movwf	indf2,c
  3976   00215A                     
  3977                           ; BSR set to: 0
  3978   00215A  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3979   00215C  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3980   00215E                     
  3981                           ; BSR set to: 0
  3982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3983   00215E  077A               	decf	efgtoa@w& (0+255),f,b
  3984   002160  A0D8               	btfss	status,0,c
  3985   002162  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3986   002164                     
  3987                           ; BSR set to: 0
  3988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3989   002164  076D               	decf	efgtoa@t& (0+255),f,b
  3990   002166  A0D8               	btfss	status,0,c
  3991   002168  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  3992   00216A                     l4859:
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3996   00216A  516D               	movf	efgtoa@t& (0+255),w,b
  3997   00216C  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3998   00216E  A4D8               	btfss	status,2,c
  3999   002170  EFBC  F010         	goto	u4811
  4000   002174  EFBE  F010         	goto	u4810
  4001   002178                     u4811:
  4002   002178  EFA5  F010         	goto	l4851
  4003   00217C                     u4810:
  4004   00217C                     
  4005                           ; BSR set to: 0
  4006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4007   00217C  0E16               	movlw	low _dbuf
  4008   00217E  258B               	addwf	efgtoa@n& (0+255),w,b
  4009   002180  6ED9               	movwf	fsr2l,c
  4010   002182  0E01               	movlw	high _dbuf
  4011   002184  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4012   002186  6EDA               	movwf	fsr2h,c
  4013   002188  5174               	movf	efgtoa@d& (0+255),w,b
  4014   00218A  0F30               	addlw	48
  4015   00218C  6EDF               	movwf	indf2,c
  4016   00218E                     
  4017                           ; BSR set to: 0
  4018   00218E  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4019   002190  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4020   002192                     
  4021                           ; BSR set to: 0
  4022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4023   002192  077A               	decf	efgtoa@w& (0+255),f,b
  4024   002194  A0D8               	btfss	status,0,c
  4025   002196  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4026   002198                     
  4027                           ; BSR set to: 0
  4028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4029   002198  C082  F02A         	movff	efgtoa@h,___flsub@b
  4030   00219C  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4031   0021A0  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4032   0021A4  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4033   0021A8  C086  F015         	movff	efgtoa@l,___flmul@a
  4034   0021AC  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4035   0021B0  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4036   0021B4  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4037   0021B8  C091  F011         	movff	efgtoa@u,___flmul@b
  4038   0021BC  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4039   0021C0  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4040   0021C4  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4041   0021C8  EC95  F016         	call	___flmul	;wreg free
  4042   0021CC  C011  F02E         	movff	?___flmul,___flsub@a
  4043   0021D0  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4044   0021D4  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4045   0021D8  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4046   0021DC  EC92  F02D         	call	___flsub	;wreg free
  4047   0021E0  C02A  F082         	movff	?___flsub,efgtoa@h
  4048   0021E4  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4049   0021E8  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4050   0021EC  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4051   0021F0                     
  4052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4053   0021F0  C091  F032         	movff	efgtoa@u,___fldiv@b
  4054   0021F4  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4055   0021F8  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4056   0021FC  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4057   002200  0E00               	movlw	0
  4058   002202  6E36               	movwf	___fldiv@a^0,c
  4059   002204  0E00               	movlw	0
  4060   002206  6E37               	movwf	(___fldiv@a+1)^0,c
  4061   002208  0E20               	movlw	32
  4062   00220A  6E38               	movwf	(___fldiv@a+2)^0,c
  4063   00220C  0E41               	movlw	65
  4064   00220E  6E39               	movwf	(___fldiv@a+3)^0,c
  4065   002210  ECAA  F018         	call	___fldiv	;wreg free
  4066   002214  C032  F091         	movff	?___fldiv,efgtoa@u
  4067   002218  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4068   00221C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4069   002220  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4070   002224                     
  4071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4072   002224  0100               	movlb	0	; () banked
  4073   002226  0769               	decf	efgtoa@ne& (0+255),f,b
  4074   002228  A0D8               	btfss	status,0,c
  4075   00222A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4076   00222C                     
  4077                           ; BSR set to: 0
  4078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4079   00222C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4080   00222E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4081   002230                     l4875:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4085   002230  5176               	movf	efgtoa@m& (0+255),w,b
  4086   002232  5D80               	subwf	efgtoa@i& (0+255),w,b
  4087   002234  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4088   002236  0A80               	xorlw	128
  4089   002238  6F67               	movwf	??_efgtoa& (0+255),b
  4090   00223A  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4091   00223C  0A80               	xorlw	128
  4092   00223E  5967               	subwfb	??_efgtoa& (0+255),w,b
  4093   002240  B0D8               	btfsc	status,0,c
  4094   002242  EF25  F011         	goto	u4821
  4095   002246  EF27  F011         	goto	u4820
  4096   00224A                     u4821:
  4097   00224A  EF35  F011         	goto	l4879
  4098   00224E                     u4820:
  4099   00224E                     
  4100                           ; BSR set to: 0
  4101   00224E  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4102   002250  EF33  F011         	goto	u4831
  4103   002254  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4104   002256  E109               	bnz	u4830
  4105   002258  0E4B               	movlw	75
  4106   00225A  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4107   00225C  A0D8               	btfss	status,0,c
  4108   00225E  EF33  F011         	goto	u4831
  4109   002262  EF35  F011         	goto	u4830
  4110   002266                     u4831:
  4111   002266  EF33  F010         	goto	l4835
  4112   00226A                     u4830:
  4113   00226A                     l4879:
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4117   00226A  0E00               	movlw	0
  4118   00226C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4119   00226E  0E4F               	movlw	79
  4120   002270  6F80               	movwf	efgtoa@i& (0+255),b
  4121   002272                     
  4122                           ; BSR set to: 0
  4123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4124   002272  0E16               	movlw	low _dbuf
  4125   002274  2580               	addwf	efgtoa@i& (0+255),w,b
  4126   002276  6ED9               	movwf	fsr2l,c
  4127   002278  0E01               	movlw	high _dbuf
  4128   00227A  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4129   00227C  6EDA               	movwf	fsr2h,c
  4130   00227E  0E00               	movlw	0
  4131   002280  6EDF               	movwf	indf2,c
  4132   002282                     
  4133                           ; BSR set to: 0
  4134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4135   002282  0E16               	movlw	low _dbuf
  4136   002284  6F67               	movwf	??_efgtoa& (0+255),b
  4137   002286  0E01               	movlw	high _dbuf
  4138   002288  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4139   00228A  518B               	movf	efgtoa@n& (0+255),w,b
  4140   00228C  5F67               	subwf	??_efgtoa& (0+255),f,b
  4141   00228E  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4142   002290  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4143   002292  5180               	movf	efgtoa@i& (0+255),w,b
  4144   002294  2567               	addwf	??_efgtoa& (0+255),w,b
  4145   002296  6E01               	movwf	memcpy@d1^0,c
  4146   002298  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4147   00229A  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4148   00229C  6E02               	movwf	(memcpy@d1+1)^0,c
  4149   00229E  0E16               	movlw	low _dbuf
  4150   0022A0  6E03               	movwf	memcpy@s1^0,c
  4151   0022A2  0E01               	movlw	high _dbuf
  4152   0022A4  6E04               	movwf	(memcpy@s1+1)^0,c
  4153   0022A6  C08B  F005         	movff	efgtoa@n,memcpy@n
  4154   0022AA  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4155   0022AE  ECA3  F02C         	call	_memcpy	;wreg free
  4156   0022B2                     
  4157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4158   0022B2  0100               	movlb	0	; () banked
  4159   0022B4  518B               	movf	efgtoa@n& (0+255),w,b
  4160   0022B6  5D80               	subwf	efgtoa@i& (0+255),w,b
  4161   0022B8  6F8B               	movwf	efgtoa@n& (0+255),b
  4162   0022BA  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4163   0022BC  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4164   0022BE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4165   0022C0                     
  4166                           ; BSR set to: 0
  4167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4168   0022C0  518A               	movf	efgtoa@sign& (0+255),w,b
  4169   0022C2  A4D8               	btfss	status,2,c
  4170   0022C4  EF66  F011         	goto	u4841
  4171   0022C8  EF69  F011         	goto	u4840
  4172   0022CC                     u4841:
  4173   0022CC  0E01               	movlw	1
  4174   0022CE  EF6A  F011         	goto	u4850
  4175   0022D2                     u4840:
  4176   0022D2  0E00               	movlw	0
  4177   0022D4                     u4850:
  4178   0022D4  6F80               	movwf	efgtoa@i& (0+255),b
  4179   0022D6  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4180   0022D8                     
  4181                           ; BSR set to: 0
  4182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4183   0022D8  518A               	movf	efgtoa@sign& (0+255),w,b
  4184   0022DA  B4D8               	btfsc	status,2,c
  4185   0022DC  EF72  F011         	goto	u4861
  4186   0022E0  EF74  F011         	goto	u4860
  4187   0022E4                     u4861:
  4188   0022E4  EF7F  F011         	goto	l4893
  4189   0022E8                     u4860:
  4190   0022E8                     
  4191                           ; BSR set to: 0
  4192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4193   0022E8  078B               	decf	efgtoa@n& (0+255),f,b
  4194   0022EA  A0D8               	btfss	status,0,c
  4195   0022EC  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4196   0022EE  0E16               	movlw	low _dbuf
  4197   0022F0  258B               	addwf	efgtoa@n& (0+255),w,b
  4198   0022F2  6ED9               	movwf	fsr2l,c
  4199   0022F4  0E01               	movlw	high _dbuf
  4200   0022F6  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4201   0022F8  6EDA               	movwf	fsr2h,c
  4202   0022FA  C08A  FFDF         	movff	efgtoa@sign,indf2
  4203   0022FE                     l4893:
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4207   0022FE  5180               	movf	efgtoa@i& (0+255),w,b
  4208   002300  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4209   002302  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4210   002304  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4211   002306                     
  4212                           ; BSR set to: 0
  4213                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4214   002306  C060  F011         	movff	efgtoa@fp,pad@fp
  4215   00230A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4216   00230E  0E16               	movlw	low _dbuf
  4217   002310  258B               	addwf	efgtoa@n& (0+255),w,b
  4218   002312  6E13               	movwf	pad@buf^0,c
  4219   002314  0E01               	movlw	high _dbuf
  4220   002316  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4221   002318  6E14               	movwf	(pad@buf+1)^0,c
  4222   00231A  C07A  F015         	movff	efgtoa@w,pad@p
  4223   00231E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4224   002322  EC3D  F029         	call	_pad	;wreg free
  4225   002326                     l1422:
  4226   002326  0012               	return		;funcret
  4227   002328                     __end_of_efgtoa:
  4228                           	callstack 0
  4229                           
  4230 ;; *************** function _strcpy *****************
  4231 ;; Defined at:
  4232 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4235 ;;		 -> dbuf(80), 
  4236 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4237 ;;		 -> STR_6(4), STR_3(4), 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  d               2    6[COMRAM] PTR unsigned char 
  4240 ;;		 -> dbuf(80), 
  4241 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4242 ;;		 -> STR_6(4), STR_3(4), 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  2    0[COMRAM] PTR unsigned char 
  4245 ;; Registers used:
  4246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4252 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4253 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4255 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4256 ;;Total ram usage:        8 bytes
  4257 ;; Hardware stack levels used: 1
  4258 ;; Hardware stack levels required when called: 1
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_efgtoa
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text5
  4267   005B6A                     __ptext5:
  4268                           	callstack 0
  4269   005B6A                     _strcpy:
  4270                           	callstack 25
  4271   005B6A  C003  F005         	movff	strcpy@src,strcpy@s
  4272   005B6E  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4273   005B72  C001  F007         	movff	strcpy@dest,strcpy@d
  4274   005B76  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4275   005B7A                     l4505:
  4276   005B7A  C005  FFF6         	movff	strcpy@s,tblptrl
  4277   005B7E  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4278   005B82  4A05               	infsnz	strcpy@s^0,f,c
  4279   005B84  2A06               	incf	(strcpy@s+1)^0,f,c
  4280   005B86                     	if	0	;tblptru may be non-zero
  4281   005B86                     	endif
  4282   005B86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4283   005B86  0E00               	movlw	low (__mediumconst shr (0+16))
  4284   005B88  6EF8               	movwf	tblptru,c
  4285   005B8A                     	endif
  4286   005B8A  C007  FFD9         	movff	strcpy@d,fsr2l
  4287   005B8E  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4288   005B92  4A07               	infsnz	strcpy@d^0,f,c
  4289   005B94  2A08               	incf	(strcpy@d+1)^0,f,c
  4290   005B96  0008               	tblrd		*
  4291   005B98  CFF5 FFDF          	movff	tablat,indf2
  4292   005B9C  50DF               	movf	indf2,w,c
  4293   005B9E  A4D8               	btfss	status,2,c
  4294   005BA0  EFD4  F02D         	goto	u4201
  4295   005BA4  EFD6  F02D         	goto	u4200
  4296   005BA8                     u4201:
  4297   005BA8  EFBD  F02D         	goto	l4505
  4298   005BAC                     u4200:
  4299   005BAC  0012               	return		;funcret
  4300   005BAE                     __end_of_strcpy:
  4301                           	callstack 0
  4302                           
  4303 ;; *************** function _memcpy *****************
  4304 ;; Defined at:
  4305 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  d1              2    0[COMRAM] PTR void 
  4308 ;;		 -> dbuf(80), 
  4309 ;;  s1              2    2[COMRAM] PTR const void 
  4310 ;;		 -> dbuf(80), 
  4311 ;;  n               2    4[COMRAM] unsigned int 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4314 ;;		 -> dbuf(80), 
  4315 ;;  d               2    6[COMRAM] PTR unsigned char 
  4316 ;;		 -> dbuf(80), 
  4317 ;;  tmp             1   10[COMRAM] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  2    0[COMRAM] PTR void 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4327 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4328 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4330 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;Total ram usage:       11 bytes
  4332 ;; Hardware stack levels used: 1
  4333 ;; Hardware stack levels required when called: 1
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_efgtoa
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text6
  4342   005946                     __ptext6:
  4343                           	callstack 0
  4344   005946                     _memcpy:
  4345                           	callstack 25
  4346   005946  C003  F009         	movff	memcpy@s1,memcpy@s
  4347   00594A  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4348   00594E  C001  F007         	movff	memcpy@d1,memcpy@d
  4349   005952  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4350   005956  EFBD  F02C         	goto	l4549
  4351   00595A                     l4541:
  4352   00595A  C009  FFD9         	movff	memcpy@s,fsr2l
  4353   00595E  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4354   005962  50DF               	movf	indf2,w,c
  4355   005964  6E0B               	movwf	memcpy@tmp^0,c
  4356   005966  4A09               	infsnz	memcpy@s^0,f,c
  4357   005968  2A0A               	incf	(memcpy@s+1)^0,f,c
  4358   00596A  C007  FFD9         	movff	memcpy@d,fsr2l
  4359   00596E  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4360   005972  C00B  FFDF         	movff	memcpy@tmp,indf2
  4361   005976  4A07               	infsnz	memcpy@d^0,f,c
  4362   005978  2A08               	incf	(memcpy@d+1)^0,f,c
  4363   00597A                     l4549:
  4364   00597A  0605               	decf	memcpy@n^0,f,c
  4365   00597C  A0D8               	btfss	status,0,c
  4366   00597E  0606               	decf	(memcpy@n+1)^0,f,c
  4367   005980  2805               	incf	memcpy@n^0,w,c
  4368   005982  E106               	bnz	u4321
  4369   005984  2806               	incf	(memcpy@n+1)^0,w,c
  4370   005986  A4D8               	btfss	status,2,c
  4371   005988  EFC8  F02C         	goto	u4321
  4372   00598C  EFCA  F02C         	goto	u4320
  4373   005990                     u4321:
  4374   005990  EFAD  F02C         	goto	l4541
  4375   005994                     u4320:
  4376   005994  0012               	return		;funcret
  4377   005996                     __end_of_memcpy:
  4378                           	callstack 0
  4379                           
  4380 ;; *************** function _labs *****************
  4381 ;; Defined at:
  4382 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  a               4    0[COMRAM] long 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  4    0[COMRAM] long 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4396 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4398 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4399 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4400 ;;Total ram usage:        8 bytes
  4401 ;; Hardware stack levels used: 1
  4402 ;; Hardware stack levels required when called: 1
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_efgtoa
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text7
  4411   005368                     __ptext7:
  4412                           	callstack 0
  4413   005368                     _labs:
  4414                           	callstack 25
  4415   005368  BE04               	btfsc	(labs@a+3)^0,7,c
  4416   00536A  EFC3  F029         	goto	u4210
  4417   00536E  5004               	movf	(labs@a+3)^0,w,c
  4418   005370  1003               	iorwf	(labs@a+2)^0,w,c
  4419   005372  1002               	iorwf	(labs@a+1)^0,w,c
  4420   005374  E106               	bnz	u4211
  4421   005376  0401               	decf	labs@a^0,w,c
  4422   005378  B0D8               	btfsc	status,0,c
  4423   00537A  EFC1  F029         	goto	u4211
  4424   00537E  EFC3  F029         	goto	u4210
  4425   005382                     u4211:
  4426   005382  EFDE  F029         	goto	l1527
  4427   005386                     u4210:
  4428   005386  C001  F005         	movff	labs@a,??_labs
  4429   00538A  C002  F006         	movff	labs@a+1,??_labs+1
  4430   00538E  C003  F007         	movff	labs@a+2,??_labs+2
  4431   005392  C004  F008         	movff	labs@a+3,??_labs+3
  4432   005396  1E05               	comf	??_labs^0,f,c
  4433   005398  1E06               	comf	(??_labs+1)^0,f,c
  4434   00539A  1E07               	comf	(??_labs+2)^0,f,c
  4435   00539C  1E08               	comf	(??_labs+3)^0,f,c
  4436   00539E  2A05               	incf	??_labs^0,f,c
  4437   0053A0  0E00               	movlw	0
  4438   0053A2  2206               	addwfc	(??_labs+1)^0,f,c
  4439   0053A4  2207               	addwfc	(??_labs+2)^0,f,c
  4440   0053A6  2208               	addwfc	(??_labs+3)^0,f,c
  4441   0053A8  C005  F001         	movff	??_labs,?_labs
  4442   0053AC  C006  F002         	movff	??_labs+1,?_labs+1
  4443   0053B0  C007  F003         	movff	??_labs+2,?_labs+2
  4444   0053B4  C008  F004         	movff	??_labs+3,?_labs+3
  4445   0053B8  EFE6  F029         	goto	l1530
  4446   0053BC                     l1527:
  4447   0053BC  C001  F001         	movff	labs@a,?_labs
  4448   0053C0  C002  F002         	movff	labs@a+1,?_labs+1
  4449   0053C4  C003  F003         	movff	labs@a+2,?_labs+2
  4450   0053C8  C004  F004         	movff	labs@a+3,?_labs+3
  4451   0053CC                     l1530:
  4452   0053CC  0012               	return		;funcret
  4453   0053CE                     __end_of_labs:
  4454                           	callstack 0
  4455                           
  4456 ;; *************** function _floorf *****************
  4457 ;; Defined at:
  4458 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  x               4   74[COMRAM] float 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  u               4   90[COMRAM] struct .
  4463 ;;  m               4   84[COMRAM] unsigned long 
  4464 ;;  e               2   88[COMRAM] int 
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  4   74[COMRAM] float 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4474 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4475 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4476 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4477 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4478 ;;Total ram usage:       20 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; Hardware stack levels required when called: 1
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_efgtoa
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text8
  4489   00404C                     __ptext8:
  4490                           	callstack 0
  4491   00404C                     _floorf:
  4492                           	callstack 25
  4493   00404C  C0DD  F05B         	movff	floorf@F526,floorf@u
  4494   004050  C0DE  F05C         	movff	floorf@F526+1,floorf@u+1
  4495   004054  C0DF  F05D         	movff	floorf@F526+2,floorf@u+2
  4496   004058  C0E0  F05E         	movff	floorf@F526+3,floorf@u+3
  4497   00405C  C04B  F05B         	movff	floorf@x,floorf@u
  4498   004060  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4499   004064  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4500   004068  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4501   00406C  0E81               	movlw	129
  4502   00406E  6E4F               	movwf	??_floorf^0,c
  4503   004070  0EFF               	movlw	255
  4504   004072  6E50               	movwf	(??_floorf+1)^0,c
  4505   004074  C05B  F051         	movff	floorf@u,??_floorf+2
  4506   004078  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4507   00407C  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4508   004080  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4509   004084  0E18               	movlw	24
  4510   004086  EF4A  F020         	goto	u4220
  4511   00408A                     u4225:
  4512   00408A  90D8               	bcf	status,0,c
  4513   00408C  3254               	rrcf	(??_floorf+5)^0,f,c
  4514   00408E  3253               	rrcf	(??_floorf+4)^0,f,c
  4515   004090  3252               	rrcf	(??_floorf+3)^0,f,c
  4516   004092  3251               	rrcf	(??_floorf+2)^0,f,c
  4517   004094                     u4220:
  4518   004094  2EE8               	decfsz	wreg,f,c
  4519   004096  EF45  F020         	goto	u4225
  4520   00409A  5051               	movf	(??_floorf+2)^0,w,c
  4521   00409C  244F               	addwf	??_floorf^0,w,c
  4522   00409E  6E59               	movwf	floorf@e^0,c
  4523   0040A0  0E00               	movlw	0
  4524   0040A2  2050               	addwfc	(??_floorf+1)^0,w,c
  4525   0040A4  6E5A               	movwf	(floorf@e+1)^0,c
  4526   0040A6  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4527   0040A8  EF5F  F020         	goto	u4231
  4528   0040AC  505A               	movf	(floorf@e+1)^0,w,c
  4529   0040AE  E109               	bnz	u4230
  4530   0040B0  0E17               	movlw	23
  4531   0040B2  5C59               	subwf	floorf@e^0,w,c
  4532   0040B4  A0D8               	btfss	status,0,c
  4533   0040B6  EF5F  F020         	goto	u4231
  4534   0040BA  EF61  F020         	goto	u4230
  4535   0040BE                     u4231:
  4536   0040BE  EF6B  F020         	goto	l4517
  4537   0040C2                     u4230:
  4538   0040C2                     l4515:
  4539   0040C2  C04B  F04B         	movff	floorf@x,?_floorf
  4540   0040C6  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4541   0040CA  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4542   0040CE  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4543   0040D2  EF2E  F021         	goto	l1516
  4544   0040D6                     l4517:
  4545   0040D6  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4546   0040D8  EF70  F020         	goto	u4241
  4547   0040DC  EF72  F020         	goto	u4240
  4548   0040E0                     u4241:
  4549   0040E0  EFE2  F020         	goto	l4527
  4550   0040E4                     u4240:
  4551   0040E4  C059  F04F         	movff	floorf@e,??_floorf
  4552   0040E8  0EFF               	movlw	255
  4553   0040EA  6E50               	movwf	(??_floorf+1)^0,c
  4554   0040EC  0EFF               	movlw	255
  4555   0040EE  6E51               	movwf	(??_floorf+2)^0,c
  4556   0040F0  0E7F               	movlw	127
  4557   0040F2  6E52               	movwf	(??_floorf+3)^0,c
  4558   0040F4  0E00               	movlw	0
  4559   0040F6  6E53               	movwf	(??_floorf+4)^0,c
  4560   0040F8                     u4255:
  4561   0040F8  664F               	tstfsz	??_floorf^0,c
  4562   0040FA  EF81  F020         	goto	u4256
  4563   0040FE  EF89  F020         	goto	u4257
  4564   004102                     u4256:
  4565   004102  3453               	rlcf	(??_floorf+4)^0,w,c
  4566   004104  3253               	rrcf	(??_floorf+4)^0,f,c
  4567   004106  3252               	rrcf	(??_floorf+3)^0,f,c
  4568   004108  3251               	rrcf	(??_floorf+2)^0,f,c
  4569   00410A  3250               	rrcf	(??_floorf+1)^0,f,c
  4570   00410C  2E4F               	decfsz	??_floorf^0,f,c
  4571   00410E  EF7C  F020         	goto	u4255
  4572   004112                     u4257:
  4573   004112  C050  F055         	movff	??_floorf+1,floorf@m
  4574   004116  C051  F056         	movff	??_floorf+2,floorf@m+1
  4575   00411A  C052  F057         	movff	??_floorf+3,floorf@m+2
  4576   00411E  C053  F058         	movff	??_floorf+4,floorf@m+3
  4577   004122  5055               	movf	floorf@m^0,w,c
  4578   004124  145B               	andwf	floorf@u^0,w,c
  4579   004126  6E4F               	movwf	??_floorf^0,c
  4580   004128  5056               	movf	(floorf@m+1)^0,w,c
  4581   00412A  145C               	andwf	(floorf@u+1)^0,w,c
  4582   00412C  6E50               	movwf	(??_floorf+1)^0,c
  4583   00412E  5057               	movf	(floorf@m+2)^0,w,c
  4584   004130  145D               	andwf	(floorf@u+2)^0,w,c
  4585   004132  6E51               	movwf	(??_floorf+2)^0,c
  4586   004134  5058               	movf	(floorf@m+3)^0,w,c
  4587   004136  145E               	andwf	(floorf@u+3)^0,w,c
  4588   004138  6E52               	movwf	(??_floorf+3)^0,c
  4589   00413A  504F               	movf	??_floorf^0,w,c
  4590   00413C  1050               	iorwf	(??_floorf+1)^0,w,c
  4591   00413E  1051               	iorwf	(??_floorf+2)^0,w,c
  4592   004140  1052               	iorwf	(??_floorf+3)^0,w,c
  4593   004142  A4D8               	btfss	status,2,c
  4594   004144  EFA6  F020         	goto	u4261
  4595   004148  EFA8  F020         	goto	u4260
  4596   00414C                     u4261:
  4597   00414C  EFAA  F020         	goto	l4523
  4598   004150                     u4260:
  4599   004150  EF61  F020         	goto	l4515
  4600   004154                     l4523:
  4601   004154  C05B  F04F         	movff	floorf@u,??_floorf
  4602   004158  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4603   00415C  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4604   004160  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4605   004164  0E20               	movlw	32
  4606   004166  EFBA  F020         	goto	u4270
  4607   00416A                     u4275:
  4608   00416A  90D8               	bcf	status,0,c
  4609   00416C  3252               	rrcf	(??_floorf+3)^0,f,c
  4610   00416E  3251               	rrcf	(??_floorf+2)^0,f,c
  4611   004170  3250               	rrcf	(??_floorf+1)^0,f,c
  4612   004172  324F               	rrcf	??_floorf^0,f,c
  4613   004174                     u4270:
  4614   004174  2EE8               	decfsz	wreg,f,c
  4615   004176  EFB5  F020         	goto	u4275
  4616   00417A  504F               	movf	??_floorf^0,w,c
  4617   00417C  1050               	iorwf	(??_floorf+1)^0,w,c
  4618   00417E  1051               	iorwf	(??_floorf+2)^0,w,c
  4619   004180  1052               	iorwf	(??_floorf+3)^0,w,c
  4620   004182  B4D8               	btfsc	status,2,c
  4621   004184  EFC6  F020         	goto	u4281
  4622   004188  EFC8  F020         	goto	u4280
  4623   00418C                     u4281:
  4624   00418C  EFD0  F020         	goto	l1519
  4625   004190                     u4280:
  4626   004190  5055               	movf	floorf@m^0,w,c
  4627   004192  265B               	addwf	floorf@u^0,f,c
  4628   004194  5056               	movf	(floorf@m+1)^0,w,c
  4629   004196  225C               	addwfc	(floorf@u+1)^0,f,c
  4630   004198  5057               	movf	(floorf@m+2)^0,w,c
  4631   00419A  225D               	addwfc	(floorf@u+2)^0,f,c
  4632   00419C  5058               	movf	(floorf@m+3)^0,w,c
  4633   00419E  225E               	addwfc	(floorf@u+3)^0,f,c
  4634   0041A0                     l1519:
  4635   0041A0  1C55               	comf	floorf@m^0,w,c
  4636   0041A2  6E4F               	movwf	??_floorf^0,c
  4637   0041A4  1C56               	comf	(floorf@m+1)^0,w,c
  4638   0041A6  6E50               	movwf	(??_floorf+1)^0,c
  4639   0041A8  1C57               	comf	(floorf@m+2)^0,w,c
  4640   0041AA  6E51               	movwf	(??_floorf+2)^0,c
  4641   0041AC  1C58               	comf	(floorf@m+3)^0,w,c
  4642   0041AE  6E52               	movwf	(??_floorf+3)^0,c
  4643   0041B0  504F               	movf	??_floorf^0,w,c
  4644   0041B2  165B               	andwf	floorf@u^0,f,c
  4645   0041B4  5050               	movf	(??_floorf+1)^0,w,c
  4646   0041B6  165C               	andwf	(floorf@u+1)^0,f,c
  4647   0041B8  5051               	movf	(??_floorf+2)^0,w,c
  4648   0041BA  165D               	andwf	(floorf@u+2)^0,f,c
  4649   0041BC  5052               	movf	(??_floorf+3)^0,w,c
  4650   0041BE  165E               	andwf	(floorf@u+3)^0,f,c
  4651   0041C0  EF26  F021         	goto	l4535
  4652   0041C4                     l4527:
  4653   0041C4  C05B  F04F         	movff	floorf@u,??_floorf
  4654   0041C8  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4655   0041CC  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4656   0041D0  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4657   0041D4  0E20               	movlw	32
  4658   0041D6  EFF2  F020         	goto	u4290
  4659   0041DA                     u4295:
  4660   0041DA  90D8               	bcf	status,0,c
  4661   0041DC  3252               	rrcf	(??_floorf+3)^0,f,c
  4662   0041DE  3251               	rrcf	(??_floorf+2)^0,f,c
  4663   0041E0  3250               	rrcf	(??_floorf+1)^0,f,c
  4664   0041E2  324F               	rrcf	??_floorf^0,f,c
  4665   0041E4                     u4290:
  4666   0041E4  2EE8               	decfsz	wreg,f,c
  4667   0041E6  EFED  F020         	goto	u4295
  4668   0041EA  504F               	movf	??_floorf^0,w,c
  4669   0041EC  1050               	iorwf	(??_floorf+1)^0,w,c
  4670   0041EE  1051               	iorwf	(??_floorf+2)^0,w,c
  4671   0041F0  1052               	iorwf	(??_floorf+3)^0,w,c
  4672   0041F2  A4D8               	btfss	status,2,c
  4673   0041F4  EFFE  F020         	goto	u4301
  4674   0041F8  EF00  F021         	goto	u4300
  4675   0041FC                     u4301:
  4676   0041FC  EF0A  F021         	goto	l4531
  4677   004200                     u4300:
  4678   004200  0E00               	movlw	0
  4679   004202  6E5B               	movwf	floorf@u^0,c
  4680   004204  0E00               	movlw	0
  4681   004206  6E5C               	movwf	(floorf@u+1)^0,c
  4682   004208  0E00               	movlw	0
  4683   00420A  6E5D               	movwf	(floorf@u+2)^0,c
  4684   00420C  0E00               	movlw	0
  4685   00420E  6E5E               	movwf	(floorf@u+3)^0,c
  4686   004210  EF26  F021         	goto	l4535
  4687   004214                     l4531:
  4688   004214  90D8               	bcf	status,0,c
  4689   004216  345B               	rlcf	floorf@u^0,w,c
  4690   004218  6E4F               	movwf	??_floorf^0,c
  4691   00421A  345C               	rlcf	(floorf@u+1)^0,w,c
  4692   00421C  6E50               	movwf	(??_floorf+1)^0,c
  4693   00421E  345D               	rlcf	(floorf@u+2)^0,w,c
  4694   004220  6E51               	movwf	(??_floorf+2)^0,c
  4695   004222  345E               	rlcf	(floorf@u+3)^0,w,c
  4696   004224  6E52               	movwf	(??_floorf+3)^0,c
  4697   004226  504F               	movf	??_floorf^0,w,c
  4698   004228  1050               	iorwf	(??_floorf+1)^0,w,c
  4699   00422A  1051               	iorwf	(??_floorf+2)^0,w,c
  4700   00422C  1052               	iorwf	(??_floorf+3)^0,w,c
  4701   00422E  B4D8               	btfsc	status,2,c
  4702   004230  EF1C  F021         	goto	u4311
  4703   004234  EF1E  F021         	goto	u4310
  4704   004238                     u4311:
  4705   004238  EF26  F021         	goto	l4535
  4706   00423C                     u4310:
  4707   00423C  0E00               	movlw	0
  4708   00423E  6E5B               	movwf	floorf@u^0,c
  4709   004240  0E00               	movlw	0
  4710   004242  6E5C               	movwf	(floorf@u+1)^0,c
  4711   004244  0E80               	movlw	128
  4712   004246  6E5D               	movwf	(floorf@u+2)^0,c
  4713   004248  0EBF               	movlw	191
  4714   00424A  6E5E               	movwf	(floorf@u+3)^0,c
  4715   00424C                     l4535:
  4716   00424C  C05B  F04B         	movff	floorf@u,?_floorf
  4717   004250  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  4718   004254  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  4719   004258  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  4720   00425C                     l1516:
  4721   00425C  0012               	return		;funcret
  4722   00425E                     __end_of_floorf:
  4723                           	callstack 0
  4724                           
  4725 ;; *************** function ___fpclassifyf *****************
  4726 ;; Defined at:
  4727 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  x               4    0[COMRAM] float 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  u               4   10[COMRAM] struct .
  4732 ;;  e               2    8[COMRAM] int 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  2    0[COMRAM] int 
  4735 ;; Registers used:
  4736 ;;		wreg, status,2, status,0
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4743 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4744 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4745 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4746 ;;Total ram usage:       14 bytes
  4747 ;; Hardware stack levels used: 1
  4748 ;; Hardware stack levels required when called: 1
  4749 ;; This function calls:
  4750 ;;		Nothing
  4751 ;; This function is called by:
  4752 ;;		_efgtoa
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text9
  4757   004A74                     __ptext9:
  4758                           	callstack 0
  4759   004A74                     ___fpclassifyf:
  4760                           	callstack 25
  4761   004A74  C0E1  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4762   004A78  C0E2  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4763   004A7C  C0E3  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4764   004A80  C0E4  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4765   004A84  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4766   004A88  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4767   004A8C  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4768   004A90  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4769   004A94  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4770   004A98  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4771   004A9C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4772   004AA0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4773   004AA4  0E18               	movlw	24
  4774   004AA6  EF5A  F025         	goto	u4130
  4775   004AAA                     u4135:
  4776   004AAA  90D8               	bcf	status,0,c
  4777   004AAC  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4778   004AAE  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4779   004AB0  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4780   004AB2  3205               	rrcf	??___fpclassifyf^0,f,c
  4781   004AB4                     u4130:
  4782   004AB4  2EE8               	decfsz	wreg,f,c
  4783   004AB6  EF55  F025         	goto	u4135
  4784   004ABA  5005               	movf	??___fpclassifyf^0,w,c
  4785   004ABC  6E09               	movwf	___fpclassifyf@e^0,c
  4786   004ABE  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4787   004AC0  5009               	movf	___fpclassifyf@e^0,w,c
  4788   004AC2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4789   004AC4  A4D8               	btfss	status,2,c
  4790   004AC6  EF67  F025         	goto	u4141
  4791   004ACA  EF69  F025         	goto	u4140
  4792   004ACE                     u4141:
  4793   004ACE  EF89  F025         	goto	l4493
  4794   004AD2                     u4140:
  4795   004AD2  90D8               	bcf	status,0,c
  4796   004AD4  340B               	rlcf	___fpclassifyf@u^0,w,c
  4797   004AD6  6E05               	movwf	??___fpclassifyf^0,c
  4798   004AD8  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4799   004ADA  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4800   004ADC  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4801   004ADE  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4802   004AE0  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4803   004AE2  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4804   004AE4  5005               	movf	??___fpclassifyf^0,w,c
  4805   004AE6  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4806   004AE8  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4807   004AEA  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4808   004AEC  A4D8               	btfss	status,2,c
  4809   004AEE  EF7B  F025         	goto	u4151
  4810   004AF2  EF7D  F025         	goto	u4150
  4811   004AF6                     u4151:
  4812   004AF6  EF83  F025         	goto	l4489
  4813   004AFA                     u4150:
  4814   004AFA  0E00               	movlw	0
  4815   004AFC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4816   004AFE  0E02               	movlw	2
  4817   004B00  6E01               	movwf	?___fpclassifyf^0,c
  4818   004B02  EFB8  F025         	goto	l1502
  4819   004B06                     l4489:
  4820   004B06  0E00               	movlw	0
  4821   004B08  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4822   004B0A  0E03               	movlw	3
  4823   004B0C  6E01               	movwf	?___fpclassifyf^0,c
  4824   004B0E  EFB8  F025         	goto	l1502
  4825   004B12                     l4493:
  4826   004B12  2809               	incf	___fpclassifyf@e^0,w,c
  4827   004B14  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4828   004B16  A4D8               	btfss	status,2,c
  4829   004B18  EF90  F025         	goto	u4161
  4830   004B1C  EF92  F025         	goto	u4160
  4831   004B20                     u4161:
  4832   004B20  EFB4  F025         	goto	l4499
  4833   004B24                     u4160:
  4834   004B24  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4835   004B28  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4836   004B2C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4837   004B30  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4838   004B34  0E09               	movlw	9
  4839   004B36                     u4175:
  4840   004B36  90D8               	bcf	status,0,c
  4841   004B38  3605               	rlcf	??___fpclassifyf^0,f,c
  4842   004B3A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4843   004B3C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4844   004B3E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4845   004B40  2EE8               	decfsz	wreg,f,c
  4846   004B42  EF9B  F025         	goto	u4175
  4847   004B46  5005               	movf	??___fpclassifyf^0,w,c
  4848   004B48  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4849   004B4A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4850   004B4C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4851   004B4E  B4D8               	btfsc	status,2,c
  4852   004B50  EFAC  F025         	goto	u4181
  4853   004B54  EFAF  F025         	goto	u4180
  4854   004B58                     u4181:
  4855   004B58  0E01               	movlw	1
  4856   004B5A  EFB0  F025         	goto	u4190
  4857   004B5E                     u4180:
  4858   004B5E  0E00               	movlw	0
  4859   004B60                     u4190:
  4860   004B60  6E01               	movwf	?___fpclassifyf^0,c
  4861   004B62  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4862   004B64  EFB8  F025         	goto	l1502
  4863   004B68                     l4499:
  4864   004B68  0E00               	movlw	0
  4865   004B6A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4866   004B6C  0E04               	movlw	4
  4867   004B6E  6E01               	movwf	?___fpclassifyf^0,c
  4868   004B70                     l1502:
  4869   004B70  0012               	return		;funcret
  4870   004B72                     __end_of___fpclassifyf:
  4871                           	callstack 0
  4872                           
  4873 ;; *************** function ___fltol *****************
  4874 ;; Defined at:
  4875 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  f1              4    0[COMRAM] int 
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;  exp1            1    9[COMRAM] unsigned char 
  4880 ;;  sign1           1    8[COMRAM] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  4    0[COMRAM] long 
  4883 ;; Registers used:
  4884 ;;		wreg, status,2, status,0
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4890 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4892 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4893 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4894 ;;Total ram usage:       10 bytes
  4895 ;; Hardware stack levels used: 1
  4896 ;; Hardware stack levels required when called: 1
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_turnRight45
  4901 ;;		_turnLeft45
  4902 ;;		_reverseOneBlock
  4903 ;;		_ForwardOneBlock
  4904 ;;		_Forwardhalfblock
  4905 ;;		_Backhalfblock
  4906 ;;		_efgtoa
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text10
  4911   00486A                     __ptext10:
  4912                           	callstack 0
  4913   00486A                     ___fltol:
  4914                           	callstack 25
  4915   00486A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4916   00486C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4917   00486E  6E0A               	movwf	___fltol@exp1^0,c
  4918   004870  500A               	movf	___fltol@exp1^0,w,c
  4919   004872  A4D8               	btfss	status,2,c
  4920   004874  EF3E  F024         	goto	u4031
  4921   004878  EF40  F024         	goto	u4030
  4922   00487C                     u4031:
  4923   00487C  EF4A  F024         	goto	l4425
  4924   004880                     u4030:
  4925   004880                     l4421:
  4926   004880  0E00               	movlw	0
  4927   004882  6E01               	movwf	?___fltol^0,c
  4928   004884  0E00               	movlw	0
  4929   004886  6E02               	movwf	(?___fltol+1)^0,c
  4930   004888  0E00               	movlw	0
  4931   00488A  6E03               	movwf	(?___fltol+2)^0,c
  4932   00488C  0E00               	movlw	0
  4933   00488E  6E04               	movwf	(?___fltol+3)^0,c
  4934   004890  EFB7  F024         	goto	l975
  4935   004894                     l4425:
  4936   004894  C001  F005         	movff	___fltol@f1,??___fltol
  4937   004898  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4938   00489C  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4939   0048A0  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4940   0048A4  0E20               	movlw	32
  4941   0048A6  EF5A  F024         	goto	u4040
  4942   0048AA                     u4045:
  4943   0048AA  90D8               	bcf	status,0,c
  4944   0048AC  3208               	rrcf	(??___fltol+3)^0,f,c
  4945   0048AE  3207               	rrcf	(??___fltol+2)^0,f,c
  4946   0048B0  3206               	rrcf	(??___fltol+1)^0,f,c
  4947   0048B2  3205               	rrcf	??___fltol^0,f,c
  4948   0048B4                     u4040:
  4949   0048B4  2EE8               	decfsz	wreg,f,c
  4950   0048B6  EF55  F024         	goto	u4045
  4951   0048BA  5005               	movf	??___fltol^0,w,c
  4952   0048BC  6E09               	movwf	___fltol@sign1^0,c
  4953   0048BE  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4954   0048C0  0EFF               	movlw	255
  4955   0048C2  1601               	andwf	___fltol@f1^0,f,c
  4956   0048C4  0EFF               	movlw	255
  4957   0048C6  1602               	andwf	(___fltol@f1+1)^0,f,c
  4958   0048C8  0EFF               	movlw	255
  4959   0048CA  1603               	andwf	(___fltol@f1+2)^0,f,c
  4960   0048CC  0E00               	movlw	0
  4961   0048CE  1604               	andwf	(___fltol@f1+3)^0,f,c
  4962   0048D0  0E96               	movlw	150
  4963   0048D2  5E0A               	subwf	___fltol@exp1^0,f,c
  4964   0048D4  BE0A               	btfsc	___fltol@exp1^0,7,c
  4965   0048D6  EF71  F024         	goto	u4050
  4966   0048DA  EF6F  F024         	goto	u4051
  4967   0048DE                     u4051:
  4968   0048DE  EF87  F024         	goto	l4445
  4969   0048E2                     u4050:
  4970   0048E2  500A               	movf	___fltol@exp1^0,w,c
  4971   0048E4  0A80               	xorlw	128
  4972   0048E6  0F97               	addlw	151
  4973   0048E8  B0D8               	btfsc	status,0,c
  4974   0048EA  EF79  F024         	goto	u4061
  4975   0048EE  EF7B  F024         	goto	u4060
  4976   0048F2                     u4061:
  4977   0048F2  EF7D  F024         	goto	l4441
  4978   0048F6                     u4060:
  4979   0048F6  EF40  F024         	goto	l4421
  4980   0048FA                     l4441:
  4981   0048FA  90D8               	bcf	status,0,c
  4982   0048FC  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4983   0048FE  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4984   004900  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4985   004902  3201               	rrcf	___fltol@f1^0,f,c
  4986   004904  3E0A               	incfsz	___fltol@exp1^0,f,c
  4987   004906  EF7D  F024         	goto	l4441
  4988   00490A  EF9F  F024         	goto	l4455
  4989   00490E                     l4445:
  4990   00490E  0E1F               	movlw	31
  4991   004910  640A               	cpfsgt	___fltol@exp1^0,c
  4992   004912  EF8D  F024         	goto	u4071
  4993   004916  EF8F  F024         	goto	u4070
  4994   00491A                     u4071:
  4995   00491A  EF97  F024         	goto	l4453
  4996   00491E                     u4070:
  4997   00491E  EF40  F024         	goto	l4421
  4998   004922                     l4451:
  4999   004922  90D8               	bcf	status,0,c
  5000   004924  3601               	rlcf	___fltol@f1^0,f,c
  5001   004926  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5002   004928  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5003   00492A  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5004   00492C  060A               	decf	___fltol@exp1^0,f,c
  5005   00492E                     l4453:
  5006   00492E  500A               	movf	___fltol@exp1^0,w,c
  5007   004930  A4D8               	btfss	status,2,c
  5008   004932  EF9D  F024         	goto	u4081
  5009   004936  EF9F  F024         	goto	u4080
  5010   00493A                     u4081:
  5011   00493A  EF91  F024         	goto	l4451
  5012   00493E                     u4080:
  5013   00493E                     l4455:
  5014   00493E  5009               	movf	___fltol@sign1^0,w,c
  5015   004940  B4D8               	btfsc	status,2,c
  5016   004942  EFA5  F024         	goto	u4091
  5017   004946  EFA7  F024         	goto	u4090
  5018   00494A                     u4091:
  5019   00494A  EFAF  F024         	goto	l4459
  5020   00494E                     u4090:
  5021   00494E  1E04               	comf	(___fltol@f1+3)^0,f,c
  5022   004950  1E03               	comf	(___fltol@f1+2)^0,f,c
  5023   004952  1E02               	comf	(___fltol@f1+1)^0,f,c
  5024   004954  6C01               	negf	___fltol@f1^0,c
  5025   004956  0E00               	movlw	0
  5026   004958  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5027   00495A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5028   00495C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5029   00495E                     l4459:
  5030   00495E  C001  F001         	movff	___fltol@f1,?___fltol
  5031   004962  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5032   004966  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5033   00496A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5034   00496E                     l975:
  5035   00496E  0012               	return		;funcret
  5036   004970                     __end_of___fltol:
  5037                           	callstack 0
  5038                           
  5039 ;; *************** function ___flneg *****************
  5040 ;; Defined at:
  5041 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;  f1              4    0[COMRAM] long 
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;		None
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  4    0[COMRAM] long 
  5048 ;; Registers used:
  5049 ;;		wreg, status,2, status,0
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5055 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5058 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5059 ;;Total ram usage:        4 bytes
  5060 ;; Hardware stack levels used: 1
  5061 ;; Hardware stack levels required when called: 1
  5062 ;; This function calls:
  5063 ;;		Nothing
  5064 ;; This function is called by:
  5065 ;;		_efgtoa
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           	psect	text11
  5070   005CF0                     __ptext11:
  5071                           	callstack 0
  5072   005CF0                     ___flneg:
  5073                           	callstack 25
  5074   005CF0  5001               	movf	___flneg@f1^0,w,c
  5075   005CF2  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5076   005CF4  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5077   005CF6  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5078   005CF8  B4D8               	btfsc	status,2,c
  5079   005CFA  EF81  F02E         	goto	u4021
  5080   005CFE  EF83  F02E         	goto	u4020
  5081   005D02                     u4021:
  5082   005D02  EF8B  F02E         	goto	l4415
  5083   005D06                     u4020:
  5084   005D06  0E00               	movlw	0
  5085   005D08  1A01               	xorwf	___flneg@f1^0,f,c
  5086   005D0A  0E00               	movlw	0
  5087   005D0C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5088   005D0E  0E00               	movlw	0
  5089   005D10  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5090   005D12  0E80               	movlw	128
  5091   005D14  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5092   005D16                     l4415:
  5093   005D16  C001  F001         	movff	___flneg@f1,?___flneg
  5094   005D1A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5095   005D1E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5096   005D22  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5097   005D26  0012               	return		;funcret
  5098   005D28                     __end_of___flneg:
  5099                           	callstack 0
  5100                           
  5101 ;; *************** function _dtoa *****************
  5102 ;; Defined at:
  5103 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5106 ;;		 -> sprintf@f(11), 
  5107 ;;  d               8   29[COMRAM] long long 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;  n               8   51[COMRAM] long long 
  5110 ;;  i               2   59[COMRAM] int 
  5111 ;;  w               2   49[COMRAM] int 
  5112 ;;  p               2   47[COMRAM] int 
  5113 ;;  s               1   61[COMRAM] unsigned char 
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5123 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5124 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5125 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5126 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5127 ;;Total ram usage:       35 bytes
  5128 ;; Hardware stack levels used: 1
  5129 ;; Hardware stack levels required when called: 5
  5130 ;; This function calls:
  5131 ;;		___aodiv
  5132 ;;		___aomod
  5133 ;;		_abs
  5134 ;;		_pad
  5135 ;; This function is called by:
  5136 ;;		_vfpfcnvrt
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           	psect	text12
  5141   003DCE                     __ptext12:
  5142                           	callstack 0
  5143   003DCE                     _dtoa:
  5144                           	callstack 22
  5145   003DCE                     
  5146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5147   003DCE  C01E  F034         	movff	dtoa@d,dtoa@n
  5148   003DD2  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5149   003DD6  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5150   003DDA  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5151   003DDE  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5152   003DE2  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5153   003DE6  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5154   003DEA  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5155   003DEE                     
  5156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5157   003DEE  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5158   003DF0  EFFC  F01E         	goto	u4451
  5159   003DF4  EFFF  F01E         	goto	u4450
  5160   003DF8                     u4451:
  5161   003DF8  0E01               	movlw	1
  5162   003DFA  EF00  F01F         	goto	u4460
  5163   003DFE                     u4450:
  5164   003DFE  0E00               	movlw	0
  5165   003E00                     u4460:
  5166   003E00  6E3E               	movwf	dtoa@s^0,c
  5167   003E02                     
  5168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5169   003E02  503E               	movf	dtoa@s^0,w,c
  5170   003E04  B4D8               	btfsc	status,2,c
  5171   003E06  EF07  F01F         	goto	u4471
  5172   003E0A  EF09  F01F         	goto	u4470
  5173   003E0E                     u4471:
  5174   003E0E  EF19  F01F         	goto	l4633
  5175   003E12                     u4470:
  5176   003E12                     
  5177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5178   003E12  1E3B               	comf	(dtoa@n+7)^0,f,c
  5179   003E14  1E3A               	comf	(dtoa@n+6)^0,f,c
  5180   003E16  1E39               	comf	(dtoa@n+5)^0,f,c
  5181   003E18  1E38               	comf	(dtoa@n+4)^0,f,c
  5182   003E1A  1E37               	comf	(dtoa@n+3)^0,f,c
  5183   003E1C  1E36               	comf	(dtoa@n+2)^0,f,c
  5184   003E1E  1E35               	comf	(dtoa@n+1)^0,f,c
  5185   003E20  6C34               	negf	dtoa@n^0,c
  5186   003E22  0E00               	movlw	0
  5187   003E24  2235               	addwfc	(dtoa@n+1)^0,f,c
  5188   003E26  2236               	addwfc	(dtoa@n+2)^0,f,c
  5189   003E28  2237               	addwfc	(dtoa@n+3)^0,f,c
  5190   003E2A  2238               	addwfc	(dtoa@n+4)^0,f,c
  5191   003E2C  2239               	addwfc	(dtoa@n+5)^0,f,c
  5192   003E2E  223A               	addwfc	(dtoa@n+6)^0,f,c
  5193   003E30  223B               	addwfc	(dtoa@n+7)^0,f,c
  5194   003E32                     l4633:
  5195                           
  5196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5197   003E32  0100               	movlb	0	; () banked
  5198   003E34  BFE8               	btfsc	(_prec+1)& (0+255),7,b
  5199   003E36  EF27  F01F         	goto	u4480
  5200   003E3A  51E8               	movf	(_prec+1)& (0+255),w,b
  5201   003E3C  E106               	bnz	u4481
  5202   003E3E  05E7               	decf	_prec& (0+255),w,b
  5203   003E40  B0D8               	btfsc	status,0,c
  5204   003E42  EF25  F01F         	goto	u4481
  5205   003E46  EF27  F01F         	goto	u4480
  5206   003E4A                     u4481:
  5207   003E4A  EF2D  F01F         	goto	l1397
  5208   003E4E                     u4480:
  5209   003E4E                     
  5210                           ; BSR set to: 0
  5211   003E4E  0E00               	movlw	0
  5212   003E50  6E31               	movwf	(dtoa@p+1)^0,c
  5213   003E52  0E01               	movlw	1
  5214   003E54  6E30               	movwf	dtoa@p^0,c
  5215   003E56  EF31  F01F         	goto	l1399
  5216   003E5A                     l1397:
  5217                           
  5218                           ; BSR set to: 0
  5219   003E5A  C0E7  F030         	movff	_prec,dtoa@p
  5220   003E5E  C0E8  F031         	movff	_prec+1,dtoa@p+1
  5221   003E62                     l1399:
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5225   003E62  C0E5  F032         	movff	_width,dtoa@w
  5226   003E66  C0E6  F033         	movff	_width+1,dtoa@w+1
  5227   003E6A                     
  5228                           ; BSR set to: 0
  5229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5230   003E6A  503E               	movf	dtoa@s^0,w,c
  5231   003E6C  B4D8               	btfsc	status,2,c
  5232   003E6E  EF3B  F01F         	goto	u4491
  5233   003E72  EF3D  F01F         	goto	u4490
  5234   003E76                     u4491:
  5235   003E76  EF54  F01F         	goto	l1400
  5236   003E7A                     u4490:
  5237   003E7A                     
  5238                           ; BSR set to: 0
  5239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5240   003E7A  0632               	decf	dtoa@w^0,f,c
  5241   003E7C  A0D8               	btfss	status,0,c
  5242   003E7E  0633               	decf	(dtoa@w+1)^0,f,c
  5243   003E80                     
  5244                           ; BSR set to: 0
  5245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5246   003E80  503E               	movf	dtoa@s^0,w,c
  5247   003E82  A4D8               	btfss	status,2,c
  5248   003E84  EF46  F01F         	goto	u4501
  5249   003E88  EF48  F01F         	goto	u4500
  5250   003E8C                     u4501:
  5251   003E8C  EF4E  F01F         	goto	l4645
  5252   003E90                     u4500:
  5253   003E90                     
  5254                           ; BSR set to: 0
  5255   003E90  0E00               	movlw	0
  5256   003E92  6E2F               	movwf	(_dtoa$2546+1)^0,c
  5257   003E94  0E2B               	movlw	43
  5258   003E96  6E2E               	movwf	_dtoa$2546^0,c
  5259   003E98  EF52  F01F         	goto	l4647
  5260   003E9C                     l4645:
  5261                           
  5262                           ; BSR set to: 0
  5263   003E9C  0E00               	movlw	0
  5264   003E9E  6E2F               	movwf	(_dtoa$2546+1)^0,c
  5265   003EA0  0E2D               	movlw	45
  5266   003EA2  6E2E               	movwf	_dtoa$2546^0,c
  5267   003EA4                     l4647:
  5268                           
  5269                           ; BSR set to: 0
  5270   003EA4  C02E  F03E         	movff	_dtoa$2546,dtoa@s
  5271   003EA8                     l1400:
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5275   003EA8  0E00               	movlw	0
  5276   003EAA  6E3D               	movwf	(dtoa@i+1)^0,c
  5277   003EAC  0E4F               	movlw	79
  5278   003EAE  6E3C               	movwf	dtoa@i^0,c
  5279   003EB0                     
  5280                           ; BSR set to: 0
  5281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5282   003EB0  0E00               	movlw	0
  5283   003EB2  0101               	movlb	1	; () banked
  5284   003EB4  6F65               	movwf	(_dbuf+79)& (0+255),b
  5285                           
  5286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5287   003EB6  EFD9  F01F         	goto	l4661
  5288   003EBA                     l4651:
  5289                           
  5290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5291   003EBA  063C               	decf	dtoa@i^0,f,c
  5292   003EBC  A0D8               	btfss	status,0,c
  5293   003EBE  063D               	decf	(dtoa@i+1)^0,f,c
  5294   003EC0                     
  5295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5296   003EC0  0E16               	movlw	low _dbuf
  5297   003EC2  243C               	addwf	dtoa@i^0,w,c
  5298   003EC4  6ED9               	movwf	fsr2l,c
  5299   003EC6  0E01               	movlw	high _dbuf
  5300   003EC8  203D               	addwfc	(dtoa@i+1)^0,w,c
  5301   003ECA  6EDA               	movwf	fsr2h,c
  5302   003ECC  C034  F001         	movff	dtoa@n,___aomod@dividend
  5303   003ED0  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5304   003ED4  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5305   003ED8  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5306   003EDC  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5307   003EE0  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5308   003EE4  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5309   003EE8  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5310   003EEC  0E0A               	movlw	10
  5311   003EEE  6E09               	movwf	___aomod@divisor^0,c
  5312   003EF0  0E00               	movlw	0
  5313   003EF2  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5314   003EF4  0E00               	movlw	0
  5315   003EF6  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5316   003EF8  0E00               	movlw	0
  5317   003EFA  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5318   003EFC  0E00               	movlw	0
  5319   003EFE  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5320   003F00  0E00               	movlw	0
  5321   003F02  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5322   003F04  0E00               	movlw	0
  5323   003F06  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5324   003F08  0E00               	movlw	0
  5325   003F0A  6E10               	movwf	(___aomod@divisor+7)^0,c
  5326   003F0C  EC83  F023         	call	___aomod	;wreg free
  5327   003F10  C001  F026         	movff	?___aomod,??_dtoa
  5328   003F14  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5329   003F18  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5330   003F1C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5331   003F20  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5332   003F24  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5333   003F28  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5334   003F2C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5335   003F30  C026  F013         	movff	??_dtoa,abs@a
  5336   003F34  C027  F014         	movff	??_dtoa+1,abs@a+1
  5337   003F38  EC1A  F02E         	call	_abs	;wreg free
  5338   003F3C  5013               	movf	?_abs^0,w,c
  5339   003F3E  0F30               	addlw	48
  5340   003F40  6EDF               	movwf	indf2,c
  5341   003F42                     
  5342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5343   003F42  0630               	decf	dtoa@p^0,f,c
  5344   003F44  A0D8               	btfss	status,0,c
  5345   003F46  0631               	decf	(dtoa@p+1)^0,f,c
  5346   003F48                     
  5347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5348   003F48  0632               	decf	dtoa@w^0,f,c
  5349   003F4A  A0D8               	btfss	status,0,c
  5350   003F4C  0633               	decf	(dtoa@w+1)^0,f,c
  5351   003F4E                     
  5352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5353   003F4E  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5354   003F52  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5355   003F56  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5356   003F5A  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5357   003F5E  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5358   003F62  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5359   003F66  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5360   003F6A  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5361   003F6E  0E0A               	movlw	10
  5362   003F70  6E09               	movwf	___aodiv@divisor^0,c
  5363   003F72  0E00               	movlw	0
  5364   003F74  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5365   003F76  0E00               	movlw	0
  5366   003F78  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5367   003F7A  0E00               	movlw	0
  5368   003F7C  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5369   003F7E  0E00               	movlw	0
  5370   003F80  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5371   003F82  0E00               	movlw	0
  5372   003F84  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5373   003F86  0E00               	movlw	0
  5374   003F88  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5375   003F8A  0E00               	movlw	0
  5376   003F8C  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5377   003F8E  EC09  F022         	call	___aodiv	;wreg free
  5378   003F92  C001  F034         	movff	?___aodiv,dtoa@n
  5379   003F96  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5380   003F9A  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5381   003F9E  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5382   003FA2  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5383   003FA6  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5384   003FAA  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5385   003FAE  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5386   003FB2                     l4661:
  5387                           
  5388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5389   003FB2  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5390   003FB4  EFE4  F01F         	goto	u4511
  5391   003FB8  503D               	movf	(dtoa@i+1)^0,w,c
  5392   003FBA  E108               	bnz	u4510
  5393   003FBC  043C               	decf	dtoa@i^0,w,c
  5394   003FBE  A0D8               	btfss	status,0,c
  5395   003FC0  EFE4  F01F         	goto	u4511
  5396   003FC4  EFE6  F01F         	goto	u4510
  5397   003FC8                     u4511:
  5398   003FC8  EF02  F020         	goto	l4667
  5399   003FCC                     u4510:
  5400   003FCC  5034               	movf	dtoa@n^0,w,c
  5401   003FCE  1035               	iorwf	(dtoa@n+1)^0,w,c
  5402   003FD0  1036               	iorwf	(dtoa@n+2)^0,w,c
  5403   003FD2  1037               	iorwf	(dtoa@n+3)^0,w,c
  5404   003FD4  1038               	iorwf	(dtoa@n+4)^0,w,c
  5405   003FD6  1039               	iorwf	(dtoa@n+5)^0,w,c
  5406   003FD8  103A               	iorwf	(dtoa@n+6)^0,w,c
  5407   003FDA  103B               	iorwf	(dtoa@n+7)^0,w,c
  5408   003FDC  A4D8               	btfss	status,2,c
  5409   003FDE  EFF3  F01F         	goto	u4521
  5410   003FE2  EFF5  F01F         	goto	u4520
  5411   003FE6                     u4521:
  5412   003FE6  EF5D  F01F         	goto	l4651
  5413   003FEA                     u4520:
  5414   003FEA  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5415   003FEC  EF02  F020         	goto	u4530
  5416   003FF0  5031               	movf	(dtoa@p+1)^0,w,c
  5417   003FF2  E106               	bnz	u4531
  5418   003FF4  0430               	decf	dtoa@p^0,w,c
  5419   003FF6  B0D8               	btfsc	status,0,c
  5420   003FF8  EF00  F020         	goto	u4531
  5421   003FFC  EF02  F020         	goto	u4530
  5422   004000                     u4531:
  5423   004000  EF5D  F01F         	goto	l4651
  5424   004004                     u4530:
  5425   004004                     l4667:
  5426                           
  5427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5428   004004  503E               	movf	dtoa@s^0,w,c
  5429   004006  B4D8               	btfsc	status,2,c
  5430   004008  EF08  F020         	goto	u4541
  5431   00400C  EF0A  F020         	goto	u4540
  5432   004010                     u4541:
  5433   004010  EF15  F020         	goto	l4673
  5434   004014                     u4540:
  5435   004014                     
  5436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5437   004014  063C               	decf	dtoa@i^0,f,c
  5438   004016  A0D8               	btfss	status,0,c
  5439   004018  063D               	decf	(dtoa@i+1)^0,f,c
  5440   00401A                     
  5441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5442   00401A  0E16               	movlw	low _dbuf
  5443   00401C  243C               	addwf	dtoa@i^0,w,c
  5444   00401E  6ED9               	movwf	fsr2l,c
  5445   004020  0E01               	movlw	high _dbuf
  5446   004022  203D               	addwfc	(dtoa@i+1)^0,w,c
  5447   004024  6EDA               	movwf	fsr2h,c
  5448   004026  C03E  FFDF         	movff	dtoa@s,indf2
  5449   00402A                     l4673:
  5450                           
  5451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5452   00402A  C01C  F011         	movff	dtoa@fp,pad@fp
  5453   00402E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5454   004032  0E16               	movlw	low _dbuf
  5455   004034  243C               	addwf	dtoa@i^0,w,c
  5456   004036  6E13               	movwf	pad@buf^0,c
  5457   004038  0E01               	movlw	high _dbuf
  5458   00403A  203D               	addwfc	(dtoa@i+1)^0,w,c
  5459   00403C  6E14               	movwf	(pad@buf+1)^0,c
  5460   00403E  C032  F015         	movff	dtoa@w,pad@p
  5461   004042  C033  F016         	movff	dtoa@w+1,pad@p+1
  5462   004046  EC3D  F029         	call	_pad	;wreg free
  5463   00404A  0012               	return		;funcret
  5464   00404C                     __end_of_dtoa:
  5465                           	callstack 0
  5466                           
  5467 ;; *************** function _pad *****************
  5468 ;; Defined at:
  5469 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5472 ;;		 -> sprintf@f(11), 
  5473 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5474 ;;		 -> dbuf(80), 
  5475 ;;  p               2   20[COMRAM] int 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  w               2   25[COMRAM] int 
  5478 ;;  i               2   23[COMRAM] int 
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      void 
  5481 ;; Registers used:
  5482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5488 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5489 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5490 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5491 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5492 ;;Total ram usage:       11 bytes
  5493 ;; Hardware stack levels used: 1
  5494 ;; Hardware stack levels required when called: 4
  5495 ;; This function calls:
  5496 ;;		_fputc
  5497 ;;		_fputs
  5498 ;; This function is called by:
  5499 ;;		_dtoa
  5500 ;;		_efgtoa
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           	psect	text13
  5505   00527A                     __ptext13:
  5506                           	callstack 0
  5507   00527A                     _pad:
  5508                           	callstack 22
  5509   00527A                     
  5510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5511   00527A  BE16               	btfsc	(pad@p+1)^0,7,c
  5512   00527C  EF42  F029         	goto	u4101
  5513   005280  EF44  F029         	goto	u4100
  5514   005284                     u4101:
  5515   005284  EF4A  F029         	goto	l4467
  5516   005288                     u4100:
  5517   005288  C015  F01A         	movff	pad@p,pad@w
  5518   00528C  C016  F01B         	movff	pad@p+1,pad@w+1
  5519   005290  EF4E  F029         	goto	l1388
  5520   005294                     l4467:
  5521   005294  0E00               	movlw	0
  5522   005296  6E1B               	movwf	(pad@w+1)^0,c
  5523   005298  0E00               	movlw	0
  5524   00529A  6E1A               	movwf	pad@w^0,c
  5525   00529C                     l1388:
  5526                           
  5527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5528   00529C  0E00               	movlw	0
  5529   00529E  6E19               	movwf	(pad@i+1)^0,c
  5530   0052A0  0E00               	movlw	0
  5531   0052A2  6E18               	movwf	pad@i^0,c
  5532                           
  5533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5534   0052A4  EF60  F029         	goto	l4473
  5535   0052A8                     l4469:
  5536                           
  5537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5538   0052A8  0E00               	movlw	0
  5539   0052AA  6E02               	movwf	(fputc@c+1)^0,c
  5540   0052AC  0E20               	movlw	32
  5541   0052AE  6E01               	movwf	fputc@c^0,c
  5542   0052B0  C011  F003         	movff	pad@fp,fputc@fp
  5543   0052B4  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5544   0052B8  ECB9  F025         	call	_fputc	;wreg free
  5545   0052BC                     
  5546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5547   0052BC  4A18               	infsnz	pad@i^0,f,c
  5548   0052BE  2A19               	incf	(pad@i+1)^0,f,c
  5549   0052C0                     l4473:
  5550                           
  5551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5552   0052C0  501A               	movf	pad@w^0,w,c
  5553   0052C2  5C18               	subwf	pad@i^0,w,c
  5554   0052C4  5019               	movf	(pad@i+1)^0,w,c
  5555   0052C6  0A80               	xorlw	128
  5556   0052C8  6E17               	movwf	??_pad^0,c
  5557   0052CA  501B               	movf	(pad@w+1)^0,w,c
  5558   0052CC  0A80               	xorlw	128
  5559   0052CE  5817               	subwfb	??_pad^0,w,c
  5560   0052D0  A0D8               	btfss	status,0,c
  5561   0052D2  EF6D  F029         	goto	u4111
  5562   0052D6  EF6F  F029         	goto	u4110
  5563   0052DA                     u4111:
  5564   0052DA  EF54  F029         	goto	l4469
  5565   0052DE                     u4110:
  5566   0052DE                     
  5567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5568   0052DE  C013  F00A         	movff	pad@buf,fputs@s
  5569   0052E2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5570   0052E6  C011  F00C         	movff	pad@fp,fputs@fp
  5571   0052EA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5572   0052EE  ECD7  F02D         	call	_fputs	;wreg free
  5573   0052F2  0012               	return		;funcret
  5574   0052F4                     __end_of_pad:
  5575                           	callstack 0
  5576                           
  5577 ;; *************** function _fputs *****************
  5578 ;; Defined at:
  5579 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5582 ;;		 -> dbuf(80), 
  5583 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5584 ;;		 -> sprintf@f(11), 
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;  i               2   14[COMRAM] int 
  5587 ;;  c               1   13[COMRAM] unsigned char 
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  2    9[COMRAM] int 
  5590 ;; Registers used:
  5591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5597 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5598 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5600 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5601 ;;Total ram usage:        7 bytes
  5602 ;; Hardware stack levels used: 1
  5603 ;; Hardware stack levels required when called: 3
  5604 ;; This function calls:
  5605 ;;		_fputc
  5606 ;; This function is called by:
  5607 ;;		_pad
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text14
  5612   005BAE                     __ptext14:
  5613                           	callstack 0
  5614   005BAE                     _fputs:
  5615                           	callstack 22
  5616   005BAE  0E00               	movlw	0
  5617   005BB0  6E10               	movwf	(fputs@i+1)^0,c
  5618   005BB2  0E00               	movlw	0
  5619   005BB4  6E0F               	movwf	fputs@i^0,c
  5620   005BB6  EFE8  F02D         	goto	l4001
  5621   005BBA                     l3997:
  5622   005BBA  C00E  F001         	movff	fputs@c,fputc@c
  5623   005BBE  6A02               	clrf	(fputc@c+1)^0,c
  5624   005BC0  C00C  F003         	movff	fputs@fp,fputc@fp
  5625   005BC4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5626   005BC8  ECB9  F025         	call	_fputc	;wreg free
  5627   005BCC  4A0F               	infsnz	fputs@i^0,f,c
  5628   005BCE  2A10               	incf	(fputs@i+1)^0,f,c
  5629   005BD0                     l4001:
  5630   005BD0  500F               	movf	fputs@i^0,w,c
  5631   005BD2  240A               	addwf	fputs@s^0,w,c
  5632   005BD4  6ED9               	movwf	fsr2l,c
  5633   005BD6  5010               	movf	(fputs@i+1)^0,w,c
  5634   005BD8  200B               	addwfc	(fputs@s+1)^0,w,c
  5635   005BDA  6EDA               	movwf	fsr2h,c
  5636   005BDC  50DF               	movf	indf2,w,c
  5637   005BDE  6E0E               	movwf	fputs@c^0,c
  5638   005BE0  500E               	movf	fputs@c^0,w,c
  5639   005BE2  A4D8               	btfss	status,2,c
  5640   005BE4  EFF6  F02D         	goto	u3361
  5641   005BE8  EFF8  F02D         	goto	u3360
  5642   005BEC                     u3361:
  5643   005BEC  EFDD  F02D         	goto	l3997
  5644   005BF0                     u3360:
  5645   005BF0  0012               	return		;funcret
  5646   005BF2                     __end_of_fputs:
  5647                           	callstack 0
  5648                           
  5649 ;; *************** function _fputc *****************
  5650 ;; Defined at:
  5651 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;  c               2    0[COMRAM] int 
  5654 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5655 ;;		 -> sprintf@f(11), 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;		None
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  2    0[COMRAM] int 
  5660 ;; Registers used:
  5661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5667 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5669 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5670 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5671 ;;Total ram usage:        9 bytes
  5672 ;; Hardware stack levels used: 1
  5673 ;; Hardware stack levels required when called: 2
  5674 ;; This function calls:
  5675 ;;		_putch
  5676 ;; This function is called by:
  5677 ;;		_pad
  5678 ;;		_vfpfcnvrt
  5679 ;;		_fputs
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	text15
  5684   004B72                     __ptext15:
  5685                           	callstack 0
  5686   004B72                     _fputc:
  5687                           	callstack 25
  5688   004B72  5003               	movf	fputc@fp^0,w,c
  5689   004B74  1004               	iorwf	(fputc@fp+1)^0,w,c
  5690   004B76  B4D8               	btfsc	status,2,c
  5691   004B78  EFC0  F025         	goto	u2901
  5692   004B7C  EFC2  F025         	goto	u2900
  5693   004B80                     u2901:
  5694   004B80  EFCB  F025         	goto	l3755
  5695   004B84                     u2900:
  5696   004B84  5003               	movf	fputc@fp^0,w,c
  5697   004B86  1004               	iorwf	(fputc@fp+1)^0,w,c
  5698   004B88  A4D8               	btfss	status,2,c
  5699   004B8A  EFC9  F025         	goto	u2911
  5700   004B8E  EFCB  F025         	goto	u2910
  5701   004B92                     u2911:
  5702   004B92  EFD0  F025         	goto	l3757
  5703   004B96                     u2910:
  5704   004B96                     l3755:
  5705   004B96  5001               	movf	fputc@c^0,w,c
  5706   004B98  EC81  F02F         	call	_putch
  5707   004B9C  EF1D  F026         	goto	l1548
  5708   004BA0                     l3757:
  5709   004BA0  EE20 F009          	lfsr	2,9
  5710   004BA4  5003               	movf	fputc@fp^0,w,c
  5711   004BA6  26D9               	addwf	fsr2l,f,c
  5712   004BA8  5004               	movf	(fputc@fp+1)^0,w,c
  5713   004BAA  22DA               	addwfc	fsr2h,f,c
  5714   004BAC  50DE               	movf	postinc2,w,c
  5715   004BAE  10DE               	iorwf	postinc2,w,c
  5716   004BB0  B4D8               	btfsc	status,2,c
  5717   004BB2  EFDD  F025         	goto	u2921
  5718   004BB6  EFDF  F025         	goto	u2920
  5719   004BBA                     u2921:
  5720   004BBA  EFFA  F025         	goto	l3761
  5721   004BBE                     u2920:
  5722   004BBE  EE20 F009          	lfsr	2,9
  5723   004BC2  5003               	movf	fputc@fp^0,w,c
  5724   004BC4  26D9               	addwf	fsr2l,f,c
  5725   004BC6  5004               	movf	(fputc@fp+1)^0,w,c
  5726   004BC8  22DA               	addwfc	fsr2h,f,c
  5727   004BCA  EE10 F003          	lfsr	1,3
  5728   004BCE  5003               	movf	fputc@fp^0,w,c
  5729   004BD0  26E1               	addwf	fsr1l,f,c
  5730   004BD2  5004               	movf	(fputc@fp+1)^0,w,c
  5731   004BD4  22E2               	addwfc	fsr1h,f,c
  5732   004BD6  50DE               	movf	postinc2,w,c
  5733   004BD8  5CE6               	subwf	postinc1,w,c
  5734   004BDA  50E6               	movf	postinc1,w,c
  5735   004BDC  0A80               	xorlw	128
  5736   004BDE  6E09               	movwf	(??_fputc+4)^0,c
  5737   004BE0  50DE               	movf	postinc2,w,c
  5738   004BE2  0A80               	xorlw	128
  5739   004BE4  5809               	subwfb	(??_fputc+4)^0,w,c
  5740   004BE6  B0D8               	btfsc	status,0,c
  5741   004BE8  EFF8  F025         	goto	u2931
  5742   004BEC  EFFA  F025         	goto	u2930
  5743   004BF0                     u2931:
  5744   004BF0  EF1D  F026         	goto	l1548
  5745   004BF4                     u2930:
  5746   004BF4                     l3761:
  5747   004BF4  EE20 F003          	lfsr	2,3
  5748   004BF8  5003               	movf	fputc@fp^0,w,c
  5749   004BFA  26D9               	addwf	fsr2l,f,c
  5750   004BFC  5004               	movf	(fputc@fp+1)^0,w,c
  5751   004BFE  22DA               	addwfc	fsr2h,f,c
  5752   004C00  CFDE F005          	movff	postinc2,??_fputc
  5753   004C04  CFDD F006          	movff	postdec2,??_fputc+1
  5754   004C08  C003  FFD9         	movff	fputc@fp,fsr2l
  5755   004C0C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5756   004C10  CFDE F007          	movff	postinc2,??_fputc+2
  5757   004C14  CFDD F008          	movff	postdec2,??_fputc+3
  5758   004C18  5005               	movf	??_fputc^0,w,c
  5759   004C1A  2407               	addwf	(??_fputc+2)^0,w,c
  5760   004C1C  6ED9               	movwf	fsr2l,c
  5761   004C1E  5006               	movf	(??_fputc+1)^0,w,c
  5762   004C20  2008               	addwfc	(??_fputc+3)^0,w,c
  5763   004C22  6EDA               	movwf	fsr2h,c
  5764   004C24  C001  FFDF         	movff	fputc@c,indf2
  5765   004C28  EE20 F003          	lfsr	2,3
  5766   004C2C  5003               	movf	fputc@fp^0,w,c
  5767   004C2E  26D9               	addwf	fsr2l,f,c
  5768   004C30  5004               	movf	(fputc@fp+1)^0,w,c
  5769   004C32  22DA               	addwfc	fsr2h,f,c
  5770   004C34  2ADE               	incf	postinc2,f,c
  5771   004C36  0E00               	movlw	0
  5772   004C38  22DD               	addwfc	postdec2,f,c
  5773   004C3A                     l1548:
  5774   004C3A  0012               	return		;funcret
  5775   004C3C                     __end_of_fputc:
  5776                           	callstack 0
  5777                           
  5778 ;; *************** function _putch *****************
  5779 ;; Defined at:
  5780 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  c               1    wreg     unsigned char 
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;  c               1    0[COMRAM] unsigned char 
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  1    wreg      void 
  5787 ;; Registers used:
  5788 ;;		wreg
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5798 ;;Total ram usage:        0 bytes
  5799 ;; Hardware stack levels used: 1
  5800 ;; Hardware stack levels required when called: 1
  5801 ;; This function calls:
  5802 ;;		Nothing
  5803 ;; This function is called by:
  5804 ;;		_fputc
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           
  5808                           	psect	text16
  5809   005F02                     __ptext16:
  5810                           	callstack 0
  5811   005F02                     _putch:
  5812                           	callstack 25
  5813   005F02  0012               	return		;funcret
  5814   005F04                     __end_of_putch:
  5815                           	callstack 0
  5816                           
  5817 ;; *************** function _abs *****************
  5818 ;; Defined at:
  5819 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;  a               2   18[COMRAM] int 
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;		None
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  2   18[COMRAM] int 
  5826 ;; Registers used:
  5827 ;;		wreg, status,2, status,0
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5835 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5836 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5837 ;;Total ram usage:        4 bytes
  5838 ;; Hardware stack levels used: 1
  5839 ;; Hardware stack levels required when called: 1
  5840 ;; This function calls:
  5841 ;;		Nothing
  5842 ;; This function is called by:
  5843 ;;		_dtoa
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text17
  5848   005C34                     __ptext17:
  5849                           	callstack 0
  5850   005C34                     _abs:
  5851                           	callstack 25
  5852   005C34  BE14               	btfsc	(abs@a+1)^0,7,c
  5853   005C36  EF27  F02E         	goto	u4120
  5854   005C3A  5014               	movf	(abs@a+1)^0,w,c
  5855   005C3C  E106               	bnz	u4121
  5856   005C3E  0413               	decf	abs@a^0,w,c
  5857   005C40  B0D8               	btfsc	status,0,c
  5858   005C42  EF25  F02E         	goto	u4121
  5859   005C46  EF27  F02E         	goto	u4120
  5860   005C4A                     u4121:
  5861   005C4A  EF35  F02E         	goto	l1507
  5862   005C4E                     u4120:
  5863   005C4E  C013  F015         	movff	abs@a,??_abs
  5864   005C52  C014  F016         	movff	abs@a+1,??_abs+1
  5865   005C56  1E15               	comf	??_abs^0,f,c
  5866   005C58  1E16               	comf	(??_abs+1)^0,f,c
  5867   005C5A  4A15               	infsnz	??_abs^0,f,c
  5868   005C5C  2A16               	incf	(??_abs+1)^0,f,c
  5869   005C5E  C015  F013         	movff	??_abs,?_abs
  5870   005C62  C016  F014         	movff	??_abs+1,?_abs+1
  5871   005C66  EF39  F02E         	goto	l1510
  5872   005C6A                     l1507:
  5873   005C6A  C013  F013         	movff	abs@a,?_abs
  5874   005C6E  C014  F014         	movff	abs@a+1,?_abs+1
  5875   005C72                     l1510:
  5876   005C72  0012               	return		;funcret
  5877   005C74                     __end_of_abs:
  5878                           	callstack 0
  5879                           
  5880 ;; *************** function ___aomod *****************
  5881 ;; Defined at:
  5882 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  dividend        8    0[COMRAM] long long 
  5885 ;;  divisor         8    8[COMRAM] long long 
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  sign            1   17[COMRAM] unsigned char 
  5888 ;;  counter         1   16[COMRAM] unsigned char 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  8    0[COMRAM] long long 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5898 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5899 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5901 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5902 ;;Total ram usage:       18 bytes
  5903 ;; Hardware stack levels used: 1
  5904 ;; Hardware stack levels required when called: 1
  5905 ;; This function calls:
  5906 ;;		Nothing
  5907 ;; This function is called by:
  5908 ;;		_dtoa
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           	psect	text18
  5913   004706                     __ptext18:
  5914                           	callstack 0
  5915   004706                     ___aomod:
  5916                           	callstack 25
  5917   004706  0E00               	movlw	0
  5918   004708  6E12               	movwf	___aomod@sign^0,c
  5919   00470A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5920   00470C  EF8C  F023         	goto	u3460
  5921   004710  EF8A  F023         	goto	u3461
  5922   004714                     u3461:
  5923   004714  EF9E  F023         	goto	l4071
  5924   004718                     u3460:
  5925   004718  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5926   00471A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5927   00471C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5928   00471E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5929   004720  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5930   004722  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5931   004724  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5932   004726  6C01               	negf	___aomod@dividend^0,c
  5933   004728  0E00               	movlw	0
  5934   00472A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5935   00472C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5936   00472E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5937   004730  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5938   004732  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5939   004734  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5940   004736  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5941   004738  0E01               	movlw	1
  5942   00473A  6E12               	movwf	___aomod@sign^0,c
  5943   00473C                     l4071:
  5944   00473C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5945   00473E  EFA5  F023         	goto	u3470
  5946   004742  EFA3  F023         	goto	u3471
  5947   004746                     u3471:
  5948   004746  EFB5  F023         	goto	l4075
  5949   00474A                     u3470:
  5950   00474A  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5951   00474C  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5952   00474E  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5953   004750  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5954   004752  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5955   004754  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5956   004756  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5957   004758  6C09               	negf	___aomod@divisor^0,c
  5958   00475A  0E00               	movlw	0
  5959   00475C  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5960   00475E  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5961   004760  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5962   004762  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5963   004764  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5964   004766  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5965   004768  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5966   00476A                     l4075:
  5967   00476A  5009               	movf	___aomod@divisor^0,w,c
  5968   00476C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5969   00476E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5970   004770  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5971   004772  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5972   004774  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5973   004776  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5974   004778  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5975   00477A  B4D8               	btfsc	status,2,c
  5976   00477C  EFC2  F023         	goto	u3481
  5977   004780  EFC4  F023         	goto	u3480
  5978   004784                     u3481:
  5979   004784  EF0C  F024         	goto	l4091
  5980   004788                     u3480:
  5981   004788  0E01               	movlw	1
  5982   00478A  6E11               	movwf	___aomod@counter^0,c
  5983   00478C  EFD2  F023         	goto	l4081
  5984   004790                     l4079:
  5985   004790  90D8               	bcf	status,0,c
  5986   004792  3609               	rlcf	___aomod@divisor^0,f,c
  5987   004794  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5988   004796  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5989   004798  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5990   00479A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5991   00479C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5992   00479E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5993   0047A0  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5994   0047A2  2A11               	incf	___aomod@counter^0,f,c
  5995   0047A4                     l4081:
  5996   0047A4  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5997   0047A6  EFD7  F023         	goto	u3491
  5998   0047AA  EFD9  F023         	goto	u3490
  5999   0047AE                     u3491:
  6000   0047AE  EFC8  F023         	goto	l4079
  6001   0047B2                     u3490:
  6002   0047B2                     l4083:
  6003   0047B2  5009               	movf	___aomod@divisor^0,w,c
  6004   0047B4  5C01               	subwf	___aomod@dividend^0,w,c
  6005   0047B6  500A               	movf	(___aomod@divisor+1)^0,w,c
  6006   0047B8  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6007   0047BA  500B               	movf	(___aomod@divisor+2)^0,w,c
  6008   0047BC  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6009   0047BE  500C               	movf	(___aomod@divisor+3)^0,w,c
  6010   0047C0  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6011   0047C2  500D               	movf	(___aomod@divisor+4)^0,w,c
  6012   0047C4  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6013   0047C6  500E               	movf	(___aomod@divisor+5)^0,w,c
  6014   0047C8  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6015   0047CA  500F               	movf	(___aomod@divisor+6)^0,w,c
  6016   0047CC  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6017   0047CE  5010               	movf	(___aomod@divisor+7)^0,w,c
  6018   0047D0  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6019   0047D2  A0D8               	btfss	status,0,c
  6020   0047D4  EFEE  F023         	goto	u3501
  6021   0047D8  EFF0  F023         	goto	u3500
  6022   0047DC                     u3501:
  6023   0047DC  EF00  F024         	goto	l4087
  6024   0047E0                     u3500:
  6025   0047E0  5009               	movf	___aomod@divisor^0,w,c
  6026   0047E2  5E01               	subwf	___aomod@dividend^0,f,c
  6027   0047E4  500A               	movf	(___aomod@divisor+1)^0,w,c
  6028   0047E6  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6029   0047E8  500B               	movf	(___aomod@divisor+2)^0,w,c
  6030   0047EA  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6031   0047EC  500C               	movf	(___aomod@divisor+3)^0,w,c
  6032   0047EE  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6033   0047F0  500D               	movf	(___aomod@divisor+4)^0,w,c
  6034   0047F2  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6035   0047F4  500E               	movf	(___aomod@divisor+5)^0,w,c
  6036   0047F6  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6037   0047F8  500F               	movf	(___aomod@divisor+6)^0,w,c
  6038   0047FA  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6039   0047FC  5010               	movf	(___aomod@divisor+7)^0,w,c
  6040   0047FE  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6041   004800                     l4087:
  6042   004800  90D8               	bcf	status,0,c
  6043   004802  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6044   004804  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6045   004806  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6046   004808  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6047   00480A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6048   00480C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6049   00480E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6050   004810  3209               	rrcf	___aomod@divisor^0,f,c
  6051   004812  2E11               	decfsz	___aomod@counter^0,f,c
  6052   004814  EFD9  F023         	goto	l4083
  6053   004818                     l4091:
  6054   004818  5012               	movf	___aomod@sign^0,w,c
  6055   00481A  B4D8               	btfsc	status,2,c
  6056   00481C  EF12  F024         	goto	u3511
  6057   004820  EF14  F024         	goto	u3510
  6058   004824                     u3511:
  6059   004824  EF24  F024         	goto	l4095
  6060   004828                     u3510:
  6061   004828  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6062   00482A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6063   00482C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6064   00482E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6065   004830  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6066   004832  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6067   004834  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6068   004836  6C01               	negf	___aomod@dividend^0,c
  6069   004838  0E00               	movlw	0
  6070   00483A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6071   00483C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6072   00483E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6073   004840  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6074   004842  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6075   004844  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6076   004846  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6077   004848                     l4095:
  6078   004848  C001  F001         	movff	___aomod@dividend,?___aomod
  6079   00484C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6080   004850  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6081   004854  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6082   004858  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6083   00485C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6084   004860  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6085   004864  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6086   004868  0012               	return		;funcret
  6087   00486A                     __end_of___aomod:
  6088                           	callstack 0
  6089                           
  6090 ;; *************** function ___aodiv *****************
  6091 ;; Defined at:
  6092 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;  dividend        8    0[COMRAM] long long 
  6095 ;;  divisor         8    8[COMRAM] long long 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;  quotient        8   18[COMRAM] long long 
  6098 ;;  sign            1   17[COMRAM] unsigned char 
  6099 ;;  counter         1   16[COMRAM] unsigned char 
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  8    0[COMRAM] long long 
  6102 ;; Registers used:
  6103 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6109 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6110 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6112 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6113 ;;Total ram usage:       26 bytes
  6114 ;; Hardware stack levels used: 1
  6115 ;; Hardware stack levels required when called: 1
  6116 ;; This function calls:
  6117 ;;		Nothing
  6118 ;; This function is called by:
  6119 ;;		_dtoa
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123                           	psect	text19
  6124   004412                     __ptext19:
  6125                           	callstack 0
  6126   004412                     ___aodiv:
  6127                           	callstack 25
  6128   004412  0E00               	movlw	0
  6129   004414  6E12               	movwf	___aodiv@sign^0,c
  6130   004416  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6131   004418  EF12  F022         	goto	u3390
  6132   00441C  EF10  F022         	goto	u3391
  6133   004420                     u3391:
  6134   004420  EF24  F022         	goto	l4027
  6135   004424                     u3390:
  6136   004424  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6137   004426  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6138   004428  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6139   00442A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6140   00442C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6141   00442E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6142   004430  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6143   004432  6C09               	negf	___aodiv@divisor^0,c
  6144   004434  0E00               	movlw	0
  6145   004436  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6146   004438  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6147   00443A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6148   00443C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6149   00443E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6150   004440  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6151   004442  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6152   004444  0E01               	movlw	1
  6153   004446  6E12               	movwf	___aodiv@sign^0,c
  6154   004448                     l4027:
  6155   004448  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6156   00444A  EF2B  F022         	goto	u3400
  6157   00444E  EF29  F022         	goto	u3401
  6158   004452                     u3401:
  6159   004452  EF3D  F022         	goto	l4033
  6160   004456                     u3400:
  6161   004456  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6162   004458  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6163   00445A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6164   00445C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6165   00445E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6166   004460  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6167   004462  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6168   004464  6C01               	negf	___aodiv@dividend^0,c
  6169   004466  0E00               	movlw	0
  6170   004468  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6171   00446A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6172   00446C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6173   00446E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6174   004470  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6175   004472  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6176   004474  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6177   004476  0E01               	movlw	1
  6178   004478  1A12               	xorwf	___aodiv@sign^0,f,c
  6179   00447A                     l4033:
  6180   00447A  EE20  F013         	lfsr	2,___aodiv@quotient
  6181   00447E  0E07               	movlw	7
  6182   004480                     u3411:
  6183   004480  6ADE               	clrf	postinc2,c
  6184   004482  06E8               	decf	wreg,f,c
  6185   004484  E2FD               	bc	u3411
  6186   004486  5009               	movf	___aodiv@divisor^0,w,c
  6187   004488  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6188   00448A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6189   00448C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6190   00448E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6191   004490  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6192   004492  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6193   004494  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6194   004496  B4D8               	btfsc	status,2,c
  6195   004498  EF50  F022         	goto	u3421
  6196   00449C  EF52  F022         	goto	u3420
  6197   0044A0                     u3421:
  6198   0044A0  EFA4  F022         	goto	l4055
  6199   0044A4                     u3420:
  6200   0044A4  0E01               	movlw	1
  6201   0044A6  6E11               	movwf	___aodiv@counter^0,c
  6202   0044A8  EF60  F022         	goto	l4041
  6203   0044AC                     l4039:
  6204   0044AC  90D8               	bcf	status,0,c
  6205   0044AE  3609               	rlcf	___aodiv@divisor^0,f,c
  6206   0044B0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6207   0044B2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6208   0044B4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6209   0044B6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6210   0044B8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6211   0044BA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6212   0044BC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6213   0044BE  2A11               	incf	___aodiv@counter^0,f,c
  6214   0044C0                     l4041:
  6215   0044C0  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6216   0044C2  EF65  F022         	goto	u3431
  6217   0044C6  EF67  F022         	goto	u3430
  6218   0044CA                     u3431:
  6219   0044CA  EF56  F022         	goto	l4039
  6220   0044CE                     u3430:
  6221   0044CE                     l4043:
  6222   0044CE  90D8               	bcf	status,0,c
  6223   0044D0  3613               	rlcf	___aodiv@quotient^0,f,c
  6224   0044D2  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6225   0044D4  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6226   0044D6  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6227   0044D8  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6228   0044DA  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6229   0044DC  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6230   0044DE  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6231   0044E0  5009               	movf	___aodiv@divisor^0,w,c
  6232   0044E2  5C01               	subwf	___aodiv@dividend^0,w,c
  6233   0044E4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6234   0044E6  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6235   0044E8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6236   0044EA  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6237   0044EC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6238   0044EE  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6239   0044F0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6240   0044F2  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6241   0044F4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6242   0044F6  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6243   0044F8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6244   0044FA  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6245   0044FC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6246   0044FE  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6247   004500  A0D8               	btfss	status,0,c
  6248   004502  EF85  F022         	goto	u3441
  6249   004506  EF87  F022         	goto	u3440
  6250   00450A                     u3441:
  6251   00450A  EF98  F022         	goto	l4051
  6252   00450E                     u3440:
  6253   00450E  5009               	movf	___aodiv@divisor^0,w,c
  6254   004510  5E01               	subwf	___aodiv@dividend^0,f,c
  6255   004512  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6256   004514  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6257   004516  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6258   004518  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6259   00451A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6260   00451C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6261   00451E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6262   004520  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6263   004522  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6264   004524  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6265   004526  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6266   004528  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6267   00452A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6268   00452C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6269   00452E  8013               	bsf	___aodiv@quotient^0,0,c
  6270   004530                     l4051:
  6271   004530  90D8               	bcf	status,0,c
  6272   004532  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6273   004534  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6274   004536  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6275   004538  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6276   00453A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6277   00453C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6278   00453E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6279   004540  3209               	rrcf	___aodiv@divisor^0,f,c
  6280   004542  2E11               	decfsz	___aodiv@counter^0,f,c
  6281   004544  EF67  F022         	goto	l4043
  6282   004548                     l4055:
  6283   004548  5012               	movf	___aodiv@sign^0,w,c
  6284   00454A  B4D8               	btfsc	status,2,c
  6285   00454C  EFAA  F022         	goto	u3451
  6286   004550  EFAC  F022         	goto	u3450
  6287   004554                     u3451:
  6288   004554  EFBC  F022         	goto	l4059
  6289   004558                     u3450:
  6290   004558  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6291   00455A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6292   00455C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6293   00455E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6294   004560  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6295   004562  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6296   004564  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6297   004566  6C13               	negf	___aodiv@quotient^0,c
  6298   004568  0E00               	movlw	0
  6299   00456A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6300   00456C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6301   00456E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6302   004570  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6303   004572  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6304   004574  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6305   004576  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6306   004578                     l4059:
  6307   004578  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6308   00457C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6309   004580  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6310   004584  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6311   004588  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6312   00458C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6313   004590  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6314   004594  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6315   004598  0012               	return		;funcret
  6316   00459A                     __end_of___aodiv:
  6317                           	callstack 0
  6318                           
  6319 ;; *************** function _sendStringSerial4 *****************
  6320 ;; Defined at:
  6321 ;;		line 33 in file "serial.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  string          2    1[COMRAM] PTR unsigned char 
  6324 ;;		 -> main@buf(100), 
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;		None
  6327 ;; Return value:  Size  Location     Type
  6328 ;;                  1    wreg      void 
  6329 ;; Registers used:
  6330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6331 ;; Tracked objects:
  6332 ;;		On entry : 0/0
  6333 ;;		On exit  : 0/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6340 ;;Total ram usage:        2 bytes
  6341 ;; Hardware stack levels used: 1
  6342 ;; Hardware stack levels required when called: 2
  6343 ;; This function calls:
  6344 ;;		_sendCharSerial4
  6345 ;; This function is called by:
  6346 ;;		_main
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           	psect	text20
  6351   005D60                     __ptext20:
  6352                           	callstack 0
  6353   005D60                     _sendStringSerial4:
  6354                           	callstack 28
  6355   005D60                     
  6356                           ;serial.c: 34:     while (*string!=0){
  6357   005D60  EFBB  F02E         	goto	l5437
  6358   005D64                     l5433:
  6359                           
  6360                           ;serial.c: 35:         sendCharSerial4(*string++);
  6361   005D64  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6362   005D68  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6363   005D6C  50DF               	movf	indf2,w,c
  6364   005D6E  EC5B  F02F         	call	_sendCharSerial4
  6365   005D72  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6366   005D74  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6367   005D76                     l5437:
  6368                           
  6369                           ;serial.c: 34:     while (*string!=0){
  6370   005D76  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6371   005D7A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6372   005D7E  50DF               	movf	indf2,w,c
  6373   005D80  A4D8               	btfss	status,2,c
  6374   005D82  EFC5  F02E         	goto	u5411
  6375   005D86  EFC7  F02E         	goto	u5410
  6376   005D8A                     u5411:
  6377   005D8A  EFB2  F02E         	goto	l5433
  6378   005D8E                     u5410:
  6379   005D8E  0012               	return		;funcret
  6380   005D90                     __end_of_sendStringSerial4:
  6381                           	callstack 0
  6382                           
  6383 ;; *************** function _sendCharSerial4 *****************
  6384 ;; Defined at:
  6385 ;;		line 26 in file "serial.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;  charToSend      1    wreg     unsigned char 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;  charToSend      1    0[COMRAM] unsigned char 
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  1    wreg      void 
  6392 ;; Registers used:
  6393 ;;		wreg
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6402 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6403 ;;Total ram usage:        1 bytes
  6404 ;; Hardware stack levels used: 1
  6405 ;; Hardware stack levels required when called: 1
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_sendStringSerial4
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text21
  6414   005EB6                     __ptext21:
  6415                           	callstack 0
  6416   005EB6                     _sendCharSerial4:
  6417                           	callstack 28
  6418                           
  6419                           ;incstack = 0
  6420                           ;sendCharSerial4@charToSend stored from wreg
  6421   005EB6  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6422   005EB8                     l209:
  6423   005EB8  010E               	movlb	14	; () banked
  6424   005EBA  A537               	btfss	55,2,b	;volatile
  6425   005EBC  EF62  F02F         	goto	u4941
  6426   005EC0  EF64  F02F         	goto	u4940
  6427   005EC4                     u4941:
  6428   005EC4  EF5C  F02F         	goto	l209
  6429   005EC8                     u4940:
  6430   005EC8                     
  6431                           ; BSR set to: 14
  6432                           ;serial.c: 28:     TX4REG = charToSend;
  6433   005EC8  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6434   005ECC                     
  6435                           ; BSR set to: 14
  6436   005ECC  0012               	return		;funcret
  6437   005ECE                     __end_of_sendCharSerial4:
  6438                           	callstack 0
  6439                           
  6440 ;; *************** function _readColours *****************
  6441 ;; Defined at:
  6442 ;;		line 105 in file "color.c"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;  vals            2   11[COMRAM] PTR struct RGB
  6445 ;;		 -> vals(8), 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;		None
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  1    wreg      void 
  6450 ;; Registers used:
  6451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6460 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6461 ;;Total ram usage:        2 bytes
  6462 ;; Hardware stack levels used: 1
  6463 ;; Hardware stack levels required when called: 4
  6464 ;; This function calls:
  6465 ;;		_color_read_Blue
  6466 ;;		_color_read_Green
  6467 ;;		_color_read_Red
  6468 ;;		_color_read_lum
  6469 ;; This function is called by:
  6470 ;;		_main
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text22
  6475   005434                     __ptext22:
  6476                           	callstack 0
  6477   005434                     _readColours:
  6478                           	callstack 26
  6479   005434                     
  6480                           ;color.c: 107:     vals ->R = color_read_Red();
  6481   005434  ECF3  F02C         	call	_color_read_Red	;wreg free
  6482   005438  C00C  FFD9         	movff	readColours@vals,fsr2l
  6483   00543C  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6484   005440  C005  FFDE         	movff	?_color_read_Red,postinc2
  6485   005444  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6486                           
  6487                           ;color.c: 108:     vals ->B = color_read_Blue();
  6488   005448  EC43  F02D         	call	_color_read_Blue	;wreg free
  6489   00544C  EE20 F004          	lfsr	2,4
  6490   005450  500C               	movf	readColours@vals^0,w,c
  6491   005452  26D9               	addwf	fsr2l,f,c
  6492   005454  500D               	movf	(readColours@vals+1)^0,w,c
  6493   005456  22DA               	addwfc	fsr2h,f,c
  6494   005458  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6495   00545C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6496                           
  6497                           ;color.c: 109:     vals ->G = color_read_Green();
  6498   005460  EC1B  F02D         	call	_color_read_Green	;wreg free
  6499   005464  EE20 F002          	lfsr	2,2
  6500   005468  500C               	movf	readColours@vals^0,w,c
  6501   00546A  26D9               	addwf	fsr2l,f,c
  6502   00546C  500D               	movf	(readColours@vals+1)^0,w,c
  6503   00546E  22DA               	addwfc	fsr2h,f,c
  6504   005470  C005  FFDE         	movff	?_color_read_Green,postinc2
  6505   005474  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6506                           
  6507                           ;color.c: 110:     vals ->L = color_read_lum();
  6508   005478  ECCB  F02C         	call	_color_read_lum	;wreg free
  6509   00547C  EE20 F006          	lfsr	2,6
  6510   005480  500C               	movf	readColours@vals^0,w,c
  6511   005482  26D9               	addwf	fsr2l,f,c
  6512   005484  500D               	movf	(readColours@vals+1)^0,w,c
  6513   005486  22DA               	addwfc	fsr2h,f,c
  6514   005488  C005  FFDE         	movff	?_color_read_lum,postinc2
  6515   00548C  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6516   005490  0012               	return		;funcret
  6517   005492                     __end_of_readColours:
  6518                           	callstack 0
  6519                           
  6520 ;; *************** function _color_read_lum *****************
  6521 ;; Defined at:
  6522 ;;		line 49 in file "color.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;		None
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;  tmp             2    9[COMRAM] unsigned int 
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  2    4[COMRAM] unsigned int 
  6529 ;; Registers used:
  6530 ;;		wreg, status,2, status,0, cstack
  6531 ;; Tracked objects:
  6532 ;;		On entry : 0/0
  6533 ;;		On exit  : 0/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6537 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6538 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6539 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6540 ;;Total ram usage:        7 bytes
  6541 ;; Hardware stack levels used: 1
  6542 ;; Hardware stack levels required when called: 3
  6543 ;; This function calls:
  6544 ;;		_I2C_2_Master_Read
  6545 ;;		_I2C_2_Master_RepStart
  6546 ;;		_I2C_2_Master_Start
  6547 ;;		_I2C_2_Master_Stop
  6548 ;;		_I2C_2_Master_Write
  6549 ;; This function is called by:
  6550 ;;		_readColours
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	text23
  6555   005996                     __ptext23:
  6556                           	callstack 0
  6557   005996                     _color_read_lum:
  6558                           	callstack 26
  6559   005996                     
  6560                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6561   005996  EC77  F02F         	call	_I2C_2_Master_Start	;wreg free
  6562                           
  6563                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6564   00599A  0E52               	movlw	82
  6565   00599C  EC67  F02F         	call	_I2C_2_Master_Write
  6566                           
  6567                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  6568   0059A0  0EB4               	movlw	180
  6569   0059A2  EC67  F02F         	call	_I2C_2_Master_Write
  6570                           
  6571                           ;color.c: 55:  I2C_2_Master_RepStart();
  6572   0059A6  EC6D  F02F         	call	_I2C_2_Master_RepStart	;wreg free
  6573                           
  6574                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6575   0059AA  0E53               	movlw	83
  6576   0059AC  EC67  F02F         	call	_I2C_2_Master_Write
  6577                           
  6578                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6579   0059B0  0E01               	movlw	1
  6580   0059B2  ECF9  F02D         	call	_I2C_2_Master_Read
  6581   0059B6  6E07               	movwf	??_color_read_lum^0,c
  6582   0059B8  5007               	movf	??_color_read_lum^0,w,c
  6583   0059BA  6E0A               	movwf	color_read_lum@tmp^0,c
  6584   0059BC  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6585                           
  6586                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6587   0059BE  0E00               	movlw	0
  6588   0059C0  ECF9  F02D         	call	_I2C_2_Master_Read
  6589   0059C4  6E07               	movwf	??_color_read_lum^0,c
  6590   0059C6  5007               	movf	??_color_read_lum^0,w,c
  6591   0059C8  6E09               	movwf	(??_color_read_lum+2)^0,c
  6592   0059CA  6A08               	clrf	(??_color_read_lum+1)^0,c
  6593   0059CC  500A               	movf	color_read_lum@tmp^0,w,c
  6594   0059CE  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6595   0059D0  6E0A               	movwf	color_read_lum@tmp^0,c
  6596   0059D2  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6597   0059D4  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6598   0059D6  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6599                           
  6600                           ;color.c: 59:  I2C_2_Master_Stop();
  6601   0059D8  EC72  F02F         	call	_I2C_2_Master_Stop	;wreg free
  6602   0059DC                     
  6603                           ;color.c: 60:  return tmp;
  6604   0059DC  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6605   0059E0  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6606   0059E4  0012               	return		;funcret
  6607   0059E6                     __end_of_color_read_lum:
  6608                           	callstack 0
  6609                           
  6610 ;; *************** function _color_read_Red *****************
  6611 ;; Defined at:
  6612 ;;		line 63 in file "color.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;		None
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;  tmp             2    9[COMRAM] unsigned int 
  6617 ;; Return value:  Size  Location     Type
  6618 ;;                  2    4[COMRAM] unsigned int 
  6619 ;; Registers used:
  6620 ;;		wreg, status,2, status,0, cstack
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6627 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6628 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6629 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6630 ;;Total ram usage:        7 bytes
  6631 ;; Hardware stack levels used: 1
  6632 ;; Hardware stack levels required when called: 3
  6633 ;; This function calls:
  6634 ;;		_I2C_2_Master_Read
  6635 ;;		_I2C_2_Master_RepStart
  6636 ;;		_I2C_2_Master_Start
  6637 ;;		_I2C_2_Master_Stop
  6638 ;;		_I2C_2_Master_Write
  6639 ;; This function is called by:
  6640 ;;		_readColours
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           	psect	text24
  6645   0059E6                     __ptext24:
  6646                           	callstack 0
  6647   0059E6                     _color_read_Red:
  6648                           	callstack 26
  6649   0059E6                     
  6650                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  6651   0059E6  EC77  F02F         	call	_I2C_2_Master_Start	;wreg free
  6652                           
  6653                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  6654   0059EA  0E52               	movlw	82
  6655   0059EC  EC67  F02F         	call	_I2C_2_Master_Write
  6656                           
  6657                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  6658   0059F0  0EB6               	movlw	182
  6659   0059F2  EC67  F02F         	call	_I2C_2_Master_Write
  6660                           
  6661                           ;color.c: 69:  I2C_2_Master_RepStart();
  6662   0059F6  EC6D  F02F         	call	_I2C_2_Master_RepStart	;wreg free
  6663                           
  6664                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  6665   0059FA  0E53               	movlw	83
  6666   0059FC  EC67  F02F         	call	_I2C_2_Master_Write
  6667                           
  6668                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  6669   005A00  0E01               	movlw	1
  6670   005A02  ECF9  F02D         	call	_I2C_2_Master_Read
  6671   005A06  6E07               	movwf	??_color_read_Red^0,c
  6672   005A08  5007               	movf	??_color_read_Red^0,w,c
  6673   005A0A  6E0A               	movwf	color_read_Red@tmp^0,c
  6674   005A0C  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6675                           
  6676                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6677   005A0E  0E00               	movlw	0
  6678   005A10  ECF9  F02D         	call	_I2C_2_Master_Read
  6679   005A14  6E07               	movwf	??_color_read_Red^0,c
  6680   005A16  5007               	movf	??_color_read_Red^0,w,c
  6681   005A18  6E09               	movwf	(??_color_read_Red+2)^0,c
  6682   005A1A  6A08               	clrf	(??_color_read_Red+1)^0,c
  6683   005A1C  500A               	movf	color_read_Red@tmp^0,w,c
  6684   005A1E  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6685   005A20  6E0A               	movwf	color_read_Red@tmp^0,c
  6686   005A22  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6687   005A24  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6688   005A26  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6689                           
  6690                           ;color.c: 73:  I2C_2_Master_Stop();
  6691   005A28  EC72  F02F         	call	_I2C_2_Master_Stop	;wreg free
  6692   005A2C                     
  6693                           ;color.c: 74:  return tmp;
  6694   005A2C  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6695   005A30  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6696   005A34  0012               	return		;funcret
  6697   005A36                     __end_of_color_read_Red:
  6698                           	callstack 0
  6699                           
  6700 ;; *************** function _color_read_Green *****************
  6701 ;; Defined at:
  6702 ;;		line 76 in file "color.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;		None
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;  tmp             2    9[COMRAM] unsigned int 
  6707 ;; Return value:  Size  Location     Type
  6708 ;;                  2    4[COMRAM] unsigned int 
  6709 ;; Registers used:
  6710 ;;		wreg, status,2, status,0, cstack
  6711 ;; Tracked objects:
  6712 ;;		On entry : 0/0
  6713 ;;		On exit  : 0/0
  6714 ;;		Unchanged: 0/0
  6715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6717 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6718 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6719 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6720 ;;Total ram usage:        7 bytes
  6721 ;; Hardware stack levels used: 1
  6722 ;; Hardware stack levels required when called: 3
  6723 ;; This function calls:
  6724 ;;		_I2C_2_Master_Read
  6725 ;;		_I2C_2_Master_RepStart
  6726 ;;		_I2C_2_Master_Start
  6727 ;;		_I2C_2_Master_Stop
  6728 ;;		_I2C_2_Master_Write
  6729 ;; This function is called by:
  6730 ;;		_readColours
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text25
  6735   005A36                     __ptext25:
  6736                           	callstack 0
  6737   005A36                     _color_read_Green:
  6738                           	callstack 26
  6739   005A36                     
  6740                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  6741   005A36  EC77  F02F         	call	_I2C_2_Master_Start	;wreg free
  6742                           
  6743                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  6744   005A3A  0E52               	movlw	82
  6745   005A3C  EC67  F02F         	call	_I2C_2_Master_Write
  6746                           
  6747                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  6748   005A40  0EB8               	movlw	184
  6749   005A42  EC67  F02F         	call	_I2C_2_Master_Write
  6750                           
  6751                           ;color.c: 82:  I2C_2_Master_RepStart();
  6752   005A46  EC6D  F02F         	call	_I2C_2_Master_RepStart	;wreg free
  6753                           
  6754                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  6755   005A4A  0E53               	movlw	83
  6756   005A4C  EC67  F02F         	call	_I2C_2_Master_Write
  6757                           
  6758                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  6759   005A50  0E01               	movlw	1
  6760   005A52  ECF9  F02D         	call	_I2C_2_Master_Read
  6761   005A56  6E07               	movwf	??_color_read_Green^0,c
  6762   005A58  5007               	movf	??_color_read_Green^0,w,c
  6763   005A5A  6E0A               	movwf	color_read_Green@tmp^0,c
  6764   005A5C  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6765                           
  6766                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6767   005A5E  0E00               	movlw	0
  6768   005A60  ECF9  F02D         	call	_I2C_2_Master_Read
  6769   005A64  6E07               	movwf	??_color_read_Green^0,c
  6770   005A66  5007               	movf	??_color_read_Green^0,w,c
  6771   005A68  6E09               	movwf	(??_color_read_Green+2)^0,c
  6772   005A6A  6A08               	clrf	(??_color_read_Green+1)^0,c
  6773   005A6C  500A               	movf	color_read_Green@tmp^0,w,c
  6774   005A6E  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6775   005A70  6E0A               	movwf	color_read_Green@tmp^0,c
  6776   005A72  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6777   005A74  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6778   005A76  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6779                           
  6780                           ;color.c: 86:  I2C_2_Master_Stop();
  6781   005A78  EC72  F02F         	call	_I2C_2_Master_Stop	;wreg free
  6782   005A7C                     
  6783                           ;color.c: 87:  return tmp;
  6784   005A7C  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6785   005A80  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6786   005A84  0012               	return		;funcret
  6787   005A86                     __end_of_color_read_Green:
  6788                           	callstack 0
  6789                           
  6790 ;; *************** function _color_read_Blue *****************
  6791 ;; Defined at:
  6792 ;;		line 90 in file "color.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;		None
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;  tmp             2    9[COMRAM] unsigned int 
  6797 ;; Return value:  Size  Location     Type
  6798 ;;                  2    4[COMRAM] unsigned int 
  6799 ;; Registers used:
  6800 ;;		wreg, status,2, status,0, cstack
  6801 ;; Tracked objects:
  6802 ;;		On entry : 0/0
  6803 ;;		On exit  : 0/0
  6804 ;;		Unchanged: 0/0
  6805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6807 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6808 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6809 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6810 ;;Total ram usage:        7 bytes
  6811 ;; Hardware stack levels used: 1
  6812 ;; Hardware stack levels required when called: 3
  6813 ;; This function calls:
  6814 ;;		_I2C_2_Master_Read
  6815 ;;		_I2C_2_Master_RepStart
  6816 ;;		_I2C_2_Master_Start
  6817 ;;		_I2C_2_Master_Stop
  6818 ;;		_I2C_2_Master_Write
  6819 ;; This function is called by:
  6820 ;;		_readColours
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           	psect	text26
  6825   005A86                     __ptext26:
  6826                           	callstack 0
  6827   005A86                     _color_read_Blue:
  6828                           	callstack 26
  6829   005A86                     
  6830                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  6831   005A86  EC77  F02F         	call	_I2C_2_Master_Start	;wreg free
  6832                           
  6833                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  6834   005A8A  0E52               	movlw	82
  6835   005A8C  EC67  F02F         	call	_I2C_2_Master_Write
  6836                           
  6837                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  6838   005A90  0EBA               	movlw	186
  6839   005A92  EC67  F02F         	call	_I2C_2_Master_Write
  6840                           
  6841                           ;color.c: 96:  I2C_2_Master_RepStart();
  6842   005A96  EC6D  F02F         	call	_I2C_2_Master_RepStart	;wreg free
  6843                           
  6844                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  6845   005A9A  0E53               	movlw	83
  6846   005A9C  EC67  F02F         	call	_I2C_2_Master_Write
  6847                           
  6848                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  6849   005AA0  0E01               	movlw	1
  6850   005AA2  ECF9  F02D         	call	_I2C_2_Master_Read
  6851   005AA6  6E07               	movwf	??_color_read_Blue^0,c
  6852   005AA8  5007               	movf	??_color_read_Blue^0,w,c
  6853   005AAA  6E0A               	movwf	color_read_Blue@tmp^0,c
  6854   005AAC  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6855                           
  6856                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6857   005AAE  0E00               	movlw	0
  6858   005AB0  ECF9  F02D         	call	_I2C_2_Master_Read
  6859   005AB4  6E07               	movwf	??_color_read_Blue^0,c
  6860   005AB6  5007               	movf	??_color_read_Blue^0,w,c
  6861   005AB8  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6862   005ABA  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6863   005ABC  500A               	movf	color_read_Blue@tmp^0,w,c
  6864   005ABE  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6865   005AC0  6E0A               	movwf	color_read_Blue@tmp^0,c
  6866   005AC2  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6867   005AC4  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6868   005AC6  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6869                           
  6870                           ;color.c: 100:  I2C_2_Master_Stop();
  6871   005AC8  EC72  F02F         	call	_I2C_2_Master_Stop	;wreg free
  6872   005ACC                     
  6873                           ;color.c: 101:  return tmp;
  6874   005ACC  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6875   005AD0  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6876   005AD4  0012               	return		;funcret
  6877   005AD6                     __end_of_color_read_Blue:
  6878                           	callstack 0
  6879                           
  6880 ;; *************** function _I2C_2_Master_RepStart *****************
  6881 ;; Defined at:
  6882 ;;		line 33 in file "i2c.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;		None
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;		None
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  1    wreg      void 
  6889 ;; Registers used:
  6890 ;;		wreg, status,2, status,0, cstack
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6900 ;;Total ram usage:        0 bytes
  6901 ;; Hardware stack levels used: 1
  6902 ;; Hardware stack levels required when called: 2
  6903 ;; This function calls:
  6904 ;;		_I2C_2_Master_Idle
  6905 ;; This function is called by:
  6906 ;;		_color_read_lum
  6907 ;;		_color_read_Red
  6908 ;;		_color_read_Green
  6909 ;;		_color_read_Blue
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913                           	psect	text27
  6914   005EDA                     __ptext27:
  6915                           	callstack 0
  6916   005EDA                     _I2C_2_Master_RepStart:
  6917                           	callstack 26
  6918   005EDA                     
  6919                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6920   005EDA  ECF2  F02E         	call	_I2C_2_Master_Idle	;wreg free
  6921   005EDE                     
  6922                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6923   005EDE  010E               	movlb	14	; () banked
  6924   005EE0  83DA               	bsf	218,1,b	;volatile
  6925   005EE2                     
  6926                           ; BSR set to: 14
  6927   005EE2  0012               	return		;funcret
  6928   005EE4                     __end_of_I2C_2_Master_RepStart:
  6929                           	callstack 0
  6930                           
  6931 ;; *************** function _I2C_2_Master_Read *****************
  6932 ;; Defined at:
  6933 ;;		line 51 in file "i2c.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  ack             1    wreg     unsigned char 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  ack             1    2[COMRAM] unsigned char 
  6938 ;;  tmp             1    3[COMRAM] unsigned char 
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  1    wreg      unsigned char 
  6941 ;; Registers used:
  6942 ;;		wreg, status,2, status,0, cstack
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6949 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6950 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6951 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6952 ;;Total ram usage:        3 bytes
  6953 ;; Hardware stack levels used: 1
  6954 ;; Hardware stack levels required when called: 2
  6955 ;; This function calls:
  6956 ;;		_I2C_2_Master_Idle
  6957 ;; This function is called by:
  6958 ;;		_color_read_lum
  6959 ;;		_color_read_Red
  6960 ;;		_color_read_Green
  6961 ;;		_color_read_Blue
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           	psect	text28
  6966   005BF2                     __ptext28:
  6967                           	callstack 0
  6968   005BF2                     _I2C_2_Master_Read:
  6969                           	callstack 26
  6970                           
  6971                           ; BSR set to: 14
  6972                           ;incstack = 0
  6973                           ;I2C_2_Master_Read@ack stored from wreg
  6974   005BF2  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6975   005BF4                     
  6976                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6977   005BF4  ECF2  F02E         	call	_I2C_2_Master_Idle	;wreg free
  6978   005BF8                     
  6979                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6980   005BF8  010E               	movlb	14	; () banked
  6981   005BFA  87DA               	bsf	218,3,b	;volatile
  6982                           
  6983                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6984   005BFC  ECF2  F02E         	call	_I2C_2_Master_Idle	;wreg free
  6985   005C00                     
  6986                           ;i2c.c: 57:   tmp = SSP2BUF;
  6987   005C00  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6988                           
  6989                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6990   005C04  ECF2  F02E         	call	_I2C_2_Master_Idle	;wreg free
  6991   005C08                     
  6992                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6993   005C08  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6994   005C0A  B4D8               	btfsc	status,2,c
  6995   005C0C  EF0A  F02E         	goto	u4871
  6996   005C10  EF0E  F02E         	goto	u4870
  6997   005C14                     u4871:
  6998   005C14  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6999   005C16  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7000   005C18  EF0F  F02E         	goto	u4888
  7001   005C1C                     u4870:
  7002   005C1C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7003   005C1E                     u4888:
  7004   005C1E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7005   005C20  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7006   005C22  010E               	movlb	14	; () banked
  7007   005C24  51DA               	movf	218,w,b	;volatile
  7008   005C26  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7009   005C28  0BDF               	andlw	-33
  7010   005C2A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7011   005C2C  6FDA               	movwf	218,b	;volatile
  7012   005C2E                     
  7013                           ; BSR set to: 14
  7014                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7015   005C2E  89DA               	bsf	218,4,b	;volatile
  7016   005C30                     
  7017                           ; BSR set to: 14
  7018                           ;i2c.c: 61:   return tmp;
  7019   005C30  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7020   005C32                     
  7021                           ; BSR set to: 14
  7022   005C32  0012               	return		;funcret
  7023   005C34                     __end_of_I2C_2_Master_Read:
  7024                           	callstack 0
  7025                           
  7026 ;; *************** function _initUSART4 *****************
  7027 ;; Defined at:
  7028 ;;		line 4 in file "serial.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;		None
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;		None
  7033 ;; Return value:  Size  Location     Type
  7034 ;;                  1    wreg      void 
  7035 ;; Registers used:
  7036 ;;		wreg, status,2
  7037 ;; Tracked objects:
  7038 ;;		On entry : 0/0
  7039 ;;		On exit  : 0/0
  7040 ;;		Unchanged: 0/0
  7041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7046 ;;Total ram usage:        0 bytes
  7047 ;; Hardware stack levels used: 1
  7048 ;; Hardware stack levels required when called: 1
  7049 ;; This function calls:
  7050 ;;		Nothing
  7051 ;; This function is called by:
  7052 ;;		_main
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           	psect	text29
  7057   005E98                     __ptext29:
  7058                           	callstack 0
  7059   005E98                     _initUSART4:
  7060                           	callstack 29
  7061   005E98                     
  7062                           ;serial.c: 5:     RC0PPS = 0x12;
  7063   005E98  0E12               	movlw	18
  7064   005E9A  010E               	movlb	14	; () banked
  7065   005E9C  6F62               	movwf	98,b	;volatile
  7066                           
  7067                           ;serial.c: 6:     RX4PPS = 0x11;
  7068   005E9E  0E11               	movlw	17
  7069   005EA0  6F15               	movwf	21,b	;volatile
  7070   005EA2                     
  7071                           ; BSR set to: 14
  7072                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7073   005EA2  97E9               	bcf	233,3,b	;volatile
  7074   005EA4                     
  7075                           ; BSR set to: 14
  7076                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7077   005EA4  95E8               	bcf	232,2,b	;volatile
  7078                           
  7079                           ;serial.c: 9:     SP4BRGL = 51;
  7080   005EA6  0E33               	movlw	51
  7081   005EA8  6FE5               	movwf	229,b	;volatile
  7082                           
  7083                           ;serial.c: 10:     SP4BRGH = 0;
  7084   005EAA  0E00               	movlw	0
  7085   005EAC  6FE6               	movwf	230,b	;volatile
  7086   005EAE                     
  7087                           ; BSR set to: 14
  7088                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7089   005EAE  89E7               	bsf	231,4,b	;volatile
  7090   005EB0                     
  7091                           ; BSR set to: 14
  7092                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7093   005EB0  8BE8               	bsf	232,5,b	;volatile
  7094   005EB2                     
  7095                           ; BSR set to: 14
  7096                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7097   005EB2  8FE7               	bsf	231,7,b	;volatile
  7098   005EB4                     
  7099                           ; BSR set to: 14
  7100   005EB4  0012               	return		;funcret
  7101   005EB6                     __end_of_initUSART4:
  7102                           	callstack 0
  7103                           
  7104 ;; *************** function _initDCmotorsPWM *****************
  7105 ;; Defined at:
  7106 ;;		line 5 in file "dc_motor.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;		None
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  1    wreg      void 
  7113 ;; Registers used:
  7114 ;;		wreg, status,2
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7123 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7124 ;;Total ram usage:        2 bytes
  7125 ;; Hardware stack levels used: 1
  7126 ;; Hardware stack levels required when called: 1
  7127 ;; This function calls:
  7128 ;;		Nothing
  7129 ;; This function is called by:
  7130 ;;		_main
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           	psect	text30
  7135   005174                     __ptext30:
  7136                           	callstack 0
  7137   005174                     _initDCmotorsPWM:
  7138                           	callstack 29
  7139   005174                     
  7140                           ;dc_motor.c: 9:     RE2PPS=0x05;
  7141   005174  0E05               	movlw	5
  7142   005176  010E               	movlb	14	; () banked
  7143   005178  6F74               	movwf	116,b	;volatile
  7144                           
  7145                           ;dc_motor.c: 10:     RE4PPS=0x06;
  7146   00517A  0E06               	movlw	6
  7147   00517C  6F76               	movwf	118,b	;volatile
  7148                           
  7149                           ;dc_motor.c: 11:     RC7PPS=0x07;
  7150   00517E  0E07               	movlw	7
  7151   005180  6F69               	movwf	105,b	;volatile
  7152                           
  7153                           ;dc_motor.c: 12:     RG6PPS=0x08;
  7154   005182  0E08               	movlw	8
  7155   005184  6F88               	movwf	136,b	;volatile
  7156   005186                     
  7157                           ; BSR set to: 14
  7158                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  7159   005186  9485               	bcf	133,2,c	;volatile
  7160   005188                     
  7161                           ; BSR set to: 14
  7162                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  7163   005188  9885               	bcf	133,4,c	;volatile
  7164   00518A                     
  7165                           ; BSR set to: 14
  7166                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  7167   00518A  9E83               	bcf	131,7,c	;volatile
  7168   00518C                     
  7169                           ; BSR set to: 14
  7170                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  7171   00518C  9C87               	bcf	135,6,c	;volatile
  7172                           
  7173                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  7174   00518E  50BD               	movf	189,w,c	;volatile
  7175   005190  0B8F               	andlw	-113
  7176   005192  0930               	iorlw	48
  7177   005194  6EBD               	movwf	189,c	;volatile
  7178                           
  7179                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  7180   005196  0EE0               	movlw	-32
  7181   005198  16BE               	andwf	190,f,c	;volatile
  7182                           
  7183                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  7184   00519A  50BF               	movf	191,w,c	;volatile
  7185   00519C  0BF0               	andlw	-16
  7186   00519E  0901               	iorlw	1
  7187   0051A0  6EBF               	movwf	191,c	;volatile
  7188   0051A2                     
  7189                           ; BSR set to: 14
  7190                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  7191   0051A2  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7192   0051A6                     
  7193                           ; BSR set to: 14
  7194                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  7195   0051A6  8EBD               	bsf	189,7,c	;volatile
  7196                           
  7197                           ;dc_motor.c: 33:     CCPR1H=0;
  7198   0051A8  0E00               	movlw	0
  7199   0051AA  6EAA               	movwf	170,c	;volatile
  7200                           
  7201                           ;dc_motor.c: 34:     CCPR2H=0;
  7202   0051AC  0E00               	movlw	0
  7203   0051AE  6EA6               	movwf	166,c	;volatile
  7204                           
  7205                           ;dc_motor.c: 35:     CCPR3H=0;
  7206   0051B0  0E00               	movlw	0
  7207   0051B2  010F               	movlb	15	; () banked
  7208   0051B4  6F25               	movwf	37,b	;volatile
  7209                           
  7210                           ;dc_motor.c: 36:     CCPR4H=0;
  7211   0051B6  0E00               	movlw	0
  7212   0051B8  6F21               	movwf	33,b	;volatile
  7213                           
  7214                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  7215   0051BA  0EFC               	movlw	-4
  7216   0051BC  16AD               	andwf	173,f,c	;volatile
  7217                           
  7218                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  7219   0051BE  0EF3               	movlw	-13
  7220   0051C0  16AD               	andwf	173,f,c	;volatile
  7221                           
  7222                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  7223   0051C2  0ECF               	movlw	-49
  7224   0051C4  16AD               	andwf	173,f,c	;volatile
  7225                           
  7226                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  7227   0051C6  0E3F               	movlw	-193
  7228   0051C8  16AD               	andwf	173,f,c	;volatile
  7229   0051CA                     
  7230                           ; BSR set to: 15
  7231                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  7232   0051CA  88AB               	bsf	171,4,c	;volatile
  7233                           
  7234                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  7235   0051CC  50AB               	movf	171,w,c	;volatile
  7236   0051CE  0BF0               	andlw	-16
  7237   0051D0  090C               	iorlw	12
  7238   0051D2  6EAB               	movwf	171,c	;volatile
  7239   0051D4                     
  7240                           ; BSR set to: 15
  7241                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  7242   0051D4  8EAB               	bsf	171,7,c	;volatile
  7243   0051D6                     
  7244                           ; BSR set to: 15
  7245                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  7246   0051D6  88A7               	bsf	167,4,c	;volatile
  7247                           
  7248                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  7249   0051D8  50A7               	movf	167,w,c	;volatile
  7250   0051DA  0BF0               	andlw	-16
  7251   0051DC  090C               	iorlw	12
  7252   0051DE  6EA7               	movwf	167,c	;volatile
  7253   0051E0                     
  7254                           ; BSR set to: 15
  7255                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  7256   0051E0  8EA7               	bsf	167,7,c	;volatile
  7257   0051E2                     
  7258                           ; BSR set to: 15
  7259                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  7260   0051E2  8926               	bsf	38,4,b	;volatile
  7261                           
  7262                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  7263   0051E4  5126               	movf	38,w,b	;volatile
  7264   0051E6  0BF0               	andlw	-16
  7265   0051E8  090C               	iorlw	12
  7266   0051EA  6F26               	movwf	38,b	;volatile
  7267   0051EC                     
  7268                           ; BSR set to: 15
  7269                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  7270   0051EC  8F26               	bsf	38,7,b	;volatile
  7271   0051EE                     
  7272                           ; BSR set to: 15
  7273                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  7274   0051EE  8922               	bsf	34,4,b	;volatile
  7275                           
  7276                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  7277   0051F0  5122               	movf	34,w,b	;volatile
  7278   0051F2  0BF0               	andlw	-16
  7279   0051F4  090C               	iorlw	12
  7280   0051F6  6F22               	movwf	34,b	;volatile
  7281   0051F8                     
  7282                           ; BSR set to: 15
  7283                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  7284   0051F8  8F22               	bsf	34,7,b	;volatile
  7285   0051FA                     
  7286                           ; BSR set to: 15
  7287   0051FA  0012               	return		;funcret
  7288   0051FC                     __end_of_initDCmotorsPWM:
  7289                           	callstack 0
  7290                           
  7291 ;; *************** function _go_Home *****************
  7292 ;; Defined at:
  7293 ;;		line 4 in file "Memory.c"
  7294 ;; Parameters:    Size  Location     Type
  7295 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  7296 ;;		 -> WayBack(50), 
  7297 ;;  Time_forward    2   37[COMRAM] PTR int 
  7298 ;;		 -> Time_forward(100), 
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  i               2   42[COMRAM] int 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1    wreg      void 
  7303 ;; Registers used:
  7304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7310 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7311 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7313 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7314 ;;Total ram usage:        9 bytes
  7315 ;; Hardware stack levels used: 1
  7316 ;; Hardware stack levels required when called: 6
  7317 ;; This function calls:
  7318 ;;		_BlueMove
  7319 ;;		_GreenMove
  7320 ;;		_LightBlueMove
  7321 ;;		_OrangeMove
  7322 ;;		_RedMove
  7323 ;;		_ReversePink
  7324 ;;		_ReverseYellow
  7325 ;;		_reverseDetect
  7326 ;;		_timed_forward
  7327 ;; This function is called by:
  7328 ;;		_main
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           	psect	text31
  7333   003B22                     __ptext31:
  7334                           	callstack 0
  7335   003B22                     _go_Home:
  7336                           	callstack 24
  7337   003B22                     
  7338                           ;Memory.c: 5:     int i;;Memory.c: 6:     for (i = move_count; i >= 0; i--){
  7339   003B22  C114  F02B         	movff	_move_count,go_Home@i	;volatile
  7340   003B26  C115  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  7341   003B2A                     l5515:
  7342   003B2A  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  7343   003B2C  EF9C  F01D         	goto	u5450
  7344   003B30  EF9A  F01D         	goto	u5451
  7345   003B34                     u5451:
  7346   003B34  EF9E  F01D         	goto	l5519
  7347   003B38                     u5450:
  7348   003B38  EFE6  F01E         	goto	l643
  7349   003B3C                     l5519:
  7350                           
  7351                           ;Memory.c: 16:         timed_forward(&motorL, &motorR,Time_forward[i]);
  7352   003B3C  0E7B               	movlw	low _motorL
  7353   003B3E  6E14               	movwf	timed_forward@mL^0,c
  7354   003B40  0E01               	movlw	high _motorL
  7355   003B42  6E15               	movwf	(timed_forward@mL+1)^0,c
  7356   003B44  0E72               	movlw	low _motorR
  7357   003B46  6E16               	movwf	timed_forward@mR^0,c
  7358   003B48  0E01               	movlw	high _motorR
  7359   003B4A  6E17               	movwf	(timed_forward@mR+1)^0,c
  7360   003B4C  90D8               	bcf	status,0,c
  7361   003B4E  342B               	rlcf	go_Home@i^0,w,c
  7362   003B50  6ED9               	movwf	fsr2l,c
  7363   003B52  342C               	rlcf	(go_Home@i+1)^0,w,c
  7364   003B54  6EDA               	movwf	fsr2h,c
  7365   003B56  5026               	movf	go_Home@Time_forward^0,w,c
  7366   003B58  26D9               	addwf	fsr2l,f,c
  7367   003B5A  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  7368   003B5C  22DA               	addwfc	fsr2h,f,c
  7369   003B5E  CFDE F018          	movff	postinc2,timed_forward@time
  7370   003B62  CFDD F019          	movff	postdec2,timed_forward@time+1
  7371   003B66  ECD4  F026         	call	_timed_forward	;wreg free
  7372   003B6A                     
  7373                           ;Memory.c: 21:         if (WayBack[i-1]==1){
  7374   003B6A  502B               	movf	go_Home@i^0,w,c
  7375   003B6C  2424               	addwf	go_Home@WayBack^0,w,c
  7376   003B6E  6E28               	movwf	??_go_Home^0,c
  7377   003B70  502C               	movf	(go_Home@i+1)^0,w,c
  7378   003B72  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7379   003B74  6E29               	movwf	(??_go_Home+1)^0,c
  7380   003B76  0EFF               	movlw	255
  7381   003B78  2428               	addwf	??_go_Home^0,w,c
  7382   003B7A  6ED9               	movwf	fsr2l,c
  7383   003B7C  0EFF               	movlw	255
  7384   003B7E  2029               	addwfc	(??_go_Home+1)^0,w,c
  7385   003B80  6EDA               	movwf	fsr2h,c
  7386   003B82  04DE               	decf	postinc2,w,c
  7387   003B84  A4D8               	btfss	status,2,c
  7388   003B86  EFC7  F01D         	goto	u5461
  7389   003B8A  EFC9  F01D         	goto	u5460
  7390   003B8E                     u5461:
  7391   003B8E  EFDF  F01D         	goto	l5525
  7392   003B92                     u5460:
  7393   003B92                     
  7394                           ;Memory.c: 22:             reverseDetect(&motorL, &motorR);
  7395   003B92  0E7B               	movlw	low _motorL
  7396   003B94  6E1A               	movwf	reverseDetect@mL^0,c
  7397   003B96  0E01               	movlw	high _motorL
  7398   003B98  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7399   003B9A  0E72               	movlw	low _motorR
  7400   003B9C  6E1C               	movwf	reverseDetect@mR^0,c
  7401   003B9E  0E01               	movlw	high _motorR
  7402   003BA0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7403   003BA2  ECFD  F02A         	call	_reverseDetect	;wreg free
  7404                           
  7405                           ;Memory.c: 23:             GreenMove(&motorL, &motorR);
  7406   003BA6  0E7B               	movlw	low _motorL
  7407   003BA8  6E20               	movwf	GreenMove@mL^0,c
  7408   003BAA  0E01               	movlw	high _motorL
  7409   003BAC  6E21               	movwf	(GreenMove@mL+1)^0,c
  7410   003BAE  0E72               	movlw	low _motorR
  7411   003BB0  6E22               	movwf	GreenMove@mR^0,c
  7412   003BB2  0E01               	movlw	high _motorR
  7413   003BB4  6E23               	movwf	(GreenMove@mR+1)^0,c
  7414   003BB6  EC59  F02E         	call	_GreenMove	;wreg free
  7415                           
  7416                           ;Memory.c: 24:         }
  7417   003BBA  EFE1  F01E         	goto	l5549
  7418   003BBE                     l5525:
  7419   003BBE  502B               	movf	go_Home@i^0,w,c
  7420   003BC0  2424               	addwf	go_Home@WayBack^0,w,c
  7421   003BC2  6E28               	movwf	??_go_Home^0,c
  7422   003BC4  502C               	movf	(go_Home@i+1)^0,w,c
  7423   003BC6  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7424   003BC8  6E29               	movwf	(??_go_Home+1)^0,c
  7425   003BCA  0EFF               	movlw	255
  7426   003BCC  2428               	addwf	??_go_Home^0,w,c
  7427   003BCE  6ED9               	movwf	fsr2l,c
  7428   003BD0  0EFF               	movlw	255
  7429   003BD2  2029               	addwfc	(??_go_Home+1)^0,w,c
  7430   003BD4  6EDA               	movwf	fsr2h,c
  7431   003BD6  0E02               	movlw	2
  7432   003BD8  18DE               	xorwf	postinc2,w,c
  7433   003BDA  A4D8               	btfss	status,2,c
  7434   003BDC  EFF2  F01D         	goto	u5471
  7435   003BE0  EFF4  F01D         	goto	u5470
  7436   003BE4                     u5471:
  7437   003BE4  EF0A  F01E         	goto	l5529
  7438   003BE8                     u5470:
  7439   003BE8                     
  7440                           ;Memory.c: 26:             reverseDetect(&motorL, &motorR);
  7441   003BE8  0E7B               	movlw	low _motorL
  7442   003BEA  6E1A               	movwf	reverseDetect@mL^0,c
  7443   003BEC  0E01               	movlw	high _motorL
  7444   003BEE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7445   003BF0  0E72               	movlw	low _motorR
  7446   003BF2  6E1C               	movwf	reverseDetect@mR^0,c
  7447   003BF4  0E01               	movlw	high _motorR
  7448   003BF6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7449   003BF8  ECFD  F02A         	call	_reverseDetect	;wreg free
  7450                           
  7451                           ;Memory.c: 27:             LightBlueMove(&motorL, &motorR);
  7452   003BFC  0E7B               	movlw	low _motorL
  7453   003BFE  6E20               	movwf	LightBlueMove@mL^0,c
  7454   003C00  0E01               	movlw	high _motorL
  7455   003C02  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7456   003C04  0E72               	movlw	low _motorR
  7457   003C06  6E22               	movwf	LightBlueMove@mR^0,c
  7458   003C08  0E01               	movlw	high _motorR
  7459   003C0A  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7460   003C0C  ECFF  F02B         	call	_LightBlueMove	;wreg free
  7461                           
  7462                           ;Memory.c: 28:         }
  7463   003C10  EFE1  F01E         	goto	l5549
  7464   003C14                     l5529:
  7465   003C14  502B               	movf	go_Home@i^0,w,c
  7466   003C16  2424               	addwf	go_Home@WayBack^0,w,c
  7467   003C18  6E28               	movwf	??_go_Home^0,c
  7468   003C1A  502C               	movf	(go_Home@i+1)^0,w,c
  7469   003C1C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7470   003C1E  6E29               	movwf	(??_go_Home+1)^0,c
  7471   003C20  0EFF               	movlw	255
  7472   003C22  2428               	addwf	??_go_Home^0,w,c
  7473   003C24  6ED9               	movwf	fsr2l,c
  7474   003C26  0EFF               	movlw	255
  7475   003C28  2029               	addwfc	(??_go_Home+1)^0,w,c
  7476   003C2A  6EDA               	movwf	fsr2h,c
  7477   003C2C  0E03               	movlw	3
  7478   003C2E  18DE               	xorwf	postinc2,w,c
  7479   003C30  A4D8               	btfss	status,2,c
  7480   003C32  EF1D  F01E         	goto	u5481
  7481   003C36  EF1F  F01E         	goto	u5480
  7482   003C3A                     u5481:
  7483   003C3A  EF35  F01E         	goto	l5533
  7484   003C3E                     u5480:
  7485   003C3E                     
  7486                           ;Memory.c: 30:             reverseDetect(&motorL, &motorR);
  7487   003C3E  0E7B               	movlw	low _motorL
  7488   003C40  6E1A               	movwf	reverseDetect@mL^0,c
  7489   003C42  0E01               	movlw	high _motorL
  7490   003C44  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7491   003C46  0E72               	movlw	low _motorR
  7492   003C48  6E1C               	movwf	reverseDetect@mR^0,c
  7493   003C4A  0E01               	movlw	high _motorR
  7494   003C4C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7495   003C4E  ECFD  F02A         	call	_reverseDetect	;wreg free
  7496                           
  7497                           ;Memory.c: 31:             ReverseYellow(&motorL, &motorR);
  7498   003C52  0E7B               	movlw	low _motorL
  7499   003C54  6E20               	movwf	ReverseYellow@mL^0,c
  7500   003C56  0E01               	movlw	high _motorL
  7501   003C58  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  7502   003C5A  0E72               	movlw	low _motorR
  7503   003C5C  6E22               	movwf	ReverseYellow@mR^0,c
  7504   003C5E  0E01               	movlw	high _motorR
  7505   003C60  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  7506   003C62  EC1E  F026         	call	_ReverseYellow	;wreg free
  7507                           
  7508                           ;Memory.c: 32:         }
  7509   003C66  EFE1  F01E         	goto	l5549
  7510   003C6A                     l5533:
  7511   003C6A  502B               	movf	go_Home@i^0,w,c
  7512   003C6C  2424               	addwf	go_Home@WayBack^0,w,c
  7513   003C6E  6E28               	movwf	??_go_Home^0,c
  7514   003C70  502C               	movf	(go_Home@i+1)^0,w,c
  7515   003C72  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7516   003C74  6E29               	movwf	(??_go_Home+1)^0,c
  7517   003C76  0EFF               	movlw	255
  7518   003C78  2428               	addwf	??_go_Home^0,w,c
  7519   003C7A  6ED9               	movwf	fsr2l,c
  7520   003C7C  0EFF               	movlw	255
  7521   003C7E  2029               	addwfc	(??_go_Home+1)^0,w,c
  7522   003C80  6EDA               	movwf	fsr2h,c
  7523   003C82  0E04               	movlw	4
  7524   003C84  18DE               	xorwf	postinc2,w,c
  7525   003C86  A4D8               	btfss	status,2,c
  7526   003C88  EF48  F01E         	goto	u5491
  7527   003C8C  EF4A  F01E         	goto	u5490
  7528   003C90                     u5491:
  7529   003C90  EF60  F01E         	goto	l5537
  7530   003C94                     u5490:
  7531   003C94                     
  7532                           ;Memory.c: 34:             reverseDetect(&motorL, &motorR);
  7533   003C94  0E7B               	movlw	low _motorL
  7534   003C96  6E1A               	movwf	reverseDetect@mL^0,c
  7535   003C98  0E01               	movlw	high _motorL
  7536   003C9A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7537   003C9C  0E72               	movlw	low _motorR
  7538   003C9E  6E1C               	movwf	reverseDetect@mR^0,c
  7539   003CA0  0E01               	movlw	high _motorR
  7540   003CA2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7541   003CA4  ECFD  F02A         	call	_reverseDetect	;wreg free
  7542                           
  7543                           ;Memory.c: 35:             BlueMove(&motorL, &motorR);
  7544   003CA8  0E7B               	movlw	low _motorL
  7545   003CAA  6E20               	movwf	BlueMove@mL^0,c
  7546   003CAC  0E01               	movlw	high _motorL
  7547   003CAE  6E21               	movwf	(BlueMove@mL+1)^0,c
  7548   003CB0  0E72               	movlw	low _motorR
  7549   003CB2  6E22               	movwf	BlueMove@mR^0,c
  7550   003CB4  0E01               	movlw	high _motorR
  7551   003CB6  6E23               	movwf	(BlueMove@mR+1)^0,c
  7552   003CB8  ECE7  F029         	call	_BlueMove	;wreg free
  7553                           
  7554                           ;Memory.c: 36:         }
  7555   003CBC  EFE1  F01E         	goto	l5549
  7556   003CC0                     l5537:
  7557   003CC0  502B               	movf	go_Home@i^0,w,c
  7558   003CC2  2424               	addwf	go_Home@WayBack^0,w,c
  7559   003CC4  6E28               	movwf	??_go_Home^0,c
  7560   003CC6  502C               	movf	(go_Home@i+1)^0,w,c
  7561   003CC8  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7562   003CCA  6E29               	movwf	(??_go_Home+1)^0,c
  7563   003CCC  0EFF               	movlw	255
  7564   003CCE  2428               	addwf	??_go_Home^0,w,c
  7565   003CD0  6ED9               	movwf	fsr2l,c
  7566   003CD2  0EFF               	movlw	255
  7567   003CD4  2029               	addwfc	(??_go_Home+1)^0,w,c
  7568   003CD6  6EDA               	movwf	fsr2h,c
  7569   003CD8  0E05               	movlw	5
  7570   003CDA  18DE               	xorwf	postinc2,w,c
  7571   003CDC  A4D8               	btfss	status,2,c
  7572   003CDE  EF73  F01E         	goto	u5501
  7573   003CE2  EF75  F01E         	goto	u5500
  7574   003CE6                     u5501:
  7575   003CE6  EF8B  F01E         	goto	l5541
  7576   003CEA                     u5500:
  7577   003CEA                     
  7578                           ;Memory.c: 38:             reverseDetect(&motorL, &motorR);
  7579   003CEA  0E7B               	movlw	low _motorL
  7580   003CEC  6E1A               	movwf	reverseDetect@mL^0,c
  7581   003CEE  0E01               	movlw	high _motorL
  7582   003CF0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7583   003CF2  0E72               	movlw	low _motorR
  7584   003CF4  6E1C               	movwf	reverseDetect@mR^0,c
  7585   003CF6  0E01               	movlw	high _motorR
  7586   003CF8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7587   003CFA  ECFD  F02A         	call	_reverseDetect	;wreg free
  7588                           
  7589                           ;Memory.c: 39:             RedMove(&motorL, &motorR);
  7590   003CFE  0E7B               	movlw	low _motorL
  7591   003D00  6E20               	movwf	RedMove@mL^0,c
  7592   003D02  0E01               	movlw	high _motorL
  7593   003D04  6E21               	movwf	(RedMove@mL+1)^0,c
  7594   003D06  0E72               	movlw	low _motorR
  7595   003D08  6E22               	movwf	RedMove@mR^0,c
  7596   003D0A  0E01               	movlw	high _motorR
  7597   003D0C  6E23               	movwf	(RedMove@mR+1)^0,c
  7598   003D0E  EC3A  F02E         	call	_RedMove	;wreg free
  7599                           
  7600                           ;Memory.c: 40:         }
  7601   003D12  EFE1  F01E         	goto	l5549
  7602   003D16                     l5541:
  7603   003D16  502B               	movf	go_Home@i^0,w,c
  7604   003D18  2424               	addwf	go_Home@WayBack^0,w,c
  7605   003D1A  6E28               	movwf	??_go_Home^0,c
  7606   003D1C  502C               	movf	(go_Home@i+1)^0,w,c
  7607   003D1E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7608   003D20  6E29               	movwf	(??_go_Home+1)^0,c
  7609   003D22  0EFF               	movlw	255
  7610   003D24  2428               	addwf	??_go_Home^0,w,c
  7611   003D26  6ED9               	movwf	fsr2l,c
  7612   003D28  0EFF               	movlw	255
  7613   003D2A  2029               	addwfc	(??_go_Home+1)^0,w,c
  7614   003D2C  6EDA               	movwf	fsr2h,c
  7615   003D2E  0E06               	movlw	6
  7616   003D30  18DE               	xorwf	postinc2,w,c
  7617   003D32  A4D8               	btfss	status,2,c
  7618   003D34  EF9E  F01E         	goto	u5511
  7619   003D38  EFA0  F01E         	goto	u5510
  7620   003D3C                     u5511:
  7621   003D3C  EFB6  F01E         	goto	l5545
  7622   003D40                     u5510:
  7623   003D40                     
  7624                           ;Memory.c: 42:             reverseDetect(&motorL, &motorR);
  7625   003D40  0E7B               	movlw	low _motorL
  7626   003D42  6E1A               	movwf	reverseDetect@mL^0,c
  7627   003D44  0E01               	movlw	high _motorL
  7628   003D46  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7629   003D48  0E72               	movlw	low _motorR
  7630   003D4A  6E1C               	movwf	reverseDetect@mR^0,c
  7631   003D4C  0E01               	movlw	high _motorR
  7632   003D4E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7633   003D50  ECFD  F02A         	call	_reverseDetect	;wreg free
  7634                           
  7635                           ;Memory.c: 43:             OrangeMove(&motorL, &motorR);
  7636   003D54  0E7B               	movlw	low _motorL
  7637   003D56  6E20               	movwf	OrangeMove@mL^0,c
  7638   003D58  0E01               	movlw	high _motorL
  7639   003D5A  6E21               	movwf	(OrangeMove@mL+1)^0,c
  7640   003D5C  0E72               	movlw	low _motorR
  7641   003D5E  6E22               	movwf	OrangeMove@mR^0,c
  7642   003D60  0E01               	movlw	high _motorR
  7643   003D62  6E23               	movwf	(OrangeMove@mR+1)^0,c
  7644   003D64  ECD6  F02B         	call	_OrangeMove	;wreg free
  7645                           
  7646                           ;Memory.c: 44:         }
  7647   003D68  EFE1  F01E         	goto	l5549
  7648   003D6C                     l5545:
  7649   003D6C  502B               	movf	go_Home@i^0,w,c
  7650   003D6E  2424               	addwf	go_Home@WayBack^0,w,c
  7651   003D70  6E28               	movwf	??_go_Home^0,c
  7652   003D72  502C               	movf	(go_Home@i+1)^0,w,c
  7653   003D74  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7654   003D76  6E29               	movwf	(??_go_Home+1)^0,c
  7655   003D78  0EFF               	movlw	255
  7656   003D7A  2428               	addwf	??_go_Home^0,w,c
  7657   003D7C  6ED9               	movwf	fsr2l,c
  7658   003D7E  0EFF               	movlw	255
  7659   003D80  2029               	addwfc	(??_go_Home+1)^0,w,c
  7660   003D82  6EDA               	movwf	fsr2h,c
  7661   003D84  0E07               	movlw	7
  7662   003D86  18DE               	xorwf	postinc2,w,c
  7663   003D88  A4D8               	btfss	status,2,c
  7664   003D8A  EFC9  F01E         	goto	u5521
  7665   003D8E  EFCB  F01E         	goto	u5520
  7666   003D92                     u5521:
  7667   003D92  EFE1  F01E         	goto	l637
  7668   003D96                     u5520:
  7669   003D96                     
  7670                           ;Memory.c: 46:             reverseDetect(&motorL, &motorR);
  7671   003D96  0E7B               	movlw	low _motorL
  7672   003D98  6E1A               	movwf	reverseDetect@mL^0,c
  7673   003D9A  0E01               	movlw	high _motorL
  7674   003D9C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7675   003D9E  0E72               	movlw	low _motorR
  7676   003DA0  6E1C               	movwf	reverseDetect@mR^0,c
  7677   003DA2  0E01               	movlw	high _motorR
  7678   003DA4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7679   003DA6  ECFD  F02A         	call	_reverseDetect	;wreg free
  7680                           
  7681                           ;Memory.c: 47:             ReversePink(&motorL, &motorR);
  7682   003DAA  0E7B               	movlw	low _motorL
  7683   003DAC  6E20               	movwf	ReversePink@mL^0,c
  7684   003DAE  0E01               	movlw	high _motorL
  7685   003DB0  6E21               	movwf	(ReversePink@mL+1)^0,c
  7686   003DB2  0E72               	movlw	low _motorR
  7687   003DB4  6E22               	movwf	ReversePink@mR^0,c
  7688   003DB6  0E01               	movlw	high _motorR
  7689   003DB8  6E23               	movwf	(ReversePink@mR+1)^0,c
  7690   003DBA  EC79  F026         	call	_ReversePink	;wreg free
  7691   003DBE  EFE1  F01E         	goto	l5549
  7692   003DC2                     l637:
  7693   003DC2                     l5549:
  7694                           
  7695                           ;Memory.c: 51:   }
  7696   003DC2  062B               	decf	go_Home@i^0,f,c
  7697   003DC4  A0D8               	btfss	status,0,c
  7698   003DC6  062C               	decf	(go_Home@i+1)^0,f,c
  7699   003DC8  EF95  F01D         	goto	l5515
  7700   003DCC                     l643:
  7701   003DCC  0012               	return		;funcret
  7702   003DCE                     __end_of_go_Home:
  7703                           	callstack 0
  7704                           
  7705 ;; *************** function _timed_forward *****************
  7706 ;; Defined at:
  7707 ;;		line 164 in file "dc_motor.c"
  7708 ;; Parameters:    Size  Location     Type
  7709 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7710 ;;		 -> motorL(9), 
  7711 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7712 ;;		 -> motorR(9), 
  7713 ;;  time            2   23[COMRAM] int 
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;		None
  7716 ;; Return value:  Size  Location     Type
  7717 ;;                  1    wreg      void 
  7718 ;; Registers used:
  7719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7725 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7727 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7728 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7729 ;;Total ram usage:        8 bytes
  7730 ;; Hardware stack levels used: 1
  7731 ;; Hardware stack levels required when called: 3
  7732 ;; This function calls:
  7733 ;;		_delayed_ms
  7734 ;;		_setMotorPWM
  7735 ;; This function is called by:
  7736 ;;		_go_Home
  7737 ;; This function uses a non-reentrant model
  7738 ;;
  7739                           
  7740                           	psect	text32
  7741   004DA8                     __ptext32:
  7742                           	callstack 0
  7743   004DA8                     _timed_forward:
  7744                           	callstack 26
  7745   004DA8                     
  7746                           ;dc_motor.c: 164: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 165: {;dc_motor.c: 167:     mL->direction =1;
  7747   004DA8  EE20 F001          	lfsr	2,1
  7748   004DAC  5014               	movf	timed_forward@mL^0,w,c
  7749   004DAE  26D9               	addwf	fsr2l,f,c
  7750   004DB0  5015               	movf	(timed_forward@mL+1)^0,w,c
  7751   004DB2  22DA               	addwfc	fsr2h,f,c
  7752   004DB4  0E01               	movlw	1
  7753   004DB6  6EDF               	movwf	indf2,c
  7754                           
  7755                           ;dc_motor.c: 168:     mR->direction =1;
  7756   004DB8  EE20 F001          	lfsr	2,1
  7757   004DBC  5016               	movf	timed_forward@mR^0,w,c
  7758   004DBE  26D9               	addwf	fsr2l,f,c
  7759   004DC0  5017               	movf	(timed_forward@mR+1)^0,w,c
  7760   004DC2  22DA               	addwfc	fsr2h,f,c
  7761   004DC4  0E01               	movlw	1
  7762   004DC6  6EDF               	movwf	indf2,c
  7763                           
  7764                           ;dc_motor.c: 169:     while (mL->power < power && mR->power < power){
  7765   004DC8  EF0A  F027         	goto	l5109
  7766   004DCC                     l5101:
  7767                           
  7768                           ;dc_motor.c: 171:         mL->power+=10;
  7769   004DCC  C014  FFD9         	movff	timed_forward@mL,fsr2l
  7770   004DD0  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  7771   004DD4  0E0A               	movlw	10
  7772   004DD6  26DF               	addwf	indf2,f,c
  7773                           
  7774                           ;dc_motor.c: 172:         mR->power+=10;
  7775   004DD8  C016  FFD9         	movff	timed_forward@mR,fsr2l
  7776   004DDC  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  7777   004DE0  0E0A               	movlw	10
  7778   004DE2  26DF               	addwf	indf2,f,c
  7779   004DE4                     
  7780                           ;dc_motor.c: 174:         setMotorPWM(mL);
  7781   004DE4  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  7782   004DE8  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  7783   004DEC  ECCD  F022         	call	_setMotorPWM	;wreg free
  7784   004DF0                     
  7785                           ;dc_motor.c: 175:         setMotorPWM(mR);
  7786   004DF0  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  7787   004DF4  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  7788   004DF8  ECCD  F022         	call	_setMotorPWM	;wreg free
  7789   004DFC                     
  7790                           ;dc_motor.c: 178:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7791   004DFC  0E02               	movlw	2
  7792   004DFE  6E1B               	movwf	(??_timed_forward+1)^0,c
  7793   004E00  0EA0               	movlw	160
  7794   004E02  6E1A               	movwf	??_timed_forward^0,c
  7795   004E04  0E92               	movlw	146
  7796   004E06                     u5817:
  7797   004E06  2EE8               	decfsz	wreg,f,c
  7798   004E08  D7FE               	bra	u5817
  7799   004E0A  2E1A               	decfsz	??_timed_forward^0,f,c
  7800   004E0C  D7FC               	bra	u5817
  7801   004E0E  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  7802   004E10  D7FA               	bra	u5817
  7803   004E12  D000               	nop2	
  7804   004E14                     l5109:
  7805   004E14  C014  FFD9         	movff	timed_forward@mL,fsr2l
  7806   004E18  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  7807   004E1C  0E1E               	movlw	30
  7808   004E1E  60DF               	cpfslt	indf2,c
  7809   004E20  EF14  F027         	goto	u4951
  7810   004E24  EF16  F027         	goto	u4950
  7811   004E28                     u4951:
  7812   004E28  EF22  F027         	goto	l5113
  7813   004E2C                     u4950:
  7814   004E2C  C016  FFD9         	movff	timed_forward@mR,fsr2l
  7815   004E30  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  7816   004E34  0E1D               	movlw	29
  7817   004E36  64DF               	cpfsgt	indf2,c
  7818   004E38  EF20  F027         	goto	u4961
  7819   004E3C  EF22  F027         	goto	u4960
  7820   004E40                     u4961:
  7821   004E40  EFE6  F026         	goto	l5101
  7822   004E44                     u4960:
  7823   004E44                     l5113:
  7824                           
  7825                           ;dc_motor.c: 180:     delayed_ms(time);
  7826   004E44  C018  F001         	movff	timed_forward@time,delayed_ms@time
  7827   004E48  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  7828   004E4C  EC94  F02E         	call	_delayed_ms	;wreg free
  7829   004E50  0012               	return		;funcret
  7830   004E52                     __end_of_timed_forward:
  7831                           	callstack 0
  7832                           
  7833 ;; *************** function _delayed_ms *****************
  7834 ;; Defined at:
  7835 ;;		line 39 in file "timers.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;  time            2    0[COMRAM] int 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  i               2    3[COMRAM] unsigned int 
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  1    wreg      void 
  7842 ;; Registers used:
  7843 ;;		wreg, status,2, status,0
  7844 ;; Tracked objects:
  7845 ;;		On entry : 0/0
  7846 ;;		On exit  : 0/0
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7851 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7852 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7853 ;;Total ram usage:        5 bytes
  7854 ;; Hardware stack levels used: 1
  7855 ;; Hardware stack levels required when called: 1
  7856 ;; This function calls:
  7857 ;;		Nothing
  7858 ;; This function is called by:
  7859 ;;		_timed_forward
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863                           	psect	text33
  7864   005D28                     __ptext33:
  7865                           	callstack 0
  7866   005D28                     _delayed_ms:
  7867                           	callstack 27
  7868   005D28                     
  7869                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  7870   005D28  0E00               	movlw	0
  7871   005D2A  6E05               	movwf	(delayed_ms@i+1)^0,c
  7872   005D2C  0E00               	movlw	0
  7873   005D2E  6E04               	movwf	delayed_ms@i^0,c
  7874   005D30  EFA4  F02E         	goto	l672
  7875   005D34                     l4931:
  7876                           
  7877                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
  7878   005D34  0E15               	movlw	21
  7879   005D36  6E03               	movwf	??_delayed_ms^0,c
  7880   005D38  0EC6               	movlw	198
  7881   005D3A                     u5827:
  7882   005D3A  2EE8               	decfsz	wreg,f,c
  7883   005D3C  D7FE               	bra	u5827
  7884   005D3E  2E03               	decfsz	??_delayed_ms^0,f,c
  7885   005D40  D7FC               	bra	u5827
  7886   005D42  D000               	nop2	
  7887   005D44                     
  7888                           ;timers.c: 42:     }
  7889   005D44  4A04               	infsnz	delayed_ms@i^0,f,c
  7890   005D46  2A05               	incf	(delayed_ms@i+1)^0,f,c
  7891   005D48                     l672:
  7892   005D48  5001               	movf	delayed_ms@time^0,w,c
  7893   005D4A  5C04               	subwf	delayed_ms@i^0,w,c
  7894   005D4C  5002               	movf	(delayed_ms@time+1)^0,w,c
  7895   005D4E  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  7896   005D50  A0D8               	btfss	status,0,c
  7897   005D52  EFAD  F02E         	goto	u4891
  7898   005D56  EFAF  F02E         	goto	u4890
  7899   005D5A                     u4891:
  7900   005D5A  EF9A  F02E         	goto	l4931
  7901   005D5E                     u4890:
  7902   005D5E  0012               	return		;funcret
  7903   005D60                     __end_of_delayed_ms:
  7904                           	callstack 0
  7905                           
  7906 ;; *************** function _ReverseYellow *****************
  7907 ;; Defined at:
  7908 ;;		line 320 in file "dc_motor.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7911 ;;		 -> motorL(9), 
  7912 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7913 ;;		 -> motorR(9), 
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;		None
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      void 
  7918 ;; Registers used:
  7919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7928 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7929 ;;Total ram usage:        4 bytes
  7930 ;; Hardware stack levels used: 1
  7931 ;; Hardware stack levels required when called: 5
  7932 ;; This function calls:
  7933 ;;		_ForwardOneBlock
  7934 ;;		_reverseDetect
  7935 ;;		_turnRight45
  7936 ;; This function is called by:
  7937 ;;		_go_Home
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text34
  7942   004C3C                     __ptext34:
  7943                           	callstack 0
  7944   004C3C                     _ReverseYellow:
  7945                           	callstack 24
  7946   004C3C                     
  7947                           ;dc_motor.c: 321:     reverseDetect(&motorL, &motorR);
  7948   004C3C  0E7B               	movlw	low _motorL
  7949   004C3E  6E1A               	movwf	reverseDetect@mL^0,c
  7950   004C40  0E01               	movlw	high _motorL
  7951   004C42  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7952   004C44  0E72               	movlw	low _motorR
  7953   004C46  6E1C               	movwf	reverseDetect@mR^0,c
  7954   004C48  0E01               	movlw	high _motorR
  7955   004C4A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7956   004C4C  ECFD  F02A         	call	_reverseDetect	;wreg free
  7957                           
  7958                           ;dc_motor.c: 322:     turnRight45(&motorL, &motorR);
  7959   004C50  0E7B               	movlw	low _motorL
  7960   004C52  6E1A               	movwf	turnRight45@mL^0,c
  7961   004C54  0E01               	movlw	high _motorL
  7962   004C56  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7963   004C58  0E72               	movlw	low _motorR
  7964   004C5A  6E1C               	movwf	turnRight45@mR^0,c
  7965   004C5C  0E01               	movlw	high _motorR
  7966   004C5E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7967   004C60  EC2A  F02B         	call	_turnRight45	;wreg free
  7968                           
  7969                           ;dc_motor.c: 323:     turnRight45(&motorL, &motorR);
  7970   004C64  0E7B               	movlw	low _motorL
  7971   004C66  6E1A               	movwf	turnRight45@mL^0,c
  7972   004C68  0E01               	movlw	high _motorL
  7973   004C6A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7974   004C6C  0E72               	movlw	low _motorR
  7975   004C6E  6E1C               	movwf	turnRight45@mR^0,c
  7976   004C70  0E01               	movlw	high _motorR
  7977   004C72  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7978   004C74  EC2A  F02B         	call	_turnRight45	;wreg free
  7979                           
  7980                           ;dc_motor.c: 324:     ForwardOneBlock(&motorL, &motorR);
  7981   004C78  0E7B               	movlw	low _motorL
  7982   004C7A  6E1A               	movwf	ForwardOneBlock@mL^0,c
  7983   004C7C  0E01               	movlw	high _motorL
  7984   004C7E  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  7985   004C80  0E72               	movlw	low _motorR
  7986   004C82  6E1C               	movwf	ForwardOneBlock@mR^0,c
  7987   004C84  0E01               	movlw	high _motorR
  7988   004C86  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  7989   004C88  EC49  F02A         	call	_ForwardOneBlock	;wreg free
  7990                           
  7991                           ;dc_motor.c: 325:     reverseDetect(&motorL, &motorR);
  7992   004C8C  0E7B               	movlw	low _motorL
  7993   004C8E  6E1A               	movwf	reverseDetect@mL^0,c
  7994   004C90  0E01               	movlw	high _motorL
  7995   004C92  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7996   004C94  0E72               	movlw	low _motorR
  7997   004C96  6E1C               	movwf	reverseDetect@mR^0,c
  7998   004C98  0E01               	movlw	high _motorR
  7999   004C9A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8000   004C9C  ECFD  F02A         	call	_reverseDetect	;wreg free
  8001                           
  8002                           ;dc_motor.c: 326:     turnRight45(&motorL, &motorR);
  8003   004CA0  0E7B               	movlw	low _motorL
  8004   004CA2  6E1A               	movwf	turnRight45@mL^0,c
  8005   004CA4  0E01               	movlw	high _motorL
  8006   004CA6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8007   004CA8  0E72               	movlw	low _motorR
  8008   004CAA  6E1C               	movwf	turnRight45@mR^0,c
  8009   004CAC  0E01               	movlw	high _motorR
  8010   004CAE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8011   004CB0  EC2A  F02B         	call	_turnRight45	;wreg free
  8012                           
  8013                           ;dc_motor.c: 327:     turnRight45(&motorL, &motorR);
  8014   004CB4  0E7B               	movlw	low _motorL
  8015   004CB6  6E1A               	movwf	turnRight45@mL^0,c
  8016   004CB8  0E01               	movlw	high _motorL
  8017   004CBA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8018   004CBC  0E72               	movlw	low _motorR
  8019   004CBE  6E1C               	movwf	turnRight45@mR^0,c
  8020   004CC0  0E01               	movlw	high _motorR
  8021   004CC2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8022   004CC4  EC2A  F02B         	call	_turnRight45	;wreg free
  8023                           
  8024                           ;dc_motor.c: 328:     turnRight45(&motorL, &motorR);
  8025   004CC8  0E7B               	movlw	low _motorL
  8026   004CCA  6E1A               	movwf	turnRight45@mL^0,c
  8027   004CCC  0E01               	movlw	high _motorL
  8028   004CCE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8029   004CD0  0E72               	movlw	low _motorR
  8030   004CD2  6E1C               	movwf	turnRight45@mR^0,c
  8031   004CD4  0E01               	movlw	high _motorR
  8032   004CD6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8033   004CD8  EC2A  F02B         	call	_turnRight45	;wreg free
  8034                           
  8035                           ;dc_motor.c: 329:     turnRight45(&motorL, &motorR);
  8036   004CDC  0E7B               	movlw	low _motorL
  8037   004CDE  6E1A               	movwf	turnRight45@mL^0,c
  8038   004CE0  0E01               	movlw	high _motorL
  8039   004CE2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8040   004CE4  0E72               	movlw	low _motorR
  8041   004CE6  6E1C               	movwf	turnRight45@mR^0,c
  8042   004CE8  0E01               	movlw	high _motorR
  8043   004CEA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8044   004CEC  EC2A  F02B         	call	_turnRight45	;wreg free
  8045   004CF0  0012               	return		;funcret
  8046   004CF2                     __end_of_ReverseYellow:
  8047                           	callstack 0
  8048                           
  8049 ;; *************** function _ReversePink *****************
  8050 ;; Defined at:
  8051 ;;		line 332 in file "dc_motor.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8054 ;;		 -> motorL(9), 
  8055 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8056 ;;		 -> motorR(9), 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;		None
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  1    wreg      void 
  8061 ;; Registers used:
  8062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8068 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8071 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8072 ;;Total ram usage:        4 bytes
  8073 ;; Hardware stack levels used: 1
  8074 ;; Hardware stack levels required when called: 5
  8075 ;; This function calls:
  8076 ;;		_ForwardOneBlock
  8077 ;;		_reverseDetect
  8078 ;;		_turnLeft45
  8079 ;; This function is called by:
  8080 ;;		_go_Home
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text35
  8085   004CF2                     __ptext35:
  8086                           	callstack 0
  8087   004CF2                     _ReversePink:
  8088                           	callstack 24
  8089   004CF2                     
  8090                           ;dc_motor.c: 333:     reverseDetect(&motorL, &motorR);
  8091   004CF2  0E7B               	movlw	low _motorL
  8092   004CF4  6E1A               	movwf	reverseDetect@mL^0,c
  8093   004CF6  0E01               	movlw	high _motorL
  8094   004CF8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8095   004CFA  0E72               	movlw	low _motorR
  8096   004CFC  6E1C               	movwf	reverseDetect@mR^0,c
  8097   004CFE  0E01               	movlw	high _motorR
  8098   004D00  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8099   004D02  ECFD  F02A         	call	_reverseDetect	;wreg free
  8100                           
  8101                           ;dc_motor.c: 334:     turnLeft45(&motorL, &motorR);
  8102   004D06  0E7B               	movlw	low _motorL
  8103   004D08  6E1A               	movwf	turnLeft45@mL^0,c
  8104   004D0A  0E01               	movlw	high _motorL
  8105   004D0C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8106   004D0E  0E72               	movlw	low _motorR
  8107   004D10  6E1C               	movwf	turnLeft45@mR^0,c
  8108   004D12  0E01               	movlw	high _motorR
  8109   004D14  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8110   004D16  EC56  F02B         	call	_turnLeft45	;wreg free
  8111                           
  8112                           ;dc_motor.c: 335:     turnLeft45(&motorL, &motorR);
  8113   004D1A  0E7B               	movlw	low _motorL
  8114   004D1C  6E1A               	movwf	turnLeft45@mL^0,c
  8115   004D1E  0E01               	movlw	high _motorL
  8116   004D20  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8117   004D22  0E72               	movlw	low _motorR
  8118   004D24  6E1C               	movwf	turnLeft45@mR^0,c
  8119   004D26  0E01               	movlw	high _motorR
  8120   004D28  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8121   004D2A  EC56  F02B         	call	_turnLeft45	;wreg free
  8122                           
  8123                           ;dc_motor.c: 336:     ForwardOneBlock(&motorL, &motorR);
  8124   004D2E  0E7B               	movlw	low _motorL
  8125   004D30  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8126   004D32  0E01               	movlw	high _motorL
  8127   004D34  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8128   004D36  0E72               	movlw	low _motorR
  8129   004D38  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8130   004D3A  0E01               	movlw	high _motorR
  8131   004D3C  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8132   004D3E  EC49  F02A         	call	_ForwardOneBlock	;wreg free
  8133                           
  8134                           ;dc_motor.c: 337:     reverseDetect(&motorL, &motorR);
  8135   004D42  0E7B               	movlw	low _motorL
  8136   004D44  6E1A               	movwf	reverseDetect@mL^0,c
  8137   004D46  0E01               	movlw	high _motorL
  8138   004D48  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8139   004D4A  0E72               	movlw	low _motorR
  8140   004D4C  6E1C               	movwf	reverseDetect@mR^0,c
  8141   004D4E  0E01               	movlw	high _motorR
  8142   004D50  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8143   004D52  ECFD  F02A         	call	_reverseDetect	;wreg free
  8144                           
  8145                           ;dc_motor.c: 338:     turnLeft45(&motorL, &motorR);
  8146   004D56  0E7B               	movlw	low _motorL
  8147   004D58  6E1A               	movwf	turnLeft45@mL^0,c
  8148   004D5A  0E01               	movlw	high _motorL
  8149   004D5C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8150   004D5E  0E72               	movlw	low _motorR
  8151   004D60  6E1C               	movwf	turnLeft45@mR^0,c
  8152   004D62  0E01               	movlw	high _motorR
  8153   004D64  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8154   004D66  EC56  F02B         	call	_turnLeft45	;wreg free
  8155                           
  8156                           ;dc_motor.c: 339:     turnLeft45(&motorL, &motorR);
  8157   004D6A  0E7B               	movlw	low _motorL
  8158   004D6C  6E1A               	movwf	turnLeft45@mL^0,c
  8159   004D6E  0E01               	movlw	high _motorL
  8160   004D70  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8161   004D72  0E72               	movlw	low _motorR
  8162   004D74  6E1C               	movwf	turnLeft45@mR^0,c
  8163   004D76  0E01               	movlw	high _motorR
  8164   004D78  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8165   004D7A  EC56  F02B         	call	_turnLeft45	;wreg free
  8166                           
  8167                           ;dc_motor.c: 340:     turnLeft45(&motorL, &motorR);
  8168   004D7E  0E7B               	movlw	low _motorL
  8169   004D80  6E1A               	movwf	turnLeft45@mL^0,c
  8170   004D82  0E01               	movlw	high _motorL
  8171   004D84  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8172   004D86  0E72               	movlw	low _motorR
  8173   004D88  6E1C               	movwf	turnLeft45@mR^0,c
  8174   004D8A  0E01               	movlw	high _motorR
  8175   004D8C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8176   004D8E  EC56  F02B         	call	_turnLeft45	;wreg free
  8177                           
  8178                           ;dc_motor.c: 341:     turnLeft45(&motorL, &motorR);
  8179   004D92  0E7B               	movlw	low _motorL
  8180   004D94  6E1A               	movwf	turnLeft45@mL^0,c
  8181   004D96  0E01               	movlw	high _motorL
  8182   004D98  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8183   004D9A  0E72               	movlw	low _motorR
  8184   004D9C  6E1C               	movwf	turnLeft45@mR^0,c
  8185   004D9E  0E01               	movlw	high _motorR
  8186   004DA0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8187   004DA2  EC56  F02B         	call	_turnLeft45	;wreg free
  8188   004DA6  0012               	return		;funcret
  8189   004DA8                     __end_of_ReversePink:
  8190                           	callstack 0
  8191                           
  8192 ;; *************** function _ForwardOneBlock *****************
  8193 ;; Defined at:
  8194 ;;		line 228 in file "dc_motor.c"
  8195 ;; Parameters:    Size  Location     Type
  8196 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8197 ;;		 -> motorL(9), 
  8198 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8199 ;;		 -> motorR(9), 
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;		None
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  1    wreg      void 
  8204 ;; Registers used:
  8205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8213 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8214 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8215 ;;Total ram usage:        6 bytes
  8216 ;; Hardware stack levels used: 1
  8217 ;; Hardware stack levels required when called: 4
  8218 ;; This function calls:
  8219 ;;		_fullSpeedAhead
  8220 ;;		_stop
  8221 ;; This function is called by:
  8222 ;;		_ReverseYellow
  8223 ;;		_ReversePink
  8224 ;; This function uses a non-reentrant model
  8225 ;;
  8226                           
  8227                           	psect	text36
  8228   005492                     __ptext36:
  8229                           	callstack 0
  8230   005492                     _ForwardOneBlock:
  8231                           	callstack 24
  8232   005492                     
  8233                           ;dc_motor.c: 229:     fullSpeedAhead(mL,mR);
  8234   005492  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  8235   005496  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  8236   00549A  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  8237   00549E  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  8238   0054A2  ECCD  F027         	call	_fullSpeedAhead	;wreg free
  8239   0054A6                     
  8240                           ;dc_motor.c: 230:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  8241   0054A6  0EA3               	movlw	163
  8242   0054A8  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8243   0054AA  0E57               	movlw	87
  8244   0054AC  6E1E               	movwf	??_ForwardOneBlock^0,c
  8245   0054AE  0E02               	movlw	2
  8246   0054B0                     u5837:
  8247   0054B0  2EE8               	decfsz	wreg,f,c
  8248   0054B2  D7FE               	bra	u5837
  8249   0054B4  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8250   0054B6  D7FC               	bra	u5837
  8251   0054B8  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8252   0054BA  D7FA               	bra	u5837
  8253   0054BC  D000               	nop2	
  8254   0054BE                     
  8255                           ;dc_motor.c: 231:     stop(&motorL, &motorR);
  8256   0054BE  0E7B               	movlw	low _motorL
  8257   0054C0  6E14               	movwf	stop@mL^0,c
  8258   0054C2  0E01               	movlw	high _motorL
  8259   0054C4  6E15               	movwf	(stop@mL+1)^0,c
  8260   0054C6  0E72               	movlw	low _motorR
  8261   0054C8  6E16               	movwf	stop@mR^0,c
  8262   0054CA  0E01               	movlw	high _motorR
  8263   0054CC  6E17               	movwf	(stop@mR+1)^0,c
  8264   0054CE  ECFE  F028         	call	_stop	;wreg free
  8265                           
  8266                           ;dc_motor.c: 232:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8267   0054D2  0E05               	movlw	5
  8268   0054D4  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8269   0054D6  0E0F               	movlw	15
  8270   0054D8  6E1E               	movwf	??_ForwardOneBlock^0,c
  8271   0054DA  0EF1               	movlw	241
  8272   0054DC                     u5847:
  8273   0054DC  2EE8               	decfsz	wreg,f,c
  8274   0054DE  D7FE               	bra	u5847
  8275   0054E0  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8276   0054E2  D7FC               	bra	u5847
  8277   0054E4  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8278   0054E6  D7FA               	bra	u5847
  8279   0054E8  F000               	nop	
  8280   0054EA  0012               	return		;funcret
  8281   0054EC                     __end_of_ForwardOneBlock:
  8282                           	callstack 0
  8283                           
  8284 ;; *************** function _RedMove *****************
  8285 ;; Defined at:
  8286 ;;		line 252 in file "dc_motor.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8289 ;;		 -> motorL(9), 
  8290 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8291 ;;		 -> motorR(9), 
  8292 ;; Auto vars:     Size  Location     Type
  8293 ;;		None
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  1    wreg      void 
  8296 ;; Registers used:
  8297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8306 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8307 ;;Total ram usage:        4 bytes
  8308 ;; Hardware stack levels used: 1
  8309 ;; Hardware stack levels required when called: 5
  8310 ;; This function calls:
  8311 ;;		_reverseDetect
  8312 ;;		_turnRight45
  8313 ;; This function is called by:
  8314 ;;		_main
  8315 ;;		_go_Home
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           	psect	text37
  8320   005C74                     __ptext37:
  8321                           	callstack 0
  8322   005C74                     _RedMove:
  8323                           	callstack 24
  8324   005C74                     
  8325                           ;dc_motor.c: 253:     reverseDetect(&motorL, &motorR);
  8326   005C74  0E7B               	movlw	low _motorL
  8327   005C76  6E1A               	movwf	reverseDetect@mL^0,c
  8328   005C78  0E01               	movlw	high _motorL
  8329   005C7A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8330   005C7C  0E72               	movlw	low _motorR
  8331   005C7E  6E1C               	movwf	reverseDetect@mR^0,c
  8332   005C80  0E01               	movlw	high _motorR
  8333   005C82  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8334   005C84  ECFD  F02A         	call	_reverseDetect	;wreg free
  8335                           
  8336                           ;dc_motor.c: 255:     turnRight45(&motorL, &motorR);
  8337   005C88  0E7B               	movlw	low _motorL
  8338   005C8A  6E1A               	movwf	turnRight45@mL^0,c
  8339   005C8C  0E01               	movlw	high _motorL
  8340   005C8E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8341   005C90  0E72               	movlw	low _motorR
  8342   005C92  6E1C               	movwf	turnRight45@mR^0,c
  8343   005C94  0E01               	movlw	high _motorR
  8344   005C96  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8345   005C98  EC2A  F02B         	call	_turnRight45	;wreg free
  8346                           
  8347                           ;dc_motor.c: 256:     turnRight45(&motorL, &motorR);
  8348   005C9C  0E7B               	movlw	low _motorL
  8349   005C9E  6E1A               	movwf	turnRight45@mL^0,c
  8350   005CA0  0E01               	movlw	high _motorL
  8351   005CA2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8352   005CA4  0E72               	movlw	low _motorR
  8353   005CA6  6E1C               	movwf	turnRight45@mR^0,c
  8354   005CA8  0E01               	movlw	high _motorR
  8355   005CAA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8356   005CAC  EC2A  F02B         	call	_turnRight45	;wreg free
  8357   005CB0  0012               	return		;funcret
  8358   005CB2                     __end_of_RedMove:
  8359                           	callstack 0
  8360                           
  8361 ;; *************** function _OrangeMove *****************
  8362 ;; Defined at:
  8363 ;;		line 298 in file "dc_motor.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8366 ;;		 -> motorL(9), 
  8367 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8368 ;;		 -> motorR(9), 
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;		None
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  1    wreg      void 
  8373 ;; Registers used:
  8374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8380 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8383 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8384 ;;Total ram usage:        4 bytes
  8385 ;; Hardware stack levels used: 1
  8386 ;; Hardware stack levels required when called: 5
  8387 ;; This function calls:
  8388 ;;		_reverseDetect
  8389 ;;		_turnRight45
  8390 ;; This function is called by:
  8391 ;;		_main
  8392 ;;		_go_Home
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395                           
  8396                           	psect	text38
  8397   0057AC                     __ptext38:
  8398                           	callstack 0
  8399   0057AC                     _OrangeMove:
  8400                           	callstack 24
  8401   0057AC                     
  8402                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
  8403   0057AC  0E7B               	movlw	low _motorL
  8404   0057AE  6E1A               	movwf	reverseDetect@mL^0,c
  8405   0057B0  0E01               	movlw	high _motorL
  8406   0057B2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8407   0057B4  0E72               	movlw	low _motorR
  8408   0057B6  6E1C               	movwf	reverseDetect@mR^0,c
  8409   0057B8  0E01               	movlw	high _motorR
  8410   0057BA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8411   0057BC  ECFD  F02A         	call	_reverseDetect	;wreg free
  8412                           
  8413                           ;dc_motor.c: 301:     turnRight45(&motorL, &motorR);
  8414   0057C0  0E7B               	movlw	low _motorL
  8415   0057C2  6E1A               	movwf	turnRight45@mL^0,c
  8416   0057C4  0E01               	movlw	high _motorL
  8417   0057C6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8418   0057C8  0E72               	movlw	low _motorR
  8419   0057CA  6E1C               	movwf	turnRight45@mR^0,c
  8420   0057CC  0E01               	movlw	high _motorR
  8421   0057CE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8422   0057D0  EC2A  F02B         	call	_turnRight45	;wreg free
  8423                           
  8424                           ;dc_motor.c: 302:     turnRight45(&motorL, &motorR);
  8425   0057D4  0E7B               	movlw	low _motorL
  8426   0057D6  6E1A               	movwf	turnRight45@mL^0,c
  8427   0057D8  0E01               	movlw	high _motorL
  8428   0057DA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8429   0057DC  0E72               	movlw	low _motorR
  8430   0057DE  6E1C               	movwf	turnRight45@mR^0,c
  8431   0057E0  0E01               	movlw	high _motorR
  8432   0057E2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8433   0057E4  EC2A  F02B         	call	_turnRight45	;wreg free
  8434                           
  8435                           ;dc_motor.c: 303:     turnRight45(&motorL, &motorR);
  8436   0057E8  0E7B               	movlw	low _motorL
  8437   0057EA  6E1A               	movwf	turnRight45@mL^0,c
  8438   0057EC  0E01               	movlw	high _motorL
  8439   0057EE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8440   0057F0  0E72               	movlw	low _motorR
  8441   0057F2  6E1C               	movwf	turnRight45@mR^0,c
  8442   0057F4  0E01               	movlw	high _motorR
  8443   0057F6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8444   0057F8  EC2A  F02B         	call	_turnRight45	;wreg free
  8445   0057FC  0012               	return		;funcret
  8446   0057FE                     __end_of_OrangeMove:
  8447                           	callstack 0
  8448                           
  8449 ;; *************** function _LightBlueMove *****************
  8450 ;; Defined at:
  8451 ;;		line 307 in file "dc_motor.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8454 ;;		 -> motorL(9), 
  8455 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8456 ;;		 -> motorR(9), 
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;		None
  8459 ;; Return value:  Size  Location     Type
  8460 ;;                  1    wreg      void 
  8461 ;; Registers used:
  8462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8463 ;; Tracked objects:
  8464 ;;		On entry : 0/0
  8465 ;;		On exit  : 0/0
  8466 ;;		Unchanged: 0/0
  8467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8468 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8471 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8472 ;;Total ram usage:        4 bytes
  8473 ;; Hardware stack levels used: 1
  8474 ;; Hardware stack levels required when called: 5
  8475 ;; This function calls:
  8476 ;;		_reverseDetect
  8477 ;;		_turnLeft45
  8478 ;; This function is called by:
  8479 ;;		_main
  8480 ;;		_go_Home
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           	psect	text39
  8485   0057FE                     __ptext39:
  8486                           	callstack 0
  8487   0057FE                     _LightBlueMove:
  8488                           	callstack 24
  8489   0057FE                     
  8490                           ;dc_motor.c: 308:     reverseDetect(&motorL, &motorR);
  8491   0057FE  0E7B               	movlw	low _motorL
  8492   005800  6E1A               	movwf	reverseDetect@mL^0,c
  8493   005802  0E01               	movlw	high _motorL
  8494   005804  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8495   005806  0E72               	movlw	low _motorR
  8496   005808  6E1C               	movwf	reverseDetect@mR^0,c
  8497   00580A  0E01               	movlw	high _motorR
  8498   00580C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8499   00580E  ECFD  F02A         	call	_reverseDetect	;wreg free
  8500                           
  8501                           ;dc_motor.c: 310:     turnLeft45(&motorL, &motorR);
  8502   005812  0E7B               	movlw	low _motorL
  8503   005814  6E1A               	movwf	turnLeft45@mL^0,c
  8504   005816  0E01               	movlw	high _motorL
  8505   005818  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8506   00581A  0E72               	movlw	low _motorR
  8507   00581C  6E1C               	movwf	turnLeft45@mR^0,c
  8508   00581E  0E01               	movlw	high _motorR
  8509   005820  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8510   005822  EC56  F02B         	call	_turnLeft45	;wreg free
  8511                           
  8512                           ;dc_motor.c: 311:     turnLeft45(&motorL, &motorR);
  8513   005826  0E7B               	movlw	low _motorL
  8514   005828  6E1A               	movwf	turnLeft45@mL^0,c
  8515   00582A  0E01               	movlw	high _motorL
  8516   00582C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8517   00582E  0E72               	movlw	low _motorR
  8518   005830  6E1C               	movwf	turnLeft45@mR^0,c
  8519   005832  0E01               	movlw	high _motorR
  8520   005834  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8521   005836  EC56  F02B         	call	_turnLeft45	;wreg free
  8522                           
  8523                           ;dc_motor.c: 312:     turnLeft45(&motorL, &motorR);
  8524   00583A  0E7B               	movlw	low _motorL
  8525   00583C  6E1A               	movwf	turnLeft45@mL^0,c
  8526   00583E  0E01               	movlw	high _motorL
  8527   005840  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8528   005842  0E72               	movlw	low _motorR
  8529   005844  6E1C               	movwf	turnLeft45@mR^0,c
  8530   005846  0E01               	movlw	high _motorR
  8531   005848  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8532   00584A  EC56  F02B         	call	_turnLeft45	;wreg free
  8533   00584E  0012               	return		;funcret
  8534   005850                     __end_of_LightBlueMove:
  8535                           	callstack 0
  8536                           
  8537 ;; *************** function _GreenMove *****************
  8538 ;; Defined at:
  8539 ;;		line 260 in file "dc_motor.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8542 ;;		 -> motorL(9), 
  8543 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8544 ;;		 -> motorR(9), 
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;		None
  8547 ;; Return value:  Size  Location     Type
  8548 ;;                  1    wreg      void 
  8549 ;; Registers used:
  8550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8551 ;; Tracked objects:
  8552 ;;		On entry : 0/0
  8553 ;;		On exit  : 0/0
  8554 ;;		Unchanged: 0/0
  8555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8559 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8560 ;;Total ram usage:        4 bytes
  8561 ;; Hardware stack levels used: 1
  8562 ;; Hardware stack levels required when called: 5
  8563 ;; This function calls:
  8564 ;;		_reverseDetect
  8565 ;;		_turnLeft45
  8566 ;; This function is called by:
  8567 ;;		_main
  8568 ;;		_go_Home
  8569 ;; This function uses a non-reentrant model
  8570 ;;
  8571                           
  8572                           	psect	text40
  8573   005CB2                     __ptext40:
  8574                           	callstack 0
  8575   005CB2                     _GreenMove:
  8576                           	callstack 24
  8577   005CB2                     
  8578                           ;dc_motor.c: 261:     reverseDetect(&motorL, &motorR);
  8579   005CB2  0E7B               	movlw	low _motorL
  8580   005CB4  6E1A               	movwf	reverseDetect@mL^0,c
  8581   005CB6  0E01               	movlw	high _motorL
  8582   005CB8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8583   005CBA  0E72               	movlw	low _motorR
  8584   005CBC  6E1C               	movwf	reverseDetect@mR^0,c
  8585   005CBE  0E01               	movlw	high _motorR
  8586   005CC0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8587   005CC2  ECFD  F02A         	call	_reverseDetect	;wreg free
  8588                           
  8589                           ;dc_motor.c: 263:     turnLeft45(&motorL, &motorR);
  8590   005CC6  0E7B               	movlw	low _motorL
  8591   005CC8  6E1A               	movwf	turnLeft45@mL^0,c
  8592   005CCA  0E01               	movlw	high _motorL
  8593   005CCC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8594   005CCE  0E72               	movlw	low _motorR
  8595   005CD0  6E1C               	movwf	turnLeft45@mR^0,c
  8596   005CD2  0E01               	movlw	high _motorR
  8597   005CD4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8598   005CD6  EC56  F02B         	call	_turnLeft45	;wreg free
  8599                           
  8600                           ;dc_motor.c: 264:     turnLeft45(&motorL, &motorR);
  8601   005CDA  0E7B               	movlw	low _motorL
  8602   005CDC  6E1A               	movwf	turnLeft45@mL^0,c
  8603   005CDE  0E01               	movlw	high _motorL
  8604   005CE0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8605   005CE2  0E72               	movlw	low _motorR
  8606   005CE4  6E1C               	movwf	turnLeft45@mR^0,c
  8607   005CE6  0E01               	movlw	high _motorR
  8608   005CE8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8609   005CEA  EC56  F02B         	call	_turnLeft45	;wreg free
  8610   005CEE  0012               	return		;funcret
  8611   005CF0                     __end_of_GreenMove:
  8612                           	callstack 0
  8613                           
  8614 ;; *************** function _BlueMove *****************
  8615 ;; Defined at:
  8616 ;;		line 268 in file "dc_motor.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8619 ;;		 -> motorL(9), 
  8620 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8621 ;;		 -> motorR(9), 
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;		None
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1    wreg      void 
  8626 ;; Registers used:
  8627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8636 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8637 ;;Total ram usage:        4 bytes
  8638 ;; Hardware stack levels used: 1
  8639 ;; Hardware stack levels required when called: 5
  8640 ;; This function calls:
  8641 ;;		_reverseDetect
  8642 ;;		_turnRight45
  8643 ;; This function is called by:
  8644 ;;		_main
  8645 ;;		_go_Home
  8646 ;; This function uses a non-reentrant model
  8647 ;;
  8648                           
  8649                           	psect	text41
  8650   0053CE                     __ptext41:
  8651                           	callstack 0
  8652   0053CE                     _BlueMove:
  8653                           	callstack 24
  8654   0053CE                     
  8655                           ;dc_motor.c: 269:     reverseDetect(&motorL, &motorR);
  8656   0053CE  0E7B               	movlw	low _motorL
  8657   0053D0  6E1A               	movwf	reverseDetect@mL^0,c
  8658   0053D2  0E01               	movlw	high _motorL
  8659   0053D4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8660   0053D6  0E72               	movlw	low _motorR
  8661   0053D8  6E1C               	movwf	reverseDetect@mR^0,c
  8662   0053DA  0E01               	movlw	high _motorR
  8663   0053DC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8664   0053DE  ECFD  F02A         	call	_reverseDetect	;wreg free
  8665                           
  8666                           ;dc_motor.c: 271:     turnRight45(&motorL, &motorR);
  8667   0053E2  0E7B               	movlw	low _motorL
  8668   0053E4  6E1A               	movwf	turnRight45@mL^0,c
  8669   0053E6  0E01               	movlw	high _motorL
  8670   0053E8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8671   0053EA  0E72               	movlw	low _motorR
  8672   0053EC  6E1C               	movwf	turnRight45@mR^0,c
  8673   0053EE  0E01               	movlw	high _motorR
  8674   0053F0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8675   0053F2  EC2A  F02B         	call	_turnRight45	;wreg free
  8676                           
  8677                           ;dc_motor.c: 272:     turnRight45(&motorL, &motorR);
  8678   0053F6  0E7B               	movlw	low _motorL
  8679   0053F8  6E1A               	movwf	turnRight45@mL^0,c
  8680   0053FA  0E01               	movlw	high _motorL
  8681   0053FC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8682   0053FE  0E72               	movlw	low _motorR
  8683   005400  6E1C               	movwf	turnRight45@mR^0,c
  8684   005402  0E01               	movlw	high _motorR
  8685   005404  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8686   005406  EC2A  F02B         	call	_turnRight45	;wreg free
  8687                           
  8688                           ;dc_motor.c: 273:     turnRight45(&motorL, &motorR);
  8689   00540A  0E7B               	movlw	low _motorL
  8690   00540C  6E1A               	movwf	turnRight45@mL^0,c
  8691   00540E  0E01               	movlw	high _motorL
  8692   005410  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8693   005412  0E72               	movlw	low _motorR
  8694   005414  6E1C               	movwf	turnRight45@mR^0,c
  8695   005416  0E01               	movlw	high _motorR
  8696   005418  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8697   00541A  EC2A  F02B         	call	_turnRight45	;wreg free
  8698                           
  8699                           ;dc_motor.c: 274:     turnRight45(&motorL, &motorR);
  8700   00541E  0E7B               	movlw	low _motorL
  8701   005420  6E1A               	movwf	turnRight45@mL^0,c
  8702   005422  0E01               	movlw	high _motorL
  8703   005424  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8704   005426  0E72               	movlw	low _motorR
  8705   005428  6E1C               	movwf	turnRight45@mR^0,c
  8706   00542A  0E01               	movlw	high _motorR
  8707   00542C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8708   00542E  EC2A  F02B         	call	_turnRight45	;wreg free
  8709   005432  0012               	return		;funcret
  8710   005434                     __end_of_BlueMove:
  8711                           	callstack 0
  8712                           
  8713 ;; *************** function _getTMR0val *****************
  8714 ;; Defined at:
  8715 ;;		line 28 in file "timers.c"
  8716 ;; Parameters:    Size  Location     Type
  8717 ;;		None
  8718 ;; Auto vars:     Size  Location     Type
  8719 ;;  moving          2    0[COMRAM] int 
  8720 ;;  temp            2    0        unsigned int 
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  1    wreg      void 
  8723 ;; Registers used:
  8724 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8734 ;;Total ram usage:        2 bytes
  8735 ;; Hardware stack levels used: 1
  8736 ;; Hardware stack levels required when called: 1
  8737 ;; This function calls:
  8738 ;;		Nothing
  8739 ;; This function is called by:
  8740 ;;		_main
  8741 ;; This function uses a non-reentrant model
  8742 ;;
  8743                           
  8744                           	psect	text42
  8745   005E0C                     __ptext42:
  8746                           	callstack 0
  8747   005E0C                     _getTMR0val:
  8748                           	callstack 29
  8749   005E0C  50D3               	movf	211,w,c	;volatile
  8750   005E0E                     
  8751                           ;timers.c: 32:     int moving=TMR0H<<8;
  8752   005E0E  50D4               	movf	212,w,c	;volatile
  8753   005E10  6E02               	movwf	(getTMR0val@moving+1)^0,c
  8754   005E12  6A01               	clrf	getTMR0val@moving^0,c
  8755   005E14                     
  8756                           ;timers.c: 33:     Time_forward[move_count]=moving;
  8757   005E14  90D8               	bcf	status,0,c
  8758   005E16  0101               	movlb	1	; () banked
  8759   005E18  3514               	rlcf	_move_count& (0+255),w,b	;volatile
  8760   005E1A  6ED9               	movwf	fsr2l,c
  8761   005E1C  3515               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  8762   005E1E  6EDA               	movwf	fsr2h,c
  8763   005E20  0E3C               	movlw	low _Time_forward
  8764   005E22  26D9               	addwf	fsr2l,f,c
  8765   005E24  0E02               	movlw	high _Time_forward
  8766   005E26  22DA               	addwfc	fsr2h,f,c
  8767   005E28  C001  FFDE         	movff	getTMR0val@moving,postinc2
  8768   005E2C  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  8769   005E30                     
  8770                           ; BSR set to: 1
  8771   005E30  0012               	return		;funcret
  8772   005E32                     __end_of_getTMR0val:
  8773                           	callstack 0
  8774                           
  8775 ;; *************** function _colour_rel *****************
  8776 ;; Defined at:
  8777 ;;		line 114 in file "color.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;  vals            2   74[COMRAM] PTR struct RGB
  8780 ;;		 -> vals(8), 
  8781 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8782 ;;		 -> rel(12), 
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;  B               4   20[BANK0 ] float 
  8785 ;;  G               4   16[BANK0 ] float 
  8786 ;;  R               4   12[BANK0 ] float 
  8787 ;;  L               4    0[BANK0 ] float 
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  1    wreg      void 
  8790 ;; Registers used:
  8791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8798 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8800 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8801 ;;Total ram usage:       28 bytes
  8802 ;; Hardware stack levels used: 1
  8803 ;; Hardware stack levels required when called: 2
  8804 ;; This function calls:
  8805 ;;		___fladd
  8806 ;;		___fldiv
  8807 ;;		___xxtofl
  8808 ;; This function is called by:
  8809 ;;		_main
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813                           	psect	text43
  8814   0034EE                     __ptext43:
  8815                           	callstack 0
  8816   0034EE                     _colour_rel:
  8817                           	callstack 28
  8818   0034EE                     
  8819                           ;color.c: 115:     float R = vals->R;
  8820   0034EE  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  8821   0034F2  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  8822   0034F6  CFDE F001          	movff	postinc2,___xxtofl@val
  8823   0034FA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8824   0034FE  0E00               	movlw	0
  8825   003500  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8826   003502  0EFF               	movlw	-1
  8827   003504  6E03               	movwf	(___xxtofl@val+2)^0,c
  8828   003506  6E04               	movwf	(___xxtofl@val+3)^0,c
  8829   003508  0E01               	movlw	1
  8830   00350A  EC2F  F021         	call	___xxtofl
  8831   00350E  C001  F06C         	movff	?___xxtofl,colour_rel@R
  8832   003512  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  8833   003516  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  8834   00351A  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  8835                           
  8836                           ;color.c: 116:     float G = vals->G;
  8837   00351E  EE20 F002          	lfsr	2,2
  8838   003522  504B               	movf	colour_rel@vals^0,w,c
  8839   003524  26D9               	addwf	fsr2l,f,c
  8840   003526  504C               	movf	(colour_rel@vals+1)^0,w,c
  8841   003528  22DA               	addwfc	fsr2h,f,c
  8842   00352A  CFDE F001          	movff	postinc2,___xxtofl@val
  8843   00352E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8844   003532  0E00               	movlw	0
  8845   003534  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8846   003536  0EFF               	movlw	-1
  8847   003538  6E03               	movwf	(___xxtofl@val+2)^0,c
  8848   00353A  6E04               	movwf	(___xxtofl@val+3)^0,c
  8849   00353C  0E01               	movlw	1
  8850   00353E  EC2F  F021         	call	___xxtofl
  8851   003542  C001  F070         	movff	?___xxtofl,colour_rel@G
  8852   003546  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  8853   00354A  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  8854   00354E  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  8855                           
  8856                           ;color.c: 117:     float B = vals->B;
  8857   003552  EE20 F004          	lfsr	2,4
  8858   003556  504B               	movf	colour_rel@vals^0,w,c
  8859   003558  26D9               	addwf	fsr2l,f,c
  8860   00355A  504C               	movf	(colour_rel@vals+1)^0,w,c
  8861   00355C  22DA               	addwfc	fsr2h,f,c
  8862   00355E  CFDE F001          	movff	postinc2,___xxtofl@val
  8863   003562  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8864   003566  0E00               	movlw	0
  8865   003568  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8866   00356A  0EFF               	movlw	-1
  8867   00356C  6E03               	movwf	(___xxtofl@val+2)^0,c
  8868   00356E  6E04               	movwf	(___xxtofl@val+3)^0,c
  8869   003570  0E01               	movlw	1
  8870   003572  EC2F  F021         	call	___xxtofl
  8871   003576  C001  F074         	movff	?___xxtofl,colour_rel@B
  8872   00357A  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  8873   00357E  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  8874   003582  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  8875                           
  8876                           ;color.c: 118:     float L = vals->L;
  8877   003586  EE20 F006          	lfsr	2,6
  8878   00358A  504B               	movf	colour_rel@vals^0,w,c
  8879   00358C  26D9               	addwf	fsr2l,f,c
  8880   00358E  504C               	movf	(colour_rel@vals+1)^0,w,c
  8881   003590  22DA               	addwfc	fsr2h,f,c
  8882   003592  CFDE F001          	movff	postinc2,___xxtofl@val
  8883   003596  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8884   00359A  0E00               	movlw	0
  8885   00359C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8886   00359E  0EFF               	movlw	-1
  8887   0035A0  6E03               	movwf	(___xxtofl@val+2)^0,c
  8888   0035A2  6E04               	movwf	(___xxtofl@val+3)^0,c
  8889   0035A4  0E01               	movlw	1
  8890   0035A6  EC2F  F021         	call	___xxtofl
  8891   0035AA  C001  F060         	movff	?___xxtofl,colour_rel@L
  8892   0035AE  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  8893   0035B2  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  8894   0035B6  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  8895   0035BA                     
  8896                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8897   0035BA  C070  F005         	movff	colour_rel@G,___fladd@a
  8898   0035BE  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8899   0035C2  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8900   0035C6  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8901   0035CA  C06C  F001         	movff	colour_rel@R,___fladd@b
  8902   0035CE  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8903   0035D2  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8904   0035D6  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8905   0035DA  EC35  F014         	call	___fladd	;wreg free
  8906   0035DE  C001  F064         	movff	?___fladd,_colour_rel$2947
  8907   0035E2  C002  F065         	movff	?___fladd+1,_colour_rel$2947+1
  8908   0035E6  C003  F066         	movff	?___fladd+2,_colour_rel$2947+2
  8909   0035EA  C004  F067         	movff	?___fladd+3,_colour_rel$2947+3
  8910   0035EE                     
  8911                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8912   0035EE  C074  F005         	movff	colour_rel@B,___fladd@a
  8913   0035F2  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8914   0035F6  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8915   0035FA  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8916   0035FE  C064  F001         	movff	_colour_rel$2947,___fladd@b
  8917   003602  C065  F002         	movff	_colour_rel$2947+1,___fladd@b+1
  8918   003606  C066  F003         	movff	_colour_rel$2947+2,___fladd@b+2
  8919   00360A  C067  F004         	movff	_colour_rel$2947+3,___fladd@b+3
  8920   00360E  EC35  F014         	call	___fladd	;wreg free
  8921   003612  C001  F068         	movff	?___fladd,_colour_rel$2948
  8922   003616  C002  F069         	movff	?___fladd+1,_colour_rel$2948+1
  8923   00361A  C003  F06A         	movff	?___fladd+2,_colour_rel$2948+2
  8924   00361E  C004  F06B         	movff	?___fladd+3,_colour_rel$2948+3
  8925                           
  8926                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8927   003622  C06C  F032         	movff	colour_rel@R,___fldiv@b
  8928   003626  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  8929   00362A  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  8930   00362E  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  8931   003632  C060  F005         	movff	colour_rel@L,___fladd@a
  8932   003636  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8933   00363A  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8934   00363E  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8935   003642  C068  F001         	movff	_colour_rel$2948,___fladd@b
  8936   003646  C069  F002         	movff	_colour_rel$2948+1,___fladd@b+1
  8937   00364A  C06A  F003         	movff	_colour_rel$2948+2,___fladd@b+2
  8938   00364E  C06B  F004         	movff	_colour_rel$2948+3,___fladd@b+3
  8939   003652  EC35  F014         	call	___fladd	;wreg free
  8940   003656  C001  F036         	movff	?___fladd,___fldiv@a
  8941   00365A  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8942   00365E  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8943   003662  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  8944   003666  ECAA  F018         	call	___fldiv	;wreg free
  8945   00366A  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  8946   00366E  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  8947   003672  C032  FFDE         	movff	?___fldiv,postinc2
  8948   003676  C033  FFDE         	movff	?___fldiv+1,postinc2
  8949   00367A  C034  FFDE         	movff	?___fldiv+2,postinc2
  8950   00367E  C035  FFDE         	movff	?___fldiv+3,postinc2
  8951   003682                     
  8952                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8953   003682  C070  F005         	movff	colour_rel@G,___fladd@a
  8954   003686  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8955   00368A  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8956   00368E  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8957   003692  C06C  F001         	movff	colour_rel@R,___fladd@b
  8958   003696  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8959   00369A  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8960   00369E  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8961   0036A2  EC35  F014         	call	___fladd	;wreg free
  8962   0036A6  C001  F064         	movff	?___fladd,_colour_rel$2947
  8963   0036AA  C002  F065         	movff	?___fladd+1,_colour_rel$2947+1
  8964   0036AE  C003  F066         	movff	?___fladd+2,_colour_rel$2947+2
  8965   0036B2  C004  F067         	movff	?___fladd+3,_colour_rel$2947+3
  8966   0036B6                     
  8967                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8968   0036B6  C074  F005         	movff	colour_rel@B,___fladd@a
  8969   0036BA  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8970   0036BE  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8971   0036C2  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8972   0036C6  C064  F001         	movff	_colour_rel$2947,___fladd@b
  8973   0036CA  C065  F002         	movff	_colour_rel$2947+1,___fladd@b+1
  8974   0036CE  C066  F003         	movff	_colour_rel$2947+2,___fladd@b+2
  8975   0036D2  C067  F004         	movff	_colour_rel$2947+3,___fladd@b+3
  8976   0036D6  EC35  F014         	call	___fladd	;wreg free
  8977   0036DA  C001  F068         	movff	?___fladd,_colour_rel$2948
  8978   0036DE  C002  F069         	movff	?___fladd+1,_colour_rel$2948+1
  8979   0036E2  C003  F06A         	movff	?___fladd+2,_colour_rel$2948+2
  8980   0036E6  C004  F06B         	movff	?___fladd+3,_colour_rel$2948+3
  8981                           
  8982                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8983   0036EA  C074  F032         	movff	colour_rel@B,___fldiv@b
  8984   0036EE  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  8985   0036F2  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  8986   0036F6  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  8987   0036FA  C060  F005         	movff	colour_rel@L,___fladd@a
  8988   0036FE  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8989   003702  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8990   003706  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8991   00370A  C068  F001         	movff	_colour_rel$2948,___fladd@b
  8992   00370E  C069  F002         	movff	_colour_rel$2948+1,___fladd@b+1
  8993   003712  C06A  F003         	movff	_colour_rel$2948+2,___fladd@b+2
  8994   003716  C06B  F004         	movff	_colour_rel$2948+3,___fladd@b+3
  8995   00371A  EC35  F014         	call	___fladd	;wreg free
  8996   00371E  C001  F036         	movff	?___fladd,___fldiv@a
  8997   003722  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8998   003726  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8999   00372A  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9000   00372E  ECAA  F018         	call	___fldiv	;wreg free
  9001   003732  EE20 F008          	lfsr	2,8
  9002   003736  504D               	movf	colour_rel@rel^0,w,c
  9003   003738  26D9               	addwf	fsr2l,f,c
  9004   00373A  504E               	movf	(colour_rel@rel+1)^0,w,c
  9005   00373C  22DA               	addwfc	fsr2h,f,c
  9006   00373E  C032  FFDE         	movff	?___fldiv,postinc2
  9007   003742  C033  FFDE         	movff	?___fldiv+1,postinc2
  9008   003746  C034  FFDE         	movff	?___fldiv+2,postinc2
  9009   00374A  C035  FFDE         	movff	?___fldiv+3,postinc2
  9010   00374E                     
  9011                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9012   00374E  C070  F005         	movff	colour_rel@G,___fladd@a
  9013   003752  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9014   003756  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9015   00375A  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9016   00375E  C06C  F001         	movff	colour_rel@R,___fladd@b
  9017   003762  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9018   003766  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9019   00376A  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9020   00376E  EC35  F014         	call	___fladd	;wreg free
  9021   003772  C001  F064         	movff	?___fladd,_colour_rel$2947
  9022   003776  C002  F065         	movff	?___fladd+1,_colour_rel$2947+1
  9023   00377A  C003  F066         	movff	?___fladd+2,_colour_rel$2947+2
  9024   00377E  C004  F067         	movff	?___fladd+3,_colour_rel$2947+3
  9025   003782                     
  9026                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9027   003782  C074  F005         	movff	colour_rel@B,___fladd@a
  9028   003786  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9029   00378A  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9030   00378E  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9031   003792  C064  F001         	movff	_colour_rel$2947,___fladd@b
  9032   003796  C065  F002         	movff	_colour_rel$2947+1,___fladd@b+1
  9033   00379A  C066  F003         	movff	_colour_rel$2947+2,___fladd@b+2
  9034   00379E  C067  F004         	movff	_colour_rel$2947+3,___fladd@b+3
  9035   0037A2  EC35  F014         	call	___fladd	;wreg free
  9036   0037A6  C001  F068         	movff	?___fladd,_colour_rel$2948
  9037   0037AA  C002  F069         	movff	?___fladd+1,_colour_rel$2948+1
  9038   0037AE  C003  F06A         	movff	?___fladd+2,_colour_rel$2948+2
  9039   0037B2  C004  F06B         	movff	?___fladd+3,_colour_rel$2948+3
  9040                           
  9041                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9042   0037B6  C070  F032         	movff	colour_rel@G,___fldiv@b
  9043   0037BA  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  9044   0037BE  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  9045   0037C2  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  9046   0037C6  C060  F005         	movff	colour_rel@L,___fladd@a
  9047   0037CA  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9048   0037CE  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9049   0037D2  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9050   0037D6  C068  F001         	movff	_colour_rel$2948,___fladd@b
  9051   0037DA  C069  F002         	movff	_colour_rel$2948+1,___fladd@b+1
  9052   0037DE  C06A  F003         	movff	_colour_rel$2948+2,___fladd@b+2
  9053   0037E2  C06B  F004         	movff	_colour_rel$2948+3,___fladd@b+3
  9054   0037E6  EC35  F014         	call	___fladd	;wreg free
  9055   0037EA  C001  F036         	movff	?___fladd,___fldiv@a
  9056   0037EE  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9057   0037F2  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9058   0037F6  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9059   0037FA  ECAA  F018         	call	___fldiv	;wreg free
  9060   0037FE  EE20 F004          	lfsr	2,4
  9061   003802  504D               	movf	colour_rel@rel^0,w,c
  9062   003804  26D9               	addwf	fsr2l,f,c
  9063   003806  504E               	movf	(colour_rel@rel+1)^0,w,c
  9064   003808  22DA               	addwfc	fsr2h,f,c
  9065   00380A  C032  FFDE         	movff	?___fldiv,postinc2
  9066   00380E  C033  FFDE         	movff	?___fldiv+1,postinc2
  9067   003812  C034  FFDE         	movff	?___fldiv+2,postinc2
  9068   003816  C035  FFDE         	movff	?___fldiv+3,postinc2
  9069   00381A  0012               	return		;funcret
  9070   00381C                     __end_of_colour_rel:
  9071                           	callstack 0
  9072                           
  9073 ;; *************** function _color_click_init *****************
  9074 ;; Defined at:
  9075 ;;		line 7 in file "color.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;		None
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;		None
  9080 ;; Return value:  Size  Location     Type
  9081 ;;                  1    wreg      void 
  9082 ;; Registers used:
  9083 ;;		wreg, status,2, status,0, cstack
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9093 ;;Total ram usage:        1 bytes
  9094 ;; Hardware stack levels used: 1
  9095 ;; Hardware stack levels required when called: 4
  9096 ;; This function calls:
  9097 ;;		_I2C_2_Master_Init
  9098 ;;		_color_writetoaddr
  9099 ;; This function is called by:
  9100 ;;		_main
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104                           	psect	text44
  9105   005850                     __ptext44:
  9106                           	callstack 0
  9107   005850                     _color_click_init:
  9108                           	callstack 26
  9109   005850                     
  9110                           ;color.c: 10:     I2C_2_Master_Init();
  9111   005850  ECC8  F02E         	call	_I2C_2_Master_Init	;wreg free
  9112   005854                     
  9113                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  9114   005854  0E01               	movlw	1
  9115   005856  6E03               	movwf	color_writetoaddr@value^0,c
  9116   005858  0E00               	movlw	0
  9117   00585A  EC2C  F02F         	call	_color_writetoaddr
  9118   00585E                     
  9119                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9120   00585E  0E3F               	movlw	63
  9121   005860  6E05               	movwf	??_color_click_init^0,c
  9122   005862  0E55               	movlw	85
  9123   005864                     u5857:
  9124   005864  2EE8               	decfsz	wreg,f,c
  9125   005866  D7FE               	bra	u5857
  9126   005868  2E05               	decfsz	??_color_click_init^0,f,c
  9127   00586A  D7FC               	bra	u5857
  9128   00586C  F000               	nop	
  9129   00586E                     
  9130                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  9131   00586E  0E03               	movlw	3
  9132   005870  6E03               	movwf	color_writetoaddr@value^0,c
  9133   005872  0E00               	movlw	0
  9134   005874  EC2C  F02F         	call	_color_writetoaddr
  9135   005878                     
  9136                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  9137   005878  0ED5               	movlw	213
  9138   00587A  6E03               	movwf	color_writetoaddr@value^0,c
  9139   00587C  0E01               	movlw	1
  9140   00587E  EC2C  F02F         	call	_color_writetoaddr
  9141   005882                     
  9142                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  9143   005882  0E00               	movlw	0
  9144   005884  6E03               	movwf	color_writetoaddr@value^0,c
  9145   005886  0E0F               	movlw	15
  9146   005888  EC2C  F02F         	call	_color_writetoaddr
  9147   00588C                     
  9148                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  9149   00588C  9287               	bcf	135,1,c	;volatile
  9150   00588E                     
  9151                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  9152   00588E  9881               	bcf	129,4,c	;volatile
  9153   005890                     
  9154                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  9155   005890  9E86               	bcf	134,7,c	;volatile
  9156   005892                     
  9157                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  9158   005892  9684               	bcf	132,3,c	;volatile
  9159   005894                     
  9160                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  9161   005894  9884               	bcf	132,4,c	;volatile
  9162   005896                     
  9163                           ;color.c: 28:     LATGbits.LATG1=0;
  9164   005896  927F               	bcf	127,1,c	;volatile
  9165   005898                     
  9166                           ;color.c: 29:     LATFbits.LATF7=0;
  9167   005898  9E7E               	bcf	126,7,c	;volatile
  9168   00589A                     
  9169                           ;color.c: 30:     LATAbits.LATA4=0;
  9170   00589A  9879               	bcf	121,4,c	;volatile
  9171   00589C                     
  9172                           ;color.c: 32:     LATDbits.LATD3=0;
  9173   00589C  967C               	bcf	124,3,c	;volatile
  9174   00589E                     
  9175                           ;color.c: 33:     LATDbits.LATD4=0;
  9176   00589E  987C               	bcf	124,4,c	;volatile
  9177   0058A0  0012               	return		;funcret
  9178   0058A2                     __end_of_color_click_init:
  9179                           	callstack 0
  9180                           
  9181 ;; *************** function _color_writetoaddr *****************
  9182 ;; Defined at:
  9183 ;;		line 41 in file "color.c"
  9184 ;; Parameters:    Size  Location     Type
  9185 ;;  address         1    wreg     unsigned char 
  9186 ;;  value           1    2[COMRAM] unsigned char 
  9187 ;; Auto vars:     Size  Location     Type
  9188 ;;  address         1    3[COMRAM] unsigned char 
  9189 ;; Return value:  Size  Location     Type
  9190 ;;                  1    wreg      void 
  9191 ;; Registers used:
  9192 ;;		wreg, status,2, status,0, cstack
  9193 ;; Tracked objects:
  9194 ;;		On entry : 0/0
  9195 ;;		On exit  : 0/0
  9196 ;;		Unchanged: 0/0
  9197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9198 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9201 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9202 ;;Total ram usage:        2 bytes
  9203 ;; Hardware stack levels used: 1
  9204 ;; Hardware stack levels required when called: 3
  9205 ;; This function calls:
  9206 ;;		_I2C_2_Master_Start
  9207 ;;		_I2C_2_Master_Stop
  9208 ;;		_I2C_2_Master_Write
  9209 ;; This function is called by:
  9210 ;;		_color_click_init
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           	psect	text45
  9215   005E58                     __ptext45:
  9216                           	callstack 0
  9217   005E58                     _color_writetoaddr:
  9218                           	callstack 26
  9219                           
  9220                           ;incstack = 0
  9221                           ;color_writetoaddr@address stored from wreg
  9222   005E58  6E04               	movwf	color_writetoaddr@address^0,c
  9223   005E5A                     
  9224                           ;color.c: 42:     I2C_2_Master_Start();
  9225   005E5A  EC77  F02F         	call	_I2C_2_Master_Start	;wreg free
  9226                           
  9227                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  9228   005E5E  0E52               	movlw	82
  9229   005E60  EC67  F02F         	call	_I2C_2_Master_Write
  9230                           
  9231                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  9232   005E64  5004               	movf	color_writetoaddr@address^0,w,c
  9233   005E66  0980               	iorlw	128
  9234   005E68  EC67  F02F         	call	_I2C_2_Master_Write
  9235                           
  9236                           ;color.c: 45:     I2C_2_Master_Write(value);
  9237   005E6C  5003               	movf	color_writetoaddr@value^0,w,c
  9238   005E6E  EC67  F02F         	call	_I2C_2_Master_Write
  9239                           
  9240                           ;color.c: 46:     I2C_2_Master_Stop();
  9241   005E72  EC72  F02F         	call	_I2C_2_Master_Stop	;wreg free
  9242   005E76  0012               	return		;funcret
  9243   005E78                     __end_of_color_writetoaddr:
  9244                           	callstack 0
  9245                           
  9246 ;; *************** function _I2C_2_Master_Write *****************
  9247 ;; Defined at:
  9248 ;;		line 45 in file "i2c.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;  data_byte       1    wreg     unsigned char 
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;  data_byte       1    1[COMRAM] unsigned char 
  9253 ;; Return value:  Size  Location     Type
  9254 ;;                  1    wreg      void 
  9255 ;; Registers used:
  9256 ;;		wreg, status,2, status,0, cstack
  9257 ;; Tracked objects:
  9258 ;;		On entry : 0/0
  9259 ;;		On exit  : 0/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9265 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9266 ;;Total ram usage:        1 bytes
  9267 ;; Hardware stack levels used: 1
  9268 ;; Hardware stack levels required when called: 2
  9269 ;; This function calls:
  9270 ;;		_I2C_2_Master_Idle
  9271 ;; This function is called by:
  9272 ;;		_color_writetoaddr
  9273 ;;		_color_read_lum
  9274 ;;		_color_read_Red
  9275 ;;		_color_read_Green
  9276 ;;		_color_read_Blue
  9277 ;; This function uses a non-reentrant model
  9278 ;;
  9279                           
  9280                           	psect	text46
  9281   005ECE                     __ptext46:
  9282                           	callstack 0
  9283   005ECE                     _I2C_2_Master_Write:
  9284                           	callstack 26
  9285                           
  9286                           ;incstack = 0
  9287                           ;I2C_2_Master_Write@data_byte stored from wreg
  9288   005ECE  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9289   005ED0                     
  9290                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9291   005ED0  ECF2  F02E         	call	_I2C_2_Master_Idle	;wreg free
  9292   005ED4                     
  9293                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9294   005ED4  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9295   005ED8  0012               	return		;funcret
  9296   005EDA                     __end_of_I2C_2_Master_Write:
  9297                           	callstack 0
  9298                           
  9299 ;; *************** function _I2C_2_Master_Stop *****************
  9300 ;; Defined at:
  9301 ;;		line 39 in file "i2c.c"
  9302 ;; Parameters:    Size  Location     Type
  9303 ;;		None
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;		None
  9306 ;; Return value:  Size  Location     Type
  9307 ;;                  1    wreg      void 
  9308 ;; Registers used:
  9309 ;;		wreg, status,2, status,0, cstack
  9310 ;; Tracked objects:
  9311 ;;		On entry : 0/0
  9312 ;;		On exit  : 0/0
  9313 ;;		Unchanged: 0/0
  9314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9319 ;;Total ram usage:        0 bytes
  9320 ;; Hardware stack levels used: 1
  9321 ;; Hardware stack levels required when called: 2
  9322 ;; This function calls:
  9323 ;;		_I2C_2_Master_Idle
  9324 ;; This function is called by:
  9325 ;;		_color_writetoaddr
  9326 ;;		_color_read_lum
  9327 ;;		_color_read_Red
  9328 ;;		_color_read_Green
  9329 ;;		_color_read_Blue
  9330 ;; This function uses a non-reentrant model
  9331 ;;
  9332                           
  9333                           	psect	text47
  9334   005EE4                     __ptext47:
  9335                           	callstack 0
  9336   005EE4                     _I2C_2_Master_Stop:
  9337                           	callstack 26
  9338   005EE4                     
  9339                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9340   005EE4  ECF2  F02E         	call	_I2C_2_Master_Idle	;wreg free
  9341   005EE8                     
  9342                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9343   005EE8  010E               	movlb	14	; () banked
  9344   005EEA  85DA               	bsf	218,2,b	;volatile
  9345   005EEC                     
  9346                           ; BSR set to: 14
  9347   005EEC  0012               	return		;funcret
  9348   005EEE                     __end_of_I2C_2_Master_Stop:
  9349                           	callstack 0
  9350                           
  9351 ;; *************** function _I2C_2_Master_Start *****************
  9352 ;; Defined at:
  9353 ;;		line 27 in file "i2c.c"
  9354 ;; Parameters:    Size  Location     Type
  9355 ;;		None
  9356 ;; Auto vars:     Size  Location     Type
  9357 ;;		None
  9358 ;; Return value:  Size  Location     Type
  9359 ;;                  1    wreg      void 
  9360 ;; Registers used:
  9361 ;;		wreg, status,2, status,0, cstack
  9362 ;; Tracked objects:
  9363 ;;		On entry : 0/0
  9364 ;;		On exit  : 0/0
  9365 ;;		Unchanged: 0/0
  9366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9371 ;;Total ram usage:        0 bytes
  9372 ;; Hardware stack levels used: 1
  9373 ;; Hardware stack levels required when called: 2
  9374 ;; This function calls:
  9375 ;;		_I2C_2_Master_Idle
  9376 ;; This function is called by:
  9377 ;;		_color_writetoaddr
  9378 ;;		_color_read_lum
  9379 ;;		_color_read_Red
  9380 ;;		_color_read_Green
  9381 ;;		_color_read_Blue
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385                           	psect	text48
  9386   005EEE                     __ptext48:
  9387                           	callstack 0
  9388   005EEE                     _I2C_2_Master_Start:
  9389                           	callstack 26
  9390   005EEE                     
  9391                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9392   005EEE  ECF2  F02E         	call	_I2C_2_Master_Idle	;wreg free
  9393   005EF2                     
  9394                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9395   005EF2  010E               	movlb	14	; () banked
  9396   005EF4  81DA               	bsf	218,0,b	;volatile
  9397   005EF6                     
  9398                           ; BSR set to: 14
  9399   005EF6  0012               	return		;funcret
  9400   005EF8                     __end_of_I2C_2_Master_Start:
  9401                           	callstack 0
  9402                           
  9403 ;; *************** function _I2C_2_Master_Idle *****************
  9404 ;; Defined at:
  9405 ;;		line 22 in file "i2c.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;		None
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;		None
  9410 ;; Return value:  Size  Location     Type
  9411 ;;                  1    wreg      void 
  9412 ;; Registers used:
  9413 ;;		wreg, status,2, status,0
  9414 ;; Tracked objects:
  9415 ;;		On entry : 0/0
  9416 ;;		On exit  : 0/0
  9417 ;;		Unchanged: 0/0
  9418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9421 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9422 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9423 ;;Total ram usage:        1 bytes
  9424 ;; Hardware stack levels used: 1
  9425 ;; Hardware stack levels required when called: 1
  9426 ;; This function calls:
  9427 ;;		Nothing
  9428 ;; This function is called by:
  9429 ;;		_I2C_2_Master_Start
  9430 ;;		_I2C_2_Master_RepStart
  9431 ;;		_I2C_2_Master_Stop
  9432 ;;		_I2C_2_Master_Write
  9433 ;;		_I2C_2_Master_Read
  9434 ;; This function uses a non-reentrant model
  9435 ;;
  9436                           
  9437                           	psect	text49
  9438   005DE4                     __ptext49:
  9439                           	callstack 0
  9440   005DE4                     _I2C_2_Master_Idle:
  9441                           	callstack 26
  9442   005DE4                     l143:
  9443   005DE4  010E               	movlb	14	; () banked
  9444   005DE6  B5D8               	btfsc	216,2,b	;volatile
  9445   005DE8  EFF8  F02E         	goto	u4331
  9446   005DEC  EFFA  F02E         	goto	u4330
  9447   005DF0                     u4331:
  9448   005DF0  EFF2  F02E         	goto	l143
  9449   005DF4                     u4330:
  9450   005DF4                     
  9451                           ; BSR set to: 14
  9452   005DF4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9453   005DF8  0E1F               	movlw	31
  9454   005DFA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9455   005DFC  A4D8               	btfss	status,2,c
  9456   005DFE  EF03  F02F         	goto	u4341
  9457   005E02  EF05  F02F         	goto	u4340
  9458   005E06                     u4341:
  9459   005E06  EFF2  F02E         	goto	l143
  9460   005E0A                     u4340:
  9461   005E0A                     
  9462                           ; BSR set to: 14
  9463   005E0A  0012               	return		;funcret
  9464   005E0C                     __end_of_I2C_2_Master_Idle:
  9465                           	callstack 0
  9466                           
  9467 ;; *************** function _I2C_2_Master_Init *****************
  9468 ;; Defined at:
  9469 ;;		line 4 in file "i2c.c"
  9470 ;; Parameters:    Size  Location     Type
  9471 ;;		None
  9472 ;; Auto vars:     Size  Location     Type
  9473 ;;		None
  9474 ;; Return value:  Size  Location     Type
  9475 ;;                  1    wreg      void 
  9476 ;; Registers used:
  9477 ;;		wreg, status,2
  9478 ;; Tracked objects:
  9479 ;;		On entry : 0/0
  9480 ;;		On exit  : 0/0
  9481 ;;		Unchanged: 0/0
  9482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9487 ;;Total ram usage:        0 bytes
  9488 ;; Hardware stack levels used: 1
  9489 ;; Hardware stack levels required when called: 1
  9490 ;; This function calls:
  9491 ;;		Nothing
  9492 ;; This function is called by:
  9493 ;;		_color_click_init
  9494 ;;		_main
  9495 ;; This function uses a non-reentrant model
  9496 ;;
  9497                           
  9498                           	psect	text50
  9499   005D90                     __ptext50:
  9500                           	callstack 0
  9501   005D90                     _I2C_2_Master_Init:
  9502                           	callstack 28
  9503   005D90                     
  9504                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9505   005D90  010E               	movlb	14	; () banked
  9506   005D92  51D9               	movf	217,w,b	;volatile
  9507   005D94  0BF0               	andlw	-16
  9508   005D96  0908               	iorlw	8
  9509   005D98  6FD9               	movwf	217,b	;volatile
  9510   005D9A                     
  9511                           ; BSR set to: 14
  9512                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9513   005D9A  8BD9               	bsf	217,5,b	;volatile
  9514                           
  9515                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9516   005D9C  0E9F               	movlw	159
  9517   005D9E  6FD6               	movwf	214,b	;volatile
  9518   005DA0                     
  9519                           ; BSR set to: 14
  9520                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9521   005DA0  8A84               	bsf	132,5,c	;volatile
  9522   005DA2                     
  9523                           ; BSR set to: 14
  9524                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9525   005DA2  8C84               	bsf	132,6,c	;volatile
  9526   005DA4                     
  9527                           ; BSR set to: 14
  9528                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9529   005DA4  9BA7               	bcf	167,5,b	;volatile
  9530   005DA6                     
  9531                           ; BSR set to: 14
  9532                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9533   005DA6  9DA7               	bcf	167,6,b	;volatile
  9534                           
  9535                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9536   005DA8  0E1D               	movlw	29
  9537   005DAA  6F1D               	movwf	29,b	;volatile
  9538                           
  9539                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9540   005DAC  0E1E               	movlw	30
  9541   005DAE  6F1C               	movwf	28,b	;volatile
  9542                           
  9543                           ;i2c.c: 18:   RD5PPS=0x1C;
  9544   005DB0  0E1C               	movlw	28
  9545   005DB2  6F6F               	movwf	111,b	;volatile
  9546                           
  9547                           ;i2c.c: 19:   RD6PPS=0x1B;
  9548   005DB4  0E1B               	movlw	27
  9549   005DB6  6F70               	movwf	112,b	;volatile
  9550   005DB8                     
  9551                           ; BSR set to: 14
  9552   005DB8  0012               	return		;funcret
  9553   005DBA                     __end_of_I2C_2_Master_Init:
  9554                           	callstack 0
  9555                           
  9556 ;; *************** function _YellowMove *****************
  9557 ;; Defined at:
  9558 ;;		line 278 in file "dc_motor.c"
  9559 ;; Parameters:    Size  Location     Type
  9560 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9561 ;;		 -> motorL(9), 
  9562 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9563 ;;		 -> motorR(9), 
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;		None
  9566 ;; Return value:  Size  Location     Type
  9567 ;;                  1    wreg      void 
  9568 ;; Registers used:
  9569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9570 ;; Tracked objects:
  9571 ;;		On entry : 0/0
  9572 ;;		On exit  : 0/0
  9573 ;;		Unchanged: 0/0
  9574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9575 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9578 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9579 ;;Total ram usage:        4 bytes
  9580 ;; Hardware stack levels used: 1
  9581 ;; Hardware stack levels required when called: 5
  9582 ;; This function calls:
  9583 ;;		_reverseDetect
  9584 ;;		_reverseOneBlock
  9585 ;;		_turnRight45
  9586 ;; This function is called by:
  9587 ;;		_main
  9588 ;; This function uses a non-reentrant model
  9589 ;;
  9590                           
  9591                           	psect	text51
  9592   0058A2                     __ptext51:
  9593                           	callstack 0
  9594   0058A2                     _YellowMove:
  9595                           	callstack 25
  9596   0058A2                     
  9597                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  9598   0058A2  0E7B               	movlw	low _motorL
  9599   0058A4  6E1A               	movwf	reverseDetect@mL^0,c
  9600   0058A6  0E01               	movlw	high _motorL
  9601   0058A8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9602   0058AA  0E72               	movlw	low _motorR
  9603   0058AC  6E1C               	movwf	reverseDetect@mR^0,c
  9604   0058AE  0E01               	movlw	high _motorR
  9605   0058B0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9606   0058B2  ECFD  F02A         	call	_reverseDetect	;wreg free
  9607                           
  9608                           ;dc_motor.c: 281:     reverseOneBlock(&motorL, &motorR);
  9609   0058B6  0E7B               	movlw	low _motorL
  9610   0058B8  6E1A               	movwf	reverseOneBlock@mL^0,c
  9611   0058BA  0E01               	movlw	high _motorL
  9612   0058BC  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9613   0058BE  0E72               	movlw	low _motorR
  9614   0058C0  6E1C               	movwf	reverseOneBlock@mR^0,c
  9615   0058C2  0E01               	movlw	high _motorR
  9616   0058C4  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9617   0058C6  ECD0  F02A         	call	_reverseOneBlock	;wreg free
  9618                           
  9619                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  9620   0058CA  0E7B               	movlw	low _motorL
  9621   0058CC  6E1A               	movwf	turnRight45@mL^0,c
  9622   0058CE  0E01               	movlw	high _motorL
  9623   0058D0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9624   0058D2  0E72               	movlw	low _motorR
  9625   0058D4  6E1C               	movwf	turnRight45@mR^0,c
  9626   0058D6  0E01               	movlw	high _motorR
  9627   0058D8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9628   0058DA  EC2A  F02B         	call	_turnRight45	;wreg free
  9629                           
  9630                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  9631   0058DE  0E7B               	movlw	low _motorL
  9632   0058E0  6E1A               	movwf	turnRight45@mL^0,c
  9633   0058E2  0E01               	movlw	high _motorL
  9634   0058E4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9635   0058E6  0E72               	movlw	low _motorR
  9636   0058E8  6E1C               	movwf	turnRight45@mR^0,c
  9637   0058EA  0E01               	movlw	high _motorR
  9638   0058EC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9639   0058EE  EC2A  F02B         	call	_turnRight45	;wreg free
  9640   0058F2  0012               	return		;funcret
  9641   0058F4                     __end_of_YellowMove:
  9642                           	callstack 0
  9643                           
  9644 ;; *************** function _turnRight45 *****************
  9645 ;; Defined at:
  9646 ;;		line 201 in file "dc_motor.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9649 ;;		 -> motorL(9), 
  9650 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9651 ;;		 -> motorR(9), 
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;		None
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  1    wreg      void 
  9656 ;; Registers used:
  9657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9665 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9666 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9667 ;;Total ram usage:        6 bytes
  9668 ;; Hardware stack levels used: 1
  9669 ;; Hardware stack levels required when called: 4
  9670 ;; This function calls:
  9671 ;;		_stop
  9672 ;;		_turnRight
  9673 ;; This function is called by:
  9674 ;;		_RedMove
  9675 ;;		_BlueMove
  9676 ;;		_YellowMove
  9677 ;;		_OrangeMove
  9678 ;;		_ReverseYellow
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           	psect	text52
  9683   005654                     __ptext52:
  9684                           	callstack 0
  9685   005654                     _turnRight45:
  9686                           	callstack 24
  9687   005654                     
  9688                           ;dc_motor.c: 202:     turnRight(mL,mR);
  9689   005654  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  9690   005658  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  9691   00565C  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  9692   005660  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  9693   005664  EC7E  F027         	call	_turnRight	;wreg free
  9694   005668                     
  9695                           ;dc_motor.c: 203:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  9696   005668  0E12               	movlw	18
  9697   00566A  6E1F               	movwf	(??_turnRight45+1)^0,c
  9698   00566C  0EDC               	movlw	220
  9699   00566E  6E1E               	movwf	??_turnRight45^0,c
  9700   005670  0E60               	movlw	96
  9701   005672                     u5867:
  9702   005672  2EE8               	decfsz	wreg,f,c
  9703   005674  D7FE               	bra	u5867
  9704   005676  2E1E               	decfsz	??_turnRight45^0,f,c
  9705   005678  D7FC               	bra	u5867
  9706   00567A  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  9707   00567C  D7FA               	bra	u5867
  9708   00567E                     
  9709                           ;dc_motor.c: 204:     stop(&motorL, &motorR);
  9710   00567E  0E7B               	movlw	low _motorL
  9711   005680  6E14               	movwf	stop@mL^0,c
  9712   005682  0E01               	movlw	high _motorL
  9713   005684  6E15               	movwf	(stop@mL+1)^0,c
  9714   005686  0E72               	movlw	low _motorR
  9715   005688  6E16               	movwf	stop@mR^0,c
  9716   00568A  0E01               	movlw	high _motorR
  9717   00568C  6E17               	movwf	(stop@mR+1)^0,c
  9718   00568E  ECFE  F028         	call	_stop	;wreg free
  9719                           
  9720                           ;dc_motor.c: 205:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9721   005692  0E05               	movlw	5
  9722   005694  6E1F               	movwf	(??_turnRight45+1)^0,c
  9723   005696  0E0F               	movlw	15
  9724   005698  6E1E               	movwf	??_turnRight45^0,c
  9725   00569A  0EF1               	movlw	241
  9726   00569C                     u5877:
  9727   00569C  2EE8               	decfsz	wreg,f,c
  9728   00569E  D7FE               	bra	u5877
  9729   0056A0  2E1E               	decfsz	??_turnRight45^0,f,c
  9730   0056A2  D7FC               	bra	u5877
  9731   0056A4  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  9732   0056A6  D7FA               	bra	u5877
  9733   0056A8  F000               	nop	
  9734   0056AA  0012               	return		;funcret
  9735   0056AC                     __end_of_turnRight45:
  9736                           	callstack 0
  9737                           
  9738 ;; *************** function _turnRight *****************
  9739 ;; Defined at:
  9740 ;;		line 128 in file "dc_motor.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9743 ;;		 -> motorL(9), 
  9744 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9745 ;;		 -> motorR(9), 
  9746 ;; Auto vars:     Size  Location     Type
  9747 ;;		None
  9748 ;; Return value:  Size  Location     Type
  9749 ;;                  1    wreg      void 
  9750 ;; Registers used:
  9751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9752 ;; Tracked objects:
  9753 ;;		On entry : 0/0
  9754 ;;		On exit  : 0/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9757 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9760 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9761 ;;Total ram usage:        6 bytes
  9762 ;; Hardware stack levels used: 1
  9763 ;; Hardware stack levels required when called: 3
  9764 ;; This function calls:
  9765 ;;		_setMotorPWM
  9766 ;; This function is called by:
  9767 ;;		_turnRight45
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           	psect	text53
  9772   004EFC                     __ptext53:
  9773                           	callstack 0
  9774   004EFC                     _turnRight:
  9775                           	callstack 24
  9776   004EFC                     
  9777                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  9778   004EFC  EE20 F001          	lfsr	2,1
  9779   004F00  5014               	movf	turnRight@mL^0,w,c
  9780   004F02  26D9               	addwf	fsr2l,f,c
  9781   004F04  5015               	movf	(turnRight@mL+1)^0,w,c
  9782   004F06  22DA               	addwfc	fsr2h,f,c
  9783   004F08  0E01               	movlw	1
  9784   004F0A  6EDF               	movwf	indf2,c
  9785                           
  9786                           ;dc_motor.c: 131:     mR->direction =0;
  9787   004F0C  EE20 F001          	lfsr	2,1
  9788   004F10  5016               	movf	turnRight@mR^0,w,c
  9789   004F12  26D9               	addwf	fsr2l,f,c
  9790   004F14  5017               	movf	(turnRight@mR+1)^0,w,c
  9791   004F16  22DA               	addwfc	fsr2h,f,c
  9792   004F18  0E00               	movlw	0
  9793   004F1A  6EDF               	movwf	indf2,c
  9794                           
  9795                           ;dc_motor.c: 133:     while(mL->power<power && mR->power<power){
  9796   004F1C  EFB4  F027         	goto	l4607
  9797   004F20                     l4599:
  9798                           
  9799                           ;dc_motor.c: 135:         mL->power+=10;
  9800   004F20  C014  FFD9         	movff	turnRight@mL,fsr2l
  9801   004F24  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9802   004F28  0E0A               	movlw	10
  9803   004F2A  26DF               	addwf	indf2,f,c
  9804                           
  9805                           ;dc_motor.c: 136:         mR->power+=10;
  9806   004F2C  C016  FFD9         	movff	turnRight@mR,fsr2l
  9807   004F30  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9808   004F34  0E0A               	movlw	10
  9809   004F36  26DF               	addwf	indf2,f,c
  9810   004F38                     
  9811                           ;dc_motor.c: 138:         setMotorPWM(mL);
  9812   004F38  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  9813   004F3C  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  9814   004F40  ECCD  F022         	call	_setMotorPWM	;wreg free
  9815   004F44                     
  9816                           ;dc_motor.c: 139:         setMotorPWM(mR);
  9817   004F44  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  9818   004F48  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  9819   004F4C  ECCD  F022         	call	_setMotorPWM	;wreg free
  9820   004F50                     
  9821                           ;dc_motor.c: 141:         _delay((unsigned long)((20)*(64000000/4000.0)));
  9822   004F50  0E02               	movlw	2
  9823   004F52  6E19               	movwf	(??_turnRight+1)^0,c
  9824   004F54  0EA0               	movlw	160
  9825   004F56  6E18               	movwf	??_turnRight^0,c
  9826   004F58  0E92               	movlw	146
  9827   004F5A                     u5887:
  9828   004F5A  2EE8               	decfsz	wreg,f,c
  9829   004F5C  D7FE               	bra	u5887
  9830   004F5E  2E18               	decfsz	??_turnRight^0,f,c
  9831   004F60  D7FC               	bra	u5887
  9832   004F62  2E19               	decfsz	(??_turnRight+1)^0,f,c
  9833   004F64  D7FA               	bra	u5887
  9834   004F66  D000               	nop2	
  9835   004F68                     l4607:
  9836   004F68  C014  FFD9         	movff	turnRight@mL,fsr2l
  9837   004F6C  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9838   004F70  0E1E               	movlw	30
  9839   004F72  60DF               	cpfslt	indf2,c
  9840   004F74  EFBE  F027         	goto	u4411
  9841   004F78  EFC0  F027         	goto	u4410
  9842   004F7C                     u4411:
  9843   004F7C  EFCC  F027         	goto	l516
  9844   004F80                     u4410:
  9845   004F80  C016  FFD9         	movff	turnRight@mR,fsr2l
  9846   004F84  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9847   004F88  0E1D               	movlw	29
  9848   004F8A  64DF               	cpfsgt	indf2,c
  9849   004F8C  EFCA  F027         	goto	u4421
  9850   004F90  EFCC  F027         	goto	u4420
  9851   004F94                     u4421:
  9852   004F94  EF90  F027         	goto	l4599
  9853   004F98                     u4420:
  9854   004F98                     l516:
  9855   004F98  0012               	return		;funcret
  9856   004F9A                     __end_of_turnRight:
  9857                           	callstack 0
  9858                           
  9859 ;; *************** function _Timer0_init *****************
  9860 ;; Defined at:
  9861 ;;		line 8 in file "timers.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;		None
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;		None
  9866 ;; Return value:  Size  Location     Type
  9867 ;;                  1    wreg      void 
  9868 ;; Registers used:
  9869 ;;		wreg, status,2
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 0/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9879 ;;Total ram usage:        0 bytes
  9880 ;; Hardware stack levels used: 1
  9881 ;; Hardware stack levels required when called: 1
  9882 ;; This function calls:
  9883 ;;		Nothing
  9884 ;; This function is called by:
  9885 ;;		_main
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           	psect	text54
  9890   005E78                     __ptext54:
  9891                           	callstack 0
  9892   005E78                     _Timer0_init:
  9893                           	callstack 29
  9894   005E78                     
  9895                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  9896   005E78  50D6               	movf	214,w,c	;volatile
  9897   005E7A  0B1F               	andlw	-225
  9898   005E7C  0940               	iorlw	64
  9899   005E7E  6ED6               	movwf	214,c	;volatile
  9900   005E80                     
  9901                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  9902   005E80  88D6               	bsf	214,4,c	;volatile
  9903                           
  9904                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
  9905   005E82  50D6               	movf	214,w,c	;volatile
  9906   005E84  0BF0               	andlw	-16
  9907   005E86  090E               	iorlw	14
  9908   005E88  6ED6               	movwf	214,c	;volatile
  9909   005E8A                     
  9910                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  9911   005E8A  88D5               	bsf	213,4,c	;volatile
  9912                           
  9913                           ;timers.c: 16:     TMR0H=0;
  9914   005E8C  0E00               	movlw	0
  9915   005E8E  6ED4               	movwf	212,c	;volatile
  9916                           
  9917                           ;timers.c: 17:     TMR0L=0;
  9918   005E90  0E00               	movlw	0
  9919   005E92  6ED3               	movwf	211,c	;volatile
  9920   005E94                     
  9921                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  9922   005E94  8ED5               	bsf	213,7,c	;volatile
  9923   005E96  0012               	return		;funcret
  9924   005E98                     __end_of_Timer0_init:
  9925                           	callstack 0
  9926                           
  9927 ;; *************** function _RetryMove *****************
  9928 ;; Defined at:
  9929 ;;		line 315 in file "dc_motor.c"
  9930 ;; Parameters:    Size  Location     Type
  9931 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9932 ;;		 -> motorL(9), 
  9933 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9934 ;;		 -> motorR(9), 
  9935 ;; Auto vars:     Size  Location     Type
  9936 ;;		None
  9937 ;; Return value:  Size  Location     Type
  9938 ;;                  1    wreg      void 
  9939 ;; Registers used:
  9940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9941 ;; Tracked objects:
  9942 ;;		On entry : 0/0
  9943 ;;		On exit  : 0/0
  9944 ;;		Unchanged: 0/0
  9945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9946 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9949 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9950 ;;Total ram usage:        4 bytes
  9951 ;; Hardware stack levels used: 1
  9952 ;; Hardware stack levels required when called: 5
  9953 ;; This function calls:
  9954 ;;		_Backhalfblock
  9955 ;;		_Forwardhalfblock
  9956 ;; This function is called by:
  9957 ;;		_main
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           	psect	text55
  9962   005DBA                     __ptext55:
  9963                           	callstack 0
  9964   005DBA                     _RetryMove:
  9965                           	callstack 25
  9966   005DBA                     
  9967                           ;dc_motor.c: 316:     Backhalfblock(&motorL, &motorR);
  9968   005DBA  0E7B               	movlw	low _motorL
  9969   005DBC  6E1A               	movwf	Backhalfblock@mL^0,c
  9970   005DBE  0E01               	movlw	high _motorL
  9971   005DC0  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  9972   005DC2  0E72               	movlw	low _motorR
  9973   005DC4  6E1C               	movwf	Backhalfblock@mR^0,c
  9974   005DC6  0E01               	movlw	high _motorR
  9975   005DC8  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  9976   005DCA  ECA3  F02A         	call	_Backhalfblock	;wreg free
  9977                           
  9978                           ;dc_motor.c: 317:     Forwardhalfblock(&motorL, &motorR);
  9979   005DCE  0E7B               	movlw	low _motorL
  9980   005DD0  6E1A               	movwf	Forwardhalfblock@mL^0,c
  9981   005DD2  0E01               	movlw	high _motorL
  9982   005DD4  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  9983   005DD6  0E72               	movlw	low _motorR
  9984   005DD8  6E1C               	movwf	Forwardhalfblock@mR^0,c
  9985   005DDA  0E01               	movlw	high _motorR
  9986   005DDC  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  9987   005DDE  EC76  F02A         	call	_Forwardhalfblock	;wreg free
  9988   005DE2  0012               	return		;funcret
  9989   005DE4                     __end_of_RetryMove:
  9990                           	callstack 0
  9991                           
  9992 ;; *************** function _Forwardhalfblock *****************
  9993 ;; Defined at:
  9994 ;;		line 235 in file "dc_motor.c"
  9995 ;; Parameters:    Size  Location     Type
  9996 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9997 ;;		 -> motorL(9), 
  9998 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9999 ;;		 -> motorR(9), 
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;		None
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  1    wreg      void 
 10004 ;; Registers used:
 10005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/0
 10008 ;;		On exit  : 0/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10013 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10014 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10015 ;;Total ram usage:        6 bytes
 10016 ;; Hardware stack levels used: 1
 10017 ;; Hardware stack levels required when called: 4
 10018 ;; This function calls:
 10019 ;;		_fullSpeedAhead
 10020 ;;		_stop
 10021 ;; This function is called by:
 10022 ;;		_main
 10023 ;;		_RetryMove
 10024 ;; This function uses a non-reentrant model
 10025 ;;
 10026                           
 10027                           	psect	text56
 10028   0054EC                     __ptext56:
 10029                           	callstack 0
 10030   0054EC                     _Forwardhalfblock:
 10031                           	callstack 25
 10032   0054EC                     
 10033                           ;dc_motor.c: 236:     fullSpeedAhead(mL,mR);
 10034   0054EC  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 10035   0054F0  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 10036   0054F4  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 10037   0054F8  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 10038   0054FC  ECCD  F027         	call	_fullSpeedAhead	;wreg free
 10039   005500                     
 10040                           ;dc_motor.c: 237:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 10041   005500  0E52               	movlw	82
 10042   005502  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 10043   005504  0E2B               	movlw	43
 10044   005506  6E1E               	movwf	??_Forwardhalfblock^0,c
 10045   005508  0E00               	movlw	0
 10046   00550A                     u5897:
 10047   00550A  2EE8               	decfsz	wreg,f,c
 10048   00550C  D7FE               	bra	u5897
 10049   00550E  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 10050   005510  D7FC               	bra	u5897
 10051   005512  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 10052   005514  D7FA               	bra	u5897
 10053   005516  D000               	nop2	
 10054   005518                     
 10055                           ;dc_motor.c: 238:     stop(&motorL, &motorR);
 10056   005518  0E7B               	movlw	low _motorL
 10057   00551A  6E14               	movwf	stop@mL^0,c
 10058   00551C  0E01               	movlw	high _motorL
 10059   00551E  6E15               	movwf	(stop@mL+1)^0,c
 10060   005520  0E72               	movlw	low _motorR
 10061   005522  6E16               	movwf	stop@mR^0,c
 10062   005524  0E01               	movlw	high _motorR
 10063   005526  6E17               	movwf	(stop@mR+1)^0,c
 10064   005528  ECFE  F028         	call	_stop	;wreg free
 10065                           
 10066                           ;dc_motor.c: 239:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10067   00552C  0E05               	movlw	5
 10068   00552E  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 10069   005530  0E0F               	movlw	15
 10070   005532  6E1E               	movwf	??_Forwardhalfblock^0,c
 10071   005534  0EF1               	movlw	241
 10072   005536                     u5907:
 10073   005536  2EE8               	decfsz	wreg,f,c
 10074   005538  D7FE               	bra	u5907
 10075   00553A  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 10076   00553C  D7FC               	bra	u5907
 10077   00553E  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 10078   005540  D7FA               	bra	u5907
 10079   005542  F000               	nop	
 10080   005544  0012               	return		;funcret
 10081   005546                     __end_of_Forwardhalfblock:
 10082                           	callstack 0
 10083                           
 10084 ;; *************** function _fullSpeedAhead *****************
 10085 ;; Defined at:
 10086 ;;		line 146 in file "dc_motor.c"
 10087 ;; Parameters:    Size  Location     Type
 10088 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10089 ;;		 -> motorL(9), 
 10090 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10091 ;;		 -> motorR(9), 
 10092 ;; Auto vars:     Size  Location     Type
 10093 ;;		None
 10094 ;; Return value:  Size  Location     Type
 10095 ;;                  1    wreg      void 
 10096 ;; Registers used:
 10097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10098 ;; Tracked objects:
 10099 ;;		On entry : 0/0
 10100 ;;		On exit  : 0/0
 10101 ;;		Unchanged: 0/0
 10102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10103 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10105 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10106 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10107 ;;Total ram usage:        6 bytes
 10108 ;; Hardware stack levels used: 1
 10109 ;; Hardware stack levels required when called: 3
 10110 ;; This function calls:
 10111 ;;		_setMotorPWM
 10112 ;; This function is called by:
 10113 ;;		_main
 10114 ;;		_ForwardOneBlock
 10115 ;;		_Forwardhalfblock
 10116 ;; This function uses a non-reentrant model
 10117 ;;
 10118                           
 10119                           	psect	text57
 10120   004F9A                     __ptext57:
 10121                           	callstack 0
 10122   004F9A                     _fullSpeedAhead:
 10123                           	callstack 24
 10124   004F9A                     
 10125                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
 10126   004F9A  EE20 F001          	lfsr	2,1
 10127   004F9E  5014               	movf	fullSpeedAhead@mL^0,w,c
 10128   004FA0  26D9               	addwf	fsr2l,f,c
 10129   004FA2  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 10130   004FA4  22DA               	addwfc	fsr2h,f,c
 10131   004FA6  0E01               	movlw	1
 10132   004FA8  6EDF               	movwf	indf2,c
 10133                           
 10134                           ;dc_motor.c: 150:     mR->direction =1;
 10135   004FAA  EE20 F001          	lfsr	2,1
 10136   004FAE  5016               	movf	fullSpeedAhead@mR^0,w,c
 10137   004FB0  26D9               	addwf	fsr2l,f,c
 10138   004FB2  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 10139   004FB4  22DA               	addwfc	fsr2h,f,c
 10140   004FB6  0E01               	movlw	1
 10141   004FB8  6EDF               	movwf	indf2,c
 10142                           
 10143                           ;dc_motor.c: 151:     while (mL->power < power && mR->power < power){
 10144   004FBA  EF03  F028         	goto	l4565
 10145   004FBE                     l4557:
 10146                           
 10147                           ;dc_motor.c: 153:         mL->power+=10;
 10148   004FBE  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 10149   004FC2  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 10150   004FC6  0E0A               	movlw	10
 10151   004FC8  26DF               	addwf	indf2,f,c
 10152                           
 10153                           ;dc_motor.c: 154:         mR->power+=10;
 10154   004FCA  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 10155   004FCE  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 10156   004FD2  0E0A               	movlw	10
 10157   004FD4  26DF               	addwf	indf2,f,c
 10158   004FD6                     
 10159                           ;dc_motor.c: 156:         setMotorPWM(mL);
 10160   004FD6  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 10161   004FDA  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 10162   004FDE  ECCD  F022         	call	_setMotorPWM	;wreg free
 10163   004FE2                     
 10164                           ;dc_motor.c: 157:         setMotorPWM(mR);
 10165   004FE2  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 10166   004FE6  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 10167   004FEA  ECCD  F022         	call	_setMotorPWM	;wreg free
 10168   004FEE                     
 10169                           ;dc_motor.c: 160:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10170   004FEE  0E02               	movlw	2
 10171   004FF0  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 10172   004FF2  0EA0               	movlw	160
 10173   004FF4  6E18               	movwf	??_fullSpeedAhead^0,c
 10174   004FF6  0E92               	movlw	146
 10175   004FF8                     u5917:
 10176   004FF8  2EE8               	decfsz	wreg,f,c
 10177   004FFA  D7FE               	bra	u5917
 10178   004FFC  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 10179   004FFE  D7FC               	bra	u5917
 10180   005000  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 10181   005002  D7FA               	bra	u5917
 10182   005004  D000               	nop2	
 10183   005006                     l4565:
 10184   005006  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 10185   00500A  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 10186   00500E  0E1E               	movlw	30
 10187   005010  60DF               	cpfslt	indf2,c
 10188   005012  EF0D  F028         	goto	u4351
 10189   005016  EF0F  F028         	goto	u4350
 10190   00501A                     u4351:
 10191   00501A  EF1B  F028         	goto	l524
 10192   00501E                     u4350:
 10193   00501E  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 10194   005022  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 10195   005026  0E1D               	movlw	29
 10196   005028  64DF               	cpfsgt	indf2,c
 10197   00502A  EF19  F028         	goto	u4361
 10198   00502E  EF1B  F028         	goto	u4360
 10199   005032                     u4361:
 10200   005032  EFDF  F027         	goto	l4557
 10201   005036                     u4360:
 10202   005036                     l524:
 10203   005036  0012               	return		;funcret
 10204   005038                     __end_of_fullSpeedAhead:
 10205                           	callstack 0
 10206                           
 10207 ;; *************** function _Backhalfblock *****************
 10208 ;; Defined at:
 10209 ;;		line 241 in file "dc_motor.c"
 10210 ;; Parameters:    Size  Location     Type
 10211 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10212 ;;		 -> motorL(9), 
 10213 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10214 ;;		 -> motorR(9), 
 10215 ;; Auto vars:     Size  Location     Type
 10216 ;;		None
 10217 ;; Return value:  Size  Location     Type
 10218 ;;                  1    wreg      void 
 10219 ;; Registers used:
 10220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10221 ;; Tracked objects:
 10222 ;;		On entry : 0/0
 10223 ;;		On exit  : 0/0
 10224 ;;		Unchanged: 0/0
 10225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10228 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10229 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10230 ;;Total ram usage:        6 bytes
 10231 ;; Hardware stack levels used: 1
 10232 ;; Hardware stack levels required when called: 4
 10233 ;; This function calls:
 10234 ;;		_fullSpeedBack
 10235 ;;		_stop
 10236 ;; This function is called by:
 10237 ;;		_RetryMove
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241                           	psect	text58
 10242   005546                     __ptext58:
 10243                           	callstack 0
 10244   005546                     _Backhalfblock:
 10245                           	callstack 25
 10246   005546                     
 10247                           ;dc_motor.c: 242:     fullSpeedBack(mL,mR);
 10248   005546  C01A  F014         	movff	Backhalfblock@mL,fullSpeedBack@mL
 10249   00554A  C01B  F015         	movff	Backhalfblock@mL+1,fullSpeedBack@mL+1
 10250   00554E  C01C  F016         	movff	Backhalfblock@mR,fullSpeedBack@mR
 10251   005552  C01D  F017         	movff	Backhalfblock@mR+1,fullSpeedBack@mR+1
 10252   005556  EC6B  F028         	call	_fullSpeedBack	;wreg free
 10253   00555A                     
 10254                           ;dc_motor.c: 243:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 10255   00555A  0E52               	movlw	82
 10256   00555C  6E1F               	movwf	(??_Backhalfblock+1)^0,c
 10257   00555E  0E2B               	movlw	43
 10258   005560  6E1E               	movwf	??_Backhalfblock^0,c
 10259   005562  0E00               	movlw	0
 10260   005564                     u5927:
 10261   005564  2EE8               	decfsz	wreg,f,c
 10262   005566  D7FE               	bra	u5927
 10263   005568  2E1E               	decfsz	??_Backhalfblock^0,f,c
 10264   00556A  D7FC               	bra	u5927
 10265   00556C  2E1F               	decfsz	(??_Backhalfblock+1)^0,f,c
 10266   00556E  D7FA               	bra	u5927
 10267   005570  D000               	nop2	
 10268   005572                     
 10269                           ;dc_motor.c: 244:     stop(&motorL, &motorR);
 10270   005572  0E7B               	movlw	low _motorL
 10271   005574  6E14               	movwf	stop@mL^0,c
 10272   005576  0E01               	movlw	high _motorL
 10273   005578  6E15               	movwf	(stop@mL+1)^0,c
 10274   00557A  0E72               	movlw	low _motorR
 10275   00557C  6E16               	movwf	stop@mR^0,c
 10276   00557E  0E01               	movlw	high _motorR
 10277   005580  6E17               	movwf	(stop@mR+1)^0,c
 10278   005582  ECFE  F028         	call	_stop	;wreg free
 10279                           
 10280                           ;dc_motor.c: 245:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10281   005586  0E05               	movlw	5
 10282   005588  6E1F               	movwf	(??_Backhalfblock+1)^0,c
 10283   00558A  0E0F               	movlw	15
 10284   00558C  6E1E               	movwf	??_Backhalfblock^0,c
 10285   00558E  0EF1               	movlw	241
 10286   005590                     u5937:
 10287   005590  2EE8               	decfsz	wreg,f,c
 10288   005592  D7FE               	bra	u5937
 10289   005594  2E1E               	decfsz	??_Backhalfblock^0,f,c
 10290   005596  D7FC               	bra	u5937
 10291   005598  2E1F               	decfsz	(??_Backhalfblock+1)^0,f,c
 10292   00559A  D7FA               	bra	u5937
 10293   00559C  F000               	nop	
 10294   00559E  0012               	return		;funcret
 10295   0055A0                     __end_of_Backhalfblock:
 10296                           	callstack 0
 10297                           
 10298 ;; *************** function _PinkMove *****************
 10299 ;; Defined at:
 10300 ;;		line 288 in file "dc_motor.c"
 10301 ;; Parameters:    Size  Location     Type
 10302 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10303 ;;		 -> motorL(9), 
 10304 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10305 ;;		 -> motorR(9), 
 10306 ;; Auto vars:     Size  Location     Type
 10307 ;;		None
 10308 ;; Return value:  Size  Location     Type
 10309 ;;                  1    wreg      void 
 10310 ;; Registers used:
 10311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10312 ;; Tracked objects:
 10313 ;;		On entry : 0/0
 10314 ;;		On exit  : 0/0
 10315 ;;		Unchanged: 0/0
 10316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10320 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10321 ;;Total ram usage:        4 bytes
 10322 ;; Hardware stack levels used: 1
 10323 ;; Hardware stack levels required when called: 5
 10324 ;; This function calls:
 10325 ;;		_reverseDetect
 10326 ;;		_reverseOneBlock
 10327 ;;		_turnLeft45
 10328 ;; This function is called by:
 10329 ;;		_main
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text59
 10334   0058F4                     __ptext59:
 10335                           	callstack 0
 10336   0058F4                     _PinkMove:
 10337                           	callstack 25
 10338   0058F4                     
 10339                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
 10340   0058F4  0E7B               	movlw	low _motorL
 10341   0058F6  6E1A               	movwf	reverseDetect@mL^0,c
 10342   0058F8  0E01               	movlw	high _motorL
 10343   0058FA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10344   0058FC  0E72               	movlw	low _motorR
 10345   0058FE  6E1C               	movwf	reverseDetect@mR^0,c
 10346   005900  0E01               	movlw	high _motorR
 10347   005902  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10348   005904  ECFD  F02A         	call	_reverseDetect	;wreg free
 10349                           
 10350                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
 10351   005908  0E7B               	movlw	low _motorL
 10352   00590A  6E1A               	movwf	reverseOneBlock@mL^0,c
 10353   00590C  0E01               	movlw	high _motorL
 10354   00590E  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10355   005910  0E72               	movlw	low _motorR
 10356   005912  6E1C               	movwf	reverseOneBlock@mR^0,c
 10357   005914  0E01               	movlw	high _motorR
 10358   005916  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10359   005918  ECD0  F02A         	call	_reverseOneBlock	;wreg free
 10360                           
 10361                           ;dc_motor.c: 293:     turnLeft45(&motorL, &motorR);
 10362   00591C  0E7B               	movlw	low _motorL
 10363   00591E  6E1A               	movwf	turnLeft45@mL^0,c
 10364   005920  0E01               	movlw	high _motorL
 10365   005922  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10366   005924  0E72               	movlw	low _motorR
 10367   005926  6E1C               	movwf	turnLeft45@mR^0,c
 10368   005928  0E01               	movlw	high _motorR
 10369   00592A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10370   00592C  EC56  F02B         	call	_turnLeft45	;wreg free
 10371                           
 10372                           ;dc_motor.c: 294:     turnLeft45(&motorL, &motorR);
 10373   005930  0E7B               	movlw	low _motorL
 10374   005932  6E1A               	movwf	turnLeft45@mL^0,c
 10375   005934  0E01               	movlw	high _motorL
 10376   005936  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10377   005938  0E72               	movlw	low _motorR
 10378   00593A  6E1C               	movwf	turnLeft45@mR^0,c
 10379   00593C  0E01               	movlw	high _motorR
 10380   00593E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10381   005940  EC56  F02B         	call	_turnLeft45	;wreg free
 10382   005944  0012               	return		;funcret
 10383   005946                     __end_of_PinkMove:
 10384                           	callstack 0
 10385                           
 10386 ;; *************** function _turnLeft45 *****************
 10387 ;; Defined at:
 10388 ;;		line 208 in file "dc_motor.c"
 10389 ;; Parameters:    Size  Location     Type
 10390 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10391 ;;		 -> motorL(9), 
 10392 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10393 ;;		 -> motorR(9), 
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;		None
 10396 ;; Return value:  Size  Location     Type
 10397 ;;                  1    wreg      void 
 10398 ;; Registers used:
 10399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10400 ;; Tracked objects:
 10401 ;;		On entry : 0/0
 10402 ;;		On exit  : 0/0
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10405 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10407 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10408 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10409 ;;Total ram usage:        6 bytes
 10410 ;; Hardware stack levels used: 1
 10411 ;; Hardware stack levels required when called: 4
 10412 ;; This function calls:
 10413 ;;		_stop
 10414 ;;		_turnLeft
 10415 ;; This function is called by:
 10416 ;;		_GreenMove
 10417 ;;		_PinkMove
 10418 ;;		_LightBlueMove
 10419 ;;		_ReversePink
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           	psect	text60
 10424   0056AC                     __ptext60:
 10425                           	callstack 0
 10426   0056AC                     _turnLeft45:
 10427                           	callstack 24
 10428   0056AC                     
 10429                           ;dc_motor.c: 209:     turnLeft(mL,mR);
 10430   0056AC  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10431   0056B0  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10432   0056B4  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10433   0056B8  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10434   0056BC  EC1C  F028         	call	_turnLeft	;wreg free
 10435   0056C0                     
 10436                           ;dc_motor.c: 210:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
 10437   0056C0  0E12               	movlw	18
 10438   0056C2  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10439   0056C4  0EDC               	movlw	220
 10440   0056C6  6E1E               	movwf	??_turnLeft45^0,c
 10441   0056C8  0E60               	movlw	96
 10442   0056CA                     u5947:
 10443   0056CA  2EE8               	decfsz	wreg,f,c
 10444   0056CC  D7FE               	bra	u5947
 10445   0056CE  2E1E               	decfsz	??_turnLeft45^0,f,c
 10446   0056D0  D7FC               	bra	u5947
 10447   0056D2  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10448   0056D4  D7FA               	bra	u5947
 10449   0056D6                     
 10450                           ;dc_motor.c: 211:     stop(&motorL, &motorR);
 10451   0056D6  0E7B               	movlw	low _motorL
 10452   0056D8  6E14               	movwf	stop@mL^0,c
 10453   0056DA  0E01               	movlw	high _motorL
 10454   0056DC  6E15               	movwf	(stop@mL+1)^0,c
 10455   0056DE  0E72               	movlw	low _motorR
 10456   0056E0  6E16               	movwf	stop@mR^0,c
 10457   0056E2  0E01               	movlw	high _motorR
 10458   0056E4  6E17               	movwf	(stop@mR+1)^0,c
 10459   0056E6  ECFE  F028         	call	_stop	;wreg free
 10460                           
 10461                           ;dc_motor.c: 212:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10462   0056EA  0E05               	movlw	5
 10463   0056EC  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10464   0056EE  0E0F               	movlw	15
 10465   0056F0  6E1E               	movwf	??_turnLeft45^0,c
 10466   0056F2  0EF1               	movlw	241
 10467   0056F4                     u5957:
 10468   0056F4  2EE8               	decfsz	wreg,f,c
 10469   0056F6  D7FE               	bra	u5957
 10470   0056F8  2E1E               	decfsz	??_turnLeft45^0,f,c
 10471   0056FA  D7FC               	bra	u5957
 10472   0056FC  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10473   0056FE  D7FA               	bra	u5957
 10474   005700  F000               	nop	
 10475   005702  0012               	return		;funcret
 10476   005704                     __end_of_turnLeft45:
 10477                           	callstack 0
 10478                           
 10479 ;; *************** function _turnLeft *****************
 10480 ;; Defined at:
 10481 ;;		line 110 in file "dc_motor.c"
 10482 ;; Parameters:    Size  Location     Type
 10483 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10484 ;;		 -> motorL(9), 
 10485 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10486 ;;		 -> motorR(9), 
 10487 ;; Auto vars:     Size  Location     Type
 10488 ;;		None
 10489 ;; Return value:  Size  Location     Type
 10490 ;;                  1    wreg      void 
 10491 ;; Registers used:
 10492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10493 ;; Tracked objects:
 10494 ;;		On entry : 0/0
 10495 ;;		On exit  : 0/0
 10496 ;;		Unchanged: 0/0
 10497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10498 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10500 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10501 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10502 ;;Total ram usage:        6 bytes
 10503 ;; Hardware stack levels used: 1
 10504 ;; Hardware stack levels required when called: 3
 10505 ;; This function calls:
 10506 ;;		_setMotorPWM
 10507 ;; This function is called by:
 10508 ;;		_turnLeft45
 10509 ;; This function uses a non-reentrant model
 10510 ;;
 10511                           
 10512                           	psect	text61
 10513   005038                     __ptext61:
 10514                           	callstack 0
 10515   005038                     _turnLeft:
 10516                           	callstack 24
 10517   005038                     
 10518                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
 10519   005038  EE20 F001          	lfsr	2,1
 10520   00503C  5014               	movf	turnLeft@mL^0,w,c
 10521   00503E  26D9               	addwf	fsr2l,f,c
 10522   005040  5015               	movf	(turnLeft@mL+1)^0,w,c
 10523   005042  22DA               	addwfc	fsr2h,f,c
 10524   005044  0E00               	movlw	0
 10525   005046  6EDF               	movwf	indf2,c
 10526                           
 10527                           ;dc_motor.c: 113:     mR->direction =1;
 10528   005048  EE20 F001          	lfsr	2,1
 10529   00504C  5016               	movf	turnLeft@mR^0,w,c
 10530   00504E  26D9               	addwf	fsr2l,f,c
 10531   005050  5017               	movf	(turnLeft@mR+1)^0,w,c
 10532   005052  22DA               	addwfc	fsr2h,f,c
 10533   005054  0E01               	movlw	1
 10534   005056  6EDF               	movwf	indf2,c
 10535                           
 10536                           ;dc_motor.c: 115:     while(mL->power<power && mR->power<power){
 10537   005058  EF52  F028         	goto	l4593
 10538   00505C                     l4585:
 10539                           
 10540                           ;dc_motor.c: 117:         mL->power+=10;
 10541   00505C  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10542   005060  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10543   005064  0E0A               	movlw	10
 10544   005066  26DF               	addwf	indf2,f,c
 10545                           
 10546                           ;dc_motor.c: 118:         mR->power+=10;
 10547   005068  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10548   00506C  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10549   005070  0E0A               	movlw	10
 10550   005072  26DF               	addwf	indf2,f,c
 10551   005074                     
 10552                           ;dc_motor.c: 120:         setMotorPWM(mL);
 10553   005074  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10554   005078  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10555   00507C  ECCD  F022         	call	_setMotorPWM	;wreg free
 10556   005080                     
 10557                           ;dc_motor.c: 121:         setMotorPWM(mR);
 10558   005080  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10559   005084  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10560   005088  ECCD  F022         	call	_setMotorPWM	;wreg free
 10561   00508C                     
 10562                           ;dc_motor.c: 123:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10563   00508C  0E02               	movlw	2
 10564   00508E  6E19               	movwf	(??_turnLeft+1)^0,c
 10565   005090  0EA0               	movlw	160
 10566   005092  6E18               	movwf	??_turnLeft^0,c
 10567   005094  0E92               	movlw	146
 10568   005096                     u5967:
 10569   005096  2EE8               	decfsz	wreg,f,c
 10570   005098  D7FE               	bra	u5967
 10571   00509A  2E18               	decfsz	??_turnLeft^0,f,c
 10572   00509C  D7FC               	bra	u5967
 10573   00509E  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10574   0050A0  D7FA               	bra	u5967
 10575   0050A2  D000               	nop2	
 10576   0050A4                     l4593:
 10577   0050A4  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10578   0050A8  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10579   0050AC  0E1E               	movlw	30
 10580   0050AE  60DF               	cpfslt	indf2,c
 10581   0050B0  EF5C  F028         	goto	u4391
 10582   0050B4  EF5E  F028         	goto	u4390
 10583   0050B8                     u4391:
 10584   0050B8  EF6A  F028         	goto	l508
 10585   0050BC                     u4390:
 10586   0050BC  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10587   0050C0  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10588   0050C4  0E1D               	movlw	29
 10589   0050C6  64DF               	cpfsgt	indf2,c
 10590   0050C8  EF68  F028         	goto	u4401
 10591   0050CC  EF6A  F028         	goto	u4400
 10592   0050D0                     u4401:
 10593   0050D0  EF2E  F028         	goto	l4585
 10594   0050D4                     u4400:
 10595   0050D4                     l508:
 10596   0050D4  0012               	return		;funcret
 10597   0050D6                     __end_of_turnLeft:
 10598                           	callstack 0
 10599                           
 10600 ;; *************** function _reverseOneBlock *****************
 10601 ;; Defined at:
 10602 ;;		line 222 in file "dc_motor.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10605 ;;		 -> motorL(9), 
 10606 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10607 ;;		 -> motorR(9), 
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;		None
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  1    wreg      void 
 10612 ;; Registers used:
 10613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10619 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10621 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10622 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10623 ;;Total ram usage:        6 bytes
 10624 ;; Hardware stack levels used: 1
 10625 ;; Hardware stack levels required when called: 4
 10626 ;; This function calls:
 10627 ;;		_fullSpeedBack
 10628 ;;		_stop
 10629 ;; This function is called by:
 10630 ;;		_YellowMove
 10631 ;;		_PinkMove
 10632 ;; This function uses a non-reentrant model
 10633 ;;
 10634                           
 10635                           	psect	text62
 10636   0055A0                     __ptext62:
 10637                           	callstack 0
 10638   0055A0                     _reverseOneBlock:
 10639                           	callstack 25
 10640   0055A0                     
 10641                           ;dc_motor.c: 223:     fullSpeedBack(mL,mR);
 10642   0055A0  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10643   0055A4  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10644   0055A8  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10645   0055AC  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10646   0055B0  EC6B  F028         	call	_fullSpeedBack	;wreg free
 10647   0055B4                     
 10648                           ;dc_motor.c: 224:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10649   0055B4  0EA3               	movlw	163
 10650   0055B6  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10651   0055B8  0E57               	movlw	87
 10652   0055BA  6E1E               	movwf	??_reverseOneBlock^0,c
 10653   0055BC  0E02               	movlw	2
 10654   0055BE                     u5977:
 10655   0055BE  2EE8               	decfsz	wreg,f,c
 10656   0055C0  D7FE               	bra	u5977
 10657   0055C2  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10658   0055C4  D7FC               	bra	u5977
 10659   0055C6  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10660   0055C8  D7FA               	bra	u5977
 10661   0055CA  D000               	nop2	
 10662   0055CC                     
 10663                           ;dc_motor.c: 225:     stop(&motorL, &motorR);
 10664   0055CC  0E7B               	movlw	low _motorL
 10665   0055CE  6E14               	movwf	stop@mL^0,c
 10666   0055D0  0E01               	movlw	high _motorL
 10667   0055D2  6E15               	movwf	(stop@mL+1)^0,c
 10668   0055D4  0E72               	movlw	low _motorR
 10669   0055D6  6E16               	movwf	stop@mR^0,c
 10670   0055D8  0E01               	movlw	high _motorR
 10671   0055DA  6E17               	movwf	(stop@mR+1)^0,c
 10672   0055DC  ECFE  F028         	call	_stop	;wreg free
 10673                           
 10674                           ;dc_motor.c: 226:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10675   0055E0  0E05               	movlw	5
 10676   0055E2  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10677   0055E4  0E0F               	movlw	15
 10678   0055E6  6E1E               	movwf	??_reverseOneBlock^0,c
 10679   0055E8  0EF1               	movlw	241
 10680   0055EA                     u5987:
 10681   0055EA  2EE8               	decfsz	wreg,f,c
 10682   0055EC  D7FE               	bra	u5987
 10683   0055EE  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10684   0055F0  D7FC               	bra	u5987
 10685   0055F2  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10686   0055F4  D7FA               	bra	u5987
 10687   0055F6  F000               	nop	
 10688   0055F8  0012               	return		;funcret
 10689   0055FA                     __end_of_reverseOneBlock:
 10690                           	callstack 0
 10691                           
 10692 ;; *************** function _reverseDetect *****************
 10693 ;; Defined at:
 10694 ;;		line 215 in file "dc_motor.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10697 ;;		 -> motorL(9), 
 10698 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10699 ;;		 -> motorR(9), 
 10700 ;; Auto vars:     Size  Location     Type
 10701 ;;		None
 10702 ;; Return value:  Size  Location     Type
 10703 ;;                  1    wreg      void 
 10704 ;; Registers used:
 10705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 0/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10711 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10713 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10714 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10715 ;;Total ram usage:        6 bytes
 10716 ;; Hardware stack levels used: 1
 10717 ;; Hardware stack levels required when called: 4
 10718 ;; This function calls:
 10719 ;;		_fullSpeedBack
 10720 ;;		_stop
 10721 ;; This function is called by:
 10722 ;;		_RedMove
 10723 ;;		_GreenMove
 10724 ;;		_BlueMove
 10725 ;;		_YellowMove
 10726 ;;		_PinkMove
 10727 ;;		_OrangeMove
 10728 ;;		_LightBlueMove
 10729 ;;		_ReverseYellow
 10730 ;;		_ReversePink
 10731 ;;		_go_Home
 10732 ;; This function uses a non-reentrant model
 10733 ;;
 10734                           
 10735                           	psect	text63
 10736   0055FA                     __ptext63:
 10737                           	callstack 0
 10738   0055FA                     _reverseDetect:
 10739                           	callstack 25
 10740   0055FA                     
 10741                           ;dc_motor.c: 216:     fullSpeedBack(mL,mR);
 10742   0055FA  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10743   0055FE  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10744   005602  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10745   005606  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10746   00560A  EC6B  F028         	call	_fullSpeedBack	;wreg free
 10747   00560E                     
 10748                           ;dc_motor.c: 217:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10749   00560E  0E11               	movlw	17
 10750   005610  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10751   005612  0E3C               	movlw	60
 10752   005614  6E1E               	movwf	??_reverseDetect^0,c
 10753   005616  0ECB               	movlw	203
 10754   005618                     u5997:
 10755   005618  2EE8               	decfsz	wreg,f,c
 10756   00561A  D7FE               	bra	u5997
 10757   00561C  2E1E               	decfsz	??_reverseDetect^0,f,c
 10758   00561E  D7FC               	bra	u5997
 10759   005620  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10760   005622  D7FA               	bra	u5997
 10761   005624  F000               	nop	
 10762   005626                     
 10763                           ;dc_motor.c: 218:     stop(&motorL, &motorR);
 10764   005626  0E7B               	movlw	low _motorL
 10765   005628  6E14               	movwf	stop@mL^0,c
 10766   00562A  0E01               	movlw	high _motorL
 10767   00562C  6E15               	movwf	(stop@mL+1)^0,c
 10768   00562E  0E72               	movlw	low _motorR
 10769   005630  6E16               	movwf	stop@mR^0,c
 10770   005632  0E01               	movlw	high _motorR
 10771   005634  6E17               	movwf	(stop@mR+1)^0,c
 10772   005636  ECFE  F028         	call	_stop	;wreg free
 10773                           
 10774                           ;dc_motor.c: 219:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10775   00563A  0E05               	movlw	5
 10776   00563C  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10777   00563E  0E0F               	movlw	15
 10778   005640  6E1E               	movwf	??_reverseDetect^0,c
 10779   005642  0EF1               	movlw	241
 10780   005644                     u6007:
 10781   005644  2EE8               	decfsz	wreg,f,c
 10782   005646  D7FE               	bra	u6007
 10783   005648  2E1E               	decfsz	??_reverseDetect^0,f,c
 10784   00564A  D7FC               	bra	u6007
 10785   00564C  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10786   00564E  D7FA               	bra	u6007
 10787   005650  F000               	nop	
 10788   005652  0012               	return		;funcret
 10789   005654                     __end_of_reverseDetect:
 10790                           	callstack 0
 10791                           
 10792 ;; *************** function _stop *****************
 10793 ;; Defined at:
 10794 ;;		line 92 in file "dc_motor.c"
 10795 ;; Parameters:    Size  Location     Type
 10796 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10797 ;;		 -> motorL(9), 
 10798 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10799 ;;		 -> motorR(9), 
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;		None
 10802 ;; Return value:  Size  Location     Type
 10803 ;;                  1    wreg      void 
 10804 ;; Registers used:
 10805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10806 ;; Tracked objects:
 10807 ;;		On entry : 0/0
 10808 ;;		On exit  : 0/0
 10809 ;;		Unchanged: 0/0
 10810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10814 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10815 ;;Total ram usage:        6 bytes
 10816 ;; Hardware stack levels used: 1
 10817 ;; Hardware stack levels required when called: 3
 10818 ;; This function calls:
 10819 ;;		_setMotorPWM
 10820 ;; This function is called by:
 10821 ;;		_main
 10822 ;;		_turnRight45
 10823 ;;		_turnLeft45
 10824 ;;		_reverseDetect
 10825 ;;		_reverseOneBlock
 10826 ;;		_ForwardOneBlock
 10827 ;;		_Forwardhalfblock
 10828 ;;		_Backhalfblock
 10829 ;; This function uses a non-reentrant model
 10830 ;;
 10831                           
 10832                           	psect	text64
 10833   0051FC                     __ptext64:
 10834                           	callstack 0
 10835   0051FC                     _stop:
 10836                           	callstack 27
 10837   0051FC                     
 10838                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
 10839   0051FC  EF24  F029         	goto	l4579
 10840   005200                     l4571:
 10841                           
 10842                           ;dc_motor.c: 96:         mL->power-=10;
 10843   005200  C014  FFD9         	movff	stop@mL,fsr2l
 10844   005204  C015  FFDA         	movff	stop@mL+1,fsr2h
 10845   005208  0E0A               	movlw	10
 10846   00520A  5EDF               	subwf	indf2,f,c
 10847                           
 10848                           ;dc_motor.c: 97:         mR->power-=10;
 10849   00520C  C016  FFD9         	movff	stop@mR,fsr2l
 10850   005210  C017  FFDA         	movff	stop@mR+1,fsr2h
 10851   005214  0E0A               	movlw	10
 10852   005216  5EDF               	subwf	indf2,f,c
 10853   005218                     
 10854                           ;dc_motor.c: 102:         setMotorPWM(mL);
 10855   005218  C014  F00E         	movff	stop@mL,setMotorPWM@m
 10856   00521C  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 10857   005220  ECCD  F022         	call	_setMotorPWM	;wreg free
 10858   005224                     
 10859                           ;dc_motor.c: 103:         setMotorPWM(mR);
 10860   005224  C016  F00E         	movff	stop@mR,setMotorPWM@m
 10861   005228  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 10862   00522C  ECCD  F022         	call	_setMotorPWM	;wreg free
 10863   005230                     
 10864                           ;dc_motor.c: 105:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10865   005230  0E02               	movlw	2
 10866   005232  6E19               	movwf	(??_stop+1)^0,c
 10867   005234  0EA0               	movlw	160
 10868   005236  6E18               	movwf	??_stop^0,c
 10869   005238  0E92               	movlw	146
 10870   00523A                     u6017:
 10871   00523A  2EE8               	decfsz	wreg,f,c
 10872   00523C  D7FE               	bra	u6017
 10873   00523E  2E18               	decfsz	??_stop^0,f,c
 10874   005240  D7FC               	bra	u6017
 10875   005242  2E19               	decfsz	(??_stop+1)^0,f,c
 10876   005244  D7FA               	bra	u6017
 10877   005246  D000               	nop2	
 10878   005248                     l4579:
 10879                           
 10880                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
 10881   005248  C014  FFD9         	movff	stop@mL,fsr2l
 10882   00524C  C015  FFDA         	movff	stop@mL+1,fsr2h
 10883   005250  50DF               	movf	indf2,w,c
 10884   005252  A4D8               	btfss	status,2,c
 10885   005254  EF2E  F029         	goto	u4371
 10886   005258  EF30  F029         	goto	u4370
 10887   00525C                     u4371:
 10888   00525C  EF00  F029         	goto	l4571
 10889   005260                     u4370:
 10890   005260  C016  FFD9         	movff	stop@mR,fsr2l
 10891   005264  C017  FFDA         	movff	stop@mR+1,fsr2h
 10892   005268  50DF               	movf	indf2,w,c
 10893   00526A  A4D8               	btfss	status,2,c
 10894   00526C  EF3A  F029         	goto	u4381
 10895   005270  EF3C  F029         	goto	u4380
 10896   005274                     u4381:
 10897   005274  EF00  F029         	goto	l4571
 10898   005278                     u4380:
 10899   005278  0012               	return		;funcret
 10900   00527A                     __end_of_stop:
 10901                           	callstack 0
 10902                           
 10903 ;; *************** function _fullSpeedBack *****************
 10904 ;; Defined at:
 10905 ;;		line 184 in file "dc_motor.c"
 10906 ;; Parameters:    Size  Location     Type
 10907 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10908 ;;		 -> motorL(9), 
 10909 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10910 ;;		 -> motorR(9), 
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;		None
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      void 
 10915 ;; Registers used:
 10916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10924 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10925 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10926 ;;Total ram usage:        6 bytes
 10927 ;; Hardware stack levels used: 1
 10928 ;; Hardware stack levels required when called: 3
 10929 ;; This function calls:
 10930 ;;		_setMotorPWM
 10931 ;; This function is called by:
 10932 ;;		_reverseDetect
 10933 ;;		_reverseOneBlock
 10934 ;;		_Backhalfblock
 10935 ;; This function uses a non-reentrant model
 10936 ;;
 10937                           
 10938                           	psect	text65
 10939   0050D6                     __ptext65:
 10940                           	callstack 0
 10941   0050D6                     _fullSpeedBack:
 10942                           	callstack 25
 10943   0050D6                     
 10944                           ;dc_motor.c: 184: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 185: {;dc_motor.c: 187:     mL->direction =0;
 10945   0050D6  EE20 F001          	lfsr	2,1
 10946   0050DA  5014               	movf	fullSpeedBack@mL^0,w,c
 10947   0050DC  26D9               	addwf	fsr2l,f,c
 10948   0050DE  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 10949   0050E0  22DA               	addwfc	fsr2h,f,c
 10950   0050E2  0E00               	movlw	0
 10951   0050E4  6EDF               	movwf	indf2,c
 10952                           
 10953                           ;dc_motor.c: 188:     mR->direction =0;
 10954   0050E6  EE20 F001          	lfsr	2,1
 10955   0050EA  5016               	movf	fullSpeedBack@mR^0,w,c
 10956   0050EC  26D9               	addwf	fsr2l,f,c
 10957   0050EE  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 10958   0050F0  22DA               	addwfc	fsr2h,f,c
 10959   0050F2  0E00               	movlw	0
 10960   0050F4  6EDF               	movwf	indf2,c
 10961                           
 10962                           ;dc_motor.c: 189:     while (mL->power < power && mR->power < power){
 10963   0050F6  EFA1  F028         	goto	l4621
 10964   0050FA                     l4613:
 10965                           
 10966                           ;dc_motor.c: 191:         mL->power+=10;
 10967   0050FA  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10968   0050FE  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10969   005102  0E0A               	movlw	10
 10970   005104  26DF               	addwf	indf2,f,c
 10971                           
 10972                           ;dc_motor.c: 192:         mR->power+=10;
 10973   005106  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10974   00510A  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10975   00510E  0E0A               	movlw	10
 10976   005110  26DF               	addwf	indf2,f,c
 10977   005112                     
 10978                           ;dc_motor.c: 194:         setMotorPWM(mL);
 10979   005112  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 10980   005116  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 10981   00511A  ECCD  F022         	call	_setMotorPWM	;wreg free
 10982   00511E                     
 10983                           ;dc_motor.c: 195:         setMotorPWM(mR);
 10984   00511E  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 10985   005122  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 10986   005126  ECCD  F022         	call	_setMotorPWM	;wreg free
 10987   00512A                     
 10988                           ;dc_motor.c: 197:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10989   00512A  0E02               	movlw	2
 10990   00512C  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 10991   00512E  0EA0               	movlw	160
 10992   005130  6E18               	movwf	??_fullSpeedBack^0,c
 10993   005132  0E92               	movlw	146
 10994   005134                     u6027:
 10995   005134  2EE8               	decfsz	wreg,f,c
 10996   005136  D7FE               	bra	u6027
 10997   005138  2E18               	decfsz	??_fullSpeedBack^0,f,c
 10998   00513A  D7FC               	bra	u6027
 10999   00513C  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11000   00513E  D7FA               	bra	u6027
 11001   005140  D000               	nop2	
 11002   005142                     l4621:
 11003   005142  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11004   005146  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11005   00514A  0E1E               	movlw	30
 11006   00514C  60DF               	cpfslt	indf2,c
 11007   00514E  EFAB  F028         	goto	u4431
 11008   005152  EFAD  F028         	goto	u4430
 11009   005156                     u4431:
 11010   005156  EFB9  F028         	goto	l540
 11011   00515A                     u4430:
 11012   00515A  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11013   00515E  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11014   005162  0E1D               	movlw	29
 11015   005164  64DF               	cpfsgt	indf2,c
 11016   005166  EFB7  F028         	goto	u4441
 11017   00516A  EFB9  F028         	goto	u4440
 11018   00516E                     u4441:
 11019   00516E  EF7D  F028         	goto	l4613
 11020   005172                     u4440:
 11021   005172                     l540:
 11022   005172  0012               	return		;funcret
 11023   005174                     __end_of_fullSpeedBack:
 11024                           	callstack 0
 11025                           
 11026 ;; *************** function _setMotorPWM *****************
 11027 ;; Defined at:
 11028 ;;		line 67 in file "dc_motor.c"
 11029 ;; Parameters:    Size  Location     Type
 11030 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11031 ;;		 -> motorR(9), motorL(9), 
 11032 ;; Auto vars:     Size  Location     Type
 11033 ;;  negDuty         1   18[COMRAM] unsigned char 
 11034 ;;  posDuty         1   17[COMRAM] unsigned char 
 11035 ;; Return value:  Size  Location     Type
 11036 ;;                  1    wreg      void 
 11037 ;; Registers used:
 11038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11039 ;; Tracked objects:
 11040 ;;		On entry : 0/0
 11041 ;;		On exit  : 0/0
 11042 ;;		Unchanged: 0/0
 11043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11044 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11045 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11046 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11047 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11048 ;;Total ram usage:        6 bytes
 11049 ;; Hardware stack levels used: 1
 11050 ;; Hardware stack levels required when called: 2
 11051 ;; This function calls:
 11052 ;;		___lwdiv
 11053 ;;		___wmul
 11054 ;; This function is called by:
 11055 ;;		_stop
 11056 ;;		_turnLeft
 11057 ;;		_turnRight
 11058 ;;		_fullSpeedAhead
 11059 ;;		_timed_forward
 11060 ;;		_fullSpeedBack
 11061 ;; This function uses a non-reentrant model
 11062 ;;
 11063                           
 11064                           	psect	text66
 11065   00459A                     __ptext66:
 11066                           	callstack 0
 11067   00459A                     _setMotorPWM:
 11068                           	callstack 27
 11069   00459A                     
 11070                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
 11071   00459A  EE20 F002          	lfsr	2,2
 11072   00459E  500E               	movf	setMotorPWM@m^0,w,c
 11073   0045A0  26D9               	addwf	fsr2l,f,c
 11074   0045A2  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11075   0045A4  22DA               	addwfc	fsr2h,f,c
 11076   0045A6  50DF               	movf	indf2,w,c
 11077   0045A8  B4D8               	btfsc	status,2,c
 11078   0045AA  EFD9  F022         	goto	u3371
 11079   0045AE  EFDB  F022         	goto	u3370
 11080   0045B2                     u3371:
 11081   0045B2  EF0F  F023         	goto	l4009
 11082   0045B6                     u3370:
 11083   0045B6                     
 11084                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11085   0045B6  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11086   0045BA  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11087   0045BE  50DF               	movf	indf2,w,c
 11088   0045C0  6E10               	movwf	??_setMotorPWM^0,c
 11089   0045C2  5010               	movf	??_setMotorPWM^0,w,c
 11090   0045C4  6E01               	movwf	___wmul@multiplier^0,c
 11091   0045C6  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11092   0045C8  EE20 F003          	lfsr	2,3
 11093   0045CC  500E               	movf	setMotorPWM@m^0,w,c
 11094   0045CE  26D9               	addwf	fsr2l,f,c
 11095   0045D0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11096   0045D2  22DA               	addwfc	fsr2h,f,c
 11097   0045D4  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11098   0045D8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11099   0045DC  EC19  F02F         	call	___wmul	;wreg free
 11100   0045E0  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11101   0045E4  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11102   0045E8  0E00               	movlw	0
 11103   0045EA  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11104   0045EC  0E64               	movlw	100
 11105   0045EE  6E09               	movwf	___lwdiv@divisor^0,c
 11106   0045F0  EC7A  F029         	call	___lwdiv	;wreg free
 11107   0045F4  EE20 F003          	lfsr	2,3
 11108   0045F8  500E               	movf	setMotorPWM@m^0,w,c
 11109   0045FA  26D9               	addwf	fsr2l,f,c
 11110   0045FC  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11111   0045FE  22DA               	addwfc	fsr2h,f,c
 11112   004600  50DF               	movf	indf2,w,c
 11113   004602  6E11               	movwf	(??_setMotorPWM+1)^0,c
 11114   004604  5007               	movf	?___lwdiv^0,w,c
 11115   004606  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 11116   004608  6E12               	movwf	setMotorPWM@posDuty^0,c
 11117   00460A                     
 11118                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
 11119   00460A  EE20 F003          	lfsr	2,3
 11120   00460E  500E               	movf	setMotorPWM@m^0,w,c
 11121   004610  26D9               	addwf	fsr2l,f,c
 11122   004612  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11123   004614  22DA               	addwfc	fsr2h,f,c
 11124   004616  50DF               	movf	indf2,w,c
 11125   004618  6E13               	movwf	setMotorPWM@negDuty^0,c
 11126                           
 11127                           ;dc_motor.c: 74:     }
 11128   00461A  EF32  F023         	goto	l4013
 11129   00461E                     l4009:
 11130                           
 11131                           ;dc_motor.c: 76:         posDuty=0;
 11132   00461E  0E00               	movlw	0
 11133   004620  6E12               	movwf	setMotorPWM@posDuty^0,c
 11134   004622                     
 11135                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11136   004622  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11137   004626  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11138   00462A  50DF               	movf	indf2,w,c
 11139   00462C  6E10               	movwf	??_setMotorPWM^0,c
 11140   00462E  5010               	movf	??_setMotorPWM^0,w,c
 11141   004630  6E01               	movwf	___wmul@multiplier^0,c
 11142   004632  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11143   004634  EE20 F003          	lfsr	2,3
 11144   004638  500E               	movf	setMotorPWM@m^0,w,c
 11145   00463A  26D9               	addwf	fsr2l,f,c
 11146   00463C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11147   00463E  22DA               	addwfc	fsr2h,f,c
 11148   004640  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11149   004644  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11150   004648  EC19  F02F         	call	___wmul	;wreg free
 11151   00464C  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11152   004650  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11153   004654  0E00               	movlw	0
 11154   004656  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11155   004658  0E64               	movlw	100
 11156   00465A  6E09               	movwf	___lwdiv@divisor^0,c
 11157   00465C  EC7A  F029         	call	___lwdiv	;wreg free
 11158   004660  5007               	movf	?___lwdiv^0,w,c
 11159   004662  6E13               	movwf	setMotorPWM@negDuty^0,c
 11160   004664                     l4013:
 11161                           
 11162                           ;dc_motor.c: 80:     if (m->direction) {
 11163   004664  EE20 F001          	lfsr	2,1
 11164   004668  500E               	movf	setMotorPWM@m^0,w,c
 11165   00466A  26D9               	addwf	fsr2l,f,c
 11166   00466C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11167   00466E  22DA               	addwfc	fsr2h,f,c
 11168   004670  50DF               	movf	indf2,w,c
 11169   004672  B4D8               	btfsc	status,2,c
 11170   004674  EF3E  F023         	goto	u3381
 11171   004678  EF40  F023         	goto	u3380
 11172   00467C                     u3381:
 11173   00467C  EF62  F023         	goto	l4017
 11174   004680                     u3380:
 11175   004680                     
 11176                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
 11177   004680  EE20 F005          	lfsr	2,5
 11178   004684  500E               	movf	setMotorPWM@m^0,w,c
 11179   004686  26D9               	addwf	fsr2l,f,c
 11180   004688  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11181   00468A  22DA               	addwfc	fsr2h,f,c
 11182   00468C  CFDE F010          	movff	postinc2,??_setMotorPWM
 11183   004690  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11184   004694  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11185   004698  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11186   00469C  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11187                           
 11188                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
 11189   0046A0  EE20 F007          	lfsr	2,7
 11190   0046A4  500E               	movf	setMotorPWM@m^0,w,c
 11191   0046A6  26D9               	addwf	fsr2l,f,c
 11192   0046A8  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11193   0046AA  22DA               	addwfc	fsr2h,f,c
 11194   0046AC  CFDE F010          	movff	postinc2,??_setMotorPWM
 11195   0046B0  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11196   0046B4  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11197   0046B8  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11198   0046BC  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11199                           
 11200                           ;dc_motor.c: 85:     } else {
 11201   0046C0  EF82  F023         	goto	l494
 11202   0046C4                     l4017:
 11203                           
 11204                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
 11205   0046C4  EE20 F005          	lfsr	2,5
 11206   0046C8  500E               	movf	setMotorPWM@m^0,w,c
 11207   0046CA  26D9               	addwf	fsr2l,f,c
 11208   0046CC  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11209   0046CE  22DA               	addwfc	fsr2h,f,c
 11210   0046D0  CFDE F010          	movff	postinc2,??_setMotorPWM
 11211   0046D4  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11212   0046D8  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11213   0046DC  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11214   0046E0  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11215                           
 11216                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
 11217   0046E4  EE20 F007          	lfsr	2,7
 11218   0046E8  500E               	movf	setMotorPWM@m^0,w,c
 11219   0046EA  26D9               	addwf	fsr2l,f,c
 11220   0046EC  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11221   0046EE  22DA               	addwfc	fsr2h,f,c
 11222   0046F0  CFDE F010          	movff	postinc2,??_setMotorPWM
 11223   0046F4  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11224   0046F8  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11225   0046FC  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11226   004700  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11227   004704                     l494:
 11228   004704  0012               	return		;funcret
 11229   004706                     __end_of_setMotorPWM:
 11230                           	callstack 0
 11231                           
 11232 ;; *************** function ___wmul *****************
 11233 ;; Defined at:
 11234 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;  multiplier      2    0[COMRAM] unsigned int 
 11237 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11238 ;; Auto vars:     Size  Location     Type
 11239 ;;  product         2    4[COMRAM] unsigned int 
 11240 ;; Return value:  Size  Location     Type
 11241 ;;                  2    0[COMRAM] unsigned int 
 11242 ;; Registers used:
 11243 ;;		wreg, status,2, status,0, prodl, prodh
 11244 ;; Tracked objects:
 11245 ;;		On entry : 0/0
 11246 ;;		On exit  : 0/0
 11247 ;;		Unchanged: 0/0
 11248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11249 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11252 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11253 ;;Total ram usage:        6 bytes
 11254 ;; Hardware stack levels used: 1
 11255 ;; Hardware stack levels required when called: 1
 11256 ;; This function calls:
 11257 ;;		Nothing
 11258 ;; This function is called by:
 11259 ;;		_setMotorPWM
 11260 ;; This function uses a non-reentrant model
 11261 ;;
 11262                           
 11263                           	psect	text67
 11264   005E32                     __ptext67:
 11265                           	callstack 0
 11266   005E32                     ___wmul:
 11267                           	callstack 27
 11268   005E32  5001               	movf	___wmul@multiplier^0,w,c
 11269   005E34  0203               	mulwf	___wmul@multiplicand^0,c
 11270   005E36  CFF3 F005          	movff	prodl,___wmul@product
 11271   005E3A  CFF4 F006          	movff	prodh,___wmul@product+1
 11272   005E3E  5001               	movf	___wmul@multiplier^0,w,c
 11273   005E40  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11274   005E42  50F3               	movf	243,w,c
 11275   005E44  2606               	addwf	(___wmul@product+1)^0,f,c
 11276   005E46  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11277   005E48  0203               	mulwf	___wmul@multiplicand^0,c
 11278   005E4A  50F3               	movf	243,w,c
 11279   005E4C  2606               	addwf	(___wmul@product+1)^0,f,c
 11280   005E4E  C005  F001         	movff	___wmul@product,?___wmul
 11281   005E52  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11282   005E56  0012               	return		;funcret
 11283   005E58                     __end_of___wmul:
 11284                           	callstack 0
 11285                           
 11286 ;; *************** function ___lwdiv *****************
 11287 ;; Defined at:
 11288 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 11289 ;; Parameters:    Size  Location     Type
 11290 ;;  dividend        2    6[COMRAM] unsigned int 
 11291 ;;  divisor         2    8[COMRAM] unsigned int 
 11292 ;; Auto vars:     Size  Location     Type
 11293 ;;  quotient        2   10[COMRAM] unsigned int 
 11294 ;;  counter         1   12[COMRAM] unsigned char 
 11295 ;; Return value:  Size  Location     Type
 11296 ;;                  2    6[COMRAM] unsigned int 
 11297 ;; Registers used:
 11298 ;;		wreg, status,2, status,0
 11299 ;; Tracked objects:
 11300 ;;		On entry : 0/0
 11301 ;;		On exit  : 0/0
 11302 ;;		Unchanged: 0/0
 11303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11304 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11305 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11307 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11308 ;;Total ram usage:        7 bytes
 11309 ;; Hardware stack levels used: 1
 11310 ;; Hardware stack levels required when called: 1
 11311 ;; This function calls:
 11312 ;;		Nothing
 11313 ;; This function is called by:
 11314 ;;		_setMotorPWM
 11315 ;; This function uses a non-reentrant model
 11316 ;;
 11317                           
 11318                           	psect	text68
 11319   0052F4                     __ptext68:
 11320                           	callstack 0
 11321   0052F4                     ___lwdiv:
 11322                           	callstack 27
 11323   0052F4  0E00               	movlw	0
 11324   0052F6  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11325   0052F8  0E00               	movlw	0
 11326   0052FA  6E0B               	movwf	___lwdiv@quotient^0,c
 11327   0052FC  5009               	movf	___lwdiv@divisor^0,w,c
 11328   0052FE  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11329   005300  B4D8               	btfsc	status,2,c
 11330   005302  EF85  F029         	goto	u3331
 11331   005306  EF87  F029         	goto	u3330
 11332   00530A                     u3331:
 11333   00530A  EFAF  F029         	goto	l1169
 11334   00530E                     u3330:
 11335   00530E  0E01               	movlw	1
 11336   005310  6E0D               	movwf	___lwdiv@counter^0,c
 11337   005312  EF8F  F029         	goto	l3981
 11338   005316                     l3979:
 11339   005316  90D8               	bcf	status,0,c
 11340   005318  3609               	rlcf	___lwdiv@divisor^0,f,c
 11341   00531A  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11342   00531C  2A0D               	incf	___lwdiv@counter^0,f,c
 11343   00531E                     l3981:
 11344   00531E  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 11345   005320  EF94  F029         	goto	u3341
 11346   005324  EF96  F029         	goto	u3340
 11347   005328                     u3341:
 11348   005328  EF8B  F029         	goto	l3979
 11349   00532C                     u3340:
 11350   00532C                     l3983:
 11351   00532C  90D8               	bcf	status,0,c
 11352   00532E  360B               	rlcf	___lwdiv@quotient^0,f,c
 11353   005330  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11354   005332  5009               	movf	___lwdiv@divisor^0,w,c
 11355   005334  5C07               	subwf	___lwdiv@dividend^0,w,c
 11356   005336  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11357   005338  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11358   00533A  A0D8               	btfss	status,0,c
 11359   00533C  EFA2  F029         	goto	u3351
 11360   005340  EFA4  F029         	goto	u3350
 11361   005344                     u3351:
 11362   005344  EFA9  F029         	goto	l3991
 11363   005348                     u3350:
 11364   005348  5009               	movf	___lwdiv@divisor^0,w,c
 11365   00534A  5E07               	subwf	___lwdiv@dividend^0,f,c
 11366   00534C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11367   00534E  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11368   005350  800B               	bsf	___lwdiv@quotient^0,0,c
 11369   005352                     l3991:
 11370   005352  90D8               	bcf	status,0,c
 11371   005354  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11372   005356  3209               	rrcf	___lwdiv@divisor^0,f,c
 11373   005358  2E0D               	decfsz	___lwdiv@counter^0,f,c
 11374   00535A  EF96  F029         	goto	l3983
 11375   00535E                     l1169:
 11376   00535E  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 11377   005362  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11378   005366  0012               	return		;funcret
 11379   005368                     __end_of___lwdiv:
 11380                           	callstack 0
 11381                           
 11382 ;; *************** function _Interrupts_init *****************
 11383 ;; Defined at:
 11384 ;;		line 12 in file "interrupts.c"
 11385 ;; Parameters:    Size  Location     Type
 11386 ;;		None
 11387 ;; Auto vars:     Size  Location     Type
 11388 ;;		None
 11389 ;; Return value:  Size  Location     Type
 11390 ;;                  1    wreg      void 
 11391 ;; Registers used:
 11392 ;;		None
 11393 ;; Tracked objects:
 11394 ;;		On entry : 0/0
 11395 ;;		On exit  : 0/0
 11396 ;;		Unchanged: 0/0
 11397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11402 ;;Total ram usage:        0 bytes
 11403 ;; Hardware stack levels used: 1
 11404 ;; Hardware stack levels required when called: 1
 11405 ;; This function calls:
 11406 ;;		Nothing
 11407 ;; This function is called by:
 11408 ;;		_main
 11409 ;; This function uses a non-reentrant model
 11410 ;;
 11411                           
 11412                           	psect	text69
 11413   005F04                     __ptext69:
 11414                           	callstack 0
 11415   005F04                     _Interrupts_init:
 11416                           	callstack 29
 11417   005F04  0012               	return		;funcret
 11418   005F06                     __end_of_Interrupts_init:
 11419                           	callstack 0
 11420                           
 11421 ;; *************** function _Colour_decider *****************
 11422 ;; Defined at:
 11423 ;;		line 125 in file "color.c"
 11424 ;; Parameters:    Size  Location     Type
 11425 ;;  vals            2   74[COMRAM] PTR struct RGB
 11426 ;;		 -> vals(8), 
 11427 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 11428 ;;		 -> rel(12), 
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;  RGB_col        12    6[BANK0 ] float [3]
 11431 ;;  Hue             4   28[BANK0 ] float 
 11432 ;;  Cmin            4   22[BANK0 ] float 
 11433 ;;  Cmax            4   18[BANK0 ] float 
 11434 ;;  i               2   26[BANK0 ] int 
 11435 ;;  Cmax_i          2    4[BANK0 ] int 
 11436 ;; Return value:  Size  Location     Type
 11437 ;;                  2   74[COMRAM] int 
 11438 ;; Registers used:
 11439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11440 ;; Tracked objects:
 11441 ;;		On entry : 0/0
 11442 ;;		On exit  : 0/0
 11443 ;;		Unchanged: 0/0
 11444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11445 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11446 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11447 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11448 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11449 ;;Total ram usage:       38 bytes
 11450 ;; Hardware stack levels used: 1
 11451 ;; Hardware stack levels required when called: 3
 11452 ;; This function calls:
 11453 ;;		___fladd
 11454 ;;		___fldiv
 11455 ;;		___fleq
 11456 ;;		___flge
 11457 ;;		___flmul
 11458 ;;		___flsub
 11459 ;;		___xxtofl
 11460 ;; This function is called by:
 11461 ;;		_main
 11462 ;; This function uses a non-reentrant model
 11463 ;;
 11464                           
 11465                           	psect	text70
 11466   000E52                     __ptext70:
 11467                           	callstack 0
 11468   000E52                     _Colour_decider:
 11469                           	callstack 27
 11470   000E52                     
 11471                           ;color.c: 126:     float Cmax = 0;
 11472   000E52  0E00               	movlw	0
 11473   000E54  0100               	movlb	0	; () banked
 11474   000E56  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 11475   000E58  0E00               	movlw	0
 11476   000E5A  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 11477   000E5C  0E00               	movlw	0
 11478   000E5E  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 11479   000E60  0E00               	movlw	0
 11480   000E62  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 11481                           
 11482                           ;color.c: 127:     float Cmin= 100000;
 11483   000E64  0E00               	movlw	0
 11484   000E66  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 11485   000E68  0E50               	movlw	80
 11486   000E6A  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 11487   000E6C  0EC3               	movlw	195
 11488   000E6E  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 11489   000E70  0E47               	movlw	71
 11490   000E72  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 11491                           
 11492                           ;color.c: 128:     int Cmax_i =4;
 11493   000E74  0E00               	movlw	0
 11494   000E76  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 11495   000E78  0E04               	movlw	4
 11496   000E7A  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 11497   000E7C                     
 11498                           ; BSR set to: 0
 11499                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 11500   000E7C  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 11501   000E80  0E0B               	movlw	11
 11502   000E82                     u5081:
 11503   000E82  6ADE               	clrf	postinc2,c
 11504   000E84  06E8               	decf	wreg,f,c
 11505   000E86  E2FD               	bc	u5081
 11506   000E88                     
 11507                           ; BSR set to: 0
 11508   000E88  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 11509   000E8C  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 11510   000E90  CFDE F001          	movff	postinc2,___xxtofl@val
 11511   000E94  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11512   000E98  0E00               	movlw	0
 11513   000E9A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11514   000E9C  0EFF               	movlw	-1
 11515   000E9E  6E03               	movwf	(___xxtofl@val+2)^0,c
 11516   000EA0  6E04               	movwf	(___xxtofl@val+3)^0,c
 11517   000EA2  0E01               	movlw	1
 11518   000EA4  EC2F  F021         	call	___xxtofl
 11519   000EA8  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 11520   000EAC  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 11521   000EB0  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 11522   000EB4  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 11523   000EB8  EE20 F002          	lfsr	2,2
 11524   000EBC  504B               	movf	Colour_decider@vals^0,w,c
 11525   000EBE  26D9               	addwf	fsr2l,f,c
 11526   000EC0  504C               	movf	(Colour_decider@vals+1)^0,w,c
 11527   000EC2  22DA               	addwfc	fsr2h,f,c
 11528   000EC4  CFDE F001          	movff	postinc2,___xxtofl@val
 11529   000EC8  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11530   000ECC  0E00               	movlw	0
 11531   000ECE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11532   000ED0  0EFF               	movlw	-1
 11533   000ED2  6E03               	movwf	(___xxtofl@val+2)^0,c
 11534   000ED4  6E04               	movwf	(___xxtofl@val+3)^0,c
 11535   000ED6  0E01               	movlw	1
 11536   000ED8  EC2F  F021         	call	___xxtofl
 11537   000EDC  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 11538   000EE0  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 11539   000EE4  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 11540   000EE8  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 11541   000EEC  EE20 F004          	lfsr	2,4
 11542   000EF0  504B               	movf	Colour_decider@vals^0,w,c
 11543   000EF2  26D9               	addwf	fsr2l,f,c
 11544   000EF4  504C               	movf	(Colour_decider@vals+1)^0,w,c
 11545   000EF6  22DA               	addwfc	fsr2h,f,c
 11546   000EF8  CFDE F001          	movff	postinc2,___xxtofl@val
 11547   000EFC  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11548   000F00  0E00               	movlw	0
 11549   000F02  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11550   000F04  0EFF               	movlw	-1
 11551   000F06  6E03               	movwf	(___xxtofl@val+2)^0,c
 11552   000F08  6E04               	movwf	(___xxtofl@val+3)^0,c
 11553   000F0A  0E01               	movlw	1
 11554   000F0C  EC2F  F021         	call	___xxtofl
 11555   000F10  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 11556   000F14  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 11557   000F18  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 11558   000F1C  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 11559   000F20                     
 11560                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 11561   000F20  0E00               	movlw	0
 11562   000F22  0100               	movlb	0	; () banked
 11563   000F24  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 11564   000F26  0E00               	movlw	0
 11565   000F28  6F7A               	movwf	Colour_decider@i& (0+255),b
 11566   000F2A                     l5251:
 11567                           
 11568                           ; BSR set to: 0
 11569                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 11570   000F2A  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 11571   000F2E  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 11572   000F32  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 11573   000F36  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 11574   000F3A  0E66               	movlw	low Colour_decider@RGB_col
 11575   000F3C  6E4F               	movwf	??_Colour_decider^0,c
 11576   000F3E  0E00               	movlw	high Colour_decider@RGB_col
 11577   000F40  6E50               	movwf	(??_Colour_decider+1)^0,c
 11578   000F42  90D8               	bcf	status,0,c
 11579   000F44  357A               	rlcf	Colour_decider@i& (0+255),w,b
 11580   000F46  6ED9               	movwf	fsr2l,c
 11581   000F48  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 11582   000F4A  6EDA               	movwf	fsr2h,c
 11583   000F4C  90D8               	bcf	status,0,c
 11584   000F4E  36D9               	rlcf	fsr2l,f,c
 11585   000F50  36DA               	rlcf	fsr2h,f,c
 11586   000F52  504F               	movf	??_Colour_decider^0,w,c
 11587   000F54  26D9               	addwf	fsr2l,f,c
 11588   000F56  5050               	movf	(??_Colour_decider+1)^0,w,c
 11589   000F58  22DA               	addwfc	fsr2h,f,c
 11590   000F5A  CFDE F02E          	movff	postinc2,___flge@ff2
 11591   000F5E  CFDE F02F          	movff	postinc2,___flge@ff2+1
 11592   000F62  CFDE F030          	movff	postinc2,___flge@ff2+2
 11593   000F66  CFDE F031          	movff	postinc2,___flge@ff2+3
 11594   000F6A  ECB8  F024         	call	___flge	;wreg free
 11595   000F6E  B0D8               	btfsc	status,0,c
 11596   000F70  EFBC  F007         	goto	u5091
 11597   000F74  EFBE  F007         	goto	u5090
 11598   000F78                     u5091:
 11599   000F78  EFDB  F007         	goto	l5257
 11600   000F7C                     u5090:
 11601   000F7C                     
 11602                           ;color.c: 137:             Cmax=RGB_col[i];
 11603   000F7C  0E66               	movlw	low Colour_decider@RGB_col
 11604   000F7E  6E4F               	movwf	??_Colour_decider^0,c
 11605   000F80  0E00               	movlw	high Colour_decider@RGB_col
 11606   000F82  6E50               	movwf	(??_Colour_decider+1)^0,c
 11607   000F84  90D8               	bcf	status,0,c
 11608   000F86  0100               	movlb	0	; () banked
 11609   000F88  357A               	rlcf	Colour_decider@i& (0+255),w,b
 11610   000F8A  6ED9               	movwf	fsr2l,c
 11611   000F8C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 11612   000F8E  6EDA               	movwf	fsr2h,c
 11613   000F90  90D8               	bcf	status,0,c
 11614   000F92  36D9               	rlcf	fsr2l,f,c
 11615   000F94  36DA               	rlcf	fsr2h,f,c
 11616   000F96  504F               	movf	??_Colour_decider^0,w,c
 11617   000F98  26D9               	addwf	fsr2l,f,c
 11618   000F9A  5050               	movf	(??_Colour_decider+1)^0,w,c
 11619   000F9C  22DA               	addwfc	fsr2h,f,c
 11620   000F9E  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 11621   000FA2  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 11622   000FA6  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 11623   000FAA  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 11624   000FAE                     
 11625                           ; BSR set to: 0
 11626                           ;color.c: 138:             Cmax_i=i;
 11627   000FAE  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 11628   000FB2  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 11629   000FB6                     l5257:
 11630                           
 11631                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 11632   000FB6  0E66               	movlw	low Colour_decider@RGB_col
 11633   000FB8  6E4F               	movwf	??_Colour_decider^0,c
 11634   000FBA  0E00               	movlw	high Colour_decider@RGB_col
 11635   000FBC  6E50               	movwf	(??_Colour_decider+1)^0,c
 11636   000FBE  90D8               	bcf	status,0,c
 11637   000FC0  0100               	movlb	0	; () banked
 11638   000FC2  357A               	rlcf	Colour_decider@i& (0+255),w,b
 11639   000FC4  6ED9               	movwf	fsr2l,c
 11640   000FC6  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 11641   000FC8  6EDA               	movwf	fsr2h,c
 11642   000FCA  90D8               	bcf	status,0,c
 11643   000FCC  36D9               	rlcf	fsr2l,f,c
 11644   000FCE  36DA               	rlcf	fsr2h,f,c
 11645   000FD0  504F               	movf	??_Colour_decider^0,w,c
 11646   000FD2  26D9               	addwf	fsr2l,f,c
 11647   000FD4  5050               	movf	(??_Colour_decider+1)^0,w,c
 11648   000FD6  22DA               	addwfc	fsr2h,f,c
 11649   000FD8  CFDE F02A          	movff	postinc2,___flge@ff1
 11650   000FDC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11651   000FE0  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11652   000FE4  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11653   000FE8  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 11654   000FEC  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 11655   000FF0  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 11656   000FF4  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 11657   000FF8  ECB8  F024         	call	___flge	;wreg free
 11658   000FFC  B0D8               	btfsc	status,0,c
 11659   000FFE  EF03  F008         	goto	u5101
 11660   001002  EF05  F008         	goto	u5100
 11661   001006                     u5101:
 11662   001006  EF1E  F008         	goto	l5261
 11663   00100A                     u5100:
 11664   00100A  0E66               	movlw	low Colour_decider@RGB_col
 11665   00100C  6E4F               	movwf	??_Colour_decider^0,c
 11666   00100E  0E00               	movlw	high Colour_decider@RGB_col
 11667   001010  6E50               	movwf	(??_Colour_decider+1)^0,c
 11668   001012  90D8               	bcf	status,0,c
 11669   001014  0100               	movlb	0	; () banked
 11670   001016  357A               	rlcf	Colour_decider@i& (0+255),w,b
 11671   001018  6ED9               	movwf	fsr2l,c
 11672   00101A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 11673   00101C  6EDA               	movwf	fsr2h,c
 11674   00101E  90D8               	bcf	status,0,c
 11675   001020  36D9               	rlcf	fsr2l,f,c
 11676   001022  36DA               	rlcf	fsr2h,f,c
 11677   001024  504F               	movf	??_Colour_decider^0,w,c
 11678   001026  26D9               	addwf	fsr2l,f,c
 11679   001028  5050               	movf	(??_Colour_decider+1)^0,w,c
 11680   00102A  22DA               	addwfc	fsr2h,f,c
 11681   00102C  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 11682   001030  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 11683   001034  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 11684   001038  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 11685   00103C                     l5261:
 11686                           
 11687                           ;color.c: 141:     }
 11688   00103C  0100               	movlb	0	; () banked
 11689   00103E  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 11690   001040  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 11691   001042                     
 11692                           ; BSR set to: 0
 11693   001042  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 11694   001044  EF2D  F008         	goto	u5111
 11695   001048  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 11696   00104A  E109               	bnz	u5110
 11697   00104C  0E03               	movlw	3
 11698   00104E  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 11699   001050  A0D8               	btfss	status,0,c
 11700   001052  EF2D  F008         	goto	u5111
 11701   001056  EF2F  F008         	goto	u5110
 11702   00105A                     u5111:
 11703   00105A  EF95  F007         	goto	l5251
 11704   00105E                     u5110:
 11705   00105E                     
 11706                           ; BSR set to: 0
 11707                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 11708   00105E  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11709   001062  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11710   001066  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11711   00106A  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11712   00106E  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11713   001072  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11714   001076  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11715   00107A  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11716   00107E  EC92  F02D         	call	___flsub	;wreg free
 11717   001082  C02A  F032         	movff	?___flsub,___fleq@ff1
 11718   001086  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 11719   00108A  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 11720   00108E  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 11721   001092  0E00               	movlw	0
 11722   001094  6E36               	movwf	___fleq@ff2^0,c
 11723   001096  0E00               	movlw	0
 11724   001098  6E37               	movwf	(___fleq@ff2+1)^0,c
 11725   00109A  0E00               	movlw	0
 11726   00109C  6E38               	movwf	(___fleq@ff2+2)^0,c
 11727   00109E  0E00               	movlw	0
 11728   0010A0  6E39               	movwf	(___fleq@ff2+3)^0,c
 11729   0010A2  EC29  F027         	call	___fleq	;wreg free
 11730   0010A6  A0D8               	btfss	status,0,c
 11731   0010A8  EF58  F008         	goto	u5121
 11732   0010AC  EF5A  F008         	goto	u5120
 11733   0010B0                     u5121:
 11734   0010B0  EF60  F008         	goto	l5271
 11735   0010B4                     u5120:
 11736   0010B4                     l5267:
 11737   0010B4  0E00               	movlw	0
 11738   0010B6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11739   0010B8  0E00               	movlw	0
 11740   0010BA  6E4B               	movwf	?_Colour_decider^0,c
 11741   0010BC  EF96  F00C         	goto	l76
 11742   0010C0                     l5271:
 11743                           
 11744                           ;color.c: 146:     if (Cmax_i==0){
 11745   0010C0  0100               	movlb	0	; () banked
 11746   0010C2  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 11747   0010C4  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 11748   0010C6  A4D8               	btfss	status,2,c
 11749   0010C8  EF68  F008         	goto	u5131
 11750   0010CC  EF6A  F008         	goto	u5130
 11751   0010D0                     u5131:
 11752   0010D0  EFDE  F008         	goto	l5279
 11753   0010D4                     u5130:
 11754   0010D4                     
 11755                           ; BSR set to: 0
 11756                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 11757   0010D4  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11758   0010D8  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11759   0010DC  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11760   0010E0  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11761   0010E4  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11762   0010E8  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11763   0010EC  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11764   0010F0  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11765   0010F4  EC92  F02D         	call	___flsub	;wreg free
 11766   0010F8  C02A  F036         	movff	?___flsub,___fldiv@a
 11767   0010FC  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11768   001100  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11769   001104  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11770   001108  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 11771   00110C  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 11772   001110  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 11773   001114  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 11774   001118  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 11775   00111C  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 11776   001120  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 11777   001124  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 11778   001128  EC92  F02D         	call	___flsub	;wreg free
 11779   00112C  C02A  F032         	movff	?___flsub,___fldiv@b
 11780   001130  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11781   001134  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11782   001138  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11783   00113C  ECAA  F018         	call	___fldiv	;wreg free
 11784   001140  C032  F011         	movff	?___fldiv,___flmul@b
 11785   001144  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 11786   001148  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 11787   00114C  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 11788   001150  0E00               	movlw	0
 11789   001152  6E15               	movwf	___flmul@a^0,c
 11790   001154  0E00               	movlw	0
 11791   001156  6E16               	movwf	(___flmul@a+1)^0,c
 11792   001158  0E70               	movlw	112
 11793   00115A  6E17               	movwf	(___flmul@a+2)^0,c
 11794   00115C  0E42               	movlw	66
 11795   00115E  6E18               	movwf	(___flmul@a+3)^0,c
 11796   001160  EC95  F016         	call	___flmul	;wreg free
 11797   001164  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11798   001168  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11799   00116C  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11800   001170  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11801   001174                     
 11802                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 11803   001174  0100               	movlb	0	; () banked
 11804   001176  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 11805   001178  EFC2  F008         	goto	u5140
 11806   00117C  EFC0  F008         	goto	u5141
 11807   001180                     u5141:
 11808   001180  EFBD  F009         	goto	l5289
 11809   001184                     u5140:
 11810   001184                     
 11811                           ; BSR set to: 0
 11812   001184  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 11813   001188  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 11814   00118C  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 11815   001190  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 11816   001194  0E00               	movlw	0
 11817   001196  6E05               	movwf	___fladd@a^0,c
 11818   001198  0E00               	movlw	0
 11819   00119A  6E06               	movwf	(___fladd@a+1)^0,c
 11820   00119C  0EB4               	movlw	180
 11821   00119E  6E07               	movwf	(___fladd@a+2)^0,c
 11822   0011A0  0E43               	movlw	67
 11823   0011A2  6E08               	movwf	(___fladd@a+3)^0,c
 11824   0011A4  EC35  F014         	call	___fladd	;wreg free
 11825   0011A8  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 11826   0011AC  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 11827   0011B0  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 11828   0011B4  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 11829   0011B8  EFBD  F009         	goto	l5289
 11830   0011BC                     l5279:
 11831                           
 11832                           ; BSR set to: 0
 11833   0011BC  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 11834   0011BE  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 11835   0011C0  A4D8               	btfss	status,2,c
 11836   0011C2  EFE5  F008         	goto	u5151
 11837   0011C6  EFE7  F008         	goto	u5150
 11838   0011CA                     u5151:
 11839   0011CA  EF53  F009         	goto	l5285
 11840   0011CE                     u5150:
 11841   0011CE                     
 11842                           ; BSR set to: 0
 11843                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 11844   0011CE  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11845   0011D2  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11846   0011D6  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11847   0011DA  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11848   0011DE  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11849   0011E2  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11850   0011E6  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11851   0011EA  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11852   0011EE  EC92  F02D         	call	___flsub	;wreg free
 11853   0011F2  C02A  F036         	movff	?___flsub,___fldiv@a
 11854   0011F6  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11855   0011FA  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11856   0011FE  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11857   001202  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 11858   001206  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 11859   00120A  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 11860   00120E  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 11861   001212  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 11862   001216  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 11863   00121A  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 11864   00121E  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 11865   001222  EC92  F02D         	call	___flsub	;wreg free
 11866   001226  C02A  F032         	movff	?___flsub,___fldiv@b
 11867   00122A  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11868   00122E  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11869   001232  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11870   001236  ECAA  F018         	call	___fldiv	;wreg free
 11871   00123A  C032  F060         	movff	?___fldiv,_Colour_decider$2949
 11872   00123E  C033  F061         	movff	?___fldiv+1,_Colour_decider$2949+1
 11873   001242  C034  F062         	movff	?___fldiv+2,_Colour_decider$2949+2
 11874   001246  C035  F063         	movff	?___fldiv+3,_Colour_decider$2949+3
 11875   00124A                     
 11876                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 11877   00124A  0E00               	movlw	0
 11878   00124C  6E05               	movwf	___fladd@a^0,c
 11879   00124E  0E00               	movlw	0
 11880   001250  6E06               	movwf	(___fladd@a+1)^0,c
 11881   001252  0E00               	movlw	0
 11882   001254  6E07               	movwf	(___fladd@a+2)^0,c
 11883   001256  0E40               	movlw	64
 11884   001258  6E08               	movwf	(___fladd@a+3)^0,c
 11885   00125A  C060  F001         	movff	_Colour_decider$2949,___fladd@b
 11886   00125E  C061  F002         	movff	_Colour_decider$2949+1,___fladd@b+1
 11887   001262  C062  F003         	movff	_Colour_decider$2949+2,___fladd@b+2
 11888   001266  C063  F004         	movff	_Colour_decider$2949+3,___fladd@b+3
 11889   00126A  EC35  F014         	call	___fladd	;wreg free
 11890   00126E  C001  F011         	movff	?___fladd,___flmul@b
 11891   001272  C002  F012         	movff	?___fladd+1,___flmul@b+1
 11892   001276  C003  F013         	movff	?___fladd+2,___flmul@b+2
 11893   00127A  C004  F014         	movff	?___fladd+3,___flmul@b+3
 11894   00127E  0E00               	movlw	0
 11895   001280  6E15               	movwf	___flmul@a^0,c
 11896   001282  0E00               	movlw	0
 11897   001284  6E16               	movwf	(___flmul@a+1)^0,c
 11898   001286  0E70               	movlw	112
 11899   001288  6E17               	movwf	(___flmul@a+2)^0,c
 11900   00128A  0E42               	movlw	66
 11901   00128C  6E18               	movwf	(___flmul@a+3)^0,c
 11902   00128E  EC95  F016         	call	___flmul	;wreg free
 11903   001292  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11904   001296  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11905   00129A  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11906   00129E  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11907                           
 11908                           ;color.c: 155:     }
 11909   0012A2  EFBD  F009         	goto	l5289
 11910   0012A6                     l5285:
 11911                           
 11912                           ; BSR set to: 0
 11913                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 11914   0012A6  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11915   0012AA  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11916   0012AE  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11917   0012B2  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11918   0012B6  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11919   0012BA  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11920   0012BE  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11921   0012C2  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11922   0012C6  EC92  F02D         	call	___flsub	;wreg free
 11923   0012CA  C02A  F036         	movff	?___flsub,___fldiv@a
 11924   0012CE  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11925   0012D2  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11926   0012D6  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11927   0012DA  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 11928   0012DE  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 11929   0012E2  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 11930   0012E6  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 11931   0012EA  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 11932   0012EE  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 11933   0012F2  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 11934   0012F6  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 11935   0012FA  EC92  F02D         	call	___flsub	;wreg free
 11936   0012FE  C02A  F032         	movff	?___flsub,___fldiv@b
 11937   001302  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11938   001306  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11939   00130A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11940   00130E  ECAA  F018         	call	___fldiv	;wreg free
 11941   001312  C032  F060         	movff	?___fldiv,_Colour_decider$2949
 11942   001316  C033  F061         	movff	?___fldiv+1,_Colour_decider$2949+1
 11943   00131A  C034  F062         	movff	?___fldiv+2,_Colour_decider$2949+2
 11944   00131E  C035  F063         	movff	?___fldiv+3,_Colour_decider$2949+3
 11945   001322                     
 11946                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 11947   001322  0E00               	movlw	0
 11948   001324  6E05               	movwf	___fladd@a^0,c
 11949   001326  0E00               	movlw	0
 11950   001328  6E06               	movwf	(___fladd@a+1)^0,c
 11951   00132A  0E80               	movlw	128
 11952   00132C  6E07               	movwf	(___fladd@a+2)^0,c
 11953   00132E  0E40               	movlw	64
 11954   001330  6E08               	movwf	(___fladd@a+3)^0,c
 11955   001332  C060  F001         	movff	_Colour_decider$2949,___fladd@b
 11956   001336  C061  F002         	movff	_Colour_decider$2949+1,___fladd@b+1
 11957   00133A  C062  F003         	movff	_Colour_decider$2949+2,___fladd@b+2
 11958   00133E  C063  F004         	movff	_Colour_decider$2949+3,___fladd@b+3
 11959   001342  EC35  F014         	call	___fladd	;wreg free
 11960   001346  C001  F011         	movff	?___fladd,___flmul@b
 11961   00134A  C002  F012         	movff	?___fladd+1,___flmul@b+1
 11962   00134E  C003  F013         	movff	?___fladd+2,___flmul@b+2
 11963   001352  C004  F014         	movff	?___fladd+3,___flmul@b+3
 11964   001356  0E00               	movlw	0
 11965   001358  6E15               	movwf	___flmul@a^0,c
 11966   00135A  0E00               	movlw	0
 11967   00135C  6E16               	movwf	(___flmul@a+1)^0,c
 11968   00135E  0E70               	movlw	112
 11969   001360  6E17               	movwf	(___flmul@a+2)^0,c
 11970   001362  0E42               	movlw	66
 11971   001364  6E18               	movwf	(___flmul@a+3)^0,c
 11972   001366  EC95  F016         	call	___flmul	;wreg free
 11973   00136A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11974   00136E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11975   001372  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11976   001376  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11977   00137A                     l5289:
 11978                           
 11979                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 11980   00137A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11981   00137E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11982   001382  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11983   001386  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11984   00138A  0E00               	movlw	0
 11985   00138C  6E2E               	movwf	___flge@ff2^0,c
 11986   00138E  0E00               	movlw	0
 11987   001390  6E2F               	movwf	(___flge@ff2+1)^0,c
 11988   001392  0EA5               	movlw	165
 11989   001394  6E30               	movwf	(___flge@ff2+2)^0,c
 11990   001396  0E43               	movlw	67
 11991   001398  6E31               	movwf	(___flge@ff2+3)^0,c
 11992   00139A  ECB8  F024         	call	___flge	;wreg free
 11993   00139E  A0D8               	btfss	status,0,c
 11994   0013A0  EFD4  F009         	goto	u5161
 11995   0013A4  EFD6  F009         	goto	u5160
 11996   0013A8                     u5161:
 11997   0013A8  EFF5  F009         	goto	l5299
 11998   0013AC                     u5160:
 11999   0013AC  0E00               	movlw	0
 12000   0013AE  6E2A               	movwf	___flge@ff1^0,c
 12001   0013B0  0E00               	movlw	0
 12002   0013B2  6E2B               	movwf	(___flge@ff1+1)^0,c
 12003   0013B4  0EB4               	movlw	180
 12004   0013B6  6E2C               	movwf	(___flge@ff1+2)^0,c
 12005   0013B8  0E43               	movlw	67
 12006   0013BA  6E2D               	movwf	(___flge@ff1+3)^0,c
 12007   0013BC  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12008   0013C0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12009   0013C4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12010   0013C8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12011   0013CC  ECB8  F024         	call	___flge	;wreg free
 12012   0013D0  A0D8               	btfss	status,0,c
 12013   0013D2  EFED  F009         	goto	u5171
 12014   0013D6  EFEF  F009         	goto	u5170
 12015   0013DA                     u5171:
 12016   0013DA  EFF5  F009         	goto	l5299
 12017   0013DE                     u5170:
 12018   0013DE                     
 12019                           ;color.c: 164:         return 1;
 12020   0013DE  0E00               	movlw	0
 12021   0013E0  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12022   0013E2  0E01               	movlw	1
 12023   0013E4  6E4B               	movwf	?_Colour_decider^0,c
 12024   0013E6  EF96  F00C         	goto	l76
 12025   0013EA                     l5299:
 12026   0013EA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12027   0013EE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12028   0013F2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12029   0013F6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12030   0013FA  0E00               	movlw	0
 12031   0013FC  6E2E               	movwf	___flge@ff2^0,c
 12032   0013FE  0E00               	movlw	0
 12033   001400  6E2F               	movwf	(___flge@ff2+1)^0,c
 12034   001402  0EA0               	movlw	160
 12035   001404  6E30               	movwf	(___flge@ff2+2)^0,c
 12036   001406  0E40               	movlw	64
 12037   001408  6E31               	movwf	(___flge@ff2+3)^0,c
 12038   00140A  ECB8  F024         	call	___flge	;wreg free
 12039   00140E  A0D8               	btfss	status,0,c
 12040   001410  EF0C  F00A         	goto	u5181
 12041   001414  EF0E  F00A         	goto	u5180
 12042   001418                     u5181:
 12043   001418  EF2D  F00A         	goto	l5309
 12044   00141C                     u5180:
 12045   00141C  0E00               	movlw	0
 12046   00141E  6E2A               	movwf	___flge@ff1^0,c
 12047   001420  0E00               	movlw	0
 12048   001422  6E2B               	movwf	(___flge@ff1+1)^0,c
 12049   001424  0E40               	movlw	64
 12050   001426  6E2C               	movwf	(___flge@ff1+2)^0,c
 12051   001428  0E41               	movlw	65
 12052   00142A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12053   00142C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12054   001430  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12055   001434  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12056   001438  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12057   00143C  ECB8  F024         	call	___flge	;wreg free
 12058   001440  A0D8               	btfss	status,0,c
 12059   001442  EF25  F00A         	goto	u5191
 12060   001446  EF27  F00A         	goto	u5190
 12061   00144A                     u5191:
 12062   00144A  EF2D  F00A         	goto	l5309
 12063   00144E                     u5190:
 12064   00144E                     
 12065                           ;color.c: 168:         return 2;
 12066   00144E  0E00               	movlw	0
 12067   001450  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12068   001452  0E02               	movlw	2
 12069   001454  6E4B               	movwf	?_Colour_decider^0,c
 12070   001456  EF96  F00C         	goto	l76
 12071   00145A                     l5309:
 12072   00145A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12073   00145E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12074   001462  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12075   001466  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12076   00146A  0E00               	movlw	0
 12077   00146C  6E2E               	movwf	___flge@ff2^0,c
 12078   00146E  0E00               	movlw	0
 12079   001470  6E2F               	movwf	(___flge@ff2+1)^0,c
 12080   001472  0EA0               	movlw	160
 12081   001474  6E30               	movwf	(___flge@ff2+2)^0,c
 12082   001476  0E41               	movlw	65
 12083   001478  6E31               	movwf	(___flge@ff2+3)^0,c
 12084   00147A  ECB8  F024         	call	___flge	;wreg free
 12085   00147E  A0D8               	btfss	status,0,c
 12086   001480  EF44  F00A         	goto	u5201
 12087   001484  EF46  F00A         	goto	u5200
 12088   001488                     u5201:
 12089   001488  EFC6  F00A         	goto	l5335
 12090   00148C                     u5200:
 12091   00148C  0E00               	movlw	0
 12092   00148E  6E2A               	movwf	___flge@ff1^0,c
 12093   001490  0E00               	movlw	0
 12094   001492  6E2B               	movwf	(___flge@ff1+1)^0,c
 12095   001494  0EE8               	movlw	232
 12096   001496  6E2C               	movwf	(___flge@ff1+2)^0,c
 12097   001498  0E41               	movlw	65
 12098   00149A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12099   00149C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12100   0014A0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12101   0014A4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12102   0014A8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12103   0014AC  ECB8  F024         	call	___flge	;wreg free
 12104   0014B0  A0D8               	btfss	status,0,c
 12105   0014B2  EF5D  F00A         	goto	u5211
 12106   0014B6  EF5F  F00A         	goto	u5210
 12107   0014BA                     u5211:
 12108   0014BA  EFC6  F00A         	goto	l5335
 12109   0014BE                     u5210:
 12110   0014BE                     
 12111                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
 12112   0014BE  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12113   0014C2  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12114   0014C6  CFDE F02A          	movff	postinc2,___flge@ff1
 12115   0014CA  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12116   0014CE  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12117   0014D2  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12118   0014D6  0ECD               	movlw	205
 12119   0014D8  6E2E               	movwf	___flge@ff2^0,c
 12120   0014DA  0ECC               	movlw	204
 12121   0014DC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12122   0014DE  0E4C               	movlw	76
 12123   0014E0  6E30               	movwf	(___flge@ff2+2)^0,c
 12124   0014E2  0E3E               	movlw	62
 12125   0014E4  6E31               	movwf	(___flge@ff2+3)^0,c
 12126   0014E6  ECB8  F024         	call	___flge	;wreg free
 12127   0014EA  A0D8               	btfss	status,0,c
 12128   0014EC  EF7A  F00A         	goto	u5221
 12129   0014F0  EF7C  F00A         	goto	u5220
 12130   0014F4                     u5221:
 12131   0014F4  EF9B  F00A         	goto	l5323
 12132   0014F8                     u5220:
 12133   0014F8  0E00               	movlw	0
 12134   0014FA  6E2A               	movwf	___flge@ff1^0,c
 12135   0014FC  0E00               	movlw	0
 12136   0014FE  6E2B               	movwf	(___flge@ff1+1)^0,c
 12137   001500  0E80               	movlw	128
 12138   001502  6E2C               	movwf	(___flge@ff1+2)^0,c
 12139   001504  0E3E               	movlw	62
 12140   001506  6E2D               	movwf	(___flge@ff1+3)^0,c
 12141   001508  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12142   00150C  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12143   001510  CFDE F02E          	movff	postinc2,___flge@ff2
 12144   001514  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12145   001518  CFDE F030          	movff	postinc2,___flge@ff2+2
 12146   00151C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12147   001520  ECB8  F024         	call	___flge	;wreg free
 12148   001524  A0D8               	btfss	status,0,c
 12149   001526  EF97  F00A         	goto	u5231
 12150   00152A  EF99  F00A         	goto	u5230
 12151   00152E                     u5231:
 12152   00152E  EF9B  F00A         	goto	l5323
 12153   001532                     u5230:
 12154   001532  EF5A  F008         	goto	l5267
 12155   001536                     l5323:
 12156   001536  EE20 F008          	lfsr	2,8
 12157   00153A  504D               	movf	Colour_decider@rel^0,w,c
 12158   00153C  26D9               	addwf	fsr2l,f,c
 12159   00153E  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12160   001540  22DA               	addwfc	fsr2h,f,c
 12161   001542  CFDE F02A          	movff	postinc2,___flge@ff1
 12162   001546  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12163   00154A  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12164   00154E  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12165   001552  0E29               	movlw	41
 12166   001554  6E2E               	movwf	___flge@ff2^0,c
 12167   001556  0E5C               	movlw	92
 12168   001558  6E2F               	movwf	(___flge@ff2+1)^0,c
 12169   00155A  0E0F               	movlw	15
 12170   00155C  6E30               	movwf	(___flge@ff2+2)^0,c
 12171   00155E  0E3E               	movlw	62
 12172   001560  6E31               	movwf	(___flge@ff2+3)^0,c
 12173   001562  ECB8  F024         	call	___flge	;wreg free
 12174   001566  A0D8               	btfss	status,0,c
 12175   001568  EFB8  F00A         	goto	u5241
 12176   00156C  EFBA  F00A         	goto	u5240
 12177   001570                     u5241:
 12178   001570  EFC0  F00A         	goto	l5331
 12179   001574                     u5240:
 12180   001574                     l5325:
 12181                           
 12182                           ;color.c: 179:             return 4;
 12183   001574  0E00               	movlw	0
 12184   001576  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12185   001578  0E04               	movlw	4
 12186   00157A  6E4B               	movwf	?_Colour_decider^0,c
 12187   00157C  EF96  F00C         	goto	l76
 12188   001580                     l5331:
 12189                           
 12190                           ;color.c: 182:             return 3;
 12191   001580  0E00               	movlw	0
 12192   001582  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12193   001584  0E03               	movlw	3
 12194   001586  6E4B               	movwf	?_Colour_decider^0,c
 12195   001588  EF96  F00C         	goto	l76
 12196   00158C                     l5335:
 12197   00158C  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12198   001590  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12199   001594  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12200   001598  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12201   00159C  0E00               	movlw	0
 12202   00159E  6E2E               	movwf	___flge@ff2^0,c
 12203   0015A0  0E00               	movlw	0
 12204   0015A2  6E2F               	movwf	(___flge@ff2+1)^0,c
 12205   0015A4  0E34               	movlw	52
 12206   0015A6  6E30               	movwf	(___flge@ff2+2)^0,c
 12207   0015A8  0E42               	movlw	66
 12208   0015AA  6E31               	movwf	(___flge@ff2+3)^0,c
 12209   0015AC  ECB8  F024         	call	___flge	;wreg free
 12210   0015B0  A0D8               	btfss	status,0,c
 12211   0015B2  EFDD  F00A         	goto	u5251
 12212   0015B6  EFDF  F00A         	goto	u5250
 12213   0015BA                     u5251:
 12214   0015BA  EF44  F00B         	goto	l5359
 12215   0015BE                     u5250:
 12216   0015BE  0E00               	movlw	0
 12217   0015C0  6E2A               	movwf	___flge@ff1^0,c
 12218   0015C2  0E00               	movlw	0
 12219   0015C4  6E2B               	movwf	(___flge@ff1+1)^0,c
 12220   0015C6  0EA0               	movlw	160
 12221   0015C8  6E2C               	movwf	(___flge@ff1+2)^0,c
 12222   0015CA  0E42               	movlw	66
 12223   0015CC  6E2D               	movwf	(___flge@ff1+3)^0,c
 12224   0015CE  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12225   0015D2  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12226   0015D6  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12227   0015DA  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12228   0015DE  ECB8  F024         	call	___flge	;wreg free
 12229   0015E2  A0D8               	btfss	status,0,c
 12230   0015E4  EFF6  F00A         	goto	u5261
 12231   0015E8  EFF8  F00A         	goto	u5260
 12232   0015EC                     u5261:
 12233   0015EC  EF44  F00B         	goto	l5359
 12234   0015F0                     u5260:
 12235   0015F0                     
 12236                           ;color.c: 188:         if(0.15<=rel->B){
 12237   0015F0  EE20 F008          	lfsr	2,8
 12238   0015F4  504D               	movf	Colour_decider@rel^0,w,c
 12239   0015F6  26D9               	addwf	fsr2l,f,c
 12240   0015F8  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12241   0015FA  22DA               	addwfc	fsr2h,f,c
 12242   0015FC  CFDE F02A          	movff	postinc2,___flge@ff1
 12243   001600  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12244   001604  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12245   001608  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12246   00160C  0E9A               	movlw	154
 12247   00160E  6E2E               	movwf	___flge@ff2^0,c
 12248   001610  0E99               	movlw	153
 12249   001612  6E2F               	movwf	(___flge@ff2+1)^0,c
 12250   001614  0E19               	movlw	25
 12251   001616  6E30               	movwf	(___flge@ff2+2)^0,c
 12252   001618  0E3E               	movlw	62
 12253   00161A  6E31               	movwf	(___flge@ff2+3)^0,c
 12254   00161C  ECB8  F024         	call	___flge	;wreg free
 12255   001620  A0D8               	btfss	status,0,c
 12256   001622  EF15  F00B         	goto	u5271
 12257   001626  EF17  F00B         	goto	u5270
 12258   00162A                     u5271:
 12259   00162A  EF19  F00B         	goto	l5347
 12260   00162E                     u5270:
 12261   00162E  EFBA  F00A         	goto	l5325
 12262   001632                     l5347:
 12263   001632  EE20 F008          	lfsr	2,8
 12264   001636  504D               	movf	Colour_decider@rel^0,w,c
 12265   001638  26D9               	addwf	fsr2l,f,c
 12266   00163A  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12267   00163C  22DA               	addwfc	fsr2h,f,c
 12268   00163E  CFDE F02A          	movff	postinc2,___flge@ff1
 12269   001642  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12270   001646  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12271   00164A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12272   00164E  0E8F               	movlw	143
 12273   001650  6E2E               	movwf	___flge@ff2^0,c
 12274   001652  0EC2               	movlw	194
 12275   001654  6E2F               	movwf	(___flge@ff2+1)^0,c
 12276   001656  0EF5               	movlw	245
 12277   001658  6E30               	movwf	(___flge@ff2+2)^0,c
 12278   00165A  0E3D               	movlw	61
 12279   00165C  6E31               	movwf	(___flge@ff2+3)^0,c
 12280   00165E  ECB8  F024         	call	___flge	;wreg free
 12281   001662  A0D8               	btfss	status,0,c
 12282   001664  EF36  F00B         	goto	u5281
 12283   001668  EF38  F00B         	goto	u5280
 12284   00166C                     u5281:
 12285   00166C  EF3E  F00B         	goto	l5355
 12286   001670                     u5280:
 12287   001670                     l5349:
 12288                           
 12289                           ;color.c: 192:             return 6;
 12290   001670  0E00               	movlw	0
 12291   001672  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12292   001674  0E06               	movlw	6
 12293   001676  6E4B               	movwf	?_Colour_decider^0,c
 12294   001678  EF96  F00C         	goto	l76
 12295   00167C                     l5355:
 12296                           
 12297                           ;color.c: 195:             return 5;
 12298   00167C  0E00               	movlw	0
 12299   00167E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12300   001680  0E05               	movlw	5
 12301   001682  6E4B               	movwf	?_Colour_decider^0,c
 12302   001684  EF96  F00C         	goto	l76
 12303   001688                     l5359:
 12304   001688  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12305   00168C  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12306   001690  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12307   001694  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12308   001698  0E00               	movlw	0
 12309   00169A  6E2E               	movwf	___flge@ff2^0,c
 12310   00169C  0E00               	movlw	0
 12311   00169E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12312   0016A0  0EA2               	movlw	162
 12313   0016A2  6E30               	movwf	(___flge@ff2+2)^0,c
 12314   0016A4  0E42               	movlw	66
 12315   0016A6  6E31               	movwf	(___flge@ff2+3)^0,c
 12316   0016A8  ECB8  F024         	call	___flge	;wreg free
 12317   0016AC  A0D8               	btfss	status,0,c
 12318   0016AE  EF5B  F00B         	goto	u5291
 12319   0016B2  EF5D  F00B         	goto	u5290
 12320   0016B6                     u5291:
 12321   0016B6  EF97  F00B         	goto	l5375
 12322   0016BA                     u5290:
 12323   0016BA  0E00               	movlw	0
 12324   0016BC  6E2A               	movwf	___flge@ff1^0,c
 12325   0016BE  0E00               	movlw	0
 12326   0016C0  6E2B               	movwf	(___flge@ff1+1)^0,c
 12327   0016C2  0EE6               	movlw	230
 12328   0016C4  6E2C               	movwf	(___flge@ff1+2)^0,c
 12329   0016C6  0E42               	movlw	66
 12330   0016C8  6E2D               	movwf	(___flge@ff1+3)^0,c
 12331   0016CA  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12332   0016CE  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12333   0016D2  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12334   0016D6  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12335   0016DA  ECB8  F024         	call	___flge	;wreg free
 12336   0016DE  A0D8               	btfss	status,0,c
 12337   0016E0  EF74  F00B         	goto	u5301
 12338   0016E4  EF76  F00B         	goto	u5300
 12339   0016E8                     u5301:
 12340   0016E8  EF97  F00B         	goto	l5375
 12341   0016EC                     u5300:
 12342   0016EC                     
 12343                           ;color.c: 201:         if(0.15<=rel->B){
 12344   0016EC  EE20 F008          	lfsr	2,8
 12345   0016F0  504D               	movf	Colour_decider@rel^0,w,c
 12346   0016F2  26D9               	addwf	fsr2l,f,c
 12347   0016F4  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12348   0016F6  22DA               	addwfc	fsr2h,f,c
 12349   0016F8  CFDE F02A          	movff	postinc2,___flge@ff1
 12350   0016FC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12351   001700  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12352   001704  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12353   001708  0E9A               	movlw	154
 12354   00170A  6E2E               	movwf	___flge@ff2^0,c
 12355   00170C  0E99               	movlw	153
 12356   00170E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12357   001710  0E19               	movlw	25
 12358   001712  6E30               	movwf	(___flge@ff2+2)^0,c
 12359   001714  0E3E               	movlw	62
 12360   001716  6E31               	movwf	(___flge@ff2+3)^0,c
 12361   001718  ECB8  F024         	call	___flge	;wreg free
 12362   00171C  A0D8               	btfss	status,0,c
 12363   00171E  EF93  F00B         	goto	u5311
 12364   001722  EF95  F00B         	goto	u5310
 12365   001726                     u5311:
 12366   001726  EF38  F00B         	goto	l5349
 12367   00172A                     u5310:
 12368   00172A  EFBA  F00A         	goto	l5325
 12369   00172E                     l5375:
 12370   00172E  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12371   001732  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12372   001736  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12373   00173A  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12374   00173E  0E00               	movlw	0
 12375   001740  6E2E               	movwf	___flge@ff2^0,c
 12376   001742  0E00               	movlw	0
 12377   001744  6E2F               	movwf	(___flge@ff2+1)^0,c
 12378   001746  0EF0               	movlw	240
 12379   001748  6E30               	movwf	(___flge@ff2+2)^0,c
 12380   00174A  0E41               	movlw	65
 12381   00174C  6E31               	movwf	(___flge@ff2+3)^0,c
 12382   00174E  ECB8  F024         	call	___flge	;wreg free
 12383   001752  A0D8               	btfss	status,0,c
 12384   001754  EFAE  F00B         	goto	u5321
 12385   001758  EFB0  F00B         	goto	u5320
 12386   00175C                     u5321:
 12387   00175C  EFC9  F00B         	goto	l5379
 12388   001760                     u5320:
 12389   001760  0E00               	movlw	0
 12390   001762  6E2A               	movwf	___flge@ff1^0,c
 12391   001764  0E00               	movlw	0
 12392   001766  6E2B               	movwf	(___flge@ff1+1)^0,c
 12393   001768  0E68               	movlw	104
 12394   00176A  6E2C               	movwf	(___flge@ff1+2)^0,c
 12395   00176C  0E42               	movlw	66
 12396   00176E  6E2D               	movwf	(___flge@ff1+3)^0,c
 12397   001770  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12398   001774  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12399   001778  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12400   00177C  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12401   001780  ECB8  F024         	call	___flge	;wreg free
 12402   001784  B0D8               	btfsc	status,0,c
 12403   001786  EFC7  F00B         	goto	u5331
 12404   00178A  EFC9  F00B         	goto	u5330
 12405   00178E                     u5331:
 12406   00178E  EFBA  F00A         	goto	l5325
 12407   001792                     u5330:
 12408   001792                     l5379:
 12409   001792  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12410   001796  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12411   00179A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12412   00179E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12413   0017A2  0E00               	movlw	0
 12414   0017A4  6E2E               	movwf	___flge@ff2^0,c
 12415   0017A6  0E00               	movlw	0
 12416   0017A8  6E2F               	movwf	(___flge@ff2+1)^0,c
 12417   0017AA  0EF0               	movlw	240
 12418   0017AC  6E30               	movwf	(___flge@ff2+2)^0,c
 12419   0017AE  0E42               	movlw	66
 12420   0017B0  6E31               	movwf	(___flge@ff2+3)^0,c
 12421   0017B2  ECB8  F024         	call	___flge	;wreg free
 12422   0017B6  A0D8               	btfss	status,0,c
 12423   0017B8  EFE0  F00B         	goto	u5341
 12424   0017BC  EFE2  F00B         	goto	u5340
 12425   0017C0                     u5341:
 12426   0017C0  EFFD  F00B         	goto	l5389
 12427   0017C4                     u5340:
 12428   0017C4  0E00               	movlw	0
 12429   0017C6  6E2A               	movwf	___flge@ff1^0,c
 12430   0017C8  0E00               	movlw	0
 12431   0017CA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12432   0017CC  0E5C               	movlw	92
 12433   0017CE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12434   0017D0  0E43               	movlw	67
 12435   0017D2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12436   0017D4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12437   0017D8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12438   0017DC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12439   0017E0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12440   0017E4  ECB8  F024         	call	___flge	;wreg free
 12441   0017E8  A0D8               	btfss	status,0,c
 12442   0017EA  EFF9  F00B         	goto	u5351
 12443   0017EE  EFFB  F00B         	goto	u5350
 12444   0017F2                     u5351:
 12445   0017F2  EFFD  F00B         	goto	l5389
 12446   0017F6                     u5350:
 12447   0017F6  EFBA  F00A         	goto	l5325
 12448   0017FA                     l5389:
 12449   0017FA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12450   0017FE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12451   001802  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12452   001806  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12453   00180A  0E00               	movlw	0
 12454   00180C  6E2E               	movwf	___flge@ff2^0,c
 12455   00180E  0E00               	movlw	0
 12456   001810  6E2F               	movwf	(___flge@ff2+1)^0,c
 12457   001812  0E60               	movlw	96
 12458   001814  6E30               	movwf	(___flge@ff2+2)^0,c
 12459   001816  0E41               	movlw	65
 12460   001818  6E31               	movwf	(___flge@ff2+3)^0,c
 12461   00181A  ECB8  F024         	call	___flge	;wreg free
 12462   00181E  A0D8               	btfss	status,0,c
 12463   001820  EF14  F00C         	goto	u5361
 12464   001824  EF16  F00C         	goto	u5360
 12465   001828                     u5361:
 12466   001828  EF92  F00C         	goto	l5415
 12467   00182C                     u5360:
 12468   00182C  0E00               	movlw	0
 12469   00182E  6E2A               	movwf	___flge@ff1^0,c
 12470   001830  0E00               	movlw	0
 12471   001832  6E2B               	movwf	(___flge@ff1+1)^0,c
 12472   001834  0E98               	movlw	152
 12473   001836  6E2C               	movwf	(___flge@ff1+2)^0,c
 12474   001838  0E41               	movlw	65
 12475   00183A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12476   00183C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12477   001840  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12478   001844  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12479   001848  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12480   00184C  ECB8  F024         	call	___flge	;wreg free
 12481   001850  A0D8               	btfss	status,0,c
 12482   001852  EF2D  F00C         	goto	u5371
 12483   001856  EF2F  F00C         	goto	u5370
 12484   00185A                     u5371:
 12485   00185A  EF92  F00C         	goto	l5415
 12486   00185E                     u5370:
 12487   00185E                     
 12488                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 12489   00185E  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12490   001862  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12491   001866  CFDE F02A          	movff	postinc2,___flge@ff1
 12492   00186A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12493   00186E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12494   001872  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12495   001876  0ECD               	movlw	205
 12496   001878  6E2E               	movwf	___flge@ff2^0,c
 12497   00187A  0ECC               	movlw	204
 12498   00187C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12499   00187E  0E4C               	movlw	76
 12500   001880  6E30               	movwf	(___flge@ff2+2)^0,c
 12501   001882  0E3E               	movlw	62
 12502   001884  6E31               	movwf	(___flge@ff2+3)^0,c
 12503   001886  ECB8  F024         	call	___flge	;wreg free
 12504   00188A  A0D8               	btfss	status,0,c
 12505   00188C  EF4A  F00C         	goto	u5381
 12506   001890  EF4C  F00C         	goto	u5380
 12507   001894                     u5381:
 12508   001894  EF6B  F00C         	goto	l5403
 12509   001898                     u5380:
 12510   001898  0E1F               	movlw	31
 12511   00189A  6E2A               	movwf	___flge@ff1^0,c
 12512   00189C  0E85               	movlw	133
 12513   00189E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12514   0018A0  0E6B               	movlw	107
 12515   0018A2  6E2C               	movwf	(___flge@ff1+2)^0,c
 12516   0018A4  0E3E               	movlw	62
 12517   0018A6  6E2D               	movwf	(___flge@ff1+3)^0,c
 12518   0018A8  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12519   0018AC  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12520   0018B0  CFDE F02E          	movff	postinc2,___flge@ff2
 12521   0018B4  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12522   0018B8  CFDE F030          	movff	postinc2,___flge@ff2+2
 12523   0018BC  CFDE F031          	movff	postinc2,___flge@ff2+3
 12524   0018C0  ECB8  F024         	call	___flge	;wreg free
 12525   0018C4  A0D8               	btfss	status,0,c
 12526   0018C6  EF67  F00C         	goto	u5391
 12527   0018CA  EF69  F00C         	goto	u5390
 12528   0018CE                     u5391:
 12529   0018CE  EF6B  F00C         	goto	l5403
 12530   0018D2                     u5390:
 12531   0018D2  EF5A  F008         	goto	l5267
 12532   0018D6                     l5403:
 12533   0018D6  EE20 F008          	lfsr	2,8
 12534   0018DA  504D               	movf	Colour_decider@rel^0,w,c
 12535   0018DC  26D9               	addwf	fsr2l,f,c
 12536   0018DE  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12537   0018E0  22DA               	addwfc	fsr2h,f,c
 12538   0018E2  CFDE F02A          	movff	postinc2,___flge@ff1
 12539   0018E6  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12540   0018EA  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12541   0018EE  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12542   0018F2  0E9A               	movlw	154
 12543   0018F4  6E2E               	movwf	___flge@ff2^0,c
 12544   0018F6  0E99               	movlw	153
 12545   0018F8  6E2F               	movwf	(___flge@ff2+1)^0,c
 12546   0018FA  0E19               	movlw	25
 12547   0018FC  6E30               	movwf	(___flge@ff2+2)^0,c
 12548   0018FE  0E3E               	movlw	62
 12549   001900  6E31               	movwf	(___flge@ff2+3)^0,c
 12550   001902  ECB8  F024         	call	___flge	;wreg free
 12551   001906  A0D8               	btfss	status,0,c
 12552   001908  EF88  F00C         	goto	u5401
 12553   00190C  EF8A  F00C         	goto	u5400
 12554   001910                     u5401:
 12555   001910  EF8C  F00C         	goto	l5411
 12556   001914                     u5400:
 12557   001914  EFBA  F00A         	goto	l5325
 12558   001918                     l5411:
 12559                           
 12560                           ;color.c: 223:             return 7;
 12561   001918  0E00               	movlw	0
 12562   00191A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12563   00191C  0E07               	movlw	7
 12564   00191E  6E4B               	movwf	?_Colour_decider^0,c
 12565   001920  EF96  F00C         	goto	l76
 12566   001924                     l5415:
 12567                           
 12568                           ;color.c: 227:         return 10;
 12569   001924  0E00               	movlw	0
 12570   001926  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12571   001928  0E0A               	movlw	10
 12572   00192A  6E4B               	movwf	?_Colour_decider^0,c
 12573   00192C                     l76:
 12574   00192C  0012               	return		;funcret
 12575   00192E                     __end_of_Colour_decider:
 12576                           	callstack 0
 12577                           
 12578 ;; *************** function ___xxtofl *****************
 12579 ;; Defined at:
 12580 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 12581 ;; Parameters:    Size  Location     Type
 12582 ;;  sign            1    wreg     unsigned char 
 12583 ;;  val             4    0[COMRAM] long 
 12584 ;; Auto vars:     Size  Location     Type
 12585 ;;  sign            1    8[COMRAM] unsigned char 
 12586 ;;  arg             4   10[COMRAM] unsigned long 
 12587 ;;  exp             1    9[COMRAM] unsigned char 
 12588 ;; Return value:  Size  Location     Type
 12589 ;;                  4    0[COMRAM] unsigned char 
 12590 ;; Registers used:
 12591 ;;		wreg, status,2, status,0
 12592 ;; Tracked objects:
 12593 ;;		On entry : 0/0
 12594 ;;		On exit  : 0/0
 12595 ;;		Unchanged: 0/0
 12596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12597 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12598 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12599 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12600 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12601 ;;Total ram usage:       14 bytes
 12602 ;; Hardware stack levels used: 1
 12603 ;; Hardware stack levels required when called: 1
 12604 ;; This function calls:
 12605 ;;		Nothing
 12606 ;; This function is called by:
 12607 ;;		_colour_rel
 12608 ;;		_Colour_decider
 12609 ;;		_turnRight45
 12610 ;;		_turnLeft45
 12611 ;;		_reverseOneBlock
 12612 ;;		_ForwardOneBlock
 12613 ;;		_Forwardhalfblock
 12614 ;;		_Backhalfblock
 12615 ;; This function uses a non-reentrant model
 12616 ;;
 12617                           
 12618                           	psect	text71
 12619   00425E                     __ptext71:
 12620                           	callstack 0
 12621   00425E                     ___xxtofl:
 12622                           	callstack 28
 12623                           
 12624                           ;incstack = 0
 12625                           ;___xxtofl@sign stored from wreg
 12626   00425E  6E09               	movwf	___xxtofl@sign^0,c
 12627   004260  5009               	movf	___xxtofl@sign^0,w,c
 12628   004262  B4D8               	btfsc	status,2,c
 12629   004264  EF36  F021         	goto	u4971
 12630   004268  EF38  F021         	goto	u4970
 12631   00426C                     u4971:
 12632   00426C  EF5A  F021         	goto	l1333
 12633   004270                     u4970:
 12634   004270  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12635   004272  EF3F  F021         	goto	u4980
 12636   004276  EF3D  F021         	goto	u4981
 12637   00427A                     u4981:
 12638   00427A  EF5A  F021         	goto	l1333
 12639   00427E                     u4980:
 12640   00427E  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12641   004282  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12642   004286  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12643   00428A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12644   00428E  1E05               	comf	??___xxtofl^0,f,c
 12645   004290  1E06               	comf	(??___xxtofl+1)^0,f,c
 12646   004292  1E07               	comf	(??___xxtofl+2)^0,f,c
 12647   004294  1E08               	comf	(??___xxtofl+3)^0,f,c
 12648   004296  2A05               	incf	??___xxtofl^0,f,c
 12649   004298  0E00               	movlw	0
 12650   00429A  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12651   00429C  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12652   00429E  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12653   0042A0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12654   0042A4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12655   0042A8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12656   0042AC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12657   0042B0  EF62  F021         	goto	l5137
 12658   0042B4                     l1333:
 12659   0042B4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12660   0042B8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12661   0042BC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12662   0042C0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12663   0042C4                     l5137:
 12664   0042C4  5001               	movf	___xxtofl@val^0,w,c
 12665   0042C6  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12666   0042C8  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12667   0042CA  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12668   0042CC  A4D8               	btfss	status,2,c
 12669   0042CE  EF6B  F021         	goto	u4991
 12670   0042D2  EF6D  F021         	goto	u4990
 12671   0042D6                     u4991:
 12672   0042D6  EF77  F021         	goto	l5143
 12673   0042DA                     u4990:
 12674   0042DA  0E00               	movlw	0
 12675   0042DC  6E01               	movwf	?___xxtofl^0,c
 12676   0042DE  0E00               	movlw	0
 12677   0042E0  6E02               	movwf	(?___xxtofl+1)^0,c
 12678   0042E2  0E00               	movlw	0
 12679   0042E4  6E03               	movwf	(?___xxtofl+2)^0,c
 12680   0042E6  0E00               	movlw	0
 12681   0042E8  6E04               	movwf	(?___xxtofl+3)^0,c
 12682   0042EA  EF08  F022         	goto	l1336
 12683   0042EE                     l5143:
 12684   0042EE  0E96               	movlw	150
 12685   0042F0  6E0A               	movwf	___xxtofl@exp^0,c
 12686   0042F2  EF81  F021         	goto	l5147
 12687   0042F6                     l5145:
 12688   0042F6  2A0A               	incf	___xxtofl@exp^0,f,c
 12689   0042F8  90D8               	bcf	status,0,c
 12690   0042FA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12691   0042FC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12692   0042FE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12693   004300  320B               	rrcf	___xxtofl@arg^0,f,c
 12694   004302                     l5147:
 12695   004302  0E00               	movlw	0
 12696   004304  140B               	andwf	___xxtofl@arg^0,w,c
 12697   004306  6E05               	movwf	??___xxtofl^0,c
 12698   004308  0E00               	movlw	0
 12699   00430A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12700   00430C  6E06               	movwf	(??___xxtofl+1)^0,c
 12701   00430E  0E00               	movlw	0
 12702   004310  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12703   004312  6E07               	movwf	(??___xxtofl+2)^0,c
 12704   004314  0EFE               	movlw	254
 12705   004316  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12706   004318  6E08               	movwf	(??___xxtofl+3)^0,c
 12707   00431A  5005               	movf	??___xxtofl^0,w,c
 12708   00431C  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12709   00431E  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12710   004320  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12711   004322  A4D8               	btfss	status,2,c
 12712   004324  EF96  F021         	goto	u5001
 12713   004328  EF98  F021         	goto	u5000
 12714   00432C                     u5001:
 12715   00432C  EF7B  F021         	goto	l5145
 12716   004330                     u5000:
 12717   004330  EFA6  F021         	goto	l1340
 12718   004334                     l5149:
 12719   004334  2A0A               	incf	___xxtofl@exp^0,f,c
 12720   004336  0E01               	movlw	1
 12721   004338  260B               	addwf	___xxtofl@arg^0,f,c
 12722   00433A  0E00               	movlw	0
 12723   00433C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12724   00433E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12725   004340  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12726   004342  90D8               	bcf	status,0,c
 12727   004344  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12728   004346  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12729   004348  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12730   00434A  320B               	rrcf	___xxtofl@arg^0,f,c
 12731   00434C                     l1340:
 12732   00434C  0E00               	movlw	0
 12733   00434E  140B               	andwf	___xxtofl@arg^0,w,c
 12734   004350  6E05               	movwf	??___xxtofl^0,c
 12735   004352  0E00               	movlw	0
 12736   004354  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12737   004356  6E06               	movwf	(??___xxtofl+1)^0,c
 12738   004358  0E00               	movlw	0
 12739   00435A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12740   00435C  6E07               	movwf	(??___xxtofl+2)^0,c
 12741   00435E  0EFF               	movlw	255
 12742   004360  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12743   004362  6E08               	movwf	(??___xxtofl+3)^0,c
 12744   004364  5005               	movf	??___xxtofl^0,w,c
 12745   004366  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12746   004368  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12747   00436A  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12748   00436C  A4D8               	btfss	status,2,c
 12749   00436E  EFBB  F021         	goto	u5011
 12750   004372  EFBD  F021         	goto	u5010
 12751   004376                     u5011:
 12752   004376  EF9A  F021         	goto	l5149
 12753   00437A                     u5010:
 12754   00437A  EFC5  F021         	goto	l5157
 12755   00437E                     l5155:
 12756   00437E  060A               	decf	___xxtofl@exp^0,f,c
 12757   004380  90D8               	bcf	status,0,c
 12758   004382  360B               	rlcf	___xxtofl@arg^0,f,c
 12759   004384  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12760   004386  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12761   004388  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12762   00438A                     l5157:
 12763   00438A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12764   00438C  EFCA  F021         	goto	u5021
 12765   004390  EFCC  F021         	goto	u5020
 12766   004394                     u5021:
 12767   004394  EFD4  F021         	goto	l1347
 12768   004398                     u5020:
 12769   004398  0E02               	movlw	2
 12770   00439A  600A               	cpfslt	___xxtofl@exp^0,c
 12771   00439C  EFD2  F021         	goto	u5031
 12772   0043A0  EFD4  F021         	goto	u5030
 12773   0043A4                     u5031:
 12774   0043A4  EFBF  F021         	goto	l5155
 12775   0043A8                     u5030:
 12776   0043A8                     l1347:
 12777   0043A8  B00A               	btfsc	___xxtofl@exp^0,0,c
 12778   0043AA  EFD9  F021         	goto	u5041
 12779   0043AE  EFDB  F021         	goto	u5040
 12780   0043B2                     u5041:
 12781   0043B2  EFDC  F021         	goto	l5163
 12782   0043B6                     u5040:
 12783   0043B6  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12784   0043B8                     l5163:
 12785   0043B8  90D8               	bcf	status,0,c
 12786   0043BA  320A               	rrcf	___xxtofl@exp^0,f,c
 12787   0043BC  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12788   0043C0  6A06               	clrf	(??___xxtofl+1)^0,c
 12789   0043C2  6A07               	clrf	(??___xxtofl+2)^0,c
 12790   0043C4  6A08               	clrf	(??___xxtofl+3)^0,c
 12791   0043C6  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12792   0043CA  6A07               	clrf	(??___xxtofl+2)^0,c
 12793   0043CC  6A06               	clrf	(??___xxtofl+1)^0,c
 12794   0043CE  6A05               	clrf	??___xxtofl^0,c
 12795   0043D0  5005               	movf	??___xxtofl^0,w,c
 12796   0043D2  120B               	iorwf	___xxtofl@arg^0,f,c
 12797   0043D4  5006               	movf	(??___xxtofl+1)^0,w,c
 12798   0043D6  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12799   0043D8  5007               	movf	(??___xxtofl+2)^0,w,c
 12800   0043DA  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12801   0043DC  5008               	movf	(??___xxtofl+3)^0,w,c
 12802   0043DE  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12803   0043E0  5009               	movf	___xxtofl@sign^0,w,c
 12804   0043E2  B4D8               	btfsc	status,2,c
 12805   0043E4  EFF6  F021         	goto	u5051
 12806   0043E8  EFF8  F021         	goto	u5050
 12807   0043EC                     u5051:
 12808   0043EC  EF00  F022         	goto	l5173
 12809   0043F0                     u5050:
 12810   0043F0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12811   0043F2  EFFF  F021         	goto	u5060
 12812   0043F6  EFFD  F021         	goto	u5061
 12813   0043FA                     u5061:
 12814   0043FA  EF00  F022         	goto	l5173
 12815   0043FE                     u5060:
 12816   0043FE  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12817   004400                     l5173:
 12818   004400  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12819   004404  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12820   004408  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12821   00440C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12822   004410                     l1336:
 12823   004410  0012               	return		;funcret
 12824   004412                     __end_of___xxtofl:
 12825                           	callstack 0
 12826                           
 12827 ;; *************** function ___flsub *****************
 12828 ;; Defined at:
 12829 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 12830 ;; Parameters:    Size  Location     Type
 12831 ;;  b               4   41[COMRAM] unsigned char 
 12832 ;;  a               4   45[COMRAM] unsigned char 
 12833 ;; Auto vars:     Size  Location     Type
 12834 ;;		None
 12835 ;; Return value:  Size  Location     Type
 12836 ;;                  4   41[COMRAM] unsigned char 
 12837 ;; Registers used:
 12838 ;;		wreg, status,2, status,0, cstack
 12839 ;; Tracked objects:
 12840 ;;		On entry : 0/0
 12841 ;;		On exit  : 0/0
 12842 ;;		Unchanged: 0/0
 12843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12844 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12847 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12848 ;;Total ram usage:        8 bytes
 12849 ;; Hardware stack levels used: 1
 12850 ;; Hardware stack levels required when called: 2
 12851 ;; This function calls:
 12852 ;;		___fladd
 12853 ;; This function is called by:
 12854 ;;		_Colour_decider
 12855 ;;		_efgtoa
 12856 ;; This function uses a non-reentrant model
 12857 ;;
 12858                           
 12859                           	psect	text72
 12860   005B24                     __ptext72:
 12861                           	callstack 0
 12862   005B24                     ___flsub:
 12863                           	callstack 24
 12864   005B24  0E00               	movlw	0
 12865   005B26  1A2E               	xorwf	___flsub@a^0,f,c
 12866   005B28  0E00               	movlw	0
 12867   005B2A  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 12868   005B2C  0E00               	movlw	0
 12869   005B2E  1A30               	xorwf	(___flsub@a+2)^0,f,c
 12870   005B30  0E80               	movlw	128
 12871   005B32  1A31               	xorwf	(___flsub@a+3)^0,f,c
 12872   005B34  C02A  F001         	movff	___flsub@b,___fladd@b
 12873   005B38  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 12874   005B3C  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 12875   005B40  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 12876   005B44  C02E  F005         	movff	___flsub@a,___fladd@a
 12877   005B48  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 12878   005B4C  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 12879   005B50  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 12880   005B54  EC35  F014         	call	___fladd	;wreg free
 12881   005B58  C001  F02A         	movff	?___fladd,?___flsub
 12882   005B5C  C002  F02B         	movff	?___fladd+1,?___flsub+1
 12883   005B60  C003  F02C         	movff	?___fladd+2,?___flsub+2
 12884   005B64  C004  F02D         	movff	?___fladd+3,?___flsub+3
 12885   005B68  0012               	return		;funcret
 12886   005B6A                     __end_of___flsub:
 12887                           	callstack 0
 12888                           
 12889 ;; *************** function ___fladd *****************
 12890 ;; Defined at:
 12891 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 12892 ;; Parameters:    Size  Location     Type
 12893 ;;  b               4    0[COMRAM] unsigned char 
 12894 ;;  a               4    4[COMRAM] unsigned char 
 12895 ;; Auto vars:     Size  Location     Type
 12896 ;;  grs             1   15[COMRAM] unsigned char 
 12897 ;;  bexp            1   14[COMRAM] unsigned char 
 12898 ;;  aexp            1   13[COMRAM] unsigned char 
 12899 ;;  signs           1   12[COMRAM] unsigned char 
 12900 ;; Return value:  Size  Location     Type
 12901 ;;                  4    0[COMRAM] unsigned char 
 12902 ;; Registers used:
 12903 ;;		wreg, status,2, status,0
 12904 ;; Tracked objects:
 12905 ;;		On entry : 0/0
 12906 ;;		On exit  : 0/0
 12907 ;;		Unchanged: 0/0
 12908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12909 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12910 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12911 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12912 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12913 ;;Total ram usage:       16 bytes
 12914 ;; Hardware stack levels used: 1
 12915 ;; Hardware stack levels required when called: 1
 12916 ;; This function calls:
 12917 ;;		Nothing
 12918 ;; This function is called by:
 12919 ;;		_colour_rel
 12920 ;;		_Colour_decider
 12921 ;;		___flsub
 12922 ;;		_efgtoa
 12923 ;; This function uses a non-reentrant model
 12924 ;;
 12925                           
 12926                           	psect	text73
 12927   00286A                     __ptext73:
 12928                           	callstack 0
 12929   00286A                     ___fladd:
 12930                           	callstack 24
 12931   00286A  5004               	movf	(___fladd@b+3)^0,w,c
 12932   00286C  0B80               	andlw	128
 12933   00286E  6E0D               	movwf	___fladd@signs^0,c
 12934   002870  5004               	movf	(___fladd@b+3)^0,w,c
 12935   002872  2404               	addwf	(___fladd@b+3)^0,w,c
 12936   002874  6E0F               	movwf	___fladd@bexp^0,c
 12937   002876  AE03               	btfss	(___fladd@b+2)^0,7,c
 12938   002878  EF40  F014         	goto	u2941
 12939   00287C  EF42  F014         	goto	u2940
 12940   002880                     u2941:
 12941   002880  EF43  F014         	goto	l3777
 12942   002884                     u2940:
 12943   002884  800F               	bsf	___fladd@bexp^0,0,c
 12944   002886                     l3777:
 12945   002886  500F               	movf	___fladd@bexp^0,w,c
 12946   002888  B4D8               	btfsc	status,2,c
 12947   00288A  EF49  F014         	goto	u2951
 12948   00288E  EF4B  F014         	goto	u2950
 12949   002892                     u2951:
 12950   002892  EF60  F014         	goto	l3787
 12951   002896                     u2950:
 12952   002896  280F               	incf	___fladd@bexp^0,w,c
 12953   002898  A4D8               	btfss	status,2,c
 12954   00289A  EF51  F014         	goto	u2961
 12955   00289E  EF53  F014         	goto	u2960
 12956   0028A2                     u2961:
 12957   0028A2  EF5B  F014         	goto	l3783
 12958   0028A6                     u2960:
 12959   0028A6  0E00               	movlw	0
 12960   0028A8  6E01               	movwf	___fladd@b^0,c
 12961   0028AA  0E00               	movlw	0
 12962   0028AC  6E02               	movwf	(___fladd@b+1)^0,c
 12963   0028AE  0E00               	movlw	0
 12964   0028B0  6E03               	movwf	(___fladd@b+2)^0,c
 12965   0028B2  0E00               	movlw	0
 12966   0028B4  6E04               	movwf	(___fladd@b+3)^0,c
 12967   0028B6                     l3783:
 12968   0028B6  8E03               	bsf	(___fladd@b+2)^0,7,c
 12969   0028B8  0E00               	movlw	0
 12970   0028BA  6E04               	movwf	(___fladd@b+3)^0,c
 12971   0028BC  EF68  F014         	goto	l3789
 12972   0028C0                     l3787:
 12973   0028C0  0E00               	movlw	0
 12974   0028C2  6E01               	movwf	___fladd@b^0,c
 12975   0028C4  0E00               	movlw	0
 12976   0028C6  6E02               	movwf	(___fladd@b+1)^0,c
 12977   0028C8  0E00               	movlw	0
 12978   0028CA  6E03               	movwf	(___fladd@b+2)^0,c
 12979   0028CC  0E00               	movlw	0
 12980   0028CE  6E04               	movwf	(___fladd@b+3)^0,c
 12981   0028D0                     l3789:
 12982   0028D0  5008               	movf	(___fladd@a+3)^0,w,c
 12983   0028D2  0B80               	andlw	128
 12984   0028D4  6E0E               	movwf	___fladd@aexp^0,c
 12985   0028D6  500D               	movf	___fladd@signs^0,w,c
 12986   0028D8  180E               	xorwf	___fladd@aexp^0,w,c
 12987   0028DA  B4D8               	btfsc	status,2,c
 12988   0028DC  EF72  F014         	goto	u2971
 12989   0028E0  EF74  F014         	goto	u2970
 12990   0028E4                     u2971:
 12991   0028E4  EF75  F014         	goto	l3795
 12992   0028E8                     u2970:
 12993   0028E8  8C0D               	bsf	___fladd@signs^0,6,c
 12994   0028EA                     l3795:
 12995   0028EA  5008               	movf	(___fladd@a+3)^0,w,c
 12996   0028EC  2408               	addwf	(___fladd@a+3)^0,w,c
 12997   0028EE  6E0E               	movwf	___fladd@aexp^0,c
 12998   0028F0  AE07               	btfss	(___fladd@a+2)^0,7,c
 12999   0028F2  EF7D  F014         	goto	u2981
 13000   0028F6  EF7F  F014         	goto	u2980
 13001   0028FA                     u2981:
 13002   0028FA  EF80  F014         	goto	l3801
 13003   0028FE                     u2980:
 13004   0028FE  800E               	bsf	___fladd@aexp^0,0,c
 13005   002900                     l3801:
 13006   002900  500E               	movf	___fladd@aexp^0,w,c
 13007   002902  B4D8               	btfsc	status,2,c
 13008   002904  EF86  F014         	goto	u2991
 13009   002908  EF88  F014         	goto	u2990
 13010   00290C                     u2991:
 13011   00290C  EF9D  F014         	goto	l3811
 13012   002910                     u2990:
 13013   002910  280E               	incf	___fladd@aexp^0,w,c
 13014   002912  A4D8               	btfss	status,2,c
 13015   002914  EF8E  F014         	goto	u3001
 13016   002918  EF90  F014         	goto	u3000
 13017   00291C                     u3001:
 13018   00291C  EF98  F014         	goto	l3807
 13019   002920                     u3000:
 13020   002920  0E00               	movlw	0
 13021   002922  6E05               	movwf	___fladd@a^0,c
 13022   002924  0E00               	movlw	0
 13023   002926  6E06               	movwf	(___fladd@a+1)^0,c
 13024   002928  0E00               	movlw	0
 13025   00292A  6E07               	movwf	(___fladd@a+2)^0,c
 13026   00292C  0E00               	movlw	0
 13027   00292E  6E08               	movwf	(___fladd@a+3)^0,c
 13028   002930                     l3807:
 13029   002930  8E07               	bsf	(___fladd@a+2)^0,7,c
 13030   002932  0E00               	movlw	0
 13031   002934  6E08               	movwf	(___fladd@a+3)^0,c
 13032   002936  EFA5  F014         	goto	l3813
 13033   00293A                     l3811:
 13034   00293A  0E00               	movlw	0
 13035   00293C  6E05               	movwf	___fladd@a^0,c
 13036   00293E  0E00               	movlw	0
 13037   002940  6E06               	movwf	(___fladd@a+1)^0,c
 13038   002942  0E00               	movlw	0
 13039   002944  6E07               	movwf	(___fladd@a+2)^0,c
 13040   002946  0E00               	movlw	0
 13041   002948  6E08               	movwf	(___fladd@a+3)^0,c
 13042   00294A                     l3813:
 13043   00294A  500F               	movf	___fladd@bexp^0,w,c
 13044   00294C  5C0E               	subwf	___fladd@aexp^0,w,c
 13045   00294E  B0D8               	btfsc	status,0,c
 13046   002950  EFAC  F014         	goto	u3011
 13047   002954  EFAE  F014         	goto	u3010
 13048   002958                     u3011:
 13049   002958  EFD5  F014         	goto	l3849
 13050   00295C                     u3010:
 13051   00295C  AC0D               	btfss	___fladd@signs^0,6,c
 13052   00295E  EFB3  F014         	goto	u3021
 13053   002962  EFB5  F014         	goto	u3020
 13054   002966                     u3021:
 13055   002966  EFB7  F014         	goto	l3819
 13056   00296A                     u3020:
 13057   00296A  0E80               	movlw	128
 13058   00296C  1A0D               	xorwf	___fladd@signs^0,f,c
 13059   00296E                     l3819:
 13060   00296E  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13061   002972  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13062   002976  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13063   00297A  C001  F010         	movff	___fladd@b,___fladd@grs
 13064   00297E  C005  F001         	movff	___fladd@a,___fladd@b
 13065   002982  C010  F005         	movff	___fladd@grs,___fladd@a
 13066   002986  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13067   00298A  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13068   00298E  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13069   002992  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13070   002996  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13071   00299A  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13072   00299E  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13073   0029A2  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13074   0029A6  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13075   0029AA                     l3849:
 13076   0029AA  0E00               	movlw	0
 13077   0029AC  6E10               	movwf	___fladd@grs^0,c
 13078   0029AE  500F               	movf	___fladd@bexp^0,w,c
 13079   0029B0  C00E  F009         	movff	___fladd@aexp,??___fladd
 13080   0029B4  6A0A               	clrf	(??___fladd+1)^0,c
 13081   0029B6  5E09               	subwf	??___fladd^0,f,c
 13082   0029B8  0E00               	movlw	0
 13083   0029BA  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13084   0029BC  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13085   0029BE  EFEA  F014         	goto	u3031
 13086   0029C2  500A               	movf	(??___fladd+1)^0,w,c
 13087   0029C4  E109               	bnz	u3030
 13088   0029C6  0E1A               	movlw	26
 13089   0029C8  5C09               	subwf	??___fladd^0,w,c
 13090   0029CA  A0D8               	btfss	status,0,c
 13091   0029CC  EFEA  F014         	goto	u3031
 13092   0029D0  EFEC  F014         	goto	u3030
 13093   0029D4                     u3031:
 13094   0029D4  EF23  F015         	goto	l1207
 13095   0029D8                     u3030:
 13096   0029D8  5001               	movf	___fladd@b^0,w,c
 13097   0029DA  1002               	iorwf	(___fladd@b+1)^0,w,c
 13098   0029DC  1003               	iorwf	(___fladd@b+2)^0,w,c
 13099   0029DE  1004               	iorwf	(___fladd@b+3)^0,w,c
 13100   0029E0  A4D8               	btfss	status,2,c
 13101   0029E2  EFF5  F014         	goto	u3041
 13102   0029E6  EFF8  F014         	goto	u3040
 13103   0029EA                     u3041:
 13104   0029EA  0E01               	movlw	1
 13105   0029EC  EFF9  F014         	goto	u3050
 13106   0029F0                     u3040:
 13107   0029F0  0E00               	movlw	0
 13108   0029F2                     u3050:
 13109   0029F2  6E10               	movwf	___fladd@grs^0,c
 13110   0029F4  0E00               	movlw	0
 13111   0029F6  6E01               	movwf	___fladd@b^0,c
 13112   0029F8  0E00               	movlw	0
 13113   0029FA  6E02               	movwf	(___fladd@b+1)^0,c
 13114   0029FC  0E00               	movlw	0
 13115   0029FE  6E03               	movwf	(___fladd@b+2)^0,c
 13116   002A00  0E00               	movlw	0
 13117   002A02  6E04               	movwf	(___fladd@b+3)^0,c
 13118   002A04  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13119   002A08  EF2C  F015         	goto	l1206
 13120   002A0C                     l1208:
 13121   002A0C  A010               	btfss	___fladd@grs^0,0,c
 13122   002A0E  EF0B  F015         	goto	u3061
 13123   002A12  EF0D  F015         	goto	u3060
 13124   002A16                     u3061:
 13125   002A16  EF13  F015         	goto	l3861
 13126   002A1A                     u3060:
 13127   002A1A  90D8               	bcf	status,0,c
 13128   002A1C  3010               	rrcf	___fladd@grs^0,w,c
 13129   002A1E  0901               	iorlw	1
 13130   002A20  6E10               	movwf	___fladd@grs^0,c
 13131   002A22  EF15  F015         	goto	l3863
 13132   002A26                     l3861:
 13133   002A26  90D8               	bcf	status,0,c
 13134   002A28  3210               	rrcf	___fladd@grs^0,f,c
 13135   002A2A                     l3863:
 13136   002A2A  A001               	btfss	___fladd@b^0,0,c
 13137   002A2C  EF1A  F015         	goto	u3071
 13138   002A30  EF1C  F015         	goto	u3070
 13139   002A34                     u3071:
 13140   002A34  EF1D  F015         	goto	l3867
 13141   002A38                     u3070:
 13142   002A38  8E10               	bsf	___fladd@grs^0,7,c
 13143   002A3A                     l3867:
 13144   002A3A  3404               	rlcf	(___fladd@b+3)^0,w,c
 13145   002A3C  3204               	rrcf	(___fladd@b+3)^0,f,c
 13146   002A3E  3203               	rrcf	(___fladd@b+2)^0,f,c
 13147   002A40  3202               	rrcf	(___fladd@b+1)^0,f,c
 13148   002A42  3201               	rrcf	___fladd@b^0,f,c
 13149   002A44  2A0F               	incf	___fladd@bexp^0,f,c
 13150   002A46                     l1207:
 13151   002A46  500E               	movf	___fladd@aexp^0,w,c
 13152   002A48  5C0F               	subwf	___fladd@bexp^0,w,c
 13153   002A4A  A0D8               	btfss	status,0,c
 13154   002A4C  EF2A  F015         	goto	u3081
 13155   002A50  EF2C  F015         	goto	u3080
 13156   002A54                     u3081:
 13157   002A54  EF06  F015         	goto	l1208
 13158   002A58                     u3080:
 13159   002A58                     l1206:
 13160   002A58  BC0D               	btfsc	___fladd@signs^0,6,c
 13161   002A5A  EF31  F015         	goto	u3091
 13162   002A5E  EF33  F015         	goto	u3090
 13163   002A62                     u3091:
 13164   002A62  EF73  F015         	goto	l3895
 13165   002A66                     u3090:
 13166   002A66  500F               	movf	___fladd@bexp^0,w,c
 13167   002A68  A4D8               	btfss	status,2,c
 13168   002A6A  EF39  F015         	goto	u3101
 13169   002A6E  EF3B  F015         	goto	u3100
 13170   002A72                     u3101:
 13171   002A72  EF45  F015         	goto	l3877
 13172   002A76                     u3100:
 13173   002A76  0E00               	movlw	0
 13174   002A78  6E01               	movwf	?___fladd^0,c
 13175   002A7A  0E00               	movlw	0
 13176   002A7C  6E02               	movwf	(?___fladd+1)^0,c
 13177   002A7E  0E00               	movlw	0
 13178   002A80  6E03               	movwf	(?___fladd+2)^0,c
 13179   002A82  0E00               	movlw	0
 13180   002A84  6E04               	movwf	(?___fladd+3)^0,c
 13181   002A86  EF94  F016         	goto	l1215
 13182   002A8A                     l3877:
 13183   002A8A  5005               	movf	___fladd@a^0,w,c
 13184   002A8C  2601               	addwf	___fladd@b^0,f,c
 13185   002A8E  5006               	movf	(___fladd@a+1)^0,w,c
 13186   002A90  2202               	addwfc	(___fladd@b+1)^0,f,c
 13187   002A92  5007               	movf	(___fladd@a+2)^0,w,c
 13188   002A94  2203               	addwfc	(___fladd@b+2)^0,f,c
 13189   002A96  5008               	movf	(___fladd@a+3)^0,w,c
 13190   002A98  2204               	addwfc	(___fladd@b+3)^0,f,c
 13191   002A9A  A004               	btfss	(___fladd@b+3)^0,0,c
 13192   002A9C  EF52  F015         	goto	u3111
 13193   002AA0  EF54  F015         	goto	u3110
 13194   002AA4                     u3111:
 13195   002AA4  EF00  F016         	goto	l3931
 13196   002AA8                     u3110:
 13197   002AA8  A010               	btfss	___fladd@grs^0,0,c
 13198   002AAA  EF59  F015         	goto	u3121
 13199   002AAE  EF5B  F015         	goto	u3120
 13200   002AB2                     u3121:
 13201   002AB2  EF61  F015         	goto	l3885
 13202   002AB6                     u3120:
 13203   002AB6  90D8               	bcf	status,0,c
 13204   002AB8  3010               	rrcf	___fladd@grs^0,w,c
 13205   002ABA  0901               	iorlw	1
 13206   002ABC  6E10               	movwf	___fladd@grs^0,c
 13207   002ABE  EF63  F015         	goto	l3887
 13208   002AC2                     l3885:
 13209   002AC2  90D8               	bcf	status,0,c
 13210   002AC4  3210               	rrcf	___fladd@grs^0,f,c
 13211   002AC6                     l3887:
 13212   002AC6  A001               	btfss	___fladd@b^0,0,c
 13213   002AC8  EF68  F015         	goto	u3131
 13214   002ACC  EF6A  F015         	goto	u3130
 13215   002AD0                     u3131:
 13216   002AD0  EF6B  F015         	goto	l3891
 13217   002AD4                     u3130:
 13218   002AD4  8E10               	bsf	___fladd@grs^0,7,c
 13219   002AD6                     l3891:
 13220   002AD6  3404               	rlcf	(___fladd@b+3)^0,w,c
 13221   002AD8  3204               	rrcf	(___fladd@b+3)^0,f,c
 13222   002ADA  3203               	rrcf	(___fladd@b+2)^0,f,c
 13223   002ADC  3202               	rrcf	(___fladd@b+1)^0,f,c
 13224   002ADE  3201               	rrcf	___fladd@b^0,f,c
 13225   002AE0  2A0F               	incf	___fladd@bexp^0,f,c
 13226   002AE2  EF00  F016         	goto	l3931
 13227   002AE6                     l3895:
 13228   002AE6  5005               	movf	___fladd@a^0,w,c
 13229   002AE8  5C01               	subwf	___fladd@b^0,w,c
 13230   002AEA  5006               	movf	(___fladd@a+1)^0,w,c
 13231   002AEC  5802               	subwfb	(___fladd@b+1)^0,w,c
 13232   002AEE  5007               	movf	(___fladd@a+2)^0,w,c
 13233   002AF0  5803               	subwfb	(___fladd@b+2)^0,w,c
 13234   002AF2  5004               	movf	(___fladd@b+3)^0,w,c
 13235   002AF4  0A80               	xorlw	128
 13236   002AF6  6E09               	movwf	??___fladd^0,c
 13237   002AF8  5008               	movf	(___fladd@a+3)^0,w,c
 13238   002AFA  0A80               	xorlw	128
 13239   002AFC  5809               	subwfb	??___fladd^0,w,c
 13240   002AFE  B0D8               	btfsc	status,0,c
 13241   002B00  EF84  F015         	goto	u3141
 13242   002B04  EF86  F015         	goto	u3140
 13243   002B08                     u3141:
 13244   002B08  EFB1  F015         	goto	l3905
 13245   002B0C                     u3140:
 13246   002B0C  5001               	movf	___fladd@b^0,w,c
 13247   002B0E  5C05               	subwf	___fladd@a^0,w,c
 13248   002B10  6E09               	movwf	??___fladd^0,c
 13249   002B12  5002               	movf	(___fladd@b+1)^0,w,c
 13250   002B14  5806               	subwfb	(___fladd@a+1)^0,w,c
 13251   002B16  6E0A               	movwf	(??___fladd+1)^0,c
 13252   002B18  5003               	movf	(___fladd@b+2)^0,w,c
 13253   002B1A  5807               	subwfb	(___fladd@a+2)^0,w,c
 13254   002B1C  6E0B               	movwf	(??___fladd+2)^0,c
 13255   002B1E  5004               	movf	(___fladd@b+3)^0,w,c
 13256   002B20  5808               	subwfb	(___fladd@a+3)^0,w,c
 13257   002B22  6E0C               	movwf	(??___fladd+3)^0,c
 13258   002B24  0EFF               	movlw	255
 13259   002B26  2409               	addwf	??___fladd^0,w,c
 13260   002B28  6E01               	movwf	___fladd@b^0,c
 13261   002B2A  0EFF               	movlw	255
 13262   002B2C  200A               	addwfc	(??___fladd+1)^0,w,c
 13263   002B2E  6E02               	movwf	(___fladd@b+1)^0,c
 13264   002B30  0EFF               	movlw	255
 13265   002B32  200B               	addwfc	(??___fladd+2)^0,w,c
 13266   002B34  6E03               	movwf	(___fladd@b+2)^0,c
 13267   002B36  0EFF               	movlw	255
 13268   002B38  200C               	addwfc	(??___fladd+3)^0,w,c
 13269   002B3A  6E04               	movwf	(___fladd@b+3)^0,c
 13270   002B3C  0E80               	movlw	128
 13271   002B3E  1A0D               	xorwf	___fladd@signs^0,f,c
 13272   002B40  6C10               	negf	___fladd@grs^0,c
 13273   002B42  5010               	movf	___fladd@grs^0,w,c
 13274   002B44  A4D8               	btfss	status,2,c
 13275   002B46  EFA7  F015         	goto	u3151
 13276   002B4A  EFA9  F015         	goto	u3150
 13277   002B4E                     u3151:
 13278   002B4E  EFB9  F015         	goto	l1223
 13279   002B52                     u3150:
 13280   002B52  0E01               	movlw	1
 13281   002B54  2601               	addwf	___fladd@b^0,f,c
 13282   002B56  0E00               	movlw	0
 13283   002B58  2202               	addwfc	(___fladd@b+1)^0,f,c
 13284   002B5A  2203               	addwfc	(___fladd@b+2)^0,f,c
 13285   002B5C  2204               	addwfc	(___fladd@b+3)^0,f,c
 13286   002B5E  EFB9  F015         	goto	l1223
 13287   002B62                     l3905:
 13288   002B62  5005               	movf	___fladd@a^0,w,c
 13289   002B64  5E01               	subwf	___fladd@b^0,f,c
 13290   002B66  5006               	movf	(___fladd@a+1)^0,w,c
 13291   002B68  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13292   002B6A  5007               	movf	(___fladd@a+2)^0,w,c
 13293   002B6C  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13294   002B6E  5008               	movf	(___fladd@a+3)^0,w,c
 13295   002B70  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13296   002B72                     l1223:
 13297   002B72  5001               	movf	___fladd@b^0,w,c
 13298   002B74  1002               	iorwf	(___fladd@b+1)^0,w,c
 13299   002B76  1003               	iorwf	(___fladd@b+2)^0,w,c
 13300   002B78  1004               	iorwf	(___fladd@b+3)^0,w,c
 13301   002B7A  A4D8               	btfss	status,2,c
 13302   002B7C  EFC2  F015         	goto	u3161
 13303   002B80  EFC4  F015         	goto	u3160
 13304   002B84                     u3161:
 13305   002B84  EFF9  F015         	goto	l3929
 13306   002B88                     u3160:
 13307   002B88  5010               	movf	___fladd@grs^0,w,c
 13308   002B8A  A4D8               	btfss	status,2,c
 13309   002B8C  EFCA  F015         	goto	u3171
 13310   002B90  EFCC  F015         	goto	u3170
 13311   002B94                     u3171:
 13312   002B94  EFF9  F015         	goto	l3929
 13313   002B98                     u3170:
 13314   002B98  0E00               	movlw	0
 13315   002B9A  6E01               	movwf	?___fladd^0,c
 13316   002B9C  0E00               	movlw	0
 13317   002B9E  6E02               	movwf	(?___fladd+1)^0,c
 13318   002BA0  0E00               	movlw	0
 13319   002BA2  6E03               	movwf	(?___fladd+2)^0,c
 13320   002BA4  0E00               	movlw	0
 13321   002BA6  6E04               	movwf	(?___fladd+3)^0,c
 13322   002BA8  EF94  F016         	goto	l1215
 13323   002BAC                     l3913:
 13324   002BAC  90D8               	bcf	status,0,c
 13325   002BAE  3601               	rlcf	___fladd@b^0,f,c
 13326   002BB0  3602               	rlcf	(___fladd@b+1)^0,f,c
 13327   002BB2  3603               	rlcf	(___fladd@b+2)^0,f,c
 13328   002BB4  3604               	rlcf	(___fladd@b+3)^0,f,c
 13329   002BB6  AE10               	btfss	___fladd@grs^0,7,c
 13330   002BB8  EFE0  F015         	goto	u3181
 13331   002BBC  EFE2  F015         	goto	u3180
 13332   002BC0                     u3181:
 13333   002BC0  EFE3  F015         	goto	l3919
 13334   002BC4                     u3180:
 13335   002BC4  8001               	bsf	___fladd@b^0,0,c
 13336   002BC6                     l3919:
 13337   002BC6  A010               	btfss	___fladd@grs^0,0,c
 13338   002BC8  EFE8  F015         	goto	u3191
 13339   002BCC  EFEA  F015         	goto	u3190
 13340   002BD0                     u3191:
 13341   002BD0  EFEE  F015         	goto	l3923
 13342   002BD4                     u3190:
 13343   002BD4  80D8               	bsf	status,0,c
 13344   002BD6  3610               	rlcf	___fladd@grs^0,f,c
 13345   002BD8  EFF0  F015         	goto	l3925
 13346   002BDC                     l3923:
 13347   002BDC  90D8               	bcf	status,0,c
 13348   002BDE  3610               	rlcf	___fladd@grs^0,f,c
 13349   002BE0                     l3925:
 13350   002BE0  500F               	movf	___fladd@bexp^0,w,c
 13351   002BE2  B4D8               	btfsc	status,2,c
 13352   002BE4  EFF6  F015         	goto	u3201
 13353   002BE8  EFF8  F015         	goto	u3200
 13354   002BEC                     u3201:
 13355   002BEC  EFF9  F015         	goto	l3929
 13356   002BF0                     u3200:
 13357   002BF0  060F               	decf	___fladd@bexp^0,f,c
 13358   002BF2                     l3929:
 13359   002BF2  AE03               	btfss	(___fladd@b+2)^0,7,c
 13360   002BF4  EFFE  F015         	goto	u3211
 13361   002BF8  EF00  F016         	goto	u3210
 13362   002BFC                     u3211:
 13363   002BFC  EFD6  F015         	goto	l3913
 13364   002C00                     u3210:
 13365   002C00                     l3931:
 13366   002C00  0E00               	movlw	0
 13367   002C02  6E0E               	movwf	___fladd@aexp^0,c
 13368   002C04  AE10               	btfss	___fladd@grs^0,7,c
 13369   002C06  EF07  F016         	goto	u3221
 13370   002C0A  EF09  F016         	goto	u3220
 13371   002C0E                     u3221:
 13372   002C0E  EF21  F016         	goto	l1232
 13373   002C12                     u3220:
 13374   002C12  C010  F009         	movff	___fladd@grs,??___fladd
 13375   002C16  0E7F               	movlw	127
 13376   002C18  1609               	andwf	??___fladd^0,f,c
 13377   002C1A  B4D8               	btfsc	status,2,c
 13378   002C1C  EF12  F016         	goto	u3231
 13379   002C20  EF14  F016         	goto	u3230
 13380   002C24                     u3231:
 13381   002C24  EF18  F016         	goto	l1233
 13382   002C28                     u3230:
 13383   002C28                     l3937:
 13384   002C28  0E01               	movlw	1
 13385   002C2A  6E0E               	movwf	___fladd@aexp^0,c
 13386   002C2C  EF21  F016         	goto	l1232
 13387   002C30                     l1233:
 13388   002C30  A001               	btfss	___fladd@b^0,0,c
 13389   002C32  EF1D  F016         	goto	u3241
 13390   002C36  EF1F  F016         	goto	u3240
 13391   002C3A                     u3241:
 13392   002C3A  EF21  F016         	goto	l1232
 13393   002C3E                     u3240:
 13394   002C3E  EF14  F016         	goto	l3937
 13395   002C42                     l1232:
 13396   002C42  500E               	movf	___fladd@aexp^0,w,c
 13397   002C44  B4D8               	btfsc	status,2,c
 13398   002C46  EF27  F016         	goto	u3251
 13399   002C4A  EF29  F016         	goto	u3250
 13400   002C4E                     u3251:
 13401   002C4E  EF54  F016         	goto	l3949
 13402   002C52                     u3250:
 13403   002C52  0E01               	movlw	1
 13404   002C54  2601               	addwf	___fladd@b^0,f,c
 13405   002C56  0E00               	movlw	0
 13406   002C58  2202               	addwfc	(___fladd@b+1)^0,f,c
 13407   002C5A  2203               	addwfc	(___fladd@b+2)^0,f,c
 13408   002C5C  2204               	addwfc	(___fladd@b+3)^0,f,c
 13409   002C5E  A004               	btfss	(___fladd@b+3)^0,0,c
 13410   002C60  EF34  F016         	goto	u3261
 13411   002C64  EF36  F016         	goto	u3260
 13412   002C68                     u3261:
 13413   002C68  EF54  F016         	goto	l3949
 13414   002C6C                     u3260:
 13415   002C6C  C001  F009         	movff	___fladd@b,??___fladd
 13416   002C70  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 13417   002C74  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 13418   002C78  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 13419   002C7C  340C               	rlcf	(??___fladd+3)^0,w,c
 13420   002C7E  320C               	rrcf	(??___fladd+3)^0,f,c
 13421   002C80  320B               	rrcf	(??___fladd+2)^0,f,c
 13422   002C82  320A               	rrcf	(??___fladd+1)^0,f,c
 13423   002C84  3209               	rrcf	??___fladd^0,f,c
 13424   002C86  C009  F001         	movff	??___fladd,___fladd@b
 13425   002C8A  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 13426   002C8E  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 13427   002C92  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 13428   002C96  280F               	incf	___fladd@bexp^0,w,c
 13429   002C98  B4D8               	btfsc	status,2,c
 13430   002C9A  EF51  F016         	goto	u3271
 13431   002C9E  EF53  F016         	goto	u3270
 13432   002CA2                     u3271:
 13433   002CA2  EF54  F016         	goto	l3949
 13434   002CA6                     u3270:
 13435   002CA6  2A0F               	incf	___fladd@bexp^0,f,c
 13436   002CA8                     l3949:
 13437   002CA8  280F               	incf	___fladd@bexp^0,w,c
 13438   002CAA  B4D8               	btfsc	status,2,c
 13439   002CAC  EF5A  F016         	goto	u3281
 13440   002CB0  EF5C  F016         	goto	u3280
 13441   002CB4                     u3281:
 13442   002CB4  EF64  F016         	goto	l3953
 13443   002CB8                     u3280:
 13444   002CB8  500F               	movf	___fladd@bexp^0,w,c
 13445   002CBA  A4D8               	btfss	status,2,c
 13446   002CBC  EF62  F016         	goto	u3291
 13447   002CC0  EF64  F016         	goto	u3290
 13448   002CC4                     u3291:
 13449   002CC4  EF76  F016         	goto	l3957
 13450   002CC8                     u3290:
 13451   002CC8                     l3953:
 13452   002CC8  0E00               	movlw	0
 13453   002CCA  6E01               	movwf	___fladd@b^0,c
 13454   002CCC  0E00               	movlw	0
 13455   002CCE  6E02               	movwf	(___fladd@b+1)^0,c
 13456   002CD0  0E00               	movlw	0
 13457   002CD2  6E03               	movwf	(___fladd@b+2)^0,c
 13458   002CD4  0E00               	movlw	0
 13459   002CD6  6E04               	movwf	(___fladd@b+3)^0,c
 13460   002CD8  500F               	movf	___fladd@bexp^0,w,c
 13461   002CDA  A4D8               	btfss	status,2,c
 13462   002CDC  EF72  F016         	goto	u3301
 13463   002CE0  EF74  F016         	goto	u3300
 13464   002CE4                     u3301:
 13465   002CE4  EF76  F016         	goto	l3957
 13466   002CE8                     u3300:
 13467   002CE8  0E00               	movlw	0
 13468   002CEA  6E0D               	movwf	___fladd@signs^0,c
 13469   002CEC                     l3957:
 13470   002CEC  A00F               	btfss	___fladd@bexp^0,0,c
 13471   002CEE  EF7B  F016         	goto	u3311
 13472   002CF2  EF7D  F016         	goto	u3310
 13473   002CF6                     u3311:
 13474   002CF6  EF80  F016         	goto	l3961
 13475   002CFA                     u3310:
 13476   002CFA  8E03               	bsf	(___fladd@b+2)^0,7,c
 13477   002CFC  EF81  F016         	goto	l3963
 13478   002D00                     l3961:
 13479   002D00  9E03               	bcf	(___fladd@b+2)^0,7,c
 13480   002D02                     l3963:
 13481   002D02  90D8               	bcf	status,0,c
 13482   002D04  300F               	rrcf	___fladd@bexp^0,w,c
 13483   002D06  6E04               	movwf	(___fladd@b+3)^0,c
 13484   002D08  AE0D               	btfss	___fladd@signs^0,7,c
 13485   002D0A  EF89  F016         	goto	u3321
 13486   002D0E  EF8B  F016         	goto	u3320
 13487   002D12                     u3321:
 13488   002D12  EF8C  F016         	goto	l3969
 13489   002D16                     u3320:
 13490   002D16  8E04               	bsf	(___fladd@b+3)^0,7,c
 13491   002D18                     l3969:
 13492   002D18  C001  F001         	movff	___fladd@b,?___fladd
 13493   002D1C  C002  F002         	movff	___fladd@b+1,?___fladd+1
 13494   002D20  C003  F003         	movff	___fladd@b+2,?___fladd+2
 13495   002D24  C004  F004         	movff	___fladd@b+3,?___fladd+3
 13496   002D28                     l1215:
 13497   002D28  0012               	return		;funcret
 13498   002D2A                     __end_of___fladd:
 13499                           	callstack 0
 13500                           
 13501 ;; *************** function ___flmul *****************
 13502 ;; Defined at:
 13503 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 13504 ;; Parameters:    Size  Location     Type
 13505 ;;  b               4   16[COMRAM] unsigned char 
 13506 ;;  a               4   20[COMRAM] unsigned char 
 13507 ;; Auto vars:     Size  Location     Type
 13508 ;;  prod            4   35[COMRAM] struct .
 13509 ;;  grs             4   29[COMRAM] unsigned long 
 13510 ;;  temp            2   39[COMRAM] struct .
 13511 ;;  bexp            1   34[COMRAM] unsigned char 
 13512 ;;  aexp            1   33[COMRAM] unsigned char 
 13513 ;;  sign            1   28[COMRAM] unsigned char 
 13514 ;; Return value:  Size  Location     Type
 13515 ;;                  4   16[COMRAM] unsigned char 
 13516 ;; Registers used:
 13517 ;;		wreg, status,2, status,0, prodl, prodh
 13518 ;; Tracked objects:
 13519 ;;		On entry : 0/0
 13520 ;;		On exit  : 0/0
 13521 ;;		Unchanged: 0/0
 13522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13523 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13524 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13525 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13526 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13527 ;;Total ram usage:       25 bytes
 13528 ;; Hardware stack levels used: 1
 13529 ;; Hardware stack levels required when called: 1
 13530 ;; This function calls:
 13531 ;;		Nothing
 13532 ;; This function is called by:
 13533 ;;		_Colour_decider
 13534 ;;		_turnRight45
 13535 ;;		_turnLeft45
 13536 ;;		_reverseOneBlock
 13537 ;;		_ForwardOneBlock
 13538 ;;		_Forwardhalfblock
 13539 ;;		_Backhalfblock
 13540 ;;		_efgtoa
 13541 ;; This function uses a non-reentrant model
 13542 ;;
 13543                           
 13544                           	psect	text74
 13545   002D2A                     __ptext74:
 13546                           	callstack 0
 13547   002D2A                     ___flmul:
 13548                           	callstack 25
 13549   002D2A  5014               	movf	(___flmul@b+3)^0,w,c
 13550   002D2C  0B80               	andlw	128
 13551   002D2E  6E1D               	movwf	___flmul@sign^0,c
 13552   002D30  5014               	movf	(___flmul@b+3)^0,w,c
 13553   002D32  2414               	addwf	(___flmul@b+3)^0,w,c
 13554   002D34  6E23               	movwf	___flmul@bexp^0,c
 13555   002D36  AE13               	btfss	(___flmul@b+2)^0,7,c
 13556   002D38  EFA0  F016         	goto	u3751
 13557   002D3C  EFA2  F016         	goto	u3750
 13558   002D40                     u3751:
 13559   002D40  EFA3  F016         	goto	l4243
 13560   002D44                     u3750:
 13561   002D44  8023               	bsf	___flmul@bexp^0,0,c
 13562   002D46                     l4243:
 13563   002D46  5023               	movf	___flmul@bexp^0,w,c
 13564   002D48  B4D8               	btfsc	status,2,c
 13565   002D4A  EFA9  F016         	goto	u3761
 13566   002D4E  EFAB  F016         	goto	u3760
 13567   002D52                     u3761:
 13568   002D52  EFBE  F016         	goto	l4251
 13569   002D56                     u3760:
 13570   002D56  2823               	incf	___flmul@bexp^0,w,c
 13571   002D58  A4D8               	btfss	status,2,c
 13572   002D5A  EFB1  F016         	goto	u3771
 13573   002D5E  EFB3  F016         	goto	u3770
 13574   002D62                     u3771:
 13575   002D62  EFBB  F016         	goto	l4249
 13576   002D66                     u3770:
 13577   002D66  0E00               	movlw	0
 13578   002D68  6E11               	movwf	___flmul@b^0,c
 13579   002D6A  0E00               	movlw	0
 13580   002D6C  6E12               	movwf	(___flmul@b+1)^0,c
 13581   002D6E  0E00               	movlw	0
 13582   002D70  6E13               	movwf	(___flmul@b+2)^0,c
 13583   002D72  0E00               	movlw	0
 13584   002D74  6E14               	movwf	(___flmul@b+3)^0,c
 13585   002D76                     l4249:
 13586   002D76  8E13               	bsf	(___flmul@b+2)^0,7,c
 13587   002D78  EFC6  F016         	goto	l4253
 13588   002D7C                     l4251:
 13589   002D7C  0E00               	movlw	0
 13590   002D7E  6E11               	movwf	___flmul@b^0,c
 13591   002D80  0E00               	movlw	0
 13592   002D82  6E12               	movwf	(___flmul@b+1)^0,c
 13593   002D84  0E00               	movlw	0
 13594   002D86  6E13               	movwf	(___flmul@b+2)^0,c
 13595   002D88  0E00               	movlw	0
 13596   002D8A  6E14               	movwf	(___flmul@b+3)^0,c
 13597   002D8C                     l4253:
 13598   002D8C  5018               	movf	(___flmul@a+3)^0,w,c
 13599   002D8E  0B80               	andlw	128
 13600   002D90  1A1D               	xorwf	___flmul@sign^0,f,c
 13601   002D92  5018               	movf	(___flmul@a+3)^0,w,c
 13602   002D94  2418               	addwf	(___flmul@a+3)^0,w,c
 13603   002D96  6E22               	movwf	___flmul@aexp^0,c
 13604   002D98  AE17               	btfss	(___flmul@a+2)^0,7,c
 13605   002D9A  EFD1  F016         	goto	u3781
 13606   002D9E  EFD3  F016         	goto	u3780
 13607   002DA2                     u3781:
 13608   002DA2  EFD4  F016         	goto	l4261
 13609   002DA6                     u3780:
 13610   002DA6  8022               	bsf	___flmul@aexp^0,0,c
 13611   002DA8                     l4261:
 13612   002DA8  5022               	movf	___flmul@aexp^0,w,c
 13613   002DAA  B4D8               	btfsc	status,2,c
 13614   002DAC  EFDA  F016         	goto	u3791
 13615   002DB0  EFDC  F016         	goto	u3790
 13616   002DB4                     u3791:
 13617   002DB4  EFEF  F016         	goto	l4269
 13618   002DB8                     u3790:
 13619   002DB8  2822               	incf	___flmul@aexp^0,w,c
 13620   002DBA  A4D8               	btfss	status,2,c
 13621   002DBC  EFE2  F016         	goto	u3801
 13622   002DC0  EFE4  F016         	goto	u3800
 13623   002DC4                     u3801:
 13624   002DC4  EFEC  F016         	goto	l4267
 13625   002DC8                     u3800:
 13626   002DC8  0E00               	movlw	0
 13627   002DCA  6E15               	movwf	___flmul@a^0,c
 13628   002DCC  0E00               	movlw	0
 13629   002DCE  6E16               	movwf	(___flmul@a+1)^0,c
 13630   002DD0  0E00               	movlw	0
 13631   002DD2  6E17               	movwf	(___flmul@a+2)^0,c
 13632   002DD4  0E00               	movlw	0
 13633   002DD6  6E18               	movwf	(___flmul@a+3)^0,c
 13634   002DD8                     l4267:
 13635   002DD8  8E17               	bsf	(___flmul@a+2)^0,7,c
 13636   002DDA  EFF7  F016         	goto	l1292
 13637   002DDE                     l4269:
 13638   002DDE  0E00               	movlw	0
 13639   002DE0  6E15               	movwf	___flmul@a^0,c
 13640   002DE2  0E00               	movlw	0
 13641   002DE4  6E16               	movwf	(___flmul@a+1)^0,c
 13642   002DE6  0E00               	movlw	0
 13643   002DE8  6E17               	movwf	(___flmul@a+2)^0,c
 13644   002DEA  0E00               	movlw	0
 13645   002DEC  6E18               	movwf	(___flmul@a+3)^0,c
 13646   002DEE                     l1292:
 13647   002DEE  5022               	movf	___flmul@aexp^0,w,c
 13648   002DF0  B4D8               	btfsc	status,2,c
 13649   002DF2  EFFD  F016         	goto	u3811
 13650   002DF6  EFFF  F016         	goto	u3810
 13651   002DFA                     u3811:
 13652   002DFA  EF07  F017         	goto	l4273
 13653   002DFE                     u3810:
 13654   002DFE  5023               	movf	___flmul@bexp^0,w,c
 13655   002E00  A4D8               	btfss	status,2,c
 13656   002E02  EF05  F017         	goto	u3821
 13657   002E06  EF07  F017         	goto	u3820
 13658   002E0A                     u3821:
 13659   002E0A  EF11  F017         	goto	l4277
 13660   002E0E                     u3820:
 13661   002E0E                     l4273:
 13662   002E0E  0E00               	movlw	0
 13663   002E10  6E11               	movwf	?___flmul^0,c
 13664   002E12  0E00               	movlw	0
 13665   002E14  6E12               	movwf	(?___flmul+1)^0,c
 13666   002E16  0E00               	movlw	0
 13667   002E18  6E13               	movwf	(?___flmul+2)^0,c
 13668   002E1A  0E00               	movlw	0
 13669   002E1C  6E14               	movwf	(?___flmul+3)^0,c
 13670   002E1E  EFA9  F018         	goto	l1296
 13671   002E22                     l4277:
 13672   002E22  5017               	movf	(___flmul@a+2)^0,w,c
 13673   002E24  0211               	mulwf	___flmul@b^0,c
 13674   002E26  CFF3 F028          	movff	prodl,___flmul@temp
 13675   002E2A  CFF4 F029          	movff	prodh,___flmul@temp+1
 13676   002E2E  5028               	movf	___flmul@temp^0,w,c
 13677   002E30  6E1E               	movwf	___flmul@grs^0,c
 13678   002E32  6A1F               	clrf	(___flmul@grs+1)^0,c
 13679   002E34  6A20               	clrf	(___flmul@grs+2)^0,c
 13680   002E36  6A21               	clrf	(___flmul@grs+3)^0,c
 13681   002E38  5029               	movf	(___flmul@temp+1)^0,w,c
 13682   002E3A  6E24               	movwf	___flmul@prod^0,c
 13683   002E3C  6A25               	clrf	(___flmul@prod+1)^0,c
 13684   002E3E  6A26               	clrf	(___flmul@prod+2)^0,c
 13685   002E40  6A27               	clrf	(___flmul@prod+3)^0,c
 13686   002E42  5016               	movf	(___flmul@a+1)^0,w,c
 13687   002E44  0212               	mulwf	(___flmul@b+1)^0,c
 13688   002E46  CFF3 F028          	movff	prodl,___flmul@temp
 13689   002E4A  CFF4 F029          	movff	prodh,___flmul@temp+1
 13690   002E4E  5028               	movf	___flmul@temp^0,w,c
 13691   002E50  261E               	addwf	___flmul@grs^0,f,c
 13692   002E52  0E00               	movlw	0
 13693   002E54  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13694   002E56  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13695   002E58  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13696   002E5A  5029               	movf	(___flmul@temp+1)^0,w,c
 13697   002E5C  2624               	addwf	___flmul@prod^0,f,c
 13698   002E5E  0E00               	movlw	0
 13699   002E60  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13700   002E62  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13701   002E64  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13702   002E66  5015               	movf	___flmul@a^0,w,c
 13703   002E68  0213               	mulwf	(___flmul@b+2)^0,c
 13704   002E6A  CFF3 F028          	movff	prodl,___flmul@temp
 13705   002E6E  CFF4 F029          	movff	prodh,___flmul@temp+1
 13706   002E72  5028               	movf	___flmul@temp^0,w,c
 13707   002E74  261E               	addwf	___flmul@grs^0,f,c
 13708   002E76  0E00               	movlw	0
 13709   002E78  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13710   002E7A  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13711   002E7C  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13712   002E7E  5029               	movf	(___flmul@temp+1)^0,w,c
 13713   002E80  2624               	addwf	___flmul@prod^0,f,c
 13714   002E82  0E00               	movlw	0
 13715   002E84  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13716   002E86  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13717   002E88  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13718   002E8A  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 13719   002E8E  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13720   002E92  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13721   002E96  6A1E               	clrf	___flmul@grs^0,c
 13722   002E98  5015               	movf	___flmul@a^0,w,c
 13723   002E9A  0212               	mulwf	(___flmul@b+1)^0,c
 13724   002E9C  CFF3 F028          	movff	prodl,___flmul@temp
 13725   002EA0  CFF4 F029          	movff	prodh,___flmul@temp+1
 13726   002EA4  5028               	movf	___flmul@temp^0,w,c
 13727   002EA6  261E               	addwf	___flmul@grs^0,f,c
 13728   002EA8  5029               	movf	(___flmul@temp+1)^0,w,c
 13729   002EAA  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13730   002EAC  0E00               	movlw	0
 13731   002EAE  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13732   002EB0  0E00               	movlw	0
 13733   002EB2  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13734   002EB4  5016               	movf	(___flmul@a+1)^0,w,c
 13735   002EB6  0211               	mulwf	___flmul@b^0,c
 13736   002EB8  CFF3 F028          	movff	prodl,___flmul@temp
 13737   002EBC  CFF4 F029          	movff	prodh,___flmul@temp+1
 13738   002EC0  5028               	movf	___flmul@temp^0,w,c
 13739   002EC2  261E               	addwf	___flmul@grs^0,f,c
 13740   002EC4  5029               	movf	(___flmul@temp+1)^0,w,c
 13741   002EC6  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13742   002EC8  0E00               	movlw	0
 13743   002ECA  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13744   002ECC  0E00               	movlw	0
 13745   002ECE  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13746   002ED0  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 13747   002ED4  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13748   002ED8  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13749   002EDC  6A1E               	clrf	___flmul@grs^0,c
 13750   002EDE  5015               	movf	___flmul@a^0,w,c
 13751   002EE0  0211               	mulwf	___flmul@b^0,c
 13752   002EE2  CFF3 F028          	movff	prodl,___flmul@temp
 13753   002EE6  CFF4 F029          	movff	prodh,___flmul@temp+1
 13754   002EEA  5028               	movf	___flmul@temp^0,w,c
 13755   002EEC  261E               	addwf	___flmul@grs^0,f,c
 13756   002EEE  5029               	movf	(___flmul@temp+1)^0,w,c
 13757   002EF0  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13758   002EF2  0E00               	movlw	0
 13759   002EF4  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13760   002EF6  0E00               	movlw	0
 13761   002EF8  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13762   002EFA  5017               	movf	(___flmul@a+2)^0,w,c
 13763   002EFC  0212               	mulwf	(___flmul@b+1)^0,c
 13764   002EFE  CFF3 F028          	movff	prodl,___flmul@temp
 13765   002F02  CFF4 F029          	movff	prodh,___flmul@temp+1
 13766   002F06  5028               	movf	___flmul@temp^0,w,c
 13767   002F08  2624               	addwf	___flmul@prod^0,f,c
 13768   002F0A  5029               	movf	(___flmul@temp+1)^0,w,c
 13769   002F0C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13770   002F0E  0E00               	movlw	0
 13771   002F10  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13772   002F12  0E00               	movlw	0
 13773   002F14  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13774   002F16  5016               	movf	(___flmul@a+1)^0,w,c
 13775   002F18  0213               	mulwf	(___flmul@b+2)^0,c
 13776   002F1A  CFF3 F028          	movff	prodl,___flmul@temp
 13777   002F1E  CFF4 F029          	movff	prodh,___flmul@temp+1
 13778   002F22  5028               	movf	___flmul@temp^0,w,c
 13779   002F24  2624               	addwf	___flmul@prod^0,f,c
 13780   002F26  5029               	movf	(___flmul@temp+1)^0,w,c
 13781   002F28  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13782   002F2A  0E00               	movlw	0
 13783   002F2C  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13784   002F2E  0E00               	movlw	0
 13785   002F30  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13786   002F32  5017               	movf	(___flmul@a+2)^0,w,c
 13787   002F34  0213               	mulwf	(___flmul@b+2)^0,c
 13788   002F36  CFF3 F028          	movff	prodl,___flmul@temp
 13789   002F3A  CFF4 F029          	movff	prodh,___flmul@temp+1
 13790   002F3E  5028               	movf	___flmul@temp^0,w,c
 13791   002F40  6E19               	movwf	??___flmul^0,c
 13792   002F42  5029               	movf	(___flmul@temp+1)^0,w,c
 13793   002F44  6E1A               	movwf	(??___flmul+1)^0,c
 13794   002F46  6A1B               	clrf	(??___flmul+2)^0,c
 13795   002F48  6A1C               	clrf	(??___flmul+3)^0,c
 13796   002F4A  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 13797   002F4E  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 13798   002F52  C019  F01A         	movff	??___flmul,??___flmul+1
 13799   002F56  6A19               	clrf	??___flmul^0,c
 13800   002F58  5019               	movf	??___flmul^0,w,c
 13801   002F5A  2624               	addwf	___flmul@prod^0,f,c
 13802   002F5C  501A               	movf	(??___flmul+1)^0,w,c
 13803   002F5E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13804   002F60  501B               	movf	(??___flmul+2)^0,w,c
 13805   002F62  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13806   002F64  501C               	movf	(??___flmul+3)^0,w,c
 13807   002F66  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13808   002F68  C01E  F019         	movff	___flmul@grs,??___flmul
 13809   002F6C  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 13810   002F70  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 13811   002F74  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 13812   002F78  0E19               	movlw	25
 13813   002F7A  EFC4  F017         	goto	u3830
 13814   002F7E                     u3835:
 13815   002F7E  90D8               	bcf	status,0,c
 13816   002F80  321C               	rrcf	(??___flmul+3)^0,f,c
 13817   002F82  321B               	rrcf	(??___flmul+2)^0,f,c
 13818   002F84  321A               	rrcf	(??___flmul+1)^0,f,c
 13819   002F86  3219               	rrcf	??___flmul^0,f,c
 13820   002F88                     u3830:
 13821   002F88  2EE8               	decfsz	wreg,f,c
 13822   002F8A  EFBF  F017         	goto	u3835
 13823   002F8E  5019               	movf	??___flmul^0,w,c
 13824   002F90  2624               	addwf	___flmul@prod^0,f,c
 13825   002F92  501A               	movf	(??___flmul+1)^0,w,c
 13826   002F94  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13827   002F96  501B               	movf	(??___flmul+2)^0,w,c
 13828   002F98  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13829   002F9A  501C               	movf	(??___flmul+3)^0,w,c
 13830   002F9C  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13831   002F9E  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 13832   002FA2  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13833   002FA6  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13834   002FAA  6A1E               	clrf	___flmul@grs^0,c
 13835   002FAC  5022               	movf	___flmul@aexp^0,w,c
 13836   002FAE  C023  F019         	movff	___flmul@bexp,??___flmul
 13837   002FB2  6A1A               	clrf	(??___flmul+1)^0,c
 13838   002FB4  2619               	addwf	??___flmul^0,f,c
 13839   002FB6  0E00               	movlw	0
 13840   002FB8  221A               	addwfc	(??___flmul+1)^0,f,c
 13841   002FBA  0E82               	movlw	130
 13842   002FBC  2419               	addwf	??___flmul^0,w,c
 13843   002FBE  6E28               	movwf	___flmul@temp^0,c
 13844   002FC0  0EFF               	movlw	255
 13845   002FC2  201A               	addwfc	(??___flmul+1)^0,w,c
 13846   002FC4  6E29               	movwf	(___flmul@temp+1)^0,c
 13847   002FC6  EFFA  F017         	goto	l4325
 13848   002FCA                     l4319:
 13849   002FCA  90D8               	bcf	status,0,c
 13850   002FCC  3624               	rlcf	___flmul@prod^0,f,c
 13851   002FCE  3625               	rlcf	(___flmul@prod+1)^0,f,c
 13852   002FD0  3626               	rlcf	(___flmul@prod+2)^0,f,c
 13853   002FD2  3627               	rlcf	(___flmul@prod+3)^0,f,c
 13854   002FD4  AE21               	btfss	(___flmul@grs+3)^0,7,c
 13855   002FD6  EFEF  F017         	goto	u3841
 13856   002FDA  EFF1  F017         	goto	u3840
 13857   002FDE                     u3841:
 13858   002FDE  EFF2  F017         	goto	l1299
 13859   002FE2                     u3840:
 13860   002FE2  8024               	bsf	___flmul@prod^0,0,c
 13861   002FE4                     l1299:
 13862   002FE4  90D8               	bcf	status,0,c
 13863   002FE6  361E               	rlcf	___flmul@grs^0,f,c
 13864   002FE8  361F               	rlcf	(___flmul@grs+1)^0,f,c
 13865   002FEA  3620               	rlcf	(___flmul@grs+2)^0,f,c
 13866   002FEC  3621               	rlcf	(___flmul@grs+3)^0,f,c
 13867   002FEE  0628               	decf	___flmul@temp^0,f,c
 13868   002FF0  A0D8               	btfss	status,0,c
 13869   002FF2  0629               	decf	(___flmul@temp+1)^0,f,c
 13870   002FF4                     l4325:
 13871   002FF4  AE26               	btfss	(___flmul@prod+2)^0,7,c
 13872   002FF6  EFFF  F017         	goto	u3851
 13873   002FFA  EF01  F018         	goto	u3850
 13874   002FFE                     u3851:
 13875   002FFE  EFE5  F017         	goto	l4319
 13876   003002                     u3850:
 13877   003002  0E00               	movlw	0
 13878   003004  6E22               	movwf	___flmul@aexp^0,c
 13879   003006  AE21               	btfss	(___flmul@grs+3)^0,7,c
 13880   003008  EF08  F018         	goto	u3861
 13881   00300C  EF0A  F018         	goto	u3860
 13882   003010                     u3861:
 13883   003010  EF2E  F018         	goto	l1301
 13884   003014                     u3860:
 13885   003014  0EFF               	movlw	255
 13886   003016  141E               	andwf	___flmul@grs^0,w,c
 13887   003018  6E19               	movwf	??___flmul^0,c
 13888   00301A  0EFF               	movlw	255
 13889   00301C  141F               	andwf	(___flmul@grs+1)^0,w,c
 13890   00301E  6E1A               	movwf	(??___flmul+1)^0,c
 13891   003020  0EFF               	movlw	255
 13892   003022  1420               	andwf	(___flmul@grs+2)^0,w,c
 13893   003024  6E1B               	movwf	(??___flmul+2)^0,c
 13894   003026  0E7F               	movlw	127
 13895   003028  1421               	andwf	(___flmul@grs+3)^0,w,c
 13896   00302A  6E1C               	movwf	(??___flmul+3)^0,c
 13897   00302C  5019               	movf	??___flmul^0,w,c
 13898   00302E  101A               	iorwf	(??___flmul+1)^0,w,c
 13899   003030  101B               	iorwf	(??___flmul+2)^0,w,c
 13900   003032  101C               	iorwf	(??___flmul+3)^0,w,c
 13901   003034  B4D8               	btfsc	status,2,c
 13902   003036  EF1F  F018         	goto	u3871
 13903   00303A  EF21  F018         	goto	u3870
 13904   00303E                     u3871:
 13905   00303E  EF25  F018         	goto	l1302
 13906   003042                     u3870:
 13907   003042                     l4333:
 13908   003042  0E01               	movlw	1
 13909   003044  6E22               	movwf	___flmul@aexp^0,c
 13910   003046  EF2E  F018         	goto	l1301
 13911   00304A                     l1302:
 13912   00304A  A024               	btfss	___flmul@prod^0,0,c
 13913   00304C  EF2A  F018         	goto	u3881
 13914   003050  EF2C  F018         	goto	u3880
 13915   003054                     u3881:
 13916   003054  EF2E  F018         	goto	l1301
 13917   003058                     u3880:
 13918   003058  EF21  F018         	goto	l4333
 13919   00305C                     l1301:
 13920   00305C  5022               	movf	___flmul@aexp^0,w,c
 13921   00305E  B4D8               	btfsc	status,2,c
 13922   003060  EF34  F018         	goto	u3891
 13923   003064  EF36  F018         	goto	u3890
 13924   003068                     u3891:
 13925   003068  EF5A  F018         	goto	l4345
 13926   00306C                     u3890:
 13927   00306C  0E01               	movlw	1
 13928   00306E  2624               	addwf	___flmul@prod^0,f,c
 13929   003070  0E00               	movlw	0
 13930   003072  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13931   003074  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13932   003076  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13933   003078  A027               	btfss	(___flmul@prod+3)^0,0,c
 13934   00307A  EF41  F018         	goto	u3901
 13935   00307E  EF43  F018         	goto	u3900
 13936   003082                     u3901:
 13937   003082  EF5A  F018         	goto	l4345
 13938   003086                     u3900:
 13939   003086  C024  F019         	movff	___flmul@prod,??___flmul
 13940   00308A  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 13941   00308E  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 13942   003092  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 13943   003096  341C               	rlcf	(??___flmul+3)^0,w,c
 13944   003098  321C               	rrcf	(??___flmul+3)^0,f,c
 13945   00309A  321B               	rrcf	(??___flmul+2)^0,f,c
 13946   00309C  321A               	rrcf	(??___flmul+1)^0,f,c
 13947   00309E  3219               	rrcf	??___flmul^0,f,c
 13948   0030A0  C019  F024         	movff	??___flmul,___flmul@prod
 13949   0030A4  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 13950   0030A8  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 13951   0030AC  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 13952   0030B0  4A28               	infsnz	___flmul@temp^0,f,c
 13953   0030B2  2A29               	incf	(___flmul@temp+1)^0,f,c
 13954   0030B4                     l4345:
 13955   0030B4  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 13956   0030B6  EF65  F018         	goto	u3911
 13957   0030BA  5029               	movf	(___flmul@temp+1)^0,w,c
 13958   0030BC  E108               	bnz	u3910
 13959   0030BE  2828               	incf	___flmul@temp^0,w,c
 13960   0030C0  A0D8               	btfss	status,0,c
 13961   0030C2  EF65  F018         	goto	u3911
 13962   0030C6  EF67  F018         	goto	u3910
 13963   0030CA                     u3911:
 13964   0030CA  EF71  F018         	goto	l4349
 13965   0030CE                     u3910:
 13966   0030CE  0E00               	movlw	0
 13967   0030D0  6E24               	movwf	___flmul@prod^0,c
 13968   0030D2  0E00               	movlw	0
 13969   0030D4  6E25               	movwf	(___flmul@prod+1)^0,c
 13970   0030D6  0E80               	movlw	128
 13971   0030D8  6E26               	movwf	(___flmul@prod+2)^0,c
 13972   0030DA  0E7F               	movlw	127
 13973   0030DC  6E27               	movwf	(___flmul@prod+3)^0,c
 13974   0030DE  EF9F  F018         	goto	l4361
 13975   0030E2                     l4349:
 13976   0030E2  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 13977   0030E4  EF7E  F018         	goto	u3920
 13978   0030E8  5029               	movf	(___flmul@temp+1)^0,w,c
 13979   0030EA  E106               	bnz	u3921
 13980   0030EC  0428               	decf	___flmul@temp^0,w,c
 13981   0030EE  B0D8               	btfsc	status,0,c
 13982   0030F0  EF7C  F018         	goto	u3921
 13983   0030F4  EF7E  F018         	goto	u3920
 13984   0030F8                     u3921:
 13985   0030F8  EF8A  F018         	goto	l1309
 13986   0030FC                     u3920:
 13987   0030FC  0E00               	movlw	0
 13988   0030FE  6E24               	movwf	___flmul@prod^0,c
 13989   003100  0E00               	movlw	0
 13990   003102  6E25               	movwf	(___flmul@prod+1)^0,c
 13991   003104  0E00               	movlw	0
 13992   003106  6E26               	movwf	(___flmul@prod+2)^0,c
 13993   003108  0E00               	movlw	0
 13994   00310A  6E27               	movwf	(___flmul@prod+3)^0,c
 13995   00310C  0E00               	movlw	0
 13996   00310E  6E1D               	movwf	___flmul@sign^0,c
 13997   003110  EF9F  F018         	goto	l4361
 13998   003114                     l1309:
 13999   003114  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14000   003118  0EFF               	movlw	255
 14001   00311A  1624               	andwf	___flmul@prod^0,f,c
 14002   00311C  0EFF               	movlw	255
 14003   00311E  1625               	andwf	(___flmul@prod+1)^0,f,c
 14004   003120  0E7F               	movlw	127
 14005   003122  1626               	andwf	(___flmul@prod+2)^0,f,c
 14006   003124  0E00               	movlw	0
 14007   003126  1627               	andwf	(___flmul@prod+3)^0,f,c
 14008   003128  A023               	btfss	___flmul@bexp^0,0,c
 14009   00312A  EF99  F018         	goto	u3931
 14010   00312E  EF9B  F018         	goto	u3930
 14011   003132                     u3931:
 14012   003132  EF9C  F018         	goto	l4359
 14013   003136                     u3930:
 14014   003136  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14015   003138                     l4359:
 14016   003138  90D8               	bcf	status,0,c
 14017   00313A  3023               	rrcf	___flmul@bexp^0,w,c
 14018   00313C  6E27               	movwf	(___flmul@prod+3)^0,c
 14019   00313E                     l4361:
 14020   00313E  501D               	movf	___flmul@sign^0,w,c
 14021   003140  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14022   003142  C024  F011         	movff	___flmul@prod,?___flmul
 14023   003146  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14024   00314A  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14025   00314E  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14026   003152                     l1296:
 14027   003152  0012               	return		;funcret
 14028   003154                     __end_of___flmul:
 14029                           	callstack 0
 14030                           
 14031 ;; *************** function ___flge *****************
 14032 ;; Defined at:
 14033 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14034 ;; Parameters:    Size  Location     Type
 14035 ;;  ff1             4   41[COMRAM] unsigned char 
 14036 ;;  ff2             4   45[COMRAM] unsigned char 
 14037 ;; Auto vars:     Size  Location     Type
 14038 ;;		None
 14039 ;; Return value:  Size  Location     Type
 14040 ;;		None               void
 14041 ;; Registers used:
 14042 ;;		wreg, status,2, status,0
 14043 ;; Tracked objects:
 14044 ;;		On entry : 0/0
 14045 ;;		On exit  : 0/0
 14046 ;;		Unchanged: 0/0
 14047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14048 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14050 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14051 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14052 ;;Total ram usage:       12 bytes
 14053 ;; Hardware stack levels used: 1
 14054 ;; Hardware stack levels required when called: 1
 14055 ;; This function calls:
 14056 ;;		Nothing
 14057 ;; This function is called by:
 14058 ;;		_Colour_decider
 14059 ;;		_efgtoa
 14060 ;; This function uses a non-reentrant model
 14061 ;;
 14062                           
 14063                           	psect	text75
 14064   004970                     __ptext75:
 14065                           	callstack 0
 14066   004970                     ___flge:
 14067                           	callstack 25
 14068   004970  0E00               	movlw	0
 14069   004972  142A               	andwf	___flge@ff1^0,w,c
 14070   004974  6E32               	movwf	??___flge^0,c
 14071   004976  0E00               	movlw	0
 14072   004978  142B               	andwf	(___flge@ff1+1)^0,w,c
 14073   00497A  6E33               	movwf	(??___flge+1)^0,c
 14074   00497C  0E80               	movlw	128
 14075   00497E  142C               	andwf	(___flge@ff1+2)^0,w,c
 14076   004980  6E34               	movwf	(??___flge+2)^0,c
 14077   004982  0E7F               	movlw	127
 14078   004984  142D               	andwf	(___flge@ff1+3)^0,w,c
 14079   004986  6E35               	movwf	(??___flge+3)^0,c
 14080   004988  5032               	movf	??___flge^0,w,c
 14081   00498A  1033               	iorwf	(??___flge+1)^0,w,c
 14082   00498C  1034               	iorwf	(??___flge+2)^0,w,c
 14083   00498E  1035               	iorwf	(??___flge+3)^0,w,c
 14084   004990  A4D8               	btfss	status,2,c
 14085   004992  EFCD  F024         	goto	u3971
 14086   004996  EFCF  F024         	goto	u3970
 14087   00499A                     u3971:
 14088   00499A  EFD7  F024         	goto	l4393
 14089   00499E                     u3970:
 14090   00499E  0E00               	movlw	0
 14091   0049A0  6E2A               	movwf	___flge@ff1^0,c
 14092   0049A2  0E00               	movlw	0
 14093   0049A4  6E2B               	movwf	(___flge@ff1+1)^0,c
 14094   0049A6  0E00               	movlw	0
 14095   0049A8  6E2C               	movwf	(___flge@ff1+2)^0,c
 14096   0049AA  0E00               	movlw	0
 14097   0049AC  6E2D               	movwf	(___flge@ff1+3)^0,c
 14098   0049AE                     l4393:
 14099   0049AE  0E00               	movlw	0
 14100   0049B0  142E               	andwf	___flge@ff2^0,w,c
 14101   0049B2  6E32               	movwf	??___flge^0,c
 14102   0049B4  0E00               	movlw	0
 14103   0049B6  142F               	andwf	(___flge@ff2+1)^0,w,c
 14104   0049B8  6E33               	movwf	(??___flge+1)^0,c
 14105   0049BA  0E80               	movlw	128
 14106   0049BC  1430               	andwf	(___flge@ff2+2)^0,w,c
 14107   0049BE  6E34               	movwf	(??___flge+2)^0,c
 14108   0049C0  0E7F               	movlw	127
 14109   0049C2  1431               	andwf	(___flge@ff2+3)^0,w,c
 14110   0049C4  6E35               	movwf	(??___flge+3)^0,c
 14111   0049C6  5032               	movf	??___flge^0,w,c
 14112   0049C8  1033               	iorwf	(??___flge+1)^0,w,c
 14113   0049CA  1034               	iorwf	(??___flge+2)^0,w,c
 14114   0049CC  1035               	iorwf	(??___flge+3)^0,w,c
 14115   0049CE  A4D8               	btfss	status,2,c
 14116   0049D0  EFEC  F024         	goto	u3981
 14117   0049D4  EFEE  F024         	goto	u3980
 14118   0049D8                     u3981:
 14119   0049D8  EFF6  F024         	goto	l4397
 14120   0049DC                     u3980:
 14121   0049DC  0E00               	movlw	0
 14122   0049DE  6E2E               	movwf	___flge@ff2^0,c
 14123   0049E0  0E00               	movlw	0
 14124   0049E2  6E2F               	movwf	(___flge@ff2+1)^0,c
 14125   0049E4  0E00               	movlw	0
 14126   0049E6  6E30               	movwf	(___flge@ff2+2)^0,c
 14127   0049E8  0E00               	movlw	0
 14128   0049EA  6E31               	movwf	(___flge@ff2+3)^0,c
 14129   0049EC                     l4397:
 14130   0049EC  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14131   0049EE  EFFB  F024         	goto	u3991
 14132   0049F2  EFFD  F024         	goto	u3990
 14133   0049F6                     u3991:
 14134   0049F6  EF06  F025         	goto	l4401
 14135   0049FA                     u3990:
 14136   0049FA  6C2A               	negf	___flge@ff1^0,c
 14137   0049FC  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14138   0049FE  B0D8               	btfsc	status,0,c
 14139   004A00  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14140   004A02  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14141   004A04  B0D8               	btfsc	status,0,c
 14142   004A06  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14143   004A08  0E80               	movlw	128
 14144   004A0A  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14145   004A0C                     l4401:
 14146   004A0C  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14147   004A0E  EF0B  F025         	goto	u4001
 14148   004A12  EF0D  F025         	goto	u4000
 14149   004A16                     u4001:
 14150   004A16  EF16  F025         	goto	l943
 14151   004A1A                     u4000:
 14152   004A1A  6C2E               	negf	___flge@ff2^0,c
 14153   004A1C  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14154   004A1E  B0D8               	btfsc	status,0,c
 14155   004A20  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14156   004A22  1E30               	comf	(___flge@ff2+2)^0,f,c
 14157   004A24  B0D8               	btfsc	status,0,c
 14158   004A26  2A30               	incf	(___flge@ff2+2)^0,f,c
 14159   004A28  0E80               	movlw	128
 14160   004A2A  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14161   004A2C                     l943:
 14162   004A2C  0E00               	movlw	0
 14163   004A2E  1A2A               	xorwf	___flge@ff1^0,f,c
 14164   004A30  0E00               	movlw	0
 14165   004A32  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14166   004A34  0E00               	movlw	0
 14167   004A36  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14168   004A38  0E80               	movlw	128
 14169   004A3A  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14170   004A3C  0E00               	movlw	0
 14171   004A3E  1A2E               	xorwf	___flge@ff2^0,f,c
 14172   004A40  0E00               	movlw	0
 14173   004A42  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14174   004A44  0E00               	movlw	0
 14175   004A46  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14176   004A48  0E80               	movlw	128
 14177   004A4A  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14178   004A4C  502E               	movf	___flge@ff2^0,w,c
 14179   004A4E  5C2A               	subwf	___flge@ff1^0,w,c
 14180   004A50  502F               	movf	(___flge@ff2+1)^0,w,c
 14181   004A52  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14182   004A54  5030               	movf	(___flge@ff2+2)^0,w,c
 14183   004A56  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14184   004A58  5031               	movf	(___flge@ff2+3)^0,w,c
 14185   004A5A  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14186   004A5C  B0D8               	btfsc	status,0,c
 14187   004A5E  EF33  F025         	goto	u4011
 14188   004A62  EF35  F025         	goto	u4010
 14189   004A66                     u4011:
 14190   004A66  EF38  F025         	goto	l4407
 14191   004A6A                     u4010:
 14192   004A6A  90D8               	bcf	status,0,c
 14193   004A6C  EF39  F025         	goto	l948
 14194   004A70                     l4407:
 14195   004A70  80D8               	bsf	status,0,c
 14196   004A72                     l948:
 14197   004A72  0012               	return		;funcret
 14198   004A74                     __end_of___flge:
 14199                           	callstack 0
 14200                           
 14201 ;; *************** function ___fleq *****************
 14202 ;; Defined at:
 14203 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14204 ;; Parameters:    Size  Location     Type
 14205 ;;  ff1             4   49[COMRAM] unsigned char 
 14206 ;;  ff2             4   53[COMRAM] unsigned char 
 14207 ;; Auto vars:     Size  Location     Type
 14208 ;;		None
 14209 ;; Return value:  Size  Location     Type
 14210 ;;		None               void
 14211 ;; Registers used:
 14212 ;;		wreg, status,2, status,0
 14213 ;; Tracked objects:
 14214 ;;		On entry : 0/0
 14215 ;;		On exit  : 0/0
 14216 ;;		Unchanged: 0/0
 14217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14218 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14220 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14221 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14222 ;;Total ram usage:       12 bytes
 14223 ;; Hardware stack levels used: 1
 14224 ;; Hardware stack levels required when called: 1
 14225 ;; This function calls:
 14226 ;;		Nothing
 14227 ;; This function is called by:
 14228 ;;		_Colour_decider
 14229 ;;		_efgtoa
 14230 ;; This function uses a non-reentrant model
 14231 ;;
 14232                           
 14233                           	psect	text76
 14234   004E52                     __ptext76:
 14235                           	callstack 0
 14236   004E52                     ___fleq:
 14237                           	callstack 25
 14238   004E52  0E00               	movlw	0
 14239   004E54  1432               	andwf	___fleq@ff1^0,w,c
 14240   004E56  6E3A               	movwf	??___fleq^0,c
 14241   004E58  0E00               	movlw	0
 14242   004E5A  1433               	andwf	(___fleq@ff1+1)^0,w,c
 14243   004E5C  6E3B               	movwf	(??___fleq+1)^0,c
 14244   004E5E  0E80               	movlw	128
 14245   004E60  1434               	andwf	(___fleq@ff1+2)^0,w,c
 14246   004E62  6E3C               	movwf	(??___fleq+2)^0,c
 14247   004E64  0E7F               	movlw	127
 14248   004E66  1435               	andwf	(___fleq@ff1+3)^0,w,c
 14249   004E68  6E3D               	movwf	(??___fleq+3)^0,c
 14250   004E6A  503A               	movf	??___fleq^0,w,c
 14251   004E6C  103B               	iorwf	(??___fleq+1)^0,w,c
 14252   004E6E  103C               	iorwf	(??___fleq+2)^0,w,c
 14253   004E70  103D               	iorwf	(??___fleq+3)^0,w,c
 14254   004E72  A4D8               	btfss	status,2,c
 14255   004E74  EF3E  F027         	goto	u3941
 14256   004E78  EF40  F027         	goto	u3940
 14257   004E7C                     u3941:
 14258   004E7C  EF48  F027         	goto	l4377
 14259   004E80                     u3940:
 14260   004E80  0E00               	movlw	0
 14261   004E82  6E32               	movwf	___fleq@ff1^0,c
 14262   004E84  0E00               	movlw	0
 14263   004E86  6E33               	movwf	(___fleq@ff1+1)^0,c
 14264   004E88  0E00               	movlw	0
 14265   004E8A  6E34               	movwf	(___fleq@ff1+2)^0,c
 14266   004E8C  0E00               	movlw	0
 14267   004E8E  6E35               	movwf	(___fleq@ff1+3)^0,c
 14268   004E90                     l4377:
 14269   004E90  0E00               	movlw	0
 14270   004E92  1436               	andwf	___fleq@ff2^0,w,c
 14271   004E94  6E3A               	movwf	??___fleq^0,c
 14272   004E96  0E00               	movlw	0
 14273   004E98  1437               	andwf	(___fleq@ff2+1)^0,w,c
 14274   004E9A  6E3B               	movwf	(??___fleq+1)^0,c
 14275   004E9C  0E80               	movlw	128
 14276   004E9E  1438               	andwf	(___fleq@ff2+2)^0,w,c
 14277   004EA0  6E3C               	movwf	(??___fleq+2)^0,c
 14278   004EA2  0E7F               	movlw	127
 14279   004EA4  1439               	andwf	(___fleq@ff2+3)^0,w,c
 14280   004EA6  6E3D               	movwf	(??___fleq+3)^0,c
 14281   004EA8  503A               	movf	??___fleq^0,w,c
 14282   004EAA  103B               	iorwf	(??___fleq+1)^0,w,c
 14283   004EAC  103C               	iorwf	(??___fleq+2)^0,w,c
 14284   004EAE  103D               	iorwf	(??___fleq+3)^0,w,c
 14285   004EB0  A4D8               	btfss	status,2,c
 14286   004EB2  EF5D  F027         	goto	u3951
 14287   004EB6  EF5F  F027         	goto	u3950
 14288   004EBA                     u3951:
 14289   004EBA  EF67  F027         	goto	l4381
 14290   004EBE                     u3950:
 14291   004EBE  0E00               	movlw	0
 14292   004EC0  6E36               	movwf	___fleq@ff2^0,c
 14293   004EC2  0E00               	movlw	0
 14294   004EC4  6E37               	movwf	(___fleq@ff2+1)^0,c
 14295   004EC6  0E00               	movlw	0
 14296   004EC8  6E38               	movwf	(___fleq@ff2+2)^0,c
 14297   004ECA  0E00               	movlw	0
 14298   004ECC  6E39               	movwf	(___fleq@ff2+3)^0,c
 14299   004ECE                     l4381:
 14300   004ECE  5036               	movf	___fleq@ff2^0,w,c
 14301   004ED0  1832               	xorwf	___fleq@ff1^0,w,c
 14302   004ED2  E10F               	bnz	u3960
 14303   004ED4  5037               	movf	(___fleq@ff2+1)^0,w,c
 14304   004ED6  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 14305   004ED8  E10C               	bnz	u3960
 14306   004EDA  5038               	movf	(___fleq@ff2+2)^0,w,c
 14307   004EDC  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 14308   004EDE  E109               	bnz	u3960
 14309   004EE0  5039               	movf	(___fleq@ff2+3)^0,w,c
 14310   004EE2  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 14311   004EE4  B4D8               	btfsc	status,2,c
 14312   004EE6  EF77  F027         	goto	u3961
 14313   004EEA  EF79  F027         	goto	u3960
 14314   004EEE                     u3961:
 14315   004EEE  EF7C  F027         	goto	l4385
 14316   004EF2                     u3960:
 14317   004EF2  90D8               	bcf	status,0,c
 14318   004EF4  EF7D  F027         	goto	l937
 14319   004EF8                     l4385:
 14320   004EF8  80D8               	bsf	status,0,c
 14321   004EFA                     l937:
 14322   004EFA  0012               	return		;funcret
 14323   004EFC                     __end_of___fleq:
 14324                           	callstack 0
 14325                           
 14326 ;; *************** function ___fldiv *****************
 14327 ;; Defined at:
 14328 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14329 ;; Parameters:    Size  Location     Type
 14330 ;;  b               4   49[COMRAM] unsigned char 
 14331 ;;  a               4   53[COMRAM] unsigned char 
 14332 ;; Auto vars:     Size  Location     Type
 14333 ;;  grs             4   68[COMRAM] unsigned long 
 14334 ;;  rem             4   61[COMRAM] unsigned long 
 14335 ;;  new_exp         2   66[COMRAM] short 
 14336 ;;  aexp            1   73[COMRAM] unsigned char 
 14337 ;;  bexp            1   72[COMRAM] unsigned char 
 14338 ;;  sign            1   65[COMRAM] unsigned char 
 14339 ;; Return value:  Size  Location     Type
 14340 ;;                  4   49[COMRAM] unsigned char 
 14341 ;; Registers used:
 14342 ;;		wreg, status,2, status,0
 14343 ;; Tracked objects:
 14344 ;;		On entry : 0/0
 14345 ;;		On exit  : 0/0
 14346 ;;		Unchanged: 0/0
 14347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14348 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14349 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14350 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14351 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14352 ;;Total ram usage:       25 bytes
 14353 ;; Hardware stack levels used: 1
 14354 ;; Hardware stack levels required when called: 1
 14355 ;; This function calls:
 14356 ;;		Nothing
 14357 ;; This function is called by:
 14358 ;;		_colour_rel
 14359 ;;		_Colour_decider
 14360 ;;		_efgtoa
 14361 ;; This function uses a non-reentrant model
 14362 ;;
 14363                           
 14364                           	psect	text77
 14365   003154                     __ptext77:
 14366                           	callstack 0
 14367   003154                     ___fldiv:
 14368                           	callstack 25
 14369   003154  5035               	movf	(___fldiv@b+3)^0,w,c
 14370   003156  0B80               	andlw	128
 14371   003158  6E42               	movwf	___fldiv@sign^0,c
 14372   00315A  5035               	movf	(___fldiv@b+3)^0,w,c
 14373   00315C  2435               	addwf	(___fldiv@b+3)^0,w,c
 14374   00315E  6E49               	movwf	___fldiv@bexp^0,c
 14375   003160  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14376   003162  EFB5  F018         	goto	u3521
 14377   003166  EFB7  F018         	goto	u3520
 14378   00316A                     u3521:
 14379   00316A  EFB8  F018         	goto	l4105
 14380   00316E                     u3520:
 14381   00316E  8049               	bsf	___fldiv@bexp^0,0,c
 14382   003170                     l4105:
 14383   003170  5049               	movf	___fldiv@bexp^0,w,c
 14384   003172  B4D8               	btfsc	status,2,c
 14385   003174  EFBE  F018         	goto	u3531
 14386   003178  EFC0  F018         	goto	u3530
 14387   00317C                     u3531:
 14388   00317C  EFD5  F018         	goto	l4115
 14389   003180                     u3530:
 14390   003180  2849               	incf	___fldiv@bexp^0,w,c
 14391   003182  A4D8               	btfss	status,2,c
 14392   003184  EFC6  F018         	goto	u3541
 14393   003188  EFC8  F018         	goto	u3540
 14394   00318C                     u3541:
 14395   00318C  EFD0  F018         	goto	l4111
 14396   003190                     u3540:
 14397   003190  0E00               	movlw	0
 14398   003192  6E32               	movwf	___fldiv@b^0,c
 14399   003194  0E00               	movlw	0
 14400   003196  6E33               	movwf	(___fldiv@b+1)^0,c
 14401   003198  0E00               	movlw	0
 14402   00319A  6E34               	movwf	(___fldiv@b+2)^0,c
 14403   00319C  0E00               	movlw	0
 14404   00319E  6E35               	movwf	(___fldiv@b+3)^0,c
 14405   0031A0                     l4111:
 14406   0031A0  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14407   0031A2  0E00               	movlw	0
 14408   0031A4  6E35               	movwf	(___fldiv@b+3)^0,c
 14409   0031A6  EFDD  F018         	goto	l4117
 14410   0031AA                     l4115:
 14411   0031AA  0E00               	movlw	0
 14412   0031AC  6E32               	movwf	___fldiv@b^0,c
 14413   0031AE  0E00               	movlw	0
 14414   0031B0  6E33               	movwf	(___fldiv@b+1)^0,c
 14415   0031B2  0E00               	movlw	0
 14416   0031B4  6E34               	movwf	(___fldiv@b+2)^0,c
 14417   0031B6  0E00               	movlw	0
 14418   0031B8  6E35               	movwf	(___fldiv@b+3)^0,c
 14419   0031BA                     l4117:
 14420   0031BA  5039               	movf	(___fldiv@a+3)^0,w,c
 14421   0031BC  0B80               	andlw	128
 14422   0031BE  1A42               	xorwf	___fldiv@sign^0,f,c
 14423   0031C0  5039               	movf	(___fldiv@a+3)^0,w,c
 14424   0031C2  2439               	addwf	(___fldiv@a+3)^0,w,c
 14425   0031C4  6E4A               	movwf	___fldiv@aexp^0,c
 14426   0031C6  AE38               	btfss	(___fldiv@a+2)^0,7,c
 14427   0031C8  EFE8  F018         	goto	u3551
 14428   0031CC  EFEA  F018         	goto	u3550
 14429   0031D0                     u3551:
 14430   0031D0  EFEB  F018         	goto	l4125
 14431   0031D4                     u3550:
 14432   0031D4  804A               	bsf	___fldiv@aexp^0,0,c
 14433   0031D6                     l4125:
 14434   0031D6  504A               	movf	___fldiv@aexp^0,w,c
 14435   0031D8  B4D8               	btfsc	status,2,c
 14436   0031DA  EFF1  F018         	goto	u3561
 14437   0031DE  EFF3  F018         	goto	u3560
 14438   0031E2                     u3561:
 14439   0031E2  EF08  F019         	goto	l4135
 14440   0031E6                     u3560:
 14441   0031E6  284A               	incf	___fldiv@aexp^0,w,c
 14442   0031E8  A4D8               	btfss	status,2,c
 14443   0031EA  EFF9  F018         	goto	u3571
 14444   0031EE  EFFB  F018         	goto	u3570
 14445   0031F2                     u3571:
 14446   0031F2  EF03  F019         	goto	l4131
 14447   0031F6                     u3570:
 14448   0031F6  0E00               	movlw	0
 14449   0031F8  6E36               	movwf	___fldiv@a^0,c
 14450   0031FA  0E00               	movlw	0
 14451   0031FC  6E37               	movwf	(___fldiv@a+1)^0,c
 14452   0031FE  0E00               	movlw	0
 14453   003200  6E38               	movwf	(___fldiv@a+2)^0,c
 14454   003202  0E00               	movlw	0
 14455   003204  6E39               	movwf	(___fldiv@a+3)^0,c
 14456   003206                     l4131:
 14457   003206  8E38               	bsf	(___fldiv@a+2)^0,7,c
 14458   003208  0E00               	movlw	0
 14459   00320A  6E39               	movwf	(___fldiv@a+3)^0,c
 14460   00320C  EF10  F019         	goto	l4137
 14461   003210                     l4135:
 14462   003210  0E00               	movlw	0
 14463   003212  6E36               	movwf	___fldiv@a^0,c
 14464   003214  0E00               	movlw	0
 14465   003216  6E37               	movwf	(___fldiv@a+1)^0,c
 14466   003218  0E00               	movlw	0
 14467   00321A  6E38               	movwf	(___fldiv@a+2)^0,c
 14468   00321C  0E00               	movlw	0
 14469   00321E  6E39               	movwf	(___fldiv@a+3)^0,c
 14470   003220                     l4137:
 14471   003220  5036               	movf	___fldiv@a^0,w,c
 14472   003222  1037               	iorwf	(___fldiv@a+1)^0,w,c
 14473   003224  1038               	iorwf	(___fldiv@a+2)^0,w,c
 14474   003226  1039               	iorwf	(___fldiv@a+3)^0,w,c
 14475   003228  A4D8               	btfss	status,2,c
 14476   00322A  EF19  F019         	goto	u3581
 14477   00322E  EF1B  F019         	goto	u3580
 14478   003232                     u3581:
 14479   003232  EF33  F019         	goto	l4149
 14480   003236                     u3580:
 14481   003236  0E00               	movlw	0
 14482   003238  6E32               	movwf	___fldiv@b^0,c
 14483   00323A  0E00               	movlw	0
 14484   00323C  6E33               	movwf	(___fldiv@b+1)^0,c
 14485   00323E  0E00               	movlw	0
 14486   003240  6E34               	movwf	(___fldiv@b+2)^0,c
 14487   003242  0E00               	movlw	0
 14488   003244  6E35               	movwf	(___fldiv@b+3)^0,c
 14489   003246  0E80               	movlw	128
 14490   003248  1234               	iorwf	(___fldiv@b+2)^0,f,c
 14491   00324A  0E7F               	movlw	127
 14492   00324C  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14493   00324E                     l4143:
 14494   00324E  5042               	movf	___fldiv@sign^0,w,c
 14495   003250  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14496   003252  C032  F032         	movff	___fldiv@b,?___fldiv
 14497   003256  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 14498   00325A  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 14499   00325E  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 14500   003262  EF76  F01A         	goto	l1260
 14501   003266                     l4149:
 14502   003266  5049               	movf	___fldiv@bexp^0,w,c
 14503   003268  A4D8               	btfss	status,2,c
 14504   00326A  EF39  F019         	goto	u3591
 14505   00326E  EF3B  F019         	goto	u3590
 14506   003272                     u3591:
 14507   003272  EF45  F019         	goto	l4157
 14508   003276                     u3590:
 14509   003276  0E00               	movlw	0
 14510   003278  6E32               	movwf	?___fldiv^0,c
 14511   00327A  0E00               	movlw	0
 14512   00327C  6E33               	movwf	(?___fldiv+1)^0,c
 14513   00327E  0E00               	movlw	0
 14514   003280  6E34               	movwf	(?___fldiv+2)^0,c
 14515   003282  0E00               	movlw	0
 14516   003284  6E35               	movwf	(?___fldiv+3)^0,c
 14517   003286  EF76  F01A         	goto	l1260
 14518   00328A                     l4157:
 14519   00328A  504A               	movf	___fldiv@aexp^0,w,c
 14520   00328C  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 14521   003290  6A3B               	clrf	(??___fldiv+1)^0,c
 14522   003292  5E3A               	subwf	??___fldiv^0,f,c
 14523   003294  0E00               	movlw	0
 14524   003296  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 14525   003298  0E7F               	movlw	127
 14526   00329A  243A               	addwf	??___fldiv^0,w,c
 14527   00329C  6E43               	movwf	___fldiv@new_exp^0,c
 14528   00329E  0E00               	movlw	0
 14529   0032A0  203B               	addwfc	(??___fldiv+1)^0,w,c
 14530   0032A2  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14531   0032A4  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 14532   0032A8  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 14533   0032AC  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 14534   0032B0  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 14535   0032B4  0E00               	movlw	0
 14536   0032B6  6E32               	movwf	___fldiv@b^0,c
 14537   0032B8  0E00               	movlw	0
 14538   0032BA  6E33               	movwf	(___fldiv@b+1)^0,c
 14539   0032BC  0E00               	movlw	0
 14540   0032BE  6E34               	movwf	(___fldiv@b+2)^0,c
 14541   0032C0  0E00               	movlw	0
 14542   0032C2  6E35               	movwf	(___fldiv@b+3)^0,c
 14543   0032C4  0E00               	movlw	0
 14544   0032C6  6E45               	movwf	___fldiv@grs^0,c
 14545   0032C8  0E00               	movlw	0
 14546   0032CA  6E46               	movwf	(___fldiv@grs+1)^0,c
 14547   0032CC  0E00               	movlw	0
 14548   0032CE  6E47               	movwf	(___fldiv@grs+2)^0,c
 14549   0032D0  0E00               	movlw	0
 14550   0032D2  6E48               	movwf	(___fldiv@grs+3)^0,c
 14551   0032D4  0E00               	movlw	0
 14552   0032D6  6E4A               	movwf	___fldiv@aexp^0,c
 14553   0032D8  EFA6  F019         	goto	l1262
 14554   0032DC                     l4167:
 14555   0032DC  504A               	movf	___fldiv@aexp^0,w,c
 14556   0032DE  B4D8               	btfsc	status,2,c
 14557   0032E0  EF74  F019         	goto	u3601
 14558   0032E4  EF76  F019         	goto	u3600
 14559   0032E8                     u3601:
 14560   0032E8  EF8D  F019         	goto	l4175
 14561   0032EC                     u3600:
 14562   0032EC  90D8               	bcf	status,0,c
 14563   0032EE  363E               	rlcf	___fldiv@rem^0,f,c
 14564   0032F0  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 14565   0032F2  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 14566   0032F4  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 14567   0032F6  90D8               	bcf	status,0,c
 14568   0032F8  3632               	rlcf	___fldiv@b^0,f,c
 14569   0032FA  3633               	rlcf	(___fldiv@b+1)^0,f,c
 14570   0032FC  3634               	rlcf	(___fldiv@b+2)^0,f,c
 14571   0032FE  3635               	rlcf	(___fldiv@b+3)^0,f,c
 14572   003300  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 14573   003302  EF85  F019         	goto	u3611
 14574   003306  EF87  F019         	goto	u3610
 14575   00330A                     u3611:
 14576   00330A  EF88  F019         	goto	l1265
 14577   00330E                     u3610:
 14578   00330E  8032               	bsf	___fldiv@b^0,0,c
 14579   003310                     l1265:
 14580   003310  90D8               	bcf	status,0,c
 14581   003312  3645               	rlcf	___fldiv@grs^0,f,c
 14582   003314  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 14583   003316  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 14584   003318  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 14585   00331A                     l4175:
 14586   00331A  5036               	movf	___fldiv@a^0,w,c
 14587   00331C  5C3E               	subwf	___fldiv@rem^0,w,c
 14588   00331E  5037               	movf	(___fldiv@a+1)^0,w,c
 14589   003320  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 14590   003322  5038               	movf	(___fldiv@a+2)^0,w,c
 14591   003324  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 14592   003326  5039               	movf	(___fldiv@a+3)^0,w,c
 14593   003328  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 14594   00332A  A0D8               	btfss	status,0,c
 14595   00332C  EF9A  F019         	goto	u3621
 14596   003330  EF9C  F019         	goto	u3620
 14597   003334                     u3621:
 14598   003334  EFA5  F019         	goto	l4181
 14599   003338                     u3620:
 14600   003338  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 14601   00333A  5036               	movf	___fldiv@a^0,w,c
 14602   00333C  5E3E               	subwf	___fldiv@rem^0,f,c
 14603   00333E  5037               	movf	(___fldiv@a+1)^0,w,c
 14604   003340  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 14605   003342  5038               	movf	(___fldiv@a+2)^0,w,c
 14606   003344  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 14607   003346  5039               	movf	(___fldiv@a+3)^0,w,c
 14608   003348  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 14609   00334A                     l4181:
 14610   00334A  2A4A               	incf	___fldiv@aexp^0,f,c
 14611   00334C                     l1262:
 14612   00334C  0E19               	movlw	25
 14613   00334E  644A               	cpfsgt	___fldiv@aexp^0,c
 14614   003350  EFAC  F019         	goto	u3631
 14615   003354  EFAE  F019         	goto	u3630
 14616   003358                     u3631:
 14617   003358  EF6E  F019         	goto	l4167
 14618   00335C                     u3630:
 14619   00335C  503E               	movf	___fldiv@rem^0,w,c
 14620   00335E  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 14621   003360  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 14622   003362  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 14623   003364  B4D8               	btfsc	status,2,c
 14624   003366  EFB7  F019         	goto	u3641
 14625   00336A  EFB9  F019         	goto	u3640
 14626   00336E                     u3641:
 14627   00336E  EFD1  F019         	goto	l4193
 14628   003372                     u3640:
 14629   003372  8045               	bsf	___fldiv@grs^0,0,c
 14630   003374  EFD1  F019         	goto	l4193
 14631   003378                     l4187:
 14632   003378  90D8               	bcf	status,0,c
 14633   00337A  3632               	rlcf	___fldiv@b^0,f,c
 14634   00337C  3633               	rlcf	(___fldiv@b+1)^0,f,c
 14635   00337E  3634               	rlcf	(___fldiv@b+2)^0,f,c
 14636   003380  3635               	rlcf	(___fldiv@b+3)^0,f,c
 14637   003382  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 14638   003384  EFC6  F019         	goto	u3651
 14639   003388  EFC8  F019         	goto	u3650
 14640   00338C                     u3651:
 14641   00338C  EFC9  F019         	goto	l1271
 14642   003390                     u3650:
 14643   003390  8032               	bsf	___fldiv@b^0,0,c
 14644   003392                     l1271:
 14645   003392  90D8               	bcf	status,0,c
 14646   003394  3645               	rlcf	___fldiv@grs^0,f,c
 14647   003396  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 14648   003398  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 14649   00339A  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 14650   00339C  0643               	decf	___fldiv@new_exp^0,f,c
 14651   00339E  A0D8               	btfss	status,0,c
 14652   0033A0  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 14653   0033A2                     l4193:
 14654   0033A2  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14655   0033A4  EFD6  F019         	goto	u3661
 14656   0033A8  EFD8  F019         	goto	u3660
 14657   0033AC                     u3661:
 14658   0033AC  EFBC  F019         	goto	l4187
 14659   0033B0                     u3660:
 14660   0033B0  0E00               	movlw	0
 14661   0033B2  6E4A               	movwf	___fldiv@aexp^0,c
 14662   0033B4  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 14663   0033B6  EFDF  F019         	goto	u3671
 14664   0033BA  EFE1  F019         	goto	u3670
 14665   0033BE                     u3671:
 14666   0033BE  EF05  F01A         	goto	l1273
 14667   0033C2                     u3670:
 14668   0033C2  0EFF               	movlw	255
 14669   0033C4  1445               	andwf	___fldiv@grs^0,w,c
 14670   0033C6  6E3A               	movwf	??___fldiv^0,c
 14671   0033C8  0EFF               	movlw	255
 14672   0033CA  1446               	andwf	(___fldiv@grs+1)^0,w,c
 14673   0033CC  6E3B               	movwf	(??___fldiv+1)^0,c
 14674   0033CE  0EFF               	movlw	255
 14675   0033D0  1447               	andwf	(___fldiv@grs+2)^0,w,c
 14676   0033D2  6E3C               	movwf	(??___fldiv+2)^0,c
 14677   0033D4  0E7F               	movlw	127
 14678   0033D6  1448               	andwf	(___fldiv@grs+3)^0,w,c
 14679   0033D8  6E3D               	movwf	(??___fldiv+3)^0,c
 14680   0033DA  503A               	movf	??___fldiv^0,w,c
 14681   0033DC  103B               	iorwf	(??___fldiv+1)^0,w,c
 14682   0033DE  103C               	iorwf	(??___fldiv+2)^0,w,c
 14683   0033E0  103D               	iorwf	(??___fldiv+3)^0,w,c
 14684   0033E2  B4D8               	btfsc	status,2,c
 14685   0033E4  EFF6  F019         	goto	u3681
 14686   0033E8  EFF8  F019         	goto	u3680
 14687   0033EC                     u3681:
 14688   0033EC  EFFC  F019         	goto	l1274
 14689   0033F0                     u3680:
 14690   0033F0                     l4201:
 14691   0033F0  0E01               	movlw	1
 14692   0033F2  6E4A               	movwf	___fldiv@aexp^0,c
 14693   0033F4  EF05  F01A         	goto	l1273
 14694   0033F8                     l1274:
 14695   0033F8  A032               	btfss	___fldiv@b^0,0,c
 14696   0033FA  EF01  F01A         	goto	u3691
 14697   0033FE  EF03  F01A         	goto	u3690
 14698   003402                     u3691:
 14699   003402  EF05  F01A         	goto	l1273
 14700   003406                     u3690:
 14701   003406  EFF8  F019         	goto	l4201
 14702   00340A                     l1273:
 14703   00340A  504A               	movf	___fldiv@aexp^0,w,c
 14704   00340C  B4D8               	btfsc	status,2,c
 14705   00340E  EF0B  F01A         	goto	u3701
 14706   003412  EF0D  F01A         	goto	u3700
 14707   003416                     u3701:
 14708   003416  EF31  F01A         	goto	l4213
 14709   00341A                     u3700:
 14710   00341A  0E01               	movlw	1
 14711   00341C  2632               	addwf	___fldiv@b^0,f,c
 14712   00341E  0E00               	movlw	0
 14713   003420  2233               	addwfc	(___fldiv@b+1)^0,f,c
 14714   003422  2234               	addwfc	(___fldiv@b+2)^0,f,c
 14715   003424  2235               	addwfc	(___fldiv@b+3)^0,f,c
 14716   003426  A035               	btfss	(___fldiv@b+3)^0,0,c
 14717   003428  EF18  F01A         	goto	u3711
 14718   00342C  EF1A  F01A         	goto	u3710
 14719   003430                     u3711:
 14720   003430  EF31  F01A         	goto	l4213
 14721   003434                     u3710:
 14722   003434  C032  F03A         	movff	___fldiv@b,??___fldiv
 14723   003438  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 14724   00343C  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 14725   003440  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 14726   003444  343D               	rlcf	(??___fldiv+3)^0,w,c
 14727   003446  323D               	rrcf	(??___fldiv+3)^0,f,c
 14728   003448  323C               	rrcf	(??___fldiv+2)^0,f,c
 14729   00344A  323B               	rrcf	(??___fldiv+1)^0,f,c
 14730   00344C  323A               	rrcf	??___fldiv^0,f,c
 14731   00344E  C03A  F032         	movff	??___fldiv,___fldiv@b
 14732   003452  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 14733   003456  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 14734   00345A  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 14735   00345E  4A43               	infsnz	___fldiv@new_exp^0,f,c
 14736   003460  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 14737   003462                     l4213:
 14738   003462  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14739   003464  EF3C  F01A         	goto	u3721
 14740   003468  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 14741   00346A  E108               	bnz	u3720
 14742   00346C  2843               	incf	___fldiv@new_exp^0,w,c
 14743   00346E  A0D8               	btfss	status,0,c
 14744   003470  EF3C  F01A         	goto	u3721
 14745   003474  EF3E  F01A         	goto	u3720
 14746   003478                     u3721:
 14747   003478  EF49  F01A         	goto	l4217
 14748   00347C                     u3720:
 14749   00347C  0E00               	movlw	0
 14750   00347E  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14751   003480  6843               	setf	___fldiv@new_exp^0,c
 14752   003482  0E00               	movlw	0
 14753   003484  6E32               	movwf	___fldiv@b^0,c
 14754   003486  0E00               	movlw	0
 14755   003488  6E33               	movwf	(___fldiv@b+1)^0,c
 14756   00348A  0E00               	movlw	0
 14757   00348C  6E34               	movwf	(___fldiv@b+2)^0,c
 14758   00348E  0E00               	movlw	0
 14759   003490  6E35               	movwf	(___fldiv@b+3)^0,c
 14760   003492                     l4217:
 14761   003492  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14762   003494  EF56  F01A         	goto	u3730
 14763   003498  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 14764   00349A  E106               	bnz	u3731
 14765   00349C  0443               	decf	___fldiv@new_exp^0,w,c
 14766   00349E  B0D8               	btfsc	status,0,c
 14767   0034A0  EF54  F01A         	goto	u3731
 14768   0034A4  EF56  F01A         	goto	u3730
 14769   0034A8                     u3731:
 14770   0034A8  EF64  F01A         	goto	l4221
 14771   0034AC                     u3730:
 14772   0034AC  0E00               	movlw	0
 14773   0034AE  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14774   0034B0  0E00               	movlw	0
 14775   0034B2  6E43               	movwf	___fldiv@new_exp^0,c
 14776   0034B4  0E00               	movlw	0
 14777   0034B6  6E32               	movwf	___fldiv@b^0,c
 14778   0034B8  0E00               	movlw	0
 14779   0034BA  6E33               	movwf	(___fldiv@b+1)^0,c
 14780   0034BC  0E00               	movlw	0
 14781   0034BE  6E34               	movwf	(___fldiv@b+2)^0,c
 14782   0034C0  0E00               	movlw	0
 14783   0034C2  6E35               	movwf	(___fldiv@b+3)^0,c
 14784   0034C4  0E00               	movlw	0
 14785   0034C6  6E42               	movwf	___fldiv@sign^0,c
 14786   0034C8                     l4221:
 14787   0034C8  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 14788   0034CC  A049               	btfss	___fldiv@bexp^0,0,c
 14789   0034CE  EF6B  F01A         	goto	u3741
 14790   0034D2  EF6D  F01A         	goto	u3740
 14791   0034D6                     u3741:
 14792   0034D6  EF70  F01A         	goto	l4227
 14793   0034DA                     u3740:
 14794   0034DA  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14795   0034DC  EF71  F01A         	goto	l4229
 14796   0034E0                     l4227:
 14797   0034E0  9E34               	bcf	(___fldiv@b+2)^0,7,c
 14798   0034E2                     l4229:
 14799   0034E2  90D8               	bcf	status,0,c
 14800   0034E4  3049               	rrcf	___fldiv@bexp^0,w,c
 14801   0034E6  6E35               	movwf	(___fldiv@b+3)^0,c
 14802   0034E8  EF27  F019         	goto	l4143
 14803   0034EC                     l1260:
 14804   0034EC  0012               	return		;funcret
 14805   0034EE                     __end_of___fldiv:
 14806                           	callstack 0
 14807                           
 14808 ;; *************** function _HighISR *****************
 14809 ;; Defined at:
 14810 ;;		line 59 in file "interrupts.c"
 14811 ;; Parameters:    Size  Location     Type
 14812 ;;		None
 14813 ;; Auto vars:     Size  Location     Type
 14814 ;;		None
 14815 ;; Return value:  Size  Location     Type
 14816 ;;                  1    wreg      void 
 14817 ;; Registers used:
 14818 ;;		None
 14819 ;; Tracked objects:
 14820 ;;		On entry : 0/0
 14821 ;;		On exit  : 0/0
 14822 ;;		Unchanged: 0/0
 14823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14828 ;;Total ram usage:        0 bytes
 14829 ;; Hardware stack levels used: 1
 14830 ;; This function calls:
 14831 ;;		Nothing
 14832 ;; This function is called by:
 14833 ;;		Interrupt level 2
 14834 ;; This function uses a non-reentrant model
 14835 ;;
 14836                           
 14837                           	psect	intcode
 14838   000008                     __pintcode:
 14839                           	callstack 0
 14840   000008                     _HighISR:
 14841                           	callstack 22
 14842                           
 14843                           ;incstack = 0
 14844   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14845   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14846   00000C  0011               	retfie		f
 14847   00000E                     __end_of_HighISR:
 14848                           	callstack 0
 14849                           
 14850                           	psect	rparam
 14851   000000                     
 14852                           	psect	temp
 14853   00005F                     btemp:
 14854                           	callstack 0
 14855   00005F                     	ds	1
 14856   000000                     int$flags	set	btemp
 14857   000000                     wtemp8	set	btemp+1
 14858   000000                     ttemp5	set	btemp+1
 14859   000000                     ttemp6	set	btemp+4
 14860   000000                     ttemp7	set	btemp+8
 14861                           
 14862                           	psect	idloc
 14863                           
 14864                           ;Config register IDLOC0 @ 0x200000
 14865                           ;	unspecified, using default values
 14866   200000                     	org	2097152
 14867   200000  0FFF               	dw	4095
 14868                           
 14869                           ;Config register IDLOC1 @ 0x200002
 14870                           ;	unspecified, using default values
 14871   200002                     	org	2097154
 14872   200002  0FFF               	dw	4095
 14873                           
 14874                           ;Config register IDLOC2 @ 0x200004
 14875                           ;	unspecified, using default values
 14876   200004                     	org	2097156
 14877   200004  0FFF               	dw	4095
 14878                           
 14879                           ;Config register IDLOC3 @ 0x200006
 14880                           ;	unspecified, using default values
 14881   200006                     	org	2097158
 14882   200006  0FFF               	dw	4095
 14883                           
 14884                           ;Config register IDLOC4 @ 0x200008
 14885                           ;	unspecified, using default values
 14886   200008                     	org	2097160
 14887   200008  0FFF               	dw	4095
 14888                           
 14889                           ;Config register IDLOC5 @ 0x20000A
 14890                           ;	unspecified, using default values
 14891   20000A                     	org	2097162
 14892   20000A  0FFF               	dw	4095
 14893                           
 14894                           ;Config register IDLOC6 @ 0x20000C
 14895                           ;	unspecified, using default values
 14896   20000C                     	org	2097164
 14897   20000C  0FFF               	dw	4095
 14898                           
 14899                           ;Config register IDLOC7 @ 0x20000E
 14900                           ;	unspecified, using default values
 14901   20000E                     	org	2097166
 14902   20000E  0FFF               	dw	4095
 14903                           
 14904                           	psect	config
 14905                           
 14906                           ;Config register CONFIG1L @ 0x300000
 14907                           ;	External Oscillator mode Selection bits
 14908                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14909                           ;	Power-up default value for COSC bits
 14910                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14911   300000                     	org	3145728
 14912   300000  AA                 	db	170
 14913                           
 14914                           ;Config register CONFIG1H @ 0x300001
 14915                           ;	unspecified, using default values
 14916                           ;	Clock Out Enable bit
 14917                           ;	CLKOUTEN = 0x1, unprogrammed default
 14918                           ;	Clock Switch Enable bit
 14919                           ;	CSWEN = 0x1, unprogrammed default
 14920                           ;	Fail-Safe Clock Monitor Enable bit
 14921                           ;	FCMEN = 0x1, unprogrammed default
 14922   300001                     	org	3145729
 14923   300001  FF                 	db	255
 14924                           
 14925                           ;Config register CONFIG2L @ 0x300002
 14926                           ;	unspecified, using default values
 14927                           ;	Master Clear Enable bit
 14928                           ;	MCLRE = 0x1, unprogrammed default
 14929                           ;	Power-up Timer Enable bit
 14930                           ;	PWRTE = 0x1, unprogrammed default
 14931                           ;	Low-power BOR enable bit
 14932                           ;	LPBOREN = 0x1, unprogrammed default
 14933                           ;	Brown-out Reset Enable bits
 14934                           ;	BOREN = 0x3, unprogrammed default
 14935   300002                     	org	3145730
 14936   300002  FF                 	db	255
 14937                           
 14938                           ;Config register CONFIG2H @ 0x300003
 14939                           ;	unspecified, using default values
 14940                           ;	Brown Out Reset Voltage selection bits
 14941                           ;	BORV = 0x3, unprogrammed default
 14942                           ;	ZCD Disable bit
 14943                           ;	ZCD = 0x1, unprogrammed default
 14944                           ;	PPSLOCK bit One-Way Set Enable bit
 14945                           ;	PPS1WAY = 0x1, unprogrammed default
 14946                           ;	Stack Full/Underflow Reset Enable bit
 14947                           ;	STVREN = 0x1, unprogrammed default
 14948                           ;	Debugger Enable bit
 14949                           ;	DEBUG = 0x1, unprogrammed default
 14950                           ;	Extended Instruction Set Enable bit
 14951                           ;	XINST = 0x1, unprogrammed default
 14952   300003                     	org	3145731
 14953   300003  FF                 	db	255
 14954                           
 14955                           ;Config register CONFIG3L @ 0x300004
 14956                           ;	WDT Period Select bits
 14957                           ;	WDTCPS = 0x1F, unprogrammed default
 14958                           ;	WDT operating mode
 14959                           ;	WDTE = OFF, WDT Disabled
 14960   300004                     	org	3145732
 14961   300004  9F                 	db	159
 14962                           
 14963                           ;Config register CONFIG3H @ 0x300005
 14964                           ;	unspecified, using default values
 14965                           ;	WDT Window Select bits
 14966                           ;	WDTCWS = 0x7, unprogrammed default
 14967                           ;	WDT input clock selector
 14968                           ;	WDTCCS = 0x7, unprogrammed default
 14969   300005                     	org	3145733
 14970   300005  FF                 	db	255
 14971                           
 14972                           ;Config register CONFIG4L @ 0x300006
 14973                           ;	unspecified, using default values
 14974                           ;	Write Protection Block 0
 14975                           ;	WRT0 = 0x1, unprogrammed default
 14976                           ;	Write Protection Block 1
 14977                           ;	WRT1 = 0x1, unprogrammed default
 14978                           ;	Write Protection Block 2
 14979                           ;	WRT2 = 0x1, unprogrammed default
 14980                           ;	Write Protection Block 3
 14981                           ;	WRT3 = 0x1, unprogrammed default
 14982                           ;	Write Protection Block 3
 14983                           ;	WRT4 = 0x1, unprogrammed default
 14984                           ;	Write Protection Block 3
 14985                           ;	WRT5 = 0x1, unprogrammed default
 14986                           ;	Write Protection Block 3
 14987                           ;	WRT6 = 0x1, unprogrammed default
 14988                           ;	Write Protection Block 3
 14989                           ;	WRT7 = 0x1, unprogrammed default
 14990   300006                     	org	3145734
 14991   300006  FF                 	db	255
 14992                           
 14993                           ;Config register CONFIG4H @ 0x300007
 14994                           ;	unspecified, using default values
 14995                           ;	Configuration Register Write Protection bit
 14996                           ;	WRTC = 0x1, unprogrammed default
 14997                           ;	Boot Block Write Protection bit
 14998                           ;	WRTB = 0x1, unprogrammed default
 14999                           ;	Data EEPROM Write Protection bit
 15000                           ;	WRTD = 0x1, unprogrammed default
 15001                           ;	Scanner Enable bit
 15002                           ;	SCANE = 0x1, unprogrammed default
 15003                           ;	Low Voltage Programming Enable bit
 15004                           ;	LVP = 0x1, unprogrammed default
 15005   300007                     	org	3145735
 15006   300007  FF                 	db	255
 15007                           
 15008                           ;Config register CONFIG5L @ 0x300008
 15009                           ;	unspecified, using default values
 15010                           ;	UserNVM Program Memory Code Protection bit
 15011                           ;	CP = 0x1, unprogrammed default
 15012                           ;	DataNVM Memory Code Protection bit
 15013                           ;	CPD = 0x1, unprogrammed default
 15014   300008                     	org	3145736
 15015   300008  FF                 	db	255
 15016                           
 15017                           ;Config register CONFIG5H @ 0x300009
 15018                           ;	unspecified, using default values
 15019   300009                     	org	3145737
 15020   300009  FF                 	db	255
 15021                           
 15022                           ;Config register CONFIG6L @ 0x30000A
 15023                           ;	unspecified, using default values
 15024                           ;	Table Read Protection Block 0
 15025                           ;	EBTR0 = 0x1, unprogrammed default
 15026                           ;	Table Read Protection Block 1
 15027                           ;	EBTR1 = 0x1, unprogrammed default
 15028                           ;	Table Read Protection Block 2
 15029                           ;	EBTR2 = 0x1, unprogrammed default
 15030                           ;	Table Read Protection Block 3
 15031                           ;	EBTR3 = 0x1, unprogrammed default
 15032                           ;	Table Read Protection Block 4
 15033                           ;	EBTR4 = 0x1, unprogrammed default
 15034                           ;	Table Read Protection Block 5
 15035                           ;	EBTR5 = 0x1, unprogrammed default
 15036                           ;	Table Read Protection Block 6
 15037                           ;	EBTR6 = 0x1, unprogrammed default
 15038                           ;	Table Read Protection Block 7
 15039                           ;	EBTR7 = 0x1, unprogrammed default
 15040   30000A                     	org	3145738
 15041   30000A  FF                 	db	255
 15042                           
 15043                           ;Config register CONFIG6H @ 0x30000B
 15044                           ;	unspecified, using default values
 15045                           ;	Boot Block Table Read Protection bit
 15046                           ;	EBTRB = 0x1, unprogrammed default
 15047   30000B                     	org	3145739
 15048   30000B  FF                 	db	255
 15049                           tosu	equ	0xFFF
 15050                           tosh	equ	0xFFE
 15051                           tosl	equ	0xFFD
 15052                           stkptr	equ	0xFFC
 15053                           pclatu	equ	0xFFB
 15054                           pclath	equ	0xFFA
 15055                           pcl	equ	0xFF9
 15056                           tblptru	equ	0xFF8
 15057                           tblptrh	equ	0xFF7
 15058                           tblptrl	equ	0xFF6
 15059                           tablat	equ	0xFF5
 15060                           prodh	equ	0xFF4
 15061                           prodl	equ	0xFF3
 15062                           indf0	equ	0xFEF
 15063                           postinc0	equ	0xFEE
 15064                           postdec0	equ	0xFED
 15065                           preinc0	equ	0xFEC
 15066                           plusw0	equ	0xFEB
 15067                           fsr0h	equ	0xFEA
 15068                           fsr0l	equ	0xFE9
 15069                           wreg	equ	0xFE8
 15070                           indf1	equ	0xFE7
 15071                           postinc1	equ	0xFE6
 15072                           postdec1	equ	0xFE5
 15073                           preinc1	equ	0xFE4
 15074                           plusw1	equ	0xFE3
 15075                           fsr1h	equ	0xFE2
 15076                           fsr1l	equ	0xFE1
 15077                           bsr	equ	0xFE0
 15078                           indf2	equ	0xFDF
 15079                           postinc2	equ	0xFDE
 15080                           postdec2	equ	0xFDD
 15081                           preinc2	equ	0xFDC
 15082                           plusw2	equ	0xFDB
 15083                           fsr2h	equ	0xFDA
 15084                           fsr2l	equ	0xFD9
 15085                           status	equ	0xFD8

Data Sizes:
    Strings     79
    Constant    0
    Data        9
    BSS         381
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    113     153
    BANK1           256    112     252
    BANK2           256      0     210
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[35]), STR_1(CODE[36]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[35]), STR_1(CODE[36]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[35]), STR_1(CODE[36]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2518$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[35]), STR_1(CODE[36]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2434$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2434$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK2[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    Backhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Backhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_Backhalfblock
    _RetryMove->_Forwardhalfblock
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _fullSpeedAhead->_setMotorPWM
    _Backhalfblock->_fullSpeedBack
    _Backhalfblock->_stop
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               114   114      0  377577
                                            111 BANK0      2     2      0
                                              0 BANK1    112   112      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             33    15     18   36589
                                             80 BANK0     31    13     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   36082
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   35729
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29883
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     865
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  146033
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   23886
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   23278
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6442
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   17596
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   17596
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   16988
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   16988
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   17748
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    9008
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   23886
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8418
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            4     0      4   12884
                                             31 COMRAM     4     0      4
                      _Backhalfblock
                   _Forwardhalfblock
 ---------------------------------------------------------------------------------
 (2) _Forwardhalfblock                                     6     2      4    6442
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _Backhalfblock                                        6     2      4    6290
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   23278
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _turnLeft45                                           6     2      4    7810
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6442
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    8874
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3481
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   24707
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1073
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3776
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4408
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _Backhalfblock
       _fullSpeedBack
       _stop
     _Forwardhalfblock
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _ReverseYellow
       _ForwardOneBlock
       _reverseDetect
       _turnRight45
     _reverseDetect
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D2       9       82.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     70      FC       7       98.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     71      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhlh       13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRllllll      F      0       0      58        0.0%
BITBIGSFRhhllh       E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRhlll        6      0       0      38        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhhlll       1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C5      61        0.0%
DATA                 0      0     2C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 22:14:03 2023

               _color_read_Red 59E6                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5996                   ___fldiv@sign 0042                _color_read_Blue 5A86  
                           l51 59E4                             l60 5AD4                             l45 58A0  
                           l54 5A34                             l63 5490                             l48 5E76  
                           l57 5A84                             l66 381A                             l76 192C  
              ??_timed_forward 001A            ___wmul@multiplicand 0003               _color_read_Green 5A36  
              readColours@vals 000C              ??_Interrupts_init 0001                            l200 5EB4  
                          l140 5DB8                            l212 5ECC                            l143 5DE4  
                          l152 5EE2                            l400 23C0                            l161 5C32  
                          l209 5EB8                            l146 5E0A                            l218 5D8E  
                          l155 5EEC                            l500 5278                            l149 5EF6  
                          l158 5ED8                            l430 2866                            l422 27D8  
                          l272 5F04                            l540 5172                            l508 50D4  
                          l524 5036                            l516 4F98                            l532 4E50  
                          l543 56AA                            l552 55F8                            l561 559E  
                          l546 5702                            l570 5432                            l555 54EA  
                          l643 3DCC                            l564 5CB0                            l549 5652  
                          l573 58F2                            l637 3DC2                            l805 4868  
                          l494 4704                            l558 5544                            l582 584E  
                          l567 5CEE                            l591 4DA6                            l487 51FA  
                          l576 5944                            l672 5D48                            l585 5DE2  
                          l666 5E96                            l579 57FC                            l675 5D5E  
                          l588 4CF0                            l669 5E30                            l678 5E56  
                          l943 4A2C                            l792 4598                            l952 5D26  
                          l937 4EFA                            l948 4A72                            l975 496E  
                          _abs 5C34                            _pad 527A                            _rel 0166  
                          wreg 000FE8                   ___flmul@aexp 0022                   ___flmul@bexp 0023  
                 ___flmul@sign 001D                   ___flmul@temp 0028                   ___flmul@prod 0024  
                 ___fltol@exp1 000A                Colour_decider@i 007A                           ?_abs 0013  
                         l1301 305C                           l1302 304A                           l1206 2A58  
                         l1223 2B72                           l1215 2D28                           l1207 2A46  
                         l1232 2C42                           l1208 2A0C                           l1400 3EA8  
                         l1233 2C30                           l1411 404A                           l1260 34EC  
                         l1340 434C                           l1309 3114                           l1333 42B4  
                         l1262 334C                           l1510 5C72                           l1502 4B70  
                         l1422 2326                           l1271 3392                           l1248 5B68  
                         l1336 4410                           l1176 5366                           l1273 340A  
                         l1265 3310                           l1169 535E                           l4001 5BD0  
                         l1425 1CC0                           l1274 33F8                           l1530 53CC  
                         l1347 43A8                           l4011 4622                           l4003 459A  
                         l1507 5C6A                           l1427 1B06                           l1292 2DEE  
                         l1516 425C                           l1356 57AA                           l4101 3160  
                         l4013 4664                           l4005 45B6                           l4021 4416  
                         l1470 3B20                           l4111 31A0                           l4103 316E  
                         l4015 4680                           l4007 460A                           l4031 4476  
                         l4023 4424                           l1519 41A0                           l1527 53BC  
                         l1455 2108                           l1296 3152                           l1392 52F2  
                         l1536 5994                           l4201 33F0                           l4121 31C6  
                         l4113 31A2                           l4105 3170                           l4017 46C4  
                         l4009 461E                           l4041 44C0                           l4033 447A  
                         l4025 4444                           l5001 3A36                           l4211 345E  
                         l4131 3206                           l4123 31D4                           l4107 3180  
                         l4115 31AA                           l1299 2FE4                           l4051 4530  
                         l4043 44CE                           l4035 4486                           l4027 4448  
                         l4019 4412                           l5011 3AB2                           l5003 3A60  
                         l1548 4C3A                           l1556 5BF0                           l1388 529C  
                         l1492 5758                           l4221 34C8                           l4205 341A  
                         l4213 3462                           l4141 3246                           l4133 3208  
                         l4125 31D6                           l4117 31BA                           l4109 3190  
                         l4301 2ED0                           l5101 4DCC                           l4053 4542  
                         l4045 44E0                           l4037 44A4                           l4029 4456  
                         l1397 3E5A                           l1565 5BAC                           l5005 3A80  
                         l5013 3AE2                           l4223 34CC                           l4215 347C  
                         l4207 3426                           l4151 3276                           l4143 324E  
                         l4127 31E6                           l4135 3210                           l4119 31C0  
                         l4311 2F3E                           l4303 2EEA                           l5111 4E2C  
                         l5103 4DE4                           l4047 450E                           l4039 44AC  
                         l4055 4548                           l4071 473C                           l4063 4706  
                         l1559 5F02                           l1399 3E62                           l4225 34DA  
                         l4217 3492                           l4209 3434                           l4161 32B4  
                         l4153 3276                           l4145 3252                           l4137 3220  
                         l4129 31F6                           l4401 4A0C                           l4321 2FD4  
                         l4313 2F68                           l4305 2EFA                           l4241 2D44  
                         l5121 5546                           l5041 5D90                           l5201 588E  
                         l5113 4E44                           l5105 4DF0                           l4057 4558  
                         l4049 452E                           l4081 47A4                           l4073 474A  
                         l4065 470A                           l5017 3AF4                           l4227 34E0  
                         l4219 34AC                           l4171 3300                           l4163 32C4  
                         l4139 3236                           l4403 4A1A                           l4331 3014  
                         l4323 2FE2                           l4315 2F9E                           l4307 2F16  
                         l4251 2D7C                           l4243 2D46                           l5131 4260  
                         l5115 55A0                           l5123 555A                           l5051 5DA6  
                         l5043 5D9A                           l5211 5898                           l5203 5890  
                         l5107 4DFC                           l4059 4578                           l4083 47B2  
                         l4091 4818                           l4075 476A                           l4067 4718  
                         l4411 5CF0                           l4229 34E2                           l4181 334A  
                         l4173 330E                           l4165 32D4                           l4157 328A  
                         l4149 3266                           l4405 4A6A                           l4341 3086  
                         l4333 3042                           l4325 2FF4                           l4317 2FAC  
                         l4309 2F22                           l4261 2DA8                           l4253 2D8C  
                         l4245 2D56                           l4237 2D2A                           l5133 4270  
                         l5301 141C                           l5117 55B4                           l5125 5572  
                         l5045 5DA0                           l5053 5E5A                           l5213 589A  
                         l5205 5892                           l5221 34EE                           l5109 4E14  
                         l5061 59E6                           l4093 4828                           l4085 47E0  
                         l4077 4788                           l4069 4738                           l4413 5D06  
                         l4421 4880                           l4191 3390                           l4183 335C  
                         l4175 331A                           l4167 32DC                           l4159 32A4  
                         l4407 4A70                           l4351 30FC                           l4343 30B0  
                         l4327 3002                           l4319 2FCA                           l4271 2DFE  
                         l4263 2DB8                           l4255 2D92                           l4247 2D66  
                         l4239 2D36                           l5151 4336                           l5143 42EE  
                         l5135 427E                           l5311 148C                           l5303 144E  
                         l5119 55CC                           l5047 5DA2                           l5215 589C  
                         l5207 5894                           l5231 374E                           l5223 35BA  
                         l5127 4C3C                           l5063 5A2C                           l5055 5996  
                         l4095 4848                           l4087 4800                           l4079 4790  
                         l4415 5D16                           l4431 48D0                           l4511 404C  
                         l4503 5B6A                           l4185 3372                           l4193 33A2  
                         l4177 3338                           l4169 32EC                           l4353 3118  
                         l4361 313E                           l4337 306C                           l4345 30B4  
                         l4329 3006                           l4281 2E38                           l4273 2E0E  
                         l4265 2DC8                           l4257 2D98                           l4249 2D76  
                         l3801 2900                           l5161 43B6                           l5153 4342  
                         l5145 42F6                           l5137 42C4                           l5313 14BE  
                         l5241 0EB8                           l4601 4F38                           l5049 5DA4  
                         l5217 589E                           l5209 5896                           l5233 3782  
                         l5225 35EE                           l5129 4CF2                           l5073 5A86  
                         l5057 59DC                           l5081 5EC8                           l4089 4812  
                         l4441 48FA                           l4433 48D4                           l4425 4894  
                         l4513 406C                           l4505 5B7A                           l4195 33B0  
                         l4187 3378                           l4179 333A                           l4099 3154  
                         l4363 3142                           l4355 3128                           l4347 30CE  
                         l4339 3078                           l4291 2E8A                           l4283 2E4E  
                         l4267 2DD8                           l4259 2DA6                           l3803 2910  
                         l3811 293A                           l5171 43FE                           l5163 43B8  
                         l5155 437E                           l5147 4302                           l5139 42DA  
                         l5411 1918                           l5403 18D6                           l5331 1580  
                         l5315 14F8                           l5323 1536                           l5251 0F2A  
                         l5243 0EEC                           l5235 0E52                           l4611 50D6  
                         l5083 54EC                           l4603 4F44                           l5227 3682  
                         l5091 57AC                           l5075 5ACC                           l5067 5A36  
                         l5219 5434                           l4451 4922                           l4443 4904  
                         l4435 48E2                           l4427 48BE                           l4419 486A  
                         l4531 4214                           l4523 4154                           l4515 40C2  
                         l4507 5368                           l4197 33B4                           l4189 3382  
                         l4381 4ECE                           l4373 4E52                           l4357 3136  
                         l4349 30E2                           l4293 2E98                           l4285 2E5A  
                         l4277 2E22                           l4269 2DDE                           l3901 2B42  
                         l3821 2972                           l3813 294A                           l3805 2920  
                         l5173 4400                           l5165 43BC                           l5157 438A  
                         l5149 4334                           l5325 1574                           l5309 145A  
                         l5261 103C                           l5253 0F7C                           l5245 0F20  
                         l5237 0E7C                           l4613 50FA                           l4621 5142  
                         l5085 5500                           l4605 4F50                           l5229 36B6  
                         l5093 53CE                           l5421 5EA2                           l5069 5A7C  
                         l4453 492E                           l4445 490E                           l4429 48C0  
                         l4533 423C                           l4525 4190                           l4517 40D6  
                         l4509 5386                           l4541 595A                           l4701 19C4  
                         l5181 572E                           l5501 577C                           ?_pad 0011  
                         l4199 33C2                           l4383 4EF2                           l4375 4E80  
                         l4391 499E                           l4359 3138                           l4295 2EA4  
                         l4287 2E72                           l4279 2E2E                           l3903 2B52  
                         l3831 2986                           l3823 2976                           l3815 295C  
                         l3807 2930                           l4367 5B24                           l5167 43E0  
                         l5159 4398                           l5415 1924                           l5335 158C  
                         l5271 10C0                           l5263 1042                           l5255 0FAE  
                         l5239 0E88                           l4623 515A                           l4615 5112  
                         l5087 5518                           l5511 5DBA                           l4607 4F68  
                         l4551 5DE4                           l5191 585E                           l5095 5CB2  
                         l5423 5EA4                           l5079 5EB8                           l5431 5D60  
                         l3751 4B72                           l4471 52BC                           l4463 527A  
                         l4631 3E12                           l4455 493E                           l4535 424C  
                         l4519 40E4                           l4527 41C4                           l4543 5966  
                         l4711 1A0E                           l4703 19EA                           l5183 574E  
                         l5503 5798                           l4385 4EF8                           l4377 4E90  
                         l4393 49AE                           l4297 2EB4                           l4289 2E7E  
                         l3921 2BD4                           l3913 2BAC                           l3905 2B62  
                         l3841 299A                           l3833 298A                           l3825 297A  
                         l3817 296A                           l3809 2932                           l4369 5B34  
                         l5169 43F0                           l5361 16BA                           l5337 15BE  
                         l5281 11CE                           l5273 10D4                           l5265 105E  
                         l5257 0FB6                           l4617 511E                           l4561 4FE2  
                         l4609 4F80                           l4553 5DF4                           l5193 586E  
                         l5097 57FE                           l5089 5C74                           l5521 3B6A  
                         l5513 3B22                           l5425 5EAE                           l5433 5D64  
                         l3761 4BF4                           l3753 4B84                           l4473 52C0  
                         l4465 5288                           l4641 3E80                           l4633 3E32  
                         l4625 3DCE                           l4457 494E                           l4481 4A74  
                         l4529 4200                           l4545 596A                           l4801 1E8A  
                         l4721 1A76                           l4713 1A26                           l4705 19FC  
                         l5177 5704                           l5601 2330                           l4379 4EBE  
                         l4395 49DC                           l4299 2EC0                           l3923 2BDC  
                         l3915 2BB6                           l3907 2B88                           l3931 2C00  
                         l3851 29AE                           l3843 299E                           l3835 298E  
                         l3827 297E                           l3819 296E                           l3771 286A  
                         l5363 16EC                           l5355 167C                           l5347 1632  
                         l5339 15F0                           l5291 13AC                           l5283 124A  
                         l5275 1174                           l5267 10B4                           l5259 100A  
                         l4619 512A                           l4571 5200                           l4563 4FEE  
                         l4555 4F9A                           l5451 5E78                           l5507 58A2  
                         l5195 5878                           l5187 5850                           l5099 4DA8  
                         l5531 3C3E                           l5523 3B92                           l5515 3B2A  
                         l5427 5EB0                           l5419 5E98                           l5435 5D72  
                         l3755 4B96                           l4475 52DE                           l4467 5294  
                         l4651 3EBA                           l4643 3E90                           l4635 3E4E  
                         l4627 3DEE                           l4459 495E                           l4483 4A94  
                         l4547 5976                           l4539 5946                           l4811 1F48  
                         l4803 1EBE                           l4723 1A88                           l4715 1A30  
                         l4707 1A00                           l5179 5710                           l5611 234A  
                         l5603 2334                           l4397 49EC                           l4389 4970  
                         l3941 2C52                           l3933 2C04                           l3925 2BE0  
                         l3917 2BC4                           l3909 2B98                           l3861 2A26  
                         l3853 29D8                           l3845 29A2                           l3837 2992  
                         l3829 2982                           l3781 28A6                           l3773 2876  
                         l5381 17C4                           l5349 1670                           l5293 13DE  
                         l5285 12A6                           l5277 1184                           l3765 5E32  
                         l4581 5260                           l4573 5218                           l5509 58F4  
                         l4557 4FBE                           l4565 5006                           l5453 5E80  
                         l4901 5EF2                           l5197 5882                           l5189 5854  
                         l5541 3D16                           l5533 3C6A                           l5525 3BBE  
                         l5461 5186                           l5429 5EB2                           l5437 5D76  
                         l4477 5C34                           l3757 4BA0                           l4469 52A8  
                         l4653 3EC0                           l4661 3FB2                           l4645 3E9C  
                         l4637 3E6A                           l4629 3E02                           l4485 4AD2  
                         l4493 4B12                           l4549 597A                           l4821 201C  
                         l4813 1F58                           l4805 1EF0                           l4725 1A8C  
                         l4709 1A06                           l5701 2558                           l5621 2356  
                         l5613 234C                           l5605 2338                           l4399 49FA  
                         l3951 2CB8                           l3943 2C5E                           l3935 2C12  
                         l3927 2BF0                           l3919 2BC6                           l3871 2A66  
                         l3863 2A2A                           l3855 29F4                           l3847 29A6  
                         l3839 2996                           l3791 28D6                           l3783 28B6  
                         l3775 2884                           l5391 182C                           l5375 172E  
                         l5359 1688                           l5287 1322                           l5279 11BC  
                         l3767 5E4E                           l4575 5224                           l4591 508C  
                         l4583 5038                           l4567 501E                           l4559 4FD6  
                         l5455 5E8A                           l4903 5ED0                           l5199 588C  
                         l5543 3D40                           l5535 3C94                           l5527 3BE8  
                         l5519 3B3C                           l5471 51A6                           l5463 5188  
                         l4911 5EDA                           l4479 5C4E                           l3759 4BBE  
                         l4671 401A                           l4663 3FCC                           l4655 3F42  
                         l4647 3EA4                           l4639 3E7A                           l4495 4B24  
                         l4487 4AFA                           l4831 2052                           l4823 2030  
                         l4815 1F8C                           l4807 1F06                           l4751 1BC0  
                         l4743 1B16                           l4727 1A92                           l4719 1A50  
                         l5711 2594                           l5703 2564                           l5631 2368  
                         l5623 2358                           l5615 234E                           l5607 233C  
                         l3961 2D00                           l3953 2CC8                           l3945 2C6C  
                         l3937 2C28                           l3929 2BF2                           l3881 2AA8  
                         l3873 2A76                           l3865 2A38                           l3857 2A04  
                         l3849 29AA                           l3793 28E8                           l3785 28B8  
                         l3777 2886                           l5393 185E                           l5377 1760  
                         l5289 137A                           l4577 5230                           l4569 51FC  
                         l4585 505C                           l4593 50A4                           l5457 5E94  
                         l4905 5ED4                           l5545 3D6C                           l5537 3CC0  
                         l5529 3C14                           l5481 51E2                           l5473 51CA  
                         l5465 518A                           l4921 5C08                           l4913 5EDE  
                         l4673 402A                           l4665 3FEA                           l4657 3F48  
                         l4649 3EB0                           l4489 4B06                           l4841 211A  
                         l4833 205A                           l4817 1FE2                           l4825 2034  
                         l4809 1F38                           l4753 1BFE                           l4745 1B1C  
                         l4729 1A9A                           l4737 1AB6                           l4681 1944  
                         l5721 25DA                           l5705 2578                           l5713 25AA  
                         l5641 2388                           l5633 2370                           l5625 235A  
                         l5617 2350                           l5609 2348                           l3963 2D02  
                         l3955 2CE8                           l3947 2CA6                           l3891 2AD6  
                         l3883 2AB6                           l3867 2A3A                           l3859 2A1A  
                         l3795 28EA                           l3779 2896                           l3787 28C0  
                         l5395 1898                           l5379 1792                           l5299 13EA  
                         l4579 5248                           l4595 50BC                           l4587 5074  
                         l4907 5EE4                           l5491 5E0E                           l4931 5D34  
                         l5547 3D96                           l5539 3CEA                           l5483 51EC  
                         l5475 51D4                           l5467 518C                           l5459 5174  
                         l4923 5C2E                           l4915 5BF4                           l4667 4004  
                         l4659 3F4E                           l4499 4B68                           l4851 214A  
                         l4843 2128                           l4835 2066                           l4827 2044  
                         l4819 1FE8                           l4771 1CEC                           l4755 1C12  
                         l4763 1C8E                           l4747 1B50                           l4739 1AD0  
                         l4691 198C                           l4683 1952                           l5731 2620  
                         l5715 25BE                           l5723 25F0                           l5707 258C  
                         l5651 23AC                           l5643 238C                           l5635 2378  
                         l5627 2360                           l5619 2354                           l3965 2D08  
                         l3957 2CEC                           l3949 2CA8                           l3893 2AE0  
                         l3885 2AC2                           l3877 2A8A                           l3869 2A44  
                         l3797 28F0                           l3789 28D0                           l5389 17FA  
                         l3981 531E                           l3973 52F4                           l4589 5080  
                         l4941 56AC                           l4597 4EFC                           l4909 5EE8  
                         l5493 5E14                           l4933 5D44                           l5549 3DC2  
                         l5485 51EE                           l5477 51D6                           l5469 51A2  
                         l4925 5C30                           l4917 5BF8                           l4669 4014  
                         l4861 217C                           l4853 215A                           l4845 2138  
                         l4837 20DE                           l4829 204C                           l4781 1D30  
                         l4773 1CF4                           l4765 1CC8                           l4757 1C46  
                         l4749 1B8E                           l4693 199C                           l4685 1956  
                         l4677 192E                           l5741 2666                           l5725 2604  
                         l5733 2636                           l5717 25D2                           l5709 2590  
                         l5661 23EC                           l5653 23B4                           l5645 2394  
                         l5637 2380                           l5629 2364                           l3967 2D16  
                         l3959 2CFA                           l3887 2AC6                           l3879 2A9A  
                         l3895 2AE6                           l3799 28FE                           l3991 5352  
                         l3983 532C                           l3975 52FC                           l4951 5626  
                         l4943 56C0                           l4599 4F20                           l4935 5654  
                         l5487 51F8                           l5479 51E0                           l4919 5C00  
                         l4871 2224                           l4863 218E                           l4855 215E  
                         l4847 213C                           l4839 20FE                           l4791 1D76  
                         l4783 1D42                           l4775 1CF8                           l4767 1CD8  
                         l4759 1C4E                           l4695 19AC                           l4687 197A  
                         l4679 1934                           l5495 575A                           l5751 26AC  
                         l5735 264A                           l5743 267C                           l5727 2618  
                         l5719 25D6                           l5671 2446                           l5663 23F4  
                         l5655 23BC                           l5647 239C                           l5639 2384  
                         l3969 2D18                           l3897 2B0C                           l3889 2AD4  
                         l3993 5358                           l3985 5332                           l3977 530E  
                         l4945 56D6                           l4937 5668                           l5489 5E0C  
                         l4953 5492                           l4929 5D28                           l4881 2272  
                         l4873 222C                           l4865 2192                           l4857 2164  
                         l4849 2142                           l4793 1DDA                           l4777 1D0A  
                         l4785 1D4A                           l4769 1CE4                           l4697 19B8  
                         l4689 1984                           l4961 3844                           l5497 576C  
                         l5761 26F2                           l5745 2690                           l5753 26C2  
                         l5737 265E                           l5729 261C                           l5681 2492  
                         l5673 244A                           l5665 2408                           l5657 23CE  
                         l5649 23A4                           l3899 2B40                           l3987 5348  
                         l3979 5316                           l4947 55FA                           l4939 567E  
                         l4955 54A6                           l3995 5BAE                           l4891 22E8  
                         l4883 2282                           l4867 2198                           l4859 216A  
                         l4875 2230                           l4795 1E32                           l4787 1D52  
                         l4779 1D18                           l4699 19C0                           l5931 3AD4  
                         l4971 3894                           l4963 3852                           l5499 5774  
                         l5771 2738                           l5755 26D6                           l5763 2708  
                         l5747 26A4                           l5739 2662                           l5691 24E0  
                         l5683 24AE                           l5675 244E                           l5667 2414  
                         l5659 23E8                           l3989 5350                           l4949 560E  
                         l4957 54BE                           l3997 5BBA                           l4893 22FE  
                         l4885 22B2                           l4877 224E                           l4869 21F0  
                         l4797 1E66                           l4789 1D62                           l4981 394A  
                         l4973 38B4                           l4965 3860                           l5781 27A0  
                         l5765 271C                           l5773 274E                           l5757 26EA  
                         l5749 26A8                           l5685 24C8                           l5693 24F8  
                         l5677 2462                           l5669 2428                           l5597 2328  
                         l3999 5BCC                           l4895 2306                           l4887 22C0  
                         l4879 226A                           l4799 1E6C                           l5927 398C  
                         l4983 3960                           l4991 3978                           l4975 390A  
                         l4967 3864                           l4959 381C                           l5783 27CA  
                         l5775 2762                           l5767 2730                           l5759 26EE  
                         l5695 2516                           l5687 24D0                           l5679 2476  
                         l5791 2852                           l5599 232C                           l4889 22D8  
                         l5929 3A4A                           l4985 3968                           l4993 39AA  
                         l4969 3874                           l5777 277A                           l5769 2734  
                         l5697 251E                           l5689 24D8                           l5785 27DC  
                         l4899 5EEE                           l4995 39CE                           l4987 3970  
                         l4979 393A                           l5787 27F8                           l5779 278C  
                         l5699 2524                           l4997 3A02                           l5789 2846  
                  GreenMove@mL 0020                    GreenMove@mR 0022                           STR_1 0E01  
                         STR_2 0E25                           STR_3 0E48                           STR_6 0E4C  
                         u3000 2920                           u3001 291C                           u3010 295C  
                         u3011 2958                           u3100 2A76                           u3020 296A  
                         u3101 2A72                           u3021 2966                           u3110 2AA8  
                         u3030 29D8                           u3111 2AA4                           u3031 29D4  
                         u4000 4A1A                           u3200 2BF0                           u3120 2AB6  
                         u3040 29F0                   _BAUD4CONbits 000EE9                           u4001 4A16  
                         u3201 2BEC                           u3121 2AB2                           u3041 29EA  
                         u4010 4A6A                           u3210 2C00                           u3130 2AD4  
                         u3050 29F2                           u4011 4A66                           u3211 2BFC  
                         u3131 2AD0                           u3300 2CE8                           u3220 2C12  
                         u3140 2B0C                           u3060 2A1A                           u4100 5288  
                         u4020 5D06                           u3301 2CE4                           u3221 2C0E  
                         u3141 2B08                           u3061 2A16                           u4101 5284  
                         u4021 5D02                           u3310 2CFA                           u3230 2C28  
                         u3150 2B52                           u3070 2A38                           u4110 52DE  
                         u4030 4880                           u3311 2CF6                           u3231 2C24  
                         u3151 2B4E                           u3071 2A34                           u4111 52DA  
                         u4031 487C                           u3320 2D16                           u3240 2C3E  
                         u3160 2B88                           u3080 2A58                           u5000 4330  
                         u3400 4456                           u4120 5C4E                           u4040 48B4  
                         u4200 5BAC                           u3321 2D12                           u3241 2C3A  
                         u3161 2B84                           u3081 2A54                           u5001 432C  
                         u3401 4452                           u4121 5C4A                           u4201 5BA8  
                         u3250 2C52                           u3170 2B98                           u3090 2A66  
                         u5010 437A                           u3330 530E                           u4050 48E2  
                         u4130 4AB4                           u4210 5386                           _T2PR 000FBC  
                         u3251 2C4E                           u3171 2B94                           u3091 2A62  
                         u5011 4376                           u3331 530A                           u3411 4480  
                         u4051 48DE                           u4211 5382                           u3260 2C6C  
                         u3180 2BC4                           u5020 4398                           u5100 100A  
                         u3340 532C                           u3420 44A4                           u3500 47E0  
                         u4060 48F6                           u4140 4AD2                           u4300 4200  
                         u4220 4094                           u3261 2C68                           u3181 2BC0  
                         u5021 4394                           u5101 1006                           u3341 5328  
                         u3421 44A0                           u3501 47DC                           u4061 48F2  
                         u4045 48AA                           u4141 4ACE                           u4301 41FC  
                         u3270 2CA6                           u3190 2BD4                           u5030 43A8  
                         u5110 105E                           u3350 5348                           u3430 44CE  
                         u3510 4828                           u4070 491E                           u4150 4AFA  
                         u4310 423C                           u4230 40C2                           u3271 2CA2  
                         u3191 2BD0                           u5031 43A4                           u5111 105A  
                         u3351 5344                           u3431 44CA                           u3511 4824  
                         u4071 491A                           u4151 4AF6                           u4135 4AAA  
                         u4311 4238                           u4231 40BE                           u3600 32EC  
                         u3520 316E                           u3280 2CB8                           u5040 43B6  
                         u5200 148C                           u5120 10B4                           u4400 50D4  
                         u3440 450E                           u3360 5BF0                           u4080 493E  
                         u4160 4B24                           u4240 40E4                           u4320 5994  
                         u3601 32E8                           u3521 316A                           u3281 2CB4  
                         u5041 43B2                           u5201 1488                           u5121 10B0  
                         u4401 50D0                           u3441 450A                           u3361 5BEC  
                         u4081 493A                           u4161 4B20                           u4241 40E0  
                         u4225 408A                           u4321 5990                           u3610 330E  
                         u3530 3180                           u3290 2CC8                           u5050 43F0  
                         u5210 14BE                           u5130 10D4                           u3370 45B6  
                         u4410 4F80                           u4330 5DF4                           u3450 4558  
                         u4090 494E                           u3611 330A                           u3531 317C  
                         u3291 2CC4                           u5051 43EC                           u5211 14BA  
                         u5131 10D0                           u3371 45B2                           u4411 4F7C  
                         u4331 5DF0                           u3451 4554                           u4091 494A  
                         u3700 341A                           u3620 3338                           u3540 3190  
                         u5060 43FE                           u5300 16EC                           u5220 14F8  
                         u5140 1184                           u3380 4680                           u4420 4F98  
                         u4340 5E0A                           u3460 4718                           u2900 4B84  
                         u4500 3E90                           u4180 4B5E                           u4260 4150  
                         u3701 3416                           u3621 3334                           u3541 318C  
                         u5061 43FA                           u5301 16E8                           u5221 14F4  
                         u5141 1180                           u3381 467C                           u4421 4F94  
                         u4341 5E06                           u3461 4714                           u2901 4B80  
                         u4501 3E8C                           u4181 4B58                           u4261 414C  
                         u3710 3434                           u3630 335C                           u3550 31D4  
                         u5310 172A                           u5230 1532                           u5150 11CE  
                         u4430 515A                           u4350 501E                           u3390 4424  
                         u3470 474A                           u2910 4B96                           u4510 3FCC  
                         u4190 4B60                           u4270 4174                           u5070 574E  
                         u3711 3430                           u3631 3358                           u3551 31D0  
                         u5311 1726                           u5231 152E                           u5151 11CA  
                         u4431 5156                           u6007 5644                           u4351 501A  
                         u3391 4420                           u3471 4746                           u2911 4B92  
                         u4511 3FC8                           u4175 4B36                           u4255 40F8  
                         u5071 574A                           u3720 347C                           u3640 3372  
                         u3560 31E6                           u3800 2DC8                           u5400 1914  
                         u5320 1760                           u5240 1574                           u5160 13AC  
                         u4440 5172                           u4360 5036                           u3480 4788  
                         u2920 4BBE                           u4520 3FEA                           u4280 4190  
                         u4256 4102                           u4600 1A76                           u3721 3478  
                         u3641 336E                           u3561 31E2                           u3801 2DC4  
                         u5401 1910                           u5321 175C                           u5241 1570  
                         u5161 13A8                           u5081 0E82                           u4441 516E  
                         u6017 523A                           u4361 5032                           u3481 4784  
                         u2921 4BBA                           u4521 3FE6                           u4281 418C  
                         u4257 4112                           u4601 1A72                           u3730 34AC  
                         u3650 3390                           u3570 31F6                           u3810 2DFE  
                         u5330 1792                           u5250 15BE                           u5170 13DE  
                         u5090 0F7C                           u4370 5260                           u5410 5D8E  
                         u3490 47B2                           u2930 4BF4                           u4530 4004  
                         u4450 3DFE                           u4290 41E4                           u4610 1A88  
                         u3731 34A8                           u3651 338C                           u3571 31F2  
                         u3811 2DFA                           u5331 178E                           u5251 15BA  
                         u5171 13DA                           u5091 0F78                           u6027 5134  
                         u4371 525C                           u5411 5D8A                           u3491 47AE  
                         u2931 4BF0                           u4531 4000                           u4451 3DF8  
                         u4275 416A                           u4611 1A84                           u3740 34DA  
                         u3660 33B0                           u3580 3236                           u3900 3086  
                         u3820 2E0E                           u2940 2884                           u5340 17C4  
                         u5260 15F0                           u5180 141C                           u4380 5278  
                         u5500 3CEA                           u4540 4014                           u4460 3E00  
                         u4700 1D18                           u4620 1B02                           u3741 34D6  
                         u3661 33AC                           u3581 3232                           u3901 3082  
                         u3821 2E0A                           u2941 2880                           u5341 17C0  
                         u5261 15EC                           u5181 1418                           u4381 5274  
                         u5501 3CE6                           u4541 4010                           u4701 1D14  
                         u4621 1AFE                           u3670 33C2                           u3590 3276  
                         u3910 30CE                           u3830 2F88                           u3750 2D44  
                         u2950 2896                           u5350 17F6                           u5270 162E  
                         u5190 144E                           u4390 50BC                           u5510 3D40  
                         u4470 3E12                           u4710 1D42                           u4630 1B8E  
                         u4550 1952                           u3671 33BE                           u3591 3272  
                         u3911 30CA                           u3751 2D40                           u2951 2892  
                         u5351 17F2                           u5271 162A                           u5191 144A  
                         u4391 50B8                           u5511 3D3C                           u4471 3E0E  
                         u4295 41DA                           u4711 1D3E                           u4631 1B8A  
                         u4551 194E                           u3680 33F0                           u3920 30FC  
                         u3840 2FE2                           u3760 2D56                           u2960 28A6  
                         u5360 182C                           u5280 1670                           u5520 3D96  
                         u4480 3E4E                           u4800 2128                           u4720 1E8A  
                         u4640 1BC0                           u4560 199C                           u5600 24C8  
                         u3681 33EC                           u3921 30F8                           u3841 2FDE  
                         u3761 2D52                           u2961 28A2                           u5361 1828  
                         u5281 166C                           u5521 3D92                           u4481 3E4A  
                         u4801 2124                           u4721 1E86                           u4641 1BBC  
                         u4561 1998                           u5601 24C4                           u3690 3406  
                         u3930 3136                           u3850 3002                           u3770 2D66  
                         u2970 28E8                           u5370 185E                           u5290 16BA  
                         u5450 3B38                           u4490 3E7A                           u4810 217C  
                         u4730 1EF0                           u4650 1BFE                           u4570 19AC  
                         u5610 2516                           u3691 3402                           u3931 3132  
                         u3851 2FFE                           u3835 2F7E                           u3771 2D62  
                         u2971 28E4                           u5371 185A                           u5291 16B6  
                         u5451 3B34                           u4491 3E76                           u4811 2178  
                         u4731 1EEC                           u4651 1BFA                           u4571 19A8  
                         u5611 2512                           u3940 4E80                           u3860 3014  
                         u3780 2DA6                           u2980 28FE                           u5380 1898  
                         u5460 3B92                           u4820 224E                           u4740 1F38  
                         u4660 1C8A                           u4580 19EA                           u4900 3844  
                         u5700 278C                           u5620 2578                           u3941 4E7C  
                         u3861 3010                           u3781 2DA2                           u2981 28FA  
                         u5381 1894                           u5461 3B8E                           u4821 224A  
                         u4741 1F34                           u4661 1C86                           u4581 19E6  
                         u4901 3840                           u5701 2788                           u5621 2574  
                         u3950 4EBE                           u3870 3042                           u3790 2DB8  
                         u2990 2910                           u5390 18D2                           u5470 3BE8  
                         u4830 226A                           u4750 1F48                           u4670 1CC0  
                         u4590 19FC                           u4910 3894                           u5710 2866  
                         u5630 25BE                           u3951 4EBA                           u3871 303E  
                         u3791 2DB4                           u2991 290C                           u5391 18CE  
                         u5471 3BE4                           u4831 2266                           u4751 1F44  
                         u4671 1CBC                           u4591 19F8                           u4911 3890  
                         u5711 2862                           u5631 25BA                           u3960 4EF2  
                         u3880 3058                           u5480 3C3E                           u4840 22D2  
                         u4760 1FE2                           u4680 1CD8                           u4920 38B4  
                         u5640 2604                           u3961 4EEE                           u3881 3054  
                         u5481 3C3A                           u4841 22CC                           u4761 1FDE  
                         u4681 1CD4                           u4921 38B0                           u5641 2600  
                         u3970 499E                           u3890 306C                           u5490 3C94  
                         u4850 22D4                           u4770 2030                           u4690 1D0A  
                         u4930 39CA                           u5650 264A                           u3971 499A  
                         u3891 3068                           u5491 3C90                           u4771 202C  
                         u4691 1D06                           u4931 39C6                           u5651 2646  
                         u3980 49DC                           u4940 5EC8                           u4860 22E8  
                         u4780 20DE                           u5660 2690                           u5580 23CE  
                         u3981 49D8                           u4941 5EC4                           u4861 22E4  
                         u4781 20DA                           u5661 268C                           u5581 23CA  
                         u3990 49FA                           u4950 4E2C                           u4870 5C1C  
                         u4790 211A                           u5670 26D6                           u5590 2446  
                         u3991 49F6                           u4951 4E28                           u4871 5C14  
                         u4791 2116                           u5671 26D2                           u5807 24EC  
                         u5591 2442                           u4960 4E44                           u5680 271C  
                         u4961 4E40                           u5817 4E06                           u5681 2718  
                         u4970 4270                           u4890 5D5E                           u5690 2762  
                         u4971 426C                           u5907 5536                           u4891 5D5A  
                         u5827 5D3A                           u5691 275E                           u4980 427E  
                         u4981 427A                           u5917 4FF8                           u5837 54B0  
                         u4990 42DA                           u4991 42D6                           u5927 5564  
                         u5847 54DC                           u4888 5C1E                           u5937 5590  
                         u5857 5864                           u5947 56CA                           u5867 5672  
                         u5787 23DA                           u5957 56F4                           u5877 569C  
                         u5797 2482                           u5967 5096                           u5887 4F5A  
                         u5977 55BE                           u5897 550A                           u5987 55EA  
                         u5997 5618                  _LightBlueMove 57FE                           abs@a 0013  
                         _dbuf 0116                           _labs 5368                           _main 2328  
                         _dtoa 3DCE                           _prec 00E7                           _vals 0184  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           btemp 005F  
                         _stop 51FC                  ___fpclassifyf 4A74                           prodh 000FF4  
                         prodl 000FF3                           start 000E                ___fldiv@new_exp 0043  
       __end_of_color_read_Red 5A36                __end_of_HighISR 000E         __end_of_color_read_lum 59E6  
                _Backhalfblock 5546                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 5CB2                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 5654  
              _RunOneBlockTime 00F2                  ___fltol@sign1 0009                __end_of___aodiv 459A  
                        ?_labs 0001                __end_of___fladd 2D2A                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 486A                __end_of___fldiv 34EE  
              __end_of___flneg 5D28                __end_of___flmul 3154                __end_of___flsub 5B6A  
              __end_of___fltol 4970                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 5368                          i2l277 000A                   vfpfcnvrt@fmt 0097  
                        _TMR0H 000FD4                          _TMR0L 000FD3                __end_of_go_Home 3DCE  
      __end_of_sendCharSerial4 5ECE     __end_of_I2C_2_Master_Start 5EF8     __end_of_I2C_2_Master_Write 5EDA  
                 YellowMove@mL 0020                          _flags 00EB                   YellowMove@mR 0022  
                        _fputc 4B72                          _fputs 5BAE                 delayed_ms@time 0001  
                        labs@a 0001                          pad@fp 0011                          _power 00F6  
                        _width 00E5                          _putch 5F02                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                 ?_LightBlueMove 0020  
                        tablat 000FF5               ??_Colour_decider 004F                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                   main@run_flag 01F4  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 57AC  
               ?___fpclassifyf 0001        __end_of_color_read_Blue 5AD6          _I2C_2_Master_RepStart 5EDA  
             __end_of_BlueMove 5434                 ?_Backhalfblock 001A                     PinkMove@mL 0020  
                   PinkMove@mR 0022                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 5AD6                _reverseOneBlock 55A0                   __end_of_labs 53CE  
                 __end_of_main 286A                   __end_of_dtoa 404C                   __end_of_stop 527A  
              _colour_rel$2947 0064                _colour_rel$2948 0068                         ??_labs 0005  
                       ??_main 00CF                         ??_dtoa 0026          __end_of_ReverseYellow 4CF2  
             __end_of_PinkMove 5946                         ??_stop 0018                  __activetblptr 000003  
            Colour_decider@Hue 007C              Colour_decider@rel 004D                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         ?_fputs 000A                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         _RG6PPS 000E88  
                    ??_HighISR 0001       __end_of_color_click_init 58A2                         _RX4PPS 000E15  
                       _TX4REG 000EE4                     _OrangeMove 57AC               __end_of___xxtofl 4412  
                    ??_RedMove 0024                  ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 00AE                  ??_ReversePink 0024                         ___flge 4970  
                       ___fleq 4E52                      ??___aodiv 0011                      ??___fladd 0009  
                    ??___aomod 0011                         ___wmul 5E32              ForwardOneBlock@mL 001A  
            ForwardOneBlock@mR 001C                      ??___fldiv 003A                      ??___flneg 0005  
                    ??___flmul 0019                      ??___flsub 0032                      ??___fltol 0005  
                       _efgtoa 192E                      ??___lwdiv 000B                         _floorf 404C  
                       _memcpy 5946                         clear_0 5AFC                         clear_1 5B08  
                       clear_2 5B14                         _motorL 017B                         _motorR 0172  
                       isa$std 000001                      ??_go_Home 0028                         pad@buf 0013  
                       dtoa@fp 001C                         _strcpy 5B6A                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
              ___fpclassifyf@e 0009                ___fpclassifyf@u 000B                ___fpclassifyf@x 0001  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A  
           Forwardhalfblock@mR 001C                         putch@c 0001                ??_LightBlueMove 0024  
             __end_of_vfprintf 575A                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 005F               __end_of_turnLeft 50D6  
                   ___flge@ff1 002A                     _YellowMove 58A2                     ___flge@ff2 002E  
              ??___fpclassifyf 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0032                     ___fleq@ff2 0036  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 5B1A        __end_of_reverseOneBlock 55FA                     ___flneg@f1 0001  
     __end_of_color_read_Green 5A86         ?_I2C_2_Master_RepStart 0001                ??_Backhalfblock 001E  
                ___rparam_used 000001                     ___fltol@f1 0001               ?_color_read_Blue 0005  
              _Interrupts_init 5F04                 __pcstackCOMRAM 0001                  _fullSpeedBack 50D6  
                 __pidataBANK0 5EF8                  __end_of_fputc 4C3C                  __end_of_fputs 5BF2  
                __end_of_putch 5F04              __end_of_GreenMove 5CF0            __end_of_Timer0_init 5E98  
          __end_of_ReversePink 4DA8                      ?_BlueMove 0020                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14352 00D1          __end_of_reverseDetect 5654  
                      ??_putch 0001                     __pbssBANK0 00D1                     __pbssBANK1 0100  
                   __pbssBANK2 0200                reverseDetect@mL 001A                reverseDetect@mR 001C  
                  ?_OrangeMove 0020               _Forwardhalfblock 54EC                     _getTMR0val 5E0C  
            __end_of_RetryMove 5DE4                      ?_PinkMove 0020              _color_writetoaddr 5E58  
                   _delayed_ms 5D28                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 002A                        ?___fleq 0032             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                        ?_efgtoa 0060  
                      ?_floorf 004B                   ?_turnRight45 001A                        ?_memcpy 0001  
        __end_of_timed_forward 4E52            ??_color_writetoaddr 0004                        ?_strcpy 0001  
                colour_rel@rel 004D                 go_Home@WayBack 0024                      ?___xxtofl 0001  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5              ??_ForwardOneBlock 001E  
                   ??_BlueMove 0024                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                  ?_YellowMove 0020                     _colour_rel 34EE        __end_of_Interrupts_init 5F06  
       color_writetoaddr@value 0003               ??_color_read_Red 0007               main@consecuitive 01F6  
                      _HighISR 0008               ??_color_read_lum 0007               ?_reverseOneBlock 001A  
    __end_of_color_writetoaddr 5E78                        _RedMove 5C74             _I2C_2_Master_Start 5EEE  
                   ??_PinkMove 0024                     _initUSART4 5E98             _I2C_2_Master_Write 5ECE  
                      __Hparam 0000                        _WayBack 02A0                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 5E78                    RetryMove@mL 0020  
                  RetryMove@mR 0022        sendStringSerial4@string 0002              reverseOneBlock@mL 001A  
            reverseOneBlock@mR 001C                    _ReversePink 4CF2                        ___aodiv 4412  
                      ___fladd 286A                        ___aomod 4706                        ___fldiv 3154  
                      ___flneg 5CF0                        ___flmul 2D2A                        ___flsub 5B24  
                      ___fltol 486A            ?_I2C_2_Master_Start 0001                        ___lwdiv 52F4  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8                   __psmallconst 0E00  
                 turnLeft45@mL 001A                   turnLeft45@mR 001C                        __pcinit 5AD6  
                      __ramtop 0E00                      ?_turnLeft 0014                        _go_Home 3B22  
                      __ptext0 2328                        __ptext1 575A                        __ptext2 5704  
                      __ptext3 381C                        __ptext4 192E                        __ptext5 5B6A  
                      __ptext6 5946                        __ptext7 5368                        __ptext8 404C  
                      __ptext9 4A74                      _T2CONbits 000FBD                     ??___xxtofl 0005  
                    _T2HLTbits 000FBE                        efgtoa@c 0066                        efgtoa@d 0074  
                      efgtoa@e 0078                        efgtoa@f 0062                        efgtoa@g 008D  
                      efgtoa@h 0082                        efgtoa@i 0080                        efgtoa@l 0086  
                      efgtoa@m 0076                        efgtoa@n 008B                        efgtoa@p 006B  
                      efgtoa@t 006D                        efgtoa@u 0091                        efgtoa@w 007A  
                _RxBufWriteCnt 00EF              color_read_lum@tmp 000A                        main@buf 018C  
                      _sprintf 575A           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 5B1A                        floorf@e 0059                        floorf@m 0055  
                      floorf@u 005B                        floorf@x 004B                        memcpy@d 0007  
                      memcpy@n 0005                        memcpy@s 0009                        fputc@fp 0003  
                      fputs@fp 000C              ?_color_click_init 0001                    ?_getTMR0val 0001  
              LightBlueMove@mL 0020                LightBlueMove@mR 0022                ??_fullSpeedBack 0018  
           ??_color_click_init 0005                     _move_count 0114                    ?_delayed_ms 0001  
            __end_of_vfpfcnvrt 3B22                     efgtoa@mode 0072                     efgtoa@sign 008A  
                      postdec1 000FE5                        postdec2 000FDD                    _Turn45Delay 00F4  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 009D                     ??_vfprintf 005F                        strcpy@d 0007  
                      strcpy@s 0005                _initDCmotorsPWM 5174                     ??_turnLeft 0018  
                    _PORTFbits 000F8E             setMotorPWM@negDuty 0013              __end_of_turnRight 4F9A  
                  ___fladd@grs 0010                  ___xxtofl@sign 0009                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                  ___fldiv@grs 0045                    ___fldiv@rem 003E               fullSpeedAhead@mL 0014  
             fullSpeedAhead@mR 0016                  ReversePink@mL 0020                  ReversePink@mR 0022  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B  
             ?_Interrupts_init 0001                    ___flmul@grs 001E                    _CCP1CONbits 000FAB  
                   main@colour 01F8                   _EUSART4RXbuf 0100                   _EUSART4TXbuf 0200  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001  
                    RedMove@mL 0020                      RedMove@mR 0022             ??_color_read_Green 0007  
                   _turnLeft45 56AC                 __end_of___flge 4A74                 __end_of___fleq 4EFC  
               _fullSpeedAhead 4F9A                    vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6  
                  vfpfcnvrt@fp 0095                 __end_of___wmul 5E58                 __end_of_efgtoa 2328  
               __end_of_floorf 425E                 __end_of_memcpy 5996                     floorf@F526 00DD  
     __end_of_Forwardhalfblock 5546                      _GreenMove 5CB2                 __end_of_strcpy 5BAE  
          start_initialization 5AD6                    __end_of_abs 5C74                    __end_of_pad 52F4  
                _TxBufWriteCnt 00ED          __end_of_LightBlueMove 5850                   ??_OrangeMove 0024  
        __end_of___fpclassifyf 4B72            color_read_Green@tmp 000A          __end_of_Backhalfblock 55A0  
      __end_of_initDCmotorsPWM 51FC                    vfprintf@fmt 00AA         __end_of_fullSpeedAhead 5038  
                     ??___flge 0032                       ??___fleq 003A                      _RetryMove 5DBA  
                     ??___wmul 0005            go_Home@Time_forward 0026                  ??_readColours 000E  
                     ??_efgtoa 0067                    __pdataBANK0 00F0                _ForwardOneBlock 5492  
                     ??_floorf 004F                       ??_memcpy 0007                Backhalfblock@mL 001A  
              Backhalfblock@mR 001C                       ??_strcpy 0005                      ___fladd@a 0005  
                    ___fladd@b 0001                  _ReverseYellow 4C3C                      ___fldiv@a 0036  
                    ___fldiv@b 0032                     ?_GreenMove 0020                   OrangeMove@mL 0020  
                 OrangeMove@mR 0022             __end_of_OrangeMove 57FE                      ___flmul@a 0015  
                    ___flmul@b 0011                      ___flsub@a 002E                      ___flsub@b 002A  
                __pcstackBANK0 0060                  __pcstackBANK1 018C               ___aodiv@dividend 0001  
                 ??_YellowMove 0024                       ?_HighISR 0001          Colour_decider@RGB_col 0066  
                     ?_RedMove 0020                    _efgtoa$2577 006F               ___lwdiv@dividend 0007  
                    _dtoa$2546 002E                   ?_Timer0_init 0001                    ?_turnLeft45 001A  
              ?_fullSpeedAhead 0014                      __pintcode 0008                   ?_ReversePink 0020  
                   ?_RetryMove 0020                timed_forward@mL 0014                       ?___aodiv 0001  
              timed_forward@mR 0016                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0032               ___aodiv@quotient 0013                       ?___flneg 0001  
                     ?___flmul 0011                       ?___flsub 002A                       ?___fltol 0001  
          _Colour_decider$2949 0060                       ?___lwdiv 0007                main@colour_1191 01F2  
                     ?_go_Home 0024           I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020  
           __end_of_YellowMove 58F4           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            timed_forward@time 0018            __end_of_readColours 5492              _I2C_2_Master_Idle 5DE4  
            _I2C_2_Master_Init 5D90              _I2C_2_Master_Read 5BF2              _I2C_2_Master_Stop 5EE4  
                _low_threshold 00E9                   _RxBufReadCnt 00EE             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 00B0               getTMR0val@moving 0001                 colour_rel@vals 004B  
            _sendStringSerial4 5D60            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C                       _LATFbits 000F7E  
                     _LATGbits 000F7F                   ??_getTMR0val 0001             ?_sendStringSerial4 0002  
                     _PIE4bits 000E2D        __end_of_ForwardOneBlock 54EC                   ??_delayed_ms 0003  
                  turnRight@mL 0014                    turnRight@mR 0016                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
               _Colour_decider 0E52            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 381C      __end_of_I2C_2_Master_Idle 5E0C      __end_of_I2C_2_Master_Init 5DBA  
    __end_of_I2C_2_Master_Read 5C34              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 5EEE  
                 setMotorPWM@m 000E                       _DataFlag 00F8    I2C_2_Master_Write@data_byte 0002  
                  ??_GreenMove 0024              ??_color_read_Blue 0007             __end_of_getTMR0val 5E32  
                 _TxBufReadCnt 00EC                       _BlueMove 53CE                      _turnRight 4EFC  
           __end_of_delayed_ms 5D60                     vfpfcnvrt@c 00A5                      copy_data0 5AEA  
    __end_of_sendStringSerial4 5D90                   ??_colour_rel 004F                  _reverseDetect 55FA  
__end_of_I2C_2_Master_RepStart 5EE4             color_read_Blue@tmp 000A            __end_of_setMotorPWM 4706  
                 ??_initUSART4 0001                       _PinkMove 58F4                       __Hrparam 0000  
       __end_of_Colour_decider 192E                      memcpy@tmp 000B                     vfprintf@ap 00AC  
                     __Lrparam 0000                     vfprintf@fp 00A8          __end_of_fullSpeedBack 5174  
                  ??_RetryMove 0024                    _readColours 5434                ??_ReverseYellow 0024  
                   ?_vfpfcnvrt 0095                ___aodiv@divisor 0009                ___aodiv@counter 0011  
           __end_of_colour_rel 381C                     _ANSELDbits 000EA7             ___fpclassifyf@F465 00E1  
                   _ANSELFbits 000EB4                  _timed_forward 4DA8                     sprintf@fmt 00B2  
            ?_Forwardhalfblock 001A                       ___xxtofl 425E                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                   _Time_forward 023C                ___lwdiv@divisor 0009  
           __end_of_initUSART4 5EB6                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 486A                       __ptext11 5CF0  
                     __ptext20 5D60                       __ptext12 3DCE                       __ptext21 5EB6  
                     __ptext13 527A                       __ptext30 5174                       __ptext22 5434  
                     __ptext14 5BAE                       __ptext31 3B22                       __ptext23 5996  
                     __ptext15 4B72                       __ptext40 5CB2                       __ptext32 4DA8  
                     __ptext24 59E6                       __ptext16 5F02                       __ptext41 53CE  
                     __ptext33 5D28                       __ptext25 5A36                       __ptext17 5C34  
                     __ptext50 5D90                       __ptext42 5E0C                       __ptext34 4C3C  
                     __ptext26 5A86                       __ptext18 4706                       __ptext51 58A2  
                     __ptext43 34EE                       __ptext35 4CF2                       __ptext27 5EDA  
                     __ptext19 4412                       __ptext60 56AC                       __ptext52 5654  
                     __ptext44 5850                       __ptext36 5492                       __ptext28 5BF2  
                     __ptext61 5038                       __ptext53 4EFC                       __ptext45 5E58  
                     __ptext37 5C74                       __ptext29 5E98                       __ptext70 0E52  
                     __ptext62 55A0                       __ptext54 5E78                       __ptext46 5ECE  
                     __ptext38 57AC                       __ptext71 425E                       __ptext63 55FA  
                     __ptext55 5DBA                       __ptext47 5EE4                       __ptext39 57FE  
                     __ptext72 5B24                       __ptext64 51FC                       __ptext56 54EC  
                     __ptext48 5EEE                       __ptext73 286A                       __ptext65 50D6  
                     __ptext57 4F9A                       __ptext49 5DE4                       __ptext74 2D2A  
                     __ptext66 459A                       __ptext58 5546                       __ptext75 4970  
                     __ptext67 5E32                       __ptext59 58F4                       __ptext76 4E52  
                     __ptext68 52F4                       __ptext77 3154                       __ptext69 5F04  
               ?_reverseDetect 001A                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   strcpy@dest 0001                     turnLeft@mL 0014                     turnLeft@mR 0016  
             ?_ForwardOneBlock 001A                       go_Home@i 002B                ?_Colour_decider 004B  
                     efgtoa@fp 0060                       efgtoa@ne 0069                       efgtoa@pp 0071  
                     efgtoa@ou 007C                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005F                       _vfprintf 5704                  ??_turnRight45 001E  
                     main@temp 01F0                       _turnLeft 5038               ___aomod@dividend 0001  
               ?_timed_forward 0014                    delayed_ms@i 0004              ??_reverseOneBlock 001E  
              main@prev_colour 01FA                       memcpy@d1 0001                       memcpy@s1 0003  
                  _setMotorPWM 459A                  turnRight45@mL 001A                  turnRight45@mR 001C  
                     intlevel2 0000                      sprintf@ap 00C2                 _high_threshold 00F0  
             ??_fullSpeedAhead 0018                      strcpy@src 0003                   ??_turnLeft45 001E  
                   BlueMove@mL 0020                     BlueMove@mR 0022                    efgtoa@nmode 0073  
              ___aomod@divisor 0009                    ??_vfpfcnvrt 009B                ___aomod@counter 0011  
             _color_click_init 5850                       sprintf@f 00C4                       sprintf@s 00B0  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C            __end_of_turnRight45 56AC  
              ??_reverseDetect 001E                    ??_turnRight 0018                  ___fladd@signs 000D  
           __end_of_turnLeft45 5704                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
              _sendCharSerial4 5EB6                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ___aomod@sign 0012  
